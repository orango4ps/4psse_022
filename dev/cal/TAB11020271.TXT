OBJECT Table 11020271 Reference Point
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LicenceCu.CheckLicenceDeadline;
               ExchangeFSA('I');
             END;

    OnModify=BEGIN
               LicenceCu.CheckLicenceDeadline;
               ExchangeFSA('M');
             END;

    OnDelete=BEGIN
               ExchangeFSA('D');
             END;

    OnRename=BEGIN
               ExchangeFSA('R');
             END;

    CaptionML=[ENU=Reference Point;
               NOR=Referansepunkt;
               SVE=Referenspunkt];
    LookupPageID=Page11020321;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Integer       ;CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr];
                                                   NotBlank=Yes }
    { 10  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 20  ;   ;Triggered by Status ServOrder;Option;
                                                   CaptionML=[ENU=Triggered by Status Service Order;
                                                              NOR=Utlõst av status for Serviceordre;
                                                              SVE=Utlîst genom status fîr serviceorder];
                                                   OptionCaptionML=[ENU=" ,Open,,In Process,Technical Finished,Administrative Finished,Finished,Cancelled";
                                                                    NOR=" ,èpne,,Under behandling,Teknisk Ferdig,Administrativt Ferdig,Ferdig,Avbrutt";
                                                                    SVE=" ,ôppna,,Under behandling,Tekniskt fÑrdig,Administrativt fÑrdig,FÑrdig,Avbrutet"];
                                                   OptionString=[ ,Open,,In Process,Technical Finished,Administrative Finished,Finished,Cancelled] }
    { 25  ;   ;Triggered by Field Service;Text30  ;TableRelation="Field Service Code".Code WHERE (Type=CONST(Status));
                                                   OnValidate=BEGIN
                                                                "N/A for Actual Reference Point" := FALSE;
                                                                IF ("Triggered by Field Service" <> '') THEN BEGIN
                                                                  TESTFIELD(Apply, Apply::ServOrder);
                                                                  IF "Triggered by Field Service" = '100' THEN
                                                                    "N/A for Actual Reference Point" := TRUE;
                                                                END ELSE BEGIN
                                                                  IF "Choice in Subcont.Port" THEN
                                                                    ERROR(Text003, FIELDCAPTION("Triggered by Field Service"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Triggered by Field Service;
                                                              NOR=Utlõst av Feltservice;
                                                              SVE=Utlîst genom fÑltservice] }
    { 30  ;   ;Triggered by Status Purch OLD;Option;
                                                   CaptionML=[ENU=Triggered by Status Purchase Order OLD;
                                                              NOR=Utlõst av status for Innkjõpsordre;
                                                              SVE=Utlîst genom status fîr inkîpsorder];
                                                   OptionCaptionML=[ENU=" ,Open,Released,Closed";
                                                                    NOR=" ,èpne,Frigitt,Lukket";
                                                                    SVE=" ,ôppna,SlÑppt,StÑngt"];
                                                   OptionString=[ ,Open,Released,Closed] }
    { 35  ;   ;Triggered by Status PurchQ OLD;Option;
                                                   CaptionML=[ENU=Triggered by Status Purchase Quote OLD;
                                                              NOR=Utlõst av status for Innkjõpstilbud;
                                                              SVE=Utlîst genom status fîr inkîpsoffert];
                                                   OptionCaptionML=[ENU=" ,Application,Send,Received,Thanks,Selected";
                                                                    NOR=" ,Program,Sende,Mottatt,Takk,Valgt";
                                                                    SVE=" ,Program,Skicka,Mottaget,Tack,Valt"];
                                                   OptionString=[ ,Application,Send,Received,Thanks,Selected] }
    { 50  ;   ;Apply               ;Option        ;OnValidate=BEGIN
                                                                IF ("Triggered by Field Service" <> '') AND (Apply <> Apply::ServOrder ) THEN
                                                                  "Triggered by Field Service" := '';
                                                              END;

                                                   CaptionML=[ENU=Apply;
                                                              NOR=Koble;
                                                              SVE=VerkstÑll];
                                                   OptionCaptionML=[ENU=" ,,Service Call,Service Order,Service Object";
                                                                    NOR=" ,,Servicesamtale,Serviceordre,Innkjõpstilbud,Innkjõpsordre";
                                                                    SVE=AllmÑn,,Servicesamtal,Serviceorder,Serviceobjekt];
                                                   OptionString=Common,,ServCall,ServOrder,ServObject }
    { 60  ;   ;Triggered by Status ServCall;Option;CaptionML=[ENU=Triggered by Status Service Call;
                                                              NOR=Utlõst av status for Servicesamtale;
                                                              SVE=Utlîst genom status fîr servicesamtal];
                                                   OptionCaptionML=[ENU=" ,Received,In Process,Finished,Cancelled";
                                                                    NOR=" ,Mottatt,Under behandling,Avsluttet,Avbrutt";
                                                                    SVE=" ,Mottaget,Under behandling,Avslutat,Avbrutet"];
                                                   OptionString=[ ,Received,In Process,Finished,Cancelled] }
    { 70  ;   ;Colour              ;Integer       ;CaptionML=[ENU=Colour;
                                                              NOR=Farge;
                                                              SVE=FÑrg] }
    { 71  ;   ;Eventtype in Resource Planning;Code10;
                                                   TableRelation="Event Type".Code;
                                                   CaptionML=ENU=Event Type in Resource Planning }
    { 80  ;   ;Block Modify Service Order;Boolean ;OnValidate=BEGIN
                                                                IF "Block Modify Service Order" THEN BEGIN
                                                                  TESTFIELD(Apply, Apply::ServOrder);
                                                                  ProjSetupRec.GET;
                                                                  IF (NOT ProjSetupRec."Field Service Active") AND (NOT ProjSetupRec.IsFSAActive) THEN
                                                                    ERROR(Text001);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Block Plan Data for Order in Field Service;
                                                              NOR=Blokker Planleggingsdata for Ordre i Feltservice];
                                                   Description=SO can only set back to modify extern (from FSA) (on other actual reference point) }
    { 90  ;   ;Skip Export to FSA  ;Boolean       ;OnValidate=BEGIN
                                                                IF "Skip Export to FSA" THEN BEGIN
                                                                  TESTFIELD(Apply, Apply::ServOrder);
                                                                  ProjSetupRec.GET;
                                                                  IF (NOT ProjSetupRec."Field Service Active") AND (NOT ProjSetupRec.IsFSAActive) THEN
                                                                    ERROR(Text001);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Skip Export to Field Service;
                                                              NOR=Hopp over Eksporter til Feltservice;
                                                              SVE=Hoppa îver exportera till fÑltservice] }
    { 100 ;   ;Send Status Update Mail;Boolean    ;CaptionML=[ENU=Send mail at status update;
                                                              NOR=Send e-post ved statusoppdatering;
                                                              SVE=Skicka e-post vid statusuppdatering] }
    { 105 ;   ;Send Mail Work Sheet;Boolean       ;CaptionML=[ENU=Send Mail Work Sheet;
                                                              NOR=Send e-post regneark;
                                                              SVE=Skicka e-postkalkylblad] }
    { 110 ;   ;Publish on Service Portal;Boolean  ;CaptionML=[ENU=Publish Service Orders;
                                                              NOR=Publiser pÜ Serviceportal;
                                                              SVE=Publicera pÜ serviceportalen] }
    { 120 ;   ;Choice in Subcont.Port;Boolean     ;OnValidate=BEGIN
                                                                IF "Choice in Subcont.Port" THEN
                                                                  TESTFIELD("Triggered by Field Service");
                                                              END;

                                                   CaptionML=[ENU=Choice in Portal;
                                                              NOR=Valg i underentrepenõrportal;
                                                              SVE=Val i underentreprenadsportal] }
    { 130 ;   ;Send Mail to Subcontractor;Boolean ;CaptionML=[ENU=Send Mail to Subcontractor;
                                                              NOR=Send mail til underentrepenõr] }
    { 140 ;   ;Update WO Starting Time;Boolean    ;OnValidate=BEGIN
                                                                IF "Update WO Starting Time" THEN BEGIN
                                                                  IF NOT (Apply IN [Apply::Common, Apply::ServOrder]) THEN
                                                                    FIELDERROR("Update WO Starting Time", STRSUBSTNO(Text002, Apply::Common, Apply::ServOrder));
                                                                  TESTFIELD("Update WO Ending Time", FALSE);
                                                                  TESTFIELD("Triggered by Field Service");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Update Work Order Starting Time }
    { 145 ;   ;Update WO Ending Time;Boolean      ;OnValidate=BEGIN
                                                                IF "Update WO Ending Time" THEN BEGIN
                                                                  IF NOT (Apply IN [Apply::Common, Apply::ServOrder]) THEN
                                                                    FIELDERROR("Update WO Starting Time", STRSUBSTNO(Text002, Apply::Common, Apply::ServOrder));
                                                                  TESTFIELD("Update WO Starting Time", FALSE);
                                                                  TESTFIELD("Triggered by Field Service");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Update Work Order Ending Time }
    { 150 ;   ;Publish on Subcont.Port.;Boolean   ;CaptionML=[ENU=Publish Work Orders;
                                                              NOR=Publiser pÜ underentrepenõrportal;
                                                              SVE=Visa pÜ UE portal] }
    { 160 ;   ;N/A for Actual Reference Point;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "N/A for Actual Reference Point" THEN
                                                                  TESTFIELD("Triggered by Field Service", '100');
                                                              END;

                                                   CaptionML=ENU=N/A for Actual Reference Point }
    { 200 ;   ;Show in Warehouse App;Boolean      ;OnValidate=BEGIN
                                                                TESTFIELD(Apply, Apply::ServOrder);
                                                              END;

                                                   CaptionML=ENU=Show in Warehouse App }
    { 210 ;   ;For Multiple Work Orders;Option    ;OnValidate=BEGIN
                                                                IF "For Multiple Work Orders" > 0 THEN
                                                                  TESTFIELD("Triggered by Field Service");
                                                              END;

                                                   CaptionML=ENU=For Multiple Work Orders;
                                                   OptionCaptionML=ENU=" ,First Work Order,All Work Orders";
                                                   OptionString=[ ,First Work Order,All Work Orders];
                                                   BlankZero=Yes }
    { 220 ;   ;Clear Unnecessary Ref. Points;Boolean;
                                                   CaptionML=ENU=Clear Unnecessary Reference Points }
    { 11012990;;Export to FSA      ;Boolean       ;CaptionML=[ENU=Export to Field Service;
                                                              NOR=Eksporter til Feltservice;
                                                              SVE=Exportera till fÑltservice];
                                                   Description=Indication new/changed.(Field Service Admin.) }
    { 11012991;;Date/Time Export to FSA;DateTime  ;CaptionML=[ENU=Date/Time Export to Field Service;
                                                              NOR=Dato/tid, Eksporter til Feltservice;
                                                              SVE=Datum/tid, export till fÑltservice] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProjSetupRec@1100485000 : Record 315;
      Text001@1100485001 : TextConst 'ENU=Interface with Field Service and/or Subcontractor Portal is not active.;SVE=GrÑnssnitt med fÑltservice Ñr inte aktivt.';
      LicenceCu@1100485002 : Codeunit 11012137;
      Text002@1100528600 : TextConst 'ENU=Can only be applied to %1 or %2.';
      Text003@1100528601 : TextConst 'ENU=Interface with Subcontractor Portal is active, %1 needs a value';

    PROCEDURE ExchangeFSA@1100485000(IMode@1100485003 : Code[1]);
    VAR
      lvProjSetupRec@1100485001 : Record 315;
      lvFieldVisionExchangeMgtCU@1100485000 : Codeunit 11012091;
    BEGIN
      //**4PS.n
      IF IMode = 'I' THEN BEGIN
        "Export to FSA" := FALSE;
        "Date/Time Export to FSA" := 0DT;
      END;
      lvProjSetupRec.GET;
      IF lvProjSetupRec."Field Service Active" THEN BEGIN
        IF IMode <> 'D' THEN BEGIN
          "Export to FSA" := TRUE;
          IF IMode = 'R' THEN
            lvFieldVisionExchangeMgtCU.StoreDeletedReferencePoint(xRec);
        END ELSE BEGIN
          lvFieldVisionExchangeMgtCU.StoreDeletedReferencePoint(Rec);
        END;
      END;
    END;

    PROCEDURE IsOrderFinished@1100409000() : Boolean;
    BEGIN
      IF Apply <> Apply::ServOrder THEN
        EXIT;
      EXIT("Triggered by Field Service" = '100');
    END;

    BEGIN
    END.
  }
}

