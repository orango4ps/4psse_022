OBJECT XMLport 11012129 Imp. Try-Out Quote
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Imp. Try-Out Quote;
               SVE=Imp. anbudsf”rfr†gan];
    DefaultFieldsValidation=No;
    PreserveWhiteSpace=Yes;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    XmlPortID := 11012129;
                    MainTableID := 11012758;
                    MainTableLookupPageID := 11012765;
                    XMLPortRequestPageID := 11230039;
                  END;

    OnPreXMLport=VAR
                   ConversionXMLPort4PS@1100527700 : Record 11020640;
                 BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     ConversionXMLPort4PS.UpdateFromXMLPort(XmlPortID,MainTableID,MainTableLookupPageID,XMLPortRequestPageID,FALSE,0);
                     COMMIT;
                     ERROR('');
                   END;

                   ConvMgt.DeleteConComment(XmlPortID);
                   ConvMgt.CreateConComment(XmlPortID,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XmlPortID,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XmlPortID,'Stop');
                    ConvMgt.CreateConComment(XmlPortID,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{7B539476-C20A-46BC-A552-62FED55766AD}];  ;Root                ;Element ;Text     }

    { [{A667E51D-CE85-4A0D-946E-DE2CCC52ED51}];1 ;Try-outQuote        ;Element ;Table   ;
                                                  SourceTable=Table11012758;
                                                  SourceTableView=SORTING(Field10);
                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 StripData;
                                                                                 IF A = '' THEN
                                                                                   currXMLport.SKIP;

                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Try-out Quote");

                                                                                 WITH "Try-out Quote" DO BEGIN
                                                                                   IF NOT CreateNewNosBln THEN
                                                                                     Code := A
                                                                                   ELSE
                                                                                     Code := '';

                                                                                   TryOutCde := ConvMgt.DetermineNewCode(LookupTryOutNoBln,CommentRec."Table Name"::"Try-out",TryOutCommentCde,B);

                                                                                   INSERT(TRUE);
                                                                                   IF CreateNewNosBln THEN
                                                                                     ConvMgt.FillComment(CommentRec."Table Name"::"Try-out Quote",Code,CommentCde,A);

                                                                                   IF B <> '' THEN
                                                                                     IF (TryOutCde <> '') AND ConvMgt.IsTryOutPresent(TryOutCde) THEN
                                                                                       VALIDATE("Try-out No.",TryOutCde)
                                                                                     ELSE
                                                                                       ConvMgt.CreateConComment(XmlPortID,ConvMgt.CreateFieldNotFilledCommentTxt(
                                                                                         11012750,
                                                                                         B,
                                                                                         FIELDCAPTION("Try-out No."),
                                                                                         MainTableID,
                                                                                         Code));

                                                                                   IF S <> '' THEN BEGIN
                                                                                     ContCde := ConvMgt.DetermineNewMRKCode(LookupCompContactNoBln,MRKCommentRec."Table Name"::Contact,CompContactCommentCde,S);
                                                                                     IF (ContCde <> '') AND ConvMgt.IsContactPresent(ContCde) THEN
                                                                                       VALIDATE("Contact No.",ContCde)
                                                                                     ELSE
                                                                                       ConvMgt.CreateConComment(XmlPortID,ConvMgt.CreateFieldNotFilledCommentTxt(
                                                                                         5050,
                                                                                         S,
                                                                                         FIELDCAPTION("Contact No."),
                                                                                         MainTableID,
                                                                                         Code));
                                                                                   END;

                                                                                   VALIDATE(Description,C);
                                                                                   VALIDATE("Description 2",L);

                                                                                   Address := D;
                                                                                   "Address 2" := E;
                                                                                   "Post Code" := F;
                                                                                   City := ConvMgt.PostCodePresent(F);
                                                                                   IF City = '' THEN
                                                                                     City := G;
                                                                                   VALIDATE("Territory Code",H);

                                                                                   IF I <> '' THEN
                                                                                     IF ConvMgt.IsSalesPurchasePersonPresent(I) THEN
                                                                                       VALIDATE("Salesperson Code",I)
                                                                                     ELSE
                                                                                       ConvMgt.CreateConComment(XmlPortID,ConvMgt.CreateFieldNotFilledCommentTxt(
                                                                                         13,
                                                                                         I,
                                                                                         FIELDCAPTION("Salesperson Code"),
                                                                                         MainTableID,
                                                                                         Code));

                                                                                   VALIDATE("Expected Starting Date",JDate);
                                                                                   VALIDATE("Expected End Date",KDate);
                                                                                   VALIDATE("Order Date",MDate);

                                                                                   VALIDATE(Status,N);
                                                                                   IF O <> '' THEN
                                                                                     VALIDATE("Global Dimension 1 Code",O);

                                                                                   VALIDATE("Offered Amount (LCY)",PDec);
                                                                                   VALIDATE("Apply Date",QDate);
                                                                                   VALIDATE("Scoring Percentage",RDec);
                                                                                   VALIDATE("Assign Date",TDate);
                                                                                   VALIDATE("Register Date",UDate);
                                                                                   VALIDATE("Tender Date",VDate);
                                                                                   VALIDATE(Discipline,W);
                                                                                   VALIDATE("Your reference",X);

                                                                                   MODIFY(TRUE);
                                                                                 END;

                                                                                 ClearFields;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{3AC77EC7-9326-4B76-BA5F-EA1F70D4DA67}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=20 }

    { [{1B889F9B-B9E2-4749-96B0-D22BA1117049}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{D76B46B3-243B-4FF7-8D1D-C7B64CCFA492}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{11AAC24C-6612-4FE6-9973-FE5EF2EF2C43}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{F0633544-507F-4C5E-A35B-A0DD95F11E63}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{98E7308F-19D5-4AF6-89FB-48DB78E52124}];2 ;F                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{23B2F6EB-78F9-48FB-BC70-858F6A53A74C}];2 ;G                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{007CC416-7129-43EA-90B0-193FFE5FCA68}];2 ;H                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{8F9BF873-E7E2-450A-B9C5-33703DAFE6BE}];2 ;I                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{F0890EEC-4257-4AFD-B88A-7442730D3214}];2 ;J                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF J <> '' THEN
                                                                                    EVALUATE(JDate,J);
                                                                                END;

                                                  Width=50 }

    { [{659442CF-3753-4298-9149-BE36CD412787}];2 ;K                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF K <> '' THEN
                                                                                    EVALUATE(KDate,K);
                                                                                END;

                                                  Width=50 }

    { [{575C2CA6-4C40-4A7F-A50C-2A6AD26B4DC0}];2 ;L                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{C820A9D4-97D5-4DE5-B9B8-37016A0E8AD8}];2 ;M                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF M <> '' THEN
                                                                                   EVALUATE(MDate,M);
                                                                               END;

                                                  Width=50 }

    { [{71D99CDA-4BD2-4C4F-864A-4C58FF70202A}];2 ;N                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{2B61BAAC-2E0C-4942-8622-A3E310053AB1}];2 ;O                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{3777C5E2-F12B-426C-AF23-B2EB58C9D28C}];2 ;P                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF P <> '' THEN
                                                                                    EVALUATE(PDec,P);
                                                                                END;

                                                  Width=50 }

    { [{C31814CC-4F91-40D0-8202-7EA73300B7CA}];2 ;Q                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF Q <> '' THEN
                                                                                    EVALUATE(QDate,Q);
                                                                                END;

                                                  Width=50 }

    { [{54BB1E52-B53E-46D1-AC10-187FE5FC9413}];2 ;R                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF R <> '' THEN
                                                                                    EVALUATE(RDec,R);
                                                                                END;

                                                  Width=50 }

    { [{559F7890-98B5-44AC-B8D0-4225985414EE}];2 ;S                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{52F80224-8385-4275-9252-089504C757C6}];2 ;T                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF T <> '' THEN
                                                                                    EVALUATE(TDate,T);
                                                                                END;

                                                  Width=50 }

    { [{7D5AB79B-1354-42F5-B0BF-EA78828242A4}];2 ;U                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF U <> '' THEN
                                                                                    EVALUATE(UDate,U);
                                                                                END;

                                                  Width=50 }

    { [{3A8572F2-F29E-4E8B-8D81-33FF6EC48E73}];2 ;V                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  IF V <> '' THEN
                                                                                    EVALUATE(VDate,V);
                                                                                END;

                                                  Width=50 }

    { [{96433DC6-587A-4B40-B669-D8B5D9DA5DD2}];2 ;W                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

    { [{6ECE75FC-21B3-43EC-BC39-188C11254530}];2 ;X                   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=50 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                   CreateNewNosBln := TRUE;
                   LookupTryOutNoBln := TRUE;
                   LookupCompContactNoBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409000;;Container;
                  Name=Imp. Try-Out Quote;
                  ContainerType=ContentArea }

      { 1100409001;1;Group  ;
                  CaptionML=[ENU=Options;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525000;2;Field  ;
                  CaptionML=[ENU=Create New Try-Out Nos;
                             SVE=Skapa nya anbudsnr];
                  SourceExpr=CreateNewNosBln;
                  OnValidate=BEGIN
                               IF NOT CreateNewNosBln THEN
                                 CommentCde := '';
                             END;
                              }

      { 1100525001;2;Field  ;
                  Name=ComCde;
                  CaptionML=[ENU=Comment Code for storing old Try-Out Quote No.;
                             SVE=Kommentarskod f”r lagring av gammalt anbudsf”rfr†gansnr];
                  SourceExpr=CommentCde;
                  TableRelation="Comment Code" }

      { 1100525002;2;Field  ;
                  CaptionML=[ENU=Lookup Try-Out No. based on old Contact No.;
                             SVE=Val av anbudsnr baserat p† gammalt kontaktnr];
                  SourceExpr=LookupTryOutNoBln;
                  OnValidate=BEGIN
                               IF NOT LookupTryOutNoBln THEN
                                 TryOutCommentCde := '';
                             END;
                              }

      { 1100525003;2;Field  ;
                  Name=TryOutComCde;
                  CaptionML=[ENU=Comment Code for searching Try-Out No.;
                             SVE=Kommentarskod f”r s”kning efter anbudsnr];
                  SourceExpr=TryOutCommentCde;
                  TableRelation="Comment Code" }

      { 1100525004;2;Field  ;
                  CaptionML=[ENU=Lookup Company Contact No. based on old Contact No.;
                             SVE=Val av f”retagskontaktnr baserat p† gammalt kontaktnr];
                  SourceExpr=LookupCompContactNoBln;
                  OnValidate=BEGIN
                               IF NOT LookupCompContactNoBln THEN
                                 CompContactCommentCde := '';
                             END;
                              }

      { 1100525005;2;Field  ;
                  Name=ContComCde;
                  CaptionML=[ENU=Comment Code for searching Contact No.;
                             SVE=Kommentarskod f”r s”kning efter kontaktnr];
                  SourceExpr=CompContactCommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      CommentRec@1100525046 : Record 97;
      MRKCommentRec@1100525045 : Record 5061;
      ConvMgt@1100525044 : Codeunit 11020212;
      XmlPortID@1100525041 : Integer;
      MainTableID@1100525040 : Integer;
      MainTableLookupPageID@1100527701 : Integer;
      XMLPortRequestPageID@1100527700 : Integer;
      CreateNewNosBln@1100525039 : Boolean;
      ImpLineCounter@1100525038 : Integer;
      CommentCde@1100525037 : Code[10];
      ConversionFileFormat@1100525036 : Record 11020691;
      RunIsImportRunBln@1100525035 : Boolean;
      JDate@1100525021 : Date;
      KDate@1100525020 : Date;
      MDate@1100525018 : Date;
      PDec@1100525015 : Decimal;
      QDate@1100525014 : Date;
      RDec@1100525013 : Decimal;
      TDate@1100525011 : Date;
      UDate@1100525010 : Date;
      VDate@1100525009 : Date;
      LookupTryOutNoBln@1100525006 : Boolean;
      TryOutCommentCde@1100525005 : Code[10];
      TryOutCde@1100525004 : Code[20];
      LookupCompContactNoBln@1100525002 : Boolean;
      CompContactCommentCde@1100525001 : Code[10];
      ContCde@1100525000 : Code[20];

    PROCEDURE StripData@1100485001();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
      C := DELCHR(C,'<>',' ');
      D := DELCHR(D,'<>',' ');
      E := DELCHR(E,'<>',' ');
      F := DELCHR(F,'<>',' ');
      G := DELCHR(G,'<>',' ');
      H := DELCHR(H,'<>',' ');
      I := DELCHR(I,'<>',' ');
      L := DELCHR(L,'<>',' ');
      N := DELCHR(N,'<>',' ');
      W := DELCHR(W,'<>',' ');
      X := DELCHR(X,'<>',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XmlPortID);
        InsertColumnLine(XmlPortID,'A',MainTableID,"Try-out Quote".FIELDNAME(Code),'Code20','OldOrNewTxt');
        InsertColumnLine(XmlPortID,'B',MainTableID,"Try-out Quote".FIELDNAME("Try-out No."),'Code20','OldTxt');
        InsertColumnLine(XmlPortID,'C',MainTableID,"Try-out Quote".FIELDNAME(Description),'Text50','');
        InsertColumnLine(XmlPortID,'D',MainTableID,"Try-out Quote".FIELDNAME(Address),'Text50','');
        InsertColumnLine(XmlPortID,'E',MainTableID,"Try-out Quote".FIELDNAME("Address 2"),'Text50','');
        InsertColumnLine(XmlPortID,'F',MainTableID,"Try-out Quote".FIELDNAME("Post Code"),'Code20','');
        InsertColumnLine(XmlPortID,'G',MainTableID,"Try-out Quote".FIELDNAME(City),'Text30','');
        InsertColumnLine(XmlPortID,'H',MainTableID,"Try-out Quote".FIELDNAME("Territory Code"),'Code20','');
        InsertColumnLine(XmlPortID,'I',MainTableID,"Try-out Quote".FIELDNAME("Salesperson Code"),'Code20','');
        InsertColumnLine(XmlPortID,'J',MainTableID,"Try-out Quote".FIELDNAME("Expected Starting Date"),'Date','');
        InsertColumnLine(XmlPortID,'K',MainTableID,"Try-out Quote".FIELDNAME("Expected End Date"),'Date','');
        InsertColumnLine(XmlPortID,'L',MainTableID,"Try-out Quote".FIELDNAME("Description 2"),'Text50','');
        InsertColumnLine(XmlPortID,'M',MainTableID,"Try-out Quote".FIELDNAME("Order Date"),'Date','');
        InsertColumnLine(XmlPortID,'N',MainTableID,"Try-out Quote".FIELDNAME(Status),'Code20','');
        InsertColumnLine(XmlPortID,'O',MainTableID,"Try-out Quote".FIELDNAME("Global Dimension 1 Code"),'Code20','');
        InsertColumnLine(XmlPortID,'P',MainTableID,"Try-out Quote".FIELDNAME("Offered Amount (LCY)"),'Decimal','');
        InsertColumnLine(XmlPortID,'Q',MainTableID,"Try-out Quote".FIELDNAME("Apply Date"),'Date','');
        InsertColumnLine(XmlPortID,'R',MainTableID,"Try-out Quote".FIELDNAME("Scoring Percentage"),'Decimal','');
        InsertColumnLine(XmlPortID,'S',MainTableID,"Try-out Quote".FIELDNAME("Contact No."),'Code20','OldTxt');
        InsertColumnLine(XmlPortID,'T',MainTableID,"Try-out Quote".FIELDNAME("Assign Date"),'Date','');
        InsertColumnLine(XmlPortID,'U',MainTableID,"Try-out Quote".FIELDNAME("Register Date"),'Date','');
        InsertColumnLine(XmlPortID,'V',MainTableID,"Try-out Quote".FIELDNAME("Tender Date"),'Date','');
        InsertColumnLine(XmlPortID,'W',MainTableID,"Try-out Quote".FIELDNAME(Discipline),'Code10','');
        InsertColumnLine(XmlPortID,'X',MainTableID,"Try-out Quote".FIELDNAME("Your reference"),'Text30','');
      END;
    END;

    PROCEDURE ClearFields@1100525001();
    BEGIN
      CLEAR("Try-out Quote");
      TryOutCde := '';
      ContCde := '';
      A := '';
      B := '';
      C := '';
      D := '';
      E := '';
      F := '';
      G := '';
      H := '';
      I := '';
      J := '';
      K := '';
      L := '';
      M := '';
      N := '';
      O := '';
      P := '';
      Q := '';
      R := '';
      S := '';
      T := '';
      U := '';
      V := '';
      W := '';
      X := '';
      JDate := 0D;
      KDate := 0D;
      MDate := 0D;
      PDec := 0;
      QDate := 0D;
      RDec := 0;
      TDate := 0D;
      UDate := 0D;
      VDate := 0D;
    END;

    PROCEDURE InitXMLport@1100529500(iCreateNewNosBln@1100529505 : Boolean;iCommentCde@1100529504 : Code[10];iLookupTryOutNoBln@1100529503 : Boolean;iTryOutCommentCde@1100529502 : Code[10];iLookupCompContactNoBln@1100529501 : Boolean;iCompContactCommentCde@1100529500 : Code[10]);
    BEGIN
      CreateNewNosBln := iCreateNewNosBln;
      LookupTryOutNoBln := iLookupTryOutNoBln;
      TryOutCommentCde := iTryOutCommentCde;
      LookupCompContactNoBln := iLookupCompContactNoBln;
      CompContactCommentCde := iCompContactCommentCde;
    END;

    BEGIN
    END.
  }
}

