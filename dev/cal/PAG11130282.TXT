OBJECT Page 11130282 Purchase Order Correction
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Bestellungskorrektur;
               ENU=Purchase Order Correction;
               NLD=Inkoopordercorrectie];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table39;
    SourceTableView=WHERE(Document Type=CONST(Order));
    DataCaptionFields=Description;
    PageType=Card;
    OnInit=BEGIN
             QuanTextBoxEditable := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       CurrPageIsEditable := CurrPage.EDITABLE;

                       PurchHeader.GET("Document Type","Document No.");
                       QuanTextBoxEditable := CurrPage.EDITABLE AND (NOT PurchHeader."Amounts only");

                       FillTempPurchLine;
                       FillDefaults;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190013;1 ;Action    ;
                      CaptionML=[DEU=E&infÅgen;
                                 ENU=&Insert;
                                 NLD=&Invoegen;
                                 NOR=&Sett inn;
                                 SVE=&Infoga];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 InsertCorrectionOrderLine;

                                 CurrPage.CLOSE;
                               END;
                                }
      { 1100525001;1 ;Action    ;
                      CaptionML=[DEU=Felder lîschen;
                                 ENU=Clear Fields;
                                 NLD=Velden leegmaken];
                      Image=ClearLog;
                      OnAction=BEGIN
                                 ClearFields;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[DEU=Original;
                           ENU=Original;
                           NLD=Origineel;
                           NOR=Opprinnelig;
                           SVE=Ursprunglig] }

    { 1210190000;2;Field  ;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 1210190002;2;Field  ;
                SourceExpr="Buy-from Vendor No.";
                Editable=FALSE }

    { 1100528504;2;Field  ;
                SourceExpr=Element;
                Editable=FALSE }

    { 1100528505;2;Field  ;
                SourceExpr="Extension Contract";
                Editable=FALSE }

    { 1210190004;2;Field  ;
                SourceExpr="Shortcut Dimension 2 Code";
                Editable=FALSE }

    { 1210190010;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE;
                OnValidate=BEGIN
                             ValidateDescription;
                           END;
                            }

    { 1210190006;2;Field  ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                Editable=FALSE }

    { 1210190008;2;Field  ;
                SourceExpr="Unit of Measure Code";
                Editable=FALSE }

    { 1100525003;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Direct Unit Cost";
                Editable=FALSE }

    { 1100528502;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Line Amount";
                Editable=FALSE }

    { 1100528501;1;Group  ;
                CaptionML=[DEU=Storno;
                           ENU=Correction;
                           NLD=Correctie;
                           NOR=Korreksjon;
                           SVE=RÑttningstransaktion];
                GroupType=Group }

    { 1100525000;2;Field  ;
                CaptionML=[DEU=Element;
                           ENU=Element;
                           NLD=Element;
                           NOR=Element;
                           SVE=Element];
                SourceExpr=CorrectionElement;
                TableRelation="Project Element".Element WHERE (Project No.=FIELD(Job No.));
                Editable=CurrPageIsEditable;
                OnValidate=BEGIN
                             ValidateElement;
                           END;

                OnLookup=VAR
                           ProjectElementPage@1100525000 : Page 11012029;
                           ProjectElement@1100528501 : Record 11012010;
                         BEGIN
                           IF "Job No." <> '' THEN BEGIN
                             CLEAR(ProjectElementPage);
                             ProjectElement.SETRANGE("Project No.","Job No.");
                             ProjectElementPage.SETTABLEVIEW(ProjectElement);
                             ProjectElementPage.LOOKUPMODE(TRUE);
                             IF ProjectElementPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               ProjectElementPage.GETRECORD(ProjectElement);
                               CorrectionElement := ProjectElement.Element;
                               ValidateElement;
                             END;
                           END;
                         END;
                          }

    { 1210190014;2;Field  ;
                CaptionML=[DEU=Sonderleistungsvertrag;
                           ENU=Extension Contract;
                           NLD=Meer- en minderwerkcontract;
                           NOR=ETA;
                           SVE=éTA];
                SourceExpr=CorrectionExtensionContract;
                Editable=CurrPageIsEditable;
                OnValidate=BEGIN
                             ValidateExtensionContract;
                           END;

                OnLookup=VAR
                           ExtensionContractFrm@1210190000 : Page 11012014;
                           ExtensionContractRec@1210190001 : Record 11012004;
                         BEGIN
                           IF "Job No." <> '' THEN BEGIN
                             CLEAR(ExtensionContractFrm);
                             ExtensionContractRec.SETRANGE("Project No.","Job No.");
                             ExtensionContractFrm.SETTABLEVIEW(ExtensionContractRec);
                             ExtensionContractFrm.LOOKUPMODE(TRUE);
                             IF ExtensionContractFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               ExtensionContractFrm.GETRECORD(ExtensionContractRec);
                               CorrectionExtensionContract := ExtensionContractRec."Contract No.";
                               ValidateExtensionContract;
                             END;
                           END;
                         END;
                          }

    { 1100528500;2;Field  ;
                CaptionML=[DEU=Shortcutdimensionscode 2;
                           ENU=Shortcut Dimension 2 Code;
                           NLD=Shortcutdimensie 2;
                           NOR=Snarveisdimensjon 2 - kode;
                           SVE=GenvÑg dimension 2 kod];
                SourceExpr=CorrectionDimension2Code;
                CaptionClass='1,2,2';
                Editable=CurrPageIsEditable;
                OnValidate=BEGIN
                             ValidateDimension2Code;
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(2,CorrectionDimension2Code);
                           ValidateDimension2Code;
                         END;
                          }

    { 1210190009;2;Field  ;
                CaptionML=[DEU=Beschreibung;
                           ENU=Description;
                           NLD=Omschrijving;
                           NOR=Beskrivelse;
                           SVE=Beskrivning];
                SourceExpr=CorrectionDescription;
                Editable=CurrPageIsEditable;
                OnValidate=BEGIN
                             ValidateDescription;
                           END;
                            }

    { 1210190015;2;Field  ;
                Name=QuanTextBox;
                CaptionML=[DEU=Menge;
                           ENU=Quantity;
                           NLD=Aantal;
                           NOR=Antall;
                           SVE=Antal];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=CorrectionQuantity;
                Editable=QuanTextBoxEditable;
                OnValidate=BEGIN
                             ValidateCorrectionQuantity;
                           END;
                            }

    { 1100528503;2;Field  ;
                CaptionML=[DEU=Einheitencode;
                           ENU=Unit of Measure Code;
                           NLD=Eenheidscode;
                           NOR=Enhetskode;
                           SVE=Enhetskod];
                SourceExpr=CorrectionUnitOfMeasureCode;
                Editable=CurrPAgeIsEditable;
                OnValidate=BEGIN
                             ValidateUnitOfMeasureCode;
                           END;

                OnLookup=BEGIN
                           TempPurchLine.LookupUnitOfMeasureCode;
                           CorrectionUnitOfMeasureCode := TempPurchLine."Unit of Measure Code";
                         END;
                          }

    { 1100525002;2;Field  ;
                CaptionML=[DEU=EK-Preis;
                           ENU=Direct Unit Cost;
                           NLD=Directe kostprijs;
                           NOR=Innkjõpspris;
                           SVE=Inkîpspris];
                BlankZero=Yes;
                SourceExpr=CorrectionDirectUnitCost;
                AutoFormatType=2;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(FIELDNO("Direct Unit Cost"));
                Editable=CurrPageIsEditable;
                OnValidate=BEGIN
                             ValidateDirectUnitCost;
                           END;
                            }

    { 1100485000;2;Field  ;
                CaptionML=[DEU=Zeilenbetrag;
                           ENU=Line Amount;
                           NLD=Regelbedrag;
                           NOR=Linjebelõp;
                           SVE=Radbelopp];
                BlankZero=Yes;
                SourceExpr=CorrectionAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(FIELDNO("Line Amount"));
                Editable=CurrPageIsEditable;
                OnValidate=BEGIN
                             ValidateCorrectionAmount;
                           END;
                            }

  }
  CODE
  {
    VAR
      PurchHeader@1100528511 : Record 38;
      TempPurchLine@1100528510 : TEMPORARY Record 39;
      CorrectionExtensionContract@1100528509 : Code[10];
      CorrectionElement@1100528508 : Code[20];
      CorrectionDimension2Code@1100528507 : Code[20];
      CorrectionDescription@1100528506 : Text[100];
      CorrectionQuantity@1100528505 : Decimal;
      CorrectionUnitOfMeasureCode@1100528503 : Code[10];
      CorrectionDirectUnitCost@1100525000 : Decimal;
      CorrectionAmount@1100528504 : Decimal;
      QuanTextBoxEditable@1100528502 : Boolean INDATASET;
      CurrPageIsEditable@1100528501 : Boolean;
      TempPurchLineFilled@1100528500 : Boolean;
      DefaultsFilled@1100528512 : Boolean;

    LOCAL PROCEDURE FillTempPurchLine@1100528512();
    BEGIN
      IF TempPurchLineFilled THEN
        EXIT;

      TempPurchLine.INIT;
      TempPurchLine.SuspendStatusCheck(TRUE);
      TempPurchLine."Document Type"  := "Document Type";
      TempPurchLine."Document No." := "Document No.";
      TempPurchLine."Line No." := 0;
      TempPurchLine.VALIDATE("Currency Code","Currency Code");
      TempPurchLine.VALIDATE(Type,TempPurchLine.Type::"G/L Account");
      TempPurchLine."System-Created Entry"  := TRUE;
      TempPurchLine."Job No." := "Job No.";
      TempPurchLine."Service Contract No." := "Service Contract No.";
      TempPurchLine.VALIDATE("Service Order No.","Service Order No.");
      TempPurchLine.Element := Element;
      TempPurchLine."Extension Contract" := "Extension Contract";
      TempPurchLine.VALIDATE("Purchase Action",'');
      TempPurchLine.VALIDATE("Tender Paragraph","Tender Paragraph");
      TempPurchLine."Purchase Phase" := '';
      TempPurchLine."Cost Type" := "Cost Type";
      TempPurchLine.VALIDATE("Item No.","Item No.");
      TempPurchLine.Manufacturer := Manufacturer;
      TempPurchLine.VALIDATE("Basic Item","Basic Item");
      TempPurchLine."Vendor (Trade Item)" := "Vendor (Trade Item)";
      TempPurchLine.VALIDATE("Trade Item","Trade Item");
      TempPurchLine.VALIDATE("Plant Type","Plant Type");
      TempPurchLine.VALIDATE("Cost Component Plant","Cost Component Plant");
      TempPurchLine.VALIDATE("No.","No.");
      TempPurchLine."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
      TempPurchLine."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
      TempPurchLine."Dimension Set ID" := "Dimension Set ID";
      IF PurchHeader."Amounts only" THEN BEGIN
        TempPurchLine.VALIDATE("Line Amount","Line Amount");
        TempPurchLine.VALIDATE("Unit of Measure Code","Unit of Measure Code");
      END ELSE BEGIN
        TempPurchLine.VALIDATE("Location Code","Location Code");
        TempPurchLine.VALIDATE(Quantity,Quantity);
        TempPurchLine.VALIDATE("Unit of Measure Code","Unit of Measure Code");
        IF "Direct Unit Cost" < 0 THEN
          TempPurchLine.VALIDATE("Direct Unit Cost",-"Direct Unit Cost")
        ELSE
          TempPurchLine.VALIDATE("Direct Unit Cost","Direct Unit Cost");
      END;
      TempPurchLine.VALIDATE("Line Discount %","Line Discount %");
      TempPurchLine."Cost Component" := "Cost Component";
      TempPurchLine."Posting Date" := "Posting Date";
      TempPurchLine.VALIDATE("Expected Receipt Date","Expected Receipt Date");
      TempPurchLine."Order Correction Line" := TRUE;
      TempPurchLine.Description := Description;
      TempPurchLine.FillMainProject;
      TempPurchLine."Inward Processing Relief" := "Inward Processing Relief";

      TempPurchLineFilled := TRUE;
    END;

    LOCAL PROCEDURE FillDefaults@1100528515();
    BEGIN
      IF DefaultsFilled THEN
        EXIT;

      CorrectionExtensionContract := "Extension Contract";
      CorrectionElement := Element;
      CorrectionDimension2Code := "Shortcut Dimension 2 Code";
      CorrectionDescription := Description;
      CorrectionQuantity := 0;
      CorrectionUnitOfMeasureCode := "Unit of Measure Code";
      CorrectionDirectUnitCost := "Direct Unit Cost";
      CorrectionAmount := 0;

      DefaultsFilled := TRUE;
    END;

    LOCAL PROCEDURE ValidateElement@1100528500();
    VAR
      ProjectElement@1100528501 : Record 11012010;
      ElementFormat@1100528500 : Codeunit 11012022;
    BEGIN
      ElementFormat.FormatElem(CorrectionElement,2,"Receiving Company");
      IF CorrectionElement <> '' THEN
        ProjectElement.GET("Job No.",CorrectionElement);

      TempPurchLine.VALIDATE(Element,CorrectionElement);
    END;

    LOCAL PROCEDURE ValidateExtensionContract@1100528506();
    VAR
      ExtensionContractRec@1100528500 : Record 11012004;
    BEGIN
      IF CorrectionExtensionContract <> '' THEN
        ExtensionContractRec.GET("Job No.",CorrectionExtensionContract);

      TempPurchLine.VALIDATE("Extension Contract",CorrectionExtensionContract);
    END;

    LOCAL PROCEDURE ValidateDimension2Code@1100528502();
    BEGIN
      TempPurchLine.VALIDATE("Shortcut Dimension 2 Code",CorrectionDimension2Code);
      IF CorrectionDimension2Code = '' THEN
        TempPurchLine.VALIDATE("Cost Type",TempPurchLine."Cost Type"::" ");

      CorrectionDescription := TempPurchLine.Description;
    END;

    LOCAL PROCEDURE ValidateDescription@1100528508();
    BEGIN
      TempPurchLine.VALIDATE(Description,CorrectionDescription);
    END;

    LOCAL PROCEDURE ValidateCorrectionQuantity@1100528503();
    BEGIN
      IF CorrectionQuantity > 0 THEN
        IF PurchHeader."Purchase Order Correction" = PurchHeader."Purchase Order Correction"::"Only Negative Correction" THEN
          PurchHeader.FIELDERROR("Purchase Order Correction");

      TempPurchLine.VALIDATE(Quantity,CorrectionQuantity);
      CorrectionDirectUnitCost := TempPurchLine."Direct Unit Cost";
      CorrectionAmount := TempPurchLine."Line Amount";
    END;

    LOCAL PROCEDURE ValidateUnitOfMeasureCode@1100528511();
    BEGIN
      TempPurchLine.VALIDATE("Unit of Measure Code",CorrectionUnitOfMeasureCode);
    END;

    LOCAL PROCEDURE ValidateDirectUnitCost@1100525001();
    BEGIN
      IF CorrectionDirectUnitCost > 0 THEN
        IF PurchHeader."Purchase Order Correction" = PurchHeader."Purchase Order Correction"::"Only Negative Correction" THEN
          PurchHeader.FIELDERROR("Purchase Order Correction");

      TempPurchLine.SetCurrFieldNo(FIELDNO("Direct Unit Cost"));
      TempPurchLine.VALIDATE("Direct Unit Cost",CorrectionDirectUnitCost);
      CorrectionAmount := TempPurchLine."Line Amount";
    END;

    LOCAL PROCEDURE ValidateCorrectionAmount@1100528504();
    BEGIN
      IF CorrectionAmount > 0 THEN
        IF PurchHeader."Purchase Order Correction" = PurchHeader."Purchase Order Correction"::"Only Negative Correction" THEN
          PurchHeader.FIELDERROR("Purchase Order Correction");

      TempPurchLine.VALIDATE("Line Amount",CorrectionAmount);
      CorrectionDirectUnitCost := TempPurchLine."Direct Unit Cost";
    END;

    LOCAL PROCEDURE InsertCorrectionOrderLine@1100528509();
    VAR
      PurchLine@1100525001 : Record 39;
      PurchaseLineExtension@1100525000 : Record 11020644;
    BEGIN
      IF (CorrectionQuantity = 0) AND (CorrectionAmount = 0) THEN
        EXIT;

      PurchLine.INIT;
      PurchLine := TempPurchLine;
      PurchLine.SuspendStatusCheck(TRUE);
      PurchLine."Line No." := NewLineNo();
      PurchLine."Input by" := USERID;
      PurchLine."Input Date" := TODAY;
      PurchLine.INSERT;

      PurchLine.CreatePurchOrderControl(FALSE);
      PurchaseLineExtension.CopyPurchLineExtension(
        "Document Type","Document No.","Line No.",
        PurchLine."Document Type",PurchLine."Document No.",PurchLine."Line No.");
    END;

    LOCAL PROCEDURE NewLineNo@1100528510() LineNo : Integer;
    VAR
      PurchLine@1210190000 : Record 39;
    BEGIN
      LineNo := "Line No.";
      WHILE PurchLine.GET("Document Type","Document No.",LineNo) DO
        LineNo := LineNo + 10;
      EXIT(LineNo);
    END;

    LOCAL PROCEDURE ClearFields@1100525000();
    BEGIN
      //DP01371b
      IF CorrectionElement <> '' THEN BEGIN
        CorrectionElement := '';
        ValidateElement;
      END;

      IF CorrectionExtensionContract <> '' THEN BEGIN
        CorrectionExtensionContract := '';
        ValidateExtensionContract;
      END;

      IF CorrectionDimension2Code <> '' THEN BEGIN
        CorrectionDimension2Code := '';
        ValidateDimension2Code;
      END;

      IF CorrectionDescription <> '' THEN BEGIN
        CorrectionDescription := '';
        ValidateDescription;
      END;

      IF CorrectionQuantity <> 0 THEN BEGIN
        CorrectionQuantity := 0;
        ValidateCorrectionQuantity;
      END;

      IF CorrectionUnitOfMeasureCode <> '' THEN BEGIN
        CorrectionUnitOfMeasureCode := '';
        ValidateUnitOfMeasureCode;
      END;

      IF CorrectionDirectUnitCost <> 0 THEN BEGIN
        CorrectionDirectUnitCost := 0;
        ValidateDirectUnitCost;
      END;

      IF CorrectionAmount <> 0 THEN BEGIN
        CorrectionAmount := 0;
        ValidateCorrectionAmount;
      END;
    END;

    BEGIN
    END.
  }
}

