OBJECT Page 760 Trailing Sales Orders Chart
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Trailing Sales Orders;
               NOR=Etterfõlgende salgsordrer;
               SVE=Efterfîljande fîrsÑljningsorder];
    SourceTable=Table485;
    PageType=CardPart;
    OnOpenPage=BEGIN
                 SetActionsEnabled;
               END;

    OnFindRecord=BEGIN
                   UpdateChart;
                   IsChartDataReady := TRUE;

                   IF NOT IsChartAddInReady THEN
                     SetActionsEnabled;
                 END;

    ActionList=ACTIONS
    {
      { 2       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;ActionGroup;
                      Name=Show;
                      CaptionML=[ENU=Show;
                                 NOR=Vis;
                                 SVE=Visa];
                      Image=View }
      { 10      ;2   ;Action    ;
                      Name=AllOrders;
                      CaptionML=[ENU=All Orders;
                                 NOR=Alle bestillinger;
                                 SVE=Alla order];
                      ToolTipML=[ENU=View all not fully posted sales orders, including sales orders with document dates in the future because of long delivery times, delays, or other reasons.;
                                 NOR=Vis alle ordrer som ikke er fullstendig bokfõrt, inkludert ordrer med dokumentdatoer i fremtidig, pÜ grunn av lange leveringstider, forsinkelser eller andre Ürsaker.;
                                 SVE=Visa alla fîrsÑljningsorder som inte Ñr helt bokfîrda, inklusive fîrsÑljningsorder med senare dokumentdatum pÜ grund av lÜnga leveranstider, fîrdrîjningar eller andra anledningar.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=AllOrdersEnabled;
                      OnAction=BEGIN
                                 TrailingSalesOrdersSetup.SetShowOrders(TrailingSalesOrdersSetup."Show Orders"::"All Orders");
                                 UpdateStatus;
                               END;
                                }
      { 11      ;2   ;Action    ;
                      Name=OrdersUntilToday;
                      CaptionML=[ENU=Orders Until Today;
                                 NOR=Ordrer frem til i dag;
                                 SVE=Order fram tills i dag];
                      ToolTipML=[ENU=View not fully posted sales orders with document dates up until today's date.;
                                 NOR=Vis ordrer som ikke er fullstendig bokfõrt, med dokumentdatoer opptil dagens dato.;
                                 SVE=Visa fîrsÑljningsorder som inte Ñr helt bokfîrda, med dokumentdatum fram tills idag.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=OrdersUntilTodayEnabled;
                      OnAction=BEGIN
                                 TrailingSalesOrdersSetup.SetShowOrders(TrailingSalesOrdersSetup."Show Orders"::"Orders Until Today");
                                 UpdateStatus;
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=DelayedOrders;
                      CaptionML=[ENU=Delayed Orders;
                                 NOR=Forsinkede ordrer;
                                 SVE=Fîrsenade order];
                      ToolTipML=[ENU=View not fully posted sales orders with shipment dates that are before today's date.;
                                 NOR=Vis ordrer som ikke er fullstendig bokfõrt, med leveringsdatoer som er fõr dagens dato.;
                                 SVE=Visa fîrsÑljningsorder som inte Ñr helt bokfîrda, med utleveransdatum fîre dagens datum.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=DelayedOrdersEnabled;
                      OnAction=BEGIN
                                 TrailingSalesOrdersSetup.SetShowOrders(TrailingSalesOrdersSetup."Show Orders"::"Delayed Orders");
                                 UpdateStatus;
                               END;
                                }
      { 14      ;1   ;ActionGroup;
                      Name=PeriodLength;
                      CaptionML=[ENU=Period Length;
                                 NOR=Periodelengde;
                                 SVE=Period];
                      Image=Period }
      { 7       ;2   ;Action    ;
                      Name=Day;
                      CaptionML=[ENU=Day;
                                 NOR=Dag;
                                 SVE=Dag];
                      ToolTipML=[ENU=Each stack covers one day.;
                                 NOR=Hver stakk omfatter Çn dag.;
                                 SVE=Varje stack omfattar en dag.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=DayEnabled;
                      OnAction=BEGIN
                                 TrailingSalesOrdersSetup.SetPeriodLength(TrailingSalesOrdersSetup."Period Length"::Day);
                                 UpdateStatus;
                               END;
                                }
      { 8       ;2   ;Action    ;
                      Name=Week;
                      CaptionML=[ENU=Week;
                                 NOR=Uke;
                                 SVE=Vecka];
                      ToolTipML=[ENU=Each stack except for the last stack covers one week. The last stack contains data from the start of the week until the date that is defined by the Show option.;
                                 NOR=Hver stakk, bortsett fra den siste stakken, omfatter Çn uke. Den siste stakken inneholder data fra starten av uken til datoen som er definert av alternativet Vis.;
                                 SVE=Varje stack, fîrutom den senaste stacken, omfattar en vecka. Den senaste stacken innehÜller data frÜn bîrjan av veckan och fram tills det datum som anges med alternativet Visa.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=WeekEnabled;
                      OnAction=BEGIN
                                 TrailingSalesOrdersSetup.SetPeriodLength(TrailingSalesOrdersSetup."Period Length"::Week);
                                 UpdateStatus;
                               END;
                                }
      { 4       ;2   ;Action    ;
                      Name=Month;
                      CaptionML=[ENU=Month;
                                 NOR=MÜned;
                                 SVE=MÜnad];
                      ToolTipML=[ENU=Each stack except for the last stack covers one month. The last stack contains data from the start of the month until the date that is defined by the Show option.;
                                 NOR=Hver stakk, bortsett fra den siste stakken, omfatter Çn mÜned. Den siste stakken inneholder data fra starten av mÜneden til datoen som er definert av alternativet Vis.;
                                 SVE=Varje stack, fîrutom den senaste stacken, omfattar en mÜnad. Den senaste stacken innehÜller data frÜn bîrjan av mÜnaden och fram tills det datum som anges med alternativet Visa.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=MonthEnabled;
                      OnAction=BEGIN
                                 TrailingSalesOrdersSetup.SetPeriodLength(TrailingSalesOrdersSetup."Period Length"::Month);
                                 UpdateStatus;
                               END;
                                }
      { 6       ;2   ;Action    ;
                      Name=Quarter;
                      CaptionML=[ENU=Quarter;
                                 NOR=Kvartal;
                                 SVE=Kvartal];
                      ToolTipML=[ENU=Each stack except for the last stack covers one quarter. The last stack contains data from the start of the quarter until the date that is defined by the Show option.;
                                 NOR=Hver stakk, bortsett fra den siste stakken, omfatter ett kvartal. Den siste stakken inneholder data fra starten av kvartalet til datoen som er definert av alternativet Vis.;
                                 SVE=Varje stack, fîrutom den senaste stacken, omfattar ett kvartal. Den senaste stacken innehÜller data frÜn bîrjan av kvartalet och fram tills det datum som anges med alternativet Visa.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=QuarterEnabled;
                      OnAction=BEGIN
                                 TrailingSalesOrdersSetup.SetPeriodLength(TrailingSalesOrdersSetup."Period Length"::Quarter);
                                 UpdateStatus;
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=Year;
                      CaptionML=[ENU=Year;
                                 NOR=èr;
                                 SVE=èr];
                      ToolTipML=[ENU=Each stack except for the last stack covers one year. The last stack contains data from the start of the year until the date that is defined by the Show option.;
                                 NOR=Hver stakk, bortsett fra den siste stakken, omfatter ett Ür. Den siste stakken inneholder data fra starten av Üret til datoen som er definert av alternativet Vis.;
                                 SVE=Varje stack, fîrutom den senaste stacken, omfattar ett Ür. Den senaste stacken innehÜller data frÜn bîrjan av Üret och fram tills det datum som anges med alternativet Visa.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=YearEnabled;
                      OnAction=BEGIN
                                 TrailingSalesOrdersSetup.SetPeriodLength(TrailingSalesOrdersSetup."Period Length"::Year);
                                 UpdateStatus;
                               END;
                                }
      { 24      ;1   ;ActionGroup;
                      Name=Options;
                      CaptionML=[ENU=Options;
                                 NOR=Alternativer;
                                 SVE=Alternativ];
                      Image=SelectChart }
      { 16      ;2   ;ActionGroup;
                      Name=ValueToCalculate;
                      CaptionML=[ENU=Value to Calculate;
                                 NOR=Verdi som skal beregnes;
                                 SVE=VÑrde att berÑkna];
                      ActionContainerType=ActionItems;
                      Image=Calculate }
      { 17      ;3   ;Action    ;
                      Name=Amount;
                      CaptionML=[ENU=Amount;
                                 NOR=Belõp;
                                 SVE=Belopp];
                      ToolTipML=[ENU=The Y-axis shows the totaled LCY amount of the orders.;
                                 NOR=Y-aksen viser det samlede belõpet for ordrene i NOK.;
                                 SVE=Y-axeln visar det summerade BVA-beloppet fîr alla order.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=AmountEnabled;
                      OnAction=BEGIN
                                 TrailingSalesOrdersSetup.SetValueToCalcuate(TrailingSalesOrdersSetup."Value to Calculate"::"Amount Excl. VAT");
                                 UpdateStatus;
                               END;
                                }
      { 18      ;3   ;Action    ;
                      Name=NoofOrders;
                      CaptionML=[ENU=No. of Orders;
                                 NOR=Antall bestillinger;
                                 SVE=Antal order];
                      ToolTipML=[ENU=The Y-axis shows the number of orders.;
                                 NOR=Y-aksen viser antallet ordrer.;
                                 SVE=Y-axeln visar antalet order.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NoOfOrdersEnabled;
                      OnAction=BEGIN
                                 TrailingSalesOrdersSetup.SetValueToCalcuate(TrailingSalesOrdersSetup."Value to Calculate"::"No. of Orders");
                                 UpdateStatus;
                               END;
                                }
      { 19      ;2   ;ActionGroup;
                      CaptionML=[ENU=Chart Type;
                                 NOR=Diagramtype;
                                 SVE=Diagramtyp];
                      Image=BarChart }
      { 20      ;3   ;Action    ;
                      Name=StackedArea;
                      CaptionML=[ENU=Stacked Area;
                                 NOR=Stablet omrÜde;
                                 SVE=Staplad yta];
                      ToolTipML=[ENU=View the data in area layout.;
                                 NOR=Vis dataene i omrÜdetoppsettet.;
                                 SVE=Visa data i omrÜdeslayout.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=StackedAreaEnabled;
                      OnAction=BEGIN
                                 TrailingSalesOrdersSetup.SetChartType(TrailingSalesOrdersSetup."Chart Type"::"Stacked Area");
                                 UpdateStatus;
                               END;
                                }
      { 21      ;3   ;Action    ;
                      Name=StackedAreaPct;
                      CaptionML=[ENU=Stacked Area (%);
                                 NOR=Stablet omrÜde (%);
                                 SVE=Staplad yta (%)];
                      ToolTipML=[ENU=view the percentage distribution of the four order statuses in area layout.;
                                 NOR=Vis prosentandelen av distribusjonen av de fire ordrestatusene i omrÜdeoppsettet.;
                                 SVE=visa den procentuella fîrdelningen av alla fyra orderstatus i omrÜdeslayout.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=StackedAreaPctEnabled;
                      OnAction=BEGIN
                                 TrailingSalesOrdersSetup.SetChartType(TrailingSalesOrdersSetup."Chart Type"::"Stacked Area (%)");
                                 UpdateStatus;
                               END;
                                }
      { 22      ;3   ;Action    ;
                      Name=StackedColumn;
                      CaptionML=[ENU=Stacked Column;
                                 NOR=Stablet kolonne;
                                 SVE=Staplad stapel];
                      ToolTipML=[ENU=view the data in column layout.;
                                 NOR=Vis dataene i kolonneoppsettet.;
                                 SVE=Visa data i kolumnlayout.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=StackedColumnEnabled;
                      OnAction=BEGIN
                                 TrailingSalesOrdersSetup.SetChartType(TrailingSalesOrdersSetup."Chart Type"::"Stacked Column");
                                 UpdateStatus;
                               END;
                                }
      { 23      ;3   ;Action    ;
                      Name=StackedColumnPct;
                      CaptionML=[ENU=Stacked Column (%);
                                 NOR=Stablet kolonne (%);
                                 SVE=Staplad stapel (%)];
                      ToolTipML=[ENU=view the percentage distribution of the four order statuses in column layout.;
                                 NOR=Vis prosentandelen av distribusjonen av de fire ordrestatusene i kolonneoppsettet.;
                                 SVE=visa den procentuella fîrdelningen av alla fyra orderstatus i kolumnlayout.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=StackedColumnPctEnabled;
                      OnAction=BEGIN
                                 TrailingSalesOrdersSetup.SetChartType(TrailingSalesOrdersSetup."Chart Type"::"Stacked Column (%)");
                                 UpdateStatus;
                               END;
                                }
      { 25      ;1   ;Separator  }
      { 13      ;1   ;Action    ;
                      Name=Setup;
                      CaptionML=[ENU=Setup;
                                 NOR=Oppsett;
                                 SVE=InstÑllning];
                      ToolTipML=[ENU=Specify if the chart will be based on a work date other than today's date. This is mainly relevant in demonstration databases with fictitious sales orders.;
                                 NOR=Angir om diagrammet skal vëre basert pÜ en arbeidsdato eller dagens dato. Denne er hovedsakelig relevant i demonstrasjonsdatabaser med fiktive ordrer.;
                                 SVE=Ange om diagrammet skall baseras pÜ annat arbetsdatum Ñn idag. Det hÑr anvÑnds frÑmst vid demonstration av databaser med fiktiva fîrsÑljningsorder.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Setup;
                      OnAction=BEGIN
                                 RunSetup;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=container;
                ContainerType=ContentArea }

    { 12  ;1   ;Field     ;
                CaptionML=[ENU=Status Text;
                           NOR=Statustekst;
                           SVE=Statustext];
                ToolTipML=[ENU=Specifies the status of the chart.;
                           NOR=Angir statusen til diagrammet.;
                           SVE=Anger diagrammets status.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=StatusText;
                Editable=False;
                ShowCaption=No }

    { 5   ;1   ;Field     ;
                Name=BusinessChart;
                CaptionML=[ENU=Business Chart;
                           NOR=Organisasjonskart;
                           SVE=Verksamhetsdiagram];
                ToolTipML=[ENU=Specifies if the chart is of type Business Chart.;
                           NOR=Angir om diagrammet er av typen Forretningsdiagram.;
                           SVE=Anger om diagrammet Ñr av typen Verksamhetsdiagram.];
                ApplicationArea=#Basic,#Suite;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35] }

  }
  CODE
  {
    VAR
      TrailingSalesOrdersSetup@1002 : Record 760;
      OldTrailingSalesOrdersSetup@1005 : Record 760;
      TrailingSalesOrdersMgt@1000 : Codeunit 760;
      StatusText@1003 : Text[250];
      NeedsUpdate@1001 : Boolean;
      AllOrdersEnabled@1004 : Boolean INDATASET;
      OrdersUntilTodayEnabled@1006 : Boolean INDATASET;
      DelayedOrdersEnabled@1007 : Boolean INDATASET;
      DayEnabled@1008 : Boolean INDATASET;
      WeekEnabled@1009 : Boolean INDATASET;
      MonthEnabled@1010 : Boolean INDATASET;
      QuarterEnabled@1011 : Boolean INDATASET;
      YearEnabled@1012 : Boolean INDATASET;
      AmountEnabled@1013 : Boolean INDATASET;
      NoOfOrdersEnabled@1014 : Boolean INDATASET;
      StackedAreaEnabled@1015 : Boolean INDATASET;
      StackedAreaPctEnabled@1016 : Boolean INDATASET;
      StackedColumnEnabled@1017 : Boolean INDATASET;
      StackedColumnPctEnabled@1018 : Boolean INDATASET;
      IsChartAddInReady@1019 : Boolean;
      IsChartDataReady@1020 : Boolean;

    LOCAL PROCEDURE UpdateChart@6();
    BEGIN
      IF NOT NeedsUpdate THEN
        EXIT;
      IF NOT IsChartAddInReady THEN
        EXIT;
      TrailingSalesOrdersMgt.UpdateData(Rec);
      Update(CurrPage.BusinessChart);
      UpdateStatus;
      NeedsUpdate := FALSE;
    END;

    LOCAL PROCEDURE UpdateStatus@8();
    BEGIN
      NeedsUpdate :=
        NeedsUpdate OR
        (OldTrailingSalesOrdersSetup."Period Length" <> TrailingSalesOrdersSetup."Period Length") OR
        (OldTrailingSalesOrdersSetup."Show Orders" <> TrailingSalesOrdersSetup."Show Orders") OR
        (OldTrailingSalesOrdersSetup."Use Work Date as Base" <> TrailingSalesOrdersSetup."Use Work Date as Base") OR
        (OldTrailingSalesOrdersSetup."Value to Calculate" <> TrailingSalesOrdersSetup."Value to Calculate") OR
        (OldTrailingSalesOrdersSetup."Chart Type" <> TrailingSalesOrdersSetup."Chart Type");

      OldTrailingSalesOrdersSetup := TrailingSalesOrdersSetup;

      IF NeedsUpdate THEN
        StatusText := TrailingSalesOrdersSetup.GetCurrentSelectionText;

      SetActionsEnabled;
    END;

    LOCAL PROCEDURE RunSetup@3();
    BEGIN
      PAGE.RUNMODAL(PAGE::"Trailing Sales Orders Setup",TrailingSalesOrdersSetup);
      TrailingSalesOrdersSetup.GET(USERID);
      UpdateStatus;
    END;

    [External]
    PROCEDURE SetActionsEnabled@10();
    BEGIN
      AllOrdersEnabled := (TrailingSalesOrdersSetup."Show Orders" <> TrailingSalesOrdersSetup."Show Orders"::"All Orders") AND
        IsChartAddInReady;
      OrdersUntilTodayEnabled :=
        (TrailingSalesOrdersSetup."Show Orders" <> TrailingSalesOrdersSetup."Show Orders"::"Orders Until Today") AND
        IsChartAddInReady;
      DelayedOrdersEnabled := (TrailingSalesOrdersSetup."Show Orders" <> TrailingSalesOrdersSetup."Show Orders"::"Delayed Orders") AND
        IsChartAddInReady;
      DayEnabled := (TrailingSalesOrdersSetup."Period Length" <> TrailingSalesOrdersSetup."Period Length"::Day) AND
        IsChartAddInReady;
      WeekEnabled := (TrailingSalesOrdersSetup."Period Length" <> TrailingSalesOrdersSetup."Period Length"::Week) AND
        IsChartAddInReady;
      MonthEnabled := (TrailingSalesOrdersSetup."Period Length" <> TrailingSalesOrdersSetup."Period Length"::Month) AND
        IsChartAddInReady;
      QuarterEnabled := (TrailingSalesOrdersSetup."Period Length" <> TrailingSalesOrdersSetup."Period Length"::Quarter) AND
        IsChartAddInReady;
      YearEnabled := (TrailingSalesOrdersSetup."Period Length" <> TrailingSalesOrdersSetup."Period Length"::Year) AND
        IsChartAddInReady;
      AmountEnabled :=
        (TrailingSalesOrdersSetup."Value to Calculate" <> TrailingSalesOrdersSetup."Value to Calculate"::"Amount Excl. VAT") AND
        IsChartAddInReady;
      NoOfOrdersEnabled :=
        (TrailingSalesOrdersSetup."Value to Calculate" <> TrailingSalesOrdersSetup."Value to Calculate"::"No. of Orders") AND
        IsChartAddInReady;
      StackedAreaEnabled := (TrailingSalesOrdersSetup."Chart Type" <> TrailingSalesOrdersSetup."Chart Type"::"Stacked Area") AND
        IsChartAddInReady;
      StackedAreaPctEnabled := (TrailingSalesOrdersSetup."Chart Type" <> TrailingSalesOrdersSetup."Chart Type"::"Stacked Area (%)") AND
        IsChartAddInReady;
      StackedColumnEnabled := (TrailingSalesOrdersSetup."Chart Type" <> TrailingSalesOrdersSetup."Chart Type"::"Stacked Column") AND
        IsChartAddInReady;
      StackedColumnPctEnabled :=
        (TrailingSalesOrdersSetup."Chart Type" <> TrailingSalesOrdersSetup."Chart Type"::"Stacked Column (%)") AND
        IsChartAddInReady;
    END;

    EVENT BusinessChart@-5::DataPointClicked@12(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
      SetDrillDownIndexes(point);
      TrailingSalesOrdersMgt.DrillDown(Rec);
    END;

    EVENT BusinessChart@-5::DataPointDoubleClicked@13(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT BusinessChart@-5::AddInReady@14();
    BEGIN
      IsChartAddInReady := TRUE;
      TrailingSalesOrdersMgt.OnOpenPage(TrailingSalesOrdersSetup);
      UpdateStatus;
      IF IsChartDataReady THEN
        UpdateChart;
    END;

    EVENT BusinessChart@-5::Refresh@15();
    BEGIN
      IF IsChartAddInReady AND IsChartDataReady THEN BEGIN
        NeedsUpdate := TRUE;
        UpdateChart
      END;
    END;

    BEGIN
    END.
  }
}

