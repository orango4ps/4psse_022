OBJECT Table 9 Country/Region
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00,NAVDK.FI;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               VATRegNoFormat@1000 : Record 381;
             BEGIN
               VATRegNoFormat.SETFILTER("Country/Region Code",Code);
               VATRegNoFormat.DELETEALL;
             END;

    OnRename=VAR
               DocumentProperties@1100525000 : Record 11012746;
             BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;

               //**4PS.sn
               DocumentProperties.HandleRenameofCountry(COMPANYNAME, xRec.Code, Code);
               //**4PS.en
             END;

    CaptionML=[ENU=Country/Region;
               NOR=Land/omr†de;
               SVE=Land/region];
    LookupPageID=Page10;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              NOR=Navn;
                                                              SVE=Namn] }
    { 4   ;   ;ISO Code            ;Code2         ;OnValidate=BEGIN
                                                                IF "ISO Code" = '' THEN
                                                                  EXIT;
                                                                IF STRLEN("ISO Code") < MAXSTRLEN("ISO Code") THEN
                                                                  ERROR(ISOCodeLengthErr,STRLEN("ISO Code"),MAXSTRLEN("ISO Code"),"ISO Code");
                                                                IF NOT TypeHelper.IsAsciiLetter("ISO Code") THEN
                                                                  FIELDERROR("ISO Code",ASCIILetterErr);
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=ISO Code;
                                                              NOR=ISO-kode] }
    { 5   ;   ;ISO Numeric Code    ;Code3         ;OnValidate=BEGIN
                                                                IF "ISO Numeric Code" = '' THEN
                                                                  EXIT;
                                                                IF STRLEN("ISO Numeric Code") < MAXSTRLEN("ISO Numeric Code") THEN
                                                                  ERROR(ISOCodeLengthErr,STRLEN("ISO Numeric Code"),MAXSTRLEN("ISO Numeric Code"),"ISO Numeric Code");
                                                                IF NOT TypeHelper.IsNumeric("ISO Numeric Code") THEN
                                                                  FIELDERROR("ISO Numeric Code",NumericErr);
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=ISO Numeric Code;
                                                              NOR=Numerisk ISO-kode] }
    { 6   ;   ;EU Country/Region Code;Code10      ;CaptionML=[ENU=EU Country/Region Code;
                                                              NOR=Lands-/omr†dekode for EU;
                                                              SVE=EU-kod f”r land/region] }
    { 7   ;   ;Intrastat Code      ;Code10        ;CaptionML=[ENU=Intrastat Code;
                                                              NOR=Intrastatkode;
                                                              SVE=Intrastatkod] }
    { 8   ;   ;Address Format      ;Option        ;InitValue=City+Post Code;
                                                   OnValidate=BEGIN
                                                                IF xRec."Address Format" <> "Address Format" THEN BEGIN
                                                                  IF "Address Format" = "Address Format"::Custom THEN
                                                                    InitAddressFormat;
                                                                  IF xRec."Address Format" = xRec."Address Format"::Custom THEN
                                                                    ClearCustomAddressFormat;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Address Format;
                                                              NOR=Adresseformat;
                                                              SVE=Adresslayout];
                                                   OptionCaptionML=[ENU=Post Code+City,City+Post Code,City+County+Post Code,Blank Line+Post Code+City,,,,,,,,,,Custom;
                                                                    NOR=Postnr+Sted,Sted+Postnr,Sted+Fylke+Postnr,Tom linje+Postnr+Sted,,,,,,,,,,Egendefinert;
                                                                    SVE=Postnr+ort,Ort+postnr,Ort+delstat+postnr,Blankrad+postnr+ort,,,,,,,,,,Anpassad];
                                                   OptionString=Post Code+City,City+Post Code,City+County+Post Code,Blank Line+Post Code+City,,,,,,,,,,Custom }
    { 9   ;   ;Contact Address Format;Option      ;InitValue=After Company Name;
                                                   CaptionML=[ENU=Contact Address Format;
                                                              NOR=Kontaktadresseformat;
                                                              SVE=Adresslayout kontakt];
                                                   OptionCaptionML=[ENU=First,After Company Name,Last;
                                                                    NOR=F›rst,Etter selskapsnavn,Sist;
                                                                    SVE=F”rst,Efter f”retagsnamn,Sist];
                                                   OptionString=First,After Company Name,Last }
    { 10  ;   ;VAT Scheme          ;Code10        ;CaptionML=[ENU=VAT Scheme;
                                                              NOR=MVA-skjema;
                                                              SVE=Momssystem] }
    { 11  ;   ;Last Modified Date Time;DateTime   ;CaptionML=[ENU=Last Modified Date Time;
                                                              NOR=Dato/klokkeslett for siste endring;
                                                              SVE=Senast „ndrad, datum och tid];
                                                   Editable=No }
    { 12  ;   ;County Name         ;Text30        ;CaptionML=[ENU=County Name;
                                                              NOR=Landsnavn] }
    { 8000;   ;Id                  ;GUID          ;CaptionML=[ENU=Id;
                                                              NOR=ID;
                                                              SVE=ID] }
    { 13400;  ;SEPA Allowed        ;Boolean       ;CaptionML=ENU=SEPA Allowed;
                                                   Description=NAVFI }
    { 13600;  ;OIOUBL Country/Region Code;Code10  ;CaptionML=ENU=OIOUBL Country/Region Code;
                                                   Description=NAVDK }
    { 11012000;;VAT Bus. Posting Group;Code20     ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              NOR=Moms Bevegelsebokf›ringsmal;
                                                              SVE=Moms r”relsebokf”ringsmall] }
    { 11012010;;VAT Bus. Posting Group EU;Code20  ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group EU;
                                                              NOR=Mva.-forretningsbokf›ringsruppe, EU;
                                                              SVE=Moms r”relsebokf”ringsmall, EU] }
    { 11012020;;VAT Bus. Posting Group Imp/Exp;Code20;
                                                   TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group Imp/Exp;
                                                              NOR=Mva.-forretningsbokf›ringsgruppe, import/eksport;
                                                              SVE=Moms r”relsebokf”ringsmall, import/export] }
    { 11012030;;Use TNT Post KIX Code;Boolean     ;CaptionML=[ENU=Use TNT Post KIX Code;
                                                              NOR=Bruk KIX-kode for TNT-post;
                                                              SVE=Anv„nd KIX-kod f”r TNT-post] }
    { 11012040;;Phone Number Formatting;Option    ;CaptionML=[ENU=Phone Number Formatting;
                                                              NOR=Format p† telefonnummer;
                                                              SVE=Telefonnummersformatering];
                                                   OptionCaptionML=[ENU=Not,International,National;
                                                                    NOR=Ikke,Internasjonal,Nasjonal;
                                                                    SVE=Inte,Internationell,Nationell];
                                                   OptionString=Not,International,National }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;EU Country/Region Code                   }
    {    ;Intrastat Code                           }
    {    ;Name                                    ;MaintainSIFTIndex=No }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code,Name,VAT Scheme                     }
  }
  CODE
  {
    VAR
      CountryRegionNotFilledErr@1000 : TextConst 'ENU=You must specify a country or region.;NOR=Du m† angi land eller omr†de.;SVE=Du m†ste ange ett land eller en region.';
      ISOCodeLengthErr@1002 : TextConst '@@@=%1, %2 - numbers, %3 - actual value;ENU=The length of the string is %1, but it must be equal to %2 characters. Value: %3.;NOR=Strenglengden er %1, men den m† v‘re lik %2 tegn. Verdi: %3.';
      ASCIILetterErr@1001 : TextConst 'ENU=must contain ASCII letters only;NOR=kan bare ASCII-bokstaver';
      TypeHelper@1003 : Codeunit 10;
      NumericErr@1004 : TextConst 'ENU=must contain numbers only;NOR=kan bare inneholde tall';

    [External]
    PROCEDURE IsEUCountry@74(CountryRegionCode@1000 : Code[10]) : Boolean;
    VAR
      CountryRegion@1003 : Record 9;
    BEGIN
      IF CountryRegionCode = '' THEN
        ERROR(CountryRegionNotFilledErr);

      IF NOT CountryRegion.GET(CountryRegionCode) THEN
        ERROR(CountryRegionNotFilledErr);

      EXIT(CountryRegion."EU Country/Region Code" <> '');
    END;

    [External]
    PROCEDURE GetNameInCurrentLanguage@75() : Text[50];
    VAR
      CountryRegionTranslation@1001 : Record 11;
      Language@1002 : Record 8;
    BEGIN
      IF CountryRegionTranslation.GET(Code,Language.GetUserLanguage) THEN
        EXIT(CountryRegionTranslation.Name);
      EXIT(Name);
    END;

    [External]
    PROCEDURE CreateAddressFormat@3(CountryCode@1000 : Code[10];LinePosition@1001 : Integer;FieldID@1002 : Integer) : Integer;
    VAR
      CustomAddressFormat@1003 : Record 725;
    BEGIN
      CustomAddressFormat.INIT;
      CustomAddressFormat."Country/Region Code" := Code;
      CustomAddressFormat."Field ID" := FieldID;
      CustomAddressFormat."Line Position" := LinePosition - 1;
      CustomAddressFormat.INSERT;

      IF FieldID <> 0 THEN
        CreateAddressFormatLine(CountryCode,1,FieldID,CustomAddressFormat."Line No.");

      CustomAddressFormat.BuildAddressFormat;
      CustomAddressFormat.MODIFY;

      EXIT(CustomAddressFormat."Line No.");
    END;

    [External]
    PROCEDURE CreateAddressFormatLine@1(CountryCode@1002 : Code[10];FieldPosition@1003 : Integer;FieldID@1000 : Integer;LineNo@1005 : Integer);
    VAR
      CustomAddressFormatLine@1004 : Record 726;
    BEGIN
      CustomAddressFormatLine.INIT;
      CustomAddressFormatLine."Country/Region Code" := CountryCode;
      CustomAddressFormatLine."Line No." := LineNo;
      CustomAddressFormatLine."Field Position" := FieldPosition - 1;
      CustomAddressFormatLine.VALIDATE("Field ID",FieldID);
      CustomAddressFormatLine.INSERT;
    END;

    [External]
    PROCEDURE InitAddressFormat@4();
    VAR
      CompanyInformation@1002 : Record 79;
      CustomAddressFormat@1000 : Record 725;
      LineNo@1001 : Integer;
    BEGIN
      CreateAddressFormat(Code,1,CompanyInformation.FIELDNO(Name));
      CreateAddressFormat(Code,2,CompanyInformation.FIELDNO("Name 2"));
      CreateAddressFormat(Code,3,CompanyInformation.FIELDNO("Contact Person"));
      CreateAddressFormat(Code,4,CompanyInformation.FIELDNO(Address));
      CreateAddressFormat(Code,5,CompanyInformation.FIELDNO("Address 2"));
      CASE xRec."Address Format" OF
        xRec."Address Format"::"City+Post Code":
          BEGIN
            LineNo := CreateAddressFormat(Code,6,0);
            CreateAddressFormatLine(Code,1,CompanyInformation.FIELDNO(City),LineNo);
            CreateAddressFormatLine(Code,2,CompanyInformation.FIELDNO("Post Code"),LineNo);
          END;
        xRec."Address Format"::"Post Code+City",
        xRec."Address Format"::"Blank Line+Post Code+City":
          BEGIN
            LineNo := CreateAddressFormat(Code,6,0);
            CreateAddressFormatLine(Code,1,CompanyInformation.FIELDNO("Post Code"),LineNo);
            CreateAddressFormatLine(Code,2,CompanyInformation.FIELDNO(City),LineNo);
          END;
        xRec."Address Format"::"City+County+Post Code":
          BEGIN
            LineNo := CreateAddressFormat(Code,6,0);
            CreateAddressFormatLine(Code,1,CompanyInformation.FIELDNO(City),LineNo);
            CreateAddressFormatLine(Code,2,CompanyInformation.FIELDNO(County),LineNo);
            CreateAddressFormatLine(Code,3,CompanyInformation.FIELDNO("Post Code"),LineNo);
          END;
      END;
      IF LineNo <> 0 THEN BEGIN
        CustomAddressFormat.GET(Code,LineNo);
        CustomAddressFormat.BuildAddressFormat;
        CustomAddressFormat.MODIFY;
      END;
    END;

    LOCAL PROCEDURE ClearCustomAddressFormat@2();
    VAR
      CustomAddressFormat@1000 : Record 725;
    BEGIN
      CustomAddressFormat.SETRANGE("Country/Region Code",Code);
      CustomAddressFormat.DELETEALL(TRUE);
    END;

    BEGIN
    {
      **4PS01 Jan ter Harmsel, Call 2094  Also change references in documents at a Rename.
      This Table is on database level and will not be handled automatically.
    }
    END.
  }
}

