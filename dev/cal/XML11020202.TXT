OBJECT XMLport 11020202 Import Standard Authorization
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Import Standard Authorization;
    Direction=Import;
    OnPreXMLport=VAR
                   PermissionSet4PS@1100529201 : Record 11229416;
                   StandardRoleCheckLine@1100529200 : Record 11020657;
                 BEGIN
                   PermissionSet4PS.CopyPermissionSet4PStoTempTable(TempOldPermissionSet4PS);
                   PermissionSet4PS.DELETEALL;
                   StandardRoleCheckLine.DELETEALL;
                 END;

    OnPostXMLport=BEGIN
                    CLEAR(TempOldPermissionSet4PS);
                    CLEAR("Permission Set");
                    CLEAR(Permission);
                    CLEAR("Permission Set Group");
                    CLEAR("Perm. Set Group Permission Set");

                    LastUpdateTime := TIME;

                    IsNewRolePresent;
                    IsNewPermissionPresent;
                    IsNewRoleGroupPresent;
                    IsNewRoleGrpRolePresent;

                    IsOldRolePresentInNew;
                    IsOldPermissionPresentInNew;
                    IsOldRoleGroupPresentinNew;
                    IsOldRoleGrpRolePresentInNew;
                  END;

    UseRequestPage=No;
  }
  ELEMENTS
  {
    { [{737D6D1A-8B94-4AE0-B8AB-53E499E4D272}];  ;Root                ;Element ;Text    ;
                                                  VariableName=<Root> }

    { [{DE8D9259-C1E4-4573-84EC-97D4607ACDB7}];1 ;PermissionSet       ;Element ;Table   ;
                                                  SourceTable=Table2000000004;
                                                  SourceTableView=SORTING(Field1);
                                                  Temporary=Yes;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterInsertRecord=VAR
                                                                                PermissionSet4PS@1100529200 : Record 11229416;
                                                                              BEGIN
                                                                                IF NOT PermissionSet4PS.PermissionSet4PSExistsForPermissionSet("Permission Set"."Role ID") THEN
                                                                                  PermissionSet4PS.AddPermissionSet4PS("Permission Set");
                                                                              END;
                                                                               }

    { [{7C38312E-639B-4D4D-A457-60FB911A11C2}];2 ;RoleID              ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Permission Set::Role ID }

    { [{D577E20E-BAB1-453C-857F-4B26F79AF2E9}];2 ;Name                ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Permission Set::Name }

    { [{CFE6EF9E-6F14-41FC-B5A7-9892E8B9ED1D}];2 ;Permission          ;Element ;Table   ;
                                                  SourceTable=Table2000000005;
                                                  SourceTableView=SORTING(Field1,Field3,Field4);
                                                  LinkFields=Field1=FIELD(Field1);
                                                  LinkTable=Permission Set;
                                                  Temporary=Yes;
                                                  LinkTableForceInsert=No;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              Permission."Read Permission" := Permission."Read Permission"::" ";
                                                                              Permission."Insert Permission" := Permission."Insert Permission"::" ";
                                                                              Permission."Modify Permission" := Permission."Modify Permission"::" ";
                                                                              Permission."Delete Permission" := Permission."Delete Permission"::" ";
                                                                              Permission."Execute Permission" := Permission."Execute Permission"::" ";
                                                                            END;
                                                                             }

    { [{D78BA9D5-9596-455A-9A27-FDE8273E0B1D}];3 ;RoleID              ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Permission::Role ID }

    { [{DBC8B3D6-1DF7-4A92-BC8D-51027FF940F1}];3 ;ObjectType          ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Permission::Object Type }

    { [{E3439DBB-DAE8-4384-8620-0068FAD4B16E}];3 ;ObjectID            ;Element ;Field   ;
                                                  DataType=Integer;
                                                  SourceField=Permission::Object ID }

    { [{5B11DBE7-D778-4679-A462-DF8153B26A3D}];3 ;ReadPerm            ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Permission::Read Permission;
                                                  MinOccurs=Zero;
                                                  MaxOccurs=Unbounded }

    { [{832BAD60-99CB-4B68-886D-FD7393DF719C}];3 ;InsertPerm          ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Permission::Insert Permission;
                                                  MinOccurs=Zero;
                                                  MaxOccurs=Unbounded }

    { [{8CB3E0FA-6F6A-4522-8CCC-77875DD6D47D}];3 ;ModifyPerm          ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Permission::Modify Permission }

    { [{BD1D864D-CCFD-4DA9-8E10-2D55B161CA97}];3 ;DeletePerm          ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Permission::Delete Permission }

    { [{8113D89E-7AF3-4349-9763-7DD46C954FF0}];3 ;ExecutePerm         ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Permission::Execute Permission }

    { [{6884B2E0-E49E-4AE1-A3DC-B528E9609614}];1 ;PermissionSetGroup  ;Element ;Table   ;
                                                  SourceTable=Table11020570;
                                                  SourceTableView=SORTING(Field10);
                                                  Temporary=Yes;
                                                  MinOccurs=Zero }

    { [{59FBBB98-1C27-4FEC-A1F9-EF0A92EC286E}];2 ;No                  ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Permission Set Group::No. }

    { [{CCBE7705-66F5-41DF-A70C-0BAC03F3B7D0}];2 ;Description         ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Permission Set Group::Description }

    { [{B2C1C625-AAB4-4596-A07E-33C1E73D090E}];2 ;Standard            ;Element ;Field   ;
                                                  DataType=Boolean;
                                                  SourceField=Permission Set Group::Standard 4PS }

    { [{F335D1A5-864C-4A1E-8629-98A482A37E0E}];2 ;Module              ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Permission Set Group::Module }

    { [{3784EB9B-A4FA-49D6-AE14-EA5FEED31F79}];2 ;PermSetGroupPermission;Element;Table  ;
                                                  SourceTable=Table11020571;
                                                  SourceTableView=SORTING(Field10,Field20);
                                                  LinkFields=Field10=FIELD(Field10);
                                                  LinkTable=Permission Set Group;
                                                  Temporary=Yes;
                                                  MinOccurs=Zero }

    { [{B68F27A9-0F22-410F-8F14-AE3B94AC0C69}];3 ;PermissionSetGroupNo;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Perm. Set Group Permission Set::Permission Set Group No. }

    { [{BBB9CD80-1556-4D90-BBD4-A4C2E5EE8C0A}];3 ;PermissionSetNo     ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Perm. Set Group Permission Set::Permission Set No. }

    { [{A474151A-3059-4B78-9B36-E7EA0CF6670D}];3 ;Standard            ;Element ;Field   ;
                                                  DataType=Boolean;
                                                  SourceField=Perm. Set Group Permission Set::Standard 4PS }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      TempOldPermissionSet4PS@1100529201 : TEMPORARY Record 11229416;
      Window@1100525010 : Dialog;
      PermRec@1100525008 : Record 2000000005;
      Progress@1100525007 : Integer;
      NoOfRecords@1100525006 : Integer;
      Counter@1100525005 : Integer;
      LastUpdateTime@1100525004 : Time;
      Text000@1100525016 : TextConst 'ENU=Controle %1 %2 in %3 @1@@@@@@@@@@@@@;SVE=Kontroll %1 %2 i %3 @1@@@@@@@@@@@@@';
      Text002@1100525014 : TextConst 'ENU=New;SVE="Ny "';
      Text003@1100525013 : TextConst 'ENU=Old;SVE=Gammal';
      Text004@1100525012 : TextConst 'ENU=Database;SVE=Databas';
      Text005@1100525011 : TextConst 'ENU=Import File;SVE=Importera fil';

    PROCEDURE IsNewRolePresent@1210190001();
    VAR
      PermissionSet4PS@1100529201 : Record 11229416;
      StandardRoleCheckLine@1100529200 : Record 11020657;
    BEGIN
      IF PermissionSet4PS.FINDSET THEN BEGIN
        NoOfRecords := PermissionSet4PS.COUNT;
        Counter := 0;
        Window.OPEN(STRSUBSTNO(Text000,Text002,PermissionSet4PS.TABLECAPTION,Text004));
        REPEAT
          Counter := Counter + 1;
          UpdateProgressWindow(Counter);
          IF NOT TempOldPermissionSet4PS.GET(PermissionSet4PS."Permission Set ID") THEN
            StandardRoleCheckLine.AddRoleCheckLine(
              StandardRoleCheckLine.Source::"New Role",
              '',
              PermissionSet4PS."Permission Set ID",
              '',
              PermissionSet4PS.Name,
              PermRec);
        UNTIL PermissionSet4PS.NEXT = 0;
        Window.CLOSE;
      END;
    END;

    PROCEDURE IsNewPermissionPresent@1210190015();
    VAR
      StandardRoleCheckLine@1100529200 : Record 11020657;
    BEGIN
      CLEAR(Permission);
      WITH Permission DO BEGIN
        IF FINDSET THEN BEGIN
          NoOfRecords := COUNT;
          Counter := 0;
          Window.OPEN(STRSUBSTNO(Text000,Text002,TABLECAPTION,Text004));
          REPEAT
            Counter := Counter + 1;
            UpdateProgressWindow(Counter);

            IF (NOT PermissionExists(Permission) OR NOT ExistingPermissionIsEqualToNew(Permission)) THEN BEGIN
              "Permission Set".GET("Role ID");
              StandardRoleCheckLine.AddRoleCheckLine(
                StandardRoleCheckLine.Source::"New Permission",
                '',
                "Role ID",
                '',
                "Permission Set".Name,
                Permission);
            END;
          UNTIL NEXT = 0;
          Window.CLOSE;
        END;
      END;
    END;

    PROCEDURE PermissionExists@1100525001(ImportPermission@1100525001 : Record 2000000005) : Boolean;
    VAR
      Permission@1100525000 : Record 2000000005;
    BEGIN
      EXIT(Permission.GET(ImportPermission."Role ID",ImportPermission."Object Type",ImportPermission."Object ID"));
    END;

    LOCAL PROCEDURE ExistingPermissionIsEqualToNew@1100525000(ImportPermission@1100525002 : Record 2000000005) : Boolean;
    VAR
      ExistingPermission@1100525000 : Record 2000000005;
    BEGIN
      IF ExistingPermission.GET(ImportPermission."Role ID",ImportPermission."Object Type",ImportPermission."Object ID") THEN
        EXIT(
          (ImportPermission."Read Permission" = ExistingPermission."Read Permission") AND
          (ImportPermission."Insert Permission" = ExistingPermission."Insert Permission") AND
          (ImportPermission."Modify Permission" = ExistingPermission."Modify Permission") AND
          (ImportPermission."Delete Permission" = ExistingPermission."Delete Permission") AND
          (ImportPermission."Execute Permission" = ExistingPermission."Execute Permission" ));
    END;

    PROCEDURE IsNewRoleGroupPresent@1210190037();
    VAR
      StandardRoleCheckLine@1100529200 : Record 11020657;
      CheckRoleGroup@1210190001 : Record 11020570;
    BEGIN
      WITH "Permission Set Group" DO BEGIN
        IF FINDSET THEN BEGIN
          NoOfRecords := COUNT;
          Counter := 0;
          Window.OPEN(STRSUBSTNO(Text000,Text002,TABLECAPTION,Text004));
          REPEAT
            Counter := Counter + 1;
            UpdateProgressWindow(Counter);
            IF NOT CheckRoleGroup.GET("No.") OR (CheckRoleGroup.Description <> Description) THEN
              StandardRoleCheckLine.AddRoleCheckLine(
                StandardRoleCheckLine.Source::"New Role group",
                "No.",
                '',
                Description,
                '',
                PermRec);
          UNTIL NEXT = 0;
          Window.CLOSE;
        END;
      END;
    END;

    PROCEDURE IsNewRoleGrpRolePresent@1210190041();
    VAR
      StandardRoleCheckLine@1100529200 : Record 11020657;
      CheckRoleGroupRole@1210190001 : Record 11020571;
    BEGIN
      WITH "Perm. Set Group Permission Set" DO BEGIN
        IF FINDSET THEN BEGIN
          NoOfRecords := COUNT;
          Counter := 0;
          Window.OPEN(STRSUBSTNO(Text000,Text002,TABLECAPTION,Text004));
          REPEAT
            Counter := Counter + 1;
            UpdateProgressWindow(Counter);
            IF NOT CheckRoleGroupRole.GET("Permission Set Group No.","Permission Set No.") THEN BEGIN
              "Permission Set Group".GET("Permission Set Group No.");
              "Permission Set".GET("Permission Set No.");
              StandardRoleCheckLine.AddRoleCheckLine(
                StandardRoleCheckLine.Source::"New Role Group Role",
                "Permission Set Group No.",
                "Permission Set No.",
                "Permission Set Group".Description,
                "Permission Set".Name,
                PermRec);
            END;
          UNTIL NEXT = 0;
          Window.CLOSE;
        END;
      END;
    END;

    PROCEDURE IsOldRolePresentInNew@1210190012();
    VAR
      StandardRoleCheckLine@1100529201 : Record 11020657;
      PermissionSet4PS@1100529200 : Record 11229416;
    BEGIN
      IF TempOldPermissionSet4PS.FINDSET THEN BEGIN
        NoOfRecords := PermissionSet4PS.COUNT;
        Counter := 0;
        Window.OPEN(STRSUBSTNO(Text000,Text003,PermissionSet4PS.TABLECAPTION,Text005));
        REPEAT
          Counter := Counter + 1;
          UpdateProgressWindow(Counter);
          IF NOT "Permission Set".GET(TempOldPermissionSet4PS."Permission Set ID") THEN
            StandardRoleCheckLine.AddRoleCheckLine(
              StandardRoleCheckLine.Source::"Existing Role",
              '',
              TempOldPermissionSet4PS."Permission Set ID",
              '',
              TempOldPermissionSet4PS.Name,
              PermRec);
        UNTIL TempOldPermissionSet4PS.NEXT = 0;
        Window.CLOSE;
      END;
    END;

    PROCEDURE IsOldPermissionPresentInNew@1210190016();
    VAR
      StandardRoleCheckLine@1100529200 : Record 11020657;
    BEGIN
      IF TempOldPermissionSet4PS.FINDSET THEN BEGIN
        WITH PermRec DO BEGIN
          NoOfRecords := TempOldPermissionSet4PS.COUNT;
          Counter := 0;
          Window.OPEN(STRSUBSTNO(Text000,Text003,TABLECAPTION,Text005));
          REPEAT
            Counter := Counter + 1;
            UpdateProgressWindow(Counter);
            SETRANGE("Role ID",TempOldPermissionSet4PS."Permission Set ID");
            IF FINDSET THEN BEGIN
              REPEAT
                IF NOT Permission.GET("Role ID","Object Type","Object ID") THEN BEGIN
                  StandardRoleCheckLine.AddRoleCheckLine(
                    StandardRoleCheckLine.Source::"Existing Permission",
                    '',
                    "Role ID",
                    '',
                    TempOldPermissionSet4PS.Name,
                    PermRec);
                END;
              UNTIL NEXT = 0;
            END;
          UNTIL TempOldPermissionSet4PS.NEXT = 0;
          Window.CLOSE;
        END;
      END;
    END;

    PROCEDURE IsOldRoleGroupPresentinNew@1210190014();
    VAR
      StandardRoleCheckLine@1100529200 : Record 11020657;
      lvRoleGroup4PS@1210190000 : Record 11020570;
    BEGIN
      lvRoleGroup4PS.SETRANGE("Standard 4PS",TRUE);
      IF lvRoleGroup4PS.FINDSET THEN BEGIN
        Window.OPEN(STRSUBSTNO(Text000,Text003,lvRoleGroup4PS.TABLECAPTION,Text005));
        NoOfRecords := lvRoleGroup4PS.COUNT;
        Counter := 0;
        REPEAT
          Counter := Counter + 1;
          UpdateProgressWindow(Counter);
          IF NOT "Permission Set Group".GET(lvRoleGroup4PS."No.") THEN
            StandardRoleCheckLine.AddRoleCheckLine(
              StandardRoleCheckLine.Source::"Existing Role Group",
              lvRoleGroup4PS."No.",
              '',
              lvRoleGroup4PS.Description,
              '',
              PermRec);
        UNTIL lvRoleGroup4PS.NEXT = 0;
        Window.CLOSE;
      END;
    END;

    PROCEDURE IsOldRoleGrpRolePresentInNew@1210190013();
    VAR
      StandardRoleCheckLine@1100529200 : Record 11020657;
      lvRoleGroupRole@1210190000 : Record 11020571;
      PermissionSet@1100529201 : Record 2000000004;
    BEGIN
      lvRoleGroupRole.SETRANGE("Standard 4PS",TRUE);
      IF lvRoleGroupRole.FINDSET THEN BEGIN
        Window.OPEN(STRSUBSTNO(Text000,Text003,lvRoleGroupRole.TABLECAPTION,Text005));
        NoOfRecords := lvRoleGroupRole.COUNT;
        Counter := 0;
        REPEAT
          Counter := Counter + 1;
          UpdateProgressWindow(Counter);
          lvRoleGroupRole.CALCFIELDS("Perm. Set Group Description");
          IF NOT "Perm. Set Group Permission Set".GET(lvRoleGroupRole."Permission Set Group No.",lvRoleGroupRole."Permission Set No.") THEN BEGIN
            IF NOT PermissionSet.GET(lvRoleGroupRole."Permission Set No.") THEN
              PermissionSet.INIT;
            StandardRoleCheckLine.AddRoleCheckLine(
              StandardRoleCheckLine.Source::"Existing Role Group Role",
              lvRoleGroupRole."Permission Set Group No.",
              lvRoleGroupRole."Permission Set No.",
              lvRoleGroupRole."Perm. Set Group Description",
              PermissionSet.Name,
              PermRec);
          END;
        UNTIL lvRoleGroupRole.NEXT = 0;
        Window.CLOSE;
      END;
    END;

    PROCEDURE UpdateProgressWindow@9(NewProgress@11012000 : Integer);
    BEGIN
      IF NoOfRecords > 0 THEN BEGIN
        NewProgress := ROUND(NewProgress / NoOfRecords * 100,1);
        IF (NewProgress <> Progress) OR (TIME > LastUpdateTime + 5000) THEN BEGIN
          Window.UPDATE(1,100 * NewProgress);
          LastUpdateTime := TIME;
        END;
        Progress := NewProgress;
      END;
    END;

    BEGIN
    END.
  }
}

