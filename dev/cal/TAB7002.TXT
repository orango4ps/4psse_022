OBJECT Table 7002 Sales Price
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               CentralDataMgt@1100525000 : Codeunit 11012010;
             BEGIN
               IF "Sales Type" = "Sales Type"::"All Customers" THEN
                 "Sales Code" := ''
               ELSE
                 TESTFIELD("Sales Code");
               TESTFIELD("Item No.");

               CentralDataMgt.UpdateSalesPrice(Rec,1,xRec); //**4PS.n
             END;

    OnModify=VAR
               CentralDataMgt@1100525000 : Codeunit 11012010;
             BEGIN
               CentralDataMgt.UpdateSalesPrice(Rec,2,xRec); //**4PS.n
             END;

    OnDelete=VAR
               CentralDataMgt@1100525000 : Codeunit 11012010;
             BEGIN
               CentralDataMgt.UpdateSalesPrice(Rec,4,xRec); //**4PS.n
             END;

    OnRename=VAR
               CentralDataMgt@1100525000 : Codeunit 11012010;
             BEGIN
               IF "Sales Type" <> "Sales Type"::"All Customers" THEN
                 TESTFIELD("Sales Code");
               TESTFIELD("Item No.");

               //**4PS.sn
               IF NOT SkipCentralDataMgtInOnRename THEN
                 CentralDataMgt.UpdateSalesPrice(Rec,3,xRec);
               //**4PS.en
             END;

    CaptionML=[ENU=Sales Price;
               NOR=Salgspris;
               SVE=F”rs„ljningspris];
    LookupPageID=Page7002;
  }
  FIELDS
  {
    { 1   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF "Item No." <> xRec."Item No." THEN BEGIN
                                                                  Item.GET("Item No.");
                                                                  "Unit of Measure Code" := Item."Sales Unit of Measure";
                                                                  "Variant Code" := '';
                                                                END;

                                                                IF "Sales Type" = "Sales Type"::"Customer Price Group" THEN
                                                                  IF CustPriceGr.GET("Sales Code") AND
                                                                     (CustPriceGr."Allow Invoice Disc." = "Allow Invoice Disc.")
                                                                  THEN
                                                                    EXIT;

                                                                UpdateValuesFromItem;
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Varenr.;
                                                              SVE=Artikelnr];
                                                   NotBlank=Yes }
    { 2   ;   ;Sales Code          ;Code20        ;TableRelation=IF (Sales Type=CONST(Customer Price Group)) "Customer Price Group"
                                                                 ELSE IF (Sales Type=CONST(Customer)) Customer
                                                                 ELSE IF (Sales Type=CONST(Campaign)) Campaign;
                                                   OnValidate=BEGIN
                                                                "Sales Code Description" := ''; //**4PS.n

                                                                IF "Sales Code" <> '' THEN
                                                                  CASE "Sales Type" OF
                                                                    "Sales Type"::"All Customers":
                                                                      ERROR(Text001,FIELDCAPTION("Sales Code"));
                                                                    "Sales Type"::"Customer Price Group":
                                                                      BEGIN
                                                                        CustPriceGr.GET("Sales Code");
                                                                        "Price Includes VAT" := CustPriceGr."Price Includes VAT";
                                                                        "VAT Bus. Posting Gr. (Price)" := CustPriceGr."VAT Bus. Posting Gr. (Price)";
                                                                        "Allow Line Disc." := CustPriceGr."Allow Line Disc.";
                                                                        "Allow Invoice Disc." := CustPriceGr."Allow Invoice Disc.";
                                                                        "Sales Code Description" := CustPriceGr.Description; //**4PS.n
                                                                      END;
                                                                    "Sales Type"::Customer:
                                                                      BEGIN
                                                                        Cust.GET("Sales Code");
                                                                        "Currency Code" := Cust."Currency Code";
                                                                        "Price Includes VAT" := Cust."Prices Including VAT";
                                                                        "VAT Bus. Posting Gr. (Price)" := Cust."VAT Bus. Posting Group";
                                                                        "Allow Line Disc." := Cust."Allow Line Disc.";
                                                                        "Sales Code Description" := Cust.Name; //**4PS.n
                                                                      END;
                                                                    "Sales Type"::Campaign:
                                                                      BEGIN
                                                                        Campaign.GET("Sales Code");
                                                                        "Starting Date" := Campaign."Starting Date";
                                                                        "Ending Date" := Campaign."Ending Date";
                                                                        "Sales Code Description" := Campaign.Description; //**4PS.n
                                                                      END;
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Sales Code;
                                                              NOR=Salgskode;
                                                              SVE=F”rs.kod] }
    { 3   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod] }
    { 4   ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                IF ("Starting Date" > "Ending Date") AND ("Ending Date" <> 0D) THEN
                                                                  ERROR(Text000,FIELDCAPTION("Starting Date"),FIELDCAPTION("Ending Date"));

                                                                //**4PS Call C003583 sn
                                                                IF "Starting Date" = 0D THEN
                                                                  IntegerOfDate := 0
                                                                ELSE
                                                                  IntegerOfDate := "Starting Date" - 010101D;
                                                                "Reverse Starting Date" := -1 * IntegerOfDate;
                                                                //**4PS Call C003583 en

                                                                IF CurrFieldNo = 0 THEN
                                                                  EXIT;

                                                                IF "Starting Date" <> 0D THEN
                                                                  IF "Sales Type" = "Sales Type"::Campaign THEN
                                                                    ERROR(Text002,"Sales Type");
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum] }
    { 5   ;   ;Unit Price          ;Decimal       ;CaptionML=[ENU=Unit Price;
                                                              NOR=Salgspris;
                                                              SVE=A-pris];
                                                   MinValue=0;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Currency Code" }
    { 7   ;   ;Price Includes VAT  ;Boolean       ;CaptionML=[ENU=Price Includes VAT;
                                                              NOR=Pris inkl. mva.;
                                                              SVE=Pris inklusive moms] }
    { 10  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Invoice Disc.;
                                                              NOR=Tillat fakturarabatt;
                                                              SVE=Ber„kna fakturarabatt] }
    { 11  ;   ;VAT Bus. Posting Gr. (Price);Code20;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Gr. (Price);
                                                              NOR=Mva-bokf.gruppe - firma (pris);
                                                              SVE=Moms r”relsebokf.mall prisgr.] }
    { 13  ;   ;Sales Type          ;Option        ;OnValidate=BEGIN
                                                                IF "Sales Type" <> xRec."Sales Type" THEN BEGIN
                                                                  VALIDATE("Sales Code",'');
                                                                  UpdateValuesFromItem;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sales Type;
                                                              NOR=Salgstype;
                                                              SVE=F”rs.typ];
                                                   OptionCaptionML=[ENU=Customer,Customer Price Group,All Customers,Campaign;
                                                                    NOR=Kunde,Kundeprisgruppe,Alle kunder,Kampanje;
                                                                    SVE=Kund,Kundprisgrupp,Alla kunder,Kampanj];
                                                   OptionString=Customer,Customer Price Group,All Customers,Campaign }
    { 14  ;   ;Minimum Quantity    ;Decimal       ;CaptionML=[ENU=Minimum Quantity;
                                                              NOR=Minimumsantall;
                                                              SVE=Minimiantal];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 15  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                //**4PS Call C003583 sn
                                                                IF "Ending Date" = 0D THEN
                                                                  IntegerOfDate := 0
                                                                ELSE
                                                                  IntegerOfDate := "Ending Date" - 010101D;
                                                                "Reverse Ending Date" := -1 * IntegerOfDate;
                                                                //**4PS Call C003583 en

                                                                IF CurrFieldNo = 0 THEN
                                                                  EXIT;

                                                                VALIDATE("Starting Date");

                                                                IF "Ending Date" <> 0D THEN
                                                                  IF "Sales Type" = "Sales Type"::Campaign THEN
                                                                    ERROR(Text002,"Sales Type");
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              NOR=Sluttdato;
                                                              SVE=Slutdatum] }
    { 5400;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              NOR=Enhetskode;
                                                              SVE=Enhetskod] }
    { 5700;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              NOR=Variantkode;
                                                              SVE=Variantkod] }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Line Disc.;
                                                              NOR=Tillat linjerabatt;
                                                              SVE=Till†t radrabatt] }
    { 11012000;;Item Description   ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item.Description WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=[ENU=Item Description;
                                                              SVE=Artikelbeskrivning];
                                                   Editable=No }
    { 11012010;;Item Description 2 ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item."Description 2" WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=[ENU=Item Description 2;
                                                              SVE=Artikelbeskrivning 2];
                                                   Editable=No }
    { 11012020;;Sales Code Description;Text100    ;CaptionML=[ENU=Sales Code Description;
                                                              SVE=F”rs.kod beskrivning];
                                                   Editable=No }
    { 11012030;;Variant Code Description;Text100  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Variant".Description WHERE (Code=FIELD(Variant Code),
                                                                                                        Item No.=FIELD(Item No.)));
                                                   CaptionML=ENU=Variant Code Description;
                                                   Editable=No }
    { 11012040;;Currency Code Description;Text30  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Currency.Description WHERE (Code=FIELD(Currency Code)));
                                                   CaptionML=ENU=Currency Code Description;
                                                   Editable=No }
    { 11012050;;Unit of Measure Description;Text50;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Unit of Measure".Description WHERE (Code=FIELD(Unit of Measure Code)));
                                                   CaptionML=[ENU=Unit of Measure Description;
                                                              SVE=Enhetsbeskrivning];
                                                   Editable=No }
    { 11012060;;Reverse Starting Date;Integer     ;CaptionML=ENU=Reverse Starting Date }
    { 11012061;;Reverse Ending Date;Integer       ;CaptionML=ENU=Reverse Ending Date }
    { 11012070;;Item Card Unit Cost;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item."Unit Cost" WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=ENU=Item Card  Unit Cost;
                                                   MinValue=0;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 11012080;;Item Card Unit Price;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item."Unit Price" WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=ENU=Item Card Unit Price;
                                                   MinValue=0;
                                                   Editable=No;
                                                   AutoFormatType=2 }
  }
  KEYS
  {
    {    ;Item No.,Sales Type,Sales Code,Starting Date,Currency Code,Variant Code,Unit of Measure Code,Minimum Quantity;
                                                   Clustered=Yes }
    {    ;Sales Type,Sales Code,Item No.,Starting Date,Currency Code,Variant Code,Unit of Measure Code,Minimum Quantity }
    {    ;Item No.,Sales Type,Sales Code,Reverse Starting Date,Currency Code,Variant Code,Unit of Measure Code,Minimum Quantity }
    {    ;Sales Type,Sales Code,Item No.,Reverse Starting Date,Currency Code,Variant Code,Unit of Measure Code,Minimum Quantity }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Sales Type,Sales Code,Item No.,Starting Date,Unit Price,Ending Date }
  }
  CODE
  {
    VAR
      CustPriceGr@1000 : Record 6;
      Text000@1001 : TextConst 'ENU=%1 cannot be after %2;NOR=%1 kan ikke komme etter %2;SVE=%1 kan inte vara efter %2';
      Cust@1002 : Record 18;
      Text001@1003 : TextConst 'ENU=%1 must be blank.;NOR=%1 m† v‘re tom.;SVE=%1 m†ste vara blank.';
      Campaign@1005 : Record 11072034;
      Item@1004 : Record 27;
      Text002@1006 : TextConst 'ENU="If Sales Type = %1, then you can only change Starting Date and Ending Date from the Campaign Card.";NOR="Hvis salgstype = %1, kan du bare endre startdato og sluttdato fra kampanjekortet."';
      IntegerOfDate@1100525000 : Duration;
      SkipCentralDataMgtInOnRename@1100528401 : Boolean;

    LOCAL PROCEDURE UpdateValuesFromItem@1();
    BEGIN
      IF Item.GET("Item No.") THEN BEGIN
        "Allow Invoice Disc." := Item."Allow Invoice Disc.";
        IF "Sales Type" = "Sales Type"::"All Customers" THEN BEGIN
          "Price Includes VAT" := Item."Price Includes VAT";
          "VAT Bus. Posting Gr. (Price)" := Item."VAT Bus. Posting Gr. (Price)";
        END;
      END;
    END;

    [External]
    PROCEDURE CopySalesPriceToCustomersSalesPrice@3(VAR SalesPrice@1000 : Record 7002;CustNo@1002 : Code[20]);
    VAR
      NewSalesPrice@1001 : Record 7002;
    BEGIN
      IF SalesPrice.FINDSET THEN
        REPEAT
          NewSalesPrice := SalesPrice;
          NewSalesPrice."Sales Type" := NewSalesPrice."Sales Type"::Customer;
          NewSalesPrice."Sales Code" := CustNo;
          OnBeforeNewSalesPriceInsert(NewSalesPrice,SalesPrice);
          IF NewSalesPrice.INSERT THEN;
        UNTIL SalesPrice.NEXT = 0;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeNewSalesPriceInsert@2(VAR NewSalesPrice@1000 : Record 7002;SalesPrice@1001 : Record 7002);
    BEGIN
    END;

    PROCEDURE SetSkipCentralDataMgtInOnRename@1100528700(Value@1100528700 : Boolean);
    BEGIN
      //**4PS
      SkipCentralDataMgtInOnRename := Value;
    END;

    BEGIN
    END.
  }
}

