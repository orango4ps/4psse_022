OBJECT Codeunit 11128505 E-Invoice Check Reminder
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVNO8.00 (10614+10618);
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CompanyInfo@1080000 : Record 79;
      GLSetup@1080001 : Record 98;
      EInvoiceDocumentEncode@1080002 : Codeunit 11128501;
      GLSetupRead@1080003 : Boolean;
      CompanyInfoRead@1080004 : Boolean;
      EmptyDescErr@1080006 : TextConst 'ENU=The Reminder %1 contains lines in which the Type and the No. are specified, but the Description is empty. This is not allowed for an E-Invoice document which might be created from the posted document.;NOR=P†minnelsen %1 inneholder linjer der typen og nummeret er angitt, men der beskrivelsen er tom. Dette er ikke tillatt for et e-fakturadokument som kan opprettes fra det bokf›rte dokumentet.';
      EmptyFieldsQst@1080007 : TextConst 'ENU=The Reminder %1 contains lines in which either the Type or the No. is empty. Lines that contain these empty fields are not taken into account when you create an E-Invoice document. Do you want to continue?;NOR=P†minnelsen %1 inneholder linjer der typen og nummeret er tom. Linjer som inneholder disse tomme feltene, tas ikke i betraktning n†r du oppretter et e-fakturadokument. Vil du fortsette?';
      InterruptedIssuanceErr@1080009 : TextConst 'ENU=The issuing has been interrupted to respect the warning.;NOR=Tilldelingen ble avbrutt pga advarselen.;SVE=Tilldelningen har avbrutits pga varningen.';
      InvalidPathErr@1080101 : TextConst 'ENU=does not contain a valid path;NOR=inneholder ikke en gyldig bane;SVE=inneh†ller inte en giltig s”kv„g';

    LOCAL PROCEDURE CheckReminder@1000000000(lRec@1000000000 : Record 295);
    BEGIN
      WITH lRec DO BEGIN
        IF "E-Invoice" THEN BEGIN
          ReadCompanyInfo;
          ReadGLSetup;

          "Currency Code" := EInvoiceDocumentEncode.GetEInvoiceCurrencyCode("Currency Code");
          CheckCompanyInfo;

          TESTFIELD(Name);
          TESTFIELD(Address);
          TESTFIELD(City);
          TESTFIELD("Post Code");
          TESTFIELD("Country/Region Code");
          EInvoiceDocumentEncode.GetEInvoiceCountryRegionCode("Country/Region Code");
          TESTFIELD("VAT Registration No.");
          TESTFIELD("Your Reference");

          CheckReminderLines(lRec);
        END;
      END;
    END;

    LOCAL PROCEDURE ReadCompanyInfo@1080010();
    BEGIN
      IF NOT CompanyInfoRead THEN BEGIN
        CompanyInfo.GET;
        CompanyInfoRead := TRUE;
      END;
    END;

    LOCAL PROCEDURE ReadGLSetup@1080011();
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
    END;

    LOCAL PROCEDURE CheckReminderLines@1080012(ReminderHeader@1060000 : Record 295);
    VAR
      ReminderLine@1060001 : Record 296;
      EmptyLineFound@1060002 : Boolean;
    BEGIN
      EmptyLineFound := FALSE;
      WITH ReminderLine DO BEGIN
        RESET;
        SETRANGE("Reminder No.",ReminderHeader."No.");
        IF FINDSET THEN
          REPEAT
            IF Description = '' THEN
              IF (Type <> Type::" ") AND ("No." <> '') THEN
                ERROR(EmptyDescErr,"Reminder No.");
            IF (Type = Type::" ") OR ("No." = '') THEN
              EmptyLineFound := TRUE;
          UNTIL (NEXT = 0);

        IF EmptyLineFound THEN
          IF NOT CONFIRM(EmptyFieldsQst,TRUE,"Reminder No.") THEN
            ERROR(InterruptedIssuanceErr);
      END;
    END;

    PROCEDURE CheckIssReminder@1000000001(lRec@1000000000 : Record 297);
    BEGIN
      CheckCompanyInfo;
      CheckSalesSetup;
      CheckFinChargeMemoHeader(lRec);
    END;

    LOCAL PROCEDURE CheckCompanyInfo@1080000();
    VAR
      CompanyInfo@1080000 : Record 79;
    BEGIN
      CompanyInfo.GET;

      CompanyInfo.TESTFIELD(Name);
      CompanyInfo.TESTFIELD(Address);
      CompanyInfo.TESTFIELD(City);
      CompanyInfo.TESTFIELD("Post Code");
      CompanyInfo.TESTFIELD("Country/Region Code");
      EInvoiceDocumentEncode.GetEInvoiceCountryRegionCode(CompanyInfo."Country/Region Code");
      CompanyInfo.TESTFIELD("VAT Registration No.");
    END;

    LOCAL PROCEDURE CheckSalesSetup@1080001();
    VAR
      SalesSetup@1080001 : Record 311;
      FileMgt@1080000 : Codeunit 419;
    BEGIN
      SalesSetup.GET;
      SalesSetup.TESTFIELD("E-Invoice Reminder Path");
      IF NOT FileMgt.DirectoryExistsOnDotNetClient(SalesSetup."E-Invoice Reminder Path") THEN
        SalesSetup.FIELDERROR("E-Invoice Reminder Path",InvalidPathErr);
    END;

    LOCAL PROCEDURE CheckFinChargeMemoHeader@1080002(IssuedReminderHeader@1080000 : Record 297);
    BEGIN
      WITH IssuedReminderHeader DO BEGIN
        TESTFIELD(Name);
        TESTFIELD(Address);
        TESTFIELD(City);
        TESTFIELD("Post Code");
        TESTFIELD("Country/Region Code");
        EInvoiceDocumentEncode.GetEInvoiceCountryRegionCode("Country/Region Code");
      END;
    END;

    BEGIN
    END.
  }
}

