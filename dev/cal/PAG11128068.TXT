OBJECT Page 11128068 VP Payment Suggestion Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=PE7.01 (12048865),4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=VP Payment Suggestion;
               SVE=LB Utbetalningsf”rslag];
    MultipleNewLines=Yes;
    SourceTable=Table11128065;
    DelayedInsert=Yes;
    DataCaptionFields=Field50000;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       gPayDateIsHoliday := gVPMgt.DayIsBankHoliday("Due Date/Payment Date");
                       gNextPayDateIsHoliday := gVPMgt.DayIsBankHoliday("Due Date Next Payment");
                       gIsNotInvoce := SetIsNotAnInvoice;
                     END;

    OnNewRecord=BEGIN
                  Modi := 0;
                END;

    OnInsertRecord=BEGIN
                     IF Modi = 0 THEN BEGIN
                       Modi := 1;
                       CurrPage.SAVERECORD;
                       VPType.GET("Giro Type Code");
                       FactBoxPage.CalcRemainingAmount(VPType);
                       CurrPage.UPDATE;
                     END;
                   END;

    OnModifyRecord=BEGIN
                     IF Modi = 0 THEN BEGIN
                       Modi := 1;
                       CurrPage.SAVERECORD;
                       VPType.GET("Giro Type Code");
                       FactBoxPage.CalcRemainingAmount(VPType);
                       CurrPage.UPDATE;
                     END;
                   END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     VPType.GET("Giro Type Code");
                     FactBoxPage.CalcRemainingAmount(VPType);
                     CurrPage.UPDATE;
                   END;

    ActionList=ACTIONS
    {
      { 12047958;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 12047959;1   ;Action    ;
                      Name=Page Card;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Vendor/Customer;
                                 SVE=Leverant”r/kund];
                      Image=Vendor;
                      OnAction=VAR
                                 Vend@12047958 : Record 23;
                                 Cust@12047959 : Record 18;
                               BEGIN
                                 CASE Type OF
                                   Type::Vendor :
                                     BEGIN
                                       Vend.SETRANGE("No.","No.");
                                       PAGE.RUN(PAGE::"Vendor Card",Vend);
                                     END;
                                   Type::Customer :
                                     BEGIN
                                       Cust.SETRANGE("No.","No.");
                                       PAGE.RUN(PAGE::"Customer Card",Cust);
                                     END;
                                   ELSE
                                     ERROR('"Source Type" "%1" st”ds ej', Type);
                                 END;
                               END;
                                }
      { 1100570021;1 ;Action    ;
                      Name=Page Bank Account List;
                      CaptionML=[ENU=Bank Account;
                                 NOR=Bankkonto;
                                 SVE=Bankkonto];
                      Image=BankAccount;
                      OnAction=VAR
                                 VendorBankAccount@12047958 : Record 288;
                                 CustomerBankAccount@12047959 : Record 287;
                               BEGIN
                                 CASE Type OF
                                   Type::Vendor :
                                     BEGIN
                                       VendorBankAccount.SETRANGE("Vendor No.","No.");
                                       VendorBankAccount.SETRANGE(Code,"Recipient Bank Account");
                                       PAGE.RUN(PAGE::"Vendor Bank Account Card",VendorBankAccount);
                                     END;
                                   Type::Customer :
                                     BEGIN
                                       CustomerBankAccount.SETRANGE("Customer No.","No.");
                                       CustomerBankAccount.SETRANGE(Code,"Recipient Bank Account");
                                       PAGE.RUN(PAGE::"Customer Bank Account Card",CustomerBankAccount);
                                     END;
                                   ELSE
                                     ERROR('"Source Type" "%1" st”ds ej', Type);
                                 END;
                               END;
                                }
      { 12047964;1   ;ActionGroup;
                      CaptionML=[ENU=Merge;
                                 SVE=Samsortering];
                      Image=Reconcile }
      { 12047965;2   ;Separator  }
      { 1100570005;2 ;Action    ;
                      Name=Merge Payment;
                      CaptionML=[ENU=Merge Payment;
                                 SVE=Samsortera betalning];
                      Image=Relationship;
                      OnAction=VAR
                                 VPMgt@1100570000 : Codeunit 11128061;
                                 PaymntSuggLine@1100570001 : Record 11128065;
                               BEGIN
                                 PaymntSuggLine := Rec;
                                 CurrPage.SETSELECTIONFILTER(PaymntSuggLine);
                                 VPMgt.MergePayments(PaymntSuggLine);
                               END;
                                }
      { 1100570015;2 ;Action    ;
                      Name=Demerge Payments;
                      CaptionML=[ENU=Demerge Payments;
                                 SVE=Ta bort samsortering];
                      Image=Cancel;
                      OnAction=VAR
                                 VPMgt@1100570000 : Codeunit 11128061;
                                 PaymntSuggLine@1100570001 : Record 11128065;
                               BEGIN
                                 PaymntSuggLine := Rec;
                                 VPMgt.DeMergePayments(PaymntSuggLine);
                               END;
                                }
      { 1100570016;2 ;Action    ;
                      Name=Merge All Lines;
                      CaptionML=[ENU=Merge &All Lines;
                                 SVE=Samsortera &alla rader];
                      Image=RefreshText;
                      OnAction=VAR
                                 VPMgt@1100570000 : Codeunit 11128061;
                               BEGIN
                                 VPMgt.AutoMergePayments(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100570000;0;Container;
                ContainerType=ContentArea }

    { 1100570001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100570017;2;Field  ;
                SourceExpr=Type }

    { 1100570012;2;Field  ;
                SourceExpr="No." }

    { 1100570013;2;Field  ;
                SourceExpr="Ledger Entry No.";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100570011;2;Field  ;
                SourceExpr=Name;
                Editable=false;
                Style=Unfavorable;
                StyleExpr=gIsNotInvoce;
                OnAssistEdit=BEGIN
                               IF (Type = Type::Vendor) AND Vendor.GET("No.") THEN
                                 MESSAGE(Vendor.Name + Vendor."Name 2");
                             END;
                              }

    { 1100570010;2;Field  ;
                SourceExpr="Invoice/Credit Memo No.";
                Editable=false;
                Style=Unfavorable;
                StyleExpr=gIsNotInvoce }

    { 1100570008;2;Field  ;
                SourceExpr=Description;
                Editable=false;
                Style=Unfavorable;
                StyleExpr=gIsNotInvoce }

    { 1100570009;2;Field  ;
                SourceExpr="Due Date/Payment Date";
                Style=Unfavorable;
                StyleExpr=gPayDateIsHoliday;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 12047963;2;Field    ;
                SourceExpr="Vendor Due Date";
                Visible=false }

    { 12047961;2;Field    ;
                SourceExpr="Vendor Pmt. Discount Date";
                Visible=false }

    { 12047962;2;Field    ;
                SourceExpr="Vendor Rem. Pmt. Disc. Poss.";
                Visible=false }

    { 1100570018;2;Field  ;
                SourceExpr="Customer Pmt. Discount Date";
                Visible=FALSE }

    { 1100570019;2;Field  ;
                SourceExpr="Customer Rem. Pmt. Disc. Poss.";
                Visible=FALSE }

    { 1100570020;2;Field  ;
                SourceExpr="Customer Due Date";
                Visible=FALSE }

    { 1100570007;2;Field  ;
                SourceExpr="Currency Code";
                Editable=false }

    { 1100570006;2;Field  ;
                SourceExpr="Remaining Amount";
                OnValidate=BEGIN
                             Modi := 0;
                           END;
                            }

    { 1100570003;2;Field  ;
                SourceExpr="Due Date Next Payment";
                Style=Unfavorable;
                StyleExpr=gNextPayDateIsHoliday;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100570002;2;Field  ;
                SourceExpr="Code for Bank of Sweden" }

    { 1100570014;2;Field  ;
                SourceExpr="Currency Account" }

    { 1100570004;2;Field  ;
                SourceExpr="Merging No." }

    { 12047960;2;Field    ;
                CaptionML=[ENU=Initial Due Date;
                           NOR=Forste forfallsdato;
                           SVE=Ursprungligt f”rfallodatum];
                SourceExpr=gVPMgt.GetInitalDueDateFromVPSuggestionLine(Rec);
                Visible=FALSE;
                Editable=FALSE }

    { 12047966;2;Field    ;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FALSE }

    { 12047967;2;Field    ;
                SourceExpr="External Document No.";
                Visible=FALSE;
                Editable=FALSE }

    { 12047968;2;Field    ;
                SourceExpr="Recipient Bank Account";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      gVPMgt@1100570001 : Codeunit 11128061;
      gPayDateIsHoliday@1100570000 : Boolean INDATASET;
      gNextPayDateIsHoliday@1100570002 : Boolean;
      gIsNotInvoce@12047958 : Boolean;
      Vendor@12047959 : Record 23;
      FactBoxPage@1100583000 : Page 11128027;
      VPSugg@1100583001 : Page 11128063;
      VPType@1100583002 : Record 11128061;
      Modi@1100583003 : Integer;

    LOCAL PROCEDURE SetIsNotAnInvoice@12047958() : Boolean;
    VAR
      CustLedgerEntry@12047958 : Record 21;
      VendorLedgerEntry@12047959 : Record 25;
    BEGIN
      CASE Type OF
        Type::Vendor:
          BEGIN
            IF NOT VendorLedgerEntry.GET("Ledger Entry No.") THEN
              EXIT(FALSE);
            EXIT(VendorLedgerEntry."Document Type" <> VendorLedgerEntry."Document Type"::Invoice);
          END;
        Type::Customer:
          BEGIN
            IF NOT CustLedgerEntry.GET("Ledger Entry No.") THEN
              EXIT(FALSE);
            EXIT(CustLedgerEntry."Document Type" <> CustLedgerEntry."Document Type"::Invoice);
          END;
        ELSE
          EXIT(FALSE);
      END;
    END;

    BEGIN
    {
      PEB *** Begin ***
      PEB0091 Banking
      PEB
      PEB *** End ***
      190214 ORANGO.PR Updating FactBox
    }
    END.
  }
}

