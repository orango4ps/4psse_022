OBJECT Codeunit 450 Job Queue Error Handler
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=BEGIN
            IF NOT DoesExistLocked THEN
              EXIT;
            SetError(GETLASTERRORTEXT);
            LogError(Rec);
          END;

  }
  CODE
  {

    LOCAL PROCEDURE LogError@1(VAR JobQueueEntry@1000 : Record 472);
    VAR
      JobQueueLogEntry@1002 : Record 474;
    BEGIN
      OnBeforeLogError(JobQueueLogEntry,JobQueueEntry);

      WITH JobQueueLogEntry DO BEGIN
        SETRANGE(ID,JobQueueEntry.ID);
        SETRANGE(Status,Status::"In Process");
        IF FINDFIRST THEN BEGIN
          SetErrorMessage(JobQueueEntry.GetErrorMessage);
          SetErrorCallStack(GETLASTERRORCALLSTACK);
          Status := Status::Error;
          MODIFY;
        END ELSE BEGIN
          JobQueueEntry.InsertLogEntry(JobQueueLogEntry);
          JobQueueEntry.FinalizeLogEntry(JobQueueLogEntry);
        END;
      END;
      OnAfterLogError(JobQueueEntry);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterLogError@3(VAR JobQueueEntry@1000 : Record 472);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeLogError@2(VAR JobQueueLogEntry@1001 : Record 474;VAR JobQueueEntry@1000 : Record 472);
    BEGIN
    END;

    BEGIN
    END.
  }
}

