OBJECT Codeunit 11012894 Date Decimal Filter Parser
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1100528700 : TextConst 'DEU=Filter "%1" ist nicht gÅltig.;ENU=Filter "%1" is not valid.;NLD=Filter "%1" is niet geldig.';

    PROCEDURE ParseDateFilter@1100528700(VAR Value@1100528700 : Text;VAR Date1@1100528701 : Date;VAR Date2@1100528702 : Date;VAR Operation@1100528703 : Text) : Boolean;
    BEGIN
      IF ParseDateFilterUsingOperator(Value, Date1, Date2, Operation, '<>') THEN
        EXIT(TRUE)
      ELSE IF ParseDateFilterUsingOperator(Value, Date1, Date2, Operation, '<=') THEN
        EXIT(TRUE)
      ELSE IF ParseDateFilterUsingOperator(Value, Date1, Date2, Operation, '>=') THEN
        EXIT(TRUE)
      ELSE IF ParseDateFilterUsingOperator(Value, Date1, Date2, Operation, '<') THEN
        EXIT(TRUE)
      ELSE IF ParseDateFilterUsingOperator(Value, Date1, Date2, Operation, '>') THEN
        EXIT(TRUE)
      ELSE IF ParseDateFilterUsingOperator(Value, Date1, Date2, Operation, '=') THEN
        EXIT(TRUE)
      ELSE IF ParseDateFilterUsingOperator(Value, Date1, Date2, Operation, '..') THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    LOCAL PROCEDURE ParseDateFilterUsingOperator@1100528719(VAR Value@1100528703 : Text;VAR Date1@1100528702 : Date;VAR Date2@1100528701 : Date;VAR OperationVar@1100528708 : Text;Operation@1100528700 : Text) : Boolean;
    VAR
      OperatorPosition@1100528707 : Integer;
      OperatorLength@1100528706 : Integer;
      Date1Text@1100528705 : Text;
      Date2Text@1100528704 : Text;
    BEGIN
      OperatorPosition := STRPOS(Value, Operation);
      OperatorLength := STRLEN(Operation);

      IF OperatorPosition < 1 THEN
        EXIT(FALSE);

      IF OperatorPosition > 1 THEN
        Date1Text := COPYSTR(Value, 1, OperatorPosition - 1);
      Date2Text := COPYSTR(Value, OperatorPosition + OperatorLength);

      IF (Operation <> '..') AND (Date1Text <> '') THEN
        ERROR(Text001, Value);

      EVALUATE(Date1, Date1Text);
      EVALUATE(Date2, Date2Text);
      OperationVar := Operation;
      Value := STRSUBSTNO('%1%2%3', Date1, OperationVar, Date2);
      EXIT(TRUE);
    END;

    PROCEDURE ParseDecimalFilter@1100528731(VAR Value@1100528700 : Text;VAR Decimal1@1100528701 : Decimal;VAR Decimal2@1100528702 : Decimal;VAR Operation@1100528703 : Text) : Boolean;
    BEGIN
      IF ParseDecimalFilterUsingOperator(Value, Decimal1, Decimal2, Operation, '<>') THEN
        EXIT(TRUE)
      ELSE IF ParseDecimalFilterUsingOperator(Value, Decimal1, Decimal2, Operation, '<=') THEN
        EXIT(TRUE)
      ELSE IF ParseDecimalFilterUsingOperator(Value, Decimal1, Decimal2, Operation, '>=') THEN
        EXIT(TRUE)
      ELSE IF ParseDecimalFilterUsingOperator(Value, Decimal1, Decimal2, Operation, '<') THEN
        EXIT(TRUE)
      ELSE IF ParseDecimalFilterUsingOperator(Value, Decimal1, Decimal2, Operation, '>') THEN
        EXIT(TRUE)
      ELSE IF ParseDecimalFilterUsingOperator(Value, Decimal1, Decimal2, Operation, '=') THEN
        EXIT(TRUE)
      ELSE IF ParseDecimalFilterUsingOperator(Value, Decimal1, Decimal2, Operation, '..') THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    LOCAL PROCEDURE ParseDecimalFilterUsingOperator@1100528730(VAR Value@1100528703 : Text;VAR Decimal1@1100528702 : Decimal;VAR Decimal2@1100528701 : Decimal;VAR OperationVar@1100528708 : Text;Operation@1100528700 : Text) : Boolean;
    VAR
      OperatorPosition@1100528707 : Integer;
      OperatorLength@1100528706 : Integer;
      Decimal1Text@1100528705 : Text;
      Decimal2Text@1100528704 : Text;
    BEGIN
      OperatorPosition := STRPOS(Value, Operation);
      OperatorLength := STRLEN(Operation);

      IF OperatorPosition < 1 THEN
        EXIT(FALSE);

      IF OperatorPosition > 1 THEN
        Decimal1Text := COPYSTR(Value, 1, OperatorPosition - 1);
      Decimal2Text := COPYSTR(Value, OperatorPosition + OperatorLength);

      OperationVar := Operation;
      IF OperationVar = '..' THEN BEGIN
        IF Decimal1Text = '' THEN
          OperationVar := '<='
        ELSE IF Decimal2Text = '' THEN BEGIN
          OperationVar := '>=';
          Decimal2Text := Decimal1Text;
          Decimal1 := 0;
        END;
      END ELSE IF Decimal1Text <> '' THEN
        ERROR(Text001, Value);

      IF OperationVar = '..' THEN
        EVALUATE(Decimal1, Decimal1Text);
      EVALUATE(Decimal2, Decimal2Text);

      IF OperationVar = '..' THEN
        Value := STRSUBSTNO('%1%2%3', Decimal1, OperationVar, Decimal2)
      ELSE
        Value := STRSUBSTNO('%1%2', OperationVar, Decimal2);

      EXIT(TRUE);
    END;

    PROCEDURE DateFilterToText@1100528701(Date1@1100528700 : Date;Operator@1100528701 : Text;Date2@1100528702 : Date) : Text;
    BEGIN
      EXIT(STRSUBSTNO('%1%2%3', Date1, Operator, Date2));
    END;

    PROCEDURE DecimalFilterToText@1100528702(Decimal1@1100528700 : Decimal;Operator@1100528701 : Text;Decimal2@1100528702 : Decimal) : Text;
    BEGIN
      IF Operator = '..' THEN
        EXIT(STRSUBSTNO('%1%2%3', Decimal1, Operator, Decimal2))
      ELSE
        EXIT(STRSUBSTNO('%1%2', Operator, Decimal2));
    END;

    BEGIN
    END.
  }
}

