OBJECT Page 522 View Applied Entries
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 339=rimd;
    CaptionML=[ENU=View Applied Entries;
               NOR=Vis utlignede poster;
               SVE=Visa kopplade transaktioner];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=Yes;
    SourceTable=Table32;
    DataCaptionExpr=CaptionExpr;
    PageType=List;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             RemoveAppButtonVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 CurrPage.LOOKUPMODE := NOT ShowApplied;
                 RemoveAppButtonVisible := ShowApplied;
                 Show;
               END;

    OnFindRecord=BEGIN
                   EXIT(FIND(Which));
                 END;

    OnAfterGetRecord=BEGIN
                       GetApplQty;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                END;

    OnInsertRecord=VAR
                     xRecRef@1100000999 : RecordRef;
                   BEGIN
                     //**4PS Generated Code. Do Not Change.sn05
                     xRecRef.GETTABLE(xRec);
                     DPA_SetDefaultDpmtFromNoSeries(xRecRef);
                     //**4PS Generated Code.en05
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 36      ;1   ;ActionGroup;
                      CaptionML=[ENU=Ent&ry;
                                 NOR=P&ost;
                                 SVE=T&ransaktion];
                      Image=Entry }
      { 37      ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 NOR=Dimensjoner;
                                 SVE=Dimensioner];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 NOR=Vis eller rediger dimensjoner, for eksempel omr†de, prosjekt eller avdeling, som du kan tilordne til salgs- og kj›psdokumenter for † distribuere kostnader og analysere transaksjonshistorikk.;
                                 SVE=Visa eller redigera dimensioner, till exempel omr†de, projekt eller avdelning, som du kan tilldela f”rs„ljnings- och ink”psdokument f”r att f”rdela kostnader och analysera transaktionshistorik.];
                      ApplicationArea=#Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 48      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=&Value Entries;
                                 NOR=&Verdiposter;
                                 SVE=&V„rdetransaktioner];
                      ToolTipML=[ENU=View the history of posted amounts that affect the value of the item. Value entries are created for every transaction with the item.;
                                 NOR=Vis historikken for bokf›rte bel›p som p†virker vareverdien. Verdiposter opprettes for hver transaksjon med varen.;
                                 SVE=Visa historiken f”r bokf”rda belopp som p†verkar artikelns v„rde. V„rdetransaktioner skapas f”r varje transaktion med artikeln.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 5802;
                      RunPageView=SORTING(Item Ledger Entry No.);
                      RunPageLink=Item Ledger Entry No.=FIELD(Entry No.);
                      Image=ValueLedger }
      { 38      ;2   ;Action    ;
                      AccessByPermission=TableData 27=R;
                      CaptionML=[ENU=Reservation Entries;
                                 NOR=Reservasjonsposter;
                                 SVE=Reservationstransaktioner];
                      ToolTipML=[ENU=View the entries for every reservation that is made, either manually or automatically.;
                                 NOR=Vis postene for hver reservasjon som er foretatt, enten manuelt av deg eller automatisk.;
                                 SVE=Visa transaktionerna f”r varje reservation som har gjorts manuellt eller automatiskt.];
                      ApplicationArea=#Reservation;
                      Image=ReservationLedger;
                      OnAction=BEGIN
                                 ShowReservationEntries(TRUE);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1       ;1   ;Action    ;
                      Name=RemoveAppButton;
                      CaptionML=[ENU=Re&move Application;
                                 NOR=&Fjern utligning;
                                 SVE=Ta bort koppli&ng];
                      ToolTipML=[ENU=Remove item applications.;
                                 NOR=Fjern vareutligninger.;
                                 SVE=Ta bort artikelkopplingar.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=RemoveAppButtonVisible;
                      Image=Cancel;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 UnapplyRec;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the entry's posting date.;
                           NOR=Angir postens bokf›ringsdato.;
                           SVE=Anger transaktionens bokf”ringsdatum.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date" }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which type of transaction that the entry is created from.;
                           NOR=Angir hvilken type transaksjon posten er opprettet fra.;
                           SVE=Anger vilken typ av transaktion som transaktionen skapas fr†n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Entry Type" }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies what type of document was posted to create the item ledger entry.;
                           NOR=Angir hvilken type bilag som ble bokf›rt for † opprette vareposten.;
                           SVE=Anger vilken typ av dokument som bokf”rdes f”r att skapa artikeltransaktionen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type" }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the document number on the entry. The document is the voucher that the entry was based on, for example, a receipt.;
                           NOR=Angir dokumentnummeret i posten. Dokumentet er kvitteringen p† at posten for eksempel er basert p† et mottak.;
                           SVE=Anger transaktionens dokumentnummer. Dokumentet „r det verifikat som transaktionen baserades p†, t.ex. en inleverans.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No." }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the line on the posted document that corresponds to the item ledger entry.;
                           NOR=Angir nummeret for linjen i det bokf›rte dokumentet som svarer til vareposten.;
                           SVE=Anger numret f”r den rad i det bokf”rda dokumentet som motsvarar artikeltransaktionen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Line No.";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the item in the entry.;
                           NOR=Angir nummeret for varen i posten.;
                           SVE=Anger numret p† artikeln i transaktionen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item No.";
                Visible=FALSE }

    { 19  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the variant of the item on the line.;
                           NOR=Angir varianten for varen p† linjen.;
                           SVE=Anger varianten av artikeln p† raden.];
                ApplicationArea=#Planning;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a serial number if the posted item carries such a number.;
                           NOR=Angir et serienummer hvis den bokf›rte varen har et slikt nummer.;
                           SVE=Anger ett serienummer om den bokf”rda artikeln har ett s†dant.];
                ApplicationArea=#ItemTracking;
                SourceExpr="Serial No.";
                Visible=FALSE }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a lot number if the posted item carries such a number.;
                           NOR=Angir et partinummer hvis den bokf›rte varen har et slikt nummer.;
                           SVE=Anger ett partinummer om den bokf”rda artikeln har ett.];
                ApplicationArea=#ItemTracking;
                SourceExpr="Lot No.";
                Visible=FALSE }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the entry.;
                           NOR=Angir en beskrivelse av posten.;
                           SVE=Anger en beskrivning av transaktionen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Visible=FALSE }

    { 27  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the global dimension that is linked to the record or entry for analysis purposes. Two global dimensions, typically for the company's most important activities, are available on all cards, documents, reports, and lists.;
                           NOR=Angir koden for den globale dimensjonen som er koblet til posten eller oppf›ringen for analyse. To globale dimensjoner, vanligvis for selskapets viktigste aktiviteter, er tilgjengelige p† alle kort, dokumenter, rapporter og lister.;
                           SVE=Anger koden f”r den globala dimension som „r kopplad till posten eller transaktionen f”r analys. Tv† globala dimensioner, vanligtvis f”r f”retagets viktigaste aktiviteter, finns p† alla kort, dokument, rapporter och listor.];
                ApplicationArea=#Dimensions;
                SourceExpr="Global Dimension 1 Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 29  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the global dimension that is linked to the record or entry for analysis purposes. Two global dimensions, typically for the company's most important activities, are available on all cards, documents, reports, and lists.;
                           NOR=Angir koden for den globale dimensjonen som er koblet til posten eller oppf›ringen for analyse. To globale dimensjoner, vanligvis for selskapets viktigste aktiviteter, er tilgjengelige p† alle kort, dokumenter, rapporter og lister.;
                           SVE=Anger koden f”r den globala dimension som „r kopplad till posten eller transaktionen f”r analys. Tv† globala dimensioner, vanligtvis f”r f”retagets viktigaste aktiviteter, finns p† alla kort, dokument, rapporter och listor.];
                ApplicationArea=#Dimensions;
                SourceExpr="Global Dimension 2 Code";
                Visible=FALSE }

    { 31  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the location that the entry is linked to.;
                           NOR=Angir koden for lokasjonen som posten er knyttet til.;
                           SVE=Anger koden f”r det lagerst„lle som transaktionen „r kopplad till.];
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Visible=FALSE }

    { 33  ;2   ;Field     ;
                CaptionML=[ENU=Applied Quantity;
                           NOR=Utlignet antall;
                           SVE=Kopplat antal];
                ToolTipML=[ENU=Specifies the quantity of the item ledger entry linked to an inventory decrease, or increase, as appropriate.;
                           NOR=Angir antallet av vareposten som er knyttet til en lagerreduksjon eller -›kning, i henhold til hva som gjelder.;
                           SVE=Anger antalet i artikeltransaktionen som har kopplats till en minskning eller ”kning i lagret.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=ApplQty }

    { 35  ;2   ;Field     ;
                CaptionML=[ENU=Quantity;
                           NOR=Antall;
                           SVE=Antal];
                ToolTipML=[ENU=Specifies the quantity of the item ledger entry.;
                           NOR=Angir antallet for vareposten.;
                           SVE=Anger antalet i artikeltransaktionen.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=Qty }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the adjusted cost, in LCY, of the quantity posting.;
                           NOR=Angir den justerte kosten i NOK for bokf›ringen av antall.;
                           SVE=Anger den justerade kostnaden f”r det bokf”rda antalet i BVA.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cost Amount (Actual)" }

    { 42  ;2   ;Field     ;
                CaptionML=[ENU=Unit Cost(LCY);
                           NOR=Enhetskost (NOK);
                           SVE=Styckkostnad (BVA)];
                ToolTipML=[ENU=Specifies the unit cost of the item in the item ledger entry.;
                           NOR=Angir enhetskosten for varen i vareposten.;
                           SVE=Anger styckkostnaden f”r artikeln i artikeltransaktionen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetUnitCostLCY;
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the item on the line have been invoiced.;
                           NOR=Angir hvor mange enheter av varen som er fakturert p† linjen.;
                           SVE=Anger hur m†nga enheter av artikeln p† raden som har fakturerats.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Invoiced Quantity";
                Visible=TRUE }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the item on the line have been reserved.;
                           NOR=Angir hvor mange enheter av varen som er reservert p† linjen.;
                           SVE=Anger hur m†nga enheter av artikeln p† raden som har reserverats.];
                ApplicationArea=#Reservation;
                SourceExpr="Reserved Quantity" }

    { 49  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity in the Quantity field that remains to be processed.;
                           NOR=Angir antallet i Antall-feltet som fortsatt ikke er behandlet.;
                           SVE=Anger kvantiteten i f„ltet Kvantitet som †terst†r att bearbeta.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Remaining Quantity";
                Visible=TRUE }

    { 1102601000;2;Field  ;
                CaptionML=[ENU=Quantity Available for Cost Applications;
                           NOR=Tilgjengelig antall for kostutligninger;
                           SVE=Tillg„ngligt antal f”r kostnadskopplingar];
                ToolTipML=[ENU=Specifies the quantity of the item ledger entry that can be cost applied.;
                           NOR=Angir varepostantallet som kan kostnadsutlignes.;
                           SVE=Anger antalet artikeltransaktioner som kan kopplas till kostnad.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=CostAvailable(Rec) }

    { 51  ;2   ;Field     ;
                CaptionML=[ENU=Available for Quantity Application;
                           NOR=Tilgjengelig for antallsutligning;
                           SVE=Tillg„nglig f”r antalskoppling];
                ToolTipML=[ENU=Specifies the quantity of the item ledger entry that can be applied.;
                           NOR=Angir varepostantallet som kan utlignes.;
                           SVE=Anger antalet artikeltransaktioner som kan kopplas.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=QuantityAvailable(Rec) }

    { 53  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity for this item ledger entry that was shipped and has not yet been returned.;
                           NOR=Angir antallet for denne vareposten som ble levert og er enn† ikke returnert.;
                           SVE=Anger det antal som har levererats men inte returnerats „nnu f”r den h„r artikeltransaktionen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipped Qty. Not Returned" }

    { 55  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the entry has been fully applied to.;
                           NOR=Angir om posten er helt utlignet.;
                           SVE=Anger om transaktionen har blivit fullst„ndigt kopplad.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Open }

    { 57  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity per item unit of measure.;
                           NOR=Angir antall per enhet av varen.;
                           SVE=Anger antalet per artikelenhet.];
                ApplicationArea=#Suite;
                SourceExpr="Qty. per Unit of Measure";
                Visible=FALSE }

    { 59  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if your vendor ships the items directly to your customer.;
                           NOR=Angir om leverand›ren sender varene direkte til kunden.;
                           SVE=Anger om leverant”ren levererar artiklarna direkt till din kund.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Drop Shipment";
                Visible=FALSE }

    { 61  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the quantity on the journal line must be applied to an already-posted entry. In that case, enter the entry number that the quantity will be applied to.;
                           NOR=Angir om antallet p† kladdelinjen m† utlignes mot en allerede bokf›rt oppf›ring. Angi i det tilfellet l›penummeret som antallet skal gjelde for.;
                           SVE=Anger om antalet p† journalraden ska kopplas till en redan bokf”rd transaktion. I s† fall anger du transaktionsnumret som antalet ska kopplas till.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Entry";
                Visible=FALSE }

    { 63  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether there is one or more applied entries, which need to be adjusted.;
                           NOR=Angir om det finnes ‚n eller flere utlignede poster som m† justeres.;
                           SVE=Anger om det finns en eller flera kopplade transaktioner som beh”ver justeras.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applied Entry to Adjust";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which type of order that the entry was created in.;
                           NOR=Angir hvilken type ordre posten ble opprettet i.;
                           SVE=Anger vilken typ av order som transaktionen skapades i.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Order Type" }

    { 65  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the order that created the entry.;
                           NOR=Angir nummeret for ordren som opprettet posten.;
                           SVE=Anger numret p† ordern som skapade transaktionen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Order No.";
                Visible=FALSE }

    { 67  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the entry, as assigned from the specified number series when the entry was created.;
                           NOR=Angir nummeret for oppf›ringen, som tilordnet fra den angitte nummerserien da oppf›ringen ble opprettet.;
                           SVE=Anger transaktionsnumret, som tilldelas fr†n den angivna nummerserien n„r transaktionen skapas.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Entry No." }

  }
  CODE
  {
    VAR
      RecordToShow@1008 : Record 32;
      TempItemLedgEntry@1001 : TEMPORARY Record 32;
      Apply@1003 : Codeunit 22;
      ShowApplied@1002 : Boolean;
      ShowQuantity@1007 : Boolean;
      MaxToApply@1004 : Decimal;
      ApplQty@1005 : Decimal;
      Qty@1006 : Decimal;
      TotalApplied@1015 : Decimal;
      Text001@1000 : TextConst 'ENU=Applied Entries;NOR=Utlignede poster;SVE=Kopplade transaktioner';
      Text002@1009 : TextConst 'ENU=Unapplied Entries;NOR=Poster som skal utlignes;SVE=Bortkopplade transaktioner';
      DPA_IsHardFilter@1100000999 : Boolean;
      RemoveAppButtonVisible@1031 : Boolean INDATASET;

    [External]
    PROCEDURE SetRecordToShow@7(VAR RecordToSet@1000 : Record 32;VAR ApplyCodeunit@1001 : Codeunit 22;newShowApplied@1002 : Boolean);
    BEGIN
      RecordToShow.COPY(RecordToSet);
      Apply := ApplyCodeunit;
      ShowApplied := newShowApplied;
    END;

    LOCAL PROCEDURE Show@8();
    VAR
      ItemLedgEntry@1000 : Record 32;
      Apprec@1565 : Record 339;
    BEGIN
      WITH ItemLedgEntry DO BEGIN
        GET(RecordToShow."Entry No.");
        ShowQuantity := NOT (("Entry Type" IN ["Entry Type"::Sale,"Entry Type"::Consumption,"Entry Type"::Output]) AND Positive);

        MaxToApply := 0;
        IF NOT ShowQuantity THEN
          MaxToApply := Quantity + Apprec.Returned("Entry No.");
      END;
      SetMyView(RecordToShow,ShowApplied,ShowQuantity,MaxToApply);
    END;

    LOCAL PROCEDURE SetMyView@22(ItemLedgEntry@1000 : Record 32;ShowApplied@1002 : Boolean;ShowQuantity@1004 : Boolean;MaxToApply@1005 : Decimal);
    BEGIN
      InitView;
      CASE ShowQuantity OF
        TRUE:
          CASE ShowApplied OF
            TRUE:
              ShowQuantityApplied(ItemLedgEntry);
            FALSE:
              BEGIN
                ShowQuantityOpen(ItemLedgEntry);
                ShowCostOpen(ItemLedgEntry,MaxToApply);
              END;
          END;
        FALSE:
          CASE ShowApplied OF
            TRUE:
              ShowCostApplied(ItemLedgEntry);
            FALSE:
              ShowCostOpen(ItemLedgEntry,MaxToApply);
          END;
      END;

      IF TempItemLedgEntry.FINDSET THEN
        REPEAT
          Rec := TempItemLedgEntry;
          INSERT;
        UNTIL TempItemLedgEntry.NEXT = 0;
    END;

    LOCAL PROCEDURE InitView@23();
    BEGIN
      DELETEALL;
      TempItemLedgEntry.RESET;
      TempItemLedgEntry.DELETEALL;
    END;

    LOCAL PROCEDURE ShowQuantityApplied@20(ItemLedgEntry@1000 : Record 32);
    VAR
      ItemApplnEntry@1002 : Record 339;
    BEGIN
      InitApplied;
      WITH ItemLedgEntry DO
        IF Positive THEN BEGIN
          ItemApplnEntry.RESET;
          ItemApplnEntry.SETCURRENTKEY("Inbound Item Entry No.","Outbound Item Entry No.","Cost Application");
          ItemApplnEntry.SETRANGE("Inbound Item Entry No.","Entry No.");
          ItemApplnEntry.SETFILTER("Outbound Item Entry No.",'<>%1&<>%2',"Entry No.",0);
          IF ItemApplnEntry.FIND('-') THEN
            REPEAT
              InsertTempEntry(ItemApplnEntry."Outbound Item Entry No.",ItemApplnEntry.Quantity,TRUE);
            UNTIL ItemApplnEntry.NEXT = 0;
        END ELSE BEGIN
          ItemApplnEntry.RESET;
          ItemApplnEntry.SETCURRENTKEY("Outbound Item Entry No.","Item Ledger Entry No.","Cost Application");
          ItemApplnEntry.SETRANGE("Outbound Item Entry No.","Entry No.");
          ItemApplnEntry.SETRANGE("Item Ledger Entry No.","Entry No.");
          IF ItemApplnEntry.FIND('-') THEN
            REPEAT
              InsertTempEntry(ItemApplnEntry."Inbound Item Entry No.",-ItemApplnEntry.Quantity,TRUE);
            UNTIL ItemApplnEntry.NEXT = 0;
        END;
    END;

    LOCAL PROCEDURE ShowQuantityOpen@19(ItemLedgEntry@1000 : Record 32);
    VAR
      ItemApplnEntry@1002 : Record 339;
      ItemLedgEntry2@1001 : Record 32;
    BEGIN
      WITH ItemLedgEntry DO
        IF "Remaining Quantity" <> 0 THEN BEGIN
          ItemLedgEntry2.SETCURRENTKEY("Item No.",Open,"Variant Code",Positive,"Location Code","Posting Date");
          ItemLedgEntry2.SETRANGE("Item No.","Item No.");
          ItemLedgEntry2.SETRANGE("Location Code" ,"Location Code");
          ItemLedgEntry2.SETRANGE(Positive,NOT Positive);
          ItemLedgEntry2.SETRANGE(Open,TRUE);
          IF ItemLedgEntry2.FIND('-') THEN
            REPEAT
              IF (QuantityAvailable(ItemLedgEntry2) <> 0) AND
                 NOT ItemApplnEntry.ExistsBetween("Entry No.",ItemLedgEntry2."Entry No.")
              THEN
                InsertTempEntry(ItemLedgEntry2."Entry No.",0,TRUE);
            UNTIL ItemLedgEntry2.NEXT = 0;
        END;
    END;

    LOCAL PROCEDURE ShowCostApplied@18(ItemLedgEntry@1000 : Record 32);
    VAR
      ItemApplnEntry@1002 : Record 339;
    BEGIN
      InitApplied;
      WITH ItemLedgEntry DO
        IF Positive THEN BEGIN
          ItemApplnEntry.RESET;
          ItemApplnEntry.SETCURRENTKEY("Inbound Item Entry No.","Outbound Item Entry No.","Cost Application");
          ItemApplnEntry.SETRANGE("Inbound Item Entry No.","Entry No.");
          ItemApplnEntry.SETFILTER("Item Ledger Entry No.",'<>%1',"Entry No.");
          ItemApplnEntry.SETFILTER("Outbound Item Entry No.",'<>%1',0);
          ItemApplnEntry.SETRANGE("Cost Application",TRUE); // we want to show even average cost application
          IF ItemApplnEntry.FIND('-') THEN
            REPEAT
              InsertTempEntry(ItemApplnEntry."Outbound Item Entry No.",ItemApplnEntry.Quantity,FALSE);
            UNTIL ItemApplnEntry.NEXT = 0;
        END ELSE BEGIN
          ItemApplnEntry.RESET;
          ItemApplnEntry.SETCURRENTKEY("Outbound Item Entry No.","Item Ledger Entry No.","Cost Application");
          ItemApplnEntry.SETRANGE("Outbound Item Entry No.","Entry No.");
          ItemApplnEntry.SETFILTER("Item Ledger Entry No.",'<>%1',"Entry No.");
          ItemApplnEntry.SETRANGE("Cost Application",TRUE); // we want to show even average cost application
          IF ItemApplnEntry.FIND('-') THEN
            REPEAT
              InsertTempEntry(ItemApplnEntry."Inbound Item Entry No.",-ItemApplnEntry.Quantity,FALSE);
            UNTIL ItemApplnEntry.NEXT = 0;
        END;
    END;

    LOCAL PROCEDURE ShowCostOpen@17(ItemLedgEntry@1000 : Record 32;MaxToApply@1003 : Decimal);
    VAR
      ItemApplnEntry@1002 : Record 339;
      ItemLedgEntry2@1001 : Record 32;
    BEGIN
      WITH ItemLedgEntry DO BEGIN
        ItemLedgEntry2.SETCURRENTKEY("Item No.",Positive,"Location Code","Variant Code");
        ItemLedgEntry2.SETRANGE("Item No.","Item No.");
        ItemLedgEntry2.SETRANGE("Location Code","Location Code");
        ItemLedgEntry2.SETRANGE(Positive,NOT Positive);
        ItemLedgEntry2.SETFILTER("Shipped Qty. Not Returned",'<%1&>=%2',0,-MaxToApply);
        IF (MaxToApply <> 0) AND Positive THEN
          ItemLedgEntry2.SETFILTER("Shipped Qty. Not Returned",'<=%1',-MaxToApply);
        IF ItemLedgEntry2.FIND('-') THEN
          REPEAT
            IF (CostAvailable(ItemLedgEntry2) <> 0) AND
               NOT ItemApplnEntry.ExistsBetween("Entry No.",ItemLedgEntry2."Entry No.")
            THEN
              InsertTempEntry(ItemLedgEntry2."Entry No.",0,TRUE);
          UNTIL ItemLedgEntry2.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE InsertTempEntry@21(EntryNo@1000 : Integer;AppliedQty@1001 : Decimal;ShowQuantity@1003 : Boolean);
    VAR
      ItemLedgEntry@1002 : Record 32;
    BEGIN
      ItemLedgEntry.GET(EntryNo);

      IF ShowQuantity THEN
        IF AppliedQty * ItemLedgEntry.Quantity < 0 THEN
          EXIT;

      IF NOT TempItemLedgEntry.GET(EntryNo) THEN BEGIN
        TempItemLedgEntry.RESET;
        TempItemLedgEntry := ItemLedgEntry;
        TempItemLedgEntry.CALCFIELDS("Reserved Quantity");
        TempItemLedgEntry.Quantity := AppliedQty;
        TempItemLedgEntry.INSERT;
      END ELSE BEGIN
        TempItemLedgEntry.Quantity := TempItemLedgEntry.Quantity + AppliedQty;
        TempItemLedgEntry.MODIFY;
      END;

      TotalApplied := TotalApplied + AppliedQty;
    END;

    LOCAL PROCEDURE InitApplied@13();
    BEGIN
      CLEAR(TotalApplied);
    END;

    LOCAL PROCEDURE RemoveApplications@1(Inbound@1000 : Integer;OutBound@1001 : Integer);
    VAR
      Application@1003 : Record 339;
    BEGIN
      Application.SETCURRENTKEY("Inbound Item Entry No.","Outbound Item Entry No.");
      Application.SETRANGE("Inbound Item Entry No.",Inbound);
      Application.SETRANGE("Outbound Item Entry No.",OutBound);
      IF Application.FINDSET THEN
        REPEAT
          Apply.UnApply(Application);
          Apply.LogUnapply(Application);
        UNTIL Application.NEXT = 0;
    END;

    LOCAL PROCEDURE UnapplyRec@3();
    VAR
      Applyrec@1001 : Record 32;
      AppliedItemLedgEntry@1002 : Record 32;
    BEGIN
      Applyrec.GET(RecordToShow."Entry No.");
      CurrPage.SETSELECTIONFILTER(TempItemLedgEntry);
      IF TempItemLedgEntry.FINDSET THEN BEGIN
        REPEAT
          AppliedItemLedgEntry.GET(TempItemLedgEntry."Entry No.");
          IF AppliedItemLedgEntry."Entry No." <> 0 THEN BEGIN
            IF Applyrec.Positive THEN
              RemoveApplications(Applyrec."Entry No.",AppliedItemLedgEntry."Entry No.")
            ELSE
              RemoveApplications(AppliedItemLedgEntry."Entry No.",Applyrec."Entry No.");
          END;
        UNTIL TempItemLedgEntry.NEXT = 0;

        BlockItem(Applyrec."Item No.");
      END;
      Show;
    END;

    [External]
    PROCEDURE ApplyRec@5();
    VAR
      Applyrec@1000 : Record 32;
      AppliedItemLedgEntry@1002 : Record 32;
    BEGIN
      Applyrec.GET(RecordToShow."Entry No.");
      CurrPage.SETSELECTIONFILTER(TempItemLedgEntry);
      IF TempItemLedgEntry.FINDSET THEN
        REPEAT
          AppliedItemLedgEntry.GET(TempItemLedgEntry."Entry No.");
          IF AppliedItemLedgEntry."Entry No." <> 0 THEN BEGIN
            Apply.ReApply(Applyrec,AppliedItemLedgEntry."Entry No.");
            Apply.LogApply(Applyrec,AppliedItemLedgEntry);
          END;
        UNTIL TempItemLedgEntry.NEXT = 0;

      IF Applyrec.Positive THEN
        RemoveDuplicateApplication(Applyrec."Entry No.");

      Show;
    END;

    LOCAL PROCEDURE RemoveDuplicateApplication@4(ItemLedgerEntryNo@1000 : Integer);
    VAR
      ItemApplicationEntry@1001 : Record 339;
    BEGIN
      WITH ItemApplicationEntry DO BEGIN
        SETCURRENTKEY("Inbound Item Entry No.","Item Ledger Entry No.","Outbound Item Entry No.","Cost Application");
        SETRANGE("Inbound Item Entry No.",ItemLedgerEntryNo);
        SETRANGE("Item Ledger Entry No.",ItemLedgerEntryNo);
        SETFILTER("Outbound Item Entry No.",'<>0');
        IF NOT ISEMPTY THEN BEGIN
          SETRANGE("Outbound Item Entry No.",0);
          DELETEALL;
        END
      END;
    END;

    LOCAL PROCEDURE BlockItem@9(ItemNo@1000 : Code[20]);
    VAR
      Item@1001 : Record 27;
    BEGIN
      Item.GET(ItemNo);
      IF Item."Application Wksh. User ID" <> UPPERCASE(USERID) THEN
        Item.CheckBlockedByApplWorksheet;

      Item."Application Wksh. User ID" := USERID;
      Item.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE GetApplQty@10();
    VAR
      ItemLedgEntry@1000 : Record 32;
    BEGIN
      ItemLedgEntry.GET("Entry No.");
      ApplQty := Quantity;
      Qty := ItemLedgEntry.Quantity;
    END;

    LOCAL PROCEDURE QuantityAvailable@11(ILE@1000 : Record 32) : Decimal;
    BEGIN
      WITH ILE DO BEGIN
        CALCFIELDS("Reserved Quantity");
        EXIT("Remaining Quantity" - "Reserved Quantity");
      END;
    END;

    LOCAL PROCEDURE CostAvailable@1565(ILE@1000 : Record 32) : Decimal;
    VAR
      Apprec@1565 : Record 339;
    BEGIN
      WITH ILE DO BEGIN
        IF "Shipped Qty. Not Returned" <> 0 THEN
          EXIT(-"Shipped Qty. Not Returned");

        EXIT("Remaining Quantity" + Apprec.Returned("Entry No."));
      END;
    END;

    LOCAL PROCEDURE CaptionExpr@2() : Text[250];
    BEGIN
      IF ShowApplied THEN
        EXIT(Text001);

      EXIT(Text002);
    END;

    BEGIN
    END.
  }
}

