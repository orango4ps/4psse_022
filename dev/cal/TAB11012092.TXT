OBJECT Table 11012092 Small Project Operation Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Small Project Operation Line;
               NOR=Driftsrad for lite prosjekt;
               SVE=Rad f”r insatser i mindre projekt];
  }
  FIELDS
  {
    { 10  ;   ;Operation           ;Code20        ;TableRelation="Small Project Operation".Code;
                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod] }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 30  ;   ;Cost Type           ;Option        ;FieldClass=Normal;
                                                   OnValidate=BEGIN
                                                                IF "Cost Type" <> xRec."Cost Type" THEN BEGIN
                                                                  "Cost Object" := '';
                                                                  IF "Cost Type" <> "Cost Type"::Labor THEN BEGIN
                                                                    Norm := 0;
                                                                    "Hour Rate Code" := '';
                                                                  END;
                                                                  IF "Cost Type" <> "Cost Type"::Material THEN
                                                                    "No." := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Cost Type;
                                                              NOR=Kostnadstype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=Labor,Material,Subcontracting,Plant,Sundry;
                                                                    NOR=Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse;
                                                                    SVE=Arbetskraft,Material,Underentreprenad,Maskin,Diverse];
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry }
    { 37  ;   ;Type                ;Option        ;OnValidate=VAR
                                                                TempProjOperLine@1100485000 : Record 11012092;
                                                              BEGIN
                                                                IF Type <> xRec.Type THEN BEGIN
                                                                  TempProjOperLine := Rec;
                                                                  INIT;
                                                                  Operation := TempProjOperLine.Operation;
                                                                  "Line No." := TempProjOperLine."Line No.";
                                                                  Type  := TempProjOperLine.Type;
                                                                END;
                                                                IF Type = Type::Item THEN
                                                                  "Cost Type" := "Cost Type"::Material;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=" ,Item,Means";
                                                                    NOR=" ,Artikkel,Metode";
                                                                    SVE=" ,Artikel,Metod"];
                                                   OptionString=[ ,Item,Means] }
    { 40  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Means)) Means WHERE (Cost Type=FIELD(Cost Type));
                                                   OnValidate=BEGIN
                                                                IF ("No." = '') THEN
                                                                  EXIT;

                                                                CASE Type OF
                                                                  Type::Item:
                                                                    BEGIN
                                                                      TESTFIELD("Cost Type", "Cost Type"::Material);
                                                                      ItemRec.GET("No.");
                                                                      ItemRec.TESTFIELD("Global Dimension 2 Code");
                                                                      IF ("No." <> xRec."No.") THEN BEGIN
                                                                        Description := ItemRec.Description;
                                                                        "Unit of Measure" := ItemRec."Base Unit of Measure";
                                                                      END;
                                                                      IF (Description = '') THEN
                                                                        Description := ItemRec.Description;
                                                                      VALIDATE("Cost Object", ItemRec."Global Dimension 2 Code");
                                                                    END;
                                                                  Type::Means:
                                                                    BEGIN
                                                                      MeansRec.GET("No.");
                                                                      MeansRec.TESTFIELD("Cost Object");
                                                                      IF ("No." <> xRec."No.") THEN BEGIN
                                                                        Description := MeansRec.Description;
                                                                        "Unit of Measure" := MeansRec."Unit of Measure";
                                                                      END;
                                                                      "Vendor No." := MeansRec."Vendor No.";
                                                                      IF (Description = '') THEN
                                                                        Description := MeansRec.Description;
                                                                      VALIDATE("Cost Object", MeansRec."Cost Object");
                                                                      IF "Cost Type" = "Cost Type"::Labor THEN BEGIN
                                                                        Norm := MeansRec.Norm;
                                                                        VALIDATE("Hour Rate Code",MeansRec."Hours Rate Code");
                                                                      END;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 50  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=FIELD(Cost Type),
                                                                                               Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                DimMgt.GetDimValueRec(2, "Cost Object", DimValRec, TRUE,'');
                                                                IF ("Cost Object" <> xRec."Cost Object") THEN BEGIN
                                                                  IF NOT (("No." <> '') AND (Type IN [Type::Item,Type::Means])) THEN BEGIN
                                                                    Description := DimValRec.Name;
                                                                    "Unit of Measure" := DimValRec."Unit of Measure";
                                                                    IF "Cost Type" = "Cost Type"::Labor THEN BEGIN
                                                                      Norm := DimValRec.Norm;
                                                                    END;
                                                                  END;
                                                                END;
                                                                IF Norm = 0 THEN
                                                                  Norm := 1;

                                                                IF (Description = '') THEN
                                                                  Description := DimValRec.Name;
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 60  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 70  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                CalcHours();
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 80  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=M†leenhet;
                                                              SVE=Enhet] }
    { 90  ;   ;Hour Rate Code      ;Code10        ;TableRelation="Hour Rate".Code;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Cost Type", "Cost Type"::Labor);
                                                              END;

                                                   CaptionML=[ENU=Hour Rate Code;
                                                              NOR=Timesatskode;
                                                              SVE=Timtaxakod] }
    { 100 ;   ;Norm                ;Decimal       ;OnValidate=BEGIN
                                                                IF Norm <> 0 THEN
                                                                  TESTFIELD("Cost Type", "Cost Type"::Labor);
                                                                VALIDATE(Quantity);

                                                                CalcHours();
                                                              END;

                                                   CaptionML=[ENU=Norm;
                                                              NOR=Norm;
                                                              SVE=Norm] }
    { 110 ;   ;Hours               ;Decimal       ;CaptionML=[ENU=Hours;
                                                              NOR="Timer ";
                                                              SVE=Timmar];
                                                   Editable=No }
    { 120 ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor No.;
                                                              NOR=Leverand›rnr.;
                                                              SVE=Leverant”rsnr];
                                                   Description=Assistant field to 'Create purchase order' from 'Operations by Small Project' (Form 11012283) }
  }
  KEYS
  {
    {    ;Operation,Line No.                      ;Clustered=Yes }
    {    ;Vendor No.                               }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimValRec@1210190001 : Record 349;
      ItemRec@1210190002 : Record 27;
      MeansRec@1100485000 : Record 11020245;
      DimMgt@1210190000 : Codeunit 408;
      SalesPriceMgtCU@1210190007 : Codeunit 11012036;
      PurchasePriceMgt@1100485002 : Codeunit 11012065;

    PROCEDURE CalcHours@1210190000();
    BEGIN
      Hours := Quantity * Norm;
    END;

    PROCEDURE CalcTotalOperSalesAmount@1210190008(IOperation@1210190000 : Code[20];IRefDate@1210190003 : Date;ICustNo@1210190004 : Code[20];IProjNo@1210190005 : Code[20];VAR vSalesTotal@1100485001 : Decimal;VAR vPurchTotal@1100485002 : Decimal);
    VAR
      lvOperLineRec@1210190002 : Record 11012092;
      lvSalesPrice@1210190001 : Decimal;
      lvPurchPrice@1100485000 : Decimal;
    BEGIN
      vSalesTotal := 0;
      vPurchTotal := 0;
      WITH lvOperLineRec DO BEGIN
        SETRANGE(Operation,IOperation);
        IF FIND('-') THEN BEGIN
          REPEAT
            IF NOT ((Type <> Type::" ") AND ("No." = '')) THEN BEGIN
              lvSalesPrice := SalesPriceMgtCU.GetSalesPriceOperationLine(lvOperLineRec, IRefDate, IProjNo, ICustNo);
              lvPurchPrice := PurchasePriceMgt.GetPurchasePriceOperationLine(lvOperLineRec,IRefDate);
            END;
            IF "Cost Type" = "Cost Type"::Labor THEN BEGIN
              vSalesTotal := vSalesTotal + (Quantity * Norm * lvSalesPrice);
              vPurchTotal := vPurchTotal + (Quantity * Norm * lvPurchPrice);
            END ELSE BEGIN
              vSalesTotal := vSalesTotal + (Quantity * lvSalesPrice);
              vPurchTotal := vPurchTotal + (Quantity * lvPurchPrice);
            END;
          UNTIL NEXT = 0;
        END;
      END;
    END;

    BEGIN
    END.
  }
}

