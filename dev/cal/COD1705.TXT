OBJECT Codeunit 1705 Exp. Mapping Det Pos. Pay
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    TableNo=1220;
    OnRun=VAR
            PositivePayDetail@1010 : Record 1241;
            DataExch@1009 : Record 1220;
            PositivePayExportMgt@1001 : Codeunit 1711;
            RecordRef@1004 : RecordRef;
            Window@1000 : Dialog;
            LineNo@1002 : Integer;
          BEGIN
            IF NoDataExchLineDef("Data Exch. Def Code") THEN
              EXIT;

            Window.OPEN(ProgressMsg);

            // Range through the line types, Look at details...
            LineNo := 1;

            PositivePayDetail.SETRANGE("Data Exch. Entry No.","Entry No.");
            IF PositivePayDetail.FINDSET THEN
              REPEAT
                Window.UPDATE(1,LineNo);
                IF HandlePositivePayDetails(PositivePayDetail) THEN BEGIN
                  DataExch.SETRANGE("Entry No.","Entry No.");
                  IF DataExch.FINDFIRST THEN BEGIN
                    RecordRef.GETTABLE(PositivePayDetail);
                    PositivePayExportMgt.InsertDataExchLineForFlatFile(
                      DataExch,
                      LineNo,
                      RecordRef);
                    LineNo := LineNo + 1;
                  END;
                END;
              UNTIL  PositivePayDetail.NEXT = 0;
            Window.CLOSE;
          END;

  }
  CODE
  {
    VAR
      ProgressMsg@1000 : TextConst 'ENU=Processing line no. #1######.;NOR=Behandler linje nr. #1######.;SVE=Behandlar rad nr #1######.';

    LOCAL PROCEDURE HandlePositivePayDetails@1(PositivePayDetail@1000 : Record 1241) : Boolean;
    VAR
      CheckLedgEntry@1001 : Record 272;
    BEGIN
      IF PositivePayDetail.Payee = '' THEN BEGIN
        CheckLedgEntry.SETRANGE("Positive Pay Exported",FALSE);
        CheckLedgEntry.SETRANGE("Data Exch. Voided Entry No.",PositivePayDetail."Data Exch. Entry No.");
        CheckLedgEntry.SETRANGE("Check No.",PositivePayDetail."Check Number");
        IF CheckLedgEntry.FINDLAST THEN
          EXIT(CheckLedgEntry."Entry Status" <> CheckLedgEntry."Entry Status"::"Test Print");
      END;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE NoDataExchLineDef@2(DataExchDefCode@1001 : Code[20]) : Boolean;
    VAR
      DataExchLineDef@1000 : Record 1227;
    BEGIN
      WITH DataExchLineDef DO BEGIN
        INIT;
        SETRANGE("Data Exch. Def Code",DataExchDefCode);
        SETRANGE("Line Type","Line Type"::Detail);
        EXIT(ISEMPTY);
      END;
    END;

    BEGIN
    END.
  }
}

