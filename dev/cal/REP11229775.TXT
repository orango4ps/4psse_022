OBJECT Report 11229775 Update Estimate Base Parts
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Kalkulation Basisteile aktualisieren;
               ENU=Update Estimate Base Parts;
               NLD=Bijwerken calculatie-onderdelen];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 4215;    ;DataItem;                    ;
               DataItemTable=Table11012169;
               OnPreDataItem=BEGIN
                               Status.OPEN(Text000);
                             END;

               OnAfterGetRecord=BEGIN
                                  UpdatePart;
                                END;

               OnPostDataItem=BEGIN
                                Status.CLOSE;
                              END;

               ReqFilterFields=Part Group,Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'DEU=Basisteil #1################# @2@@@@@@@@@@@@@;ENU=Base Part            #1################# @2@@@@@@@@@@@@@;NLD=Onderdeel            #1################# @2@@@@@@@@@@@@@';
      Status@1100525003 : Dialog;
      maxrec@1100525002 : Integer;
      currec@1100525001 : Integer;

    PROCEDURE UpdatePart@1100525000();
    VAR
      PartLineRec@1100525005 : Record 11072076;
      RecipeRec@1100525000 : Record 11020581;
      TradeItemRec@1100525001 : Record 11012317;
      BasicItemRec@1100525002 : Record 11012316;
      ItemRec@1100525003 : Record 27;
      SubOperationRec@1100525004 : Record 11012166;
    BEGIN
      WITH "Estimate Base Part" DO BEGIN
        PartLineRec.SETRANGE("Part Group", "Part Group");
        PartLineRec.SETRANGE(Part, Code);
        IF PartLineRec.FINDSET THEN BEGIN
          currec := 0;
          maxrec := PartLineRec.COUNT;
          REPEAT
            currec := currec + 1;
            Status.UPDATE(1, PartLineRec.Part);
            Status.UPDATE(2, ROUND(currec / maxrec * 10000,1));

            IF PartLineRec.Recipe <> '' THEN BEGIN
              IF RecipeRec.GET(PartLineRec."Recipe Group", PartLineRec.Recipe) THEN
                PartLineRec.Description := RecipeRec.Description;
            END ELSE BEGIN
              IF PartLineRec."Trade Item" <> '' THEN BEGIN
                IF TradeItemRec.GET(PartLineRec."Vendor (Trade Item)", PartLineRec."Trade Item") THEN
                  PartLineRec.Description := TradeItemRec."Item Description";
              END ELSE BEGIN
                IF PartLineRec."Basic Item" <> '' THEN BEGIN
                  IF BasicItemRec.GET(PartLineRec.Manufacturer, PartLineRec."Basic Item") THEN
                    PartLineRec.Description := BasicItemRec."Product Description";
                END ELSE BEGIN
                  IF PartLineRec."Item No." <> '' THEN BEGIN
                    IF ItemRec.GET(PartLineRec."Item No.") THEN
                      PartLineRec.Description := ItemRec.Description;
                  END ELSE BEGIN
                    IF PartLineRec."Sub Operation Code" <> '' THEN BEGIN
                      SubOperationRec.SETRANGE(Code, PartLineRec."Sub Operation Code");
                      IF SubOperationRec.FINDFIRST THEN
                        PartLineRec.Description := SubOperationRec.Description;
                    END;
                  END;
                END;
              END;
            END;
            PartLineRec.MODIFY;
          UNTIL PartLineRec.NEXT = 0;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

