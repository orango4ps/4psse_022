OBJECT Table 11229320 Bank Guarantee
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 GLSetup.GET;
                 GLSetup.TESTFIELD("Bank Guarantee Nos.");
                 NoSeriesMgt.InitSeries(GLSetup."Bank Guarantee Nos.",'',0D,"No.",GLSetup."Bank Guarantee Nos.");
               END;
             END;

    OnModify=BEGIN
               "Modified by" := USERID;
               "Last Date Modified" := TODAY;
             END;

    CaptionML=[ENU=Bank Guarantee;
               SVE=Bankgaranti];
    LookupPageID=Page11126638;
    DrillDownPageID=Page11126638;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code10        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  GLSetup.GET;
                                                                  NoSeriesMgt.TestManual(GLSetup."Bank Guarantee Nos.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 15  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 20  ;   ;Bond Type           ;Code20        ;TableRelation="Bond Type";
                                                   CaptionML=ENU=Bond Type }
    { 21  ;   ;Bond Type Description;Text250      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Bond Type".Description WHERE (Code=FIELD(Bond Type)));
                                                   CaptionML=ENU=Bond Type Description;
                                                   Editable=No }
    { 30  ;   ;Registration No.    ;Code20        ;CaptionML=[ENU=Registration No.;
                                                              NOR=Registreringsnr.;
                                                              SVE=Organisationsnr] }
    { 40  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Project Description");
                                                              END;

                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr] }
    { 42  ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Name;
                                                              NOR=Prosjektnavn;
                                                              SVE=Projektnamn];
                                                   Editable=No }
    { 50  ;   ;Contact Type        ;Option        ;CaptionML=[ENU=Contact Type;
                                                              NOR=Kontakttype;
                                                              SVE=Kontakttyp];
                                                   OptionCaptionML=[ENU=Customer,Vendor;
                                                                    NOR=Kunde,Leverand›r;
                                                                    SVE=Kund,Leverant”r];
                                                   OptionString=Customer,Vendor }
    { 60  ;   ;Contact No.         ;Code20        ;TableRelation=IF (Contact Type=CONST(Customer)) Customer WHERE (No.=FIELD(Contact No.))
                                                                 ELSE IF (Contact Type=CONST(Vendor)) Vendor WHERE (No.=FIELD(Contact No.));
                                                   OnValidate=BEGIN
                                                                UpdateContactName;
                                                              END;

                                                   CaptionML=[ENU=Contact No.;
                                                              NOR=Kontaktnr.;
                                                              SVE=Kontaktnr] }
    { 62  ;   ;Contact Name        ;Text100       ;CaptionML=[ENU=Contact Name;
                                                              NOR=Kontaktnavn;
                                                              SVE=Kontaktnamn];
                                                   Editable=No }
    { 70  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                IF ("Starting Date" <> 0D) AND ("Ending Date" <> 0D) THEN
                                                                  IF "Starting Date" > "Ending Date" THEN
                                                                    ERROR(ErrText,FIELDCAPTION("Starting Date"),FIELDCAPTION("Ending Date"));
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum] }
    { 80  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                IF ("Starting Date" <> 0D) AND ("Ending Date" <> 0D) THEN
                                                                  IF "Starting Date" > "Ending Date" THEN
                                                                    ERROR(ErrText,FIELDCAPTION("Starting Date"),FIELDCAPTION("Ending Date"));
                                                              END;

                                                   CaptionML=[ENU=Expiry Date;
                                                              NOR=Utl›psdato;
                                                              SVE=Utg†ngsdatum] }
    { 82  ;   ;Ending Date Fixed   ;Boolean       ;CaptionML=ENU=Expiry Date Fixed }
    { 90  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                ExchFCYToLCY;
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod] }
    { 100 ;   ;Amount (FCY)        ;Decimal       ;OnValidate=BEGIN
                                                                SetSkipValidateFCY(TRUE);
                                                                ExchFCYToLCY;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 110 ;   ;Amount (LCY)        ;Decimal       ;OnValidate=BEGIN
                                                                IF NOT SkipValidateFCY THEN
                                                                  ExchLCYToFCY;
                                                              END;

                                                   CaptionML=[ENU=Amount (LCY);
                                                              NOR=Bel›p (NOK);
                                                              SVE=Belopp (BVA)];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 120 ;   ;Issuing Bank        ;Code20        ;TableRelation="Bank Account";
                                                   OnValidate=VAR
                                                                BankAccount@1100529400 : Record 270;
                                                              BEGIN
                                                                IF xRec."Issuing Bank" <> Rec."Issuing Bank" THEN
                                                                  IF BankAccount.GET("Issuing Bank") THEN
                                                                    "Issuing Bank Name":= BankAccount.Name;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Issuing Bank }
    { 121 ;   ;Issuing Bank Name   ;Text50        ;CaptionML=[ENU=Bank Name;
                                                              NOR=Banknavn;
                                                              SVE=Banknamn] }
    { 130 ;   ;Reference           ;Code40        ;CaptionML=[ENU=Reference;
                                                              NOR=Referanse;
                                                              SVE=Referens] }
    { 140 ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              NOR=Lands-/regionkode;
                                                              SVE=Lands-/regionkod];
                                                   Editable=Yes }
    { 150 ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Modified;
                                                              NOR=Sist endret;
                                                              SVE=Žndrades senast];
                                                   Editable=No }
    { 160 ;   ;Modified by         ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Modified by;
                                                              NOR=Endret av;
                                                              SVE=Žndrad av];
                                                   Editable=No }
    { 190 ;   ;Fee per annum       ;Decimal       ;CaptionML=ENU=Fee per annum;
                                                   DecimalPlaces=2:2;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   BlankZero=Yes }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetup@1100529402 : Record 98;
      NoSeriesMgt@1100529403 : Codeunit 396;
      ProjectCurrencyExchangeRate@1100529401 : Record 11020628;
      SkipValidateFCY@1100529400 : Boolean;
      CurrencyExchangeRate@1100529404 : Record 330;
      ErrText@1100529407 : TextConst 'ENU=%1 must be equal to or earlier than %2.;NOR=%1 m† v‘re lik som eller tidligere enn %2.;SVE=%1 m†ste infalla samtidigt som eller tidigare „n %2.';
      CurFactorDec@1100529405 : Decimal;

    PROCEDURE SetSkipValidateFCY@1100528603(ISkipValidateFCY@1100528600 : Boolean);
    BEGIN
      SkipValidateFCY := ISkipValidateFCY;
    END;

    LOCAL PROCEDURE UpdateContactName@1100529401();
    VAR
      Customer@1100529401 : Record 18;
      Vendor@1100529400 : Record 23;
    BEGIN
      CASE "Contact Type" OF
        "Contact Type"::Customer: BEGIN
          IF Customer.GET("Contact No.") THEN
            "Contact Name" := Customer.Name;
        END;
        "Contact Type"::Vendor: BEGIN
          IF Vendor.GET("Contact No.") THEN
            "Contact Name" := Vendor.Name;
        END;
      END;
    END;

    PROCEDURE AssistEdit@2(OldBankGuar@1100529401 : Record 11229320) : Boolean;
    VAR
      BankGuar@1001 : Record 11229320;
      VarNoSeries@1100529400 : Code[20];
    BEGIN
      WITH BankGuar DO BEGIN
        BankGuar := Rec;
        GLSetup.GET;
        GLSetup.TESTFIELD("Bank Guarantee Nos.");
        IF NoSeriesMgt.SelectSeries(GLSetup."Bank Guarantee Nos.",'',VarNoSeries) THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := BankGuar;
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE ExchFCYToLCY@1100529402();
    BEGIN
      IF "Project No." <> '' THEN
        VALIDATE("Amount (LCY)",ProjectCurrencyExchangeRate.ExchangeAmtFCYToLCY("Amount (FCY)", FALSE, TRUE, "Currency Code", "Project No.", '', "Starting Date"))
      ELSE BEGIN
        CurFactorDec := CurrencyExchangeRate.GetCurrentCurrencyFactor("Currency Code");
        VALIDATE("Amount (LCY)",CurrencyExchangeRate.ExchangeAmtFCYToLCY(0,"Project No.", "Starting Date", "Currency Code","Amount (FCY)",CurFactorDec,FALSE));
      END;
    END;

    LOCAL PROCEDURE ExchLCYToFCY@1100529404();
    BEGIN
      IF "Project No." <> '' THEN
        "Amount (FCY)" := ProjectCurrencyExchangeRate.ExchangeAmtLCYToFCY("Amount (LCY)", FALSE, TRUE, "Currency Code", "Project No.", '', "Starting Date")
      ELSE BEGIN
        CurFactorDec := CurrencyExchangeRate.GetCurrentCurrencyFactor("Currency Code");
        "Amount (FCY)" := CurrencyExchangeRate.ExchangeAmtLCYToFCY(0,"Project No.", "Starting Date", "Currency Code","Amount (LCY)",CurFactorDec,FALSE);
      END;
    END;

    BEGIN
    {
      4PS 27-07-2016 UKR-C22974 OTRO: Register of bank guarantees (DR00556 BI028)
    }
    END.
  }
}

