OBJECT Table 11072668 Vehicle Driver
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckVehicle(TRUE);
               "Starting Date Update Mercash" := 0D;
               FillFiscalValuePercentage;
             END;

    OnRename=BEGIN
               CheckVehicle(FALSE);
             END;

    CaptionML=ENU=Vehicle Driver;
    LookupPageID=Page11125919;
  }
  FIELDS
  {
    { 10  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp];
                                                   NotBlank=Yes }
    { 20  ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=BEGIN
                                                                CheckVehicle(FALSE);
                                                                CALCFIELDS("Plant Description");
                                                              END;

                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr];
                                                   NotBlank=Yes }
    { 25  ;   ;Plant Description   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".Description WHERE (Plant Type=FIELD(Plant Type),
                                                                                                        No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Plant Description;
                                                              NOR=Maskinbeskrivelse;
                                                              SVE=Maskinbeskrivning];
                                                   Editable=No }
    { 30  ;   ;Licence Number      ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Vehicle 4PS"."Licence Number" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                            Plant No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=License Number;
                                                              NOR=Lisensnummer;
                                                              SVE=Licensnummer];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 40  ;   ;Driver Company Name ;Text30        ;TableRelation=Company;
                                                   OnValidate=BEGIN
                                                                IF "Driver Company Name" = COMPANYNAME THEN
                                                                  ERROR(Text006, FIELDCAPTION("Driver Company Name"));  //C008565
                                                                IF "Driver Company Name" <> xRec."Driver Company Name" THEN BEGIN
                                                                  IF "Starting Date Update Mercash" <> 0D THEN
                                                                    FIELDERROR("Starting Date Update Mercash");  // Then delete and add new
                                                                  Driver := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Driver Company Name;
                                                              NOR=Navn p† sj†f›rens selskap;
                                                              SVE=F”rarens f”retagsnamn] }
    { 50  ;   ;Driver              ;Code20        ;TableRelation=IF (Driver Company Name=FILTER('')) Employee.No.;
                                                   OnValidate=VAR
                                                                Employee@1100528400 : Record 5200;
                                                              BEGIN
                                                                IF (Driver <> xRec.Driver) AND ("Starting Date Update Mercash" <> 0D) THEN
                                                                  FIELDERROR("Starting Date Update Mercash");  // Then delete and add new
                                                                IF Driver = '' THEN
                                                                  EXIT;

                                                                IF "Driver Company Name" <> '' THEN
                                                                  Employee.CHANGECOMPANY("Driver Company Name");
                                                                Employee.GET(Driver);
                                                                Employee.TESTFIELD("Company Car", TRUE);

                                                                IF (Driver <> xRec.Driver) THEN
                                                                  CheckDriverOnOtherVehicle();
                                                              END;

                                                   OnLookup=VAR
                                                              Employee@1100528400 : Record 5200;
                                                            BEGIN
                                                              IF "Driver Company Name" <> '' THEN
                                                                Employee.CHANGECOMPANY("Driver Company Name");
                                                              Employee.SETRANGE("Company Car", TRUE);
                                                              Employee."No." := Driver;
                                                              IF PAGE.RUNMODAL(0, Employee) = ACTION::LookupOK THEN
                                                                VALIDATE(Driver, Employee."No.");
                                                            END;

                                                   CaptionML=[ENU=Driver;
                                                              NOR=Sj†f›r;
                                                              SVE=F”rare] }
    { 60  ;   ;Starting Date       ;Date          ;OnValidate=VAR
                                                                PreviousDriver@1100528400 : Record 11072668;
                                                              BEGIN
                                                                IF ("Ending Date" <> 0D) AND ("Starting Date" > "Ending Date") THEN
                                                                  ERROR(Text001, FIELDCAPTION("Starting Date"), "Ending Date");

                                                                IF GetPreviousDriver(PreviousDriver) THEN BEGIN
                                                                  CheckIfDriverIsAfterPrevDriver(PreviousDriver);
                                                                  FillEndingDateOfDriver(PreviousDriver, "Starting Date" - 1);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum];
                                                   NotBlank=Yes }
    { 70  ;   ;Ending Date         ;Date          ;OnValidate=VAR
                                                                NextDriver@1100528400 : Record 11072668;
                                                              BEGIN
                                                                IF ("Ending Date" <> 0D) AND
                                                                   ("Ending Date" < "Starting Date")
                                                                THEN
                                                                  ERROR(Text003, FIELDCAPTION("Ending Date"), "Starting Date");

                                                                IF GetNextDriver(NextDriver) THEN
                                                                  CheckIfDriverIsBeforNextDriver(NextDriver);
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              NOR=Sluttdato;
                                                              SVE=Slutdatum] }
    { 80  ;   ;Fiscal Value Percentage;Decimal    ;CaptionML=[ENU=Fiscal Value Percentage;
                                                              NOR=Skattemessig Verdi i Prosent;
                                                              SVE=Skattev„rde i procent];
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 100 ;   ;Private Use         ;Boolean       ;OnValidate=BEGIN
                                                                IF "Private Use" THEN
                                                                  TESTFIELD("Declaration No Private Use", FALSE);
                                                              END;

                                                   CaptionML=ENU=Private Use }
    { 105 ;   ;Declaration No Private Use;Boolean ;OnValidate=BEGIN
                                                                IF "Declaration No Private Use" THEN BEGIN
                                                                  TESTFIELD("Private Use", FALSE);
                                                                  IF "Starting Date Decl. Priv. Use" = 0D THEN BEGIN
                                                                    "Starting Date Decl. Priv. Use" := TODAY;
                                                                    IF "Ending Date Decl. Priv. Use" < "Starting Date Decl. Priv. Use" THEN
                                                                      "Ending Date Decl. Priv. Use" := 0D;
                                                                  END;
                                                                END ELSE BEGIN
                                                                  "Starting Date Decl. Priv. Use" := 0D;
                                                                  "Ending Date Decl. Priv. Use" := 0D;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Declaration No Private Use }
    { 110 ;   ;Starting Date Decl. Priv. Use;Date ;OnValidate=BEGIN
                                                                IF "Starting Date Decl. Priv. Use" <> 0D THEN
                                                                  TESTFIELD("Declaration No Private Use", TRUE)
                                                                ELSE BEGIN
                                                                  IF "Declaration No Private Use" THEN
                                                                    TESTFIELD("Starting Date Decl. Priv. Use");
                                                                END;
                                                                IF ("Ending Date Decl. Priv. Use" <> 0D) AND ("Starting Date Decl. Priv. Use" > "Ending Date Decl. Priv. Use") THEN
                                                                  ERROR(Text001, FIELDCAPTION("Starting Date Decl. Priv. Use"), "Ending Date Decl. Priv. Use");
                                                              END;

                                                   CaptionML=ENU=Starting Date Decl. No Priv. Use }
    { 115 ;   ;Ending Date Decl. Priv. Use;Date   ;OnValidate=BEGIN
                                                                IF "Ending Date Decl. Priv. Use" <> 0D THEN
                                                                  TESTFIELD("Declaration No Private Use", TRUE);
                                                                IF ("Ending Date Decl. Priv. Use" <> 0D) AND ("Ending Date Decl. Priv. Use" < "Starting Date Decl. Priv. Use") THEN
                                                                  ERROR(Text003, FIELDCAPTION("Ending Date Decl. Priv. Use"), "Starting Date Decl. Priv. Use");
                                                              END;

                                                   CaptionML=ENU=Ending Date Decl. No Priv. Use }
    { 120 ;   ;Max. Private Km per Year;Decimal   ;CaptionML=ENU=Max. Private Km per Year;
                                                   DecimalPlaces=0:0;
                                                   MinValue=0 }
    { 130 ;   ;Norm Amount         ;Decimal       ;CaptionML=ELL=Norm Amount;
                                                   MinValue=0 }
    { 150 ;   ;Contribution        ;Decimal       ;CaptionML=ENU=Contribution }
    { 160 ;   ;Driver Llicenses    ;Code10        ;CaptionML=ENU=Driver Llicenses }
    { 170 ;   ;Fuel Card No.       ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Vehicle 4PS"."Fuel Card No." WHERE (Plant Type=FIELD(Plant Type),
                                                                                                           Plant No.=FIELD(Plant No.)));
                                                   TableRelation="Fuel Card";
                                                   CaptionML=ENU=Fuel Card No.;
                                                   Editable=No }
    { 200 ;   ;Starting Date Update Mercash;Date  ;CaptionML=ENU=Startinge Date Update Mercash;
                                                   Description=Date used in Update Component Value in Mercash (R11012623);
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Plant Type,Plant No.,Starting Date      ;Clustered=Yes }
    {    ;Driver Company Name,Driver               }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528400 : TextConst 'ENU=%1 should be after %2.;NOR=%1 skal v‘re etter %2.;SVE=%1 ska vara efter %2.';
      Text001@1100528401 : TextConst 'ENU=%1 should not be after %2.;NOR=%1 kan ikke v‘re etter %2.;SVE=%1 f†r inte vara efter %2.';
      Text002@1100528403 : TextConst 'ENU=%1 should be before %2.;NOR=%1 skal v‘re f›r %2.;SVE=%1 ska vara f”re %2.';
      Text003@1100528402 : TextConst 'ENU=%1 should not be before %2.;NOR=%1 kan ikke v‘re f›r %2.;SVE=%1 f†r inte vara f”re %2.';
      Text004@1100529000 : TextConst 'ENU=Note: %1 (%2) also registered on vehicle %3-%4 from %5 %6';
      Text005@1100529001 : TextConst 'ENU=to %1';
      Text006@1100525000 : TextConst 'ENU=Fill %1 only when it differs from Plant Company';

    PROCEDURE CheckVehicle@1100529000(CheckExitMode@1100529003 : Boolean);
    VAR
      Vehicle@1100529000 : Record 11072667;
      ExitOrderNo@1100529001 : Code[20];
      ExitDate@1100529002 : Date;
    BEGIN
      Vehicle.GET("Plant Type", "Plant No.");
      IF CheckExitMode THEN
        Vehicle.CheckExit(ExitOrderNo, ExitDate, TRUE);
    END;

    PROCEDURE GetDriverFullName@1100528400() : Text[100];
    VAR
      Employee@1100528400 : Record 5200;
    BEGIN
      IF Driver = '' THEN
        EXIT;

      IF ("Driver Company Name" <>  '') THEN
        Employee.CHANGECOMPANY("Driver Company Name");

      IF Employee.GET(Driver) THEN
        EXIT(Employee."Full Name");
    END;

    LOCAL PROCEDURE CheckIfDriverIsAfterPrevDriver@1100528408(PreviousDriver@1100528400 : Record 11072668);
    BEGIN
      IF PreviousDriver."Ending Date" > 0D THEN
        IF "Starting Date" <= PreviousDriver."Ending Date" THEN
          ERROR(Text000, FIELDCAPTION("Starting Date"), PreviousDriver."Ending Date");
    END;

    LOCAL PROCEDURE CheckIfDriverIsBeforNextDriver@1100528404(NextDriver@1100528400 : Record 11072668);
    BEGIN
      IF "Ending Date" >= NextDriver."Starting Date" THEN
        ERROR(Text002, FIELDCAPTION("Ending Date"), NextDriver."Starting Date");
    END;

    PROCEDURE CheckDriverOnOtherVehicle@1100529002();
    VAR
      VehicleDriver@1100529000 : Record 11072668;
    BEGIN
      IF (Driver = '') OR ("Starting Date" = 0D) THEN
        EXIT;

      VehicleDriver.SETCURRENTKEY("Driver Company Name", Driver);
      VehicleDriver.SETRANGE("Driver Company Name", "Driver Company Name");
      VehicleDriver.SETRANGE(Driver, Driver);
      VehicleDriver.SETRANGE("Ending Date", 0D);
      IF VehicleDriver.FINDSET THEN BEGIN
        REPEAT
          IF (VehicleDriver."Plant Type" +'-'+ VehicleDriver."Plant No.") <> ("Plant Type" +'-'+ "Plant No.") THEN BEGIN
            IF ("Ending Date" = 0D) OR (("Ending Date" <> 0D) AND ("Ending Date" > VehicleDriver."Starting Date")) THEN BEGIN
              MESSAGE(Text004,
                FIELDCAPTION(Driver), Driver,
                VehicleDriver."Plant Type", VehicleDriver."Plant No.",
                VehicleDriver."Starting Date", '');
              EXIT;
            END;
          END;
        UNTIL VehicleDriver.NEXT = 0;
      END;

      VehicleDriver.SETFILTER("Ending Date", '<>%1', 0D);
      IF VehicleDriver.FINDSET THEN BEGIN
        REPEAT
          IF (VehicleDriver."Plant Type" +'-'+ VehicleDriver."Plant No.") <> ("Plant Type" +'-'+ "Plant No.") THEN BEGIN
            IF (("Starting Date" < VehicleDriver."Ending Date") AND
                (("Ending Date" = 0D) OR ("Ending Date" > VehicleDriver."Starting Date")))
            THEN BEGIN
              MESSAGE(Text004,
                FIELDCAPTION(Driver), Driver,
                VehicleDriver."Plant Type", VehicleDriver."Plant No.",
                VehicleDriver."Starting Date", STRSUBSTNO(Text005, VehicleDriver."Ending Date"));
              EXIT;
            END;
          END;
        UNTIL VehicleDriver.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE FillEndingDateOfDriver@1100528401(VehicleDriver@1100528401 : Record 11072668;EndingDate@1100528400 : Date);
    BEGIN
      IF VehicleDriver."Ending Date" = 0D THEN BEGIN
        VehicleDriver."Ending Date" := EndingDate;
        VehicleDriver.MODIFY;
      END;
    END;

    LOCAL PROCEDURE GetPreviousDriver@1100528405(VAR PreviousDriver@1100528401 : Record 11072668) : Boolean;
    BEGIN
      PreviousDriver.SETRANGE("Plant Type", "Plant Type");
      PreviousDriver.SETRANGE("Plant No.", "Plant No.");
      PreviousDriver.SETFILTER("Starting Date", '<>%1 & <%2', xRec."Starting Date", "Starting Date");
      IF PreviousDriver.FINDLAST THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE GetNextDriver@1100528402(VAR NextDriver@1100528401 : Record 11072668) : Boolean;
    BEGIN
      NextDriver.SETRANGE("Plant Type", "Plant Type");
      NextDriver.SETRANGE("Plant No.", "Plant No.");
      NextDriver.SETFILTER("Starting Date", '<>%1 & >%2', xRec."Starting Date", "Starting Date");
      IF NextDriver.FINDFIRST THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE FillFiscalValuePercentage@1100528403();
    VAR
      Vehicle@1100528400 : Record 11072667;
    BEGIN
      IF Vehicle.GET("Plant Type", "Plant No.") THEN
        "Fiscal Value Percentage" := Vehicle."Fiscal Value Percentage";
    END;

    PROCEDURE CalcOverrunNormAmount@1100529001() : Decimal;
    VAR
      CarLeaseContract@1100529000 : Record 11012540;
    BEGIN
      CarLeaseContract.SETRANGE("Plant Type", "Plant Type");
      CarLeaseContract.SETRANGE("Plant No.", "Plant No.");
      IF CarLeaseContract.FINDLAST THEN BEGIN
        IF CarLeaseContract."Monthly Amount" > "Norm Amount" THEN
          EXIT(CarLeaseContract."Monthly Amount" - "Norm Amount");
      END;
      EXIT(0);
    END;

    BEGIN
    {
      Copied from table 'Car Lease Contract Driver'. That table is expired, now drivers by Vehicle
    }
    END.
  }
}

