OBJECT Codeunit 11012240 Liquidity Prognosis Amounts
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      AccountingPeriod@1100525021 : Record 50;
      Job@1100530003 : Record 11072003;
      Prognosis@1100525018 : Record 11012034;
      PrognosisLine@1100530001 : Record 11012035;
      LiqPrognosisSetup@1100530000 : Record 11020600;
      PeriodCounter@1100525007 : Integer;

    PROCEDURE CreatePeriodPrognosisProject@1100525000(Project@1100525000 : Code[20];PrognosisDate@1100525001 : Date;VAR PeriodAmountIn@1100525002 : Decimal;VAR PeriodAmountOut@1100525003 : Decimal;VAR TotalPeriodAmountIn@1100525004 : Decimal;VAR TotalPeriodAmountOut@1100525005 : Decimal);
    VAR
      ActualCosts@1100530000 : Decimal;
      PrognosisRev@1100530002 : Decimal;
      PrognosisCost@1100530001 : Decimal;
    BEGIN
      LiqPrognosisSetup.GET();

      Prognosis.SETRANGE("Project No.",Project);
      Prognosis.SETFILTER("Prognosis Date",'<=%1',PrognosisDate);
      IF Prognosis.FINDLAST THEN BEGIN
        IF Prognosis."Prognosis Level" = Prognosis."Prognosis Level"::Rough THEN BEGIN
          PrognosisCost := Prognosis."Rough Prognosis Total Cost";
          PrognosisRev  := Prognosis."Rough Prognosis Total Revenues";
        END ELSE BEGIN
          Prognosis.CALCFIELDS("Prognosis Total Cost");
          Prognosis.CALCFIELDS("Prognosis Revenue");
          IF LiqPrognosisSetup."Based on Total Progn or Progn" = LiqPrognosisSetup."Based on Total Progn or Progn"::Prognosis THEN BEGIN
            PrognosisLine.SETRANGE("Project No.",Project);
            PrognosisLine.SETRANGE("Prognosis Date",Prognosis."Prognosis Date");
            IF PrognosisLine.FINDSET THEN BEGIN
              REPEAT
                ActualCosts := ActualCosts + PrognosisLine."Actual Costs";
              UNTIL PrognosisLine.NEXT = 0;
            END;
            PrognosisCost := Prognosis."Prognosis Total Cost" - ActualCosts;
            PrognosisRev  := Prognosis."Prognosis Revenue";
          END ELSE BEGIN
            PrognosisCost := Prognosis."Prognosis Total Cost";
            PrognosisRev  := Prognosis."Prognosis Revenue" + Prognosis.GetRevenueProjectInvoiced;
          END;
        END;
      END;

      TotalPeriodAmountIn := ROUND(PrognosisRev,1);
      TotalPeriodAmountOut := ROUND(PrognosisCost,1);

      Job.GET(Project);
      AccountingPeriod.SETFILTER("Starting Date",'%1..%2',PrognosisDate,Job."Ending Date");
      PeriodCounter := AccountingPeriod.COUNT;
      IF PeriodCounter <> 0 THEN BEGIN
        PeriodAmountIn := ROUND(PrognosisRev / PeriodCounter,1);
        PeriodAmountOut := ROUND(PrognosisCost / PeriodCounter,1);
      END ELSE BEGIN
        PeriodAmountIn := 0;
        PeriodAmountOut := 0;
      END;
    END;

    BEGIN
    END.
  }
}

