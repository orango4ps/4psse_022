OBJECT Table 11125528 Working Hours (SMF)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ProjShift@1210190000 : Record 11125538;
             BEGIN
               ProjShift.SETRANGE("Project No.", "Project No.");
               ProjShift.SETFILTER("Shift Code", '<>%1', '');
               IF ProjShift.ISEMPTY THEN
                 TESTFIELD("Shift Code", '')
               ELSE
                 TESTFIELD("Shift Code");
             END;

    CaptionML=[ENU=Working Hours (Site Manager Form);
               NOR=Arbeidstimer (prosjektlederskjema);
               SVE=Arbetstimmar (byggledarformul„r)];
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr] }
    { 15  ;   ;Shift Code          ;Code10        ;TableRelation="Project Shift (SMF)"."Shift Code" WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Shift Work Description");
                                                              END;

                                                   CaptionML=[ENU=Shift Code;
                                                              NOR=Skiftkode;
                                                              SVE=Skiftkod];
                                                   Description=Empty on project level }
    { 20  ;   ;Date                ;Date          ;CaptionML=[ENU=Date;
                                                              NOR=Dato;
                                                              SVE=Datum];
                                                   NotBlank=Yes;
                                                   Description=Only enter working times for a special date if this day has other working times }
    { 30  ;   ;Starting Time       ;Time          ;OnValidate=BEGIN
                                                                RoundTimeOnMinutes("Starting Time");
                                                              END;

                                                   CaptionML=[ENU=Start Time;
                                                              NOR=Starttid;
                                                              SVE=Starttid] }
    { 40  ;   ;Ending Time         ;Time          ;OnValidate=BEGIN
                                                                RoundTimeOnMinutes("Ending Time");
                                                              END;

                                                   CaptionML=[ENU=End Time;
                                                              NOR=Sluttid;
                                                              SVE=Sluttid] }
    { 50  ;   ;Shift Work Description;Text30      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Shift (SMF)".Description WHERE (Code=FIELD(Shift Code)));
                                                   CaptionML=[ENU=Shift Description;
                                                              NOR=Skiftbeskrivelse;
                                                              SVE=Skiftbeskrivning];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Project No.,Shift Code,Date             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE SetUpNewLine@1100525001(IDefaultDate@1100525001 : Date);
    VAR
      lvWorkHrsRec@1100525000 : Record 11125528;
    BEGIN
      IF ("Project No." = '') OR (IDefaultDate = 0D) THEN
        EXIT;

      IF NOT lvWorkHrsRec.GET("Project No.", "Shift Code", IDefaultDate) THEN  //*DP00033.c (also shift)
        Date := IDefaultDate;
    END;

    PROCEDURE FillTimesWithPrevious@1100525002();
    VAR
      lvWorkHrsRec@1100525000 : Record 11125528;
      ProjShift@1210190000 : Record 11125538;
    BEGIN
      IF ("Project No." = '') OR (Date = 0D) OR ("Starting Time" <> 0T) OR ("Ending Time" <> 0T) THEN
        EXIT;
      //*DP00033.sn
      IF ("Shift Code" = '') THEN BEGIN
        ProjShift.SETRANGE("Project No.", "Project No.");
        IF NOT ProjShift.ISEMPTY THEN
          EXIT;
      END;
      //*DP00033.en

      lvWorkHrsRec.SETRANGE("Project No.", "Project No.");
      lvWorkHrsRec.SETRANGE("Shift Code", "Shift Code");  //*DP00033.n
      lvWorkHrsRec.SETRANGE(Date, 0D, Date - 1);
      IF lvWorkHrsRec.FINDLAST THEN BEGIN
        "Starting Time" := lvWorkHrsRec."Starting Time";
        "Ending Time" := lvWorkHrsRec."Ending Time";
      END;
    END;

    PROCEDURE RoundTimeOnMinutes@1100525000(VAR VarTime@1100525000 : Time);
    VAR
      lvDateTime@1100525001 : DateTime;
    BEGIN
      IF VarTime = 0T THEN
        EXIT;
      lvDateTime := CREATEDATETIME(TODAY, VarTime);
      lvDateTime := ROUNDDATETIME(lvDateTime, 60000);
      VarTime := DT2TIME(lvDateTime);
    END;

    BEGIN
    END.
  }
}

