OBJECT Codeunit 12013643 Exflow Pre Post
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF510000;
  }
  PROPERTIES
  {
    TableNo=12013587;
    OnRun=VAR
            ExflowDocHead@1100285000 : Record 12013608;
            PurchOrderLine@1100285004 : Record 39;
            PurchRcptLine@1100285003 : Record 121;
            PurchReturnShipLine@1100285006 : Record 6651;
            ExFlowVend@1100285002 : Record 12013595;
            ExflowPurchDocLine@1100285007 : Record 12013588;
            PurchInvHeader@1100285019 : Record 38;
            PurchInvLine@1100285018 : Record 39;
            ExflowSetup@1100285020 : Record 12013601;
            Field@1100285005 : Record 2000000041;
            PrePmtOrderHeader@1100285026 : Record 38;
            ExFlowDocLine@1100285028 : Record 12013609;
            ExfImportedArchiveHead@1100285021 : Record 12013650;
            EXJnlBatch@1100285031 : Record 12013590;
            WebVendorNames@1100285033 : Record 12013631;
            PurchDocWarningDoc@1100285035 : Record 12013636;
            ExDocHead2@1100285017 : Record 12013612;
            ExFlowSEFunctions@1100285008 : Codeunit 12013598;
            ExPeriodicMgt@1100285039 : Codeunit 12013599;
            UpdatePurchLine@1100285009 : Codeunit 12013609;
            ExCustGetRec@1100285010 : Codeunit 12013628;
            ExflowWorkflowMgt@1100285022 : Codeunit 12013593;
            ExDimMgt@1100285023 : Codeunit 12013605;
            ExFlowPurchPost@1100285024 : Codeunit 12013603;
            NoSeriesMgt@1100285032 : Codeunit 396;
            TempImageName@1100285001 : Text[250];
            PrePmtValue@1100285025 : Decimal;
            TotalPrePaymentAmount@1100285029 : Decimal;
            HighestLineNo@1100285030 : Integer;
            ReceiptConnected@1100285012 : Boolean;
            AutoReceipt@1100285013 : Boolean;
            HeaderLineDiff@1100285015 : Boolean;
            MiscChargeNotAutoApproved@1100285027 : Boolean;
            RecRef@1100285011 : RecordRef;
            FldRef@1100285016 : FieldRef;
            ContractMatched@1100285034 : Boolean;
            ContrWarning@1100285036 : Text[250];
            TempBlob@1100285037 : Record 99008535;
            CopyExLinks@1100285038 : Codeunit 12013620;
            RODocument@1100285040 : Record 12057083;
            ExFlowToInvoice@1100285014 : Codeunit 12013592;
          BEGIN
            ExflowSetup.GET;

            IF CancelPrePost(Rec,ExflowSetup) THEN
              EXIT;

            TESTFIELD("Pre Posting", "Pre Posting"::"Pre Post");
            ExflowSetup.GET;
            ExflowSetup.TESTFIELD("Automatic Reg. of Inwards");

            ExFlowToInvoice.CreatePurchInvHeader(Rec,PurchInvHeader);
            PurchInvHeader.VALIDATE("Buy-from Vendor No.","Buy-from Vendor No.");
            PurchInvHeader.TRANSFERFIELDS(Rec,FALSE);
            PurchInvHeader."No. Printed" := 0;
            PurchInvHeader.Status := PurchInvHeader.Status::Open;
            PurchInvHeader.Approve := FALSE;
            PurchInvHeader.VALIDATE("Gross Invoice Amount ExFlow", "Document Amount Including VAT");
            PurchInvHeader.VALIDATE("Import VAT Amount", "Document Amount VAT");
            PurchInvHeader."Block Document" := "Block Document"::Posting;
            ExDimMgt.CopyDimFromImpHeader(DATABASE::"Exflow Purch. Document Header","Document Type",FORMAT("Inbound Document No."),
                                            DATABASE::"Purchase Header",PurchInvHeader."Document Type",PurchInvHeader."No.");
            PurchInvHeader."Order Date" := "Order Date";
            IF "Posting Date" <> 0D THEN
              PurchInvHeader."Posting Date" := "Posting Date";
            PurchInvHeader."Document Date" := "Document Date";
            PurchInvHeader."Expected Receipt Date" := "Expected Receipt Date";
            PurchInvHeader."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
            PurchInvHeader."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
            PurchInvHeader."Dimension Set ID" := "Dimension Set ID";
            PurchInvHeader."Vendor Order No." := "Order No. (Import)";

            IF "Document Type" = "Document Type"::Invoice THEN
              PurchInvHeader."Vendor Invoice No." := "Vendor Document No.";
            IF "Document Type" = "Document Type"::"Credit Memo" THEN
              PurchInvHeader."Vendor Cr. Memo No." := "Vendor Document No.";

            PurchInvHeader.MODIFY(FALSE);

            IF ExflowSetup."Automatic Reg. of Inwards" = ExflowSetup."Automatic Reg. of Inwards"::"Values from Lines" THEN BEGIN
              ExflowPurchDocLine.RESET;
              ExflowPurchDocLine.SETRANGE("Inbound Document No.","Inbound Document No.");
              IF ExflowPurchDocLine.FINDSET THEN
                REPEAT
                  PurchInvLine.INIT;
                  PurchInvLine.TRANSFERFIELDS(ExflowPurchDocLine);
                  PurchInvLine."Sales Order No." := '';
                  PurchInvLine."Sales Order Line No." := 0;
                  PurchInvLine."Drop Shipment" := FALSE;

                  PurchInvLine."Document Type" := PurchInvHeader."Document Type";
                  PurchInvLine."Document No." := PurchInvHeader."No.";
                  PurchInvLine."Line No." := ExflowPurchDocLine."Line No.";
                  PurchInvLine."Shortcut Dimension 1 Code" := ExflowPurchDocLine."Shortcut Dimension 1 Code";
                  PurchInvLine."Shortcut Dimension 2 Code" := ExflowPurchDocLine."Shortcut Dimension 2 Code";
                  PurchInvLine."Dimension Set ID" := ExflowPurchDocLine."Dimension Set ID";
                  PurchInvLine."ExFlow Order No." := '';
                  PurchInvLine."ExFlow Order Line No." := 0;
                  PurchInvLine."Receipt No." := '';
                  PurchInvLine."Receipt Line No." := 0;
                  PurchInvLine."Receipt No. Mandatory" := FALSE;
                  PurchInvLine."Return Shipment No." := '';
                  PurchInvLine."Return Shipment Line No." := 0;
                  PurchInvLine.Approve := FALSE;
                  PurchInvLine.INSERT(FALSE);
                UNTIL ExflowPurchDocLine.NEXT = 0;
            END;

            ExFlowSEFunctions.InwardNav(PurchInvHeader);

            "Pre Posting" := "Pre Posting"::"Pre Posted";
            "Pre Post No." := PurchInvHeader."No.";
            MODIFY;
            COMMIT;
          END;

  }
  CODE
  {
    VAR
      PurchDocHeader@1100285000 : Record 38;
      EXF101@1100285004 : TextConst 'ENU=There is nothing to release for %1 %2.;SVE=Det finns inget att sl„ppa f”r %1 %2.';
      RealCreate@1100285009 : Boolean;
      EXF107@1100285012 : TextConst 'ENU=Automatically approved by Group: %1;SVE=Attesterad Automatiskt av %1';
      PostingDate@1100285013 : Date;
      PostingDateExists@1100285016 : Boolean;
      ReplacePostingDate@1100285015 : Boolean;
      ReplaceDocumentDate@1100285014 : Boolean;
      EXF108@1100285005 : TextConst 'ENU=Matched order lines not received.;SVE=Matchade orderrader utan inleverans.';
      EXF110@1100285007 : TextConst 'ENU=-1;SVE=-1';
      Window@1100285018 : Dialog;
      EXF112@1100285019 : TextConst 'ENU=Creating Document #1####################\;SVE=Skapar dokument #1####################\';
      EXF113@1100285020 : TextConst 'ENU=Creating Line     #2####################;SVE=Skapar rad      #2####################';
      EXF114@1100285001 : TextConst 'ENU=Field %1 has value %2.;SVE=F„lt %1 har v„rde %2.';
      EXF115@1100285002 : TextConst 'ENU=Prepayment connected to Order %1 with percentage %2.;SVE=F”rskottsbetalning kopplad mot order %1 med procent %2.';
      EXF116@1100285003 : TextConst 'ENU="Contract Warning - ";SVE="Avtalsvarning - "';
      EXF117@1100285006 : TextConst 'ENU=Total prepayment % may not exceed 100%;SVE=Totalt f”rskottsbelopp f†r ej ”verstiga 100%';
      UpdatePeriodics@1100285008 : Boolean;
      HideDialog@1100285010 : Boolean;

    LOCAL PROCEDURE CancelPrePost@1100285000(VAR ExPurchDocHeader@1100285000 : Record 12013587;ExFlowSetup@1100285001 : Record 12013601) : Boolean;
    BEGIN
      IF ExPurchDocHeader."ExFlow Document Type" = ExPurchDocHeader."ExFlow Document Type"::Invoice THEN
        EXIT(FALSE);

      IF (ExPurchDocHeader."ExFlow Document Type" = ExPurchDocHeader."ExFlow Document Type"::"Credit Memo") AND (ExFlowSetup."Inward Applies to" = ExFlowSetup."Inward Applies to"::"Invoices & Cre. Memos") THEN
        EXIT(FALSE);

      ExPurchDocHeader."Pre Posting" := ExPurchDocHeader."Pre Posting"::" ";
      ExPurchDocHeader.MODIFY;
      COMMIT;
      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

