OBJECT Table 11072307 Service Planning Set Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Set Code");
               TESTFIELD("Work Order Seq. No.");
             END;

    OnDelete=VAR
               ServicePlanningSetSUPLine@1100528600 : Record 11072308;
               ServicePlanningSetLine@1100528601 : Record 11072307;
             BEGIN
               ServicePlanningSetSUPLine.SETRANGE("Set Code", "Set Code");
               ServicePlanningSetSUPLine.SETRANGE("Work Order Seq. No.", "Work Order Seq. No.");
               ServicePlanningSetSUPLine.DELETEALL(TRUE);

               ServicePlanningSetLine.SETRANGE("Set Code", "Set Code");
               ServicePlanningSetLine.SETRANGE("Related Work Order Seq. No.", "Work Order Seq. No.");
               IF ServicePlanningSetLine.FINDSET THEN
                 REPEAT
                   ServicePlanningSetLine.VALIDATE("Schedule Relation", ServicePlanningSetLine."Schedule Relation"::" ");
                   ServicePlanningSetLine.MODIFY(TRUE);
                 UNTIL ServicePlanningSetLine.NEXT = 0;
             END;

    CaptionML=ENU=Service Planning Set Line;
    LookupPageID=Page11126797;
    DrillDownPageID=Page11126797;
  }
  FIELDS
  {
    { 10  ;   ;Set Code            ;Code10        ;TableRelation="Service Planning Set";
                                                   CaptionML=[ENU=Set Code;
                                                              NOR=Still inn kode;
                                                              SVE=St„ll in kod];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 20  ;   ;Work Order Seq. No. ;Integer       ;CaptionML=ENU=Work Order Seq. No.;
                                                   BlankZero=Yes }
    { 30  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 40  ;   ;Resource Type       ;Option        ;OnValidate=BEGIN
                                                                IF xRec."Resource Type" <> "Resource Type" THEN BEGIN
                                                                  VALIDATE("Resource No.", '');
                                                                  CALCFIELDS("Resource Name", "Resource Company");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Resource Type;
                                                              NOR=Ressurstype;
                                                              SVE=Resurstyp];
                                                   OptionCaptionML=[ENU=" ,Employee,Subontractor,Plant";
                                                                    SVE=" ,Anst„lld,Underentrepren”r,Maskin"];
                                                   OptionString=[ ,Employee,Subcontractor,Plant] }
    { 50  ;   ;Resource No.        ;Code20        ;TableRelation="Resource (WOP)" WHERE (Type=FIELD(Resource Type),
                                                                                         Schedule=FILTER(ServiceOrder|Both));
                                                   OnValidate=VAR
                                                                ResourceMgtWorkOrderPlan@1100528600 : Codeunit 11229277;
                                                              BEGIN
                                                                IF NOT GUIALLOWED AND (CurrFieldNo = 0) THEN //Call from GWP
                                                                  CurrFieldNo := FIELDNO("Resource No.");
                                                                ResourceMgtWorkOrderPlan.TestResourceWithinCompanyPlanGroup("Resource No.");
                                                                CALCFIELDS("Resource Name", "Resource Company");
                                                                CheckResourceSchedule(TRUE);
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupResourceNo(TRUE);
                                                            END;

                                                   CaptionML=[ENU=Resource No.;
                                                              NOR=Ressursnr.;
                                                              SVE=Resursnr] }
    { 60  ;   ;Resource Name       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Resource (WOP)".Name WHERE (No.=FIELD(Resource No.)));
                                                   CaptionML=[ENU=Resource Name;
                                                              NOR=Ressursnavn;
                                                              SVE=Resursnamn];
                                                   Editable=No }
    { 70  ;   ;Resource Company    ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Resource (WOP)".Company WHERE (No.=FIELD(Resource No.)));
                                                   TableRelation=Company;
                                                   CaptionML=[ENU=Resource Company;
                                                              SVE=F”retag resurs];
                                                   Editable=No }
    { 80  ;   ;Leading Resource    ;Boolean       ;OnValidate=VAR
                                                                ServicePlanningSetLine@1100528600 : Record 11072307;
                                                              BEGIN
                                                                IF "Leading Resource" THEN BEGIN
                                                                  TESTFIELD("Resource Type", "Resource Type"::Employee);
                                                                  TESTFIELD("Resource No.");
                                                                  ServicePlanningSetLine.SETRANGE("Set Code", "Set Code");
                                                                  ServicePlanningSetLine.SETFILTER("Work Order Seq. No.", '<>%1', "Work Order Seq. No.");
                                                                  ServicePlanningSetLine.SETRANGE("Leading Resource", TRUE);
                                                                  IF NOT ServicePlanningSetLine.ISEMPTY THEN
                                                                    ServicePlanningSetLine.MODIFYALL("Leading Resource", FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Leading Resource;
                                                              SVE=Verkst„llande resurs] }
    { 90  ;   ;Expected Hours      ;Decimal       ;CaptionML=[ENU=Expected Hours;
                                                              NOR=Forventede timer;
                                                              SVE=F”rv„ntade timmar];
                                                   DecimalPlaces=0:5 }
    { 100 ;   ;Schedule Relation   ;Option        ;OnValidate=BEGIN
                                                                IF "Schedule Relation" = "Schedule Relation"::" " THEN
                                                                  "Related Work Order Seq. No." := 0;
                                                              END;

                                                   CaptionML=[ENU=Schedule Relation;
                                                              NOR=Tidsplan, relasjon;
                                                              SVE=Planering, relation];
                                                   OptionCaptionML=[ENU=" ,Start-Start,,End-Start";
                                                                    SVE=" ,Start-Start,,Slut-Start"];
                                                   OptionString=[ ,Start-Start,,End-Start] }
    { 110 ;   ;Related Work Order Seq. No.;Integer;TableRelation="Service Planning Set Line"."Work Order Seq. No." WHERE (Set Code=FIELD(Set Code));
                                                   OnValidate=BEGIN
                                                                TestRecursiveness;
                                                                IF "Related Work Order Seq. No." <> 0 THEN BEGIN
                                                                  IF "Related Work Order Seq. No." = "Work Order Seq. No." THEN
                                                                    FIELDERROR("Related Work Order Seq. No.");
                                                                  TESTFIELD("Schedule Relation");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupRelatedWorkOrder(TRUE);
                                                            END;

                                                   CaptionML=ENU=Related Work Order Seq. No.;
                                                   BlankZero=Yes }
    { 120 ;   ;Work Order No.      ;Code20        ;CaptionML=[ENU=Work Order No.;
                                                              SVE=Serviceordernr];
                                                   Description=buffer field;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Set Code,Work Order Seq. No.            ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Work Order Seq. No.,Description,Resource No. }
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=Assignment not accepted: the result would be a never ending chain of Work Orders';

    LOCAL PROCEDURE CheckResourceSchedule@1100528600(IErrorMode@1100528600 : Boolean) : Boolean;
    VAR
      ResourceWOP@1100528601 : Record 11229278;
    BEGIN
      IF "Resource No." = '' THEN
        EXIT(TRUE);
      ResourceWOP.GET("Resource No.");
      IF ResourceWOP.Schedule IN [ResourceWOP.Schedule::ServiceOrder, ResourceWOP.Schedule::Both] THEN
        EXIT(TRUE);
      IF IErrorMode THEN
        ResourceWOP.FIELDERROR(Schedule);
    END;

    LOCAL PROCEDURE TestRecursiveness@1100525014();
    VAR
      ServicePlanningSetLine@1100525001 : Record 11072307;
      RelatedWorkOrderNo@1100525000 : Integer;
    BEGIN
      RelatedWorkOrderNo := "Related Work Order Seq. No.";
      WHILE RelatedWorkOrderNo <> 0 DO BEGIN
        IF RelatedWorkOrderNo = "Work Order Seq. No." THEN
          ERROR(Text000);
        IF NOT ServicePlanningSetLine.GET("Set Code", RelatedWorkOrderNo) THEN
          EXIT;
        RelatedWorkOrderNo := ServicePlanningSetLine."Related Work Order Seq. No.";
      END;
    END;

    PROCEDURE LookupRelatedWorkOrder@1100527003(IEditableMode@1100527000 : Boolean);
    VAR
      ServicePlanningSetLine@1100527001 : Record 11072307;
    BEGIN
      ServicePlanningSetLine.SETRANGE("Set Code", "Set Code");
      ServicePlanningSetLine.SETFILTER("Work Order Seq. No.", '<>%1', "Work Order Seq. No.");
      IF NOT IEditableMode THEN
        PAGE.RUNMODAL(0, ServicePlanningSetLine)
      ELSE BEGIN
        IF PAGE.RUNMODAL(0, ServicePlanningSetLine) = ACTION::LookupOK THEN BEGIN
          IF (ServicePlanningSetLine."Work Order Seq. No." <> "Related Work Order Seq. No.") AND
             (ServicePlanningSetLine."Work Order Seq. No." <> "Work Order Seq. No.")
          THEN
            VALIDATE("Related Work Order Seq. No.", ServicePlanningSetLine."Work Order Seq. No.");
        END;
      END;
    END;

    PROCEDURE LookupResourceNo@1100529005(IEditableMode@1100529000 : Boolean);
    VAR
      Resource@1100529002 : Record 11229278;
      ResourceList@1100529001 : Page 11229278;
    BEGIN
      Resource.SETRANGE(Type, "Resource Type");
      Resource.SETFILTER(Schedule, '%1|%2', Resource.Schedule::ServiceOrder, Resource.Schedule::Both);
      ResourceList.SETTABLEVIEW(Resource);
      Resource."No." := "Resource No.";
      ResourceList.SETRECORD(Resource);
      ResourceList.LOOKUPMODE(IEditableMode);
      IF ResourceList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        ResourceList.GETRECORD(Resource);
        VALIDATE("Resource No.", Resource."No.");
      END;
    END;

    PROCEDURE GetBudgetHours@1100528601() Hours : Decimal;
    VAR
      ServicePlanningSetSUPLine@1100528601 : Record 11072308;
    BEGIN
      ServicePlanningSetSUPLine.SETRANGE("Set Code", "Set Code");
      ServicePlanningSetSUPLine.SETRANGE("Work Order Seq. No.", "Work Order Seq. No.");
      IF ServicePlanningSetSUPLine.FINDSET THEN
        REPEAT
          Hours += ServicePlanningSetSUPLine.GetBudgetHours;
        UNTIL ServicePlanningSetSUPLine.NEXT = 0;
    END;

    PROCEDURE InitNewRecord@1100528602();
    VAR
      ServicePlanningSetLine@1100528600 : Record 11072307;
    BEGIN
      ServicePlanningSetLine.SETRANGE("Set Code", "Set Code");
      IF ServicePlanningSetLine.FINDLAST THEN
        "Work Order Seq. No." := ServicePlanningSetLine."Work Order Seq. No.";
      "Work Order Seq. No." += 1;
    END;

    BEGIN
    END.
  }
}

