OBJECT Table 365 Analysis View Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03,4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Analysis View Entry;
               NOR=Analysevisningspost;
               SVE=Analysvytransaktion];
    LookupPageID=Page558;
    DrillDownPageID=Page558;
  }
  FIELDS
  {
    { 1   ;   ;Analysis View Code  ;Code10        ;TableRelation="Analysis View" WHERE (Account Source=FIELD(Account Source));
                                                   CaptionML=[ENU=Analysis View Code;
                                                              NOR=Analysevisningskode;
                                                              SVE=Analysvykod];
                                                   NotBlank=Yes }
    { 2   ;   ;Business Unit Code  ;Code20        ;TableRelation="Business Unit";
                                                   CaptionML=[ENU=Business Unit Code;
                                                              NOR=Konsernkode;
                                                              SVE=Aff„rsenhetskod] }
    { 3   ;   ;Account No.         ;Code20        ;TableRelation=IF (Account Source=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Account Source=CONST(Cash Flow Account)) "Cash Flow Account";
                                                   CaptionML=[ENU=Account No.;
                                                              NOR=Kontonr.;
                                                              SVE=Nr] }
    { 4   ;   ;Dimension 1 Value Code;Code20      ;AccessByPermission=TableData 348=R;
                                                   CaptionML=[ENU=Dimension 1 Value Code;
                                                              NOR=Dimensjon 1-verdi - kode;
                                                              SVE=Dimension 1 v„rdekod];
                                                   CaptionClass=GetCaptionClass(1) }
    { 5   ;   ;Dimension 2 Value Code;Code20      ;AccessByPermission=TableData 348=R;
                                                   CaptionML=[ENU=Dimension 2 Value Code;
                                                              NOR=Dimensjon 2-verdi - kode;
                                                              SVE=Dimension 2 v„rdekod];
                                                   CaptionClass=GetCaptionClass(2) }
    { 6   ;   ;Dimension 3 Value Code;Code20      ;AccessByPermission=TableData 350=R;
                                                   CaptionML=[ENU=Dimension 3 Value Code;
                                                              NOR=Dimensjon 3-verdi - kode;
                                                              SVE=Dimension 3 v„rdekod];
                                                   CaptionClass=GetCaptionClass(3) }
    { 7   ;   ;Dimension 4 Value Code;Code20      ;AccessByPermission=TableData 350=R;
                                                   CaptionML=[ENU=Dimension 4 Value Code;
                                                              NOR=Dimensjon 4-verdi - kode;
                                                              SVE=Dimension 4 v„rdekod];
                                                   CaptionClass=GetCaptionClass(4) }
    { 8   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              NOR=Bokf›ringsdato;
                                                              SVE=Bokf”ringsdatum] }
    { 9   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              NOR=L›penr.;
                                                              SVE=L”pnr] }
    { 10  ;   ;Amount              ;Decimal       ;OnLookup=BEGIN
                                                              DrillDown;
                                                            END;

                                                   CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   AutoFormatType=1 }
    { 11  ;   ;Debit Amount        ;Decimal       ;CaptionML=[ENU=Debit Amount;
                                                              NOR=Debetbel›p;
                                                              SVE=Debetbelopp];
                                                   AutoFormatType=1 }
    { 12  ;   ;Credit Amount       ;Decimal       ;CaptionML=[ENU=Credit Amount;
                                                              NOR=Kreditbel›p;
                                                              SVE=Kreditbelopp];
                                                   AutoFormatType=1 }
    { 13  ;   ;Add.-Curr. Amount   ;Decimal       ;AccessByPermission=TableData 4=R;
                                                   CaptionML=[ENU=Add.-Curr. Amount;
                                                              NOR=Till.val.bel›p;
                                                              SVE=Alt. valuta belopp];
                                                   AutoFormatType=1 }
    { 14  ;   ;Add.-Curr. Debit Amount;Decimal    ;AccessByPermission=TableData 4=R;
                                                   CaptionML=[ENU=Add.-Curr. Debit Amount;
                                                              NOR=Till.val. - debetbel›p;
                                                              SVE=Alt. valutadebetbelopp];
                                                   AutoFormatType=1 }
    { 15  ;   ;Add.-Curr. Credit Amount;Decimal   ;AccessByPermission=TableData 4=R;
                                                   CaptionML=[ENU=Add.-Curr. Credit Amount;
                                                              NOR=Till.val. - kreditbel›p;
                                                              SVE=Alt. valutakreditbelopp];
                                                   AutoFormatType=1 }
    { 16  ;   ;Account Source      ;Option        ;CaptionML=[ENU=Account Source;
                                                              NOR=Kontokilde;
                                                              SVE=Kontok„lla];
                                                   OptionCaptionML=[ENU=G/L Account,Cash Flow Account;
                                                                    NOR=Finanskonto,Kontantstr›mkonto;
                                                                    SVE=Redovisningskonto,Konto f”r kassafl”de];
                                                   OptionString=G/L Account,Cash Flow Account }
    { 17  ;   ;Cash Flow Forecast No.;Code20      ;TableRelation="Cash Flow Forecast";
                                                   CaptionML=[ENU=Cash Flow Forecast No.;
                                                              NOR=Kontantstr›mprognosenr.;
                                                              SVE=Kassafl”desprognosnr] }
  }
  KEYS
  {
    {    ;Analysis View Code,Account No.,Account Source,Dimension 1 Value Code,Dimension 2 Value Code,Dimension 3 Value Code,Dimension 4 Value Code,Business Unit Code,Posting Date,Entry No.,Cash Flow Forecast No.;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Analysis View Code,Account No.,Account Source,Dimension 1 Value Code,Dimension 2 Value Code,Dimension 3 Value Code,Dimension 4 Value Code,Business Unit Code,Posting Date,Cash Flow Forecast No.;
                                                   SumIndexFields=Amount,Debit Amount,Credit Amount,Add.-Curr. Amount,Add.-Curr. Debit Amount,Add.-Curr. Credit Amount }
    {    ;Analysis View Code,Entry No.,Posting Date }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=1,5,,Dimension 1 Value Code;NOR=1,5,,Dimensjon 1-verdi - kode;SVE=1,5,,Dimension 1 v„rdekod';
      Text001@1001 : TextConst 'ENU=1,5,,Dimension 2 Value Code;NOR=1,5,,Dimensjon 2-verdi - kode;SVE=1,5,,Dimension 2 v„rdekod';
      Text002@1002 : TextConst 'ENU=1,5,,Dimension 3 Value Code;NOR=1,5,,Dimensjon 3-verdi - kode;SVE=1,5,,Dimension 3 v„rdekod';
      Text003@1003 : TextConst 'ENU=1,5,,Dimension 4 Value Code;NOR=1,5,,Dimensjon 4-verdi - kode;SVE=1,5,,Dimension 4 v„rdekod';
      AnalysisView@1004 : Record 363;
      DPA_Management@1100000999 : Codeunit 11012783;

    [External]
    PROCEDURE GetCaptionClass@7(AnalysisViewDimType@1000 : Integer) : Text[250];
    BEGIN
      IF AnalysisView.Code <> "Analysis View Code" THEN
        AnalysisView.GET("Analysis View Code");
      CASE AnalysisViewDimType OF
        1:
          BEGIN
            IF AnalysisView."Dimension 1 Code" <> '' THEN
              EXIT('1,5,' + AnalysisView."Dimension 1 Code");

            EXIT(Text000);
          END;
        2:
          BEGIN
            IF AnalysisView."Dimension 2 Code" <> '' THEN
              EXIT('1,5,' + AnalysisView."Dimension 2 Code");

            EXIT(Text001);
          END;
        3:
          BEGIN
            IF AnalysisView."Dimension 3 Code" <> '' THEN
              EXIT('1,5,' + AnalysisView."Dimension 3 Code");

            EXIT(Text002);
          END;
        4:
          BEGIN
            IF AnalysisView."Dimension 4 Code" <> '' THEN
              EXIT('1,5,' + AnalysisView."Dimension 4 Code");

            EXIT(Text003);
          END;
      END;
    END;

    PROCEDURE DrillDown@1();
    VAR
      TempGLEntry@1000 : TEMPORARY Record 17;
      TempCFForecastEntry@1002 : TEMPORARY Record 847;
      AnalysisViewEntryToGLEntries@1001 : Codeunit 413;
      IsHandled@1003 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforeDrilldown(Rec,IsHandled);
      IF IsHandled THEN
        EXIT;

      IF "Account Source" = "Account Source"::"G/L Account" THEN BEGIN
        TempGLEntry.RESET;
        TempGLEntry.DELETEALL;
        AnalysisViewEntryToGLEntries.GetGLEntries(Rec,TempGLEntry);
        PAGE.RUNMODAL(PAGE::"General Ledger Entries",TempGLEntry);
      END ELSE BEGIN
        TempCFForecastEntry.RESET;
        TempCFForecastEntry.DELETEALL;
        AnalysisViewEntryToGLEntries.GetCFLedgEntries(Rec,TempCFForecastEntry);
        PAGE.RUNMODAL(PAGE::"Cash Flow Forecast Entries",TempCFForecastEntry);
      END;

      OnAfterDrillDown(Rec);
    END;

    [External]
    PROCEDURE CopyDimFilters@2(VAR AccSchedLine@1000 : Record 85);
    BEGIN
      AccSchedLine.COPYFILTER("Dimension 1 Filter","Dimension 1 Value Code");
      AccSchedLine.COPYFILTER("Dimension 2 Filter","Dimension 2 Value Code");
      AccSchedLine.COPYFILTER("Dimension 3 Filter","Dimension 3 Value Code");
      AccSchedLine.COPYFILTER("Dimension 4 Filter","Dimension 4 Value Code");
    END;

    [External]
    PROCEDURE SetDimFilters@3(DimFilter1@1000 : Text;DimFilter2@1001 : Text;DimFilter3@1002 : Text;DimFilter4@1003 : Text);
    BEGIN
      SETFILTER("Dimension 1 Value Code",DimFilter1);
      SETFILTER("Dimension 2 Value Code",DimFilter2);
      SETFILTER("Dimension 3 Value Code",DimFilter3);
      SETFILTER("Dimension 4 Value Code",DimFilter4);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterDrillDown@5(VAR AnalysisViewEntry@1000 : Record 365);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeDrilldown@4(VAR AnalysisViewEntry@1000 : Record 365;VAR IsHandled@1001 : Boolean);
    BEGIN
    END;

    PROCEDURE DPA_GetDimFilters@1100525000(StdDimFilter@1100525000 : Boolean) : Boolean;
    VAR
      UseDimFilter@1100525002 : Boolean;
      i@1100525003 : Integer;
    BEGIN
      //**4PS
      IF StdDimFilter THEN
        EXIT(TRUE);
      IF NOT DPA_IsActive THEN
        EXIT(StdDimFilter);

      FOR i := 10 DOWNTO 0 DO BEGIN;
        UseDimFilter := (DPA_GetFiltersFltrGrp(i) <> '');
        IF UseDimFilter THEN EXIT(TRUE);
      END;
    END;

    PROCEDURE DPA_SetAccSchedule@1100525010(AccScheduleCode@1100525000 : Code[20];AnalysisViewCode@1100525001 : Code[10]);
    BEGIN
      //**4PS
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetAccSchedule(AccScheduleCode, AnalysisViewCode);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100528500 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

