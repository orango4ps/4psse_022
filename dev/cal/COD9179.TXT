OBJECT Codeunit 9179 Application Area Mgmt. Facade
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [External]
    PROCEDURE GetApplicationAreaSetupRecFromCompany@13(VAR ApplicationAreaSetup@1000 : Record 9178;CompanyName@1001 : Text) : Boolean;
    VAR
      ApplicationAreaMgmt@1002 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.GetApplicationAreaSetupRecFromCompany(ApplicationAreaSetup,CompanyName))
    END;

    [External]
    PROCEDURE GetApplicationAreaSetup@66() : Text;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.GetApplicationAreaSetup)
    END;

    [External]
    PROCEDURE SetupApplicationArea@1();
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      ApplicationAreaMgmt.SetupApplicationArea
    END;

    [External]
    PROCEDURE IsFoundationEnabled@4() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsFoundationEnabled)
    END;

    [External]
    PROCEDURE IsBasicOnlyEnabled@14() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsBasicOnlyEnabled)
    END;

    [External]
    PROCEDURE IsAdvancedEnabled@6() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsAdvancedEnabled)
    END;

    [External]
    PROCEDURE IsFixedAssetEnabled@22() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsFixedAssetEnabled)
    END;

    [External]
    PROCEDURE IsJobsEnabled@15() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsJobsEnabled)
    END;

    [External]
    PROCEDURE IsBasicHREnabled@19() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsBasicHREnabled)
    END;

    [External]
    PROCEDURE IsDimensionEnabled@37() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsDimensionEnabled)
    END;

    [External]
    PROCEDURE IsLocationEnabled@18() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsLocationEnabled)
    END;

    [External]
    PROCEDURE IsAssemblyEnabled@27() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsAssemblyEnabled)
    END;

    [External]
    PROCEDURE IsItemChargesEnabled@28() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsItemChargesEnabled)
    END;

    [External]
    PROCEDURE IsItemTrackingEnabled@36() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsItemTrackingEnabled)
    END;

    [External]
    PROCEDURE IsIntercompanyEnabled@38() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsIntercompanyEnabled)
    END;

    [External]
    PROCEDURE IsSalesReturnOrderEnabled@31() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsSalesReturnOrderEnabled)
    END;

    [External]
    PROCEDURE IsPurchaseReturnOrderEnabled@40() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsPurchaseReturnOrderEnabled)
    END;

    [External]
    PROCEDURE IsCostAccountingEnabled@41() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsCostAccountingEnabled)
    END;

    [External]
    PROCEDURE IsSalesBudgetEnabled@51() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsSalesBudgetEnabled)
    END;

    [External]
    PROCEDURE IsPurchaseBudgetEnabled@52() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsPurchaseBudgetEnabled)
    END;

    [External]
    PROCEDURE IsItemBudgetEnabled@53() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsItemBudgetEnabled)
    END;

    [External]
    PROCEDURE IsSalesAnalysisEnabled@65() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsSalesAnalysisEnabled)
    END;

    [External]
    PROCEDURE IsPurchaseAnalysisEnabled@62() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsPurchaseAnalysisEnabled)
    END;

    [External]
    PROCEDURE IsInventoryAnalysisEnabled@69() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsInventoryAnalysisEnabled)
    END;

    [External]
    PROCEDURE IsInvoicingOnlyEnabled@29() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsInvoicingOnlyEnabled)
    END;

    [External]
    PROCEDURE IsManufacturingEnabled@32() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsManufacturingEnabled)
    END;

    [External]
    PROCEDURE IsPlanningEnabled@33() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsPlanningEnabled)
    END;

    [External]
    PROCEDURE IsRelationshipMgmtEnabled@39() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsRelationshipMgmtEnabled)
    END;

    [External]
    PROCEDURE IsServiceEnabled@34() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsServiceEnabled)
    END;

    [External]
    PROCEDURE IsWarehouseEnabled@35() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsWarehouseEnabled)
    END;

    [External]
    PROCEDURE IsReservationEnabled@71() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsReservationEnabled)
    END;

    [External]
    PROCEDURE IsOrderPromisingEnabled@79() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsOrderPromisingEnabled)
    END;

    [External]
    PROCEDURE IsCommentsEnabled@10() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsCommentsEnabled)
    END;

    [External]
    PROCEDURE IsRecordLinksEnabled@90() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsRecordLinksEnabled)
    END;

    [External]
    PROCEDURE IsNotesEnabled@91() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsNotesEnabled)
    END;

    [External]
    PROCEDURE IsSuiteEnabled@16() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsSuiteEnabled)
    END;

    [External]
    PROCEDURE IsAllDisabled@17() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsAllDisabled)
    END;

    [External]
    PROCEDURE IsPremiumEnabled@73() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsPremiumEnabled)
    END;

    [External]
    PROCEDURE CheckAppAreaOnlyBasic@43();
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      ApplicationAreaMgmt.CheckAppAreaOnlyBasic
    END;

    [External]
    PROCEDURE IsValidExperienceTierSelected@74(SelectedExperienceTier@1004 : Text) : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsValidExperienceTierSelected(SelectedExperienceTier))
    END;

    [External]
    PROCEDURE LookupExperienceTier@67(VAR NewExperienceTier@1000 : Text) : Boolean;
    VAR
      ApplicationAreaMgmt@1001 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.LookupExperienceTier(NewExperienceTier))
    END;

    [External]
    PROCEDURE SaveExperienceTierCurrentCompany@60(NewExperienceTier@1000 : Text) : Boolean;
    VAR
      ApplicationAreaMgmt@1001 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.SaveExperienceTierCurrentCompany(NewExperienceTier))
    END;

    [External]
    PROCEDURE GetExperienceTierCurrentCompany@9(VAR ExperienceTier@1000 : Text) : Boolean;
    VAR
      ApplicationAreaMgmt@1001 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.GetExperienceTierCurrentCompany(ExperienceTier))
    END;

    [External]
    PROCEDURE RefreshExperienceTierCurrentCompany@11();
    VAR
      ExperienceTierSetup@1001 : Record 9176;
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      IF NOT ExperienceTierSetup.GET(COMPANYNAME) THEN
        EXIT;
      ApplicationAreaMgmt.SetExperienceTierCurrentCompany(ExperienceTierSetup);
    END;

    [External]
    PROCEDURE IsBasicExperienceEnabled@45() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsBasicExperienceEnabled)
    END;

    [External]
    PROCEDURE IsEssentialExperienceEnabled@46() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsEssentialExperienceEnabled)
    END;

    [External]
    PROCEDURE IsPremiumExperienceEnabled@8() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsPremiumExperienceEnabled)
    END;

    [External]
    PROCEDURE IsCustomExperienceEnabled@47() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsCustomExperienceEnabled)
    END;

    [External]
    PROCEDURE IsAdvancedExperienceEnabled@48() : Boolean;
    VAR
      ApplicationAreaMgmt@1000 : Codeunit 9178;
    BEGIN
      EXIT(ApplicationAreaMgmt.IsAdvancedExperienceEnabled)
    END;

    [EventSubscriber(Codeunit,9178,OnGetBasicExperienceAppAreas)]
    LOCAL PROCEDURE RaiseOnGetBasicExperienceAppAreas@42(VAR TempApplicationAreaSetup@1000 : TEMPORARY Record 9178);
    BEGIN
      OnGetBasicExperienceAppAreas(TempApplicationAreaSetup)
    END;

    [Integration]
    LOCAL PROCEDURE OnGetBasicExperienceAppAreas@49(VAR TempApplicationAreaSetup@1000 : TEMPORARY Record 9178);
    BEGIN
    END;

    [EventSubscriber(Codeunit,9178,OnGetEssentialExperienceAppAreas)]
    LOCAL PROCEDURE RaiseOnGetEssentialExperienceAppAreas@54(VAR TempApplicationAreaSetup@1000 : TEMPORARY Record 9178);
    BEGIN
      OnGetEssentialExperienceAppAreas(TempApplicationAreaSetup);
    END;

    [Integration]
    LOCAL PROCEDURE OnGetEssentialExperienceAppAreas@50(VAR TempApplicationAreaSetup@1000 : TEMPORARY Record 9178);
    BEGIN
    END;

    [EventSubscriber(Codeunit,9178,OnGetEssentialExperienceAppAreas)]
    LOCAL PROCEDURE RaiseOnGetPremiumExperienceAppAreas@7(VAR TempApplicationAreaSetup@1000 : TEMPORARY Record 9178);
    BEGIN
      OnGetPremiumExperienceAppAreas(TempApplicationAreaSetup);
    END;

    [Integration]
    LOCAL PROCEDURE OnGetPremiumExperienceAppAreas@5(VAR TempApplicationAreaSetup@1000 : TEMPORARY Record 9178);
    BEGIN
    END;

    [EventSubscriber(Codeunit,9178,OnBeforeLookupExperienceTier)]
    LOCAL PROCEDURE RaiseOnBeforeLookupExperienceTier@55(VAR TempExperienceTierBuffer@1000 : TEMPORARY Record 9177);
    BEGIN
      OnBeforeLookupExperienceTier(TempExperienceTierBuffer)
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeLookupExperienceTier@61(VAR TempExperienceTierBuffer@1000 : TEMPORARY Record 9177);
    BEGIN
    END;

    [EventSubscriber(Codeunit,9178,OnSetExperienceTier)]
    LOCAL PROCEDURE RaiseOnSetExperienceTier@58(ExperienceTierSetup@1000 : Record 9176;VAR TempApplicationAreaSetup@1001 : TEMPORARY Record 9178;VAR ApplicationAreasSet@1002 : Boolean);
    BEGIN
      OnSetExperienceTier(ExperienceTierSetup,TempApplicationAreaSetup,ApplicationAreasSet);
    END;

    [Integration]
    LOCAL PROCEDURE OnSetExperienceTier@63(ExperienceTierSetup@1000 : Record 9176;VAR TempApplicationAreaSetup@1001 : TEMPORARY Record 9178;VAR ApplicationAreasSet@1002 : Boolean);
    BEGIN
    END;

    [EventSubscriber(Codeunit,9178,OnValidateApplicationAreas)]
    LOCAL PROCEDURE RaiseOnValidateApplicationAreas@64(ExperienceTierSetup@1000 : Record 9176;TempApplicationAreaSetup@1001 : TEMPORARY Record 9178);
    BEGIN
      OnValidateApplicationAreas(ExperienceTierSetup,TempApplicationAreaSetup)
    END;

    [Integration]
    LOCAL PROCEDURE OnValidateApplicationAreas@59(ExperienceTierSetup@1000 : Record 9176;TempApplicationAreaSetup@1001 : TEMPORARY Record 9178);
    BEGIN
    END;

    [External]
    PROCEDURE SetHideApplicationAreaError@68(NewHideApplicationAreaError@1000 : Boolean);
    VAR
      ApplicationAreaMgmt@1001 : Codeunit 9178;
    BEGIN
      ApplicationAreaMgmt.SetHideApplicationAreaError(NewHideApplicationAreaError)
    END;

    [External]
    PROCEDURE DeprecatedGetExperienceTierCurrentCompany@2(VAR ExperienceTier@1000 : ',,,,,Basic,,,,,,,,,,Essential,,,,,Custom,,,,,Advanced');
    VAR
      ApplicationAreaMgmt@1002 : Codeunit 9178;
      ExperienceTierTxt@1001 : Text;
      SaveGlobalLanguage@1003 : Integer;
    BEGIN
      GetExperienceTierCurrentCompany(ExperienceTierTxt);
      IF (ExperienceTierTxt = '') AND ApplicationAreaMgmt.IsAdvancedSaaSEnabled THEN
        ExperienceTier := ExperienceTier::Advanced
      ELSE BEGIN
        SaveGlobalLanguage := GLOBALLANGUAGE;
        GLOBALLANGUAGE := 1033;
        EVALUATE(ExperienceTier,ExperienceTierTxt);
        GLOBALLANGUAGE := SaveGlobalLanguage;
      END;
    END;

    [External]
    PROCEDURE DeprecatedSetExperienceTierCurrentCompany@3(ExperienceTier@1000 : ',,,,,Basic,,,,,,,,,,Essential,,,,,Custom,,,,,Advanced');
    VAR
      SaveGlobalLanguage@1002 : Integer;
    BEGIN
      SaveGlobalLanguage := GLOBALLANGUAGE;
      GLOBALLANGUAGE := 1033;
      SaveExperienceTierCurrentCompany(FORMAT(ExperienceTier));
      GLOBALLANGUAGE := SaveGlobalLanguage;
    END;

    BEGIN
    END.
  }
}

