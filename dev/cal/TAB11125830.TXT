OBJECT Table 11125830 Plant Object
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 PlantSetup.GET;
                 PlantSetup.TESTFIELD("Plant Object Nos.");
                 NoSeriesMgt.InitSeries(PlantSetup."Plant Object Nos.", xRec."No. Series", 0D, "No.", "No. Series");
               END;
               "Plant Request No." := '';
               "Created by" := USERID;
               "Created on" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               "Modified by" := USERID;
               "Modified on" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               PlantObjectProperty@1100529000 : Record 11125831;
             BEGIN
               PlantObjectProperty.SETRANGE("Plant Object No.", "No.");
               PlantObjectProperty.DELETEALL;
             END;

    CaptionML=ENU=Plant Object;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  PlantSetup.GET;
                                                                  NoSeriesMgt.TestManual(PlantSetup."Plant Object Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              SVE=Nr] }
    { 20  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   CaptionML=[ENU=Plant Type;
                                                              SVE=Maskintyp] }
    { 30  ;   ;Plant Type Description;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Description WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=[ENU=Plant Type Description;
                                                              SVE=Maskintyp beskrivning];
                                                   Editable=No }
    { 40  ;   ;Bulk                ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Bulk WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=[ENU=Bulk;
                                                              SVE=Bulk] }
    { 50  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              SVE=Beskrivning] }
    { 60  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              SVE=Beskrivning 2] }
    { 70  ;   ;Plant Location No.  ;Code20        ;TableRelation="Plant Location";
                                                   CaptionML=ENU=Plant Location No. }
    { 80  ;   ;Plant Location Description;Text100 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Location".Description WHERE (Code=FIELD(Plant Location No.)));
                                                   CaptionML=[ENU=Plant Location Description;
                                                              SVE=Beskrivning av Maskinplats];
                                                   Editable=No }
    { 90  ;   ;Building            ;Text30        ;CaptionML=[ENU=Building;
                                                              SVE=Byggnad] }
    { 100 ;   ;Floor               ;Text30        ;CaptionML=[ENU=Floor;
                                                              SVE=V†ning] }
    { 110 ;   ;Room                ;Text30        ;CaptionML=[ENU=Room;
                                                              SVE=Rum] }
    { 120 ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              SVE=Sp„rrad] }
    { 130 ;   ;Plant Request No.   ;Code20        ;TableRelation="Plant Request";
                                                   CaptionML=[ENU=Plant Request No.;
                                                              SVE=Maskinf”rfr†gan nr] }
    { 140 ;   ;Quantity            ;Decimal       ;InitValue=1;
                                                   CaptionML=[ENU=Quantity;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 150 ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure;
                                                              SVE=M†ttenhet] }
    { 160 ;   ;Modified by         ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Modified by;
                                                              SVE=Žndrad av];
                                                   Editable=No }
    { 170 ;   ;Modified on         ;DateTime      ;CaptionML=[ENU=Modified on;
                                                              SVE=Žndrad den];
                                                   Editable=No }
    { 180 ;   ;Created by          ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Created by;
                                                              SVE=Skapades av];
                                                   Editable=No }
    { 190 ;   ;Created on          ;DateTime      ;CaptionML=[ENU=Created on;
                                                              SVE=Skapad den];
                                                   Editable=No }
    { 200 ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              SVE=Nr-serie];
                                                   Editable=No }
    { 210 ;   ;BIM Model No.       ;Code20        ;TableRelation="BIM Model";
                                                   CaptionML=[ENU=BIM Model No.;
                                                              SVE=BIM-modellnr.];
                                                   Editable=No }
    { 220 ;   ;IFC Object ID       ;Text30        ;CaptionML=[ENU=IFC Object ID;
                                                              SVE=IFC-objekt-ID];
                                                   Editable=No }
    { 230 ;   ;Phase               ;Text30        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Phase;
                                                              SVE=Fas] }
    { 240 ;   ;IFC Object ID As Hex;Text60        ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=IFC Object ID As Hex;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Plant Location No.                       }
    {    ;BIM Model No.,IFC Object ID              }
    {    ;BIM Model No.,IFC Object ID As Hex       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PlantSetup@1100525000 : Record 11012550;
      NoSeriesMgt@1100525001 : Codeunit 396;
      Text007@1100529000 : TextConst 'ENU=No %1 selected with %2 filled and %3 empty';
      Text008@1100529001 : TextConst 'ENU=Create plant request?';
      Text009@1100529002 : TextConst 'ENU=Created plant request: %1';

    PROCEDURE AssistEdit@2(OldPlantObject@1000 : Record 11125830) : Boolean;
    VAR
      PlantObject@1100525000 : Record 11125830;
    BEGIN
      WITH PlantObject DO BEGIN
        PlantObject := Rec;
        PlantSetup.GET;
        PlantSetup.TESTFIELD("Plant Object Nos.");
        IF NoSeriesMgt.SelectSeries(PlantSetup."Plant Object Nos.",OldPlantObject."No. Series", "No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := PlantObject;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE ShowDocuments@1100529400();
    VAR
      RecRef@1100525000 : RecordRef;
      DocumentFilters@1100525001 : Codeunit 11012432;
    BEGIN
      TESTFIELD("No.");
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, TRUE);
    END;

    PROCEDURE CreatePlantRequest@1100529001(VAR PlantObject@1100525000 : Record 11125830);
    VAR
      LastCreatedRequestNo@1100529003 : Code[20];
      CreatedRequestsTxt@1100529002 : Text;
    BEGIN
      WITH PlantObject DO BEGIN
        FILTERGROUP(11);
        SETFILTER("Plant Location No.", '<>%1', '');
        SETRANGE("Plant Request No.", '');
        FILTERGROUP(0);
        IF NOT FINDFIRST THEN
          ERROR(Text007, TABLECAPTION, FIELDCAPTION("Plant Location No."), FIELDCAPTION("Plant Request No."));
        IF NOT CONFIRM(Text008 , FALSE) THEN
          ERROR('');

        REPEAT
          TESTFIELD("Plant Location No.");
          TESTFIELD("Plant Type");
          TESTFIELD(Blocked, FALSE);
        UNTIL NEXT = 0;

        FINDSET(TRUE,FALSE);
        REPEAT
          IF LastCreatedRequestNo = '' THEN BEGIN
            LastCreatedRequestNo := InsertPlantReqHead(PlantObject);
            IF CreatedRequestsTxt = '' THEN
              CreatedRequestsTxt := LastCreatedRequestNo;
          END;
          InsertPlantRequestLine(PlantObject, LastCreatedRequestNo);
          "Plant Request No." := LastCreatedRequestNo;
          MODIFY;
        UNTIL NEXT = 0;

        IF CreatedRequestsTxt <> LastCreatedRequestNo THEN
          CreatedRequestsTxt := CreatedRequestsTxt + '..' + LastCreatedRequestNo;
        MESSAGE(Text009, CreatedRequestsTxt);
      END;
    END;

    LOCAL PROCEDURE InsertPlantReqHead@1100529002(PlantObject@1100525000 : Record 11125830) : Code[20];
    VAR
      PlantRequest@1100525001 : Record 11020520;
      PlantSetup@1100525002 : Record 11012550;
    BEGIN
      PlantRequest.INIT;
      PlantRequest."No." := '';
      PlantRequest.InitRecord;
      PlantRequest.INSERT(TRUE);

      PlantSetup.GET;
      PlantRequest."From Location" := PlantSetup."Rental Depot";
      PlantRequest."To Location" := PlantObject."Plant Location No.";
      PlantRequest."BIM Order" := TRUE;
      PlantRequest.Phase := PlantObject.Phase;
      PlantRequest.MODIFY(TRUE);
      EXIT(PlantRequest."No.");
    END;

    LOCAL PROCEDURE InsertPlantRequestLine@1100529003(PlantObject@1100529001 : Record 11125830;PlantRequestNo@1100529002 : Code[20]);
    VAR
      PlantRequestLine@1100525000 : Record 11020521;
      PlantRequestLine1@1100525002 : Record 11020521;
      LineNo@1100525001 : Integer;
      Found@1100525003 : Boolean;
    BEGIN
      Found := FALSE;
      PlantRequestLine1.RESET;
      PlantRequestLine1.SETRANGE("Plant Request No.",PlantRequestNo);
      PlantRequestLine1.SETRANGE("Plant Request Status",PlantRequestLine1."Plant Request Status"::Open);
      IF PlantRequestLine1.FINDLAST THEN BEGIN
        LineNo := PlantRequestLine1."Line No." + 10000;
        PlantRequestLine1.SETRANGE("Plant Type",PlantObject."Plant Type");
        IF PlantRequestLine1.FINDLAST THEN BEGIN
          Found := TRUE;
          LineNo := PlantRequestLine1."Line No.";
        END;
      END ELSE
        LineNo := 10000;

      IF NOT Found THEN BEGIN
        PlantRequestLine.INIT;
        PlantRequestLine."Plant Request No." := PlantRequestNo;
        PlantRequestLine."Line No." := LineNo;
        PlantRequestLine.InitRecord;
        PlantRequestLine.Phase := PlantObject.Phase;
        PlantRequestLine.INSERT(TRUE);
        PlantRequestLine.VALIDATE("Plant Type",PlantObject."Plant Type");
      END ELSE
        PlantRequestLine.GET(PlantRequestNo,LineNo);

      PlantRequestLine.VALIDATE(Quantity,PlantRequestLine.Quantity + PlantObject.Quantity);
      PlantRequestLine.MODIFY(TRUE);
    END;

    BEGIN
    END.
  }
}

