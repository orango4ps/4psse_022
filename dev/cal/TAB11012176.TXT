OBJECT Table 11012176 Configurator Part
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               ConfigPartRec@1100485000 : Record 11012176;
               sp1@1100485003 : Integer;
               sp2@1100485002 : Integer;
               CurrLevel@1100485001 : Integer;
             BEGIN
               EstFeaturePartRec.SETRANGE("Estimate No.", "Estimate No.");
               EstFeaturePartRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
               EstFeaturePartRec.SETRANGE("Part Group", "Part Group");
               EstFeaturePartRec.SETRANGE("Part (Configurator)", "Part (Configurator)");
               EstFeaturePartRec.SETRANGE("Part (Seq. No.)", "Part (Seq. No.)");
               EstFeaturePartRec.DELETEALL;

               TakeOffRowQuanRec.SETRANGE("Estimate No.", "Estimate No.");
               TakeOffRowQuanRec.SETRANGE("Sub-Estimate No.", "Sub-Estimate No.");
               TakeOffRowQuanRec.SETRANGE("Part Group", "Part Group");
               TakeOffRowQuanRec.SETRANGE("Part (Configurator)", "Part (Configurator)");
               TakeOffRowQuanRec.SETRANGE("Part (Seq. No.)", "Part (Seq. No.)");
               TakeOffRowQuanRec.DELETEALL;

               ConfigPartRec.SETRANGE("Estimate No.","Estimate No.");
               ConfigPartRec.SETRANGE("Sub-Estimate No.","Sub-Estimate No.");
               ConfigPartRec.SETRANGE("Part Group","Part Group");

               EstFeaturePartRec.SETRANGE("Part (Configurator)");
               EstFeaturePartRec.SETRANGE("Part (Seq. No.)");

               TakeOffRowQuanRec.SETRANGE("Part (Configurator)");
               TakeOffRowQuanRec.SETRANGE("Part (Seq. No.)");

               CheckFormat(sp1,sp2);
               CurrLevel := Level;
               IF (sp1 = 0) AND (CurrLevel = 1) THEN CurrLevel := CurrLevel + 1;
               IF (sp2 = 0) AND (CurrLevel = 2) THEN CurrLevel := CurrLevel + 1;

               CASE CurrLevel OF
                 0:BEGIN
                     ConfigPartRec.DELETEALL;
                     EstFeaturePartRec.DELETEALL;
                     TakeOffRowQuanRec.DELETEALL;
                   END;
                 1:BEGIN
                     ConfigPartRec.SETRANGE(Chapter,Chapter);
                     IF ConfigPartRec.FIND('-') THEN BEGIN
                       REPEAT
                         EstFeaturePartRec.SETRANGE("Part (Configurator)", ConfigPartRec."Part (Configurator)");
                         EstFeaturePartRec.SETRANGE("Part (Seq. No.)", ConfigPartRec."Part (Seq. No.)");
                         EstFeaturePartRec.DELETEALL;

                         TakeOffRowQuanRec.SETRANGE("Part (Configurator)", ConfigPartRec."Part (Configurator)");
                         TakeOffRowQuanRec.SETRANGE("Part (Seq. No.)", ConfigPartRec."Part (Seq. No.)");
                         TakeOffRowQuanRec.DELETEALL;
                       UNTIL ConfigPartRec.NEXT = 0;
                     END;
                     ConfigPartRec.DELETEALL;
                   END;
                 2:BEGIN
                     ConfigPartRec.SETRANGE(Paragraph,Paragraph);
                     IF ConfigPartRec.FIND('-') THEN BEGIN
                       REPEAT
                         EstFeaturePartRec.SETRANGE("Part (Configurator)", ConfigPartRec."Part (Configurator)");
                         EstFeaturePartRec.SETRANGE("Part (Seq. No.)", ConfigPartRec."Part (Seq. No.)");
                         EstFeaturePartRec.DELETEALL;

                         TakeOffRowQuanRec.SETRANGE("Part (Configurator)", ConfigPartRec."Part (Configurator)");
                         TakeOffRowQuanRec.SETRANGE("Part (Seq. No.)", ConfigPartRec."Part (Seq. No.)");
                         TakeOffRowQuanRec.DELETEALL;
                       UNTIL ConfigPartRec.NEXT = 0;
                     END;
                     ConfigPartRec.DELETEALL;
                   END;
               END;
             END;

    CaptionML=[ENU=Configurator Part;
               NOR=Konfiguratordel;
               SVE=Konfiguratordel];
  }
  FIELDS
  {
    { 10  ;   ;Estimate No.        ;Code20        ;TableRelation=Estimate.No.;
                                                   CaptionML=[ENU=Estimate No.;
                                                              NOR=Kalkylenr;
                                                              SVE=Kalkylnr] }
    { 11  ;   ;Estimate Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Estimate.Description WHERE (No.=FIELD(Estimate No.)));
                                                   CaptionML=[ENU=Estimate Description;
                                                              NOR=Kalkylebeskrivelse;
                                                              SVE=Kalkylbeskrivning];
                                                   Editable=No }
    { 20  ;   ;Sub-Estimate No.    ;Code20        ;TableRelation=Sub-Estimate."Sub-Estimate No." WHERE (Estimate No.=FIELD(Estimate No.));
                                                   CaptionML=[ENU=Sub-Estimate No.;
                                                              NOR=Delkalkylenummer;
                                                              SVE=Delkalkylnr] }
    { 21  ;   ;Sub-Estimate Description;Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Sub-Estimate.Description WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                      Sub-Estimate No.=FIELD(Sub-Estimate No.)));
                                                   CaptionML=[ENU=Sub-Estimate Description;
                                                              NOR=Beskrivelse av delkalkyle;
                                                              SVE=Beskrivning av delkalkyl];
                                                   Editable=No }
    { 25  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 30  ;   ;Part Group          ;Code10        ;CaptionML=[ENU=Part Group;
                                                              NOR=Del gruppe;
                                                              SVE=Delgrupp] }
    { 35  ;   ;Part (Configurator) ;Code20        ;TableRelation="Estimate Base Part".Code WHERE (Part Group=FIELD(Part Group));
                                                   OnValidate=BEGIN
                                                                ElementFormat.FormatElemExtended(2,"Part (Configurator)",Chapter,Paragraph,Level); //db, 10-01-05

                                                                IF "Part (Configurator)" <> xRec."Part (Configurator)" THEN
                                                                  IF PartRec.GET("Part Group","Part (Configurator)") THEN
                                                                    "Part Description" := PartRec.Description;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Part (Configurator);
                                                              NOR=Del (Konfigurator);
                                                              SVE=Del (konfigurator)] }
    { 36  ;   ;Part Description    ;Text50        ;FieldClass=Normal;
                                                   CaptionML=[ENU=Part Description;
                                                              NOR=Delbeskrivelse;
                                                              SVE=Delbeskrivning] }
    { 40  ;   ;Part (Estimate)     ;Code20        ;ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Part (Estimate);
                                                              NOR=Del (Kalkyle);
                                                              SVE=Del (kalkyl)];
                                                   Editable=No }
    { 45  ;   ;Part (Seq. No.)     ;Integer       ;CaptionML=[ENU=Part (Seq. No.);
                                                              NOR=Del (sekvensnr.);
                                                              SVE=Del (sekv. Nr)] }
    { 50  ;   ;Chapter             ;Code20        ;CaptionML=[ENU=Chapter;
                                                              NOR=Kapittel;
                                                              SVE=Kapitel] }
    { 51  ;   ;Paragraph           ;Code20        ;CaptionML=[ENU=Paragraph;
                                                              NOR=Avsnitt;
                                                              SVE=Stycke] }
    { 52  ;   ;Level               ;Integer       ;CaptionML=[ENU=Level;
                                                              NOR=Niv†;
                                                              SVE=Niv†] }
    { 55  ;   ;Processed           ;Boolean       ;CaptionML=[ENU=Processed;
                                                              NOR=Behandlede;
                                                              SVE=Behandlades] }
  }
  KEYS
  {
    {    ;Estimate No.,Sub-Estimate No.,Line No.,Part Group,Part (Configurator),Part (Seq. No.);
                                                   Clustered=Yes }
    {    ;Estimate No.,Sub-Estimate No.,Part Group,Part (Configurator),Part (Seq. No.) }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EstFeaturePartRec@11012000 : Record 11012178;
      PartRec@1210190001 : Record 11012169;
      TakeOffRowQuanRec@1210190002 : Record 11012192;
      ElementFormat@1210190000 : Codeunit 11012022;
      Text000@1210190003 : TextConst 'ENU=Too much Taking Off Sheet Part selected to generated Estimate Parts.;NOR=For mye Fjerning av Arkdel valgt for genererte kalkyledeler.;SVE=F”r mycket borttagning av vald arkdel f”r genererade kalkyldelar.';

    PROCEDURE ReorganiseParts@1210190001(g_code1@1210190004 : Code[20];g_code2@1210190003 : Code[20]);
    VAR
      TO_PART1@1210190001 : Record 11012176;
      TO_PART2@1210190005 : Record 11012176;
      TMP_PART@1210190000 : TEMPORARY Record 11012176;
      LastLino@1210190002 : Integer;
    BEGIN
      LastLino := 0;

      TO_PART1.RESET;
      TO_PART1.SETCURRENTKEY("Estimate No.", "Sub-Estimate No.", "Part Group", "Part (Configurator)");
      TO_PART1.SETRANGE("Estimate No.", g_code1);
      TO_PART1.SETRANGE("Sub-Estimate No.", g_code2);
      TO_PART1.MODIFYALL(Processed, FALSE);

      TO_PART1.SETRANGE(Processed, FALSE);
      IF TO_PART1.FIND('-') THEN BEGIN
        REPEAT
          TMP_PART.COPY(TO_PART1);
          TMP_PART."Line No." := LastLino + 10000;
          TMP_PART.INSERT;
          LastLino := TMP_PART."Line No.";
          TO_PART1.Processed := TRUE;
          TO_PART1.MODIFY;

          IF TO_PART1.Chapter <> '' THEN BEGIN
            TO_PART2.RESET;
            TO_PART2.SETRANGE(Chapter, TO_PART1.Chapter);
            TO_PART2.SETRANGE("Part (Seq. No.)", TO_PART1."Part (Seq. No.)");
            TO_PART2.SETFILTER(Level, '>%1', TO_PART1.Level);
            IF TO_PART2.FIND('-') THEN BEGIN
              REPEAT
                IF TO_PART2.Processed = FALSE THEN BEGIN
                  TMP_PART.COPY(TO_PART2);
                  TMP_PART."Line No." := LastLino + 10000;
                  TMP_PART.INSERT;
                  LastLino := TMP_PART."Line No.";
                  TO_PART2.Processed := TRUE;
                  TO_PART2.MODIFY;
                END;
              UNTIL TO_PART2.NEXT = 0;
            END;
          END;
        UNTIL TO_PART1.NEXT = 0;
      END;

      TO_PART1.SETRANGE(Processed, TRUE);
      TO_PART1.DELETEALL;

      TMP_PART.RESET;
      TMP_PART.SETCURRENTKEY("Estimate No.", "Sub-Estimate No.", "Line No.");
      TMP_PART.SETRANGE("Estimate No.", g_code1);
      TMP_PART.SETRANGE("Sub-Estimate No.", g_code2);
      IF TMP_PART.FIND('-') THEN BEGIN
        REPEAT
          TO_PART1.COPY(TMP_PART);
          TO_PART1.INSERT;
        UNTIL TMP_PART.NEXT = 0;
      END;
    END;

    PROCEDURE CreateEstimatePartCode@1210190000(g_code1@1210190004 : Code[20];g_code2@1210190003 : Code[20]);
    VAR
      TO_PART1@1210190001 : Record 11012176;
      TO_PART2@1210190010 : Record 11012176;
      EstSetup@1210190000 : Record 11012150;
      counter@1210190005 : Integer;
      maxlen@1210190009 : Integer;
      c1@1210190006 : Integer;
      c2@1210190007 : Integer;
      fp@1210190002 : Integer;
      alfa@1210190008 : Text[30];
    BEGIN
      EstSetup.GET;
      EstSetup.TESTFIELD(EstSetup."Part Format");
      maxlen := MAXSTRLEN(EstSetup."Part Format");
      fp := STRPOS(EstSetup."Part Format", '.');
      IF fp = 0 THEN
        fp := STRLEN(EstSetup."Part Format")
       ELSE
        fp := fp - 1;

      counter := 0;
      alfa := 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';

      TO_PART1.RESET;
      TO_PART1.SETCURRENTKEY("Estimate No.", "Sub-Estimate No.", "Part Group", "Part (Configurator)");
      TO_PART1.SETRANGE("Estimate No.", g_code1);
      TO_PART1.SETRANGE("Sub-Estimate No.", g_code2);
      TO_PART1.MODIFYALL(Processed, FALSE);

      TO_PART1.SETRANGE(Processed, FALSE);
      IF TO_PART1.FIND('-') THEN BEGIN
        REPEAT
          counter := counter + 1;
          IF counter > POWER(26, fp) THEN
            ERROR(Text000);
          c1 := (counter DIV 26);
          c2 := (counter MOD 26);
          c1 := c1 + 1;
          IF c2 = 0 THEN BEGIN
            c1 := c1 - 1;
            c2 := 26;
          END;
          TO_PART1."Part (Estimate)" := TO_PART1."Part (Configurator)";
          TO_PART1."Part (Estimate)" :=
            COPYSTR(alfa, c1, 1) +
            COPYSTR(TO_PART1."Part (Estimate)", 2, maxlen-1);
          TO_PART1."Part (Estimate)" :=
            COPYSTR(TO_PART1."Part (Estimate)", 1, 1) +
            COPYSTR(alfa, c2, 1) +
            COPYSTR(TO_PART1."Part (Estimate)", 3, maxlen-2);
          TO_PART1.Processed := TRUE;
          TO_PART1.MODIFY;

          IF TO_PART1.Chapter <> '' THEN BEGIN
            TO_PART2.RESET;
            TO_PART2.SETRANGE(Chapter, TO_PART1.Chapter);
            TO_PART2.SETRANGE("Part (Seq. No.)", TO_PART1."Part (Seq. No.)");
            TO_PART2.SETFILTER(Level, '>%1', TO_PART1.Level);
            IF TO_PART2.FIND('-') THEN BEGIN
              REPEAT
                IF TO_PART2.Processed = FALSE THEN BEGIN
                  TO_PART2."Part (Estimate)" :=
                    COPYSTR(TO_PART1."Part (Estimate)", 1, fp) +
                    COPYSTR(TO_PART2."Part (Configurator)", fp+1, maxlen-fp);
                  TO_PART2.Processed := TRUE;
                  TO_PART2.MODIFY;
                END;
              UNTIL TO_PART2.NEXT = 0;
            END;
          END;

        UNTIL TO_PART1.NEXT = 0;
      END;

      TO_PART1.SETRANGE(Processed, TRUE);
      TO_PART1.MODIFYALL(Processed, FALSE);
    END;

    PROCEDURE CheckFormat@1100485000(VAR sp1@1100485004 : Integer;VAR sp2@1100485005 : Integer);
    VAR
      EstSetupRec@11012000 : Record 11012150;
      lvText000@1100485000 : TextConst 'ENU=only 3 levels allowed;NOR=kun tre niv†er tillates;SVE=endast tre niv†er till†ts';
      x@1100485002 : Integer;
      lp@1100485001 : Integer;
    BEGIN
      x := 0;
      sp1 := 0;
      sp2 := 0;

      EstSetupRec.GET();
      EstSetupRec.TESTFIELD("Part Format");
      lp := STRLEN(EstSetupRec."Part Format");

      REPEAT
        x := x + 1;
        IF COPYSTR(EstSetupRec."Part Format",x,1) = '.' THEN BEGIN
          IF sp1 = 0 THEN
            sp1 := x
          ELSE
            IF sp2 = 0 THEN
              sp2 :=x
            ELSE
              ERROR(lvText000);
        END;
      UNTIL x = lp;
    END;

    BEGIN
    END.
  }
}

