OBJECT Table 11229434 Item Operation Formula
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckLineValues;
             END;

    CaptionML=ENU=Item Operation Formula;
  }
  FIELDS
  {
    { 10  ;   ;Item Operation Code ;Code20        ;TableRelation="Item Operation";
                                                   CaptionML=ENU=Item Operation Code;
                                                   NotBlank=Yes }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              SVE=Radnr];
                                                   Editable=No }
    { 30  ;   ;Line Type           ;Option        ;OnValidate=BEGIN
                                                                IF "Line Type" = "Line Type"::Operator THEN BEGIN
                                                                  IF "Table ID" <> 0 THEN
                                                                    VALIDATE("Table ID", 0);
                                                                  IF "Field No." <> 0 THEN
                                                                    VALIDATE("Field No.", 0);
                                                                END ELSE BEGIN
                                                                  Operator := Operator::" ";
                                                                  IF "Table ID" = 0 THEN
                                                                    VALIDATE("Table ID", DATABASE::"Trade Item");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Line Type;
                                                              SVE=Rad Typ];
                                                   OptionCaptionML=ENU=Operator,Value;
                                                   OptionString=Operator,Value }
    { 40  ;   ;Operator            ;Option        ;CaptionML=[ENU=Operator;
                                                              SVE=Operator];
                                                   OptionCaptionML=ENU=" ,+,-,*,/";
                                                   OptionString=[ ,+,-,*,/] }
    { 50  ;   ;Table ID            ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Table));
                                                   OnValidate=BEGIN
                                                                IF "Table ID" = 0 THEN
                                                                  VALIDATE("Field No.", 0)
                                                                ELSE BEGIN
                                                                  TESTFIELD("Line Type", "Line Type"::Value);
                                                                  IF NOT ("Table ID" IN [DATABASE::"Trade Item", DATABASE::"Purchase Line Detail"]) THEN
                                                                    FIELDERROR("Table ID");
                                                                  IF xRec."Table ID" <> "Table ID" THEN
                                                                    VALIDATE("Field No.", 0);
                                                                END;
                                                                CALCFIELDS("Table Caption");
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupTable;
                                                            END;

                                                   CaptionML=[ENU=Table ID;
                                                              SVE=Tabell-ID];
                                                   BlankZero=Yes }
    { 51  ;   ;Table Caption       ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Table ID)));
                                                   OnLookup=BEGIN
                                                              LookupTable;
                                                            END;

                                                   CaptionML=[ENU=Table Caption;
                                                              SVE=Tabellrubrik];
                                                   Editable=No }
    { 60  ;   ;Field No.           ;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Table ID));
                                                   OnValidate=BEGIN
                                                                IF "Field No." <> 0 THEN BEGIN
                                                                  TESTFIELD("Line Type", "Line Type"::Value);
                                                                  TESTFIELD("Table ID");
                                                                  CheckFieldNumber("Field No.", TRUE);
                                                                END;
                                                                CALCFIELDS("Field Caption");
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupField;
                                                            END;

                                                   CaptionML=[ENU=Field No.;
                                                              SVE=F„ltnr.];
                                                   BlankZero=Yes }
    { 61  ;   ;Field Caption       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD(Table ID),
                                                                                                   No.=FIELD(Field No.)));
                                                   OnLookup=BEGIN
                                                              LookupField;
                                                            END;

                                                   CaptionML=[ENU=Field Caption;
                                                              SVE=F„ltrubrik];
                                                   Editable=No }
    { 70  ;   ;Line Value          ;Decimal       ;CaptionML=ENU=Line Value;
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 80  ;   ;Operand No.         ;Integer       ;CaptionML=ENU=Operand No.;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Item Operation Code,Line No.            ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100529600 : TextConst 'ENU=%1 must be equal to %2 in the first line.';
      Text002@1100529601 : TextConst 'ENU=%1 must be equal to %2 in the last line.';
      Text003@1100529602 : TextConst 'ENU=There is an operator missing after position %1.';
      Text004@1100529603 : TextConst 'ENU=There is an operand missing after position %1.;SVE=Det saknas en operand efter position %1.';

    LOCAL PROCEDURE LookupTable@1100529602();
    VAR
      AllObjWithCaption@1100529600 : Record 2000000058;
    BEGIN
      IF "Line Type" = "Line Type"::Operator THEN
        EXIT;

      AllObjWithCaption.SETRANGE("Object Type", AllObjWithCaption."Object Type"::Table);
      AllObjWithCaption.SETFILTER("Object ID", '%1|%2', DATABASE::"Trade Item", DATABASE::"Purchase Line Detail");
      IF PAGE.RUNMODAL(PAGE::Objects, AllObjWithCaption) = ACTION::LookupOK THEN
        IF (AllObjWithCaption."Object Type" = AllObjWithCaption."Object Type"::Table) AND
           (AllObjWithCaption."Object ID" IN [DATABASE::"Trade Item", DATABASE::"Purchase Line Detail"])
        THEN
          VALIDATE("Table ID", AllObjWithCaption."Object ID");
    END;

    LOCAL PROCEDURE LookupField@1100529603();
    VAR
      Field@1100529600 : Record 2000000041;
      FieldNoFilter@1100529601 : Text;
    BEGIN
      IF "Line Type" = "Line Type"::Operator THEN
        EXIT;
      IF "Table ID" = 0 THEN
        EXIT;

      Field.SETRANGE(TableNo, "Table ID");
      FieldNoFilter := GetFieldNoFilter;
      IF FieldNoFilter = '' THEN
        EXIT;
      Field.SETFILTER("No.", FieldNoFilter);

      IF PAGE.RUNMODAL(PAGE::"Field List", Field) = ACTION::LookupOK THEN
        IF Field.TableNo = "Table ID" THEN
          IF CheckFieldNumber(Field."No.", FALSE) THEN
            VALIDATE("Field No.", Field."No.");
    END;

    PROCEDURE CheckLineValues@1100529605();
    BEGIN
      IF "Line Type" = "Line Type"::Operator THEN BEGIN
        TESTFIELD(Operator);
        TESTFIELD("Table ID", 0);
        TESTFIELD("Field No.", 0);
      END ELSE BEGIN
        TESTFIELD(Operator, Operator::" ");
        TESTFIELD("Table ID");
        TESTFIELD("Field No.");
        CheckFieldNumber("Field No.", TRUE);
      END;
    END;

    LOCAL PROCEDURE CheckFieldNumber@1100529604(CheckFieldNo@1100529603 : Integer;ThrowError@1100529600 : Boolean) : Boolean;
    VAR
      LocTradeItem@1100529601 : Record 11012317;
      LocPurchaseLineDetail@1100529602 : Record 11020660;
    BEGIN
      CASE "Table ID" OF
        DATABASE::"Trade Item":
          IF NOT (CheckFieldNo IN [LocTradeItem.FIELDNO(Length),
                                   LocTradeItem.FIELDNO(Width),
                                   LocTradeItem.FIELDNO(Height),
                                   LocTradeItem.FIELDNO("Gross Weight"),
                                   LocTradeItem.FIELDNO("Total Circumference"),
                                   LocTradeItem.FIELDNO("Outer Circumference"),
                                   LocTradeItem.FIELDNO("Other Circumference")])
          THEN BEGIN
            IF ThrowError THEN
              FIELDERROR("Field No.");
            EXIT(FALSE);
          END;
        DATABASE::"Purchase Line Detail":
          IF NOT (CheckFieldNo IN [LocPurchaseLineDetail.FIELDNO(Length),
                                   LocPurchaseLineDetail.FIELDNO(Width),
                                   LocPurchaseLineDetail.FIELDNO(Weight),
                                   LocPurchaseLineDetail.FIELDNO(Thickness)])
          THEN BEGIN
            IF ThrowError THEN
              FIELDERROR("Field No.");
            EXIT(FALSE);
          END;
        ELSE
          IF ThrowError THEN
            FIELDERROR("Table ID")
          ELSE
            EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE GetFieldNoFilter@1100529620() : Text;
    VAR
      LocTradeItem@1100529601 : Record 11012317;
      LocPurchaseLineDetail@1100529600 : Record 11020660;
    BEGIN
      CASE "Table ID" OF
        DATABASE::"Trade Item":
          EXIT(FORMAT(LocTradeItem.FIELDNO(Length)) + '|' +
               FORMAT(LocTradeItem.FIELDNO(Width)) + '|' +
               FORMAT(LocTradeItem.FIELDNO(Height)) + '|' +
               FORMAT(LocTradeItem.FIELDNO("Gross Weight")) + '|' +
               FORMAT(LocTradeItem.FIELDNO("Total Circumference")) + '|' +
               FORMAT(LocTradeItem.FIELDNO("Outer Circumference")) + '|' +
               FORMAT(LocTradeItem.FIELDNO("Other Circumference")));
        DATABASE::"Purchase Line Detail":
          EXIT(FORMAT(LocPurchaseLineDetail.FIELDNO(Length)) + '|' +
               FORMAT(LocPurchaseLineDetail.FIELDNO(Width)) + '|' +
               FORMAT(LocPurchaseLineDetail.FIELDNO(Weight)) + '|' +
               FORMAT(LocPurchaseLineDetail.FIELDNO(Thickness)));
        ELSE
          EXIT('');
      END;
    END;

    PROCEDURE SetUpNewLine@1100529600(LastItemOperationFormula@1100529601 : Record 11229434);
    BEGIN
      IF LastItemOperationFormula."Line No." = 0 THEN
        VALIDATE("Line Type", "Line Type"::Value)
      ELSE
        IF LastItemOperationFormula."Line Type" = LastItemOperationFormula."Line Type"::Operator THEN
          VALIDATE("Line Type", "Line Type"::Value)
        ELSE
          VALIDATE("Line Type", "Line Type"::Operator);
    END;

    PROCEDURE CheckFormula@1100529601(ItemOperationCode@1100529600 : Code[20]);
    VAR
      LocItemOperationFormula@1100529601 : Record 11229434;
      PrevItemOperationFormula@1100529604 : Record 11229434;
      LineCount@1100529602 : Integer;
      TotalLineCount@1100529603 : Integer;
    BEGIN
      IF ItemOperationCode = '' THEN
        EXIT;
      LocItemOperationFormula.SETRANGE("Item Operation Code", ItemOperationCode);
      IF LocItemOperationFormula.ISEMPTY THEN
        EXIT;

      TotalLineCount := LocItemOperationFormula.COUNT;
      LocItemOperationFormula.FINDSET;
      REPEAT
        LineCount += 1;
        IF LineCount > 1 THEN BEGIN
          IF LineCount = TotalLineCount THEN
            IF LocItemOperationFormula."Line Type" = LocItemOperationFormula."Line Type"::Operator THEN
              ERROR(Text002, LocItemOperationFormula.FIELDCAPTION("Line Type"), LocItemOperationFormula."Line Type"::Value);
          IF PrevItemOperationFormula."Line Type" = LocItemOperationFormula."Line Type" THEN
            IF PrevItemOperationFormula."Line Type" = PrevItemOperationFormula."Line Type"::Value THEN
              ERROR(Text003, PrevItemOperationFormula."Line No.")
            ELSE
              ERROR(Text004, PrevItemOperationFormula."Line No.");
        END ELSE
          IF LocItemOperationFormula."Line Type" = LocItemOperationFormula."Line Type"::Operator THEN
            ERROR(Text001, LocItemOperationFormula.FIELDCAPTION("Line Type"), LocItemOperationFormula."Line Type"::Value);

        LocItemOperationFormula.CheckLineValues;
        PrevItemOperationFormula := LocItemOperationFormula;
      UNTIL LocItemOperationFormula.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

