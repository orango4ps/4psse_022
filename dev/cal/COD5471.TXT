OBJECT Codeunit 5471 Graph Mgt - Customer
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [External]
    PROCEDURE PostalAddressToJSON@5(Customer@1000 : Record 18) JSON : Text;
    VAR
      GraphMgtComplexTypes@1001 : Codeunit 5468;
    BEGIN
      WITH Customer DO
        GraphMgtComplexTypes.GetPostalAddressJSON(Address,"Address 2",City,County,"Country/Region Code","Post Code",JSON);
    END;

    [External]
    PROCEDURE UpdateIntegrationRecords@11(OnlyCustomersWithoutId@1000 : Boolean);
    VAR
      DummyCustomer@1002 : Record 18;
      GraphMgtGeneralTools@1001 : Codeunit 5465;
      CustomerRecordRef@1019 : RecordRef;
    BEGIN
      CustomerRecordRef.OPEN(DATABASE::Customer);
      GraphMgtGeneralTools.UpdateIntegrationRecords(CustomerRecordRef,DummyCustomer.FIELDNO(Id),OnlyCustomersWithoutId);
    END;

    [External]
    PROCEDURE UpdatePostalAddress@4(PostalAddressJSON@1000 : Text;VAR Customer@1001 : Record 18);
    VAR
      GraphMgtComplexTypes@1002 : Codeunit 5468;
      RecRef@1004 : RecordRef;
    BEGIN
      IF PostalAddressJSON = '' THEN
        EXIT;

      WITH Customer DO BEGIN
        RecRef.GETTABLE(Customer);
        GraphMgtComplexTypes.ApplyPostalAddressFromJSON(PostalAddressJSON,RecRef,
          FIELDNO(Address),FIELDNO("Address 2"),FIELDNO(City),FIELDNO(County),FIELDNO("Country/Region Code"),FIELDNO("Post Code"));
        RecRef.SETTABLE(Customer);
      END;
    END;

    [EventSubscriber(Codeunit,5465,ApiSetup)]
    LOCAL PROCEDURE HandleApiSetup@16();
    BEGIN
      UpdateIntegrationRecords(FALSE);
      UpdateIds;
    END;

    [EventSubscriber(Codeunit,5150,OnUpdateRelatedRecordIdFields)]
    LOCAL PROCEDURE HandleUpdateRelatedRecordIdFields@3(VAR RecRef@1000 : RecordRef);
    VAR
      Customer@1001 : Record 18;
      TempField@1004 : TEMPORARY Record 2000000041;
      GraphMgtGeneralTools@1003 : Codeunit 5465;
      UpdatedRecRef@1002 : RecordRef;
    BEGIN
      IF NOT (RecRef.NUMBER = DATABASE::Customer) THEN
        EXIT;

      IF RecRef.ISTEMPORARY THEN
        EXIT;

      RecRef.SETTABLE(Customer);
      Customer.UpdateReferencedIds;

      UpdatedRecRef.GETTABLE(Customer);
      Customer.GetReferencedIds(TempField);
      GraphMgtGeneralTools.TransferRelatedRecordIntegrationIDs(RecRef,UpdatedRecRef,TempField);
    END;

    [External]
    PROCEDURE UpdateIds@6();
    VAR
      Customer@1000 : Record 18;
    BEGIN
      IF NOT Customer.FINDSET(TRUE,FALSE) THEN
        EXIT;

      REPEAT
        Customer.UpdateReferencedIds;
        Customer.MODIFY(FALSE);
      UNTIL Customer.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

