OBJECT Codeunit 5513 Graph Mgt - Time Registration
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE InitUserSetup@1();
    VAR
      UserSetup@1000 : Record 91;
    BEGIN
      IF NOT UserSetup.GET(USERID) THEN BEGIN
        UserSetup.VALIDATE("User ID",USERID);
        UserSetup.VALIDATE("Time Sheet Admin.",TRUE);
        UserSetup.INSERT(TRUE);
      END;
    END;

    PROCEDURE ModifyResourceToUseTimeSheet@2(VAR Resource@1000 : Record 156);
    BEGIN
      IF SetResourceFieldsToUseTimeSheet(Resource) THEN
        Resource.MODIFY(TRUE);
    END;

    PROCEDURE CreateResourceToUseTimeSheet@12(VAR Resource@1002 : Record 156);
    VAR
      TempFieldSet@1003 : TEMPORARY Record 2000000041;
      GraphMgtGeneralTools@1000 : Codeunit 5465;
      ResourceRecRef@1001 : RecordRef;
    BEGIN
      CLEAR(Resource);
      Resource.INSERT(TRUE);

      ResourceRecRef.GETTABLE(Resource);
      GraphMgtGeneralTools.ProcessNewRecordFromAPI(ResourceRecRef,TempFieldSet,CREATEDATETIME(Resource."Last Date Modified",0T));
      ResourceRecRef.SETTABLE(Resource);

      ModifyResourceToUseTimeSheet(Resource);
    END;

    PROCEDURE GetTimeSheetHeader@22(ResouceNo@1001 : Code[20];StartingDate@1002 : Date) : Code[20];
    VAR
      TimeSheetHeader@1000 : Record 950;
    BEGIN
      TimeSheetHeader.RESET;
      TimeSheetHeader.SETRANGE("Starting Date",StartingDate);
      TimeSheetHeader.SETRANGE("Resource No.",ResouceNo);
      IF NOT TimeSheetHeader.FINDFIRST THEN BEGIN
        CreateTimeSheetHeader(StartingDate,ResouceNo);
        TimeSheetHeader.FINDFIRST;
      END;

      EXIT(TimeSheetHeader."No.");
    END;

    PROCEDURE GetTimeSheetLineWithEmptyDate@18(VAR TimeSheetLine@1000 : Record 951;TimeSheetHeaderNo@1001 : Code[20];TimeSheetDetailDate@1002 : Date);
    VAR
      TimeSheetDetail@1003 : Record 952;
      TimeSheetLineNo@1004 : Integer;
    BEGIN
      TimeSheetLine.RESET;
      TimeSheetLine.SETRANGE(Type,TimeSheetDetail.Type::Resource);
      TimeSheetLine.SETRANGE(Status,TimeSheetLine.Status::Open);
      TimeSheetLine.SETRANGE("Time Sheet No.",TimeSheetHeaderNo);
      IF TimeSheetLine.FINDSET THEN
        REPEAT
          IF NOT TimeSheetDetail.GET(TimeSheetHeaderNo,TimeSheetLine."Line No.",TimeSheetDetailDate) THEN
            EXIT;
        UNTIL TimeSheetLine.NEXT = 0;

      TimeSheetLine.RESET;
      TimeSheetLine.SETRANGE("Time Sheet No.",TimeSheetHeaderNo);
      IF TimeSheetLine.FINDLAST THEN
        TimeSheetLineNo := TimeSheetLine."Line No." + 10000
      ELSE
        TimeSheetLineNo := 10000;

      CreateTimeSheetLine(TimeSheetHeaderNo,TimeSheetLineNo);
      TimeSheetLine.GET(TimeSheetHeaderNo,TimeSheetLineNo);
    END;

    PROCEDURE AddTimeSheetDetail@17(VAR TimeSheetDetail@1005 : Record 952;TimeSheetLine@1000 : Record 951;Date@1003 : Date;Quantity@1004 : Decimal);
    BEGIN
      CLEAR(TimeSheetDetail);
      TimeSheetDetail.CopyFromTimeSheetLine(TimeSheetLine);
      TimeSheetDetail.Date := Date;
      TimeSheetDetail.Quantity := Quantity;
      TimeSheetDetail.INSERT(TRUE);
    END;

    PROCEDURE UpdateIntegrationRecords@11(OnlyTimeSheetDetailsWithoutId@1000 : Boolean);
    VAR
      DummyTimeSheetDetail@1002 : Record 952;
      GraphMgtGeneralTools@1001 : Codeunit 5465;
      TimeSheetDetailRecordRef@1019 : RecordRef;
    BEGIN
      TimeSheetDetailRecordRef.OPEN(DATABASE::"Time Sheet Detail");
      GraphMgtGeneralTools.UpdateIntegrationRecords(
        TimeSheetDetailRecordRef,DummyTimeSheetDetail.FIELDNO(Id),OnlyTimeSheetDetailsWithoutId);
    END;

    [EventSubscriber(Codeunit,5465,ApiSetup)]
    LOCAL PROCEDURE HandleApiSetup@16();
    BEGIN
      UpdateIntegrationRecords(FALSE);
    END;

    LOCAL PROCEDURE SetResourceFieldsToUseTimeSheet@3(VAR Resource@1000 : Record 156) : Boolean;
    BEGIN
      IF Resource."Use Time Sheet" AND
         (Resource."Time Sheet Approver User ID" <> '') AND
         (Resource."Time Sheet Owner User ID" <> '')
      THEN
        EXIT(FALSE);

      IF NOT Resource."Use Time Sheet" THEN
        Resource.VALIDATE("Use Time Sheet",TRUE);
      IF Resource."Time Sheet Approver User ID" = '' THEN
        Resource.VALIDATE("Time Sheet Approver User ID",USERID);
      IF Resource."Time Sheet Owner User ID" = '' THEN
        Resource.VALIDATE("Time Sheet Owner User ID",USERID);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CreateTimeSheetHeader@20(StartingDate@1000 : Date;ResourceNumber@1001 : Code[20]);
    VAR
      CreateTimeSheets@1002 : Report 950;
    BEGIN
      CreateTimeSheets.InitParameters(StartingDate,1,ResourceNumber,FALSE,TRUE);
      CreateTimeSheets.USEREQUESTPAGE(FALSE);
      CreateTimeSheets.RUN;
    END;

    LOCAL PROCEDURE CreateTimeSheetLine@15(TimeSheetHeaderNo@1001 : Code[20];TimeSheetLineNo@1000 : Integer);
    VAR
      TimeSheetLine@1002 : Record 951;
    BEGIN
      TimeSheetLine."Time Sheet No." := TimeSheetHeaderNo;
      TimeSheetLine."Line No." := TimeSheetLineNo;
      TimeSheetLine.Type := TimeSheetLine.Type::Resource;
      TimeSheetLine.INSERT(TRUE);
    END;

    BEGIN
    END.
  }
}

