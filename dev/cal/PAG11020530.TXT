OBJECT Page 11020530 Transport Ride Plant Order SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Transportfahrt Werkz.-Auftrag;
               ENU=Transport Ride Plant Order;
               NLD=Transportrit materieelorder;
               NOR=Transporttur for maskinordre;
               SVE=Maskinorder transportk”rning];
    SourceTable=Table11020550;
    PageType=ListPart;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             OrderAmtVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 PlantSetup.GET;
                 OrderPickingButtonVisible := PlantSetup."Order Picking Procedure";
               END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS(Type, "Appointment Code");
                       CALCFIELDS("Appointment Description");  //* Flowfield from flowfield (not always filled)
                       OrderPickingStatusHideValue := (NOT PlantSetup."Order Picking Procedure") OR (Type <> Type::Arrival);
                     END;

    OnDeleteRecord=BEGIN
                     IF TransRideRec.GET("Ride No.") THEN BEGIN
                       IF TransRideRec.Status >= TransRideRec.Status::Released THEN
                         TransRideRec.FIELDERROR(Status);
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1100409000;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100529001;1 ;ActionGroup;
                      Name=PickingButton;
                      CaptionML=[DEU=Order-&Picking;
                                 ENU=Order Picking;
                                 NLD=Orderpicking;
                                 SVE=Orderplockning];
                      Visible=OrderPickingButtonVisible;
                      Enabled=OrderPickingButtonVisible }
      { 1100529002;2 ;Action    ;
                      ShortCutKey=Ctrl+F10;
                      CaptionML=[DEU=Zum Plan;
                                 ENU=To Plan;
                                 NLD=Te plannen];
                      Visible=OrderPickingButtonVisible;
                      Enabled=OrderPickingButtonVisible;
                      Image=Planning;
                      OnAction=BEGIN
                                 RunOrderPicking(1); //DP00688 (DP00690)
                               END;
                                }
      { 1100529000;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=[DEU=Zum Auftragsabholer;
                                 ENU=To Order Picker;
                                 NLD=Naar orderpicker];
                      Visible=OrderPickingButtonVisible;
                      Enabled=OrderPickingButtonVisible;
                      Image=OrderTracking;
                      OnAction=BEGIN
                                 RunOrderPicking(2); //DP00688 (DP00690)
                               END;
                                }
      { 1100409001;1 ;Action    ;
                      CaptionML=[DEU=Drucken Auftragssammelbericht;
                                 ENU=Pick List;
                                 NLD=Verzamellijst;
                                 SVE=Plocklista];
                      Image=Print;
                      OnAction=BEGIN
                                 PrintPlantOrders("Ride No.", 1);  //* 1=Picking List
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                SourceExpr="Plant Order No.";
                OnLookup=BEGIN
                           IF OnLookupPlantOrder(TRUE) THEN
                             CurrPage.UPDATE(TRUE);
                         END;

                OnAssistEdit=VAR
                               PlantOrder@1100527000 : Record 11012556;
                             BEGIN
                               IF PlantOrder.GET("Plant Order No.") THEN
                                 IF PlantOrder.Posted THEN
                                   PAGE.RUNMODAL(PAGE::"Posted Plant Order",PlantOrder)
                                 ELSE
                                   IF PlantOrder."Rental Free Order Type" = PlantOrder."Rental Free Order Type"::" " THEN
                                     PAGE.RUNMODAL(PAGE::"Plant Order",PlantOrder);
                             END;
                              }

    { 1100485005;2;Field  ;
                DrillDown=No;
                SourceExpr="Transfer Date" }

    { 1100525015;2;Field  ;
                DrillDown=No;
                SourceExpr=Type }

    { 1100485003;2;Field  ;
                DrillDown=No;
                SourceExpr="From Location" }

    { 1100525025;2;Field  ;
                CaptionML=[DEU=Vom Lagerort Beschreibung;
                           ENU=From Location Description;
                           NLD=Van locatie omschrijving;
                           NOR=Fra lokasjonsbeskrivelse;
                           SVE=Fr†n beskrivning av lagerst„lle];
                SourceExpr=GetFromLocationDescription();
                Visible=FALSE }

    { 1100527000;2;Field  ;
                SourceExpr="From Location City" }

    { 1100485007;2;Field  ;
                DrillDown=No;
                SourceExpr="To Location" }

    { 1100525027;2;Field  ;
                CaptionML=[DEU=Zum Lagerort Beschreibung;
                           ENU=To Location Description;
                           NLD=Naar locatie omschrijving;
                           NOR=Til lokasjonsbeskrivelse;
                           SVE=Till lagerst„llets beskrivning];
                SourceExpr=GetToLocationDescription();
                Visible=FALSE }

    { 1100527001;2;Field  ;
                SourceExpr="To Location City" }

    { 1100485011;2;Field  ;
                DrillDown=No;
                SourceExpr="Status (PO)" }

    { 1100529003;2;Field  ;
                DrillDown=No;
                SourceExpr="Order Picking Status";
                Visible=FALSE;
                HideValue=OrderPickingStatusHideValue }

    { 1100525023;2;Field  ;
                CaptionML=[DEU=Transportauftragsnr.;
                           ENU=Transport Order;
                           NLD=Transportorder;
                           NOR=Transportordre;
                           SVE=Transportorder];
                SourceExpr=GetTransOrderOfRidePlantOrder("Ride No.", "Plant Order No.", '') }

    { 1100485009;2;Field  ;
                DrillDown=No;
                SourceExpr="Transport Cost for (Advice)" }

    { 1100485029;2;Field  ;
                CaptionML=[DEU=Gewicht;
                           ENU=Weight;
                           NLD=Gewicht;
                           NOR=Vekt;
                           SVE=Vikt];
                SourceExpr=GetTotalWeightPlantOrder() }

    { 1100485013;2;Field  ;
                CaptionML=[DEU=Bemerkungen;
                           ENU=Comments;
                           NLD=Opmerkingen;
                           NOR=Kommentarer;
                           SVE=Kommentar];
                SourceExpr=PlantOrderHasCommentLines();
                OnDrillDown=BEGIN
                              PlantOrderCommentSheet(FALSE);  //DP00183.c
                            END;
                             }

    { 1100525013;2;Field  ;
                DrillDown=No;
                SourceExpr="Shipment Method Code" }

    { 1100525003;2;Field  ;
                SourceExpr="Appointment Fixed Date" }

    { 1100525005;2;Field  ;
                DrillDown=No;
                SourceExpr="Appointment Time" }

    { 1100525007;2;Field  ;
                DrillDown=No;
                SourceExpr="Appointment Code" }

    { 1100525009;2;Field  ;
                DrillDown=No;
                SourceExpr="Appointment Description" }

    { 1100525011;2;Field  ;
                DrillDown=No;
                SourceExpr="Appointment Comment" }

  }
  CODE
  {
    VAR
      PlantSetup@1100529001 : Record 11012550;
      TransRideRec@1100485000 : Record 11020517;
      RidePlantOrderLineRec@1100525000 : Record 11020550;
      PlantLocRec@1100525005 : Record 11012554;
      WeightArrival@1100525001 : Decimal;
      WeightRemoval@1100525002 : Decimal;
      WeightOtherTr@1100525003 : Decimal;
      OrderAmtVisible@19036939 : Boolean INDATASET;
      OrderPickingButtonVisible@1100529000 : Boolean INDATASET;
      OrderPickingStatusHideValue@1100529002 : Boolean INDATASET;

    PROCEDURE SetFromPostedRide@1100525002();
    BEGIN
      OrderAmtVisible := (FALSE);
    END;

    PROCEDURE RunOrderPicking@1100529000(OPMode@1100529003 : Integer);
    VAR
      RidePlantOrderLine@1100529000 : Record 11020550;
      PlantOrder@1100529001 : Record 11012556;
      PlantOrderPickingMgt@1100529002 : Codeunit 11012101;
    BEGIN
      //DP00688 (DP00690)
      CurrPage.SETSELECTIONFILTER(RidePlantOrderLine);
      RidePlantOrderLine.FILTERGROUP(9);
      RidePlantOrderLine.SETRANGE("Ride No.", "Ride No.");
      RidePlantOrderLine.SETFILTER("Plant Order No.", '<>%1', '');
      RidePlantOrderLine.SETRANGE(Type, RidePlantOrderLine.Type::Arrival);
      RidePlantOrderLine.FILTERGROUP(0);
      IF RidePlantOrderLine.FINDSET THEN BEGIN
        REPEAT
          PlantOrder.GET(RidePlantOrderLine."Plant Order No.");
          IF (NOT PlantOrder.Posted) AND (PlantOrder.Status < PlantOrder.Status::Released) AND
             (PlantOrder."Order Picking Status" = PlantOrder."Order Picking Status"::Open)
          THEN
            PlantOrderPickingMgt.ArrivalPlantOrderToOrderPicking(PlantOrder, OPMode);
        UNTIL RidePlantOrderLine.NEXT = 0;
      END;
    END;

    PROCEDURE PrintPlantOrders@1100525000(RideNo@1100525004 : Code[20];POListType@1100525005 : Integer);
    VAR
      lvPlantOrderRec@1100525003 : Record 11012556;
      lvRidePlantOrderLineRec@1100525002 : Record 11020550;
      lvPrintDocumentCU@1100525001 : Codeunit 229;
      lvFilter@1100525006 : Text[1024];
    BEGIN
      //* POListType: 1=Plant Order Picking List
      CurrPage.SETSELECTIONFILTER(lvRidePlantOrderLineRec);
      lvRidePlantOrderLineRec.SETRANGE("Ride No.", RideNo);
      IF lvRidePlantOrderLineRec.FINDSET THEN BEGIN
        REPEAT
          IF lvFilter = '' THEN
            lvFilter := lvRidePlantOrderLineRec."Plant Order No."
          ELSE
            lvFilter := lvFilter + '|' + lvRidePlantOrderLineRec."Plant Order No.";
        UNTIL lvRidePlantOrderLineRec.NEXT = 0;
        IF lvFilter = '' THEN
          EXIT;

        lvPlantOrderRec.SETFILTER("No.", lvFilter);
        //* Mostly only picking list for arrival order, so set 'Type' default to "Arrival".
        //* Note: PO-No. filter is filled with all selected PO-Lines of the Ride. So it is simply to print all
        //*       the PO's of the Ride when the user deletes the filter on Type.
        lvPlantOrderRec.SETRANGE(Type, lvPlantOrderRec.Type::Arrival);
        IF lvPlantOrderRec.FINDFIRST THEN BEGIN
          CASE POListType OF
            1: lvPrintDocumentCU.PrintPlantPickingList(lvPlantOrderRec, TRUE);
          END;
        END;
      END;
    END;

    PROCEDURE GetRideWeights@1100525001(TypeWeight@1100525000 : Integer) : Decimal;
    BEGIN
      //* TypeWeight: 1=Arrival, 2=Removal, 3=Other Transfer
      IF TypeWeight = 1 THEN  //* Type 1 is always done first (at the moment), so only then determine the weights of the Ride
        RidePlantOrderLineRec.TransportRideWeights("Ride No.", WeightArrival, WeightRemoval, WeightOtherTr);
      CASE TypeWeight OF
        1: EXIT(WeightArrival);
        2: EXIT(WeightRemoval);
        3: EXIT(WeightOtherTr);
      END;
      EXIT(0)
    END;

    PROCEDURE GetFromLocationDescription@1100525003() : Text[100];
    BEGIN
      CALCFIELDS("From Location");
      IF PlantLocRec.GET("From Location") THEN
        EXIT(PlantLocRec.Description);
      EXIT('');
    END;

    PROCEDURE GetToLocationDescription@1100525004() : Text[100];
    BEGIN
      CALCFIELDS("To Location");
      IF PlantLocRec.GET("To Location") THEN
        EXIT(PlantLocRec.Description);
      EXIT('');
    END;

    BEGIN
    END.
  }
}

