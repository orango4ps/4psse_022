OBJECT Page 11012894 Copy Object
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Kopieren Objekt;
               ENU=Copy Object;
               NLD=Kopieer object;
               NOR=Kopier objekt;
               SVE=Kopiera objekt];
    SourceTable=Table11020334;
    PageType=StandardDialog;
    OnOpenPage=BEGIN
                 IF NOT GET(ObjectFrom) THEN Rec.INIT;  //db, 26-10-04: fill formcaption due to used sourcetable
               END;

    OnQueryClosePage=BEGIN
                       CloseActionOK := CloseAction IN [ACTION::OK,ACTION::LookupOK];
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100528600;1;Group  ;
                CaptionML=[DEU=Kopieren von;
                           ENU=Copy from;
                           NLD=Kopi‰ren van;
                           NOR=Kopier fra;
                           SVE=Kopiera fr†n];
                GroupType=Group }

    { 6   ;2   ;Field     ;
                CaptionML=[DEU=Objekt;
                           ENU=Service Object;
                           NLD=Object;
                           NOR=Serviceobjekt;
                           SVE=Serviceobjekt];
                SourceExpr=ObjectFrom;
                OnValidate=BEGIN
                             ObjectRec.GET(ObjectFrom);
                             ObjectFromTxt := ObjectRec.Description;
                           END;

                OnLookup=BEGIN
                           ObjectRec.RESET;
                           IF PAGE.RUNMODAL(PAGE::"Standard Object List",ObjectRec) = ACTION::LookupOK THEN BEGIN
                             ObjectFrom := ObjectRec."No.";
                             ObjectFromTxt := ObjectRec.Description;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 8   ;2   ;Field     ;
                CaptionML=[DEU=Serviceobjektbeschreibung;
                           ENU=Service Object Description;
                           NLD=Object omschrijving;
                           NOR=Serviceobjektbeskrivelse;
                           SVE=Serviceobjektbeskrivning];
                SourceExpr=ObjectFromTxt;
                Editable=FALSE }

    { 1100528602;2;Field  ;
                CaptionML=[DEU=Serviceobjektbeschreibung 2;
                           ENU=Service Object Description 2;
                           NLD=Object omschrijving 2];
                SourceExpr=ObjectFromTxt2;
                Editable=FALSE }

    { 1100528601;1;Group  ;
                CaptionML=[DEU=Kopieren in;
                           ENU=Copy to;
                           NLD=Kopi‰ren naar;
                           NOR=Kopier til;
                           SVE=Kopiera till];
                GroupType=Group }

    { 11  ;2   ;Field     ;
                CaptionML=[DEU=Objekt;
                           ENU=Service Object;
                           NLD=Object;
                           NOR=Serviceobjekt;
                           SVE=Serviceobjekt];
                SourceExpr=ObjectTo;
                OnValidate=BEGIN
                             ValidateDestination;
                           END;

                OnLookup=BEGIN
                           PAGE.RUNMODAL(PAGE::"Standard Object List",ObjectRec);
                         END;
                          }

    { 12  ;2   ;Field     ;
                CaptionML=[DEU=Serviceobjektbeschreibung;
                           ENU=Service Object Description;
                           NLD=Object omschrijving;
                           NOR=Serviceobjektbeskrivelse;
                           SVE=Serviceobjektbeskrivning];
                SourceExpr=ObjectToTxt }

    { 1100528603;2;Field  ;
                CaptionML=[DEU=Serviceobjektbeschreibung 2;
                           ENU=Service Object Description 2;
                           NLD=Object omschrijving 2];
                SourceExpr=ObjectToTxt2 }

  }
  CODE
  {
    VAR
      ObjectFrom@11012029 : Code[20];
      ObjectTo@11012028 : Code[20];
      ObjectFromTxt@11012005 : Text[100];
      ObjectFromTxt2@1100528600 : Text[50];
      ObjectToTxt@11012004 : Text[100];
      ObjectToTxt2@1100528601 : Text[50];
      ObjectRec@11012011 : Record 11020334;
      Text001@1100525001 : TextConst 'DEU=%1 %2 ist bereits vorhanden.;ENU=%1 %2 already exists;NLD=%1 %2 bestaat reeds;NOR=%1 %2 finnes allerede.;SVE=%1 %2 finns redan.';
      ServSetup@1100525007 : Record 11012800;
      SeriesRec@1100525006 : Record 308;
      SerLineRec@1100525005 : Record 309;
      SerRelRec@1100525004 : Record 310;
      NoSeriesMgt@1100525003 : Codeunit 396;
      ObjectNos@1100525002 : Code[20];
      CloseActionOK@1100528400 : Boolean;

    PROCEDURE FillDefaults@1(lObjectFrom@11012000 : Code[20]);
    BEGIN
      ObjectFrom := lObjectFrom;
      ObjectTo := ObjectFrom;

      IF ObjectRec.GET(ObjectFrom) THEN BEGIN
        ObjectFromTxt := ObjectRec.Description;
        ObjectFromTxt2 := ObjectRec."Description 2";
        DetermineNewDestination;
        ObjectToTxt := ObjectFromTxt;
        ObjectToTxt2 := ObjectFromTxt2;
      END;
    END;

    PROCEDURE DetermineNewDestination@1000000000();
    BEGIN
      SeriesRec.INIT;

      ServSetup.GET;
      ObjectNos := ServSetup."Standard Object Nos.";
      SerRelRec.SETRANGE(Code, ObjectNos);
      IF SerRelRec.FINDSET THEN BEGIN
        REPEAT
          SerLineRec.SETRANGE("Series Code", SerRelRec."Series Code");
          IF SerLineRec.FINDSET THEN BEGIN
            REPEAT
              IF (SerLineRec.Open = TRUE) AND
                 (ObjectFrom >= SerLineRec."Starting No.") AND
                 ((ObjectFrom < SerLineRec."Ending No.") OR (SerLineRec."Ending No." = '')) THEN
                ObjectNos := SerLineRec."Series Code";
            UNTIL SerLineRec.NEXT = 0;
          END;
        UNTIL SerRelRec.NEXT = 0;
      END;
      IF SeriesRec.GET(ObjectNos) THEN;
      ObjectTo := NoSeriesMgt.GetNextNo(ObjectNos,0D,FALSE);
    END;

    PROCEDURE ValidateDestination@1100485004();
    BEGIN
      IF ObjectRec.GET(ObjectTo) THEN
        ERROR(Text001, ObjectRec.TABLECAPTION, ObjectTo);
    END;

    PROCEDURE StartProcess@1100485002();
    VAR
      CopyCu@1100485001 : Codeunit 11012804;
      NewNos@1100485002 : Code[20];
      NewDest@1100525000 : Code[20];
    BEGIN
      ValidateDestination;

      CopyCu.CopyStandardObject(ObjectFrom, ObjectTo, ObjectToTxt, ObjectToTxt2);

      NewNos := ObjectNos;

      CLEAR(NoSeriesMgt);     //Afdwingen van het opnieuw lezen van 'NoSeriesLine' record bij de volgende 'GetNextNo' (met FALSE)
      NewDest := NoSeriesMgt.GetNextNo(NewNos,0D,FALSE);
      IF NewDest = ObjectTo THEN
        NewDest := NoSeriesMgt.GetNextNo(NewNos,0D,TRUE);
    END;

    LOCAL PROCEDURE StdDialogConfirm@1100528400() : Boolean;
    BEGIN
      CurrPage.RUNMODAL;
      EXIT(CloseActionOK);
    END;

    LOCAL PROCEDURE StdDialogDoAction@1100528401();
    BEGIN
      StartProcess;
    END;

    PROCEDURE StdDialogRunModal@1100528404();
    BEGIN
      IF StdDialogConfirm THEN
        StdDialogDoAction;
    END;

    BEGIN
    END.
  }
}

