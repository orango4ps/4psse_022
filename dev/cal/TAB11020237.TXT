OBJECT Table 11020237 Standard Summary Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 11072003=rm;
    CaptionML=[ENU=Standard Summary Line;
               NOR=Rad for Standardsammendrag;
               SVE=Rad f”r standardsammandrag];
  }
  FIELDS
  {
    { 5   ;   ;Summary             ;Code10        ;TableRelation="Standard Summary Sheet".Summary;
                                                   CaptionML=[ENU=Summary;
                                                              NOR=Sammendrag;
                                                              SVE=Sammanfattning];
                                                   Description=transferfield table 11012064 - 11020237 }
    { 31  ;   ;Row No.             ;Code10        ;CaptionML=[ENU=Row No.;
                                                              NOR=Rad-nr;
                                                              SVE=Rad-nr];
                                                   NotBlank=Yes;
                                                   Numeric=Yes }
    { 40  ;   ;Element             ;Code20        ;TableRelation="Base Element".Code;
                                                   OnValidate=BEGIN
                                                                ElementFormat.FormatElem(Element,2,'');
                                                                IF Element <> '' THEN
                                                                   ElementRec.GET(Element);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 50  ;   ;Cost Type           ;Option        ;InitValue=Sundry;
                                                   OnValidate=BEGIN
                                                                IF ("Cost Type" <> "Cost Type"::Labor) THEN
                                                                  "Amount/Hours" := "Amount/Hours"::Amount;

                                                                IF "Cost Object" <> '' THEN BEGIN
                                                                  IF "Cost Type" <> xRec."Cost Type" THEN
                                                                    IF CONFIRM(Text001,TRUE) THEN BEGIN
                                                                      "Cost Object" := '';
                                                                    END ELSE BEGIN
                                                                      "Cost Type" := xRec."Cost Type";
                                                                      EXIT;
                                                                    END;
                                                                END;

                                                                IF (Type = Type::Surcharge) AND
                                                                   ("Cost Type" = "Cost Type"::Labor) THEN
                                                                  VALIDATE("Cost Type Filter","Cost Type Filter"::Labor);
                                                              END;

                                                   CaptionML=[ENU=Cost Type;
                                                              NOR=Kostnadstype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=Labor,Material,Subcontracting,Plant,Sundry;
                                                                    NOR=Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse;
                                                                    SVE=Arbetskraft,Material,Underentreprenad,Maskin,Diverse];
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry }
    { 60  ;   ;Cost Object         ;Code20        ;TableRelation=IF (Cost Type=CONST(Labor)) "Dimension Value".Code WHERE (Cost Type=FILTER(Labor),
                                                                                                                           Global Dimension No.=CONST(2))
                                                                                                                           ELSE IF (Cost Type=CONST(Material)) "Dimension Value".Code WHERE (Cost Type=FILTER(Material),
                                                                                                                                                                                             Global Dimension No.=CONST(2))
                                                                                                                                                                                             ELSE IF (Cost Type=CONST(Plant)) "Dimension Value".Code WHERE (Cost Type=FILTER(Plant),
                                                                                                                                                                                                                                                            Global Dimension No.=CONST(2))
                                                                                                                                                                                                                                                            ELSE IF (Cost Type=CONST(Sundry)) "Dimension Value".Code WHERE (Cost Type=FILTER(Sundry),
                                                                                                                                                                                                                                                                                                                            Global Dimension No.=CONST(2))
                                                                                                                                                                                                                                                                                                                            ELSE IF (Cost Type=CONST(Subcontracting)) "Dimension Value".Code WHERE (Cost Type=FILTER(Subcontracting),
                                                                                                                                                                                                                                                                                                                                                                                                    Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                IF "Cost Object" <> '' THEN
                                                                  IF xRec."Cost Object" = '' THEN
                                                                    GetDefaultsCostObject()
                                                                  ELSE
                                                                    IF "Cost Object" <> xRec."Cost Object" THEN
                                                                      IF CONFIRM(
                                                                        Text002 +
                                                                        Text003)
                                                                      THEN
                                                                        GetDefaultsCostObject();
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 70  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 80  ;   ;Type                ;Option        ;InitValue=Amount;
                                                   OnValidate=BEGIN
                                                                IF (Type = Type::Surcharge) AND
                                                                   ("Cost Type" = "Cost Type"::Labor) THEN
                                                                  VALIDATE("Cost Type Filter","Cost Type Filter"::Labor)
                                                                ELSE
                                                                  "Cost Type Filter" := "Cost Type Filter"::All;

                                                                ResetValueFields();
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Text,Surcharge,Amount,Subtotal;
                                                                    NOR=Tekst,Tilleggsgebyr,Bel›p,Delsum;
                                                                    SVE=Text,Till„ggsavgift,Belopp,Delsumma];
                                                   OptionString=Text,Surcharge,Amount,Subtotal }
    { 85  ;   ;Kind of Surcharge   ;Option        ;InitValue=Exclusive;
                                                   OnValidate=BEGIN
                                                                IF "Kind of Surcharge" <> "Kind of Surcharge"::Exclusive THEN
                                                                  CheckKindOfSurchargeIsEditable;
                                                              END;

                                                   CaptionML=[ENU=Kind of Surcharge;
                                                              NOR=Type tilleggsgebyr;
                                                              SVE=Typ av till„ggsavgift];
                                                   OptionCaptionML=[ENU=Exclusive,Inclusive;
                                                                    NOR=Eksklusive,Inklusive;
                                                                    SVE=Exklusive,Inklusive];
                                                   OptionString=Exclusive,Inclusive }
    { 86  ;   ;Amount/Hours        ;Option        ;OnValidate=BEGIN
                                                                IF "Amount/Hours" <> "Amount/Hours"::Amount THEN
                                                                  CheckAmountHoursIsEditable;

                                                                IF xRec."Amount/Hours" <> "Amount/Hours" THEN BEGIN
                                                                  IF "Amount/Hours" = "Amount/Hours"::Amount THEN BEGIN
                                                                    Norm := 0;
                                                                    "Rate Code" := '';
                                                                    Rate := 0;
                                                                    Hours := 0;
                                                                  END ELSE BEGIN
                                                                    Price := 0;
                                                                  END;
                                                                  IF "Cost Object" <> '' THEN
                                                                    GetDefaultsCostObject();
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Amount/Hours;
                                                              NOR=Bel›p/timer;
                                                              SVE=Belopp/timmar];
                                                   OptionCaptionML=[ENU=Amount,Hours;
                                                                    NOR=Bel›p,Timer;
                                                                    SVE=Belopp,Timmar];
                                                   OptionString=Amount,Hours }
    { 90  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF Quantity <> 0 THEN
                                                                  CheckQuantityIsEditable;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 100 ;   ;Norm                ;Decimal       ;OnValidate=BEGIN
                                                                IF Norm <> 0 THEN
                                                                  CheckNormIsEditable;
                                                              END;

                                                   CaptionML=[ENU=Norm;
                                                              NOR=Norm;
                                                              SVE=Norm];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 110 ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   OnValidate=BEGIN
                                                                IF "Unit of Measure" <> '' THEN
                                                                  CheckUnitOfMeasureIsEditable;
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=M†leenhet;
                                                              SVE=Enhet] }
    { 120 ;   ;Rate Code           ;Code10        ;TableRelation="Budget Rate".Code WHERE (Project Filter=FILTER(''));
                                                   OnValidate=BEGIN
                                                                IF "Rate Code" <> '' THEN
                                                                  CheckRateCodeIsEditable;

                                                                IF ("Cost Type" = "Cost Type"::Labor) AND
                                                                  ("Amount/Hours" = "Amount/Hours"::Hours) THEN BEGIN
                                                                  RateRec.SETRANGE(Code,"Rate Code");
                                                                  RateRec.SETRANGE("Starting Date",0D,TODAY);
                                                                  RateRec.SETFILTER("Ending Date",'%1|>=%2',0D, TODAY);
                                                                  IF RateRec.FIND('+') THEN
                                                                    Rate := RateRec.Rate
                                                                  ELSE
                                                                    Rate := 0;
                                                                // Code below will probably never be executed.
                                                                //END ELSE BEGIN
                                                                //  MESSAGE(Text003, "Cost Type");
                                                                //  "Rate Code" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Rate Code;
                                                              NOR=Avgiftskode;
                                                              SVE=Avgiftskod] }
    { 125 ;   ;Rate                ;Decimal       ;OnValidate=BEGIN
                                                                IF Rate <> 0 THEN
                                                                  CheckRateIsEditable;
                                                              END;

                                                   CaptionML=[ENU=Rate;
                                                              NOR=Avgift;
                                                              SVE=Avgift];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 130 ;   ;Price               ;Decimal       ;OnValidate=BEGIN
                                                                IF Price <> 0 THEN
                                                                  CheckPriceIsEditable;

                                                                // Code below will probably never be executed.
                                                                //IF ("Cost Type" = "Cost Type"::Labor) AND
                                                                //   ("Amount/Hours" = "Amount/Hours"::Hours) THEN
                                                                //BEGIN
                                                                //  MESSAGE(Text004);
                                                                //  Price := 0;
                                                                //END;
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              NOR=Pris;
                                                              SVE=Pris];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 140 ;   ;Hours               ;Decimal       ;CaptionML=[ENU=Hours;
                                                              NOR="Timer ";
                                                              SVE=Timmar];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 150 ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                IF Amount <> 0 THEN
                                                                  CheckAmountIsEditable;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 155 ;   ;Subtotal            ;Decimal       ;CaptionML=[ENU=Subtotal;
                                                              NOR=Subtotal;
                                                              SVE=Subtotal];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 160 ;   ;Cost Type Filter    ;Option        ;InitValue=All;
                                                   OnValidate=BEGIN
                                                                IF "Cost Type Filter" <> "Cost Type Filter"::All THEN
                                                                  CheckCostTypeFilterIsEditable;
                                                              END;

                                                   CaptionML=[ENU=Cost Type Filter;
                                                              NOR=Kosttypefilter;
                                                              SVE=Filter f”r kostnadstyp];
                                                   OptionCaptionML=[ENU="Labor,Material,Subcontracting,Plant,Sundry,All, ";
                                                                    NOR="Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse,Alle, ";
                                                                    SVE="Arbetskraft,Material,Underentreprenad,Maskin,Diverse,Alla, "];
                                                   OptionString=[Labor,Material,Subcontracting,Plant,Sundry,All, ] }
    { 170 ;   ;Cost Object Filter  ;Text80        ;FieldClass=Normal;
                                                   TableRelation=IF (Cost Type Filter=FILTER(All)) "Dimension Value".Code WHERE (Global Dimension No.=CONST(2))
                                                                 ELSE IF (Cost Type Filter=FILTER(<>All)) "Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                                                                        Cost Type=FIELD(Cost Type Filter));
                                                   OnValidate=BEGIN
                                                                IF "Cost Object Filter" <> '' THEN
                                                                  CheckCostObjectFltrIsEditable;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              NOR=Kostnadsobjekt, filter;
                                                              SVE=Filter f”r kostnadsb„rare];
                                                   CaptionClass='1,3,2' }
    { 180 ;   ;Element Filter      ;Text80        ;OnValidate=BEGIN
                                                                IF "Element Filter" <> '' THEN
                                                                  CheckElementFilterIsEditable;
                                                              END;

                                                   CaptionML=[ENU=Element Filter;
                                                              NOR=Elementfilter;
                                                              SVE=Elementfilter] }
    { 190 ;   ;Totaling            ;Text250       ;InitValue=NVT;
                                                   OnValidate=BEGIN
                                                                IF Totaling <> '' THEN
                                                                  CheckTotalingIsEditable;
                                                              END;

                                                   CaptionML=[ENU=Totaling;
                                                              NOR=Summering;
                                                              SVE=Summeringsintervall] }
    { 200 ;   ;Cost Component      ;Code20        ;TableRelation="Cost Component".Code;
                                                   OnValidate=BEGIN
                                                                IF "Cost Component" <> '' THEN
                                                                  CheckCostComponentIsEditable;
                                                              END;

                                                   CaptionML=[ENU=Cost Component;
                                                              NOR=Kostnadskomponent;
                                                              SVE=Kostnadskomponent] }
    { 220 ;   ;Delete Line if Order;Boolean       ;CaptionML=[ENU=Delete Line if Order;
                                                              NOR=Fjerne rad hvis Ordre;
                                                              SVE=Ta bort rad f”r order] }
    { 230 ;   ;Overhead Surcharge  ;Boolean       ;CaptionML=[ENU=Overhead Surcharge;
                                                              NOR=Overheadkost;
                                                              SVE=Overheadkostnad] }
  }
  KEYS
  {
    {    ;Summary,Row No.                         ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1210190000 : TextConst 'ENU=Change Cost Type ?;NOR=Endre kostnadstype?;SVE=Žndra kostnadstyp?';
      Text002@1210190002 : TextConst 'ENU=Copy Data from new Cost Object?\\;NOR=Kopier data fra nytt Kostnadsobjekt?\\;SVE=Kopiera data fr†n nytt kostnadsobjekt?\\';
      Text003@1210190001 : TextConst 'ENU=PS. Alleen lege velden worden gevuld. Bestaande gegevens worden niet overschreven.;NOR=P.S. Kun tomme felt fylt ut. Eksisterende data overskrives ikke.;SVE=P.S. Endast tomma f„lt fylls i. Existerande data skrivs inte ”ver.';
      DimValRec@1210190004 : Record 349;
      RateRec@1210190005 : Record 11012000;
      ElementRec@1100485001 : Record 11012060;
      ElementFormat@1100485000 : Codeunit 11012022;
      DimMgt@1210190003 : Codeunit 408;
      Text005@1100528700 : TextConst 'ENU=%1 is not editable, %2 must be %3 or %4.;NOR=%1 er ikke redigerbar, %2 m† v‘re %3 eller %4.';
      Text006@1100528701 : TextConst 'ENU=%1 is not editable because %2 is %3.;NOR=%1 er ikke redigerbar fordi %2 er %3';
      Text007@1100528702 : TextConst 'ENU=%1 is not editable.;NOR=%1 er ikke redigerbar';

    PROCEDURE GetDefaultsCostObject@3();
    BEGIN
      //**Function: GetDefaultsCostObject
      DimMgt.GetDimValueRec(2, "Cost Object", DimValRec, TRUE, '');

      IF Description = '' THEN
        Description := DimValRec.Name;
      IF "Unit of Measure" = '' THEN
        "Unit of Measure" := DimValRec."Unit of Measure";
      IF "Cost Component" = '' THEN
        "Cost Component" := DimValRec."Cost Component";

      IF ("Cost Type" = "Cost Type"::Labor) AND
         ("Amount/Hours" = "Amount/Hours"::Hours) THEN
      BEGIN
        IF Norm = 0 THEN
          Norm := DimValRec.Norm;
        IF ("Rate Code" = '') AND (Rate = 0) THEN BEGIN
          "Rate Code" := DimValRec."Rate Code";
          RateRec.SETRANGE(Code,"Rate Code");
          RateRec.SETRANGE("Starting Date",0D,TODAY);
          RateRec.SETFILTER("Ending Date",'%1|>=%2',0D, TODAY);
          IF RateRec.FINDLAST THEN
            Rate := RateRec.Rate
          ELSE
            Rate := 0;
        END;
      END ELSE BEGIN
        IF Price = 0 THEN
          Price := DimValRec.Price;
      END;
    END;

    PROCEDURE ResetValueFields@1210190000();
    BEGIN
      Quantity := 0;
      Norm := 0;
      "Unit of Measure" := '';
      "Rate Code" := '';
      Rate := 0;
      Price := 0;
      Hours := 0;
      Amount := 0;
      "Cost Object Filter" := '';
      "Cost Type Filter" := "Cost Type Filter"::All;
      "Element Filter" := '';
      Totaling :='';
      "Kind of Surcharge" := "Kind of Surcharge"::Exclusive;
      Subtotal := 0;
    END;

    PROCEDURE CalcTotals@1();
    BEGIN
      //** Function: CalcTotals
      IF Type = Type::Amount THEN BEGIN
        IF ("Cost Type" = "Cost Type"::Labor) AND
           ("Amount/Hours" = "Amount/Hours"::Hours) THEN
        BEGIN
          Hours := ROUND(Quantity * Norm);
          Amount := ROUND(Quantity * Norm * Rate);
        END ELSE BEGIN
          Hours := 0;
          Amount := ROUND(Quantity * Price);
        END;
      END;
    END;

    PROCEDURE CheckCostComponentIsEditable@1100528716();
    BEGIN
      IF NOT CostComponentIsEditable THEN
        ERROR(Text007, FIELDCAPTION("Cost Component"));
    END;

    PROCEDURE CostComponentIsEditable@1100528700() : Boolean;
    VAR
      JobsSetup@1100528701 : Record 315;
    BEGIN
      JobsSetup.GET;
      EXIT(JobsSetup."Cost Component Editable");
    END;

    PROCEDURE CheckKindOfSurchargeIsEditable@1100528710();
    BEGIN
      IF NOT KindOfSurchargeIsEditable THEN
        ERROR(Text005, FIELDCAPTION("Kind of Surcharge"), FIELDCAPTION(Type), Type::Surcharge, Type::Subtotal);
    END;

    PROCEDURE KindOfSurchargeIsEditable@1100528703() : Boolean;
    BEGIN
      EXIT((Type = Type::Surcharge) OR (Type = Type::Subtotal));
    END;

    PROCEDURE CheckAmountHoursIsEditable@1100528712();
    BEGIN
      IF NOT AmountHoursIsEditable THEN
        ERROR(Text007, FIELDCAPTION("Amount/Hours"));
    END;

    PROCEDURE AmountHoursIsEditable@1100528704() : Boolean;
    BEGIN
      EXIT("Cost Type" = "Cost Type"::Labor);
    END;

    PROCEDURE CheckQuantityIsEditable@1100528713();
    BEGIN
      IF NOT QuantityIsEditable THEN
        ERROR(Text006, FIELDCAPTION(Quantity), FIELDCAPTION(Type), Type::Text);
    END;

    PROCEDURE QuantityIsEditable@1100528706() : Boolean;
    BEGIN
      EXIT(Type <> Type::Text);
    END;

    PROCEDURE CheckNormIsEditable@1100528714();
    BEGIN
      IF NOT NormIsEditable THEN
        ERROR(Text007, FIELDCAPTION(Norm));
    END;

    PROCEDURE NormIsEditable@1100528709() : Boolean;
    BEGIN
      EXIT(("Cost Type" = "Cost Type"::Labor) AND
           ("Amount/Hours" = "Amount/Hours"::Hours) AND
           (Type <> Type::Text) AND
           (Type <> Type::Subtotal));
    END;

    PROCEDURE CheckUnitOfMeasureIsEditable@1100528718();
    BEGIN
      IF NOT UnitOfMeasureIsEditable THEN
        ERROR(Text006, FIELDCAPTION("Unit of Measure"), FIELDCAPTION(Type), Type::Text);
    END;

    PROCEDURE UnitOfMeasureIsEditable@1100528717() : Boolean;
    BEGIN
      EXIT(Type <> Type::Text);
    END;

    PROCEDURE CheckRateCodeIsEditable@1100528720();
    BEGIN
      IF NOT RateCodeIsEditable THEN
        ERROR(Text007, FIELDCAPTION("Rate Code"));
    END;

    PROCEDURE RateCodeIsEditable@1100528719() : Boolean;
    BEGIN
      EXIT(("Cost Type" = "Cost Type"::Labor) AND
           ("Amount/Hours" = "Amount/Hours"::Hours) AND
           (Type <> Type::Text) AND
           (Type <> Type::Subtotal));
    END;

    PROCEDURE CheckRateIsEditable@1100528722();
    BEGIN
      IF NOT RateIsEditable THEN
        ERROR(Text007, FIELDCAPTION(Rate));
    END;

    PROCEDURE RateIsEditable@1100528721() : Boolean;
    BEGIN
      EXIT((Type <> Type::Text) AND (Type <> Type::Subtotal));
    END;

    PROCEDURE CheckPriceIsEditable@1100528724();
    BEGIN
      IF NOT PriceIsEditable THEN
        ERROR(Text007, FIELDCAPTION(Price));
    END;

    PROCEDURE PriceIsEditable@1100528723() : Boolean;
    BEGIN
      EXIT((("Cost Type" <> "Cost Type"::Labor) OR ("Amount/Hours" = "Amount/Hours"::Amount)) AND
           (Type <> Type::Text) AND
           (Type <> Type::Surcharge) AND
           (Type <> Type::Subtotal));
    END;

    PROCEDURE CheckAmountIsEditable@1100528727();
    BEGIN
      IF NOT AmountIsEditable THEN
        ERROR(Text007, FIELDCAPTION(Amount));
    END;

    PROCEDURE AmountIsEditable@1100528726() : Boolean;
    BEGIN
      EXIT(("Cost Type" = "Cost Type"::Labor) AND
           (Norm = 0) AND
           (Quantity = 0) AND
           (Type <> Type::Text) AND
           (Type <> Type::Surcharge) AND
           (Type <> Type::Subtotal));
    END;

    PROCEDURE CheckCostTypeFilterIsEditable@1100528731();
    BEGIN
      IF NOT CostTypeFilterIsEditable THEN
        ERROR(Text007, FIELDCAPTION("Cost Type Filter"));
    END;

    PROCEDURE CostTypeFilterIsEditable@1100528730() : Boolean;
    BEGIN
      EXIT((Type = Type::Surcharge) OR (Type = Type::Subtotal));
    END;

    PROCEDURE CheckCostObjectFltrIsEditable@1100528733();
    BEGIN
      IF NOT CostObjectFltrIsEditable THEN
        ERROR(Text007, FIELDCAPTION("Cost Object Filter"));
    END;

    PROCEDURE CostObjectFltrIsEditable@1100528732() : Boolean;
    BEGIN
      EXIT((Type = Type::Surcharge) OR (Type = Type::Subtotal));
    END;

    PROCEDURE CheckElementFilterIsEditable@1100528735();
    BEGIN
      IF NOT ElementFilterIsEditable THEN
        ERROR(Text007, FIELDCAPTION("Element Filter"));
    END;

    PROCEDURE ElementFilterIsEditable@1100528734() : Boolean;
    BEGIN
      EXIT(Type = Type::Surcharge);
    END;

    PROCEDURE CheckTotalingIsEditable@1100528740();
    BEGIN
      IF NOT TotalingIsEditable THEN
        ERROR(Text007, FIELDCAPTION(Totaling));
    END;

    PROCEDURE TotalingIsEditable@1100528739() : Boolean;
    BEGIN
      EXIT(Type = Type::Subtotal);
    END;

    BEGIN
    END.
  }
}

