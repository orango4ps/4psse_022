OBJECT Table 1900 Cancelled Document
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    Permissions=TableData 1900=rimd;
    CaptionML=[ENU=Cancelled Document;
               NOR=Kansellert dokument;
               SVE=Annullerade dokument];
  }
  FIELDS
  {
    { 1   ;   ;Source ID           ;Integer       ;CaptionML=[ENU=Source ID;
                                                              NOR=Kilde-ID;
                                                              SVE=Ursprungs-ID] }
    { 2   ;   ;Cancelled Doc. No.  ;Code20        ;TableRelation=IF (Source ID=CONST(112)) "Sales Invoice Header".No.
                                                                 ELSE IF (Source ID=CONST(122)) "Purch. Inv. Header".No.
                                                                 ELSE IF (Source ID=CONST(114)) "Sales Cr.Memo Header".No.
                                                                 ELSE IF (Source ID=CONST(124)) "Purch. Cr. Memo Hdr.".No.;
                                                   CaptionML=[ENU=Cancelled Doc. No.;
                                                              NOR=Kansellert dokumentnr.;
                                                              SVE=Annullerat dok.nr] }
    { 3   ;   ;Cancelled By Doc. No.;Code20       ;TableRelation=IF (Source ID=CONST(114)) "Sales Invoice Header".No.
                                                                 ELSE IF (Source ID=CONST(124)) "Purch. Inv. Header".No.
                                                                 ELSE IF (Source ID=CONST(112)) "Sales Cr.Memo Header".No.
                                                                 ELSE IF (Source ID=CONST(122)) "Purch. Cr. Memo Hdr.".No.;
                                                   CaptionML=[ENU=Cancelled By Doc. No.;
                                                              NOR=Kansellert av dokumentnr.;
                                                              SVE=Annullerade per dok.nr] }
  }
  KEYS
  {
    {    ;Source ID,Cancelled Doc. No.            ;Clustered=Yes }
    {    ;Cancelled By Doc. No.                    }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE InsertSalesInvToCrMemoCancelledDocument@1(InvNo@1000 : Code[20];CrMemoNo@1001 : Code[20]);
    BEGIN
      InsertEntry(DATABASE::"Sales Invoice Header",InvNo,CrMemoNo);
    END;

    [External]
    PROCEDURE InsertSalesCrMemoToInvCancelledDocument@2(CrMemoNo@1000 : Code[20];InvNo@1001 : Code[20]);
    BEGIN
      InsertEntry(DATABASE::"Sales Cr.Memo Header",CrMemoNo,InvNo);
      RemoveSalesInvCancelledDocument;
    END;

    [External]
    PROCEDURE InsertPurchInvToCrMemoCancelledDocument@11(InvNo@1001 : Code[20];CrMemoNo@1000 : Code[20]);
    BEGIN
      InsertEntry(DATABASE::"Purch. Inv. Header",InvNo,CrMemoNo);
    END;

    [External]
    PROCEDURE InsertPurchCrMemoToInvCancelledDocument@10(CrMemoNo@1000 : Code[20];InvNo@1001 : Code[20]);
    BEGIN
      InsertEntry(DATABASE::"Purch. Cr. Memo Hdr.",CrMemoNo,InvNo);
      RemovePurchInvCancelledDocument;
    END;

    LOCAL PROCEDURE InsertEntry@6(SourceID@1003 : Integer;CanceledDocNo@1001 : Code[20];CanceledByDocNo@1000 : Code[20]);
    BEGIN
      INIT;
      VALIDATE("Source ID",SourceID);
      VALIDATE("Cancelled Doc. No.",CanceledDocNo);
      VALIDATE("Cancelled By Doc. No.",CanceledByDocNo);
      INSERT(TRUE);
    END;

    LOCAL PROCEDURE RemoveSalesInvCancelledDocument@8();
    BEGIN
      FindSalesCorrectiveCrMemo("Cancelled Doc. No.");
      DELETEALL(TRUE);
    END;

    LOCAL PROCEDURE RemovePurchInvCancelledDocument@14();
    BEGIN
      FindPurchCorrectiveCrMemo("Cancelled Doc. No.");
      DELETEALL(TRUE);
    END;

    [External]
    PROCEDURE FindSalesCancelledInvoice@3(CanceledDocNo@1001 : Code[20]) : Boolean;
    BEGIN
      EXIT(FindWithCancelledDocNo(DATABASE::"Sales Invoice Header",CanceledDocNo));
    END;

    [External]
    PROCEDURE FindSalesCorrectiveInvoice@4(CanceledByDocNo@1000 : Code[20]) : Boolean;
    BEGIN
      EXIT(FindWithCancelledByDocNo(DATABASE::"Sales Cr.Memo Header",CanceledByDocNo));
    END;

    [External]
    PROCEDURE FindPurchCancelledInvoice@18(CanceledDocNo@1001 : Code[20]) : Boolean;
    BEGIN
      EXIT(FindWithCancelledDocNo(DATABASE::"Purch. Inv. Header",CanceledDocNo));
    END;

    [External]
    PROCEDURE FindPurchCorrectiveInvoice@12(CanceledByDocNo@1000 : Code[20]) : Boolean;
    BEGIN
      EXIT(FindWithCancelledByDocNo(DATABASE::"Purch. Cr. Memo Hdr.",CanceledByDocNo));
    END;

    [External]
    PROCEDURE FindSalesCorrectiveCrMemo@7(CanceledByDocNo@1000 : Code[20]) : Boolean;
    BEGIN
      EXIT(FindWithCancelledByDocNo(DATABASE::"Sales Invoice Header",CanceledByDocNo));
    END;

    [External]
    PROCEDURE FindSalesCancelledCrMemo@9(CanceledDocNo@1000 : Code[20]) : Boolean;
    BEGIN
      EXIT(FindWithCancelledDocNo(DATABASE::"Sales Cr.Memo Header",CanceledDocNo));
    END;

    [External]
    PROCEDURE FindPurchCorrectiveCrMemo@17(CanceledByDocNo@1000 : Code[20]) : Boolean;
    BEGIN
      EXIT(FindWithCancelledByDocNo(DATABASE::"Purch. Inv. Header",CanceledByDocNo));
    END;

    [External]
    PROCEDURE FindPurchCancelledCrMemo@15(CanceledDocNo@1000 : Code[20]) : Boolean;
    BEGIN
      EXIT(FindWithCancelledDocNo(DATABASE::"Purch. Cr. Memo Hdr.",CanceledDocNo));
    END;

    LOCAL PROCEDURE FindWithCancelledDocNo@19(SourceID@1001 : Integer;CanceledDocNo@1000 : Code[20]) : Boolean;
    BEGIN
      EXIT(GET(SourceID,CanceledDocNo));
    END;

    LOCAL PROCEDURE FindWithCancelledByDocNo@21(SourceID@1001 : Integer;CanceledByDocNo@1000 : Code[20]) : Boolean;
    BEGIN
      RESET;
      SETRANGE("Source ID",SourceID);
      SETRANGE("Cancelled By Doc. No.",CanceledByDocNo);
      EXIT(FINDFIRST);
    END;

    BEGIN
    END.
  }
}

