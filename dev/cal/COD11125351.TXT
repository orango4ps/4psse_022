OBJECT Codeunit 11125351 Workflow Response Handling 4PS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    EventSubscriberInstance=Static-Automatic;
    Permissions=TableData 36=rm,
                TableData 38=rm,
                TableData 454=m,
                TableData 1511=imd;
    SingleInstance=No;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ResponseAlreadyExistErr@1000 : TextConst 'DEU=Eine Antwort mit der Beschreibung %1 ist bereits vorhanden.;ENU=A response with description %1 already exists.;NLD=Er bestaat al een reactie met beschrijving %1.;NOR=Et svar med beskrivelsen %1 finnes allerede.;SVE=Ett svar med beskrivning %1ˇfinns redan.';
      ResetDocumentOnHoldTxt@1100529400 : TextConst 'DEU=4PS - Beleg auf Warteschleifencode zurÅcksetzen.;ENU=4PS - Reset Document On Hold Code.;NLD="4PS - Herstel document afwachtencode. "';
      SetDocumentOnHoldTxt@1100528200 : TextConst 'DEU=4PS - Beleg in Warteschleife setzen.;ENU=4PS - Set Document On Hold.;NLD=4PS - Zet document op afwachten.';
      RemoveDocumentOnHoldTxt@1100528203 : TextConst 'DEU=4PS - Warteschleifencode Beleg entfernen.;ENU=4PS - Remove  Document On Hold Code.;NLD=4PS - Verwijder document afwachtencode.';
      CreateApprovalRequests4PSTxt@1100528400 : TextConst 'DEU=4PS - Genehmigungsanfrage fÅr den Eintrag unter Nutzung der Zustimmungsregeln erstellen.;ENU=4PS - Create an approval request for the record using consent rules.;NLD=4PS - Maak goedkeuringsaanvraag voor het record met gebruik van de fiatteringscriteria.';
      PostponeApprovalTxt@1100528401 : TextConst 'DEU=4PS - Genehmigungsposten verschieben.;ENU=4PS - Postpone the approval entry.;NLD=4PS - Uitstellen van de goedkeuringspost.';
      ApproveAndDelegateApproval4PSTxt@1100528404 : TextConst 'DEU=4PS - Genehmigungsposten genehmigen und delegieren.;ENU=4PS - Approve and delegate the approval entry.;NLD=4PS - Goedkeuren en delegeren goedkeuringspost.';
      DelegateApproval4PSTxt@1100528403 : TextConst 'DEU=4PS - Genehmigungsposten delegieren.;ENU=4PS - Delegate the approval entry.;NLD=4PS - Delegeer de goedkeuringspost.';
      DelegateApprovalAndSendBack4PSTxt@1100528402 : TextConst 'DEU=4PS - Genehmigung delegieren und nach Genehmigung zurÅcksenden.;ENU=4PS - Delegate the approval and send it back after approval.;NLD=4PS - Delegeer de goedkeuring en stuur terug na goedkeuring.';
      UpdateStatusAfterApproveHourLine4PSTxt@1100528201 : TextConst 'DEU=4PS - Status nach Genehmigung Stundenzeile aktualisieren;ENU=4PS - Update Status After Approve Hour Line;NLD=4PS - Update status na goedkeuren urenregel';
      UpdateStatusAfterRejectHourLine4PSTxt@1100528202 : TextConst 'DEU=4PS - Status nach Ablehnung Stundenzeile aktualisieren;ENU=4PS - Update Status After Reject Hour Line;NLD=4PS - Update status na weigeren urenregel';
      UpdatePurchasePlanPhaseAfterApprovePurchaseOrderTxt@1100528204 : TextConst 'DEU=4PS - Einkaufsplanungsphase nach Genehmigung Einkaufsbeleg aktualisieren.;ENU=4PS - Update purchase plan phase after approve purchase document;NLD=4PS - Update inkoopplanfase na goedkeuring inkoopdocument';
      DCSetupRead@1100529900 : Boolean;
      DocumentCaptureSetup@1100529901 : Record 6085573;
      DelegateOnlyOpenRequestsErr@1100527550 : TextConst 'DEU=Sie kînnen nur offene Genehmigungsanfragen delegieren.;ENU=You can only delegate open approval requests.;NLD=U kunt alleen openstaande goedkeuringsaanvragen delegeren.;SVE=Du kan bara delegera îppna godkÑnnandebegÑranden.';
      NoPermissionToDelegateErr@1100527551 : TextConst 'DEU=Sie haben keine Berechtigung zum Delegieren von einem oder mehreren der ausgewÑhlten Genehmigungsanfragen.;ENU=You do not have permission to delegate one or more of the selected approval requests.;NLD=U hebt geen machtiging om een of meer van de geselecteerde goedkeuringsaanvragen te delegeren.;SVE=Du Ñr inte behîrig att delegera en eller flera av markerade godkÑnnandebegÑranden.';
      NoPermissionToApproveAndDelegateErr@1100527552 : TextConst 'DEU=Sie haben keine Genehmigung um eine oder mehrere der ausgewÑhlten Genehmigungsanfragen zu genehmigen und zu delegieren.;ENU=You do not have permission to approve and delegate one or more of the selected approval requests.;NLD=U hebt geen machtiging om een of meer van de geselecteerde goedkeuringsaanvragen goed te keuren en te delegeren.';

    PROCEDURE CreateResponsesLibrary@1100525002();
    BEGIN
      AddResponseToLibrary(SetDocumentOnHoldCode,0,SetDocumentOnHoldTxt,'GROUP 0');
      AddResponseToLibrary(ResetDocumentOnHoldCode,0,ResetDocumentOnHoldTxt,'GROUP 0');
    END;

    [EventSubscriber(Codeunit,1521,OnAddWorkflowResponsesToLibrary,"",Skip)]
    PROCEDURE OnCreateResponsesLibrary@25();
    BEGIN
      AddResponseToLibrary(SetDocumentOnHoldCode,0,SetDocumentOnHoldTxt,'GROUP 0');
      AddResponseToLibrary(ResetDocumentOnHoldCode,0,ResetDocumentOnHoldTxt,'GROUP 0');
      AddResponseToLibrary(RemoveDocumentOnHoldCode,0,RemoveDocumentOnHoldTxt,'GROUP 0');
      AddResponseToLibrary(CreateApprovalRequest4PSCode,0,CreateApprovalRequests4PSTxt,'GROUP 4PS 0');
      AddResponseToLibrary(PostponeApprovalRequestCode,0,PostponeApprovalTxt,'GROUP 0');

      AddResponseToLibrary(ApproveAndDelegateRequest4PSCode,0,ApproveAndDelegateApproval4PSTxt,'GROUP 0');
      AddResponseToLibrary(DelegateAndSendBackRequest4PSCode,0,DelegateApprovalAndSendBack4PSTxt,'GROUP 0');
      AddResponseToLibrary(DelegateWithoutApprovalRequest4PSCode,0,DelegateApproval4PSTxt,'GROUP 0');
      AddResponseToLibrary(UpdateStatusAfterApproveHourLine4PSCode,0,UpdateStatusAfterApproveHourLine4PSTxt,'GROUP 0');
      AddResponseToLibrary(UpdateStatusAfterRejectHourLine4PSCode,0,UpdateStatusAfterRejectHourLine4PSTxt,'GROUP 0');
      AddResponseToLibrary(UpdatePurchasePlanPhaseAfterApprovePurchaseCode,0,UpdatePurchasePlanPhaseAfterApprovePurchaseOrderTxt,'GROUP 0');
    END;

    LOCAL PROCEDURE AddResponsePredecessors@33(ResponseFunctionName@1002 : Code[128]);
    VAR
      WorkflowEventHandling4PS@1001 : Codeunit 11125350;
      WorkflowEventHandling@1100528200 : Codeunit 1520;
    BEGIN
      CASE ResponseFunctionName OF
        PostponeApprovalRequestCode:
          AddResponsePredecessor(PostponeApprovalRequestCode,WorkflowEventHandling.RunWorkflowOnRejectApprovalRequestCode);
        ApproveAndDelegateRequest4PSCode:
          AddResponsePredecessor(ApproveAndDelegateRequest4PSCode,WorkflowEventHandling4PS.RunWorkflowOn4PSApproveAndDelegateRequestCode);
        DelegateAndSendBackRequest4PSCode:
          AddResponsePredecessor(DelegateAndSendBackRequest4PSCode,WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateAndSendBackRequestCode);
        DelegateWithoutApprovalRequest4PSCode:
          AddResponsePredecessor(DelegateWithoutApprovalRequest4PSCode,WorkflowEventHandling4PS.RunWorkflowOn4PSDelegateWithoutApprovalRequestCode);
        RemoveDocumentOnHoldCode:
          BEGIN
            AddResponsePredecessor(RemoveDocumentOnHoldCode,WorkflowEventHandling4PS.RunWorkflowOnCancelPostedPurchaseInvoiceRequestCode);
            AddResponsePredecessor(RemoveDocumentOnHoldCode,WorkflowEventHandling4PS.RunWorkflowOnCancelPostedPurchaseCreditMemoRequestCode);
          END;
        UpdatePurchasePlanPhaseAfterApprovePurchaseCode:
          AddResponsePredecessor(UpdatePurchasePlanPhaseAfterApprovePurchaseCode,WorkflowEventHandling.RunWorkflowOnApproveApprovalRequestCode);
      END;
    END;

    [EventSubscriber(Codeunit,1521,OnAddWorkflowResponsePredecessorsToLibrary,"",Skip)]
    LOCAL PROCEDURE OnAddResponsePredecessors@21(ResponseFunctionName@1000 : Code[128]);
    VAR
      DCWorkflowEventHandling@1002 : Codeunit 6085785;
      WorkflowResponseHandling@1001 : Codeunit 1521;
      WorkflowEventHandling4PS@1100529600 : Codeunit 11125350;
    BEGIN
      // In order to enable standard responses to succes 4PS events
      CASE ResponseFunctionName OF
        WorkflowResponseHandling.ReleaseDocumentCode:
          BEGIN
            IF IsDocumentCaptureActive THEN
              AddResponsePredecessor(WorkflowResponseHandling.ReleaseDocumentCode, DCWorkflowEventHandling.RunWorkflowOnAfterApproveAdvancedAppRequestCode)
          END;
        WorkflowResponseHandling.CreateApprovalRequestsCode:
          AddResponsePredecessor(WorkflowResponseHandling.CreateApprovalRequestsCode, WorkflowEventHandling4PS.RunWorkflowOnVendorBankAccountChangedCode);
        WorkflowResponseHandling.SendApprovalRequestForApprovalCode:
          AddResponsePredecessor(WorkflowResponseHandling.SendApprovalRequestForApprovalCode, WorkflowEventHandling4PS.RunWorkflowOnVendorBankAccountChangedCode);
        WorkflowResponseHandling.RevertValueForFieldCode:
          AddResponsePredecessor(WorkflowResponseHandling.RevertValueForFieldCode, WorkflowEventHandling4PS.RunWorkflowOnVendorBankAccountChangedCode);
      END;
    END;

    [EventSubscriber(Codeunit,1521,OnExecuteWorkflowResponse,"",Skip)]
    PROCEDURE ExecuteResponse@2(VAR ResponseExecuted@1000 : Boolean;Variant@1001 : Variant;xVariant@1004 : Variant;ResponseWorkflowStepInstance@1005 : Record 1504);
    VAR
      WorkflowResponse@1002 : Record 1521;
      Handled@1003 : Boolean;
    BEGIN
      Handled := TRUE;

      OnBeforeExecuteResponseStepInstance(ResponseWorkflowStepInstance);

      IF WorkflowResponse.GET(ResponseWorkflowStepInstance."Function Name") THEN
        CASE WorkflowResponse."Function Name" OF
          OnAfterApproveApprovalRequestCode: //THIS RESPONSE IS ALS HANDLED IN 6085786 DC Workflow Response Handling, for Purchase Header
            OnAfterApproveApprovalRequest(Variant,ResponseWorkflowStepInstance);
          SetDocumentOnHoldCode:
            SetDocumentOnHold(Variant,ResponseWorkflowStepInstance);
          ResetDocumentOnHoldCode:
            ResetDocumentOnHold(Variant,ResponseWorkflowStepInstance);
          RemoveDocumentOnHoldCode:
            RemoveDocumentOnHold(Variant,ResponseWorkflowStepInstance);
          CreateApprovalRequest4PSCode:  //this response is NOT handled in DC, only 4PS-Construct
            CreateApprovalRequest4PS(Variant,ResponseWorkflowStepInstance);
          PostponeApprovalRequestCode:
            PostponeApprovalRequest(Variant,ResponseWorkflowStepInstance);
          ApproveAndDelegateRequest4PSCode:
            ApproveAndDelegateRequest4PS(Variant,ResponseWorkflowStepInstance);
          DelegateWithoutApprovalRequest4PSCode:
            DelegateWithoutApprovalRequest4PS(Variant,ResponseWorkflowStepInstance);
          DelegateAndSendBackRequest4PSCode:
            DelegateAndSendBackRequest4PS(Variant,ResponseWorkflowStepInstance);
          UpdateStatusAfterApproveHourLine4PSCode:
            UpdateStatusAfterApproveHourLine4PS(Variant,ResponseWorkflowStepInstance);
          UpdateStatusAfterRejectHourLine4PSCode:
            UpdateStatusAfterRejectHourLine4PS(Variant,ResponseWorkflowStepInstance);
          UpdatePurchasePlanPhaseAfterApprovePurchaseCode:
            UpdatePurchasePlanPhaseAfterApprovePurchase(Variant,ResponseWorkflowStepInstance);
         ELSE
            Handled := FALSE;
        END;

      IF Handled THEN
        ResponseExecuted := TRUE;
    END;

    PROCEDURE OnAfterApproveApprovalRequestCode@16() : Text;
    BEGIN
      EXIT(UPPERCASE('OnAfterApproveApprovalRequest'));
    END;

    LOCAL PROCEDURE OnAfterApproveApprovalRequest@17(Variant@1003 : Variant;WorkflowStepInstance@1002 : Record 1504);
    VAR
      ApprovalEntry@1004 : Record 454;
      ApprovalManagement4PSConstr@1100528200 : Codeunit 11125349;
    BEGIN
      GetApprovalEntryFromVariant(Variant,ApprovalEntry);
      ApprovalManagement4PSConstr.OnAfterApproveApprovalRequest(WorkflowStepInstance, ApprovalEntry);
    END;

    PROCEDURE SetDocumentOnHoldCode@1100528201() : Code[128];
    BEGIN
      EXIT(UPPERCASE('SetDocumentOnHold'));
    END;

    LOCAL PROCEDURE SetDocumentOnHold@1100528200(Variant@1001 : Variant;WorkflowStepInstance@1000 : Record 1504);
    VAR
      ApprovalManagement4PSConstr@1100528200 : Codeunit 11125349;
    BEGIN
      ApprovalManagement4PSConstr.FinishApprovals(Variant);
    END;

    PROCEDURE ResetDocumentOnHoldCode@1100525001() : Code[128];
    BEGIN
      EXIT(UPPERCASE('ResetDocumentOnHold'));
    END;

    LOCAL PROCEDURE ResetDocumentOnHold@1100525000(Variant@1001 : Variant;WorkflowStepInstance@1000 : Record 1504);
    VAR
      ApprovalManagement4PSConstr@1100528200 : Codeunit 11125349;
    BEGIN
      ApprovalManagement4PSConstr.CheckResetOnHold(Variant);
    END;

    PROCEDURE RemoveDocumentOnHoldCode@1100528207() : Code[128];
    BEGIN
      EXIT(UPPERCASE('RemoveDocumentOnHold'));
    END;

    LOCAL PROCEDURE RemoveDocumentOnHold@1100528206(Variant@1001 : Variant;WorkflowStepInstance@1000 : Record 1504);
    VAR
      ApprovalManagement4PSConstr@1100528200 : Codeunit 11125349;
    BEGIN
      ApprovalManagement4PSConstr.RemoveOnHold(Variant);
    END;

    PROCEDURE AddResponseToLibrary@26(FunctionName@1002 : Code[128];TableID@1001 : Integer;Description@1000 : Text[250];ResponseOptionGroup@1004 : Code[20]);
    VAR
      WorkflowResponse@1003 : Record 1521;
    BEGIN
      IF WorkflowResponse.GET(FunctionName) THEN
        EXIT;

      WorkflowResponse.SETRANGE(Description,Description);
      IF WorkflowResponse.FINDFIRST THEN
        ERROR(ResponseAlreadyExistErr,Description);

      WorkflowResponse.INIT;
      WorkflowResponse."Function Name" := FunctionName;
      WorkflowResponse."Table ID" := TableID;
      WorkflowResponse.Description := Description;
      WorkflowResponse."Response Option Group" := ResponseOptionGroup;
      WorkflowResponse.INSERT;

      AddResponsePredecessors(WorkflowResponse."Function Name");
    END;

    PROCEDURE AddResponsePredecessor@61(FunctionName@1000 : Code[128];PredecessorFunctionName@1001 : Code[128]);
    VAR
      WFEventResponseCombination@1002 : Record 1509;
    BEGIN
      WFEventResponseCombination.INIT;
      WFEventResponseCombination.Type := WFEventResponseCombination.Type::Response;
      WFEventResponseCombination."Function Name" := FunctionName;
      WFEventResponseCombination."Predecessor Type" := WFEventResponseCombination."Predecessor Type"::"Event";
      WFEventResponseCombination."Predecessor Function Name" := PredecessorFunctionName;
      IF WFEventResponseCombination.INSERT THEN;
    END;

    [Integration]
    PROCEDURE OnBeforeExecuteResponseStepInstance@19(VAR NewWorkflowStepInstance@1000 : Record 1504);
    BEGIN
    END;

    LOCAL PROCEDURE GetApprovalEntryFromVariant@23(VAR Variant@1000 : Variant;VAR ApprovalEntry@1001 : Record 454);
    VAR
      RecRef@1002 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Variant);
      ApprovalEntry.SETPOSITION(RecRef.GETPOSITION);
      ApprovalEntry.FIND;
    END;

    LOCAL PROCEDURE GetPurchaseHeaderFromVariant@20(VAR Variant@1001 : Variant;VAR PurchaseHeader@1000 : Record 38);
    VAR
      RecRef@1002 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Variant);
      PurchaseHeader.SETPOSITION(RecRef.GETPOSITION);
      PurchaseHeader.FIND;
    END;

    PROCEDURE CreateApprovalRequest4PSCode@1100528400() : Code[128];
    BEGIN
      EXIT(UPPERCASE('CreateApprovalRequests4PS'));
    END;

    LOCAL PROCEDURE CreateApprovalRequest4PS@1100528401(Variant@1001 : Variant;WorkflowStepInstance@1000 : Record 1504);
    VAR
      ApprovalManagement4PSConstr@1100528401 : Codeunit 11125349;
    BEGIN
      ApprovalManagement4PSConstr.CreateApprovalRequests4PS_ConsentRules(Variant, WorkflowStepInstance);
    END;

    PROCEDURE PostponeApprovalRequestCode@1100528403() : Code[128];
    BEGIN
      EXIT(UPPERCASE('PostponeApprovalRequest'));
    END;

    LOCAL PROCEDURE PostponeApprovalRequest@1100528402(Variant@1001 : Variant;WorkflowStepInstance@1000 : Record 1504);
    VAR
      ApprovalManagement4PSConstr@1100528401 : Codeunit 11125349;
      ApprovalEntry@1100528400 : Record 454;
    BEGIN
      GetApprovalEntryFromVariant(Variant,ApprovalEntry);
      ApprovalManagement4PSConstr.AddApproverAfter(ApprovalEntry);
    END;

    PROCEDURE ApproveAndDelegateRequest4PSCode@11() : Text;
    BEGIN
      EXIT(UPPERCASE('ApproveAndDelegateRequest4PS'));
    END;

    LOCAL PROCEDURE ApproveAndDelegateRequest4PS@10(VAR Variant@1001 : Variant;VAR WorkflowStepInstance@1000 : Record 1504);
    VAR
      ApprovalEntry@1004 : Record 454;
      ApprovalManagement4PSConstr@1003 : Codeunit 11125349;
    BEGIN
      GetApprovalEntryFromVariant(Variant,ApprovalEntry);
      ApprovalManagement4PSConstr.ApproveAndDelegate(WorkflowStepInstance, ApprovalEntry,ApprovalEntry."Delegated To User ID");
    END;

    PROCEDURE DelegateWithoutApprovalRequest4PSCode@15() : Text;
    BEGIN
      EXIT(UPPERCASE('DelegateWithoutApprovalRequest4PS'));
    END;

    LOCAL PROCEDURE DelegateWithoutApprovalRequest4PS@13(VAR Variant@1001 : Variant;WorkflowStepInstance@1000 : Record 1504);
    VAR
      ApprovalEntry@1004 : Record 454;
      ApprovalManagement4PSConstr@1003 : Codeunit 11125349;
    BEGIN
      GetApprovalEntryFromVariant(Variant,ApprovalEntry);
      ApprovalManagement4PSConstr.DelegateWithoutApproval(WorkflowStepInstance, ApprovalEntry,ApprovalEntry."Delegated To User ID");
    END;

    PROCEDURE DelegateAndSendBackRequest4PSCode@18() : Text;
    BEGIN
      EXIT(UPPERCASE('DelegateAndSendBackRequest4PS'));
    END;

    LOCAL PROCEDURE DelegateAndSendBackRequest4PS@14(Variant@1001 : Variant;WorkflowStepInstance@1000 : Record 1504);
    VAR
      ApprovalEntry@1004 : Record 454;
      ApprovalManagement4PSConstr@1003 : Codeunit 11125349;
    BEGIN
      GetApprovalEntryFromVariant(Variant,ApprovalEntry);
      ApprovalManagement4PSConstr.DelegateAndSendBack(WorkflowStepInstance, ApprovalEntry,ApprovalEntry."Delegated To User ID");
    END;

    PROCEDURE UpdateStatusAfterApproveHourLine4PSCode@1100528203() : Text;
    BEGIN
      EXIT(UPPERCASE('UpdateStatusAfterApproveHourLine4PS'));
    END;

    LOCAL PROCEDURE UpdateStatusAfterApproveHourLine4PS@1100528202(Variant@1001 : Variant;WorkflowStepInstance@1000 : Record 1504);
    VAR
      ApprovalEntry@1004 : Record 454;
      ApprovalManagement4PSConstr@1003 : Codeunit 11125349;
    BEGIN
      GetApprovalEntryFromVariant(Variant,ApprovalEntry);
      ApprovalManagement4PSConstr.UpdateStatusAfterApproveHourLine4PS(WorkflowStepInstance, ApprovalEntry);
    END;

    PROCEDURE UpdateStatusAfterRejectHourLine4PSCode@1100528205() : Text;
    BEGIN
      EXIT(UPPERCASE('UpdateStatusAfterRejectHourLine4PS'));
    END;

    LOCAL PROCEDURE UpdateStatusAfterRejectHourLine4PS@1100528204(Variant@1001 : Variant;WorkflowStepInstance@1000 : Record 1504);
    VAR
      ApprovalEntry@1004 : Record 454;
      ApprovalManagement4PSConstr@1003 : Codeunit 11125349;
    BEGIN
      GetApprovalEntryFromVariant(Variant,ApprovalEntry);
      ApprovalManagement4PSConstr.UpdateStatusAfterRejectHourLine4PS(WorkflowStepInstance, ApprovalEntry);
    END;

    PROCEDURE UpdatePurchasePlanPhaseAfterApprovePurchaseCode@1100528208() : Text;
    BEGIN
      EXIT(UPPERCASE('UpdatePurchasePlanPhaseAfterApprovePurchase'));
    END;

    LOCAL PROCEDURE UpdatePurchasePlanPhaseAfterApprovePurchase@1100528209(Variant@1100528201 : Variant;WorkflowStepInstance@1100528200 : Record 1504);
    VAR
      ApprovalEntry@1100528204 : Record 454;
      ApprovalManagement4PSConstr@1100528203 : Codeunit 11125349;
      RecRef@1100528202 : RecordRef;
      RecordID@1100528205 : RecordID;
    BEGIN
      RecordID := WorkflowStepInstance."Record ID";
      RecRef := RecordID.GETRECORD();
      RecRef.SETTABLE(ApprovalEntry);
      IF ApprovalEntry.FIND('=') THEN
        ApprovalManagement4PSConstr.UpdatePurchasePlanPhaseAfterApprovePurchase(WorkflowStepInstance, ApprovalEntry);
    END;

    PROCEDURE IsDocumentCaptureActive@1100529901() : Boolean;
    VAR
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      IF NOT DCSetupRead THEN BEGIN
        IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentCaptureSetup) THEN
          EXIT(FALSE);
        IF DocumentCaptureSetup.GET THEN;
        DCSetupRead := TRUE;
      END;
      EXIT(DocumentCaptureSetup."Document Nos." <> '');
    END;

    PROCEDURE DelegateSelectedApprovalRequestForSecondApprovalLine@1100525003(VAR ApprovalEntry@1100527550 : Record 454;CheckCurrentUser@1100527551 : Boolean;Selection@1100527552 : 'Cancel,ApproveAndDelegate,DelegateWithoutApproval,DelegateAndSendBack';NewUserId@1100527553 : Code[50]);
    VAR
      WorkflowStepInstance@1100527554 : Record 1504;
      RecordID@1100527555 : RecordID;
      ApprovalsMgmt@1100527556 : Codeunit 1535;
      ApprovalManagement4PSConstr@1100527557 : Codeunit 11125349;
    BEGIN
      IF ApprovalEntry.Status <> ApprovalEntry.Status::Open THEN
        ERROR(DelegateOnlyOpenRequestsErr);

      IF CheckCurrentUser AND (NOT ApprovalEntry.CanCurrentUserEdit) THEN
        ERROR(NoPermissionToDelegateErr);

      CASE Selection OF
        Selection::ApproveAndDelegate:
          BEGIN
            RecordID := ApprovalEntry."Record ID to Approve";
            IF ApprovalEntry."Approver ID" <> USERID THEN
              IF NOT ApprovalsMgmt.CheckUserAsSuperApprover(ApprovalEntry."Document Type") THEN
                IF NOT ApprovalsMgmt.FindOpenApprovalEntryForCurrUser(ApprovalEntry, RecordID) THEN
                  ERROR(NoPermissionToApproveAndDelegateErr);
            IF NewUserId = ApprovalEntry."Approver ID" THEN
              ERROR('');
            ApprovalEntry."Delegated To User ID" := NewUserId;
            ApprovalEntry.MODIFY;
            ApprovalsMgmt.ApproveSelectedApprovalRequestInGroup(ApprovalEntry);
            ApprovalManagement4PSConstr.ApproveAndDelegate(WorkflowStepInstance, ApprovalEntry, ApprovalEntry."Delegated To User ID");
          END;
        Selection::DelegateAndSendBack:
          BEGIN
            IF NewUserId = ApprovalEntry."Approver ID" THEN
              ERROR('');
            ApprovalEntry."Delegated To User ID" := NewUserId;
            ApprovalEntry.MODIFY;
            ApprovalManagement4PSConstr.DelegateAndSendBack(WorkflowStepInstance, ApprovalEntry, ApprovalEntry."Delegated To User ID");
          END;
        Selection::DelegateWithoutApproval:
          BEGIN
            IF NewUserId = ApprovalEntry."Approver ID" THEN
              ERROR('');
            ApprovalEntry."Delegated To User ID" := ApprovalEntry."Approver ID";
            ApprovalEntry."Approver ID" := NewUserId;
            ApprovalEntry.MODIFY;
            ApprovalManagement4PSConstr.DelegateWithoutApproval(WorkflowStepInstance, ApprovalEntry, ApprovalEntry."Delegated To User ID");
            END;
      END;
    END;

    BEGIN
    END.
  }
}

