OBJECT Codeunit 11020506 IMOS Materials Docum. XML Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11020534;
    OnRun=VAR
            InboundDocument@1000000002 : Record 11020538;
          BEGIN
            CASE Action OF
              Action::"Receive Document":
                BEGIN
                   GetInboundDocument(InboundDocument);  //table function
                   ReceiveDocument(InboundDocument);
                 END;
            END;
          END;

  }
  CODE
  {
    VAR
      XMLDOMDocument@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      Text002@1000000010 : TextConst 'DEU=Es ist kein XML verfÅgbar fÅr eingehende Belegnr. %1;ENU=No XML is available for Inbound Document No. %1;NLD=Er is geen XML beschikbaar voor inkomend documentnr. %1;NOR=Det finnes ingen XML tilgjengelig for inkommende dokumentnr %1;SVE=Det finns ingen XML tillgÑnglig fîr ankommande dokumentnr %1';
      XMLDOMManagement4PS@1100525000 : Codeunit 11020220;
      XMLFormat4PS@1100525001 : Codeunit 11020221;

    PROCEDURE ReceiveDocument@1000000011(InboundDocument@1000000000 : Record 11020538);
    BEGIN
      IF NOT InboundDocument.GetInboundXMLDOM(XMLDOMDocument) THEN
        ERROR(Text002);

      ReceiveXML(InboundDocument);
    END;

    PROCEDURE ReceiveXML@1000000013(InboundDocument@1000000012 : Record 11020538);
    VAR
      InboundItemsRec@1000000000 : Record 11020541;
      DocumentNode@1000000002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      UsedMaterialNodeList@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      UsedMaterialNode@1000000003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      CustomDataNode@1000000004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      wbnr@1000000005 : Text[30];
      X@1000000006 : Text[30];
      I@1100525000 : Integer;
      Tellertje@1100525001 : Integer;
      tekst@1100525003 : Text;
    BEGIN
      DocumentNode := XMLDOMDocument.DocumentElement;
      tekst := DocumentNode.Name;

      WITH InboundItemsRec DO BEGIN
        LOCKTABLE;
        IF FIND('+') THEN;

        XMLDOMManagement4PS.FindNodes(DocumentNode,'usedmaterial',UsedMaterialNodeList);
        Tellertje := UsedMaterialNodeList.Count;


        IF NOT ISNULL(UsedMaterialNodeList) THEN BEGIN
          FOR I := 0 TO (UsedMaterialNodeList.Count - 1) DO BEGIN
            UsedMaterialNode := UsedMaterialNodeList.Item(I);
            INIT;
            "Entry No." += 1;
            XMLDOMManagement4PS.FindNode(UsedMaterialNode,'customdata',CustomDataNode);
            "Project No." := XMLDOMManagement4PS.GetAttributeValue(CustomDataNode,'werkorder');
            "Job Notice No." := XMLDOMManagement4PS.GetAttributeValue(CustomDataNode,'erp_serviceorder');
            "Job Notice No." := FORMAT(COPYSTR("Job Notice No.",1,9));  //jth IMOS levert dit fout aan,.
            Comment := XMLDOMManagement4PS.GetAttributeValue(CustomDataNode,'opmerking');
            Engineer := XMLDOMManagement4PS.GetAttributeValue (CustomDataNode,'erp_engineer_id');
            wbnr := XMLDOMManagement4PS.GetAttributeValue(CustomDataNode,'erp_activiteit');
            IF wbnr <> '' THEN BEGIN
            X := FORMAT(COPYSTR(wbnr,10));
            EVALUATE("Job Notice Line No.",X);
            END;
            "Item No." := XMLDOMManagement4PS.GetAttributeValue(CustomDataNode,'erp_article_code');
            Quantity := XMLFormat4PS.FormatXMLDecimal(XMLDOMManagement4PS.GetAttributeValue(UsedMaterialNode,'amount'));
            INSERT;
          END;
        END;
      END;
    END;

    BEGIN
    END.
  }
}

