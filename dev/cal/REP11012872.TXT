OBJECT Report 11012872 Create Replacement Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Ersatzzeilen erstellen;
               ENU=Create Replacement Lines;
               NLD=Vervangingsregels aanmaken;
               NOR=Opprette erstatningsrader;
               SVE=Skapa ers„ttningsrader];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  ObjectReplacement.GET(ReplacementNo);
                END;

  }
  DATASET
  {
    { 1295;    ;DataItem;                    ;
               DataItemTable=Table11012801;
               ReqFilterFields=Customer No.,Address,Post Code,City,Post Code Group }

    { 5924;1   ;DataItem;                    ;
               DataItemTable=Table11071691;
               DataItemTableView=SORTING(Service Location No.)
                                 WHERE(Replace from=FILTER(<>''),
                                       Replace with Standard Object=FILTER(<>''),
                                       Standard Object No.=FILTER(<>''),
                                       Replaced by=CONST());
               OnAfterGetRecord=BEGIN
                                  CheckAndInsert("Service-Object");
                                END;

               ReqFilterFields=No.,Standard Object No.,Brand Description,Type Description,Model Description,Replace from,Replace with Standard Object;
               DataItemLink=Service Location No.=FIELD(No.) }

    { 3784;    ;DataItem;                    ;
               DataItemTable=Table11071819;
               DataItemTableView=SORTING(Code);
               ReqFilterFields=Customer No.,Address,Post Code,City }

    { 1416;1   ;DataItem;                    ;
               DataItemTable=Table11071820;
               DataItemTableView=SORTING(Building Code,Object No.);
               DataItemLink=Building Code=FIELD(Code) }

    { 6529;2   ;DataItem;ServiceObject2      ;
               DataItemTable=Table11071691;
               DataItemTableView=SORTING(No.)
                                 WHERE(Replace from=FILTER(<>''),
                                       Replace with Standard Object=FILTER(<>''),
                                       Standard Object No.=FILTER(<>''),
                                       Replaced by=CONST());
               OnPreDataItem=BEGIN
                               COPY("Service-Object");
                               FILTERGROUP(4);
                               SETRANGE("Service Location No.");
                               FILTERGROUP(0);
                               //IF FINDFIRST THEN;
                             END;

               OnAfterGetRecord=BEGIN
                                  CheckAndInsert(ServiceObject2);
                                END;

               DataItemLink=No.=FIELD(Object No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ReplacementNo@1100526200 : Code[20];
      MaintenanceManagementCU@1100526202 : Codeunit 11012829;
      ObjectReplacement@1100526201 : Record 11071697;

    PROCEDURE SetDefaults@1100526200(IReplacementNo@1100526200 : Code[20]);
    BEGIN
      ReplacementNo := IReplacementNo;
    END;

    PROCEDURE CheckAndInsert@1100526203(IServiceObject@1100528600 : Record 11071691);
    VAR
      ReplacementLine@1100526200 : Record 11071710;
      ContractNo@1100526201 : Code[20];
      ServiceContract@1100526203 : Record 11012812;
    BEGIN
      IF ReplacementLine.GET(ReplacementNo, IServiceObject."No.") THEN
        EXIT;
      ContractNo := MaintenanceManagementCU.GetActualContractForObject(IServiceObject."No.", TODAY);
      IF ServiceContract.GET(ContractNo) THEN BEGIN
        IF (ServiceContract.Status IN [ServiceContract.Status::Order, ServiceContract.Status::"Invoicing Allowed"]) AND
           NOT ServiceContract.Blocked
        THEN
          InsertRecord(IServiceObject, ContractNo);
      END;
    END;

    PROCEDURE InsertRecord@1100526208(IServiceObject@1100528600 : Record 11071691;IContractNo@1100526201 : Code[20]);
    VAR
      ReplacementLine@1100526200 : Record 11071710;
      NoOfActualContracts@1100526202 : Integer;
    BEGIN
      NoOfActualContracts := MaintenanceManagementCU.GetNoOfActualContractsForObj(IServiceObject."No.", TODAY, IContractNo);
      ReplacementLine.VALIDATE("Replacement No.", ReplacementNo);
      ReplacementLine.VALIDATE("Object No.", IServiceObject."No.");
      IF NoOfActualContracts = 1 THEN
        ReplacementLine.VALIDATE("Service Contract No.", IContractNo);
      ReplacementLine.VALIDATE("Replace with Std. Object No.", IServiceObject."Replace with Standard Object");
      ReplacementLine.VALIDATE("Replacement Date", ObjectReplacement."Execute before");
      ReplacementLine.INSERT(TRUE);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

