OBJECT Table 11072022 Consolidated Try-out Quote
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF Code = '' THEN BEGIN
                 ContMgtSetup.GET;
                 ContMgtSetup.TESTFIELD(ContMgtSetup."Try-out Quote Nos.");
                 NoSeriesMgt.InitSeries(ContMgtSetup."Try-out Quote Nos.",xRec."No. Series",0D,Code,"No. Series");
               END;
               "Creation Date" := TODAY;
               "Inserted By" := USERID;

               //**4PS Generated Code. Do Not Change.sn05
               DPA_OnInsert;
               //**4PS Generated Code.en05
             END;

    OnModify=BEGIN
               FillModificationData;
             END;

    OnDelete=VAR
               CommLineRec@1210190001 : Record 97;
               TryFeatRec@1210190003 : Record 11012753;
               TrySuccRec@1210190000 : Record 11012761;
               ActRec@1210190002 : Record 5080;
               VersRec@1210190004 : Record 11012763;
               CompRec@1210190005 : Record 11012762;
               lvDocRelRec@1210190006 : Record 11012407;
             BEGIN
               TryFeatRec.SETRANGE("Relation Type",TryFeatRec."Relation Type"::"Try-out Quote");
               TryFeatRec.SETRANGE(Code,Code);
               TryFeatRec.DELETEALL;

               TrySuccRec.SETRANGE("Try-out Quote",Code);
               TrySuccRec.DELETEALL(TRUE);

               CompRec.SETRANGE("Try-out Quote", Code);
               CompRec.DELETEALL(TRUE);

               VersRec.SETRANGE("Try-out Quote", Code);
               VersRec.DELETEALL(TRUE);

               ActRec.SETRANGE("Try-out Quote No.",Code);
               ActRec.DELETEALL(TRUE);

               CommLineRec.SETRANGE("Table Name",CommLineRec."Table Name"::"Try-out Quote");
               CommLineRec.SETRANGE("No.",Code);
               CommLineRec.DELETEALL;

               lvDocRelRec.SETRANGE("Document Type",lvDocRelRec."Document Type"::"Try-out Quote");
               lvDocRelRec.SETRANGE("No.",Code);
               lvDocRelRec.DELETEALL;
             END;

    CaptionML=[ENU=Consolidated Try-out Quote;
               NOR=Konsolidert tilbudsforesp›rsel;
               SVE=Konsoliderad anbudsf”rfr†gan];
    LookupPageID=Page11071837;
    DrillDownPageID=Page11071837;
  }
  FIELDS
  {
    { 5   ;   ;Company             ;Text50        ;CaptionML=[ENU=Company;
                                                              NOR=Selskap;
                                                              SVE=F”retag] }
    { 10  ;   ;Code                ;Code20        ;OnValidate=BEGIN
                                                                IF Code <> xRec.Code THEN BEGIN
                                                                  ContMgtSetup.GET;
                                                                  NoSeriesMgt.TestManual(ContMgtSetup."Try-out Quote Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod] }
    { 20  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 25  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 30  ;   ;Address             ;Text100       ;OnValidate=VAR
                                                                lDummy@1210190000 : Text[30];
                                                              BEGIN
                                                              END;

                                                   CaptionML=[ENU=Address;
                                                              NOR=Adresse;
                                                              SVE=Adress];
                                                   Editable=Yes }
    { 40  ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              NOR=Adresse 2;
                                                              SVE=Adress 2];
                                                   Editable=Yes }
    { 50  ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                Postcode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              NOR=Poststed;
                                                              SVE=Ort];
                                                   Editable=Yes }
    { 60  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              NOR=Delstat;
                                                              SVE=Delstat];
                                                   Editable=Yes }
    { 65  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              NOR=Lands-/regionkode;
                                                              SVE=Lands-/regionkod] }
    { 70  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=VAR
                                                                PostCode@11012000 : Record 225;
                                                              BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              NOR=Postnr;
                                                              SVE=Postnr];
                                                   Editable=Yes }
    { 75  ;   ;Territory Code      ;Code10        ;TableRelation=Territory;
                                                   CaptionML=[ENU=Territory Code;
                                                              NOR=Distriktskode;
                                                              SVE=Distriktskod] }
    { 80  ;   ;Salesperson Code    ;Code20        ;TableRelation=IF (No. Related Sales Persons=FILTER(1..)) "Salesperson by Contact"."Salesperson Code" WHERE (Contact No.=FIELD(Contact No.))
                                                                 ELSE IF (No. Related Sales Persons=FILTER(0)) Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              NOR=Selgerkode;
                                                              SVE=S„ljarkod] }
    { 90  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Try-out Quote),
                                                                                           No.=FIELD(Code)));
                                                   CaptionML=[ENU=Comment;
                                                              NOR=Merknad;
                                                              SVE=Kommentar];
                                                   Editable=No }
    { 100 ;   ;Creation Date       ;Date          ;CaptionML=[ENU=Creation Date;
                                                              NOR=Opprettet den;
                                                              SVE=Uppl„ggningsdatum] }
    { 110 ;   ;Expected Starting Date;Date        ;CaptionML=[ENU=Expected Starting Date;
                                                              NOR=Forventet startdato;
                                                              SVE=F”rv„ntat startdatum] }
    { 120 ;   ;Expected End Date   ;Date          ;CaptionML=[ENU=Expected End Date;
                                                              NOR=Forventet Sluttdato;
                                                              SVE=F”rv„ntat slutdatum] }
    { 130 ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Global dimensjon 1 - kode;
                                                              SVE=Global dimension 1 kod];
                                                   CaptionClass='1,1,1' }
    { 140 ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              NOR=Nr.serie;
                                                              SVE=Nr-serie];
                                                   Editable=No }
    { 150 ;   ;Send Date           ;Date          ;CaptionML=[ENU=Send Date;
                                                              NOR=Send dato;
                                                              SVE=Skicka datum] }
    { 160 ;   ;Status              ;Code20        ;TableRelation="Try-out Status".Code WHERE (Type=CONST(Try-out Quote));
                                                   OnValidate=BEGIN
                                                                IF (Status <> '') AND (Status <> xRec.Status) THEN
                                                                  "Status changed on" := TODAY;
                                                              END;

                                                   CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status] }
    { 170 ;   ;Offered Amount      ;Decimal       ;CaptionML=[ENU=Offered Amount;
                                                              NOR=Tilbudt bel›p;
                                                              SVE=Anbudsbelopp] }
    { 180 ;   ;Quote Text          ;Text250       ;CaptionML=[ENU=Quote Text;
                                                              NOR=Tilbudstekst;
                                                              SVE=Offerttext] }
    { 190 ;   ;Contact No.         ;Code20        ;TableRelation=Contact;
                                                   OnValidate=BEGIN
                                                                IF "Copy Address from" IN ["Copy Address from"::Company, "Copy Address from"::CompanyVisit,
                                                                                           "Copy Address from"::CompanyAlternative] THEN
                                                                  VALIDATE("Copy Address from");

                                                                IF "Contact No." <> xRec."Contact No." THEN BEGIN
                                                                  "Contact Person No." := '';
                                                                  "Salesperson Code" := '';
                                                                END;

                                                                IF "Contact No." <> '' THEN BEGIN
                                                                  ProspectRec.GET("Contact No.");
                                                                  ProspectRec.TESTFIELD(Blocked, FALSE);
                                                                  IF "Salesperson Code" = '' THEN
                                                                    IF ProspectRec."Salesperson Code" <> '' THEN BEGIN
                                                                      CheckContactSalesRelation(ProspectRec."Company No.", ProspectRec."Salesperson Code");
                                                                      VALIDATE("Salesperson Code", ProspectRec."Salesperson Code");
                                                                    END ELSE
                                                                      IF TryRec.GET("Try-out No.") THEN
                                                                        VALIDATE("Salesperson Code", TryRec."Salesperson Code");
                                                                END;

                                                                CALCFIELDS("Contact Name", "Contact Name 2");
                                                              END;

                                                   CaptionML=[ENU=Contact No.;
                                                              NOR=Kontaktnr;
                                                              SVE=Kontaktnr] }
    { 200 ;   ;Contact Person No.  ;Code20        ;TableRelation=Contact.No. WHERE (Company No.=FIELD(Contact No.),
                                                                                    Type=CONST(Person));
                                                   OnValidate=BEGIN
                                                                IF "Contact Person No." <> '' THEN BEGIN
                                                                  IF "Copy Address from" IN ["Copy Address from"::Person, "Copy Address from"::PersonVisit,
                                                                                             "Copy Address from"::PersonAlternative  ] THEN
                                                                    VALIDATE("Copy Address from");

                                                                  TESTFIELD("Contact No.");
                                                                  ContactRec.GET("Contact Person No.");
                                                                  ContactRec.TESTFIELD(Blocked, FALSE);
                                                                  ProspectRec.GET("Contact No.");
                                                                  IF ContactRec."Salesperson Code" <> '' THEN BEGIN
                                                                    CheckContactSalesRelation(ContactRec."Company No.", ContactRec."Salesperson Code");
                                                                    VALIDATE("Salesperson Code",ContactRec."Salesperson Code");
                                                                  END ELSE
                                                                    IF ProspectRec."Salesperson Code" <> '' THEN
                                                                      VALIDATE("Salesperson Code",ProspectRec."Salesperson Code")
                                                                    ELSE
                                                                      IF TryRec.GET("Try-out No.") THEN
                                                                        VALIDATE("Salesperson Code",TryRec."Salesperson Code");
                                                                END ELSE
                                                                  VALIDATE("Contact No.");
                                                              END;

                                                   CaptionML=[ENU=Contact Person No.;
                                                              NOR=Kontaktperson;
                                                              SVE=Kontaktperson] }
    { 210 ;   ;Try-out No.         ;Code20        ;TableRelation=Try-out.Code;
                                                   OnValidate=BEGIN
                                                                IF "Copy Address from" = "Copy Address from"::"Try Out" THEN
                                                                  VALIDATE("Copy Address from");

                                                                SuccRec.SETFILTER("Try-out No.", '<>%1', "Try-out No.");
                                                                SuccRec.SETRANGE("Try-out Quote", Code);
                                                                IF SuccRec.FIND('-') THEN BEGIN
                                                                  REPEAT
                                                                    SuccRec2.COPY(SuccRec);
                                                                    SuccRec2.SETRANGE("Try-out No.", "Try-out No.");
                                                                    IF NOT SuccRec2.FIND('+') THEN SuccRec2.INIT;
                                                                    LastLino := SuccRec2."Line No.";

                                                                    SuccRec2.COPY(SuccRec);
                                                                    SuccRec2."Try-out No." := "Try-out No.";
                                                                    SuccRec2."Line No." := LastLino + 10000;
                                                                    SuccRec2.INSERT;
                                                                    SuccRec.DELETE;
                                                                  UNTIL SuccRec.NEXT = 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Try-out No.;
                                                              NOR=Prospektnr.;
                                                              SVE=Anbudsnr] }
    { 220 ;   ;Contact Name        ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact No.)));
                                                   CaptionML=[ENU=Contact Name;
                                                              NOR=Kontaktnavn;
                                                              SVE=Kontaktnamn];
                                                   Editable=No }
    { 221 ;   ;Contact Name 2      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Name 2" WHERE (No.=FIELD(Contact No.)));
                                                   CaptionML=[ENU=Contact Name 2;
                                                              NOR=Kontaktnavn 2;
                                                              SVE=Kontaktnamn 2];
                                                   Editable=No }
    { 230 ;   ;Contact Person Name ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.Name WHERE (No.=FIELD(Contact Person No.)));
                                                   CaptionML=[ENU=Contact Person Name;
                                                              NOR=Kontaktpersonens navn;
                                                              SVE=Kontaktpersonens namn];
                                                   Editable=No }
    { 240 ;   ;Try-out Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Try-out.Description WHERE (Code=FIELD(Try-out No.)));
                                                   CaptionML=[ENU=Try-out Description;
                                                              NOR=Beskrivelse av prospekt;
                                                              SVE=Anbudsbeskrivning];
                                                   Editable=No }
    { 250 ;   ;Sales person Name   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Salesperson/Purchaser.Name WHERE (Code=FIELD(Salesperson Code)));
                                                   CaptionML=[ENU=Salesperson Name;
                                                              NOR=Navn p† selger;
                                                              SVE=S„ljarnamn];
                                                   Editable=No }
    { 260 ;   ;Apply Date          ;Date          ;CaptionML=[ENU=Apply Date;
                                                              NOR=Bruk dato;
                                                              SVE=Till„mpa datum] }
    { 270 ;   ;Assign Date         ;Date          ;CaptionML=[ENU=Assign Date;
                                                              NOR=Tilordne Dato;
                                                              SVE=Tilldela datum] }
    { 275 ;   ;Assign Time         ;Time          ;CaptionML=[ENU=Assign Time;
                                                              NOR=Tilordne Tid;
                                                              SVE=Tilldela tid] }
    { 280 ;   ;Register Date       ;Date          ;CaptionML=[ENU=Register Date;
                                                              NOR=Registrer Dato;
                                                              SVE=Registrera datum] }
    { 290 ;   ;Tender Date         ;Date          ;CaptionML=[ENU=Tender Date;
                                                              NOR=Tilbudsdato;
                                                              SVE=Anbudsdatum] }
    { 295 ;   ;Tender Time         ;Time          ;CaptionML=[ENU=Tender Time;
                                                              NOR=Tilbudstid;
                                                              SVE=Anbudstid] }
    { 700 ;   ;Discipline          ;Code10        ;TableRelation=Discipline;
                                                   CaptionML=[ENU=Discipline;
                                                              NOR=Disiplin;
                                                              SVE=Disciplin] }
    { 705 ;   ;Discipline Description;Text30      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Discipline.Description WHERE (Code=FIELD(Discipline)));
                                                   CaptionML=[ENU=Discipline Description;
                                                              NOR=Disiplinbeskrivelse;
                                                              SVE=Disciplinbeskrivning];
                                                   Editable=No }
    { 710 ;   ;Try Out City        ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Try-out.City WHERE (Code=FIELD(Try-out No.)));
                                                   CaptionML=[ENU=Try Out City;
                                                              NOR=Foresp›rsel By;
                                                              SVE=Anbudsort];
                                                   Editable=No }
    { 720 ;   ;Copy Address from   ;Option        ;InitValue=Company;
                                                   OnValidate=BEGIN
                                                                CASE "Copy Address from" OF
                                                                  "Copy Address from"::"Try Out":
                                                                    BEGIN
                                                                      "Alternative Address" := '';
                                                                      IF TryRec.GET("Try-out No.") THEN BEGIN
                                                                        Address := TryRec.Address;
                                                                        "Address 2" := TryRec."Address 2";
                                                                        City := TryRec.City;
                                                                        County := TryRec.County;
                                                                        "Country/Region Code":= TryRec."Country/Region Code";
                                                                        "Post Code" := TryRec."Post Code";
                                                                        "Territory Code":= TryRec."Territory Code";
                                                                      END;
                                                                    END;
                                                                  "Copy Address from"::Company:
                                                                    BEGIN
                                                                      "Alternative Address" := '';
                                                                      IF ContactRec.GET("Contact No.") THEN BEGIN
                                                                        Address := ContactRec.Address;
                                                                        "Address 2" := ContactRec."Address 2";
                                                                        City := ContactRec.City;
                                                                        County := ContactRec.County;
                                                                        "Country/Region Code":= ContactRec."Country/Region Code";
                                                                        "Post Code" := ContactRec."Post Code";
                                                                        "Territory Code":= ContactRec."Territory Code";
                                                                      END;
                                                                   END;

                                                                  //20061009/4PS.e
                                                                  "Copy Address from"::CompanyVisit:
                                                                    BEGIN
                                                                      "Alternative Address" := '';
                                                                      IF ContactRec.GET("Contact No.") THEN BEGIN
                                                                        Address := ContactRec."Visit Address";
                                                                        "Address 2" := ContactRec."Visit Address 2";
                                                                        City := ContactRec."Visit Address City";
                                                                        County := ContactRec."Visit Address County";
                                                                        "Country/Region Code" := ContactRec."Visit Address Country/Region";
                                                                        "Post Code" := ContactRec."Visit Address Post Code";
                                                                //        "Territory Code":= ContactRec."Territory Code";
                                                                      END;
                                                                   END;

                                                                  "Copy Address from"::CompanyAlternative:
                                                                    BEGIN
                                                                      "Alternative Address" := '';
                                                                      Address := '';
                                                                      "Address 2" := '';
                                                                      City := '';
                                                                      County := '';
                                                                      "Country/Region Code" := '';
                                                                      "Post Code" := '';
                                                                      "Territory Code":= '';
                                                                   END;

                                                                  "Copy Address from"::Person:
                                                                    BEGIN
                                                                     "Alternative Address" := '';
                                                                      IF ContactRec.GET("Contact Person No.") THEN BEGIN
                                                                        Address := ContactRec.Address;
                                                                        "Address 2" := ContactRec."Address 2";
                                                                        City := ContactRec.City;
                                                                        County := ContactRec.County;
                                                                        "Country/Region Code":= ContactRec."Country/Region Code";
                                                                        "Post Code" := ContactRec."Post Code";
                                                                        "Territory Code":= ContactRec."Territory Code";
                                                                      END;
                                                                    END;
                                                                  "Copy Address from"::PersonVisit:
                                                                    BEGIN
                                                                      "Alternative Address" := '';
                                                                      IF ContactRec.GET("Contact Person No.") THEN BEGIN
                                                                        Address := ContactRec."Visit Address";
                                                                        "Address 2" := ContactRec."Visit Address 2";
                                                                        City := ContactRec."Visit Address City";
                                                                        County := ContactRec."Visit Address County";
                                                                        "Country/Region Code" := ContactRec."Visit Address Country/Region";
                                                                        "Post Code" := ContactRec."Visit Address Post Code";
                                                                //        "Territory Code":= ContactRec."Territory Code";
                                                                      END;
                                                                   END;

                                                                  "Copy Address from"::PersonAlternative:
                                                                    BEGIN
                                                                      "Alternative Address" := '';
                                                                      Address := '';
                                                                      "Address 2" := '';
                                                                      City := '';
                                                                      County := '';
                                                                      "Country/Region Code" := '';
                                                                      "Post Code" := '';
                                                                      "Territory Code":= '';
                                                                   END;

                                                                  //20061009/4PS.e
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Copy Address from;
                                                              NOR=Kopier Adresse fra;
                                                              SVE=Kopiera adress fr†n];
                                                   OptionCaptionML=[ENU=Try Out,Company,Company Visit Address,Company Alternative Address,Contact,Contact Visit Address,Contact Alternative Address;
                                                                    NOR=Foresp›rsel,Selskap,Selskapets bes›ksadresse,Selskapets alternative adresse,Kontakt,Kontaktens bes›ksadresse,Kontaktens alternative adresse;
                                                                    SVE=Anbud,F”retag,F”retagets bes”ksadress,F”retagets alternativa adress,Kontakt,Kontaktens bes”ksadress,Kontaktens alternativa adress];
                                                   OptionString=Try Out,Company,CompanyVisit,CompanyAlternative,Person,PersonVisit,PersonAlternative }
    { 721 ;   ;Alternative Address ;Code20        ;TableRelation=IF (Copy Address from=CONST(CompanyAlternative)) "Contact Alt. Address".Code WHERE (Contact No.=FIELD(Contact No.))
                                                                 ELSE IF (Copy Address from=CONST(PersonAlternative)) "Contact Alt. Address".Code WHERE (Contact No.=FIELD(Contact Person No.));
                                                   OnValidate=BEGIN
                                                                CASE "Copy Address from" OF
                                                                  "Copy Address from"::CompanyAlternative:
                                                                  BEGIN
                                                                    IF ContactalternativeRec.GET("Contact No.", "Alternative Address") THEN BEGIN
                                                                      Address := ContactalternativeRec.Address;
                                                                      "Address 2" := ContactalternativeRec."Address 2";
                                                                      City := ContactalternativeRec.City;
                                                                      County := ContactalternativeRec.County;
                                                                      "Country/Region Code" := ContactalternativeRec."Country/Region Code";
                                                                      "Post Code" := ContactalternativeRec."Post Code";
                                                                      //"Territory Code":= ;
                                                                     END;
                                                                   END;

                                                                  "Copy Address from"::PersonAlternative:
                                                                  BEGIN
                                                                    IF ContactalternativeRec.GET("Contact Person No.", "Alternative Address") THEN BEGIN
                                                                      Address := ContactalternativeRec.Address;
                                                                      "Address 2" := ContactalternativeRec."Address 2";
                                                                      City := ContactalternativeRec.City;
                                                                      County := ContactalternativeRec.County;
                                                                      "Country/Region Code" := ContactalternativeRec."Country/Region Code";
                                                                      "Post Code" := ContactalternativeRec."Post Code";
                                                                      //"Territory Code":= ;
                                                                     END;
                                                                    END;

                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Alternative Address;
                                                              NOR=Alternativ Adresse;
                                                              SVE=Alternativ adress] }
    { 725 ;   ;Contact Filter      ;Code20        ;FieldClass=Normal;
                                                   CaptionML=[ENU=Contact Filter;
                                                              NOR=Kontaktfilter;
                                                              SVE=Kontaktfilter];
                                                   Editable=No }
    { 730 ;   ;Contact Phone       ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Phone No." WHERE (No.=FIELD(Contact Filter)));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Contact Phone;
                                                              NOR=Kontaktpersonens telefonnummer;
                                                              SVE=Kontaktpersonens telefonnummer];
                                                   Editable=No }
    { 731 ;   ;Contact Phone 2     ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Phone No. 2" WHERE (No.=FIELD(Contact Filter)));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Contact Phone 2;
                                                              NOR=Kontaktpersonens telefonnummer 2;
                                                              SVE=Kontaktpersonens telefonnummer 2];
                                                   Editable=No }
    { 732 ;   ;Contact Mobile Phone;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Mobile Phone No." WHERE (No.=FIELD(Contact Filter)));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Contact Mobile Phone;
                                                              NOR=Kontaktmobilnummer;
                                                              SVE=Kontaktmobilnummer];
                                                   Editable=No }
    { 733 ;   ;Contact Fax         ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact."Fax No." WHERE (No.=FIELD(Contact Filter)));
                                                   CaptionML=[ENU=Contact Fax;
                                                              NOR=Kontaktfaks;
                                                              SVE=Kontaktfax];
                                                   Editable=No }
    { 734 ;   ;Contact E-Mail      ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Contact.E-Mail WHERE (No.=FIELD(Contact Filter)));
                                                   CaptionML=[ENU=Contact E-Mail;
                                                              NOR=Kontakt e-mail;
                                                              SVE=Kontakte-post];
                                                   Editable=No }
    { 740 ;   ;Estimate No.        ;Code20        ;TableRelation=Estimate.No.;
                                                   CaptionML=[ENU=Estimate No.;
                                                              NOR=Kalkylenr;
                                                              SVE=Kalkylnr] }
    { 741 ;   ;Estimator           ;Code20        ;TableRelation=Employee.No.;
                                                   CaptionML=[ENU=Estimator;
                                                              NOR=Kalkylat›r;
                                                              SVE=Kalkylator] }
    { 742 ;   ;Name Estimator      ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Estimator)));
                                                   CaptionML=[ENU=Name Estimator;
                                                              NOR=Navn p† Kalkyleansvarlig;
                                                              SVE=Namn p† kalkylansvarig];
                                                   Editable=No }
    { 745 ;   ;Estimate Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Estimate.Description WHERE (No.=FIELD(Estimate No.)));
                                                   CaptionML=[ENU=Estimate Description;
                                                              NOR=Kalkylebeskrivelse;
                                                              SVE=Kalkylbeskrivning];
                                                   Editable=No }
    { 748 ;   ;Status changed on   ;Date          ;CaptionML=[ENU=Status changed on;
                                                              NOR=Status endret den;
                                                              SVE=Status „ndrad den];
                                                   Editable=No }
    { 750 ;   ;Tender No.          ;Code20        ;CaptionML=[ENU=Tender No.;
                                                              NOR=Tilbudsnr.;
                                                              SVE=Anbudsnr] }
    { 760 ;   ;No. Related Sales Persons;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Count("Salesperson by Contact" WHERE (Contact No.=FIELD(Contact No.)));
                                                   CaptionML=[ENU=No. Related Sales Persons;
                                                              NOR=Antall relaterte selgere;
                                                              SVE=Antal relaterade f”rs„ljare];
                                                   Editable=No }
    { 770 ;   ;Your reference      ;Text30        ;CaptionML=[ENU=Your reference;
                                                              NOR=Din referanse;
                                                              SVE=Er referens] }
    { 780 ;   ;Change Date         ;Date          ;CaptionML=[ENU=Changed on;
                                                              NOR=Endret den;
                                                              SVE=Žndrat den];
                                                   Editable=No }
    { 790 ;   ;Changed By          ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Changed By;
                                                              NOR=Endret av;
                                                              SVE=Žndrad av];
                                                   Editable=No }
    { 800 ;   ;Inserted By         ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Inserted By;
                                                              NOR=Satt inn av;
                                                              SVE=Infogad av];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Company,Code                            ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ContMgtSetup@11012000 : Record 5079;
      ProspectRec@1210190001 : Record 5050;
      ContactRec@1210190000 : Record 5050;
      ContactalternativeRec@1100485000 : Record 5051;
      TryRec@1210190003 : Record 11012750;
      SuccRec@1210190009 : Record 11012761;
      SuccRec2@1210190008 : Record 11012761;
      Postcode@1210190006 : Record 225;
      NoSeriesMgt@1210190011 : Codeunit 396;
      LastLino@1210190007 : Integer;
      DPA_Management@1100000999 : Codeunit 11012783;

    PROCEDURE CheckContactSalesRelation@1210190000(lvContact@1210190001 : Code[20];lvSalesPerson@1210190002 : Code[20]);
    VAR
      ContSalesRec@1210190000 : Record 11012760;
    BEGIN
      IF NOT ContSalesRec.GET(lvContact, lvSalesPerson) THEN BEGIN
        ContSalesRec.INIT;
        ContSalesRec."Contact No." := lvContact;
        ContSalesRec."Salesperson Code" := lvSalesPerson;
        ContSalesRec.INSERT(TRUE);
      END;
    END;

    PROCEDURE FillModificationData@1100485000();
    BEGIN
      "Change Date" := TODAY;
      "Changed By" := USERID;
    END;

    PROCEDURE DPA_SetDefaultDpmtFromNoSeries@1100000995(xRecRef@1100525002 : RecordRef);
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      xRecRef.SETTABLE(xRec);
      DPA_Management.SetDepartmentCodeNoSeries(
        TABLENAME,
        "Global Dimension 1 Code",
        "No. Series",
        xRec."No. Series" );
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    VAR
      Dimension1Code@1100528400 : Code[20];
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      Dimension1Code :=
        DPA_Management.GetNoSeriesDepartmentCode(
          "No. Series",
          xRec."No. Series",
          DATABASE::"Consolidated Try-out Quote");
      IF Dimension1Code <> '' THEN
        "Global Dimension 1 Code" := Dimension1Code;

      IF "Global Dimension 1 Code" <> '' THEN
        VALIDATE("Global Dimension 1 Code");
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11072022) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11072022');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Consolidated Try-out Quote", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    BEGIN
    {
      //20061009/4PS : Modified field ["Copy Address from"] added option [CompanyVisit,Person,PersonVisit]
    }
    END.
  }
}

