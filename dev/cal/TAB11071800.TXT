OBJECT Table 11071800 SC/Cust. Source Type Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF (Type IN [Type::Customer, Type::"Customer Template"]) AND
                  ("SMS Reminder" = "SMS Reminder"::" ")
               THEN
                 "SMS Reminder" := "SMS Reminder"::No;
             END;

    CaptionML=[ENU=Service Contract/Customer Source Type Setup;
               NOR=Servicekontrakt/Kundekildetype, innstillinger;
               SVE=Servicekontrakt/inst„llningar av ursprungstyp f”r kund];
    LookupPageID=Page11126099;
    DrillDownPageID=Page11126099;
  }
  FIELDS
  {
    { 10  ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=Customer,Contract,Contract Template,Customer Template;
                                                                    NOR=Kunde,Kontrakt,Kontraktmal,Kundemal;
                                                                    SVE=Kund,Kontrakt,Kontraktmall,Kundmall];
                                                   OptionString=Customer,Contract,Contract Template,Customer Template }
    { 20  ;   ;Code                ;Code20        ;TableRelation=IF (Type=CONST(Customer)) Customer
                                                                 ELSE IF (Type=CONST(Contract)) Service-Contract
                                                                 ELSE IF (Type=CONST(Contract Template)) "Service-Contract Template"
                                                                 ELSE IF (Type=CONST(Customer Template)) "Customer Template";
                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod] }
    { 30  ;   ;Source Type         ;Option        ;InitValue=Direct;
                                                   OnValidate=BEGIN
                                                                IF "Source Type" IN ["Source Type"::Modification, "Source Type"::Replacement] THEN
                                                                  IF (Type <> Type::Customer) AND (Type <> Type::"Customer Template") THEN
                                                                    FIELDERROR(Type);
                                                              END;

                                                   CaptionML=[ENU=Source Type;
                                                              NOR=Kildetype;
                                                              SVE=Ursprungstyp];
                                                   OptionCaptionML=[ENU=Call,Contract,Direct,Estimate,,,Modification,Replacement;
                                                                    NOR=Samtale,Kontrakt,Direkte,Kalkyle,,,Endring,Erstatning;
                                                                    SVE=Samtal,Kontrakt,Direkt,Kalkyl,,,Žndring,Ers„ttning];
                                                   OptionString=Call,Contract,Direct,Estimate,,,Modification,Replacement }
    { 40  ;   ;Item Price Cost Plus Entry;Option  ;InitValue=Default;
                                                   CaptionML=[ENU=Item Price Cost Plus Entry;
                                                              NOR=Selvkosttransaksjon for artikkelpris;
                                                              SVE=Redovisad sj„lvkostnad f”r artikelpris];
                                                   OptionCaptionML=ENU="Cost Price,Gross Price - Sales Discount,,, ";
                                                   OptionString=CostPrice,GrossMin,,,Default }
    { 50  ;   ;Calculate Travel Costs;Option      ;CaptionML=[ENU=Calculate Travel Costs;
                                                              NOR=Kalkuler reisekostnader;
                                                              SVE=Ber„kna reskostnader];
                                                   OptionCaptionML=[ENU=" ,Travel Cost,Travel Distance and Time";
                                                                    NOR=" ,Reisekostnader,Reisedistanse og tid";
                                                                    SVE=" ,Resekostnad,Resstr„cka och tid"];
                                                   OptionString=[ ,Travel Cost,Travel Distance+Time] }
    { 60  ;   ;Calc. Field Serv. Travel Costs;Boolean;
                                                   CaptionML=[ENU=Calculate Field Service Travel Costs;
                                                              NOR=Kalkuler reisekostnader for feltservice;
                                                              SVE=Ber„kna f„ltservicereskostnader] }
    { 90  ;   ;Service Type        ;Code20        ;TableRelation="Service Type";
                                                   CaptionML=[ENU=Service Type;
                                                              NOR=Servicetype;
                                                              SVE=Servicetyp] }
    { 100 ;   ;Service Type (Other);Code20        ;TableRelation="Service Type";
                                                   CaptionML=[ENU=Service Type (Additional Cost);
                                                              NOR=Servicetype (Tilleggskost);
                                                              SVE=Servicetyp (extra kostnad)] }
    { 110 ;   ;Bill-to             ;Option        ;OnValidate=BEGIN
                                                                IF "Bill-to" <> "Bill-to"::" " THEN
                                                                  IF (Type <> Type::Contract) AND (Type <> Type::"Contract Template") THEN
                                                                    ERROR(Text000);
                                                              END;

                                                   CaptionML=[ENU=Bill-to;
                                                              NOR=Faktura til;
                                                              SVE=Faktureras];
                                                   OptionCaptionML=[ENU=" ,Service Location";
                                                                    NOR=" ,Servicelokasjon"];
                                                   OptionString=[ ,Service Location] }
    { 120 ;   ;Appointments by     ;Option        ;OnValidate=BEGIN
                                                                IF "Appointments by" = "Appointments by"::" " THEN
                                                                  "Appointment Letter Code" := '';
                                                              END;

                                                   CaptionML=ENU=Appointments by;
                                                   OptionCaptionML=[ENU=" ,Letter,E-Mail";
                                                                    SVE=" ,Brev,E-Post"];
                                                   OptionString=[ ,Letter,E-Mail] }
    { 130 ;   ;Appointment Letter Code;Code10     ;TableRelation="SO Appointment Letter";
                                                   OnValidate=BEGIN
                                                                IF "Appointment Letter Code" <> '' THEN
                                                                  TESTFIELD("Appointments by");
                                                              END;

                                                   CaptionML=[ENU=Appointment Letter;
                                                              NOR=M›tebrev;
                                                              SVE=M”tesbrev] }
    { 140 ;   ;SMS Message Code    ;Code10        ;TableRelation="SMS Message";
                                                   OnValidate=BEGIN
                                                                IF ("SMS Message Code" = '') AND (Type IN [Type::Customer, Type::"Customer Template"]) THEN
                                                                  "SMS Reminder" := "SMS Reminder"::No;
                                                              END;

                                                   CaptionML=ENU=SMS Message Code }
    { 150 ;   ;SMS Reminder        ;Option        ;OnValidate=VAR
                                                                ServiceSourceTypeSetup@1100528600 : Record 11071726;
                                                                SCCustSourceTypeSetup@1100528601 : Record 11071800;
                                                                ServiceContract@1100528602 : Record 11012812;
                                                                MessageCodeFound@1100528603 : Boolean;
                                                              BEGIN
                                                                IF ("SMS Reminder" = "SMS Reminder"::" ") AND (Type IN [Type::Customer, Type::"Customer Template"]) THEN
                                                                  FIELDERROR("SMS Reminder");
                                                                IF "SMS Reminder" = "SMS Reminder"::Yes THEN BEGIN
                                                                  MessageCodeFound := "SMS Message Code" <> '';
                                                                  IF NOT MessageCodeFound AND (Type = Type::Contract) THEN
                                                                    IF ServiceContract.GET(Code) THEN
                                                                      IF SCCustSourceTypeSetup.GET(SCCustSourceTypeSetup.Type::Customer, ServiceContract."Customer No.", "Source Type") THEN
                                                                        MessageCodeFound := SCCustSourceTypeSetup."SMS Message Code" <> '';
                                                                  IF NOT MessageCodeFound THEN BEGIN
                                                                    IF NOT ServiceSourceTypeSetup.GET("Source Type") THEN
                                                                      ServiceSourceTypeSetup.INIT;
                                                                    IF ServiceSourceTypeSetup."SMS Message Code" = '' THEN
                                                                      ERROR(Text001, FIELDCAPTION("SMS Message Code"));
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=SMS Reminder;
                                                   OptionCaptionML=ENU=" ,No,Yes";
                                                   OptionString=[ ,No,Yes] }
    { 160 ;   ;Level Settings Hours Calc FSA;Option;
                                                   CaptionML=ENU=Level Settings Hours Calculation Field Service;
                                                   OptionCaptionML=ENU=Service Location,Service Contract,Customer;
                                                   OptionString=ServiceLocation,ServiceContract,Customer }
  }
  KEYS
  {
    {    ;Type,Code,Source Type                   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100409000 : TextConst 'ENU=Type must be Contract or Contract Template;NOR=Type m† v‘re kontrakt eller kontraktmal';
      Text001@1100528600 : TextConst 'ENU=%1 not filled;NOR=%1 er ikke fylt ut.;SVE=%1 har inte fyllts i.';

    PROCEDURE GetAppointmentInfoByServiceOrder@1100528600(IServiceOrder@1100528600 : Record 11012823;VAR OSCCustSourceTypeSetup@1100528605 : Record 11071800);
    VAR
      ServiceSourceTypeSetup@1100528601 : Record 11071726;
      ObjectModification@1100528604 : Record 11071700;
      ObjectModificationMgt@1100528602 : Codeunit 11012835;
      ModificationNo@1100528603 : Code[20];
    BEGIN
      OSCCustSourceTypeSetup.INIT;
      IF IServiceOrder."Source Type" = IServiceOrder."Source Type"::Modification THEN BEGIN
        ModificationNo := ObjectModificationMgt.GetModificationNoByServiceOrderNo(IServiceOrder."No.");
        IF ObjectModification.GET(ModificationNo) THEN BEGIN
          OSCCustSourceTypeSetup."Appointments by" := ObjectModification."Appointments by";
          OSCCustSourceTypeSetup."Appointment Letter Code" := ObjectModification."Appointment Letter Code";
        END;
      END;
      IF OSCCustSourceTypeSetup."Appointments by" = OSCCustSourceTypeSetup."Appointments by"::" " THEN BEGIN
        IF (IServiceOrder."Service Contract No." = '') OR
           NOT OSCCustSourceTypeSetup.GET(OSCCustSourceTypeSetup.Type::Contract, IServiceOrder."Service Contract No.", IServiceOrder."Source Type") OR
           (OSCCustSourceTypeSetup."Appointments by" = OSCCustSourceTypeSetup."Appointments by"::" ")
        THEN
          IF NOT OSCCustSourceTypeSetup.GET(OSCCustSourceTypeSetup.Type::Customer, IServiceOrder."Customer No.", IServiceOrder."Source Type") THEN
            IF ServiceSourceTypeSetup.GET(IServiceOrder."Source Type") THEN BEGIN
              OSCCustSourceTypeSetup."Appointments by" := ServiceSourceTypeSetup."Appointments by";
              OSCCustSourceTypeSetup."Appointment Letter Code" := ServiceSourceTypeSetup."Appointment Letter Code";
            END;
      END;
    END;

    BEGIN
    END.
  }
}

