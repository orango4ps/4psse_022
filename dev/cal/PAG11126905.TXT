OBJECT Page 11126905 Resource Plan. - Create (Sel.)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Ressourcenplanung - Erstellen (Auswahl);
               ENU=Resource Planning - Create (Selections);
               NLD=Resourceplanning - Aanmaken (selecties)];
    SaveValues=Yes;
    PageType=StandardDialog;
    OnOpenPage=BEGIN
                 IF AbsenceAllowed THEN BEGIN
                   IF (SourceType = SourceType::Project) OR (SourceType = SourceType::Absence) THEN
                     CreateSource := FALSE;
                   OnExistingSource := (NOT CreateSource);
                   SourceEditable := (NOT CreateSource);
                   IF SourceType = SourceType::Absence THEN
                     OnExistingSource := FALSE;
                 END ELSE BEGIN
                   IF SourceTypeWithoutAbsence = SourceTypeWithoutAbsence::Project THEN
                     CreateSource := FALSE;
                   OnExistingSource := (NOT CreateSource);
                   SourceEditable := (NOT CreateSource);
                 END;

                 SetEditable;
                 FillSourceTypeRelatedCaptions;
                 SourceNo := '';
               END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::OK THEN
                         ValidateSourceNo(TRUE);
                     END;

  }
  CONTROLS
  {
    { 1100529000;0;Container;
                ContainerType=ContentArea }

    { 1100529005;1;Field  ;
                CaptionML=[DEU=Herkunftsart;
                           ENU=Source Type;
                           NLD=Bronsoort;
                           NOR=Kildetype;
                           SVE=Ursprungstyp];
                OptionCaptionML=[DEU=Anfrage,Serviceauftrag,Projekt,Abwesenheit;
                                 ENU=Request,Service Order,Project,Absence;
                                 NLD=Aanvraag,Serviceorder,Project,Afwezigheid];
                SourceExpr=SourceType;
                Visible=AbsenceAllowed;
                OnValidate=BEGIN
                             CASE SourceType OF
                                 SourceType::Request:
                                 BEGIN
                                   IF NOT OnExistingSource THEN
                                     CreateSource := TRUE;
                                 END;
                                 SourceType::Project:
                                 BEGIN
                                   CreateSource := FALSE;
                                   OnExistingSource := (NOT CreateSource);
                                 END;
                                 SourceType::ServiceOrder:
                                 BEGIN
                                   IF NOT OnExistingSource THEN
                                     CreateSource := TRUE;
                                 END;
                                 SourceType::Absence:
                                 BEGIN
                                   CreateSource := FALSE;
                                   EventsByDay := FALSE;
                                   LinkedResources := FALSE;
                                   OnExistingSource := FALSE;
                                   PlanDuringClockTime := FALSE;
                                   PlanInWeekend := FALSE;
                                   FirmPlanned := FALSE;
                                 END;
                             END;

                             SetEditable;
                             SourceNo := '';
                             FillSourceTypeRelatedCaptions;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100529100;1;Field  ;
                CaptionML=[DEU=Herkunftsart;
                           ENU=Source Type;
                           NLD=Bronsoort];
                OptionCaptionML=[DEU=Anforderung,Serviceauftrag,Projekt;
                                 ENU=Request,Service Order,Project;
                                 NLD=Aanvraag,Serviceorder,Project];
                SourceExpr=SourceTypeWithoutAbsence;
                Visible=AbsenceNotAllowed;
                OnValidate=BEGIN
                             CASE SourceTypeWithoutAbsence OF
                                 SourceTypeWithoutAbsence::Request:
                                 BEGIN
                                   IF NOT OnExistingSource THEN
                                     CreateSource := TRUE;
                                 END;
                                 SourceTypeWithoutAbsence::Project:
                                 BEGIN
                                   CreateSource := FALSE;
                                   OnExistingSource := (NOT CreateSource);
                                 END;
                                 SourceTypeWithoutAbsence::ServiceOrder:
                                 BEGIN
                                   IF NOT OnExistingSource THEN
                                     CreateSource := TRUE;
                                 END;
                             END;

                             SetEditable;
                             SourceNo := '';
                             FillSourceTypeRelatedCaptions;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100529002;1;Field  ;
                CaptionML=[DEU=Neue Quelle;
                           ENU=New Source;
                           NLD=Nieuwe bron];
                SourceExpr=CreateSource;
                Editable=CreateSourceEditable;
                OnValidate=BEGIN
                             OnExistingSource := (NOT CreateSource);
                             SourceEditable := (NOT CreateSource);
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100529001;1;Field  ;
                CaptionML=[DEU=An vorhandener Quelle;
                           ENU=On existing Source;
                           NLD=Bij bestaande bron];
                SourceExpr=OnExistingSource;
                Editable=CreateSourceEditable;
                OnValidate=BEGIN
                             CreateSource := (NOT OnExistingSource);
                             SourceEditable := OnExistingSource;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100529003;1;Field  ;
                CaptionML=[DEU=Herkunftsnr.;
                           ENU=Source No.;
                           NLD=Bronnr.;
                           NOR=Kildenr.;
                           SVE=Ursprungsnr];
                SourceExpr=SourceNo;
                CaptionClass=CaptionSourceNo;
                Enabled=SourceEditable;
                HideValue=CreateSource;
                OnValidate=BEGIN
                             ValidateSourceNo(FALSE);
                           END;

                OnLookup=BEGIN
                           LookupSourceNo;
                         END;
                          }

    { 1100529004;1;Field  ;
                CaptionML=[DEU=Ereignisse per Tag;
                           ENU=Events by Day;
                           NLD=Events per dag];
                SourceExpr=EventsByDay;
                Editable=EventsByDayEditable }

    { 1100529101;1;Field  ;
                CaptionML=[DEU=VerknÅpfte Ressourcen;
                           ENU=Linked Resources;
                           NLD=Gekoppelde resources;
                           SVE=LÑnkade Resurser];
                SourceExpr=LinkedResources;
                Editable=LinkedResourcesEditable }

    { 1100529170;1;Field  ;
                CaptionML=[DEU=Planen wÑhrend Uhrzeit;
                           ENU=Plan During Clocktime;
                           NLD=Doorplannen];
                SourceExpr=PlanDuringClockTime;
                Editable=PlanDuringClockTimeEditable }

    { 1100529171;1;Field  ;
                CaptionML=[DEU=Im Wochenende planen;
                           ENU=Plan in Weekend;
                           NLD=Plannen in weekend];
                SourceExpr=PlanInWeekend;
                Editable=PlanInWeekendEditable }

    { 1100529172;1;Field  ;
                CaptionML=[DEU=Fest geplant;
                           ENU=Firm Planned;
                           NLD=Vast gepland];
                SourceExpr=FirmPlanned;
                Editable=FirmPlannedEditable }

  }
  CODE
  {
    VAR
      SourceType@1100529006 : 'Request,ServiceOrder,Project,Absence';
      SourceTypeWithoutAbsence@1100529103 : 'Request,ServiceOrder,Project';
      CreateSource@1100529000 : Boolean INDATASET;
      OnExistingSource@1100529001 : Boolean INDATASET;
      SourceEditable@1100529106 : Boolean;
      EventsByDay@1100529002 : Boolean;
      Text001@1100529004 : TextConst 'DEU=%1 darf nicht leer sein;ENU=%1 may not be empty;NLD=%1 mag niet leeg zijn';
      LinkedResources@1100529101 : Boolean;
      AbsenceEmployee@1100525005 : Boolean;
      AbsencePlant@1100529100 : Boolean;
      AbsenceAllowed@1100529104 : Boolean;
      AbsenceNotAllowed@1100529105 : Boolean;
      CreateSourceEditable@1100529008 : Boolean INDATASET;
      EventsByDayEditable@1100525002 : Boolean INDATASET;
      LinkedResourcesEditable@1100529102 : Boolean;
      SourceNo@1100529003 : Code[20];
      CaptionSourceNo@1100529007 : Text;
      PlanDuringClockTime@1100529170 : Boolean;
      PlanInWeekend@1100529171 : Boolean;
      FirmPlanned@1100529172 : Boolean;
      PlanDuringClockTimeEditable@1100529173 : Boolean;
      PlanInWeekendEditable@1100529174 : Boolean;
      FirmPlannedEditable@1100529175 : Boolean;

    LOCAL PROCEDURE FillSourceTypeRelatedCaptions@1100529002();
    VAR
      WorkOrder@1100529000 : Record 11229279;
      CauseofAbsence@1100525000 : Record 5206;
    BEGIN
      CaptionSourceNo := WorkOrder.FIELDCAPTION("Source No.");
      IF AbsenceAllowed THEN BEGIN
        CASE SourceType OF
          SourceType::Request:
            CaptionSourceNo := FORMAT(WorkOrder."Source Type"::Request);
          SourceType::ServiceOrder:
            CaptionSourceNo := FORMAT(WorkOrder."Source Type"::ServiceOrder);
          SourceType::Project:
            CaptionSourceNo := FORMAT(WorkOrder."Source Type"::Project);
          SourceType::Absence:
            CaptionSourceNo := CauseofAbsence.TABLECAPTION;
        END;
      END ELSE BEGIN
        CASE SourceTypeWithoutAbsence OF
          SourceTypeWithoutAbsence::Request:
            CaptionSourceNo := FORMAT(WorkOrder."Source Type"::Request);
          SourceTypeWithoutAbsence::ServiceOrder:
            CaptionSourceNo := FORMAT(WorkOrder."Source Type"::ServiceOrder);
          SourceTypeWithoutAbsence::Project:
            CaptionSourceNo := FORMAT(WorkOrder."Source Type"::Project);
        END;
      END;
    END;

    LOCAL PROCEDURE ValidateSourceNo@1100529000(CheckBlankMode@1100529000 : Boolean);
    VAR
      ServiceOrder@1100529002 : Record 11012823;
      Project@1100529003 : Record 11072003;
      ResourceRequest@1100529001 : Record 11124901;
      CauseofAbsence@1100525000 : Record 5206;
      CauseofAbsencePlant@1100529100 : Record 11126144;
    BEGIN
      IF NOT OnExistingSource THEN
        EXIT;
      IF CheckBlankMode AND (SourceNo = '') THEN
        ERROR(Text001, CaptionSourceNo);
      IF AbsenceAllowed THEN BEGIN
        CASE SourceType OF
          SourceType::Request:
            ResourceRequest.GET(SourceNo);
          SourceType::ServiceOrder:
            ServiceOrder.GET(SourceNo);
          SourceType::Project:
            Project.GET(SourceNo);
          SourceType::Absence:
            BEGIN
              IF AbsenceEmployee THEN
                CauseofAbsence.GET(SourceNo);
              IF AbsencePlant THEN
                CauseofAbsencePlant.GET(SourceNo);
            END;
        END;
      END ELSE BEGIN
        CASE SourceTypeWithoutAbsence OF
          SourceTypeWithoutAbsence::Request:
            ResourceRequest.GET(SourceNo);
          SourceTypeWithoutAbsence::ServiceOrder:
            ServiceOrder.GET(SourceNo);
          SourceTypeWithoutAbsence::Project:
            Project.GET(SourceNo);
        END;
      END;
    END;

    LOCAL PROCEDURE LookupSourceNo@1100529003();
    VAR
      ServiceOrder@1100529002 : Record 11012823;
      Project@1100529001 : Record 11072003;
      ResourceRequest@1100529000 : Record 11124901;
      CauseofAbsence@1100525000 : Record 5206;
      CauseofAbsencePlant@1100529100 : Record 11126144;
    BEGIN
      IF AbsenceAllowed THEN BEGIN
        CASE SourceType OF
          SourceType::Request:
            BEGIN
              ResourceRequest.SETFILTER(Status, '<%1', ResourceRequest.Status::Finished);
              ResourceRequest."No." := SourceNo;
              IF PAGE.RUNMODAL(0, ResourceRequest) = ACTION::LookupOK THEN
                SourceNo := ResourceRequest."No.";
            END;
          SourceType::ServiceOrder:
            BEGIN
              ServiceOrder.SETFILTER(Status, '<=%1', ServiceOrder.Status::"In Process");
              ServiceOrder."No." := SourceNo;
              IF PAGE.RUNMODAL(0, ServiceOrder) = ACTION::LookupOK THEN
                SourceNo := ServiceOrder."No.";
            END;
          SourceType::Project:
            BEGIN
              Project.SETFILTER("Project Status", '<=%1', Project."Project Status"::Production);
              Project."No." := SourceNo;
              IF PAGE.RUNMODAL(0, Project) = ACTION::LookupOK THEN
                SourceNo := Project."No.";
            END;
          SourceType::Absence:
            BEGIN
              IF AbsenceEmployee THEN BEGIN
                CauseofAbsence.Code := SourceNo;
                IF PAGE.RUNMODAL(0, CauseofAbsence) = ACTION::LookupOK THEN
                  SourceNo := CauseofAbsence.Code;
              END;
              IF AbsencePlant THEN BEGIN
                CauseofAbsencePlant.Code := SourceNo;
                IF PAGE.RUNMODAL(0, CauseofAbsencePlant) = ACTION::LookupOK THEN
                  SourceNo := CauseofAbsencePlant.Code;
              END;
            END;
        END;
      END ELSE BEGIN
          CASE SourceTypeWithoutAbsence OF
          SourceTypeWithoutAbsence::Request:
            BEGIN
              ResourceRequest.SETFILTER(Status, '<%1', ResourceRequest.Status::Finished);
              ResourceRequest."No." := SourceNo;
              IF PAGE.RUNMODAL(0, ResourceRequest) = ACTION::LookupOK THEN
                SourceNo := ResourceRequest."No.";
            END;
          SourceTypeWithoutAbsence::ServiceOrder:
            BEGIN
              ServiceOrder.SETFILTER(Status, '<=%1', ServiceOrder.Status::"In Process");
              ServiceOrder."No." := SourceNo;
              IF PAGE.RUNMODAL(0, ServiceOrder) = ACTION::LookupOK THEN
                SourceNo := ServiceOrder."No.";
            END;
          SourceTypeWithoutAbsence::Project:
            BEGIN
              Project.SETFILTER("Project Status", '<=%1', Project."Project Status"::Production);
              Project."No." := SourceNo;
              IF PAGE.RUNMODAL(0, Project) = ACTION::LookupOK THEN
                SourceNo := Project."No.";
            END;
        END;
      END;
    END;

    LOCAL PROCEDURE SetEditable@1100525000();
    BEGIN
      IF AbsenceAllowed THEN BEGIN
        CreateSourceEditable := (SourceType <> SourceType::Project) AND (SourceType <> SourceType::Absence);
        EventsByDayEditable := SourceType <> SourceType::Absence;
        LinkedResourcesEditable := SourceType <> SourceType::Absence;
        SourceEditable := OnExistingSource OR (SourceType = SourceType::Absence);
        PlanDuringClockTimeEditable := SourceType <> SourceType::Absence;
        PlanInWeekendEditable := SourceType <> SourceType::Absence;
        FirmPlannedEditable := SourceType <> SourceType::Absence;
      END ELSE BEGIN
        CreateSourceEditable := SourceTypeWithoutAbsence <> SourceTypeWithoutAbsence::Project;
        EventsByDayEditable := TRUE;
        LinkedResourcesEditable := TRUE;
        PlanDuringClockTimeEditable := TRUE;
        PlanInWeekendEditable := TRUE;
        FirmPlannedEditable := TRUE;
      END;
    END;

    [External]
    PROCEDURE SetSelections@1100525040(AbsenceEmployee2@1100525000 : Boolean;AbsencePlant2@1100529100 : Boolean);
    BEGIN
      AbsenceEmployee := AbsenceEmployee2;
      AbsencePlant := AbsencePlant2;
      AbsenceAllowed := AbsenceEmployee OR AbsencePlant;
      AbsenceNotAllowed := NOT AbsenceAllowed;
    END;

    [External]
    PROCEDURE GetSelections@1100529001(VAR SourceType2@1100529002 : Option;VAR SourceNo2@1100529000 : Code[20];VAR EventsByDay2@1100529001 : Boolean;VAR LinkedResources2@1100529101 : Boolean;VAR PlanDuringClockTime2@1100529172 : Boolean;VAR PlanInWeekend2@1100529171 : Boolean;VAR FirmPlanned2@1100529170 : Boolean);
    VAR
      WorkOrder@1100529003 : Record 11229279;
    BEGIN
      IF AbsenceAllowed THEN BEGIN
        CASE  SourceType OF  // Convert to option values of the field in the work order table
          SourceType::Request:
            SourceType2 := WorkOrder."Source Type"::Request;
          SourceType::ServiceOrder:
            SourceType2 := WorkOrder."Source Type"::ServiceOrder;
          SourceType::Project:
            SourceType2 := WorkOrder."Source Type"::Project;
          SourceType::Absence:
            SourceType2 := DATABASE::"Cause of Absence";  // Table No, is not a option value of work order 'Source Type'
        END;
      END ELSE BEGIN
        CASE  SourceTypeWithoutAbsence OF  // Convert to option values of the field in the work order table
          SourceTypeWithoutAbsence::Request:
            SourceType2 := WorkOrder."Source Type"::Request;
          SourceTypeWithoutAbsence::ServiceOrder:
            SourceType2 := WorkOrder."Source Type"::ServiceOrder;
          SourceTypeWithoutAbsence::Project:
            SourceType2 := WorkOrder."Source Type"::Project;
        END;
      END;
      IF SourceEditable THEN
        SourceNo2 := SourceNo
      ELSE
        SourceNo2 := '';
      EventsByDay2 := EventsByDay;
      LinkedResources2 := LinkedResources;
      PlanDuringClockTime2 := PlanDuringClockTime;
      PlanInWeekend2 := PlanInWeekend;
      FirmPlanned2 := FirmPlanned;
    END;

    BEGIN
    END.
  }
}

