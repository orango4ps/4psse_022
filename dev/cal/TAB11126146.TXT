OBJECT Table 11126146 Plant Maintenance Arrangement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Maintenance Year");
               TESTFIELD("Maintenance Week");
               CheckUniqueDate(TRUE);
               CalcMaintenanceDate;
               IF "Line No." = 0 THEN
                 "Line No." := GetNextLineNo();
             END;

    OnModify=BEGIN
               TESTFIELD("Maintenance Year");
               TESTFIELD("Maintenance Week");
               CheckModifyAllowed();
               CheckUniqueDate(TRUE);
               CalcMaintenanceDate;
             END;

    OnDelete=BEGIN
               CheckModifyAllowed();
             END;

    OnRename=BEGIN
               CheckModifyAllowed();
             END;

    CaptionML=ENU=Plant Maintenance Arrangement;
  }
  FIELDS
  {
    { 10  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type".Code;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Blocked (Plant Type)");
                                                                TESTFIELD("Blocked (Plant Type)", FALSE);
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Plant Type;
                                                              SVE=Maskintyp];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 20  ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Plant Description", "Inspection No.", "Blocked (Plant No.)");
                                                                TESTFIELD("Blocked (Plant No.)", FALSE);
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Plant No.;
                                                              SVE=Maskinnr];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 21  ;   ;Plant Description   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".Description WHERE (Plant Type=FIELD(Plant Type),
                                                                                                        No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Plant Description;
                                                              SVE=Maskinbeskrivning];
                                                   Editable=No }
    { 22  ;   ;Inspection No.      ;Code30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number"."Inspection No." WHERE (Plant Type=FIELD(Plant Type),
                                                                                                             No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Inspection No.;
                                                              SVE=Inspektionsnr];
                                                   Editable=No }
    { 23  ;   ;Blocked (Plant Type);Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Blocked WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=[ENU=Blocked (Plant Type);
                                                              SVE=Sp„rrad (Maskintyp)];
                                                   Editable=No }
    { 24  ;   ;Blocked (Plant No.) ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".Blocked WHERE (Plant Type=FIELD(Plant Type),
                                                                                                    No.=FIELD(Plant No.)));
                                                   CaptionML=ENU=Blocked (Plant No.);
                                                   Editable=No }
    { 30  ;   ;Maintenance Scheme  ;Code20        ;TableRelation="Plant Stnd. Maintenance Scheme";
                                                   OnValidate=VAR
                                                                PlantMaintenanceScheme@1100529000 : Record 11072677;
                                                              BEGIN
                                                                PlantMaintenanceScheme.GET("Plant Type", "Plant No.", "Maintenance Scheme");
                                                                "Inspection Type" := PlantMaintenanceScheme."Inspection Type";
                                                                IF "Inspection Type" = '' THEN BEGIN
                                                                  "Interval Maintenance" := PlantMaintenanceScheme."Interval Maintenance";
                                                                  "Interval Meter Reading" := PlantMaintenanceScheme."Interval Meter Reading";
                                                                  "Specific Meter Reading" := PlantMaintenanceScheme."Specific Meter Reading";
                                                                END ELSE BEGIN
                                                                  PlantMaintenanceScheme.GetInspectionTypeInterval("Interval Maintenance", "Interval Meter Reading", '');
                                                                  "Specific Meter Reading" := 0;
                                                                END;
                                                                Meter := PlantMaintenanceScheme.Meter;
                                                                "Meter Reading Type" := PlantMaintenanceScheme."Meter Reading Type";
                                                                CALCFIELDS("Maintenance Scheme Description");
                                                              END;

                                                   CaptionML=[ENU=Maintenance Scheme;
                                                              SVE=Underh†llsschema];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 31  ;   ;Maintenance Scheme Description;Text50;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Stnd. Maintenance Scheme".Description WHERE (Code=FIELD(Maintenance Scheme)));
                                                   CaptionML=[ENU=Maintenance Scheme Description;
                                                              SVE=Beskrivning av underh†llsschema];
                                                   Editable=No }
    { 40  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              SVE=Radnummer] }
    { 50  ;   ;Inspection Type     ;Code20        ;TableRelation="Plant Type Inspection Type"."Inspection Type" WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Inspection Type Description");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Inspection Type;
                                                              SVE=Inspektionstyp];
                                                   Editable=No }
    { 51  ;   ;Inspection Type Description;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Inspection Type".Description WHERE (Code=FIELD(Inspection Type)));
                                                   CaptionML=ENU=Inspection Type Description;
                                                   Editable=No }
    { 60  ;   ;Maintenance Year    ;Integer       ;OnValidate=BEGIN
                                                                IF "Maintenance Week" <> 0 THEN BEGIN
                                                                  CheckWeekNo("Maintenance Day", "Maintenance Week", "Maintenance Year");
                                                                  IF xRec."Maintenance Year" <> "Maintenance Year" THEN
                                                                    RecalcTheoreticalMaintDate();
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Maintenance Year;
                                                              SVE=Underh†ll, †r] }
    { 61  ;   ;Maintenance Week    ;Integer       ;OnValidate=BEGIN
                                                                CheckWeekNo("Maintenance Day", "Maintenance Week", "Maintenance Year");
                                                                IF xRec."Maintenance Week" <> "Maintenance Week" THEN
                                                                  RecalcTheoreticalMaintDate();
                                                              END;

                                                   CaptionML=[ENU=Maintenance Week;
                                                              SVE=Underh†ll, vecka] }
    { 62  ;   ;Maintenance Day     ;Option        ;OnValidate=BEGIN
                                                                IF (xRec."Maintenance Day" <> "Maintenance Day") THEN BEGIN
                                                                  IF ("Maintenance Day" IN [1..7]) THEN
                                                                    RecalcTheoreticalMaintDate()
                                                                  ELSE
                                                                    CalcMaintenanceDate;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Maintenance Day;
                                                              SVE=Underhållsdag];
                                                   OptionCaptionML=[ENU=" ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday,Weekday,Weekend";
                                                                    SVE=" ,Måndag,Tisdag,Onsdag,Torsdag,Fredag,Lördag,Söndag,Veckodag,Helg"];
                                                   OptionString=[ ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday,Weekday,Weekend] }
    { 70  ;   ;Theoretical Maintenance Date;Date  ;OnValidate=BEGIN
                                                                CalcMaintenanceDate;
                                                              END;

                                                   CaptionML=[ENU=Theoretical Maintenance Date;
                                                              SVE=Teoretiskt underh†llsdatum];
                                                   Editable=No }
    { 71  ;   ;Maintenance Date    ;Date          ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Maintenance Date;
                                                              SVE=Underh†llsdatum];
                                                   Editable=No }
    { 80  ;   ;Interval Maintenance;DateFormula   ;CaptionML=ENU=Interval Maintenance;
                                                   Editable=No }
    { 90  ;   ;Meter               ;Code10        ;TableRelation="Plant Meter Type"."Plant Meter" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                         Plant No.=FIELD(Plant No.));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Meter;
                                                   Editable=No }
    { 95  ;   ;Meter Reading Type  ;Code10        ;TableRelation="Plant Meter Type"."Plant Meter Type" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                              Plant No.=FIELD(Plant No.),
                                                                                                              Plant Meter=FIELD(Meter));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Meter Reading Type;
                                                   Editable=No }
    { 96  ;   ;Unit of Measure (Meter);Code10     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Meter Reading Type"."Unit of Measure" WHERE (Code=FIELD(Meter Reading Type)));
                                                   CaptionML=ENU=Unit of Measure (Meter);
                                                   Editable=No }
    { 100 ;   ;Interval Meter Reading;Decimal     ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Interval Meter Reading;
                                                   DecimalPlaces=0:0;
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 110 ;   ;Specific Meter Reading;Decimal     ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Interval (Meter Reading);
                                                   DecimalPlaces=0:0;
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   Description=Total;
                                                   Editable=No }
    { 120 ;   ;Firm Planned        ;Boolean       ;CaptionML=[ENU=Firm Planned;
                                                              SVE=Fast planerad] }
    { 130 ;   ;Cancelled           ;Boolean       ;OnValidate=BEGIN
                                                                IF Cancelled THEN BEGIN
                                                                  CALCFIELDS("Maintenance Proposal No.", "Service Order No.");
                                                                  IF "Maintenance Proposal No." <> '' THEN
                                                                    ERROR(Text001);
                                                                  IF "Service Order No." <> '' THEN
                                                                    ERROR(Text002);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Cancelled;
                                                              SVE=Avbruten] }
    { 140 ;   ;Comment             ;Text50        ;OnValidate=BEGIN
                                                                IF Comment <> '' THEN BEGIN
                                                                  CALCFIELDS("Maintenance Proposal No.", "Service Order No.");
                                                                  IF ("Maintenance Proposal No." = '') AND ("Service Order No." = '') AND NOT "Firm Planned" THEN
                                                                    MESSAGE(Text005);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Comment;
                                                              SVE=Kommentar] }
    { 150 ;   ;Current Location    ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Inventory".Location WHERE (Removed=CONST(No),
                                                                                                        Plant Type=FIELD(Plant Type),
                                                                                                        Plant No.=FIELD(Plant No.)));
                                                   TableRelation="Plant Location";
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Current Location;
                                                   Editable=No }
    { 160 ;   ;Total Meter Reading Maint.;Decimal ;OnValidate=BEGIN
                                                                IF "Total Meter Reading Maint." <> 0 THEN
                                                                  TESTFIELD(Meter);
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Total Meter Reading Maint.;
                                                   DecimalPlaces=0:0;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 200 ;   ;Maintenance Proposal No.;Code20    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Maint. Proposal Line"."Maintenance Proposal No." WHERE (Plant Type=FIELD(Plant Type),
                                                                                                                                     Plant No.=FIELD(Plant No.),
                                                                                                                                     Maintenance Scheme=FIELD(Maintenance Scheme),
                                                                                                                                     Maint. Arrangement Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Maintenance Proposal;
                                                              SVE=Underh†llsf”rslag];
                                                   Editable=No }
    { 210 ;   ;Planned Maintenance Date;Date      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Maint. Proposal Line"."Starting Date Maintenance" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                                                      Plant No.=FIELD(Plant No.),
                                                                                                                                      Maintenance Scheme=FIELD(Maintenance Scheme),
                                                                                                                                      Maint. Arrangement Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Planned Maintenance Date;
                                                              SVE=Planerat underh†llsdatum];
                                                   Editable=No }
    { 220 ;   ;Service Order No.   ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Maint. Proposal Line"."Service Order No." WHERE (Plant Type=FIELD(Plant Type),
                                                                                                                              Plant No.=FIELD(Plant No.),
                                                                                                                              Maintenance Scheme=FIELD(Maintenance Scheme),
                                                                                                                              Maint. Arrangement Line No.=FIELD(Line No.)));
                                                   OnLookup=VAR
                                                              ServiceOrder@1100526200 : Record 11012823;
                                                            BEGIN
                                                              CALCFIELDS("Service Company", "Service Order No.");
                                                              IF ("Service Company" <> '') OR ("Service Order No." = '') THEN
                                                                EXIT;
                                                              IF ServiceOrder.GET("Service Order No.") THEN
                                                                PAGE.RUN(PAGE::"Service-Order List", ServiceOrder);
                                                            END;

                                                   CaptionML=[ENU=Service Order No.;
                                                              SVE=Serviceordernr];
                                                   Editable=No }
    { 225 ;   ;Service Company     ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Maint. Proposal Line"."Service Company" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                                            Plant No.=FIELD(Plant No.),
                                                                                                                            Maintenance Scheme=FIELD(Maintenance Scheme),
                                                                                                                            Maint. Arrangement Line No.=FIELD(Line No.)));
                                                   CaptionML=ENU=Service Company;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Plant Type,Plant No.,Maintenance Scheme,Line No.;
                                                   Clustered=Yes }
    {    ;Plant Type,Plant No.,Maintenance Scheme,Maintenance Year,Maintenance Week,Maintenance Day }
    {    ;Plant Type,Plant No.,Maintenance Scheme,Theoretical Maintenance Date }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100526200 : TextConst 'ENU=Invalid Week No.;SVE=Ogiltigt veckonr';
      Text001@1100526201 : TextConst 'ENU=Maintenance Proposal already created, modification prohibited.;SVE=Underh†llsf”rslaget har redan skapats, „ndring f”rbjuden.';
      Text002@1100526202 : TextConst 'ENU=Service Order No. already created, modification prohibited.;SVE=Serviceordernr har redan skapats, „ndring f”rbjuden.';
      Text003@1100526203 : TextConst 'ENU=Contract Arrangement Line already exists;SVE=Rad f”r kontraktsarrangemang finns redan';
      Text005@1100528601 : TextConst 'ENU=Agreement not used or Firm Planned, comment may be erased.';

    LOCAL PROCEDURE CalcMaintenanceDate@1100526200();
    VAR
      Day@1100526200 : Integer;
      MaintenanceDay@1100526201 : Option;
    BEGIN
      "Maintenance Date" := "Theoretical Maintenance Date";
      IF "Theoretical Maintenance Date" = 0D THEN
        EXIT;
      Day := DATE2DWY("Theoretical Maintenance Date", 1);
      CASE "Maintenance Day" OF
        "Maintenance Day"::Monday.."Maintenance Day"::Sunday:
          MaintenanceDay := "Maintenance Day";
        "Maintenance Day"::Weekday:
          BEGIN
            IF Day = 6 THEN
              MaintenanceDay := 5;
            IF Day = 7 THEN BEGIN
              MaintenanceDay := 1;
              "Maintenance Date" := CALCDATE('+1W', "Maintenance Date");
            END;
          END;
        "Maintenance Day"::Weekend:
          BEGIN
            IF Day IN [1..3] THEN BEGIN
              "Maintenance Date" := CALCDATE('-1W', "Maintenance Date");
              MaintenanceDay := 7;
            END;
            IF Day IN [4..5] THEN BEGIN
              MaintenanceDay := 6;
            END;
          END;
      END;
      IF MaintenanceDay <> "Maintenance Day"::" " THEN
        "Maintenance Date" := DWY2DATE(MaintenanceDay, "Maintenance Week", "Maintenance Year");
    END;

    LOCAL PROCEDURE GetNextLineNo@1100526201() : Integer;
    VAR
      PlantMaintenanceArrangement@1100526200 : Record 11126146;
    BEGIN
      PlantMaintenanceArrangement.SETRANGE("Plant Type", "Plant Type");
      PlantMaintenanceArrangement.SETRANGE("Plant No.", "Plant No.");
      PlantMaintenanceArrangement.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
      IF PlantMaintenanceArrangement.FINDLAST THEN
        EXIT(PlantMaintenanceArrangement."Line No." + 10000);
      EXIT(10000);
    END;

    PROCEDURE CheckWeekNo@1100526203(IDay@1100526202 : Integer;IWeek@1100526208 : Integer;IYear@1100526207 : Integer);
    VAR
      lvDate@1100526203 : Date;
      lvYear@1100526204 : Integer;
      lvWeek@1100526205 : Integer;
    BEGIN
      IF IWeek = 0 THEN
        ERROR(Text000);
      IF NOT (IDay IN [1..7]) THEN
        IDay := 1;
      lvDate := DWY2DATE(IDay, IWeek, IYear);
      lvWeek := DATE2DWY(lvDate, 2);
      lvYear := DATE2DWY(lvDate, 3);
      IF (lvWeek <> IWeek) OR (lvYear <> IYear) THEN
        ERROR(Text000);
    END;

    PROCEDURE CheckModifyAllowed@1100526205();
    BEGIN
      CALCFIELDS("Maintenance Proposal No.", "Service Order No.");
      IF "Maintenance Proposal No." <> '' THEN
        ERROR(Text001);
      IF "Service Order No." <> '' THEN
        ERROR(Text002);
    END;

    PROCEDURE CheckUniqueDate@1100526202(ErrorMode@1100529000 : Boolean) : Boolean;
    VAR
      PlantMaintenanceArrangement@1100526203 : Record 11126146;
    BEGIN
      PlantMaintenanceArrangement.SETRANGE("Plant Type", "Plant Type");
      PlantMaintenanceArrangement.SETRANGE("Plant No.", "Plant No.");
      PlantMaintenanceArrangement.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
      PlantMaintenanceArrangement.SETRANGE("Theoretical Maintenance Date", "Theoretical Maintenance Date");
      PlantMaintenanceArrangement.SETFILTER("Line No.", '<>%1', "Line No.");
      IF NOT ErrorMode THEN
        EXIT(PlantMaintenanceArrangement.ISEMPTY);
      IF PlantMaintenanceArrangement.FINDFIRST THEN
        FIELDERROR("Maintenance Week", Text003);
    END;

    PROCEDURE RecalcTheoreticalMaintDate@1100526204();
    BEGIN
      "Firm Planned" := TRUE;
      IF "Maintenance Day" IN ["Maintenance Day"::Monday.."Maintenance Day"::Sunday] THEN
        "Theoretical Maintenance Date" := DWY2DATE("Maintenance Day", "Maintenance Week", "Maintenance Year")
      ELSE
        "Theoretical Maintenance Date" := DWY2DATE(1, "Maintenance Week", "Maintenance Year");
      CalcMaintenanceDate;
    END;

    PROCEDURE DrillDownMaintenanceProposal@1100529001(CardMode@1100529000 : Boolean);
    VAR
      PlantMaintProposalHeader@1100529001 : Record 11126147;
    BEGIN
      CALCFIELDS("Maintenance Proposal No.");
      PlantMaintProposalHeader.SETRANGE("No.", "Maintenance Proposal No.");
      IF CardMode AND ("Maintenance Proposal No." <> '') THEN BEGIN
        IF PlantMaintProposalHeader.GET("Maintenance Proposal No.") THEN BEGIN
          PAGE.RUNMODAL(PAGE::"Plant Maintenance Proposal", PlantMaintProposalHeader);
          EXIT;
        END;
      END;
      PAGE.RUNMODAL(0, PlantMaintProposalHeader);
    END;

    PROCEDURE DrillDownServiceOrder@1100529002();
    VAR
      PlantMaintProposalLine@1100529000 : Record 11126148;
    BEGIN
      CALCFIELDS("Service Company", "Service Order No.");
      IF "Service Company" <> '' THEN
        EXIT;
      PlantMaintProposalLine.SETCURRENTKEY("Plant Type", "Plant No.", "Maintenance Scheme", "Maint. Arrangement Line No.");
      PlantMaintProposalLine.SETRANGE("Plant Type", "Plant Type");
      PlantMaintProposalLine.SETRANGE("Plant No.",  "Plant No.");
      PlantMaintProposalLine.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
      PlantMaintProposalLine.SETRANGE("Maint. Arrangement Line No.", "Line No.");
      IF PlantMaintProposalLine.FINDFIRST THEN
        PlantMaintProposalLine.DrillDownServiceOrder(FALSE);
    END;

    BEGIN
    {
      Copied from Table 'Service Contract Arrangement' (T11071705).
    }
    END.
  }
}

