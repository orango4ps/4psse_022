OBJECT Report 83800 Expected Revenue on Project/SO
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=GAP-02;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Margin on Project/Service Order;
               SVE=Marginal p† projekt/serviceorder];
    ProcessingOnly=Yes;
    OnPostReport=VAR
                   GeneralJournalPage@1101285000 : Page 39;
                   GenJournalLine@1101285001 : Record 81;
                   GenJnlManagement@1101285002 : Codeunit 230;
                 BEGIN
                   COMMIT;
                   GenJournalLine.SETRANGE("Journal Batch Name", Journal);
                   GenJournalLine.SETRANGE("Journal Template Name", Template);
                   IF GenJournalLine.FINDSET(FALSE) THEN
                     GeneralJournalPage.SETRECORD(GenJournalLine);

                   GeneralJournalPage.RUNMODAL;
                 END;

  }
  DATASET
  {
    { 1100285100;;DataItem;                  ;
               DataItemTable=Table11072003;
               OnPreDataItem=BEGIN
                               gProjNoFilter          := Job.GETFILTER("No.");
                               gProjTypeFilter        := Job.GETFILTER("Project Type");
                               gProjGlobalDim1Filter  := Job.GETFILTER("Global Dimension 1 Code");
                             END;

               ReqFilterFields=No.,Project Type,Global Dimension 1 Code }

    { 1100285101;;DataItem;                  ;
               DataItemTable=Table11012823;
               OnPreDataItem=BEGIN
                               gServiceNoFilter         := "Service Order".GETFILTER("No.");
                               gServiceTypeFilter       := "Service Order".GETFILTER("Service Type");
                               gServiceGlobalDim1Filter := "Service Order".GETFILTER("Global Dimension 1 Code");
                             END;

               ReqFilterFields=No.,Service Type,Global Dimension 1 Code }

    { 1101285003;;DataItem;                  ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnAfterGetRecord=VAR
                                  TotalsProjectCostPlusEntry@1101285000 : Query 83803;
                                  TotalsSOCostPlusEntry@1101285004 : Query 83802;
                                  Job@1101285001 : Record 11072003;
                                  ServiceOrder@1101285005 : Record 11012823;
                                  TimeA@1101285002 : Time;
                                  i@1101285003 : Integer;
                                  NoSeries@1101285006 : Codeunit 396;
                                  GenJourlTemplate@1101285007 : Record 80;
                                BEGIN

                                   IF GenJourlTemplate.GET(Template) THEN
                                    GLENoSerie := NoSeries.GetNextNo(GenJourlTemplate."No. Series", WORKDATE, FALSE);

                                   WITH TotalsProjectCostPlusEntry DO BEGIN
                                    IF gProjNoFilter <> '' THEN
                                      SETFILTER(No_Filter , gProjNoFilter);

                                    IF gProjTypeFilter <> '' THEN
                                      SETFILTER(ProjectStatus_Filter, gProjTypeFilter);

                                    IF gProjGlobalDim1Filter <> '' THEN
                                      SETFILTER(GlobalDim1_Filter, gProjGlobalDim1Filter);


                                    SETFILTER(ProjectStatus_Filter, '%1|%2|%3|%4', Job."Project Status"::Estimation, Job."Project Status"::Preparation,Job."Project Status"::Production,Job."Project Status"::"Technical Finished");
                                    SETFILTER(CreationDate_Filter, '..%1', ToDate);
                                    OPEN;
                                    WHILE READ DO BEGIN
                                      InsertGenJourLine(ToDate, CostCenter, Sum_Sales_Amount_LCY, No, '');
                                      InsertGenJourLine(CALCDATE('+1D',ToDate), CostCenter, Sum_Sales_Amount_LCY * -1, No, '');
                                    END;
                                    CLOSE;
                                   END;

                                   WITH TotalsSOCostPlusEntry DO BEGIN
                                    IF gServiceNoFilter <> '' THEN
                                      SETFILTER(No_Filter, gServiceNoFilter);

                                    IF gServiceTypeFilter <> '' THEN
                                      SETFILTER(ServiceType_Filter, gServiceTypeFilter);

                                    IF gServiceGlobalDim1Filter <> '' THEN
                                      SETFILTER(GlobalDim1_Filter, gServiceGlobalDim1Filter);

                                    SETFILTER(Status_Filter, '%1|%2|%3', ServiceOrder.Status::Open, ServiceOrder.Status::"In Process", ServiceOrder.Status::"Technical Finished");
                                    SETFILTER(CreationDate_Filter, '..%1', ToDate);
                                    OPEN;
                                    WHILE READ DO BEGIN
                                      InsertGenJourLine(ToDate, CostCenter, Sum_Invoice_Price_LCY, '',No);
                                      InsertGenJourLine(CALCDATE('+1D',ToDate), CostCenter, Sum_Invoice_Price_LCY * -1, '', No);
                                    END;
                                    CLOSE;
                                   END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   ToDate := WORKDATE;
                 END;

    }
    CONTROLS
    {
      { 1   ;    ;Container ;
                  Name=Job;
                  ContainerType=ContentArea }

      { 5   ;1   ;Field     ;
                  CaptionML=[DAN=Indtil dato;
                             ENU=To Date;
                             NOR=Inntil dato;
                             SVE=T.o.m. datum];
                  NotBlank=Yes;
                  SourceExpr=ToDate }

      { 1100525000;1;Field  ;
                  CaptionML=[DAN=Konto;
                             ENU=Account;
                             NOR=Konto;
                             SVE=Konto];
                  NotBlank=Yes;
                  SourceExpr=Account;
                  OnLookup=BEGIN
                             CLEAR(AccRec);
                             AccPage.LOOKUPMODE(TRUE);
                             IF AccPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               AccPage.GETRECORD(AccRec);
                               Account := AccRec."No.";
                             END;
                           END;
                            }

      { 2   ;1   ;Field     ;
                  CaptionML=[DAN=Modkonto;
                             ENU=Bal. Account;
                             NOR=Motkonto;
                             SVE=Motkonto];
                  NotBlank=Yes;
                  SourceExpr=BalAccount;
                  OnLookup=BEGIN
                             CLEAR(AccRec);
                             AccPage.LOOKUPMODE(TRUE);
                             IF AccPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               AccPage.GETRECORD(AccRec);
                               BalAccount := AccRec."No.";
                             END;
                           END;
                            }

      { 4   ;1   ;Field     ;
                  CaptionML=[DAN=Skabelon;
                             ENU=Template;
                             NOR=Mal;
                             SVE=Mall];
                  NotBlank=Yes;
                  SourceExpr=Template;
                  OnLookup=BEGIN
                             CLEAR(GenJourBatchRec);
                             CLEAR(GenJourBatchPage);

                             GenJourBatchPage.LOOKUPMODE(TRUE);
                             IF GenJourBatchPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               GenJourBatchPage.GETRECORD(GenJourBatchRec);
                               Journal := GenJourBatchRec.Name;
                               Template := GenJourBatchRec."Journal Template Name";
                             END;
                           END;
                            }

      { 3   ;1   ;Field     ;
                  CaptionML=[DAN=Kladde;
                             ENU=Journal;
                             NOR=Kladd;
                             SVE=Journal];
                  SourceExpr=Journal;
                  Visible=TRUE }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      AccRec@1101285010 : Record 15;
      AccPage@1101285009 : Page 18;
      Journal@1101285002 : Code[10];
      ToDate@1101285001 : Date;
      NextLineNo@1101285011 : Integer;
      LastNoFound@1101285012 : Boolean;
      Account@1101285014 : Code[20];
      BalAccount@1101285013 : Code[20];
      GLENoSerie@1101285016 : Code[20];
      Template@1101285017 : Code[10];
      GenJourBatchPage@1101285000 : Page 251;
      GenJourBatchRec@1101285003 : Record 232;
      TEXT001@1101285004 : TextConst 'DAN="Forventet oms‘tning. Projekt: ";ENU="Expected revenue. Project: ";NOR="Forventet inntekt. Prosjekt: ";SVE="F”rv„ntade int„kter. Projekt: "';
      TEXT002@1101285005 : TextConst 'DAN="Forventet oms‘tning. Serviceordre: ";ENU="Expected revenue. Service Order: ";NOR="Forventet inntekt. Serviceordre: ";SVE="F”rv„ntade int„kter. Serviceorder: "';
      gProjNoFilter@1100285100 : Text;
      gProjTypeFilter@1100285101 : Text;
      gProjGlobalDim1Filter@1100285102 : Text;
      gServiceNoFilter@1100285103 : Text;
      gServiceTypeFilter@1100285104 : Text;
      gServiceGlobalDim1Filter@1100285105 : Text;

    LOCAL PROCEDURE InsertGenJourLine@1101285001(PostingDate@1101285007 : Date;CostCenter@1101285015 : Code[20];Amount@1101285016 : Decimal;ProjectNo@1101285001 : Code[20];ServiceOrderNo@1101285000 : Code[20]);
    VAR
      GenLine@1101285012 : Record 81;
    BEGIN
      IF LastNoFound THEN BEGIN
        NextLineNo += 10000;
      END ELSE BEGIN
        NextLineNo := 10000;
        GenLine.SETRANGE("Journal Template Name",Template);
        GenLine.SETRANGE("Journal Batch Name",Journal);
        IF GenLine.FINDLAST THEN
          NextLineNo := GenLine."Line No." + 10000;
        LastNoFound := TRUE;
      END;

      GenLine.INIT;
      GenLine.VALIDATE("Journal Template Name",Template);
      GenLine.VALIDATE("Journal Batch Name",Journal);
      GenLine.VALIDATE("Line No.",NextLineNo);
      GenLine."Posting Date" := PostingDate;
      GenLine."Document No." := GLENoSerie;
      GenLine.VALIDATE("Shortcut Dimension 1 Code",CostCenter);
      GenLine.VALIDATE("Account Type",GenLine."Account Type"::"G/L Account");
      GenLine.VALIDATE("Account No.",Account);

      IF ProjectNo <> '' THEN
        GenLine.VALIDATE(Description, TEXT001 + ProjectNo)
      ELSE
        GenLine.VALIDATE(Description, TEXT002 + ServiceOrderNo);

      GenLine.VALIDATE(Amount, Amount);
      GenLine.VALIDATE("Bal. Account Type",GenLine."Bal. Account Type"::"G/L Account");
      GenLine.VALIDATE("Bal. Account No.",BalAccount);

      GenLine.INSERT(TRUE);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

