OBJECT Page 8614 Config. Package Card
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Config. Package Card;
               NOR=Konfigurer pakkekort;
               SVE=Konfig. paketkort];
    SourceTable=Table8623;
    PageType=Document;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Manage,Package;
                                NOR=Ny,Prosess,Rapport,Administrer,Pakke;
                                SVE=Ny,Process,Rapport,Hantera,Paket];
    OnOpenPage=VAR
                 ConfigPackage@1000 : Record 8623;
               BEGIN
                 AditionalOptionsEnabled := ConfigPackage.WRITEPERMISSION;
               END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS("No. of Errors");
                       IsErrorTabVisible := "No. of Errors" > 0;
                     END;

    ActionList=ACTIONS
    {
      { 11      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 24      ;1   ;ActionGroup;
                      CaptionML=[ENU=Package;
                                 NOR=Pakning;
                                 SVE=Paket] }
      { 23      ;2   ;Action    ;
                      Name=ExportPackage;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Export Package;
                                 NOR=Eksporter pakke;
                                 SVE=Exportera paket];
                      ToolTipML=[ENU=Create a .rapidstart file that which delivers the package contents in a compressed format. Configuration questionnaires, configuration templates, and the configuration worksheet are added to the package automatically unless you specifically decide to exclude them.;
                                 NOR=Opprett en .rapidstart-fil som leverer pakkeinnholdet i et komprimert format. Konfigurasjonsspõrreskjemaer, konfigurasjonsmaler og konfigurasjonsforslaget legges til i pakken automatisk med mindre du spesifikt bestemmer deg for Ü utelukke dem.;
                                 SVE=Skapa en .rapidstart-fil som levererar paketinnehÜllet i ett komprimerat format. KonfigurationsfrÜgeformulÑr, konfigurationsmallar och konfigurationsfîrslag lÑggs till paketet automatiskt, sÜvida du inte vÑljer att utesluta dem.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=AditionalOptionsEnabled;
                      PromotedIsBig=Yes;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD(Code);
                                 ConfigXMLExchange.ExportPackage(Rec);
                               END;
                                }
      { 22      ;2   ;Action    ;
                      Name=ImportPackage;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Import Package;
                                 NOR=Importer pakke;
                                 SVE=Importera paket];
                      ToolTipML=[ENU=Import a .rapidstart package file.;
                                 NOR=Importer en .rapidstart-pakkefil.;
                                 SVE=Importera en .rapidstart-paketfil.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=AditionalOptionsEnabled;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ConfigXMLExchange.ImportPackageXMLFromClient;
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=ExportToExcel;
                      CaptionML=[ENU=Export to Excel;
                                 NOR=Eksporter til Excel;
                                 SVE=Exportera till Excel];
                      ToolTipML=[ENU=Export the data in the package to Excel.;
                                 NOR=Eksporter dataene i pakken til Excel.;
                                 SVE=Exportera data i paketet till Excel.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=AditionalOptionsEnabled;
                      Image=ExportToExcel;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ConfigPackageTable@1000 : Record 8613;
                                 ConfigExcelExchange@1001 : Codeunit 8618;
                                 ConfirmManagement@1002 : Codeunit 27;
                               BEGIN
                                 TESTFIELD(Code);

                                 ConfigPackageTable.SETRANGE("Package Code",Code);
                                 IF ConfirmManagement.ConfirmProcess(STRSUBSTNO(Text004,Code,ConfigPackageTable.COUNT),TRUE) THEN
                                   ConfigExcelExchange.ExportExcelFromTables(ConfigPackageTable);
                               END;
                                }
      { 20      ;2   ;Action    ;
                      Name=ImportFromExcel;
                      CaptionML=[ENU=Import from Excel;
                                 NOR=Importer fra Excel;
                                 SVE=Importera frÜn Excel];
                      ToolTipML=[ENU=Begin the migration of legacy data.;
                                 NOR=Start overfõringen av eldre data.;
                                 SVE=Bîrja migreringen av bakÜtkompatibla data.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=AditionalOptionsEnabled;
                      Image=ImportExcel;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ConfigExcelExchange@1000 : Codeunit 8618;
                               BEGIN
                                 ConfigExcelExchange.ImportExcelFromSelectedPackage(Code);
                               END;
                                }
      { 26      ;2   ;Action    ;
                      Name=ShowError;
                      CaptionML=[ENU=Show Errors;
                                 NOR=Vis feil;
                                 SVE=Visa fel];
                      ToolTipML=[ENU=Open the list of package errors.;
                                 NOR=èpne listen over pakkefeil.;
                                 SVE=ôppna listan med paketfel.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsErrorTabVisible;
                      Image=ErrorLog;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 ShowErrors;
                               END;
                                }
      { 19      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NOR=F&unksjoner;
                                 SVE=F&unktioner] }
      { 17      ;2   ;Action    ;
                      Name=GetTables;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Tables;
                                 NOR=Hent tabeller;
                                 SVE=HÑmta tabeller];
                      ToolTipML=[ENU=Select tables that you want to add to the configuration package.;
                                 NOR=Velg tabellene du vil legge til i konfigurasjonspakken.;
                                 SVE=VÑlj tabellerna som du vill lÑgga till i konfigurationspaketet.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=GetLines;
                      PromotedCategory=New;
                      OnAction=VAR
                                 GetPackageTables@1000 : Report 8616;
                               BEGIN
                                 CurrPage.SAVERECORD;
                                 GetPackageTables.Set(Code);
                                 GetPackageTables.RUNMODAL;
                                 CLEAR(GetPackageTables);
                               END;
                                }
      { 15      ;2   ;Action    ;
                      Name=ApplyPackage;
                      CaptionML=[ENU=Apply Package;
                                 NOR=Bruk pakke;
                                 SVE=Koppla paket];
                      ToolTipML=[ENU=Import the configuration package and apply the package database data at the same time.;
                                 NOR=Importer konfigurasjonspakken og bruk dataene i pakkedatabasen samtidig.;
                                 SVE=Importera konfigurationspaketet och tillÑmpa paketdatabasdata pÜ samma gÜng.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Apply;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConfigPackageTable@1002 : Record 8613;
                                 ConfigPackageMgt@1000 : Codeunit 8611;
                                 ConfirmManagement@1001 : Codeunit 27;
                               BEGIN
                                 TESTFIELD(Code);
                                 IF ConfirmManagement.ConfirmProcess(STRSUBSTNO(Text003,Code),TRUE) THEN BEGIN
                                   ConfigPackageTable.SETRANGE("Package Code",Code);
                                   ConfigPackageMgt.ApplyPackage(Rec,ConfigPackageTable,TRUE);
                                 END;
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=CopyPackage;
                      CaptionML=[ENU=Copy Package;
                                 NOR=Kopier pakke;
                                 SVE=Kopiera paket];
                      ToolTipML=[ENU=Copy an existing configuration package to create a new package based on the same content.;
                                 NOR=Kopier en eksisterende konfigurasjonspakke for Ü opprette en ny pakke basert pÜ det samme innholdet.;
                                 SVE=Kopiera ett befintligt konfigurationspaket fîr att skapa ett nytt paket baserat pÜ samma innehÜll.];
                      ApplicationArea=#Basic,#Suite;
                      Image=CopyWorksheet;
                      OnAction=VAR
                                 CopyPackage@1000 : Report 8615;
                               BEGIN
                                 TESTFIELD(Code);
                                 CopyPackage.Set(Rec);
                                 CopyPackage.RUNMODAL;
                                 CLEAR(CopyPackage);
                               END;
                                }
      { 8       ;2   ;Action    ;
                      Name=ValidatePackage;
                      CaptionML=[ENU=Validate Package;
                                 NOR=Valider pakke;
                                 SVE=Validera paket];
                      ToolTipML=[ENU=Determine if you have introduced errors, such as not including tables that the configuration relies on.;
                                 NOR=FastslÜ om du har introdusert feil, for eksempel at tabeller som konfigurasjonen er avhengig av, ikke er inkludert.;
                                 SVE=Ta reda pÜ om du har orsakat fel, till exempel inte tagit med tabeller som konfigurationen Ñr beroende av.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CheckRulesSyntax;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConfigPackageTable@1000 : Record 8613;
                                 TempConfigPackageTable@1001 : TEMPORARY Record 8613;
                                 ConfigPackageMgt@1002 : Codeunit 8611;
                                 ConfirmManagement@1003 : Codeunit 27;
                               BEGIN
                                 IF ConfirmManagement.ConfirmProcess(STRSUBSTNO(Text002,"Package Name"),TRUE) THEN BEGIN
                                   ConfigPackageTable.SETRANGE("Package Code",Code);
                                   ConfigPackageMgt.ValidatePackageRelations(ConfigPackageTable,TempConfigPackageTable,TRUE);
                                 END;
                               END;
                                }
      { 6       ;2   ;Action    ;
                      Name=ExportToTranslation;
                      CaptionML=[ENU=Export to Translation;
                                 NOR=Eksporter til oversettelse;
                                 SVE=Exportera till îversÑttning];
                      ToolTipML=[ENU=Export the data to a file that is suited for translation.;
                                 NOR=Eksporter dataene til en fil som passer for oversettelse.;
                                 SVE=Exportera data till en fil som passar fîr îversÑttning.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=FALSE;
                      Image=Export;
                      OnAction=VAR
                                 ConfigPackageTable@1001 : Record 8613;
                                 ConfirmManagement@1000 : Codeunit 27;
                               BEGIN
                                 TESTFIELD(Code);

                                 ConfigXMLExchange.SetAdvanced(TRUE);
                                 ConfigPackageTable.SETRANGE("Package Code",Code);
                                 IF ConfirmManagement.ConfirmProcess(STRSUBSTNO(Text004,Code,ConfigPackageTable.COUNT),TRUE) THEN
                                   ConfigXMLExchange.ExportPackageXML(ConfigPackageTable,'');
                               END;
                                }
      { 12      ;2   ;Action    ;
                      Name=ProcessData;
                      CaptionML=[ENU=Process Data;
                                 NOR=Behandle data;
                                 SVE=Bearbeta data];
                      ToolTipML=[ENU=Process data in the configuration package before you apply it to the database. For example, convert dates and decimals to the format required by the regional settings on a user's computer and remove leading/trailing spaces or special characters.;
                                 NOR=Behandle data i konfigurasjonspakken fõr du bruker dem i databasen. Konverter for eksempel data og desimaler til formatet som kreves av regionale innstillingene pÜ datamaskinen til en bruker, og fjerne innledende/etterfõlgende mellomrom eller spesialtegn.;
                                 SVE=Bearbeta data i konfigurationspaketet innan du tillÑmpar det pÜ databasen. Konvertera till exempel datum och decimaler till det format som krÑvs fîr de regionala instÑllningarna pÜ anvÑndarens dator och ta bort inledande/efterfîljande blanksteg eller specialtecken.];
                      ApplicationArea=#Basic,#Suite;
                      Image=DataEntry;
                      OnAction=BEGIN
                                 ProcessPackageTablesWithDefaultProcessingReport;
                                 ProcessPackageTablesWithCustomProcessingReports;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=AllmÑnt];
                GroupType=Group }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the configuration package.;
                           NOR=Angir en kode for konfigurasjonspakken.;
                           SVE=Anger en kod fîr konfigurationspaketet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Code;
                ShowMandatory=TRUE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the package.;
                           NOR=Angir navnet pÜ pakken.;
                           SVE=Anger paketnamnet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Package Name";
                ShowMandatory=TRUE }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the version of the product that you are configuring. You can use this field to help differentiate among various versions of a solution.;
                           NOR=Angir versjonen av produktet du konfigurerer. Du kan bruke dette feltet til Ü skille mellom ulike versjoner av en lõsning.;
                           SVE=Anger versionen av produkten som du konfigurerar. Du kan anvÑnda det hÑr fÑltet fîr att lÑttare kunna skilja pÜ olika versioner av en lîsning.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Product Version" }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the Windows language to use for the configuration package. Choose the field and select a language ID from the list.;
                           NOR=Angir ID-en for Windows-sprÜket som skal brukes for konfigurasjonspakken. Velg feltet, og velg en sprÜk-ID fra listen.;
                           SVE=Anger id:t fîr Windows-sprÜket som ska anvÑndas fîr konfigurationspaketet. VÑlj fÑltet och vÑlj sedan ett sprÜk-id i listan.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Language ID" }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the order in which the package is to be processed.;
                           NOR=Angir ordren som pakken skal behandles i.;
                           SVE=Anger i vilken ordning paketet ska bearbetas.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Processing Order" }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether to exclude configuration tables from the package. Select the check box to exclude these types of tables.;
                           NOR=Angir om du skal utelate konfigurasjonstabeller fra pakken. Merk avmerkingsboksen for Ü utelate disse tabelltypene.;
                           SVE=Anger om du vill utesluta konfigurationstabeller frÜn paketet. Markera kryssrutan om du vill utesluta den hÑr typen av tabeller.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Exclude Config. Tables" }

    { 25  ;1   ;Group     ;
                CaptionML=[ENU=Errors;
                           NOR=Feil;
                           SVE=Fel];
                Visible=IsErrorTabVisible;
                GroupType=Group }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the count of package errors. One line reflects one field of a record that failed validation.;
                           NOR=Angir antall pakkefeil. ên linje gjenspeiler ett felt i en post som valideringen mislyktes for.;
                           SVE=Anger antalet paketfel. En rad motsvarar ett fÑlt i en post som inte kunde valideras.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No. of Errors";
                Style=Unfavorable;
                StyleExpr=TRUE }

    { 10  ;1   ;Part      ;
                ApplicationArea=#Basic,#Suite;
                SubPageView=SORTING(Package Code,Table ID);
                SubPageLink=Package Code=FIELD(Code);
                PagePartID=Page8625;
                PartType=Page }

  }
  CODE
  {
    VAR
      ConfigXMLExchange@1001 : Codeunit 8614;
      Text002@1005 : TextConst 'ENU=Validate package %1?;NOR=Validere pakken %1?;SVE=Vill du validera paketet %1?';
      Text003@1004 : TextConst 'ENU=Apply data from package %1?;NOR=Bruke data fra pakken %1?;SVE=Vill du koppla data frÜn paketet %1?';
      Text004@1003 : TextConst 'ENU=Export package %1 with %2 tables?;NOR=Eksportere pakken %1 med %2 tabeller?;SVE=Vill du exportera paketet %1 med %2 tabeller?';
      AditionalOptionsEnabled@1000 : Boolean;
      IsErrorTabVisible@1002 : Boolean;

    LOCAL PROCEDURE ProcessPackageTablesWithDefaultProcessingReport@2();
    VAR
      ConfigPackageTable@1000 : Record 8613;
    BEGIN
      ConfigPackageTable.SETRANGE("Package Code",Code);
      ConfigPackageTable.SETRANGE("Processing Report ID",0);
      IF NOT ConfigPackageTable.ISEMPTY THEN
        REPORT.RUNMODAL(REPORT::"Config. Package - Process",FALSE,FALSE,ConfigPackageTable);
    END;

    LOCAL PROCEDURE ProcessPackageTablesWithCustomProcessingReports@3();
    VAR
      ConfigPackageTable@1000 : Record 8613;
    BEGIN
      ConfigPackageTable.SETRANGE("Package Code",Code);
      ConfigPackageTable.SETFILTER("Processing Report ID",'<>0',0);
      IF ConfigPackageTable.FINDSET THEN
        REPEAT
          REPORT.RUNMODAL(ConfigPackageTable."Processing Report ID",FALSE,FALSE,ConfigPackageTable)
        UNTIL ConfigPackageTable.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

