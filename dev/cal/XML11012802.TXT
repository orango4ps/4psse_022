OBJECT XMLport 11012802 Export Appointment Blocks
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Export Appointment Blocks;
    Direction=Export;
    Format/Evaluate=XML Format/Evaluate;
    UseDefaultNamespace=Yes;
  }
  ELEMENTS
  {
    { [{7975CDF4-54DC-4AE4-BC18-7914A0343A20}];  ;BlocksRoot          ;Element ;Text     }

    { [{DAD6D1C9-4476-4A4C-AF28-58BEC8F591A7}];1 ;ServiceOrderNo      ;Element ;Text    ;
                                                  VariableName=ServiceOrderNo }

    { [{8610FA77-CEAB-4CDF-8034-F54563C119EC}];1 ;Blocks              ;Element ;Table   ;
                                                  SourceTable=Table2000000026;
                                                  Export::OnPreXMLItem=BEGIN
                                                                         Integer.SETRANGE(Number, 1, TmpServiceAppointmentBlock.COUNT);
                                                                       END;

                                                  Export::OnAfterGetRecord=BEGIN
                                                                             IF Integer.Number = 1 THEN
                                                                               TmpServiceAppointmentBlock.FINDSET
                                                                             ELSE
                                                                               TmpServiceAppointmentBlock.NEXT;
                                                                             TmpServiceAppointmentBlock.CALCFIELDS("Planning Agreement Description");

                                                                             AppointmentDate := FORMAT(TmpServiceAppointmentBlock."Appointment Date", 0, 9);
                                                                             BlockCode := TmpServiceAppointmentBlock."Planning Agreement Code";
                                                                             BlockDescription := TmpServiceAppointmentBlock."Planning Agreement Description";
                                                                             BlockStart := FORMAT(TmpServiceAppointmentBlock."Block Start", 0, 9);
                                                                             BlockEnd := FORMAT(TmpServiceAppointmentBlock."Block End", 0, 9);
                                                                             BlockAvailable := FORMAT(TmpServiceAppointmentBlock.Available, 0, 9);
                                                                           END;
                                                                            }

    { [{D017957C-E0FC-40EC-9A53-C3D5F7DD3648}];2 ;AppointmentDate     ;Element ;Text    ;
                                                  VariableName=AppointmentDate;
                                                  DataType=Date }

    { [{85A3DFE4-634F-4D53-9FE5-66E46A3806E4}];2 ;BlockCode           ;Element ;Text    ;
                                                  VariableName=BlockCode;
                                                  DataType=OemCode }

    { [{F2324711-7774-4ECC-8684-251A753598A4}];2 ;BlockDescription    ;Element ;Text    ;
                                                  VariableName=BlockDescription;
                                                  DataType=OemText }

    { [{68883E36-17AE-46EE-9350-2A280E5E41F3}];2 ;BlockStart          ;Element ;Text    ;
                                                  VariableName=BlockStart;
                                                  DataType=Time }

    { [{646F877F-9C0C-4D4D-A69C-C1581E3A5038}];2 ;BlockEnd            ;Element ;Text    ;
                                                  VariableName=BlockEnd;
                                                  DataType=Time }

    { [{533DEA98-1246-4F5C-99F1-36BC3C5A5743}];2 ;BlockAvailable      ;Element ;Text    ;
                                                  VariableName=BlockAvailable;
                                                  DataType=Boolean }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      TmpServiceAppointmentBlock@1100525000 : TEMPORARY Record 11071965;

    PROCEDURE SetParams@1100528600(IServiceOrderNo@1100528600 : Code[20];ISeekDate@1100528603 : Date);
    VAR
      ServiceOrder@1100528602 : Record 11012823;
      ServiceAppointmentBlock@1100525000 : Record 11071965;
      PlanningAgreement@1100525001 : Record 11071729;
      AppointmentManagement@1100528604 : Codeunit 11012865;
    BEGIN
      ServiceOrderNo := IServiceOrderNo;
      ServiceOrder.GET(ServiceOrderNo);
      AppointmentManagement.RebuildSOAvailAppointmBlocks(IServiceOrderNo);
      ServiceAppointmentBlock.SETRANGE(Type, ServiceAppointmentBlock.Type::"Service Order");
      ServiceAppointmentBlock.SETRANGE(Code, ServiceOrderNo);
      ServiceAppointmentBlock.SETRANGE("Appointment Date", ISeekDate);
      ServiceAppointmentBlock.SETFILTER("Planning Agreement Code", '<>%1', '');
      IF ServiceAppointmentBlock.FINDSET THEN BEGIN
        REPEAT
          TmpServiceAppointmentBlock := ServiceAppointmentBlock;
          TmpServiceAppointmentBlock.INSERT;
        UNTIL ServiceAppointmentBlock.NEXT = 0;
      END ELSE BEGIN // SPT must have a set of appointment blocks
        PlanningAgreement.SETFILTER(Type, '%1|%2', PlanningAgreement.Type::"Appointment Letter", PlanningAgreement.Type::Both);
        IF PlanningAgreement.FINDSET THEN
          REPEAT
            TmpServiceAppointmentBlock.Type := TmpServiceAppointmentBlock.Type::"Service Order";
            TmpServiceAppointmentBlock.Code := IServiceOrderNo;
            TmpServiceAppointmentBlock."Appointment Date" := ISeekDate;
            TmpServiceAppointmentBlock."Planning Agreement Code" := PlanningAgreement.Code;
            TmpServiceAppointmentBlock."Block Start" := PlanningAgreement."Starting Time";
            TmpServiceAppointmentBlock."Block End" := PlanningAgreement."Ending Time";
            TmpServiceAppointmentBlock.Available := FALSE;
            TmpServiceAppointmentBlock.INSERT;
          UNTIL PlanningAgreement.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

