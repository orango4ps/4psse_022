OBJECT Table 11020687 Prognosis Line Specification
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               NullGuid@11136550 : GUID;
             BEGIN
               IF "Line No." = 0 THEN
                 "Line No." := FindNextLineNo;

               IF "Reference No." = NullGuid THEN
                 "Reference No." := CREATEGUID;

               UpdatePrognosisLine(Quantity, Amount);
             END;

    OnModify=BEGIN
               UpdatePrognosisLine(Quantity - xRec.Quantity, Amount - xRec.Amount);
             END;

    OnDelete=BEGIN
               UpdatePrognosisLine(-Quantity, -Amount);
             END;

    CaptionML=[ENU=Prognosis Line Specification;
               NOR=Spesifikasjoner for prognoserader;
               SVE=Specifikationer f”r prognosrader];
    LookupPageID=Page11125030;
    DrillDownPageID=Page11125030;
  }
  FIELDS
  {
    { 1   ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes }
    { 2   ;   ;Prognosis Date      ;Date          ;TableRelation=Prognosis."Prognosis Date" WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Prognosis Date;
                                                              NOR=Prognosedato;
                                                              SVE=Prognosdatum];
                                                   NotBlank=Yes }
    { 3   ;   ;Cost Type           ;Option        ;TableRelation=IF (Prognosis Level=FILTER(<>Element)) "Prognosis Line"."Cost Type" WHERE (Project No.=FIELD(Project No.),
                                                                                                                                            Prognosis Date=FIELD(Prognosis Date));
                                                   CaptionML=[ENU=Cost Type;
                                                              NOR=Kosttype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                                    NOR=Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse,Inntekt;
                                                                    SVE=Arbetskraft,Material,Underentreprenad,Maskin,Diverse,Int„kt];
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry,Revenue }
    { 4   ;   ;Element             ;Code20        ;TableRelation=IF (Prognosis Level=FILTER(<>Element)) "Prognosis Line".Element WHERE (Project No.=FIELD(Project No.),
                                                                                                                                        Prognosis Date=FIELD(Prognosis Date),
                                                                                                                                        Cost Type=FIELD(Cost Type));
                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 5   ;   ;Cost Object         ;Code20        ;TableRelation=IF (Prognosis Level=FILTER(<>Element)) "Prognosis Line"."Cost Object" WHERE (Project No.=FIELD(Project No.),
                                                                                                                                              Prognosis Date=FIELD(Prognosis Date),
                                                                                                                                              Cost Type=FIELD(Cost Type),
                                                                                                                                              Element=FIELD(Element))
                                                                                                                                              ELSE IF (Prognosis Level=CONST(Element)) "Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                                                                                                                                                     Project Filter=FIELD(Project No.));
                                                   OnValidate=VAR
                                                                GeneralLedgerSetup@1100529701 : Record 98;
                                                                DimensionValue@1100529702 : Record 349;
                                                              BEGIN
                                                                GeneralLedgerSetup.GET;
                                                                IF DimensionValue.GET(GeneralLedgerSetup."Global Dimension 2 Code", "Cost Object") THEN
                                                                  IF "Cost Type" <> DimensionValue."Cost Type" THEN
                                                                    VALIDATE("Cost Type", DimensionValue."Cost Type");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 9   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 10  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 100 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                UpdateAmount;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal] }
    { 105 ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=Enhet;
                                                              SVE=Enhet] }
    { 110 ;   ;Price               ;Decimal       ;OnValidate=BEGIN
                                                                UpdateAmount;
                                                              END;

                                                   CaptionML=[ENU=Price/Rate;
                                                              NOR=Pris/gebyr;
                                                              SVE=Pris/avgift];
                                                   AutoFormatType=2 }
    { 120 ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                UpdatePrice;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   AutoFormatType=1 }
    { 130 ;   ;Budget Amount       ;Decimal       ;CaptionML=[ENU=Budget Amount;
                                                              NOR=Budsjettbel›p;
                                                              SVE=Budgetbelopp];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 200 ;   ;Extension Contract  ;Code10        ;TableRelation="Extension Contract"."Contract No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Extension Contract;
                                                              NOR=ETA;
                                                              SVE=ŽTA] }
    { 205 ;   ;Extension Contract Description;Text50;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Extension Contract".Description WHERE (Project No.=FIELD(Project No.),
                                                                                                              Contract No.=FIELD(Extension Contract)));
                                                   CaptionML=[ENU=Extension Contract Description;
                                                              NOR=Beskrivelse av ETA;
                                                              SVE=Beskrivning av ŽTA];
                                                   Editable=No }
    { 210 ;   ;Cost Component      ;Code20        ;TableRelation="Cost Component";
                                                   CaptionML=[ENU=Cost Component;
                                                              NOR=Kostnadskomponent;
                                                              SVE=Kostnadsdel] }
    { 490 ;   ;Reference No.       ;GUID          ;CaptionML=[ENU=Reference No.;
                                                              NOR=Referansenr;
                                                              SVE=Referensnummer];
                                                   Editable=No }
    { 500 ;   ;Fixed               ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Prognosis.Fixed WHERE (Project No.=FIELD(Project No.),
                                                                                             Prognosis Date=FIELD(Prognosis Date)));
                                                   CaptionML=[ENU=Fixed;
                                                              NOR=Fast;
                                                              SVE=Fast];
                                                   Editable=No }
    { 510 ;   ;Comment             ;Text50        ;CaptionML=[ENU=Comment;
                                                              NOR=Kommentar;
                                                              SVE=Kommentar] }
    { 600 ;   ;Previous Prognosis Amount;Decimal  ;CaptionML=[ENU=Previous Prognosis Amount;
                                                              NOR=Forrige prognosebel›p;
                                                              SVE=Tidigare prognosbelopp];
                                                   Editable=No }
    { 610 ;   ;Previous Budget Amount;Decimal     ;CaptionML=[ENU=Previous Budget Amount;
                                                              NOR=Forrige budsjettbel›p;
                                                              SVE=Tidigare budgetbelopp];
                                                   Editable=No }
    { 700 ;   ;Prognosis Level     ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Prognosis."Prognosis Level" WHERE (Project No.=FIELD(Project No.),
                                                                                                         Prognosis Date=FIELD(Prognosis Date)));
                                                   CaptionML=[ENU=Prognosis Level;
                                                              NOR=Prognoseniv†;
                                                              SVE=Prognosniv†];
                                                   OptionCaptionML=[ENU=Detailed,Element,Rough;
                                                                    NOR=Detaljert,Element,Grov;
                                                                    SVE=Detaljerad,Element,Grov];
                                                   OptionString=Detailed,Element,Rough }
  }
  KEYS
  {
    {    ;Project No.,Prognosis Date,Cost Type,Element,Cost Object,Line No.;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Reference No.                            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE FindNextLineNo@11136557() : Integer;
    VAR
      ForecastDetailLine@11136550 : Record 11020687;
    BEGIN
      ForecastDetailLine.SETRANGE("Project No.", "Project No.");
      ForecastDetailLine.SETRANGE("Prognosis Date", "Prognosis Date");
      ForecastDetailLine.SETRANGE("Cost Type", "Cost Type");
      ForecastDetailLine.SETRANGE(Element, Element);
      ForecastDetailLine.SETRANGE("Cost Object", "Cost Object");
      IF NOT ForecastDetailLine.FINDLAST THEN;

      EXIT(ForecastDetailLine."Line No." + 10000);
    END;

    PROCEDURE UpdateAmount@11136551();
    BEGIN
      Amount := ROUND(Quantity * Price); //C009648 rounding added
    END;

    PROCEDURE UpdatePrice@11136552();
    VAR
      Currency@1100525000 : Record 4;
    BEGIN
      Currency.InitRoundingPrecision; //C009648 rounding added
      Price := ROUND(SafeDivision(Amount, Quantity),Currency."Unit-Amount Rounding Precision");  //C009648 rounding added
    END;

    PROCEDURE UpdatePrognosisLine@11136559(ChangeInQuantity@11136551 : Decimal;ChangeInAmount@11136552 : Decimal);
    VAR
      ProjSetup@1100529900 : Record 315;
      PrognosisLine@11136550 : Record 11012035;
      Currency@1100525000 : Record 4;
      PrognosisperElement@1100529701 : Record 11071893;
    BEGIN
      //C040418.sn
      IF (ChangeInQuantity = 0) AND (ChangeInAmount = 0) THEN
        EXIT;
      //C040418.en

      ProjSetup.GET;
      IF NOT ProjSetup."Prognosis Specifications" THEN  //C004846.n
        EXIT;

      CALCFIELDS("Prognosis Level");
      IF "Prognosis Level" = "Prognosis Level"::Element THEN BEGIN
        PrognosisperElement.GET("Project No.", "Prognosis Date", Element);
        PrognosisperElement.Quantity := PrognosisLine.Quantity + ChangeInQuantity;
        PrognosisperElement.VALIDATE(Amount, PrognosisperElement.Amount + ChangeInAmount);
        PrognosisperElement.MODIFY;
      END ELSE BEGIN
        Currency.InitRoundingPrecision; //C009648 rounding added

        PrognosisLine.GET("Project No.", "Prognosis Date", "Cost Type", Element, "Cost Object");
        PrognosisLine.Quantity := PrognosisLine.Quantity + ChangeInQuantity;
        PrognosisLine.VALIDATE(Amount, PrognosisLine.Amount + ChangeInAmount);

        IF PrognosisLine."Cost Type" = PrognosisLine."Cost Type"::Labor THEN
          PrognosisLine.Rate := ROUND(SafeDivision(PrognosisLine.Amount, PrognosisLine.Quantity),Currency."Unit-Amount Rounding Precision") //C009648 rounding added
        ELSE
          PrognosisLine.Price := ROUND(SafeDivision(PrognosisLine.Amount, PrognosisLine.Quantity),Currency."Unit-Amount Rounding Precision"); //C009648 rounding added

        PrognosisLine.MODIFY;
      END
    END;

    LOCAL PROCEDURE SafeDivision@11136558(Numerator@11136550 : Decimal;Denominator@11136551 : Decimal) : Decimal;
    BEGIN
      IF Denominator = 0 THEN
        EXIT(0);
      EXIT(Numerator/Denominator);
    END;

    BEGIN
    END.
  }
}

