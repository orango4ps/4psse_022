OBJECT Codeunit 11130004 LinkedIn Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE GetLinkedInConnection@1100525000(VAR LinkedInConnection@1100525000 : DotNet "'FourPS.LinkedInConnection, Version=1.101.0.0, Culture=neutral, PublicKeyToken=48f3911b65e24838'.LinkedInConnection.LinkedInConnection" RUNONCLIENT;AllowDatabaseTransations@1100525002 : Boolean;AllowLoginPage@1100525004 : Boolean);
    VAR
      LinkedInToken@1100525001 : Record 11071909;
      GetNewToken@1100525003 : Boolean;
    BEGIN
      IF NOT ISNULL(LinkedInConnection) THEN BEGIN
        IF (NOT LinkedInConnection.Connected) OR (LinkedInConnection.Error = 401) THEN
          GetNewToken := TRUE
        ELSE
          EXIT;
      END;

      IF NOT LinkedInToken.GET(USERID) THEN
        GetNewToken := TRUE;

      IF GetNewToken THEN BEGIN
        IF AllowLoginPage THEN
          LinkedInConnection := LinkedInConnection.LinkedInConnection();
      END ELSE
        LinkedInConnection := LinkedInConnection.LinkedInConnection(LinkedInToken.Token, LinkedInToken.Secret, LinkedInToken.Verifier, AllowLoginPage);

      IF AllowDatabaseTransations THEN
        IF NOT ISNULL(LinkedInConnection) THEN
          StoreNewToken(LinkedInConnection);
    END;

    PROCEDURE GetLinkedInProfileId@1100525001(LinkedInConnection@1100525000 : DotNet "'FourPS.LinkedInConnection, Version=1.101.0.0, Culture=neutral, PublicKeyToken=48f3911b65e24838'.LinkedInConnection.LinkedInConnection" RUNONCLIENT;FirstName@1100525004 : Text[30];Surname@1100525001 : Text[50];VAR ProfileID@1100525007 : Text[30]) : Boolean;
    VAR
      LinkedInProfile@1100525008 : DotNet "'FourPS.LinkedInConnection, Version=1.101.0.0, Culture=neutral, PublicKeyToken=48f3911b65e24838'.LinkedInConnection.LinkedInProfile" RUNONCLIENT;
      Profiles@1100525006 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.IList`1" RUNONCLIENT;
      TempLinkedInProfile@1100525005 : TEMPORARY Record 11071908;
      i@1100525003 : Integer;
    BEGIN
      Profiles := LinkedInConnection.SearchProfiles(FirstName, Surname);

      FOR i := 0 TO Profiles.Count - 1 DO BEGIN
        LinkedInProfile := Profiles.Item(i);
        TempLinkedInProfile."Contact No." := '';
        TempLinkedInProfile."Profile ID" := LinkedInProfile.ProfileId;
        TempLinkedInProfile."First Name" := LinkedInProfile.FirstName;
        TempLinkedInProfile.Surname := LinkedInProfile.LastName;
        TempLinkedInProfile.Headline := LinkedInProfile.Headline;
        TempLinkedInProfile.Company := LinkedInProfile.Company;
        TempLinkedInProfile."Sort Order" := i + 1;
        TempLinkedInProfile.INSERT;
      END;

      IF TempLinkedInProfile.FINDFIRST THEN;
      IF NOT (PAGE.RUNMODAL(PAGE::"LinkedIn Profiles", TempLinkedInProfile) = ACTION::LookupOK) THEN
        EXIT(FALSE)
      ELSE
        ProfileID := TempLinkedInProfile."Profile ID";

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE StoreNewToken@1100525002(VAR LinkedInConnection@1100525000 : DotNet "'FourPS.LinkedInConnection, Version=1.101.0.0, Culture=neutral, PublicKeyToken=48f3911b65e24838'.LinkedInConnection.LinkedInConnection" RUNONCLIENT);
    VAR
      LinkedInToken@1100525001 : Record 11071909;
    BEGIN
      IF LinkedInConnection.HasNewToken THEN BEGIN
        IF NOT LinkedInToken.GET(USERID) THEN BEGIN
          LinkedInToken."User ID" := USERID;
          LinkedInToken.INSERT(TRUE);
        END;
        LinkedInToken.Token := LinkedInConnection.Token;
        LinkedInToken.Secret := LinkedInConnection.TokenSecret;
        LinkedInToken.Verifier := LinkedInConnection.TokenVerifier;
        LinkedInToken.MODIFY(TRUE);
      END;
    END;

    PROCEDURE AutoConnect@1100525007() : Boolean;
    VAR
      LinkedInToken@1100525000 : Record 11071909;
    BEGIN
      IF LinkedInToken.GET(USERID) THEN
        EXIT(LinkedInToken."Auto Connect");
    END;

    PROCEDURE IsConnected@1100525006(LinkedInConnection@1100525000 : DotNet "'FourPS.LinkedInConnection, Version=1.101.0.0, Culture=neutral, PublicKeyToken=48f3911b65e24838'.LinkedInConnection.LinkedInConnection" RUNONCLIENT) : Boolean;
    BEGIN
      IF ISNULL(LinkedInConnection) THEN
        EXIT(FALSE)
      ELSE BEGIN
        IF (NOT LinkedInConnection.Connected) OR (LinkedInConnection.Error = 401) THEN
          EXIT(FALSE);
      END;

      EXIT(TRUE);
    END;

    PROCEDURE LinkContact@1100525003(LinkedInConnection@1100525004 : DotNet "'FourPS.LinkedInConnection, Version=1.101.0.0, Culture=neutral, PublicKeyToken=48f3911b65e24838'.LinkedInConnection.LinkedInConnection" RUNONCLIENT;ContactNo@1100525000 : Code[20]);
    VAR
      Contact@1100525001 : Record 5050;
      LinkedInProfile@1100525002 : Record 11071908;
      LinkedInPersonSearch@1100525003 : Page 11229259;
    BEGIN
      IF NOT IsConnected(LinkedInConnection) THEN
        EXIT;

      Contact.GET(ContactNo);

      LinkedInPersonSearch.SetFirstName(Contact."First Name");
      LinkedInPersonSearch.SetSurname(Contact.Surname);
      LinkedInPersonSearch.LOOKUPMODE(TRUE);
      IF LinkedInPersonSearch.RUNMODAL <> ACTION::LookupOK THEN
        EXIT;

      LinkedInProfile."Contact No." := Contact."No.";
      IF NOT GetLinkedInProfileId(
        LinkedInConnection,
        LinkedInPersonSearch.GetFirstName(),
        LinkedInPersonSearch.GetSurname(),
        LinkedInProfile."Profile ID")
      THEN
        EXIT;
      LinkedInProfile."Sort Order" := 0;
      IF NOT LinkedInProfile.INSERT(TRUE) THEN
        LinkedInProfile.MODIFY(TRUE);
    END;

    PROCEDURE UnlinkContact@1100525008(ContactNo@1100525004 : Code[20]);
    VAR
      LinkedInProfile@1100525000 : Record 11071908;
    BEGIN
      LinkedInProfile.SETRANGE("Contact No.", ContactNo);
      LinkedInProfile.DELETEALL(TRUE);
    END;

    BEGIN
    END.
  }
}

