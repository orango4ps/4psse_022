OBJECT Codeunit 83801 Netting Mgm
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=;
  }
  PROPERTIES
  {
    Permissions=TableData 112=rm,
                TableData 114=rm;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FileMgt@1100583011 : Codeunit 419;
      Ostr@1100583010 : OutStream;
      OFile@1100583009 : File;
      CurrentFilename@1100583008 : Text[250];
      DataOut@1100583007 : Text[80];
      ServerFileName@1100583006 : Text;
      PostedDimSetEntry@1100583005 : Record 480;
      Payee@1100583004 : Text;
      Start_of_Line@1100583002 : Text;
      Payer@1100583000 : Text;
      Err001@1100583014 : TextConst 'ENU=Setup, NETTING, COLUMN1 must be in Nordicsettings;SVE=Setup,NETTING, COLUMN1 m†ste finnas i Nordiska inst„llningar';
      Err002@1100583013 : TextConst 'ENU=Setup, NETTING, ICT must be in Nordicsettings;SVE=Setup, NETTING, ICT m†ste finnas i Nordiska inst„llningar';
      XMLFormatMgtCU@1100583015 : Codeunit 11012092;
      Err003@1100583016 : TextConst 'ENU=Setup,NETTING,FILE must be in Nordicsettings;SVE=Setup,NETTING,FILE m†ste finnas i Nordiska inst„llningar';
      Err004@1100583012 : TextConst 'ENU=Setup,NETTING,TEMPLATENAME must be in Nordicsettings;SVE=Setup,NETTING,TEMPLATENAME m†ste finnas i Nordiska inst„llningar';
      Err005@1100583017 : TextConst 'ENU=Setup,NETTING,JOURNALNAME must be in Nordicsettings;SVE=Setup,NETTING,JOURNALNAME m†ste finnas i Nordiska inst„llningar';
      Err006@1100583001 : TextConst 'ENU=Setup,NETTING,ACCOUNT must be in Nordicsettings;SVE=Setup,NETTING,ACCOUNT m†ste finnas i Nordiska inst„llningar';

    PROCEDURE NettingExportSalesInvoice@1100583000(VAR FromDate@1100583000 : Date;VAR ToDate@1100583001 : Date);
    VAR
      SalesInvHeader@1100583002 : Record 112;
      Amount@1100583003 : Text;
      SeSetup@1100583004 : Record 11128004;
    BEGIN
      SeSetup.SETRANGE("Line type",SeSetup."Line type"::Setup);
      SeSetup.SETRANGE(Code,'NETTING');
      SeSetup.SETRANGE("Code 2",'COLUMN1');
      IF NOT SeSetup.FIND('-') THEN BEGIN
        ERROR(Err001);
      END ELSE BEGIN
        Start_of_Line := SeSetup."Value (txt)";
      END;
      CLEAR(SeSetup);
      SeSetup.SETRANGE("Line type",SeSetup."Line type"::Setup);
      SeSetup.SETRANGE(Code,'NETTING');
      SeSetup.SETRANGE("Code 2",'ICT');
      IF NOT SeSetup.FIND('-') THEN BEGIN
        ERROR(Err002);
      END ELSE BEGIN
        Payee := SeSetup."Value (txt)";
      END;
      CLEAR(SeSetup);
      SeSetup.SETRANGE("Line type",SeSetup."Line type"::Setup);
      SeSetup.SETRANGE(Code,'NETTING');
      SeSetup.SETRANGE("Code 2",'FILE');
      IF NOT SeSetup.FIND('-') THEN BEGIN
        ERROR(Err003);
      END ELSE BEGIN
        CurrentFilename := SeSetup."Value (txt)";
      END;

      ServerFileName := FileMgt.ServerTempFileName('txt');
      OFile.CREATE(ServerFileName);
      OFile.TEXTMODE(TRUE);
      OFile.CREATEOUTSTREAM(Ostr);

      SalesInvHeader.SETCURRENTKEY("Posting Date");
      SalesInvHeader.SETFILTER("Posting Date",'%1..%2',FromDate,ToDate);
      SalesInvHeader.SETRANGE("Netting Exported",FALSE);
      IF SalesInvHeader.FINDSET() THEN BEGIN
        REPEAT
          IF PostedDimSetEntry.GET(SalesInvHeader."Dimension Set ID",'ICT') THEN BEGIN
            Payer := PostedDimSetEntry."Dimension Value Code";
            SalesInvHeader.CALCFIELDS("Amount Including VAT");
            Amount := XMLFormatMgtCU.FormatDecimal(SalesInvHeader."Amount Including VAT");

            DataOut := Start_of_Line+';;'+SalesInvHeader."No."+';'+Payer+';'+Payee+';'+SalesInvHeader."Currency Code"+';'+Amount+';'+
                       FORMAT(SalesInvHeader."Posting Date")+';'+FORMAT(SalesInvHeader."Due Date")+';;;;;;;;;';
            Ostr.WRITETEXT(DataOut);
            Ostr.WRITETEXT;
            SalesInvHeader."Netting Exported" := TRUE;
            SalesInvHeader."Netting Exported Date" := WORKDATE;
            SalesInvHeader.MODIFY();
          END;
        UNTIL SalesInvHeader.NEXT = 0;
      END;


      NettingExportSalesCrMemo(FromDate,ToDate);


      OFile.CLOSE;
      CLEAR(Ostr);
      FileMgt.DownloadToFile(ServerFileName,CurrentFilename);
    END;

    LOCAL PROCEDURE NettingExportSalesCrMemo@1100583001(VAR FromDate@1100583001 : Date;VAR ToDate@1100583000 : Date);
    VAR
      SalesCrMemoHeader@1100583002 : Record 114;
      Amount@1100583003 : Text;
    BEGIN
      SalesCrMemoHeader.SETCURRENTKEY("Posting Date");
      SalesCrMemoHeader.SETFILTER("Posting Date",'%1..%2',FromDate,ToDate);
      SalesCrMemoHeader.SETRANGE("Netting Exported",FALSE);
      IF SalesCrMemoHeader.FINDSET() THEN BEGIN
        REPEAT
          IF PostedDimSetEntry.GET(SalesCrMemoHeader."Dimension Set ID",'ICT') THEN BEGIN
            Payer := PostedDimSetEntry."Dimension Value Code";
            SalesCrMemoHeader.CALCFIELDS("Amount Including VAT");
            Amount := XMLFormatMgtCU.FormatDecimal(SalesCrMemoHeader."Amount Including VAT");

            DataOut := Start_of_Line+';;'+SalesCrMemoHeader."No."+';'+Payer+';'+Payee+';'+SalesCrMemoHeader."Currency Code"+';'+FORMAT(Amount)+';'+
                       FORMAT(SalesCrMemoHeader."Posting Date")+';'+FORMAT(SalesCrMemoHeader."Due Date")+';;;;;;;;;';
            Ostr.WRITETEXT(DataOut);
            Ostr.WRITETEXT;
            SalesCrMemoHeader."Netting Exported" := TRUE;
            SalesCrMemoHeader."Netting Exported Date" := WORKDATE;
            SalesCrMemoHeader.MODIFY();
          END;
        UNTIL SalesCrMemoHeader.NEXT = 0;
      END;
    END;

    PROCEDURE NettingCreateJnl@1100583002();
    VAR
      NettingImport@1100583000 : Record 83800;
      SeSetup@1100583001 : Record 11128004;
      TemplateName@1100583002 : Code[20];
      JournalName@1100583003 : Code[20];
      OwnICT@1100583006 : Code[20];
      DD@1100583007 : Record 352;
      CustNo@1100583008 : Code[20];
      VendNo@1100583009 : Code[20];
      LineNo@1100583005 : Integer;
      GenJnl@1100583004 : Record 81;
      xGenJnl@1100583016 : TEMPORARY Record 81;
      DocType@1100583010 : Text[10];
      ICTMissing@1100583012 : Boolean;
      DocNo@1100583011 : Code[20];
      GenJournalBatch@1100583014 : Record 232;
      NoSeriesManagement@1100583013 : Codeunit 396;
      GenJnlManagement@1100583015 : Codeunit 230;
      TotalBalance@1100583017 : Decimal;
      ShowBalance@1100583018 : Boolean;
      ShowTotalBalance@1100583019 : Boolean;
      Acc@1100583020 : Code[10];
    BEGIN
      NettingImport.SETRANGE("Journal Created",FALSE);
      IF NettingImport.FINDSET() THEN BEGIN
        SeSetup.SETRANGE("Line type",SeSetup."Line type"::Setup);
        SeSetup.SETRANGE(Code,'NETTING');
        SeSetup.SETRANGE("Code 2",'TEMPLATENAME');
        IF NOT SeSetup.FIND('-') THEN BEGIN
          ERROR(Err004);
        END ELSE BEGIN
          TemplateName := SeSetup."Value (txt)";
        END;
        CLEAR(SeSetup);
        SeSetup.SETRANGE("Line type",SeSetup."Line type"::Setup);
        SeSetup.SETRANGE(Code,'NETTING');
        SeSetup.SETRANGE("Code 2",'JOURNALNAME');
        IF NOT SeSetup.FIND('-') THEN BEGIN
          ERROR(Err005);
        END ELSE BEGIN
          JournalName := SeSetup."Value (txt)";
        END;
        CLEAR(SeSetup);
        SeSetup.SETRANGE("Line type",SeSetup."Line type"::Setup);
        SeSetup.SETRANGE(Code,'NETTING');
        SeSetup.SETRANGE("Code 2",'ICT');
        IF NOT SeSetup.FIND('-') THEN BEGIN
          ERROR(Err002);
        END ELSE BEGIN
          OwnICT := SeSetup."Value (txt)";
        END;
        CLEAR(SeSetup);
        SeSetup.SETRANGE("Line type",SeSetup."Line type"::Setup);
        SeSetup.SETRANGE(Code,'NETTING');
        SeSetup.SETRANGE("Code 2",'ACCOUNT');
        IF NOT SeSetup.FIND('-') THEN BEGIN
          ERROR(Err006);
        END ELSE BEGIN
          Acc := SeSetup."Value (txt)";
        END;

        GenJnl.SETRANGE("Journal Template Name",TemplateName);
        GenJnl.SETRANGE("Journal Batch Name",JournalName);
        IF GenJnl.FINDLAST THEN BEGIN
          LineNo := GenJnl."Line No.";
        END ELSE BEGIN
          LineNo := 0;
        END;
        GenJournalBatch.GET(TemplateName, JournalName);
        DocNo := NoSeriesManagement.GetNextNo(GenJournalBatch."No. Series", 0D, FALSE);
        //
        REPEAT
          DocType := '';
          CustNo := '';
          VendNo  := '';
          ICTMissing := FALSE;
          IF NettingImport.Payer = OwnICT THEN BEGIN
            DD.SETRANGE("Table ID",23);
            DD.SETRANGE("Dimension Code",'ICT');
            DD.SETRANGE("Dimension Value Code",NettingImport.Payee);
            IF DD.FIND('-') THEN BEGIN
              //Payee = Leverant”r
              VendNo := DD."No.";
              DocType := NettingVendDocument(NettingImport);
            END ELSE BEGIN
              ICTMissing := TRUE;
            END;
          END ELSE BEGIN
            //Eget ICT ligger i Payee
            DD.SETRANGE("Table ID",18);
            DD.SETRANGE("Dimension Code",'ICT');
            DD.SETRANGE("Dimension Value Code",NettingImport.Payer);
            IF DD.FIND('-') THEN BEGIN
              //Payer = Kund
              CustNo := DD."No.";
              DocType := NettingCustDocument(NettingImport);
            END ELSE BEGIN
              ICTMissing := TRUE;
            END;
          END;
          GenJnl.INIT;
          LineNo := LineNo + 10000;
          GenJnl.VALIDATE("Journal Template Name", TemplateName);
          GenJnl.VALIDATE("Journal Batch Name", JournalName);
          GenJnl.VALIDATE("Line No.", LineNo);
          IF NettingImport."Issue Date" <> 0D THEN BEGIN
            GenJnl.VALIDATE("Posting Date", NettingImport."Issue Date");
          END ELSE BEGIN
            GenJnl.VALIDATE("Posting Date", WORKDATE);
          END;
          GenJnl.VALIDATE("Document No.", DocNo);
          GenJnl."Document Type" := GenJnl."Document Type"::Payment;
          GenJnl.VALIDATE("Due Date",NettingImport."Due Date");
          GenJnl.Comment := NettingImport.Comment;
          CASE DocType OF
            'INV',
            'CRED':
            BEGIN
              GenJnl.VALIDATE("Account Type",GenJnl."Account Type"::Customer);
              GenJnl.VALIDATE("Account No.",CustNo);
              GenJnl.VALIDATE("Applies-to Doc. No.",NettingImport."Inv Number");
              IF DocType = 'CRED' THEN BEGIN
                GenJnl.VALIDATE(Amount,NettingImport.Amount*-1);
              END ELSE BEGIN
                GenJnl.VALIDATE(Amount,NettingImport.Amount*-1);
              END;
              GenJnl.VALIDATE("Currency Code",NettingImport.Currency);
              GenJnl.INSERT;
            END;
            'C':
            BEGIN
              GenJnl.VALIDATE("Account Type",GenJnl."Account Type"::Customer);
              GenJnl.VALIDATE(Amount,NettingImport.Amount*-1);
              GenJnl.VALIDATE("Currency Code",NettingImport.Currency);
              GenJnl.VALIDATE("Account No.",CustNo);
              GenJnl.INSERT;
            END;
            'PINV',
            'PCRED':
            BEGIN
              GenJnl.VALIDATE("Account Type",GenJnl."Account Type"::Vendor);
              GenJnl.VALIDATE("Account No.",VendNo);
              GenJnl.VALIDATE("Applies-to Doc. No.",NettingImport."Inv Number");
              IF DocType = 'CRED' THEN BEGIN
                GenJnl.VALIDATE(Amount,NettingImport.Amount*-1);
              END ELSE BEGIN
                GenJnl.VALIDATE(Amount,NettingImport.Amount);
              END;
              GenJnl.VALIDATE("Currency Code",NettingImport.Currency);
              GenJnl.INSERT;
            END;
            'P':
            BEGIN
              GenJnl.VALIDATE("Account Type",GenJnl."Account Type"::Vendor);
              GenJnl.VALIDATE(Amount,NettingImport.Amount);
              GenJnl.VALIDATE("Currency Code",NettingImport.Currency);
              GenJnl.VALIDATE("Account No.",VendNo);
              GenJnl.INSERT;
            END;
          END;
          IF ICTMissing THEN BEGIN
            //Skapa rad med s† mycket info som m”jligt
            IF NettingImport.Payer = OwnICT THEN BEGIN
              GenJnl.VALIDATE("Account Type",GenJnl."Account Type"::Vendor);
              GenJnl.Description := 'Payee: ' + NettingImport.Payee + ' Document: ' + NettingImport."Inv Number";
              GenJnl.VALIDATE(Amount,NettingImport.Amount);
            END ELSE BEGIN
              GenJnl.VALIDATE("Account Type",GenJnl."Account Type"::Customer);
              GenJnl.Description := 'Payer: ' + NettingImport.Payer + ' Document: ' + NettingImport."Inv Number";
              GenJnl.VALIDATE(Amount,NettingImport.Amount*-1);
            END;
            //GenJnl.VALIDATE("Account No.",'');
            GenJnl.Description := 'Payee: ' + NettingImport.Payee + ' Invoice: ' + NettingImport."Inv Number";
            GenJnl.VALIDATE("Currency Code",NettingImport.Currency);
            GenJnl.INSERT;
          END;
          NettingImport."Journal Created" := TRUE;
          NettingImport."Journal Created Date" := WORKDATE;
          NettingImport.MODIFY;
          xGenJnl := GenJnl;
        UNTIL NettingImport.NEXT = 0;
      END;
      //Boka mot konto
      ShowBalance := FALSE;
      ShowTotalBalance := FALSE;
      GenJnlManagement.CalcBalance(GenJnl,xGenJnl,xGenJnl.Amount,TotalBalance,ShowBalance,ShowTotalBalance);
      GenJnl.INIT;
      LineNo := LineNo + 10000;
      GenJnl.VALIDATE("Journal Template Name", TemplateName);
      GenJnl.VALIDATE("Journal Batch Name", JournalName);
      GenJnl.VALIDATE("Line No.", LineNo);
      GenJnl.VALIDATE("Document No.", DocNo);
      GenJnl.VALIDATE("Account Type",GenJnl."Account Type"::"G/L Account");
      GenJnl.VALIDATE("Account No.",Acc);
      GenJnl.VALIDATE("Posting Date", WORKDATE);
      GenJnl."Document Type" := GenJnl."Document Type"::Payment;
      GenJnl.VALIDATE(Amount,TotalBalance*-1);
      GenJnl.INSERT;

      PAGE.RUN(39, GenJnl);
    END;

    LOCAL PROCEDURE NettingCustDocument@1100583006(VAR NettingImp@1100583000 : Record 83800) DocType : Text[10];
    VAR
      SalesInv@1100583002 : Record 112;
      SalesCrMemo@1100583003 : Record 114;
    BEGIN
      //OBS!  L„gg p† hantering av betalningstolerans
      IF SalesInv.GET(NettingImp."Inv Number") THEN BEGIN
        EXIT('INV');
      END ELSE BEGIN
        IF SalesCrMemo.GET(NettingImp."Inv Number") THEN BEGIN
          EXIT('CRED');
        END ELSE BEGIN
          EXIT('C');
        END;
      END;

    END;

    LOCAL PROCEDURE NettingVendDocument@1100583012(VAR NettingImp@1100583000 : Record 83800) DocType : Text[10];
    VAR
      PurchInv@1100583002 : Record 122;
      PurchCrMemo@1100583003 : Record 124;
    BEGIN
      //OBS!  L„gg p† hantering av betalningstolerans
      IF PurchInv.GET(NettingImp."Inv Number") THEN BEGIN
        EXIT('PINV');
      END ELSE BEGIN
        IF PurchCrMemo.GET(NettingImp."Inv Number") THEN BEGIN
          EXIT('PCRED');
        END ELSE BEGIN
          EXIT('P');
        END;
      END;

    END;

    PROCEDURE NettingRemoveExportedInvoiceBoolean@1100583003(VAR SalesInvHeader@1100583000 : Record 112);
    BEGIN
      SalesInvHeader."Netting Exported" := FALSE;
      SalesInvHeader.MODIFY;
    END;

    PROCEDURE NettingRemoveExportedCrMemoBoolean@1100583004(VAR SalesCrMemoHeader@1100583000 : Record 114);
    BEGIN
      SalesCrMemoHeader."Netting Exported" := FALSE;
      SalesCrMemoHeader.MODIFY;
    END;

    BEGIN
    {
      Certego - Netting - (Integration 7)
    }
    END.
  }
}

