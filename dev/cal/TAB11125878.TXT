OBJECT Table 11125878 Field Service Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Worksheet Date,Resource Name,Description;
    OnInsert=VAR
               FieldServiceWorksheetSetup@1100528000 : Record 11125885;
             BEGIN
               IF "No." = '' THEN BEGIN
                  FieldServiceWorksheetSetup.GET;
                  FieldServiceWorksheetSetup.TESTFIELD("FS Worksheet Nos.");
                  NoSeriesMgt.InitSeries(FieldServiceWorksheetSetup."FS Worksheet Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;
               //IF "No." <> xRec."No." THEN BEGIN
               //  FieldServiceWorksheetSetup.GET;
               //  IF FieldServiceWorksheetSetup."FS Worksheet Nos." <> '' THEN
               //    NoSeriesMgt.TestManual(FieldServiceWorksheetSetup."FS Worksheet Nos.");
               //END;

               "Date Created" := TODAY;
             END;

    OnModify=BEGIN
               "Date Modified" := TODAY;
             END;

    OnDelete=BEGIN
               //TODO.djnieuwenhuizen: add tests and stuff here, this is just a plain cascading delete!
               CascadingDeleteChildItems;
             END;

    CaptionML=ENU=Field Service Worksheet;
    LookupPageID=Page11126706;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=VAR
                                                                FieldServiceWorksheetSetup@1100528000 : Record 11125885;
                                                              BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  FieldServiceWorksheetSetup.GET;
                                                                  NoSeriesMgt.TestManual(FieldServiceWorksheetSetup."FS Worksheet Nos.");
                                                                  "No. Series" := '';

                                                                 // IF FieldServiceWorksheetSetup."FS Worksheet Nos." <> '' THEN
                                                                 //   NoSeriesMgt.TestManual(FieldServiceWorksheetSetup."FS Worksheet Nos.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 20  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 25  ;   ;Work Order No.      ;Code20        ;TableRelation="Work Order".No. WHERE (Source Type=CONST(ServiceOrder));
                                                   OnValidate=VAR
                                                                WorkOrder@1100528000 : Record 11229279;
                                                                ServiceOrderExtension@1100528001 : Record 11071727;
                                                              BEGIN
                                                                IF WorkOrder.GET("Work Order No.") THEN BEGIN
                                                                  VALIDATE("Service Order No.",WorkOrder."Source No.");
                                                                  IF ServiceOrderExtension.GET("Service Order No.") THEN BEGIN
                                                                    "Price Book Code" := ServiceOrderExtension."Price Book Code";
                                                                    "Price Book Index Date" := ServiceOrderExtension."Price Book Index Date";
                                                                  END;
                                                                  VALIDATE("Resource No.",WorkOrder."Resource No.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Work Order No.;
                                                              SVE=Serviceordernr] }
    { 30  ;   ;Service Order No.   ;Code20        ;TableRelation="Service Order";
                                                   OnValidate=VAR
                                                                ServiceOrderExtension@1100528000 : Record 11071727;
                                                              BEGIN
                                                                IF ServiceOrderExtension.GET("Service Order No.") THEN BEGIN
                                                                   "Price Book Code" := ServiceOrderExtension."Price Book Code";
                                                                  "Price Book Index Date" := ServiceOrderExtension."Price Book Index Date";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Service Order No.;
                                                              NOR=Serviceordrenr.;
                                                              SVE=Serviceordernr] }
    { 40  ;   ;Worksheet Date      ;Date          ;CaptionML=ENU=Worksheet Date }
    { 45  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=ENU=Open,Costs Processed,Revenue Processed,Completed,On Hold,Cancelled;
                                                   OptionString=Open,Costs Processed,Revenue Processed,Completed,On Hold,Cancelled }
    { 50  ;   ;Date Created        ;Date          ;CaptionML=[ENU=Date Created;
                                                              NOR=Opprettet;
                                                              SVE=Skapat datum] }
    { 60  ;   ;Date Modified       ;Date          ;CaptionML=[ENU=Date Modified;
                                                              NOR=Dato Endret;
                                                              SVE=Datum „ndrat];
                                                   Editable=No }
    { 70  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              NOR=Nr-serie;
                                                              SVE=Nr-serie];
                                                   Editable=No }
    { 80  ;   ;No. of Transit Lines;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("FS Worksh. Transit Line" WHERE (Worksheet No.=FIELD(No.)));
                                                   CaptionML=ENU=No. of Transit Lines;
                                                   Editable=No }
    { 81  ;   ;No. of Hour Lines   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("FS Worksh. Hour Line" WHERE (Worksheet No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Hour Lines;
                                                              NOR=Antall timerader;
                                                              SVE=Antal timrader];
                                                   Editable=No }
    { 82  ;   ;No. of Item Lines   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("FS Worksh. Item Line" WHERE (Worksheet No.=FIELD(No.)));
                                                   CaptionML=ENU=No. of Item Lines;
                                                   Editable=No }
    { 100 ;   ;Price Book Code     ;Code20        ;CaptionML=[ENU=Price Book Code;
                                                              SVE=Enhetspriskod] }
    { 110 ;   ;Price Book Index Date;Date         ;CaptionML=[ENU=Price Book Index Date;
                                                              SVE=Indexdatum f”r enhetspris] }
    { 120 ;   ;Resource No.        ;Code20        ;TableRelation="Resource (WOP)".No.;
                                                   CaptionML=[ENU=Resource No.;
                                                              NOR=Ressursnr.;
                                                              SVE=Resursnr];
                                                   Editable=No }
    { 140 ;   ;Resource Name       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Resource (WOP)".Name WHERE (No.=FIELD(Resource No.)));
                                                   CaptionML=[ENU=Resource Name;
                                                              NOR=Ressursnavn;
                                                              SVE=Resursnamn];
                                                   Editable=No }
    { 150 ;   ;Transmission Status ;Option        ;InitValue=Manually;
                                                   CaptionML=ENU=Transmission Status;
                                                   OptionCaptionML=ENU=,Manually,In Progress,Received,Error;
                                                   OptionString=[ ,Manually,InProgress,Received,Error] }
    { 160 ;   ;Work Order Finished ;Boolean       ;OnValidate=BEGIN
                                                                IF ("Work Order Finished") THEN BEGIN
                                                                  "Work Order Finished Time" := CURRENTDATETIME;
                                                                END ELSE BEGIN
                                                                  "Work Order Finished Time" := 0DT;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Work Order Finished }
    { 170 ;   ;Work Order Finished Time;DateTime  ;CaptionML=ENU=Work Order Finished Time;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NoSeriesMgt@1100528000 : Codeunit 396;
      FieldServiceWorksheetSetup@1100528001 : Record 11125885;

    PROCEDURE AssistEdit@2(OldFieldServiceWorksheet@11012000 : Record 11125878) : Boolean;
    VAR
      FieldServiceWorksheet@1210190000 : Record 11125878;
    BEGIN
      WITH FieldServiceWorksheet DO BEGIN
        FieldServiceWorksheet := Rec;
        FieldServiceWorksheetSetup.GET;
        FieldServiceWorksheetSetup.TESTFIELD("FS Worksheet Nos.");
        IF NoSeriesMgt.SelectSeries(FieldServiceWorksheetSetup."FS Worksheet Nos.",FieldServiceWorksheet."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := FieldServiceWorksheet;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE GenerateCostPlusEntries@1100528000();
    VAR
      FieldServiceWorksheet@1100528000 : Record 11125878;
      FSWorksheetLine@1100528002 : Record 11125879;
      CreateSrvOrdCostPlus@1100528001 : Report 11126071;
    BEGIN
      FieldServiceWorksheet.SETRANGE("No.", "No.");
      FSWorksheetLine.SETRANGE("Cost Plus Entry Created", FALSE);

      CreateSrvOrdCostPlus.SETTABLEVIEW(FieldServiceWorksheet);
      CreateSrvOrdCostPlus.SETTABLEVIEW(FSWorksheetLine);
      CreateSrvOrdCostPlus.RUN;
    END;

    PROCEDURE CascadingDeleteChildItems@1100528005();
    BEGIN
      DeleteWorksheetLines;
      DeleteHourLines;
      DeleteItemLines;
      DeleteTransitLines;
    END;

    LOCAL PROCEDURE DeleteWorksheetLines@1100528001();
    VAR
      FSWorksheetLine@1100528000 : Record 11125879;
    BEGIN
      FSWorksheetLine.SETRANGE("Worksheet No.", "No.");
      FSWorksheetLine.DELETEALL;
    END;

    LOCAL PROCEDURE DeleteHourLines@1100528002();
    VAR
      FSWorkshHourLine@1100528000 : Record 11125881;
    BEGIN
      FSWorkshHourLine.SETRANGE("Worksheet No.", "No.");
      FSWorkshHourLine.DELETEALL;
    END;

    LOCAL PROCEDURE DeleteItemLines@1100528003();
    VAR
      FSWorkshItemLine@1100528000 : Record 11125882;
    BEGIN
      FSWorkshItemLine.SETRANGE("Worksheet No.", "No.");
      FSWorkshItemLine.DELETEALL;
    END;

    LOCAL PROCEDURE DeleteTransitLines@1100528004();
    VAR
      FSWorkshTransitLines@1100528000 : Record 11125880;
    BEGIN
      FSWorkshTransitLines.SETRANGE("Worksheet No.", "No.");
      FSWorkshTransitLines.DELETEALL;
    END;

    LOCAL PROCEDURE DeleteDocumentLinks@1100528400();
    VAR
      DocumentLink@1100528402 : Record 11012747;
      DocumentLinkMgt@1100528400 : Codeunit 11012401;
      RecRef@1100528401 : RecordRef;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DocumentLinkMgt.DeleteDocumentLinksFromObject(RecRef);
    END;

    BEGIN
    END.
  }
}

