OBJECT Page 972 Time Sheet Chart
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Time Sheets;
               NOR=Timelister;
               SVE=Tidrapporter];
    SourceTable=Table485;
    PageType=CardPart;
    OnFindRecord=BEGIN
                   UpdateChart;
                   IsChartDataReady := TRUE;
                 END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateChart;
                         END;

    ActionList=ACTIONS
    {
      { 4       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 5       ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 NOR=Forrige periode;
                                 SVE=F”reg†ende period];
                      ToolTipML=[ENU=Show the information based on the previous period. If you set the View by field to Day, the date filter changes to the day before.;
                                 NOR=Vis informasjonen basert p† den forrige perioden. Hvis du setter feltet Vis etter til Dag, endres datofiltret til dagen f›r.;
                                 SVE=Visa informationen baserad p† f”reg†ende period. Om du st„ller in f„ltet Visa efter p† Dag „ndras dagfiltret till dagen f”re.];
                      ApplicationArea=#Jobs;
                      Image=PreviousSet;
                      OnAction=BEGIN
                                 TimeSheetChartSetup.FindPeriod(SetWanted::Previous);
                                 UpdateStatus;
                               END;
                                }
      { 6       ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 NOR=Neste periode;
                                 SVE=N„sta period];
                      ToolTipML=[ENU=Show the information based on the next period. If you set the View by field to Day, the date filter changes to the day before.;
                                 NOR=Vis informasjonen basert p† den neste perioden. Hvis du setter feltet Vis etter til Dag, endres datofiltret til dagen f›r.;
                                 SVE=Visa informationen baserad p† n„sta period. Om du st„ller in f„ltet Visa efter p† Dag „ndras dagsfiltret till dagen f”re.];
                      ApplicationArea=#Jobs;
                      Image=NextSet;
                      OnAction=BEGIN
                                 TimeSheetChartSetup.FindPeriod(SetWanted::Next);
                                 UpdateStatus;
                               END;
                                }
      { 7       ;1   ;ActionGroup;
                      CaptionML=[ENU=Show by;
                                 NOR=Vis etter;
                                 SVE=Visa per];
                      Image=View }
      { 8       ;2   ;Action    ;
                      CaptionML=[ENU=Status;
                                 NOR=Status;
                                 SVE=Status];
                      ToolTipML=[ENU=View the approval status of the time sheet.;
                                 NOR=Vis godkjenningsstatusen for timelisten.;
                                 SVE=Visa tidrapportens godk„nnandestatus.];
                      ApplicationArea=#Jobs;
                      Image=Report;
                      OnAction=BEGIN
                                 TimeSheetChartSetup.SetShowBy(TimeSheetChartSetup."Show by"::Status);
                                 UpdateStatus;
                               END;
                                }
      { 11      ;2   ;Action    ;
                      CaptionML=[ENU=Type;
                                 NOR=Type;
                                 SVE=Typ];
                      ToolTipML=[ENU=Specifies the chart type.;
                                 NOR=Angir diagramtypen.;
                                 SVE=Anger diagramtypen.];
                      ApplicationArea=#Jobs;
                      OnAction=BEGIN
                                 TimeSheetChartSetup.SetShowBy(TimeSheetChartSetup."Show by"::Type);
                                 UpdateStatus;
                               END;
                                }
      { 10      ;2   ;Action    ;
                      CaptionML=[ENU=Posted;
                                 NOR=Bokf›rt;
                                 SVE=Bokf”rd];
                      ToolTipML=[ENU=Specifies the sum of time sheet hours for posted time sheets.;
                                 NOR=Angir summen av timelistetimer for bokf›rte timelister.;
                                 SVE=Anger de sammanlagda tidrapporttimmarna f”r bokf”rda tidrapporter.];
                      ApplicationArea=#Jobs;
                      Image=PostedTimeSheet;
                      OnAction=BEGIN
                                 TimeSheetChartSetup.SetShowBy(TimeSheetChartSetup."Show by"::Posted);
                                 UpdateStatus;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 3   ;1   ;Field     ;
                Name=StatusText;
                CaptionML=[ENU=Status Text;
                           NOR=Statustekst;
                           SVE=Statustext];
                ToolTipML=[ENU=Specifies the status of the chart.;
                           NOR=Angir statusen til diagrammet.;
                           SVE=Anger diagrammets status.];
                ApplicationArea=#Jobs;
                SourceExpr=StatusText;
                ShowCaption=No }

    { 2   ;1   ;Field     ;
                Name=BusinessChart;
                ApplicationArea=#Jobs;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35] }

  }
  CODE
  {
    VAR
      TimeSheetChartSetup@1001 : Record 959;
      OldTimeSheetChartSetup@1002 : Record 959;
      TimeSheetChartMgt@1000 : Codeunit 952;
      StatusText@1004 : Text[250];
      NeedsUpdate@1003 : Boolean;
      SetWanted@1005 : 'Previous,Next';
      IsChartDataReady@1007 : Boolean;
      IsChartAddInReady@1006 : Boolean;

    LOCAL PROCEDURE UpdateChart@6();
    BEGIN
      IF NOT NeedsUpdate THEN
        EXIT;
      IF NOT IsChartAddInReady THEN
        EXIT;
      TimeSheetChartMgt.UpdateData(Rec);
      Update(CurrPage.BusinessChart);
      UpdateStatus;

      NeedsUpdate := FALSE;
    END;

    LOCAL PROCEDURE UpdateStatus@8();
    BEGIN
      NeedsUpdate := NeedsUpdate OR IsSetupChanged;

      OldTimeSheetChartSetup := TimeSheetChartSetup;

      IF NeedsUpdate THEN
        StatusText := TimeSheetChartSetup.GetCurrentSelectionText;
    END;

    LOCAL PROCEDURE IsSetupChanged@4() : Boolean;
    BEGIN
      EXIT(
        (OldTimeSheetChartSetup."Starting Date" <> TimeSheetChartSetup."Starting Date") OR
        (OldTimeSheetChartSetup."Show by" <> TimeSheetChartSetup."Show by"));
    END;

    EVENT BusinessChart@-5::DataPointClicked@12(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
      SetDrillDownIndexes(point);
      TimeSheetChartMgt.DrillDown(Rec);
    END;

    EVENT BusinessChart@-5::DataPointDoubleClicked@13(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT BusinessChart@-2::AddInReady@14();
    BEGIN
      TimeSheetChartMgt.OnOpenPage(TimeSheetChartSetup);
      UpdateStatus;
      IsChartAddInReady := TRUE;
      IF IsChartDataReady THEN
        UpdateChart;
    END;

    EVENT BusinessChart@-2::Refresh@15();
    BEGIN
      IF IsChartDataReady AND IsChartAddInReady THEN BEGIN
        NeedsUpdate := TRUE;
        UpdateChart;
      END;
    END;

    BEGIN
    END.
  }
}

