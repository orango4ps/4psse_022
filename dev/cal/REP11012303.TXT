OBJECT Report 11012303 Compress Price History
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Preishistorie verdichten;
               ENU=Compress Price History;
               NLD=Prijshistorie verdichten;
               NOR=Komprimer Prishistorikk;
               SVE=Komprimera prishistorik];
    ProcessingOnly=Yes;
    UsageCategory=Tasks;
  }
  DATASET
  {
    { 5000;    ;DataItem;                    ;
               DataItemTable=Table11012315;
               DataItemTableView=SORTING(Vendor,Item Code,Starting Date)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               SETCURRENTKEY(Vendor, "Item Code", "Starting Date");
                               ASCENDING(TRUE); //if descending the most recent records will be kept instead of the oldest. This results in the wrong prices!!!
                               NoOfrecs := COUNT; //use COUNT for performance
                               Counter:=0;
                               IF NoOfrecs = 0 THEN
                                 NoOfrecs := 1; //to prevent division by zero error
                               Window.OPEN(Text001); //to open the progress window
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1, ROUND(Counter/ NoOfrecs * 10000,1)); //to update the progress bar...
                                  Counter:=Counter+1;

                                  IF ("Item Code" <> PrevItem) OR
                                     (Vendor<> PrevVendor) THEN BEGIN
                                    //this is a new vendor/item
                                    PrevVendor := Vendor;
                                    PrevItem := "Item Code";
                                    PrevGrossPrice := "Gross Price";
                                    PrevQuantity := "Quantity Per Price";
                                    PrevID := "Price ID";
                                  END ELSE BEGIN
                                    IF ("Gross Price" <> PrevGrossPrice) OR
                                       ("Quantity Per Price" <> PrevQuantity) OR
                                       ("Price ID" <> PrevID) THEN BEGIN
                                      //there is new data in this record, keep it!
                                      PrevGrossPrice := "Gross Price";
                                      PrevQuantity := "Quantity Per Price";
                                      PrevID := "Price ID";
                                    END ELSE BEGIN
                                      //there is no new data in this record, delete it!
                                      DELETE(TRUE);
                                    END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                Window.CLOSE;//to close the progress window
                              END;

               ReqFilterFields=Vendor,Item Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PrevGrossPrice@1100485000 : Decimal;
      PrevQuantity@1100485001 : Decimal;
      PrevID@1100485002 : Code[10];
      PrevVendor@1100485003 : Code[15];
      PrevItem@1100485004 : Code[20];
      NoOfrecs@1100485005 : Integer;
      Counter@1100485006 : Integer;
      Text001@1100485007 : TextConst 'DEU=Verdichten der Artikelpreise-Datei... @1@@@@@@@@@@@@@;ENU=Condensing item price information... @5@@@@@@@@@@@@@;NLD=Verdichten van artikel prijzen bestand... @1@@@@@@@@@@@@@;NOR=Kondenserer artikkelprisinformasjonÿ... @5@@@@@@@@@@@@@;SVE=Kondenserar artikelprisinformationÿ... @5@@@@@@@@@@@@@';
      Window@1100485008 : Dialog;

    BEGIN
    {
      4PS01 JD, 20-11-2006, Call 7308
      The purpose of this batch-report is to compress price history of Trade Items. This means: when the Gross Price, Quantity Per Price
      and Price ID is equal on different dates, only leave the oldest date.
    }
    END.
  }
  RDLDATA
  {
  }
}

