OBJECT Table 11012388 SD Worx Cobra Exch. Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 1261=rimd;
    OnInsert=BEGIN
               TESTFIELD("Primary Key",'');
             END;

    OnDelete=BEGIN
               DeletePassword("Consumer Secret");
               DeletePassword("Consumer Key");
             END;

    CaptionML=ENU=SD Worx Cobra Exch. Setup;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              NOR=Prim‘rn›kkel;
                                                              SVE=Prim„rnyckel] }
    { 5   ;   ;Service URL         ;Text250       ;OnValidate=VAR
                                                                WebRequestHelper@1000 : Codeunit 1299;
                                                              BEGIN
                                                                IF "Service URL" <> '' THEN
                                                                  WebRequestHelper.IsSecureHttpUrl("Service URL");
                                                              END;

                                                   ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Service URL;
                                                              NOR=URL-adresse for tjeneste;
                                                              SVE=Servicesida] }
    { 7   ;   ;Consumer Key        ;GUID          ;TableRelation="Service Password".Key;
                                                   CaptionML=[ENU=Consumer Key;
                                                              NOR=Forbrukern›kkel;
                                                              SVE=Anv„ndarnyckel] }
    { 8   ;   ;Consumer Secret     ;GUID          ;CaptionML=[ENU=Consumer Secret;
                                                              NOR=Forbrukerhemmelighet;
                                                              SVE=Konsumenthemlighet];
                                                   Editable=No }
    { 20  ;   ;Enabled             ;Boolean       ;OnValidate=BEGIN
                                                                IF Enabled THEN BEGIN
                                                                  CheckConnection;
                                                                  ScheduleJobQueueEntries;
                                                                  IF CONFIRM(JobQEntriesCreatedQst) THEN
                                                                    ShowJobQueueEntry;
                                                                END ELSE
                                                                  CancelJobQueueEntries;
                                                              END;

                                                   CaptionML=[ENU=Enabled;
                                                              NOR=Aktivert;
                                                              SVE=Aktiverad] }
    { 21  ;   ;Log Web Requests    ;Boolean       ;CaptionML=[ENU=Log Web Requests;
                                                              NOR=Loggf›r webforesp›rsler;
                                                              SVE=Logga webbf”rfr†gan] }
    { 30  ;   ;Sync Employees      ;Option        ;CaptionML=ENU=Synchronise persons;
                                                   OptionCaptionML=ENU=All,Unemployed,Employed,Employed in the future,Employed and Employed in the future;
                                                   OptionString=All,Unemployed,Employed,Employed in the future,Employed and Employed in the future }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      JobQEntriesCreatedQst@1003 : TextConst 'ENU=A job queue entry for exchanging Cobra Data has been created.\\Do you want to open the Job Queue Entries window?';
      SDWorxCobraConnectionMgt@1002 : Codeunit 11012437;

    PROCEDURE SavePassword@1(VAR PasswordKey@1001 : GUID;PasswordText@1000 : Text);
    VAR
      ServicePassword@1002 : Record 1261;
    BEGIN
      PasswordText := DELCHR(PasswordText,'=',' ');

      IF ISNULLGUID(PasswordKey) OR NOT ServicePassword.GET(PasswordKey) THEN BEGIN
        ServicePassword.SavePassword(PasswordText);
        ServicePassword.INSERT(TRUE);
        PasswordKey := ServicePassword.Key;
        MODIFY;
      END ELSE BEGIN
        ServicePassword.SavePassword(PasswordText);
        ServicePassword.MODIFY;
      END;
      COMMIT;
    END;

    PROCEDURE GetPassword@2(PasswordKey@1001 : GUID) : Text;
    VAR
      ServicePassword@1000 : Record 1261;
    BEGIN
      ServicePassword.GET(PasswordKey);
      EXIT(ServicePassword.GetPassword);
    END;

    LOCAL PROCEDURE DeletePassword@4(PasswordKey@1000 : GUID);
    VAR
      ServicePassword@1001 : Record 1261;
    BEGIN
      IF ServicePassword.GET(PasswordKey) THEN
        ServicePassword.DELETE;
    END;

    PROCEDURE HasPassword@3(PasswordKey@1001 : GUID) : Boolean;
    VAR
      ServicePassword@1000 : Record 1261;
    BEGIN
      IF NOT ServicePassword.GET(PasswordKey) THEN
        EXIT(FALSE);

      EXIT(ServicePassword.GetPassword <> '');
    END;

    PROCEDURE SetURLsToDefault@5();
    BEGIN
      "Service URL" := 'https://stagingapi.ctbps.nl/klantv3';
    END;

    PROCEDURE CheckConnection@7();
    BEGIN
      SDWorxCobraConnectionMgt.CheckConnection;
    END;

    LOCAL PROCEDURE ScheduleJobQueueEntries@10();
    VAR
      JobQueueEntry@1000 : Record 472;
      DummyRecId@1001 : RecordID;
    BEGIN
      JobQueueEntry.ScheduleRecurrentJobQueueEntry(JobQueueEntry."Object Type to Run"::Codeunit,
        CODEUNIT::"SD Worx Cobra Connection Mgt",DummyRecId);

      IF JobQueueEntry.FIND THEN BEGIN
        JobQueueEntry."Starting Time" := 010000T;
        JobQueueEntry."No. of Minutes between Runs" := 1440;
        JobQueueEntry.MODIFY;
      END;
    END;

    LOCAL PROCEDURE CancelJobQueueEntries@11();
    VAR
      JobQueueEntry@1000 : Record 472;
    BEGIN
      CancelJobQueueEntry(JobQueueEntry."Object Type to Run"::Codeunit,
        CODEUNIT::"SD Worx Cobra Connection Mgt");
    END;

    LOCAL PROCEDURE CancelJobQueueEntry@16(ObjType@1001 : Option;ObjID@1002 : Integer);
    VAR
      JobQueueEntry@1000 : Record 472;
    BEGIN
      IF JobQueueEntry.FindJobQueueEntry(ObjType,ObjID) THEN
        JobQueueEntry.Cancel;
    END;

    PROCEDURE ShowJobQueueEntry@8();
    VAR
      JobQueueEntry@1000 : Record 472;
    BEGIN
      JobQueueEntry.SETRANGE("Object Type to Run",JobQueueEntry."Object Type to Run"::Codeunit);
      JobQueueEntry.SETRANGE("Object ID to Run",CODEUNIT::"SD Worx Cobra Connection Mgt");
      IF JobQueueEntry.FINDFIRST THEN
        PAGE.RUN(PAGE::"Job Queue Entries",JobQueueEntry);
    END;

    BEGIN
    END.
  }
}

