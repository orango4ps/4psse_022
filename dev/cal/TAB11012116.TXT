OBJECT Table 11012116 EP Hour Accounting Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=EP Hour Accounting Line;
               NOR=Timerapporteringsrad for EP;
               SVE=Tidrapportsrad f”r EP];
  }
  FIELDS
  {
    { 10  ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              NOR=Bilagsnr.;
                                                              SVE=Verifikationsnr] }
    { 15  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 20  ;   ;Day                 ;Option        ;CaptionML=[ENU=Day;
                                                              NOR=Dag;
                                                              SVE=Dag];
                                                   OptionCaptionML=[ENU=Mo,Tu,We,Th,Fr,Sa,Su;
                                                                    NOR=Ma,Ti,On,To,Fr,L›,S›;
                                                                    SVE=M†,Ti,On,To,Fr,L”,S”];
                                                   OptionString=Mo,Tu,We,Th,Fr,Sa,Su }
    { 30  ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=Project,Service,Indirect;
                                                                    NOR=Prosjekt,Service,Indirekte;
                                                                    SVE=Projekt,Service,Indirekt];
                                                   OptionString=Project,Service,Indirect }
    { 40  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Project)) Job.No.
                                                                 ELSE IF (Type=CONST(Service)) "Service Order".No.
                                                                 ELSE IF (Type=CONST(Indirect)) "Cost Code".Code;
                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 50  ;   ;Element             ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(No.));
                                                   OnValidate=BEGIN
                                                                IF Element <> '' THEN BEGIN
                                                                  ProjElemRec.GET("No.",Element)
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 60  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=FILTER(<Revenue),
                                                                                               Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                IF "Cost Object" = '' THEN
                                                                  EXIT;

                                                                DimMgt.GetDimValueRec(2, "Cost Object", DimValRec, TRUE, "No.");
                                                                DimValRec.TESTFIELD(Blocked, FALSE);

                                                                IF (DimValRec."Wage Component" <> '') AND ("Wage Component" <> DimValRec."Wage Component") THEN
                                                                  VALIDATE("Wage Component", DimValRec."Wage Component");

                                                                CALCFIELDS("Cost Object Description");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 70  ;   ;Cost Object Description;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Global Dimension No.=FILTER(2),
                                                                                                    Code=FIELD(Cost Object)));
                                                   CaptionML=[ENU=Cost Object Description;
                                                              NOR=Kostnadsobjekt, Beskrivelse;
                                                              SVE=Kostnadsobjekt, beskrivning];
                                                   Editable=No;
                                                   CaptionClass='1,11012000,2, , ' + Text000 }
    { 80  ;   ;Wage Component      ;Code10        ;TableRelation="Wage Component".Code WHERE (Component Type=FILTER(Hours|Expenses));
                                                   OnValidate=BEGIN
                                                                IF "Wage Component" <> '' THEN BEGIN
                                                                  WageCompRec.GET("Wage Component");
                                                                  Overtime := WageCompRec.Overtime;
                                                                END ELSE BEGIN
                                                                  Overtime := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Wage Component;
                                                              NOR=L›nnsart;
                                                              SVE=L”neart] }
    { 90  ;   ;Overtime            ;Boolean       ;CaptionML=[ENU=Overtime;
                                                              NOR=Overtid;
                                                              SVE=™vertid];
                                                   Editable=No }
    { 100 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                CALCFIELDS("Normal Hours","Overtime Hours"); //TO KM
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal] }
    { 110 ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 120 ;   ;Normal Hours        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("EP Hour Accounting Line".Quantity WHERE (Document No.=FIELD(Document No.),
                                                                                                             Overtime=CONST(No)));
                                                   CaptionML=[ENU=Normal Hours;
                                                              NOR=Normal arbeidstid;
                                                              SVE=Normal arbetstid];
                                                   Editable=No }
    { 130 ;   ;Overtime Hours      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("EP Hour Accounting Line".Quantity WHERE (Document No.=FIELD(Document No.),
                                                                                                             Overtime=CONST(Yes)));
                                                   CaptionML=[ENU=Overtime Hours;
                                                              NOR=Overtidstimer;
                                                              SVE=™vertidstimmar];
                                                   Editable=No }
    { 140 ;   ;Km                  ;Decimal       ;CaptionML=[ENU=Km;
                                                              NOR=Km;
                                                              SVE=Km];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;Clustered=Yes }
    {    ;Overtime,Document No.                   ;SumIndexFields=Quantity }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      WageCompRec@1100485000 : Record 11012014;
      ProjElemRec@1100485001 : Record 11012010;
      DimMgt@1100485002 : Codeunit 408;
      DimValRec@1100485003 : Record 349;
      Text000@1100527350 : TextConst 'ENU=Description;SVE=Beskrivning';

    PROCEDURE GetHoursFromPostedHours@1100485003(iEPHourAccountingRec@1100485004 : Record 11012115);
    VAR
      PostedEPHourHeaderRec@1100485000 : Record 11012115;
      PostedEPHourLineRec@1100485001 : Record 11012116;
      EPHourAccountingLineRec@1100485002 : Record 11012116;
      PostedEPHourHeaderFrm@1100485005 : Page 11020438;
      NextLineNo@1100485003 : Integer;
    BEGIN
      PostedEPHourHeaderRec.SETCURRENTKEY("No."); //Better if this could also be Employee No.
      PostedEPHourHeaderRec.SETRANGE("Employee No.",iEPHourAccountingRec."Employee No.");
      PostedEPHourHeaderRec.SETRANGE(Status,PostedEPHourHeaderRec.Status::Posted);
      IF PostedEPHourHeaderRec.FIND('+') THEN;
      PostedEPHourHeaderFrm.SETTABLEVIEW(PostedEPHourHeaderRec);
      PostedEPHourHeaderFrm.SETRECORD(PostedEPHourHeaderRec);
      PostedEPHourHeaderFrm.LOOKUPMODE := TRUE;
      IF NOT (PostedEPHourHeaderFrm.RUNMODAL = ACTION::LookupOK) THEN
        EXIT;

      PostedEPHourHeaderFrm.GETRECORD(PostedEPHourHeaderRec);

      PostedEPHourLineRec.SETRANGE("Document No.",PostedEPHourHeaderRec."No.");
      IF PostedEPHourLineRec.FIND('-') THEN BEGIN
        IF EPHourAccountingLineRec.FIND('+') THEN
          NextLineNo := EPHourAccountingLineRec."Line No."
        ELSE
          NextLineNo := 0;
        REPEAT
          NextLineNo += 10000;

          EPHourAccountingLineRec.INIT;
          EPHourAccountingLineRec.TRANSFERFIELDS(PostedEPHourLineRec);
          EPHourAccountingLineRec."Document No." := iEPHourAccountingRec."No.";
          EPHourAccountingLineRec."Line No." := NextLineNo;
          EPHourAccountingLineRec.INSERT(TRUE);

          EPHourAccountingLineRec.Quantity := 0;
          EPHourAccountingLineRec.Overtime := FALSE;
      //    EPHourAccountingLineRec.Description := '';

          EPHourAccountingLineRec.MODIFY(TRUE);
        UNTIL PostedEPHourLineRec.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

