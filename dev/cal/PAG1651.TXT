OBJECT Page 1651 Curr. Exch. Rate Service Card
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Currency Exch. Rate Service;
               NOR=Valutakurstjeneste;
               SVE=Valutakurstj„nst];
    SourceTable=Table1650;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Setup;
                                NOR=Ny,Prosess,Rapport,Oppsett;
                                SVE=Ny,Process,Rapport,Konfigurera];
    OnOpenPage=VAR
                 PermissionManager@1000 : Codeunit 9002;
                 ApplicationAreaMgmtFacade@1001 : Codeunit 9179;
               BEGIN
                 ApplicationAreaMgmtFacade.CheckAppAreaOnlyBasic;

                 UpdateBasedOnEnable;
                 IsSoftwareAsService := PermissionManager.SoftwareAsAService;
               END;

    OnInsertRecord=VAR
                     TempField@1002 : TEMPORARY Record 2000000041;
                     MapCurrencyExchangeRate@1001 : Codeunit 1280;
                   BEGIN
                     MapCurrencyExchangeRate.GetSuggestedFields(TempField);
                     CurrPage.SimpleDataExchSetup.PAGE.SetSuggestedField(TempField);
                     UpdateSimpleMappingsPart;
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT Enabled THEN
                         IF NOT CONFIRM(STRSUBSTNO(EnableServiceQst,CurrPage.CAPTION),TRUE) THEN
                           EXIT(FALSE);
                     END;

    OnAfterGetCurrRecord=VAR
                           ServiceURL@1000 : Text;
                         BEGIN
                           WebServiceURL := GetWebServiceURL(ServiceURL);
                           IF WebServiceURL <> '' THEN
                             GenerateXMLStructure;

                           UpdateSimpleMappingsPart;
                           UpdateBasedOnEnable;
                         END;

    ActionList=ACTIONS
    {
      { 9       ;    ;ActionContainer;
                      Name=Process;
                      CaptionML=[ENU=Process;
                                 NOR=Prosess;
                                 SVE=Process];
                      ActionContainerType=ActionItems }
      { 10      ;1   ;Action    ;
                      Name=Preview;
                      CaptionML=[ENU=Preview;
                                 NOR=Forh†ndsvisning;
                                 SVE=F”rhandsgranskning];
                      ToolTipML=[ENU=Test the setup of the currency exchange rate service to make sure the service is working.;
                                 NOR=Test oppsettet av valutakurstjenesten for † s›rge for at tjenesten fungerer.;
                                 SVE=Testa inst„llningarna av valutakurstj„nsten som du vill vara s„ker p† att tj„nsten fungerar.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ReviewWorksheet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TempCurrencyExchangeRate@1001 : TEMPORARY Record 330;
                                 UpdateCurrencyExchangeRates@1000 : Codeunit 1281;
                               BEGIN
                                 TESTFIELD(Code);
                                 VerifyServiceURL;
                                 VerifyDataExchangeLineDefinition;
                                 UpdateCurrencyExchangeRates.GenerateTempDataFromService(TempCurrencyExchangeRate,Rec);
                                 PAGE.RUN(PAGE::"Currency Exchange Rates",TempCurrencyExchangeRate);
                               END;
                                }
      { 13      ;1   ;Action    ;
                      Name=JobQueueEntry;
                      CaptionML=[ENU=Job Queue Entry;
                                 NOR=Jobbk›post;
                                 SVE=Jobbk”transaktion];
                      ToolTipML=[ENU=View or edit the job that updates the exchange rates from the service. For example, you can see the status or change how often rates are updated.;
                                 NOR=Vis eller rediger funksjonen som oppdaterer valutakursene fra tjenesten. Du kan for eksempel vise statusen eller endre hvor ofte kursene blir oppdatert.;
                                 SVE=Visa eller redigera jobbet som uppdaterar valutakurser fr†n tj„nsten. Du kan till exempel visa status eller „ndra hur ofta kurserna uppdateras.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=Enabled;
                      Image=JobListSetup;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowJobQueueEntry;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 5   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=Allm„nt];
                GroupType=Group }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the setup of a service to update currency exchange rates.;
                           NOR=Angir oppsettet av en tjeneste for † oppdatere valutakurser.;
                           SVE=Anger inst„llningarna f”r en tj„nst som uppdaterar valutakurser.];
                ApplicationArea=#Suite;
                SourceExpr=Code;
                Editable=NotEnabledAndCurrPageEditable }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the setup of a service to update currency exchange rates.;
                           NOR=Angir oppsettet av en tjeneste for † oppdatere valutakurser.;
                           SVE=Anger inst„llningarna f”r en tj„nst som uppdaterar valutakurser.];
                ApplicationArea=#Suite;
                SourceExpr=Description;
                Editable=NotEnabledAndCurrPageEditable }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the currency exchange rate service is enabled. Only one service can be enabled at a time.;
                           NOR=Angir om valutakurstjenesten er aktivert. Bare ‚n tjeneste kan v‘re aktivert om gangen.;
                           SVE=Anger om valutakurstj„nsten har aktiverats. Bara en tj„nst i taget kan vara aktiverad.];
                ApplicationArea=#Suite;
                SourceExpr=Enabled;
                OnValidate=BEGIN
                             NotEnabledAndCurrPageEditable := NOT Enabled AND CurrPage.EDITABLE;
                             EnabledAndCurrPageEditable := Enabled AND CurrPage.EDITABLE;
                             CurrPage.UPDATE;
                           END;
                            }

    { 16  ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=ShowEnableWarning;
                Enabled=EnabledAndCurrPageEditable;
                Editable=false;
                OnDrillDown=BEGIN
                              DrilldownCode;
                            END;
                             }

    { 4   ;1   ;Group     ;
                CaptionML=[ENU=Service;
                           NOR=Tjeneste;
                           SVE=Service];
                GroupType=Group }

    { 11  ;2   ;Field     ;
                Name=ServiceURL;
                CaptionML=[ENU=Service URL;
                           NOR=URL-adresse for tjeneste;
                           SVE=Servicesida];
                ToolTipML=[ENU=Specifies if the currency exchange rate service is enabled. Only one service can be enabled at a time.;
                           NOR=Angir om valutakurstjenesten er aktivert. Bare ‚n tjeneste kan v‘re aktivert om gangen.;
                           SVE=Anger om valutakurstj„nsten har aktiverats. Bara en tj„nst i taget kan vara aktiverad.];
                ApplicationArea=#Suite;
                SourceExpr=WebServiceURL;
                Editable=NotEnabledAndCurrPageEditable;
                MultiLine=Yes;
                OnValidate=BEGIN
                             SetWebServiceURL(WebServiceURL);
                             GenerateXMLStructure;
                           END;
                            }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the service provider.;
                           NOR=Angir navnet p† tjenesteleverand›ren.;
                           SVE=Anger namnet p† tj„nstleverant”ren.];
                ApplicationArea=#Suite;
                SourceExpr="Service Provider";
                Editable=NotEnabledAndCurrPageEditable }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the URL of the service provider's terms of service.;
                           NOR=Angir URL-adressen for tjenesteleverand›rens vilk†r for bruk.;
                           SVE=Anger webbadressen till tj„nstleverant”rens anv„ndarvillkor.];
                ApplicationArea=#Suite;
                SourceExpr="Terms of Service";
                Editable=NotEnabledAndCurrPageEditable }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if web requests occurring in connection with the service are logged. The log is located in the server Temp folder.;
                           NOR=Angir om webforesp›rsler som oppst†r i forbindelse med tjenesten, blir loggf›rt. Loggen finnes i Temp-mappen p† serveren.;
                           SVE=Anger om webbf”rfr†gningar som uppst†r i samband med tj„nsten loggas. Loggen placeras i mappen Temp.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Log Web Requests";
                Visible=NOT IsSoftwareAsService;
                Editable=NotEnabledAndCurrPageEditable }

    { 6   ;1   ;Part      ;
                Name=SimpleDataExchSetup;
                ApplicationArea=#Suite;
                PagePartID=Page1265;
                Editable=NotEnabledAndCurrPageEditable;
                PartType=Page }

  }
  CODE
  {
    VAR
      TempXMLBuffer@1001 : TEMPORARY Record 1235;
      WebServiceURL@1000 : Text;
      NotEnabledAndCurrPageEditable@1002 : Boolean;
      EnabledWarningTok@1004 : TextConst 'ENU=You must disable the service before you can make changes.;NOR=Du m† deaktivere tjenesten f›r du kan foreta endringer.;SVE=Du m†ste inaktivera tj„nsten innan du kan g”ra „ndringar.';
      DisableEnableQst@1003 : TextConst 'ENU=Do you want to disable currency exchange rate service?;NOR=Vil du deaktivere valutakurstjenesten?;SVE=Vill du inaktivera valutakurstj„nsten?';
      EnabledAndCurrPageEditable@1009 : Boolean;
      IsSoftwareAsService@1008 : Boolean;
      ShowEnableWarning@1005 : Text;
      EnableServiceQst@1006 : TextConst '@@@="%1 = This Page Caption (Currency Exch. Rate Service)";ENU=The %1 is not enabled. Are you sure you want to exit?;NOR=%1 er ikke aktivert. Er du sikker p† at du vil avslutte?;SVE=%1 har inte aktiverats. Vill du avsluta?';
      XmlStructureIsNotSupportedErr@1007 : TextConst 'ENU=" The provided url does not contain a supported structure.";NOR=" Den angitte nettadressen inneholder ikke en st›ttet struktur.";SVE=" Den angivna webbadressen inneh†ller inte n†gon struktur som st”ds."';

    LOCAL PROCEDURE UpdateSimpleMappingsPart@2();
    BEGIN
      CurrPage.SimpleDataExchSetup.PAGE.SetDataExchDefCode("Data Exch. Def Code");
      CurrPage.SimpleDataExchSetup.PAGE.UpdateData;
      CurrPage.SimpleDataExchSetup.PAGE.UPDATE(FALSE);
      CurrPage.SimpleDataExchSetup.PAGE.SetSourceToBeMandatory("Web Service URL".HASVALUE);
    END;

    LOCAL PROCEDURE GenerateXMLStructure@1();
    VAR
      ServiceURL@1000 : Text;
    BEGIN
      TempXMLBuffer.RESET;
      TempXMLBuffer.DELETEALL;
      GetWebServiceURL(ServiceURL);
      IF GetXMLStructure(TempXMLBuffer,ServiceURL) THEN BEGIN
        TempXMLBuffer.RESET;
        CurrPage.SimpleDataExchSetup.PAGE.SetXMLDefinition(TempXMLBuffer);
      END ELSE
        ShowHttpError;
    END;

    LOCAL PROCEDURE UpdateBasedOnEnable@4();
    BEGIN
      NotEnabledAndCurrPageEditable := NOT Enabled AND CurrPage.EDITABLE;
      EnabledAndCurrPageEditable := Enabled AND CurrPage.EDITABLE;
      ShowEnableWarning := '';
      IF CurrPage.EDITABLE AND Enabled THEN
        ShowEnableWarning := EnabledWarningTok;
    END;

    LOCAL PROCEDURE DrilldownCode@3();
    BEGIN
      IF CONFIRM(DisableEnableQst,TRUE) THEN BEGIN
        Enabled := FALSE;
        UpdateBasedOnEnable;
        CurrPage.UPDATE;
      END;
    END;

    LOCAL PROCEDURE ShowHttpError@8();
    VAR
      ActivityLog@1000 : Record 710;
      WebRequestHelper@1006 : Codeunit 1299;
      XMLDOMMgt@1005 : Codeunit 6224;
      WebException@1004 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.WebException";
      XmlNode@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ResponseInputStream@1002 : InStream;
      ErrorText@1001 : Text;
    BEGIN
      ErrorText := WebRequestHelper.GetWebResponseError(WebException,WebServiceURL);

      ActivityLog.LogActivity(Rec,ActivityLog.Status::Failed,"Service Provider",Description,ErrorText);

      IF ISNULL(WebException.Response) THEN
        ERROR(ErrorText);

      ResponseInputStream := WebException.Response.GetResponseStream;

      XMLDOMMgt.LoadXMLNodeFromInStream(ResponseInputStream,XmlNode);

      ErrorText := XmlStructureIsNotSupportedErr;

      ERROR(ErrorText);
    END;

    BEGIN
    END.
  }
}

