OBJECT Codeunit 11012084 WhiteVision Management
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FileMgt@1100525000 : Codeunit 419;
      ValueReturned@1100528300 : Boolean;
      Text000@1100528309 : TextConst 'DEU=WhiteVision Viewer ist noch aktiv.;ENU=WhiteVision viewer window is still present.;NLD=WhiteVision viewer is nog actief.';
      Text001@1100528310 : TextConst 'DEU=WhiteVision Viewer kann nicht gestartet werden.\\(Kann Datei %1 nicht laden);ENU=WhiteVision viewer can not be started.\\(File %1 can not be loaded);NLD=WhiteVision viewer kan niet gestart worden.\\(Kan file %1 niet laden)';
      SupplyingCompany@1100528400 : Text[30];

    [External]
    PROCEDURE Start@1100528303(VAR TiffViewerInstance@1100528500 : Variant);
    VAR
      TiffViewer@1100528501 : DotNet "'_4PS.Tiff.Viewer.Nav, Version=3.22.0.0, Culture=neutral, PublicKeyToken=284c6828aa038142'._4PS.Tiff.Viewer.Nav.NavToWhiteVisionIntegration" RUNONCLIENT;
    BEGIN
      IF (NOT InstanceIsNull(TiffViewerInstance)) THEN
        Stop(TiffViewerInstance);

      IF (NOT InstanceIsNull(TiffViewerInstance)) THEN
        ERROR(Text000);

      TiffViewer := TiffViewer.NavToWhiteVisionIntegration;

      TiffViewer.Start;
      TiffViewerInstance := TiffViewer;
    END;

    [External]
    PROCEDURE Stop@1100528304(VAR TiffViewerInstance@1100528500 : Variant);
    VAR
      TiffViewer@1100528501 : DotNet "'_4PS.Tiff.Viewer.Nav, Version=3.22.0.0, Culture=neutral, PublicKeyToken=284c6828aa038142'._4PS.Tiff.Viewer.Nav.NavToWhiteVisionIntegration" RUNONCLIENT;
    BEGIN
      IF NOT InstanceIsNull(TiffViewerInstance) THEN BEGIN
        TiffViewer := TiffViewerInstance;
        TiffViewer.Stop;
        CLEAR(TiffViewerInstance);
      END;
    END;

    [External]
    PROCEDURE ActivateField@1100528302(VAR TiffViewerInstance@1100528500 : Variant;FieldName@1100528301 : Text[30];FieldType@1100528300 : 'Text,Decimal,Date,Money,RegEx') : Text[250];
    VAR
      TiffViewer@1100528501 : DotNet "'_4PS.Tiff.Viewer.Nav, Version=3.22.0.0, Culture=neutral, PublicKeyToken=284c6828aa038142'._4PS.Tiff.Viewer.Nav.NavToWhiteVisionIntegration" RUNONCLIENT;
    BEGIN
      ValueReturned := FALSE;
      TiffViewer := TiffViewerInstance;
      EXIT(TiffViewer.ActivateField(FieldName, FieldType));
    END;

    [External]
    PROCEDURE LoadDocuments@1100528300(VAR TiffViewerInstance@1100528500 : Variant;DocNo@1100528300 : Code[20];ViewOnly@1100528301 : Boolean;InputDate@1100528502 : Date);
    VAR
      PurchasesPayablesSetup@1100528303 : Record 312;
      FileName@1100528304 : Text[250];
      MetaFileName@1100528302 : Text[250];
      TiffViewer@1100528501 : DotNet "'_4PS.Tiff.Viewer.Nav, Version=3.22.0.0, Culture=neutral, PublicKeyToken=284c6828aa038142'._4PS.Tiff.Viewer.Nav.NavToWhiteVisionIntegration" RUNONCLIENT;
      FileNameDoesNotExist@1100528503 : Boolean;
    BEGIN
      IF SupplyingCompany <> '' THEN
        PurchasesPayablesSetup.CHANGECOMPANY(SupplyingCompany);

      PurchasesPayablesSetup.GET;

      IF PurchasesPayablesSetup."Folder Structure by Year/Month" THEN BEGIN
        FileName := STRSUBSTNO('%1%2%3.%4',
          PurchasesPayablesSetup."File Location Scanned Invoices",
          CalcYearAndMonth(InputDate),
          DocNo,
          PurchasesPayablesSetup."File Extension Scanned Inv");
        IF (NOT FileMgt.ClientFileExists(FileName)) THEN
          FileNameDoesNotExist := TRUE;
      END;

      IF (NOT PurchasesPayablesSetup."Folder Structure by Year/Month") OR (FileNameDoesNotExist) THEN
        FileName := STRSUBSTNO('%1%2.%3',
          PurchasesPayablesSetup."File Location Scanned Invoices",
          DocNo,
          PurchasesPayablesSetup."File Extension Scanned Inv");


      IF (NOT FileMgt.ClientFileExists(FileName)) THEN BEGIN
        Stop(TiffViewerInstance);
        ERROR(Text001, FileName);
      END;

      IF (NOT ViewOnly) THEN BEGIN
        MetaFileName := COPYSTR(FileName, 1, STRLEN(FileName)-3) + 'xml';
        IF (NOT FileMgt.ClientFileExists(MetaFileName)) THEN BEGIN
          Stop(TiffViewerInstance);
          ERROR(Text001, MetaFileName);
        END;
      END;

      Start(TiffViewerInstance);
      TiffViewer := TiffViewerInstance;
      TiffViewer.LoadDocument(FileName, FALSE);

      IF (NOT ViewOnly) THEN
        TiffViewer.LoadMetaDataFromFile(MetaFileName);
    END;

    [External]
    PROCEDURE ShowDocument@1100525000(VAR TiffViewerInstance@1100528500 : Variant);
    VAR
      TiffViewer@1100528501 : DotNet "'_4PS.Tiff.Viewer.Nav, Version=3.22.0.0, Culture=neutral, PublicKeyToken=284c6828aa038142'._4PS.Tiff.Viewer.Nav.NavToWhiteVisionIntegration" RUNONCLIENT;
    BEGIN
      TiffViewer := TiffViewerInstance;
      TiffViewer.ShowDocument;
    END;

    [External]
    PROCEDURE SetSupplyingCompany@1100528400(SupplyingCompany2@1100528400 : Text[30]);
    BEGIN
      SupplyingCompany := SupplyingCompany2;
    END;

    LOCAL PROCEDURE InstanceIsNull@1100528500(VAR TiffViewerInstance@1100528500 : Variant) : Boolean;
    BEGIN
      IF (TiffViewerInstance.ISDOTNET) THEN
          EXIT(ISNULL(TiffViewerInstance));

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CalcYearAndMonth@1100528501(InputDate@1100528502 : Date) : Text[8];
    VAR
      Month@1100528500 : Integer;
      Year@1100528501 : Integer;
    BEGIN
      Month := DATE2DMY(InputDate,2);
      Year := DATE2DMY(InputDate,3);

      IF Month < 10 THEN
        EXIT(STRSUBSTNO('%1\0%2\',Year,Month))
      ELSE
        EXIT(STRSUBSTNO('%1\%2\',Year,Month))
    END;

    [External]
    PROCEDURE GetDocumentFilePath@1100528100(InputDate@1100528101 : Date;DocNo@1100528102 : Code[20];VAR FileName@1100528104 : Text) : Boolean;
    VAR
      PurchasesPayablesSetup@1100528100 : Record 312;
      FileNameDoesNotExist@1100528103 : Boolean;
    BEGIN
      IF SupplyingCompany <> '' THEN
        PurchasesPayablesSetup.CHANGECOMPANY(SupplyingCompany);

      PurchasesPayablesSetup.GET;

      IF PurchasesPayablesSetup."Folder Structure by Year/Month" THEN BEGIN
        IF InputDate <> 0D THEN BEGIN
          FileName := STRSUBSTNO('%1%2%3.%4',
            PurchasesPayablesSetup."File Location Scanned Invoices",
            CalcYearAndMonth(InputDate),
            DocNo,
            PurchasesPayablesSetup."File Extension Scanned Inv");
          IF (NOT FileMgt.ServerFileExists(FileName)) THEN
            FileNameDoesNotExist := TRUE;
        END ELSE
          FileNameDoesNotExist := TRUE;
      END;

      IF (NOT PurchasesPayablesSetup."Folder Structure by Year/Month") OR (FileNameDoesNotExist) THEN
        FileName := STRSUBSTNO('%1%2.%3',
          PurchasesPayablesSetup."File Location Scanned Invoices",
          DocNo,
          PurchasesPayablesSetup."File Extension Scanned Inv");

      IF (NOT FileMgt.ServerFileExists(FileName)) THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

