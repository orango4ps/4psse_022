OBJECT Page 9255 Tasks Matrix
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Tasks Matrix;
               NOR=Oppgavematrise;
               SVE=Uppgiftsmatris];
    LinksAllowed=No;
    SourceTable=Table11072053;
    DataCaptionExpr=FORMAT(SELECTSTR(OutputOption + 1,Text001));
    PageType=List;
    OnOpenPage=BEGIN
                 MATRIX_NoOfMatrixColumns := ARRAYLEN(MATRIX_CellData);
                 IF IncludeClosed THEN
                   SETRANGE("Task Closed Filter")
                 ELSE
                   SETRANGE("Task Closed Filter",FALSE);

                 IF StatusFilter <> StatusFilter::" " THEN
                   SETRANGE("Task Status Filter",StatusFilter - 1)
                 ELSE
                   SETRANGE("Task Status Filter");

                 IF PriorityFilter <> PriorityFilter::" " THEN
                   SETRANGE("Priority Filter",PriorityFilter - 1)
                 ELSE
                   SETRANGE("Priority Filter");

                 ValidateFilter;
                 ValidateTableOption;
               END;

    OnFindRecord=BEGIN
                   EXIT(FindRec(TableOption,Rec,Which));
                 END;

    OnNextRecord=BEGIN
                   EXIT(NextRec(TableOption,Rec,Steps));
                 END;

    OnAfterGetRecord=VAR
                       MATRIX_CurrentColumnOrdinal@1000 : Integer;
                     BEGIN
                       IF (Type = Type::Person) AND (TableOption = TableOption::Contact) THEN
                         NameIndent := 1
                       ELSE
                         NameIndent := 0;

                       MATRIX_CurrentColumnOrdinal := 0;
                       WHILE MATRIX_CurrentColumnOrdinal < MATRIX_NoOfMatrixColumns DO BEGIN
                         MATRIX_CurrentColumnOrdinal := MATRIX_CurrentColumnOrdinal + 1;
                         MATRIX_OnAfterGetRecord(MATRIX_CurrentColumnOrdinal);
                       END;

                       FormatLine;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the involved entry or record, according to the specified number series.;
                           NOR=Angir nummeret p† den aktuelle oppf›ringen eller posten, i henhold til den angitte nummerserien.;
                           SVE=Anger numret f”r den ber”rda transaktionen eller posten, enligt den angivna nummerserien.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="No.";
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnLookup=VAR
                           Campaign@1040 : Record 11072034;
                           SalesPurchPerson@1041 : Record 13;
                           Contact@1042 : Record 5050;
                           Team@1043 : Record 5083;
                           Employee@1210190002 : Record 5200;
                           Tryout@1210190003 : Record 11012750;
                           TryoutQuote@1210190004 : Record 11012758;
                           Estimate@1210190005 : Record 11012151;
                           Job@1210190006 : Record 11072003;
                           Parcel@1210190007 : Record 11012240;
                           Building@1210190008 : Record 11071819;
                           ServiceLocation@1210190010 : Record 11012801;
                           ServiceContract@1210190009 : Record 11012812;
                           ServiceCall@1210190011 : Record 11012822;
                           ServiceOrder@1210190012 : Record 11012823;
                         BEGIN
                           CASE TableOption OF
                             TableOption::Salesperson:
                               BEGIN
                                 SalesPurchPerson.GET("No.");
                                 PAGE.RUNMODAL(0,SalesPurchPerson);
                               END;
                             TableOption::Team:
                               BEGIN
                                 Team.GET("No.");
                                 PAGE.RUNMODAL(0,Team);
                               END;
                             TableOption::Campaign:
                               BEGIN
                                 Campaign.GET("No.");
                                 PAGE.RUNMODAL(0,Campaign);
                               END;
                             TableOption::Contact:
                               BEGIN
                                 Contact.GET("No.");
                                 PAGE.RUNMODAL(0,Contact);
                               END;
                           //**4PS.sn
                              TableOption::"Responsible Person":
                               BEGIN
                                 Employee.GET("No.");
                                 PAGE.RUNMODAL(0,Employee);
                               END;
                             TableOption::"Try-out":
                               BEGIN
                                 Tryout.GET("No.");
                                 PAGE.RUNMODAL(0,Tryout);
                               END;
                             TableOption::"Try-out Quote":
                               BEGIN
                                 TryoutQuote.GET("No.");
                                 PAGE.RUNMODAL(0,TryoutQuote);
                               END;
                             TableOption::Estimate:
                               BEGIN
                                 Estimate.GET("No.");
                                 PAGE.RUNMODAL(0,Estimate);
                               END;
                             TableOption::Project:
                               BEGIN
                                 Job.GET("No.");
                                 PAGE.RUNMODAL(0,Job);
                               END;
                             TableOption::Parcel:
                               BEGIN
                                 Parcel.GET("No.");
                                 PAGE.RUNMODAL(0,Parcel);
                               END;
                             TableOption::Building:
                               BEGIN
                                 Building.GET("No.");
                                 PAGE.RUNMODAL(0,Building);
                               END;
                             TableOption::"Service Location":
                               BEGIN
                                 ServiceLocation.GET("No.");
                                 PAGE.RUNMODAL(0,ServiceLocation);
                               END;
                             TableOption::"Service Contract":
                               BEGIN
                                 ServiceContract.GET("No.");
                                 PAGE.RUNMODAL(0,ServiceContract);
                               END;
                             TableOption::"Service Call":
                               BEGIN
                                 ServiceCall.GET("No.");
                                 PAGE.RUNMODAL(0,ServiceCall);
                               END;
                             TableOption::"Service Order":
                               BEGIN
                                 ServiceOrder.GET("No.");
                                 PAGE.RUNMODAL(0,ServiceOrder);
                               END;
                           //**4PS.en
                           END;
                         END;
                          }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the task.;
                           NOR=Angir navnet p† oppgaven.;
                           SVE=Anger uppgiftens namn.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Name;
                Style=Strong;
                StyleExpr=StyleIsStrong }

    { 1008;2   ;Field     ;
                Name=Field1;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[1];
                CaptionClass='3,' + ColumnCaptions[1];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(1);
                            END;
                             }

    { 1009;2   ;Field     ;
                Name=Field2;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[2];
                CaptionClass='3,' + ColumnCaptions[2];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(2);
                            END;
                             }

    { 1010;2   ;Field     ;
                Name=Field3;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[3];
                CaptionClass='3,' + ColumnCaptions[3];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(3);
                            END;
                             }

    { 1011;2   ;Field     ;
                Name=Field4;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[4];
                CaptionClass='3,' + ColumnCaptions[4];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(4);
                            END;
                             }

    { 1012;2   ;Field     ;
                Name=Field5;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[5];
                CaptionClass='3,' + ColumnCaptions[5];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(5);
                            END;
                             }

    { 1013;2   ;Field     ;
                Name=Field6;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[6];
                CaptionClass='3,' + ColumnCaptions[6];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(6);
                            END;
                             }

    { 1014;2   ;Field     ;
                Name=Field7;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[7];
                CaptionClass='3,' + ColumnCaptions[7];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(7);
                            END;
                             }

    { 1015;2   ;Field     ;
                Name=Field8;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[8];
                CaptionClass='3,' + ColumnCaptions[8];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(8);
                            END;
                             }

    { 1016;2   ;Field     ;
                Name=Field9;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[9];
                CaptionClass='3,' + ColumnCaptions[9];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(9);
                            END;
                             }

    { 1017;2   ;Field     ;
                Name=Field10;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[10];
                CaptionClass='3,' + ColumnCaptions[10];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(10);
                            END;
                             }

    { 1018;2   ;Field     ;
                Name=Field11;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[11];
                CaptionClass='3,' + ColumnCaptions[11];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(11);
                            END;
                             }

    { 1019;2   ;Field     ;
                Name=Field12;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[12];
                CaptionClass='3,' + ColumnCaptions[12];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(12);
                            END;
                             }

    { 1020;2   ;Field     ;
                Name=Field13;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[13];
                CaptionClass='3,' + ColumnCaptions[13];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(13);
                            END;
                             }

    { 1021;2   ;Field     ;
                Name=Field14;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[14];
                CaptionClass='3,' + ColumnCaptions[14];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(14);
                            END;
                             }

    { 1022;2   ;Field     ;
                Name=Field15;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[15];
                CaptionClass='3,' + ColumnCaptions[15];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(15);
                            END;
                             }

    { 1023;2   ;Field     ;
                Name=Field16;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[16];
                CaptionClass='3,' + ColumnCaptions[16];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(16);
                            END;
                             }

    { 1024;2   ;Field     ;
                Name=Field17;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[17];
                CaptionClass='3,' + ColumnCaptions[17];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(17);
                            END;
                             }

    { 1025;2   ;Field     ;
                Name=Field18;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[18];
                CaptionClass='3,' + ColumnCaptions[18];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(18);
                            END;
                             }

    { 1026;2   ;Field     ;
                Name=Field19;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[19];
                CaptionClass='3,' + ColumnCaptions[19];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(19);
                            END;
                             }

    { 1027;2   ;Field     ;
                Name=Field20;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[20];
                CaptionClass='3,' + ColumnCaptions[20];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(20);
                            END;
                             }

    { 1028;2   ;Field     ;
                Name=Field21;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[21];
                CaptionClass='3,' + ColumnCaptions[21];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(21);
                            END;
                             }

    { 1029;2   ;Field     ;
                Name=Field22;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[22];
                CaptionClass='3,' + ColumnCaptions[22];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(22);
                            END;
                             }

    { 1030;2   ;Field     ;
                Name=Field23;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[23];
                CaptionClass='3,' + ColumnCaptions[23];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(23);
                            END;
                             }

    { 1031;2   ;Field     ;
                Name=Field24;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[24];
                CaptionClass='3,' + ColumnCaptions[24];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(24);
                            END;
                             }

    { 1032;2   ;Field     ;
                Name=Field25;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[25];
                CaptionClass='3,' + ColumnCaptions[25];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(25);
                            END;
                             }

    { 1033;2   ;Field     ;
                Name=Field26;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[26];
                CaptionClass='3,' + ColumnCaptions[26];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(26);
                            END;
                             }

    { 1034;2   ;Field     ;
                Name=Field27;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[27];
                CaptionClass='3,' + ColumnCaptions[27];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(27);
                            END;
                             }

    { 1035;2   ;Field     ;
                Name=Field28;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[28];
                CaptionClass='3,' + ColumnCaptions[28];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(28);
                            END;
                             }

    { 1036;2   ;Field     ;
                Name=Field29;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[29];
                CaptionClass='3,' + ColumnCaptions[29];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(29);
                            END;
                             }

    { 1037;2   ;Field     ;
                Name=Field30;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[30];
                CaptionClass='3,' + ColumnCaptions[30];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(30);
                            END;
                             }

    { 1038;2   ;Field     ;
                Name=Field31;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[31];
                CaptionClass='3,' + ColumnCaptions[31];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(31);
                            END;
                             }

    { 1039;2   ;Field     ;
                Name=Field32;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=MATRIX_CellData[32];
                CaptionClass='3,' + ColumnCaptions[32];
                Style=Strong;
                StyleExpr=StyleIsStrong;
                OnDrillDown=BEGIN
                              SetFilters;
                              MatrixOnDrillDown(32);
                            END;
                             }

  }
  CODE
  {
    VAR
      Task@1003 : Record 5080;
      MatrixRecords@1002 : ARRAY [32] OF Record 2000000007;
      TempCont@1210190016 : TEMPORARY Record 5050;
      TempSalespersonPurchaser@1210190015 : TEMPORARY Record 13;
      TempTeam@1210190014 : TEMPORARY Record 5083;
      TempCampaign@1210190013 : TEMPORARY Record 11072034;
      TempEmployee@1210190012 : TEMPORARY Record 5200;
      TempTryout@1210190011 : TEMPORARY Record 11012750;
      TempTryoutQuote@1210190010 : TEMPORARY Record 11012758;
      TempEstimate@1210190009 : TEMPORARY Record 11012151;
      TempJob@1210190008 : TEMPORARY Record 11072003;
      TempParcel@1210190007 : TEMPORARY Record 11012240;
      TempBuilding@1210190006 : TEMPORARY Record 11071819;
      TempServiceLocation@1210190005 : TEMPORARY Record 11012801;
      TempServiceContract@1210190004 : TEMPORARY Record 11012812;
      TempServiceCall@1210190003 : TEMPORARY Record 11012822;
      TempServiceOrder@1210190002 : TEMPORARY Record 11012823;
      OutputOption@1084 : 'No. of Tasks,Contact No.';
      TableOption@1085 : 'Salesperson,Team,Campaign,Contact,Responsible Person,Try-out,Try-out Quote,Estimate,Project,Parcel,Building,Service Location,Service Contract,Service Call,Service Order';
      StatusFilter@1086 : ' ,Not Started,In Progress,Completed,Waiting,Postponed';
      PriorityFilter@1087 : ' ,Low,Normal,High';
      IncludeClosed@1088 : Boolean;
      StyleIsStrong@1004 : Boolean INDATASET;
      FilterSalesPerson@1089 : Code[250];
      FilterTeam@1090 : Code[250];
      FilterCampaign@1091 : Code[250];
      FilterContact@1092 : Code[250];
      Text001@1093 : TextConst 'ENU=No. of Tasks,Contact No.;NOR=Antall oppgaver,Kontaktnr.;SVE=Antal uppgifter,Kontaktnr';
      FilterRespPerson@1210190001 : Code[250];
      FilterProject@1210190000 : Code[250];
      MATRIX_NoOfMatrixColumns@1095 : Integer;
      MATRIX_CellData@1096 : ARRAY [32] OF Text[1024];
      ColumnCaptions@1097 : ARRAY [32] OF Text[1024];
      ColumnDateFilters@1001 : ARRAY [32] OF Text[50];
      NameIndent@19079073 : Integer INDATASET;
      MultipleTxt@1094 : TextConst 'ENU=Multiple;NOR=Flere;SVE=Flera';

    LOCAL PROCEDURE SetFilters@1098();
    BEGIN
      IF StatusFilter <> StatusFilter::" " THEN BEGIN
        SETRANGE("Task Status Filter",StatusFilter - 1);
        Task.SETRANGE(Status,StatusFilter - 1);
      END ELSE BEGIN
        SETRANGE("Task Status Filter");
        Task.SETRANGE(Status);
      END;

      Task.SETFILTER("System To-do Type",'%1|%2',"System Task Type Filter"::Organizer,
        "System Task Type Filter"::"Salesperson Attendee");

      IF IncludeClosed THEN
        Task.SETRANGE(Closed)
      ELSE
        Task.SETRANGE(Closed,FALSE);

      IF PriorityFilter <> PriorityFilter::" " THEN BEGIN
        SETRANGE("Priority Filter",PriorityFilter - 1);
        Task.SETRANGE(Priority,PriorityFilter - 1);
      END ELSE BEGIN
        SETRANGE("Priority Filter");
        Task.SETRANGE(Priority);
      END;

      CASE TableOption OF
        TableOption::Salesperson:
          BEGIN
            SETRANGE("Salesperson Filter","No.");
            SETFILTER(
              "System Task Type Filter",'%1|%2',
              "System Task Type Filter"::Organizer,
              "System Task Type Filter"::"Salesperson Attendee");
          END;
        TableOption::Team:
          BEGIN
            SETRANGE("Team Filter","No.");
            SETRANGE("System Task Type Filter","System Task Type Filter"::Team);
          END;
        TableOption::Campaign:
          BEGIN
            SETRANGE("Campaign Filter","No.");
            SETRANGE("System Task Type Filter","System Task Type Filter"::Organizer);
          END;
        TableOption::Contact:
          IF Type = Type::Company THEN BEGIN
            SETRANGE("Contact Filter");
            SETRANGE("Contact Company Filter","Company No.");
            SETRANGE(
              "System Task Type Filter","System Task Type Filter"::"Contact Attendee");
          END ELSE BEGIN
            SETRANGE("Contact Filter","No.");
            SETRANGE("Contact Company Filter");
            SETRANGE(
              "System Task Type Filter","System Task Type Filter"::"Contact Attendee");
          END;
      //**4PS.sn
        TableOption::"Responsible Person":
          BEGIN
            SETRANGE("Responsible Person Filter","No.");
            SETRANGE("System Task Type Filter","System Task Type Filter"::Organizer);
          END;
        TableOption::"Try-out":
          BEGIN
            SETRANGE("Try-out Filter","No.");
            SETRANGE("System Task Type Filter","System Task Type Filter"::Organizer);
          END;
        TableOption::"Try-out Quote":
          BEGIN
            SETRANGE("Try-out Quote Filter","No.");
            SETRANGE("System Task Type Filter","System Task Type Filter"::Organizer);
          END;
        TableOption::Estimate:
          BEGIN
            SETRANGE("Estimate Filter","No.");
            SETRANGE("System Task Type Filter","System Task Type Filter"::Organizer);
          END;
        TableOption::Project:
          BEGIN
            SETRANGE("Project Filter","No.");
            SETRANGE("System Task Type Filter","System Task Type Filter"::Organizer);
          END;
        TableOption::Parcel:
          BEGIN
            SETRANGE("Parcel Filter","No.");
            SETRANGE("System Task Type Filter","System Task Type Filter"::Organizer);
          END;
        TableOption::Building:
          BEGIN
            SETRANGE("Building Filter","No.");
            SETRANGE("System Task Type Filter","System Task Type Filter"::Organizer);
          END;
        TableOption::"Service Location":
          BEGIN
            SETRANGE("Service Location Filter","No.");
            SETRANGE("System Task Type Filter","System Task Type Filter"::Organizer);
          END;
        TableOption::"Service Contract":
          BEGIN
            SETRANGE("Service Contract Filter","No.");
            SETRANGE("System Task Type Filter","System Task Type Filter"::Organizer);
          END;
        TableOption::"Service Call":
          BEGIN
            SETRANGE("Service Call Filter","No.");
            SETRANGE("System Task Type Filter","System Task Type Filter"::Organizer);
          END;
        TableOption::"Service Order":
          BEGIN
            SETRANGE("Service Order Filter","No.");
            SETRANGE("System Task Type Filter","System Task Type Filter"::Organizer);
          END;
      //**4PS.en
      END;
    END;

    LOCAL PROCEDURE FindRec@1099(TableOpt@1000 : 'Salesperson,Teams,Campaign,Contact,Responsible Person,Try-out,Try-out Quote,Estimate,Project,Parcel,Building,Service Location,Service Contract,Service Call,Service Order';VAR RMMatrixMgt@1001 : Record 11072053;Which@1002 : Text[250]) : Boolean;
    VAR
      Found@1100 : Boolean;
    BEGIN
      CASE TableOpt OF
        TableOpt::Salesperson:
          BEGIN
      //**4PS.so
      //      RMMatrixMgt."No." := COPYSTR(RMMatrixMgt."No.",1,MAXSTRLEN(Salesperson.Code));
      //      Salesperson.Code := COPYSTR(RMMatrixMgt."No.",1,MAXSTRLEN(Salesperson.Code));
      //      Found := SSalesperson.FIND(Which);
      //      IF Found THEN
      //        CopySalesPersonToBuf(Salesperson,RMMatrixMgt);
      //**4PS.eo
      //**4PS.sn
            RMMatrixMgt."No." := COPYSTR(RMMatrixMgt."No.",1,MAXSTRLEN(TempSalespersonPurchaser.Code));
            TempSalespersonPurchaser.Code := COPYSTR(RMMatrixMgt."No.",1,MAXSTRLEN(TempSalespersonPurchaser.Code));
            Found := TempSalespersonPurchaser.FIND(Which);
            IF Found THEN
              CopySalesPersonToBuf(TempSalespersonPurchaser,RMMatrixMgt);
      //**4PS.en
          END;
        TableOpt::Teams:
          BEGIN
      //**4PS.so
      //      RMMatrixMgt."No." := COPYSTR(RMMatrixMgt."No.",1,MAXSTRLEN(Team.Code));
      //      Team.Code := RMMatrixMgt."No.";
      //      Found := Team.FIND(Which);
      //      IF Found THEN
      //        CopyTeamToBuf(Team,RMMatrixMgt);
      //**4PS.eo
      //**4PS.sn
            RMMatrixMgt."No." := COPYSTR(RMMatrixMgt."No.",1,MAXSTRLEN(TempTeam.Code));
            TempTeam.Code := RMMatrixMgt."No.";
            Found := TempTeam.FIND(Which);
            IF Found THEN
              CopyTeamToBuf(TempTeam,RMMatrixMgt);
      //**4PS.en
          END;
        TableOpt::Campaign:
          BEGIN
      //**4PS.so
      //      Campaign."No." := RMMatrixMgt."No.";
      //      Found := Campaign.FIND(Which);
      //      IF Found THEN
      //        CopyCampaignToBuf(Campaign,RMMatrixMgt);
      //**4PS.eo
      //**4PS.sn
            TempCampaign."No." := RMMatrixMgt."No.";
            Found := TempCampaign.FIND(Which);
            IF Found THEN
              CopyCampaignToBuf(TempCampaign,RMMatrixMgt);
      //**4PS.en
          END;
        TableOpt::Contact:
          BEGIN
      //**4PS.so
      //      Cont."Company Name" := RMMatrixMgt."Company Name";
      //      Cont.Type := RMMatrixMgt.Type;
      //      Cont.Name := COPYSTR(RMMatrixMgt.Name,1,MAXSTRLEN(Cont.Name));
      //      Cont."No." := RMMatrixMgt."No.";
      //      Cont."Company No." := RMMatrixMgt."Company No.";
      //      Found := Cont.FIND(Which);
      //      IF Found THEN
      //        CopyContactToBuf(Cont,RMMatrixMgt);
      //**4PS.eo
      //**4PS.sn
            TempCont."Company Name" := RMMatrixMgt."Company Name";
            TempCont.Type := RMMatrixMgt.Type;
            TempCont.Name := COPYSTR(RMMatrixMgt.Name,1,MAXSTRLEN(TempCont.Name));
            TempCont."No." := RMMatrixMgt."No.";
            TempCont."Company No." := RMMatrixMgt."Company No.";
            Found := TempCont.FIND(Which);
            IF Found THEN
              CopyContactToBuf(TempCont,RMMatrixMgt);
      //**4PS.en
          END;
      //**4PS.sn
        TableOpt::"Responsible Person":
          BEGIN
            TempEmployee."No." := RMMatrixMgt."No.";
            Found := TempEmployee.FIND(Which);
            IF Found THEN
              CopyRespPersonToBuf(TempEmployee,RMMatrixMgt);
          END;
        TableOpt::"Try-out":
          BEGIN
            TempTryout.Code := RMMatrixMgt."No.";
            Found := TempTryout.FIND(Which);
            IF Found THEN
              CopyTryoutToBuf(TempTryout,RMMatrixMgt);
          END;
        TableOpt::"Try-out Quote":
          BEGIN
            TempTryoutQuote.Code := RMMatrixMgt."No.";
            Found := TempTryoutQuote.FIND(Which);
            IF Found THEN
              CopyTryoutQuoteToBuf(TempTryoutQuote,RMMatrixMgt);
          END;
        TableOpt::Estimate:
          BEGIN
            TempEstimate."No." := RMMatrixMgt."No.";
            Found := TempEstimate.FIND(Which);
            IF Found THEN
              CopyEstimateToBuf(TempEstimate,RMMatrixMgt);
          END;
        TableOpt::Project:
          BEGIN
            TempJob."No." := RMMatrixMgt."No.";
            Found := TempJob.FIND(Which);
            IF Found THEN
              CopyProjectToBuf(TempJob,RMMatrixMgt);
          END;
        TableOpt::Parcel:
          BEGIN
            TempParcel."No." := RMMatrixMgt."No.";
            Found := TempParcel.FIND(Which);
            IF Found THEN
              CopyParcelToBuf(TempParcel,RMMatrixMgt);
          END;
        TableOpt::Building:
          BEGIN
            TempBuilding.Code := RMMatrixMgt."No.";
            Found := TempBuilding.FIND(Which);
            IF Found THEN
              CopyBuildingToBuf(TempBuilding,RMMatrixMgt);
          END;
        TableOpt::"Service Location":
          BEGIN
            TempServiceLocation."No." := RMMatrixMgt."No.";
            Found := TempServiceLocation.FIND(Which);
            IF Found THEN
              CopyServiceLocationToBuf(TempServiceLocation,RMMatrixMgt);
          END;
        TableOpt::"Service Contract":
          BEGIN
            TempServiceContract."No." := RMMatrixMgt."No.";
            Found := TempServiceContract.FIND(Which);
            IF Found THEN
              CopyServiceContractToBuf(TempServiceContract,RMMatrixMgt);
          END;
        TableOpt::"Service Call":
          BEGIN
            TempServiceCall."No." := RMMatrixMgt."No.";
            Found := TempServiceCall.FIND(Which);
            IF Found THEN
              CopyServiceCallToBuf(TempServiceCall,RMMatrixMgt);
          END;
        TableOpt::"Service Order":
          BEGIN
            TempServiceOrder."No." := RMMatrixMgt."No.";
            Found := TempServiceOrder.FIND(Which);
            IF Found THEN
              CopyServiceOrderToBuf(TempServiceOrder,RMMatrixMgt);
          END;
      //**4PS.en
      END;
      EXIT(Found);
    END;

    LOCAL PROCEDURE NextRec@1101(TableOpt@1000 : 'Salesperson,Teams,Campaign,Contact,Responsible Person,Try-out,Try-out Quote,Estimate,Project,Parcel,Building,Service Location,Service Contract,Service Call,Service Order';VAR RMMatrixMgt@1001 : Record 11072053;Steps@1002 : Integer) : Integer;
    VAR
      ResultSteps@1102 : Integer;
    BEGIN
      CASE TableOpt OF
        TableOpt::Salesperson:
          BEGIN
      //**4PS.so
      //      RMMatrixMgt."No." := COPYSTR(RMMatrixMgt."No.",1,MAXSTRLEN(Salesperson.Code));
      //      Salesperson.Code := COPYSTR(RMMatrixMgt."No.",1,MAXSTRLEN(Salesperson.Code));
      //      ResultSteps := Salesperson.NEXT(Steps);
      //      IF ResultSteps <> 0 THEN
      //        CopySalesPersonToBuf(Salesperson,RMMatrixMgt);
      //**4PS.eo
      //**4PS.sn
            RMMatrixMgt."No." := COPYSTR(RMMatrixMgt."No.",1,MAXSTRLEN(TempSalespersonPurchaser.Code));
            TempSalespersonPurchaser.Code := COPYSTR(RMMatrixMgt."No.",1,MAXSTRLEN(TempSalespersonPurchaser.Code));
            ResultSteps := TempSalespersonPurchaser.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopySalesPersonToBuf(TempSalespersonPurchaser,RMMatrixMgt);
      //**4PS.en
          END;
        TableOpt::Teams:
          BEGIN
      //**4PS.so
      //      RMMatrixMgt."No." := COPYSTR(RMMatrixMgt."No.",1,MAXSTRLEN(Team.Code));
      //      Team.Code := RMMatrixMgt."No.";
      //      ResultSteps := Team.NEXT(Steps);
      //      IF ResultSteps <> 0 THEN
      //        CopyTeamToBuf(Team,RMMatrixMgt);
      //**4PS.eo
      //**4PS.sn
            RMMatrixMgt."No." := COPYSTR(RMMatrixMgt."No.",1,MAXSTRLEN(TempTeam.Code));
            TempTeam.Code := RMMatrixMgt."No.";
            ResultSteps := TempTeam.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyTeamToBuf(TempTeam,RMMatrixMgt);
      //**4PS.en
          END;
        TableOpt::Campaign:
          BEGIN
      //**4PS.so
      //      Campaign."No." := RMMatrixMgt."No.";
      //      ResultSteps := Campaign.NEXT(Steps);
      //      IF ResultSteps <> 0 THEN
      //        CopyCampaignToBuf(Campaign,RMMatrixMgt);
      //**4PS.eo
      //**4PS.sn
            TempCampaign."No." := RMMatrixMgt."No.";
            ResultSteps := TempCampaign.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyCampaignToBuf(TempCampaign,RMMatrixMgt);
      //**4PS.en
          END;
        TableOpt::Contact:
          BEGIN
      //**4PS.so
      //      Cont."Company Name" := RMMatrixMgt."Company Name";
      //      Cont.Type := RMMatrixMgt.Type;
      //      Cont.Name := COPYSTR(RMMatrixMgt.Name,1,MAXSTRLEN(Cont.Name));
      //      Cont."No." := RMMatrixMgt."No.";
      //      Cont."Company No." := RMMatrixMgt."Company No.";
      //      ResultSteps := Cont.NEXT(Steps);
      //      IF ResultSteps <> 0 THEN
      //        CopyContactToBuf(Cont,RMMatrixMgt);
      //**4PS.eo
      //**4PS.sn
            TempCont."Company Name" := RMMatrixMgt."Company Name";
            TempCont.Type := RMMatrixMgt.Type;
            TempCont.Name := COPYSTR(RMMatrixMgt.Name,1,MAXSTRLEN(TempCont.Name));
            TempCont."No." := RMMatrixMgt."No.";
            TempCont."Company No." := RMMatrixMgt."Company No.";
            ResultSteps := TempCont.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyContactToBuf(TempCont,RMMatrixMgt);
      //**4PS.en
          END;
      //**4PS.sn
        TableOpt::"Responsible Person":
          BEGIN
            TempEmployee."No." := RMMatrixMgt."No.";
            ResultSteps := TempEmployee.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyRespPersonToBuf(TempEmployee,RMMatrixMgt);
          END;
        TableOpt::"Try-out":
          BEGIN
            TempTryout.Code := RMMatrixMgt."No.";
            ResultSteps := TempTryout.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyTryoutToBuf(TempTryout,RMMatrixMgt);
          END;
        TableOpt::"Try-out Quote":
          BEGIN
            TempTryoutQuote.Code := RMMatrixMgt."No.";
            ResultSteps := TempTryoutQuote.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyTryoutQuoteToBuf(TempTryoutQuote,RMMatrixMgt);
          END;
        TableOpt::Estimate:
          BEGIN
            TempEstimate."No." := RMMatrixMgt."No.";
            ResultSteps := TempEstimate.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyEstimateToBuf(TempEstimate,RMMatrixMgt);
          END;
        TableOpt::Project:
          BEGIN
            TempJob."No." := RMMatrixMgt."No.";
            ResultSteps := TempJob.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyProjectToBuf(TempJob,RMMatrixMgt);
          END;
        TableOpt::Parcel:
          BEGIN
            TempParcel."No." := RMMatrixMgt."No.";
            ResultSteps := TempParcel.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyParcelToBuf(TempParcel,RMMatrixMgt);
          END;
        TableOpt::Building:
          BEGIN
            TempBuilding.Code := RMMatrixMgt."No.";
            ResultSteps := TempBuilding.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyBuildingToBuf(TempBuilding,RMMatrixMgt);
          END;
        TableOpt::"Service Location":
          BEGIN
            TempServiceLocation."No." := RMMatrixMgt."No.";
            ResultSteps := TempServiceLocation.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyServiceLocationToBuf(TempServiceLocation,RMMatrixMgt);
          END;
        TableOpt::"Service Contract":
          BEGIN
            TempServiceContract."No." := RMMatrixMgt."No.";
            ResultSteps := TempServiceContract.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyServiceContractToBuf(TempServiceContract,RMMatrixMgt);
          END;
        TableOpt::"Service Call":
          BEGIN
            TempServiceCall."No." := RMMatrixMgt."No.";
            ResultSteps := TempServiceCall.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyServiceCallToBuf(TempServiceCall,RMMatrixMgt);
          END;
        TableOpt::"Service Order":
          BEGIN
            TempServiceOrder."No." := RMMatrixMgt."No.";
            ResultSteps := TempServiceOrder.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyServiceOrderToBuf(TempServiceOrder,RMMatrixMgt);
          END;
      //**4PS.en
      END;
      EXIT(ResultSteps);
    END;

    LOCAL PROCEDURE CopySalesPersonToBuf@1103(VAR Salesperson@1000 : Record 13;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := Salesperson.Code;
        Type := Type::Person;
        Name := Salesperson.Name;
        "No." := Salesperson.Code;
        "Company No." := '';
      END;
    END;

    LOCAL PROCEDURE CopyCampaignToBuf@1104(VAR Campaign@1000 : Record 11072034;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := Campaign."No.";
        Type := Type::Person;
        Name := COPYSTR(Campaign.Description,1,MAXSTRLEN(Name));
        "No." := Campaign."No.";
        "Company No." := '';
      END;
    END;

    LOCAL PROCEDURE CopyContactToBuf@1105(VAR Cont@1000 : Record 5050;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := COPYSTR(Cont."Company Name",1,MAXSTRLEN("Company Name"));
        Type := Cont.Type;
        Name := COPYSTR(Cont.Name,1,MAXSTRLEN(Name));
        "No." := Cont."No.";
        "Company No." := Cont."Company No.";
      END;
    END;

    LOCAL PROCEDURE CopyTeamToBuf@1106(VAR TheTeam@1000 : Record 5083;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := TheTeam.Code;
        Type := Type::Person;
        Name := TheTeam.Name;
        "No." := TheTeam.Code;
        "Company No." := '';
      END;
    END;

    LOCAL PROCEDURE CopyRespPersonToBuf@1100485003(VAR TheEmployee@1000 : Record 5200;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      //**4PS
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := '';
        Type := Type::Person;
        Name := TheEmployee."Full Name";
        "No." := TheEmployee."No.";
        "Company No." := '';
      END;
    END;

    LOCAL PROCEDURE CopyTryoutToBuf@1100528705(VAR TheTryout@1000 : Record 11012750;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      //**4PS
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := '';
        Type := Type::Person;
        Name := TheTryout.Description;
        "No." := TheTryout.Code;
        "Company No." := '';
      END;
    END;

    LOCAL PROCEDURE CopyTryoutQuoteToBuf@1100528706(VAR TheTryoutQuote@1000 : Record 11012758;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      //**4PS
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := '';
        Type := Type::Person;
        Name := TheTryoutQuote.Description;
        "No." := TheTryoutQuote.Code;
        "Company No." := '';
      END;
    END;

    LOCAL PROCEDURE CopyEstimateToBuf@1100528702(VAR TheEstimate@1000 : Record 11012151;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      //**4PS
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := '';
        Type := Type::Person;
        Name := TheEstimate.Description;
        "No." := TheEstimate."No.";
        "Company No." := '';
      END;
    END;

    LOCAL PROCEDURE CopyProjectToBuf@1100528707(VAR TheJob@1000 : Record 11072003;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      //**4PS
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := '';
        Type := Type::Person;
        Name := TheJob.Description;
        "No." := TheJob."No.";
        "Company No." := '';
      END;
    END;

    LOCAL PROCEDURE CopyParcelToBuf@1100528708(VAR TheParcel@1000 : Record 11012240;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      //**4PS
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := '';
        Type := Type::Person;
        Name := TheParcel.Description;
        "No." := TheParcel."No.";
        "Company No." := '';
      END;
    END;

    LOCAL PROCEDURE CopyBuildingToBuf@1100525001(VAR TheBuilding@1000 : Record 11071819;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      //**4PS
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := '';
        Type := Type::Person;
        Name := TheBuilding.Description;
        "No." := TheBuilding.Code;
        "Company No." := '';
      END;
    END;

    LOCAL PROCEDURE CopyServiceLocationToBuf@1100528709(VAR TheServiceLocation@1000 : Record 11012801;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      //**4PS
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := '';
        Type := Type::Person;
        Name := TheServiceLocation.Description;
        "No." := TheServiceLocation."No.";
        "Company No." := '';
      END;
    END;

    LOCAL PROCEDURE CopyServiceContractToBuf@1100528710(VAR TheServiceContract@1000 : Record 11012812;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      //**4PS
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := '';
        Type := Type::Person;
        Name := TheServiceContract.Description;
        "No." := TheServiceContract."No.";
        "Company No." := '';
      END;
    END;

    LOCAL PROCEDURE CopyServiceCallToBuf@1100528711(VAR TheServiceCall@1000 : Record 11012822;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      //**4PS
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := '';
        Type := Type::Person;
        Name := TheServiceCall.Description;
        "No." := TheServiceCall."No.";
        "Company No." := '';
      END;
    END;

    LOCAL PROCEDURE CopyServiceOrderToBuf@1100528712(VAR TheServiceOrder@1000 : Record 11012823;VAR RMMatrixMgt@1001 : Record 11072053);
    BEGIN
      //**4PS
      WITH RMMatrixMgt DO BEGIN
        INIT;
        "Company Name" := '';
        Type := Type::Person;
        Name := TheServiceOrder.Description;
        "No." := TheServiceOrder."No.";
        "Company No." := '';
      END;
    END;

    LOCAL PROCEDURE ValidateTableOption@1116();
    BEGIN
      //**4PS.so
      //SETRANGE("Contact Company Filter");
      //CASE TableOption OF
      //  TableOption::Salesperson:
      //    BEGIN
      //      SETFILTER("Team Filter",FilterTeam);
      //      SETFILTER("Campaign Filter",FilterCampaign);
      //      SETFILTER("Contact Filter",FilterContact);
      //      ValidateFilter;
      //    END;
      //  TableOption::Team:
      //    BEGIN
      //      SETFILTER("Salesperson Filter",FilterSalesPerson);
      //      SETFILTER("Campaign Filter",FilterCampaign);
      //      SETFILTER("Contact Filter",FilterContact);
      //      ValidateFilter;
      //    END;
      //  TableOption::Campaign:
      //    BEGIN
      //      SETFILTER("Salesperson Filter",FilterSalesPerson);
      //      SETFILTER("Team Filter",FilterTeam);
      //      SETFILTER("Contact Filter",FilterContact);
      //      ValidateFilter;
      //    END;
      //  TableOption::Contact:
      //    BEGIN
      //      SETFILTER("Salesperson Filter",FilterSalesPerson);
      //      SETFILTER("Team Filter",FilterTeam);
      //      SETFILTER("Campaign Filter",FilterCampaign);
      //      ValidateFilter;
      //    END;
      //END;
      //**4PS.eo

      //**4PS.sn
      SETRANGE("Contact Filter");
      SETRANGE("Contact Company Filter");
      IF TableOption <> TableOption::Salesperson THEN
        SETFILTER("Salesperson Filter",FilterSalesPerson);
      IF TableOption <> TableOption::Team THEN
        SETFILTER("Team Filter",FilterTeam);
      IF TableOption <> TableOption::Campaign THEN
        SETFILTER("Campaign Filter",FilterCampaign);
      IF TableOption <> TableOption::Contact THEN
        SETFILTER("Contact Company Filter",FilterContact); // Standard fix, see above
      IF TableOption <> TableOption::"Responsible Person" THEN
        SETFILTER("Responsible Person Filter",FilterRespPerson);
      IF TableOption <> TableOption::Project THEN
        SETFILTER("Project Filter",FilterProject);
      ValidateFilter;
      //**4PS.en
    END;

    LOCAL PROCEDURE ValidateFilter@1117();
    BEGIN
      CASE TableOption OF
        TableOption::Salesperson:
          UpdateSalesPersonFilter;
        TableOption::Team:
          UpdateTeamFilter;
        TableOption::Campaign:
          UpdateCampaignFilter;
        TableOption::Contact:
          UpdateContactFilter;
      //**4PS.sn
        TableOption::"Responsible Person":
          UpdateRespPersonFilter;
        TableOption::"Try-out":
          UpdateTryoutFilter;
        TableOption::"Try-out Quote":
          UpdateTryoutQuoteFilter;
        TableOption::Estimate:
          UpdateEstimateFilter;
        TableOption::Project:
          UpdateProjectFilter;
        TableOption::Parcel:
          UpdateParcelFilter;
        TableOption::Building:
          UpdateBuildingFilter;
        TableOption::"Service Location":
          UpdateServiceLocationFilter;
        TableOption::"Service Contract":
          UpdateServiceContractFilter;
        TableOption::"Service Call":
          UpdateServiceCallFilter;
        TableOption::"Service Order":
          UpdateServiceOrderFilter;
      //**4PS.en
      END;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE UpdateSalesPersonFilter@1118();
    VAR
      Todo@1210190001 : Record 5080;
      Salesperson@1210190000 : Record 13;
    BEGIN
      //**4PS.so
      //Salesperson.RESET;
      //Salesperson.SETFILTER(Code,FilterSalesPerson);
      //Salesperson.SETFILTER("Team Filter",FilterTeam);
      //Salesperson.SETFILTER("Campaign Filter",FilterCampaign);
      //Salesperson.SETFILTER("Contact Company Filter",FilterContact);
      //Salesperson.SETFILTER("Task Status Filter",GETFILTER("Task Status Filter"));
      //Salesperson.SETFILTER("Closed Task Filter",GETFILTER("Task Closed Filter"));
      //Salesperson.SETFILTER("Priority Filter",GETFILTER("Priority Filter"));
      //Salesperson.SETRANGE("Task Entry Exists",TRUE);
      //**4PS.eo

      //**4PS.sn
      TempSalespersonPurchaser.RESET;
      TempSalespersonPurchaser.DELETEALL;

      Salesperson.RESET;
      Salesperson.SETFILTER(Code, FilterSalesPerson);
      IF Salesperson.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Salesperson Code",Date);
          Todo.SETRANGE("Salesperson Code", Salesperson.Code);
          Todo.SETFILTER("Team Code", FilterTeam);
          Todo.SETFILTER("Campaign No.", FilterCampaign);
          Todo.SETFILTER("Contact Company No.", FilterContact);
          Todo.SETFILTER("Responsible Person", FilterRespPerson);
          Todo.SETFILTER("Project No.", FilterProject);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempSalespersonPurchaser.TRANSFERFIELDS(Salesperson);
            TempSalespersonPurchaser.INSERT;
          END;
        UNTIL Salesperson.NEXT = 0;
      //**4PS.en
    END;

    LOCAL PROCEDURE UpdateCampaignFilter@1119();
    VAR
      Todo@1210190001 : Record 5080;
      Campaign@1210190000 : Record 11072034;
    BEGIN
      //**4PS.so
      //Campaign.RESET;
      //Campaign.SETFILTER("No.",FilterCampaign);
      //Campaign.SETFILTER("Salesperson Filter",FilterSalesPerson);
      //Campaign.SETFILTER("Team Filter",FilterTeam);
      //Campaign.SETFILTER("Contact Company Filter",FilterContact);
      //Campaign.SETFILTER("Task Status Filter",GETFILTER("Task Status Filter"));
      //Campaign.SETFILTER("Task Closed Filter",GETFILTER("Task Closed Filter"));
      //Campaign.SETFILTER("Priority Filter",GETFILTER("Priority Filter"));
      //Campaign.SETRANGE("Task Entry Exists",TRUE);
      //**4PS.eo

      //**4PS.sn
      TempCampaign.RESET;
      TempCampaign.DELETEALL;

      Campaign.RESET;
      Campaign.SETFILTER("No.",FilterCampaign);
      IF Campaign.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Campaign No.",Date);
          Todo.SETRANGE("Campaign No.", Campaign."No.");
          Todo.SETFILTER("Salesperson Code", FilterSalesPerson);
          Todo.SETFILTER("Team Code", FilterTeam);
          Todo.SETFILTER("Contact Company No.", FilterContact);
          Todo.SETFILTER("Responsible Person", FilterRespPerson);
          Todo.SETFILTER("Project No.", FilterProject);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempCampaign.TRANSFERFIELDS(Campaign);
            TempCampaign.INSERT;
          END;
        UNTIL Campaign.NEXT = 0;
      //**4PS.en
    END;

    LOCAL PROCEDURE UpdateContactFilter@1120();
    VAR
      Todo@1210190001 : Record 5080;
      Cont@1210190000 : Record 5050;
    BEGIN
      //**4PS.so
      //Cont.RESET;
      //Cont.SETCURRENTKEY("Company Name","Company No.",Type,Name);
      //Cont.SETFILTER("Company No.",FilterContact);
      //Cont.SETFILTER("Campaign Filter",FilterCampaign);
      //Cont.SETFILTER("Salesperson Filter",FilterSalesPerson);
      //Cont.SETFILTER("Team Filter",FilterTeam);
      //Cont.SETFILTER("Task Status Filter",GETFILTER("Task Status Filter"));
      //Cont.SETFILTER("Task Closed Filter",GETFILTER("Task Closed Filter"));
      //Cont.SETFILTER("Priority Filter",GETFILTER("Priority Filter"));
      //Cont.SETRANGE("Task Entry Exists",TRUE);
      //**4PS.eo

      //**4PS.sn
      TempCont.RESET;
      TempCont.DELETEALL;

      Cont.RESET;
      Cont.SETFILTER("Company No.",FilterContact);
      IF Cont.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Contact Company No.","Contact No.",Closed,Date);
          Todo.SETFILTER("Contact Company No.", Cont."Company No.");
          Todo.SETFILTER("Contact No.", Cont."Lookup Contact No.");
          Todo.SETFILTER("Campaign No.", FilterCampaign);
          Todo.SETFILTER("Salesperson Code", FilterSalesPerson);
          Todo.SETFILTER("Team Code", FilterTeam);
          Todo.SETFILTER("Responsible Person", FilterRespPerson);
          Todo.SETFILTER("Project No.", FilterProject);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempCont.TRANSFERFIELDS(Cont);
            TempCont.INSERT;
          END;
        UNTIL Cont.NEXT = 0;
      //**4PS.en
    END;

    LOCAL PROCEDURE UpdateTeamFilter@1121();
    VAR
      Todo@1210190001 : Record 5080;
      Team@1210190000 : Record 5083;
    BEGIN
      //**4PS.so
      //Team.RESET;
      //Team.SETFILTER(Code,FilterTeam);
      //Team.SETFILTER("Campaign Filter",FilterCampaign);
      //Team.SETFILTER("Salesperson Filter",FilterSalesPerson);
      //Team.SETFILTER("Contact Company Filter",FilterContact);
      //Team.SETFILTER("Task Status Filter",GETFILTER("Task Status Filter"));
      //Team.SETFILTER("Task Closed Filter",GETFILTER("Task Closed Filter"));
      //Team.SETFILTER("Priority Filter",GETFILTER("Priority Filter"));
      //Team.SETRANGE("Task Entry Exists",TRUE);
      //**4PS.eo

      //**4PS.sn
      TempTeam.RESET;
      TempTeam.DELETEALL;

      Team.RESET;
      Team.SETFILTER(Code,FilterTeam);
      IF Team.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Team Code",Date);
          Todo.SETRANGE("Team Code", Team.Code);
          Todo.SETFILTER("Campaign No.", FilterCampaign);
          Todo.SETFILTER("Salesperson Code", FilterSalesPerson);
          Todo.SETFILTER("Contact Company No.", FilterContact);
          Todo.SETFILTER("Responsible Person", FilterRespPerson);
          Todo.SETFILTER("Project No.", FilterProject);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempTeam.TRANSFERFIELDS(Team);
            TempTeam.INSERT;
          END;
        UNTIL Team.NEXT = 0;
      //**4PS.en
    END;

    PROCEDURE UpdateRespPersonFilter@1100485001();
    VAR
      Todo@1100528700 : Record 5080;
      Employee@1100528701 : Record 5200;
    BEGIN
      //**4PS
      TempEmployee.RESET;
      TempEmployee.DELETEALL;

      Employee.RESET;
      Employee.SETFILTER("No.",FilterRespPerson);
      IF Employee.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Responsible Person",Status,Closed);
          Todo.SETRANGE("Responsible Person", Employee."No.");
          Todo.SETFILTER("Campaign No.", FilterCampaign);
          Todo.SETFILTER("Salesperson Code", FilterSalesPerson);
          Todo.SETFILTER("Team Code", FilterTeam);
          Todo.SETFILTER("Contact Company No.", FilterContact);
          Todo.SETFILTER("Project No.", FilterProject);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempEmployee.TRANSFERFIELDS(Employee);
            TempEmployee.INSERT;
          END;
        UNTIL Employee.NEXT = 0;
    END;

    PROCEDURE UpdateEstimateFilter@1100528703();
    VAR
      Todo@1100528700 : Record 5080;
      Estimate@1100528701 : Record 11012151;
    BEGIN
      //**4PS
      TempEstimate.RESET;
      TempEstimate.DELETEALL;

      Estimate.RESET;
      Estimate.SETRANGE("RAW Estimate", FALSE);
      IF Estimate.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Estimate No.",Date,Closed);
          Todo.SETRANGE("Estimate No.", Estimate."No.");
          Todo.SETFILTER("Campaign No.", FilterCampaign);
          Todo.SETFILTER("Salesperson Code", FilterSalesPerson);
          Todo.SETFILTER("Team Code", FilterTeam);
          Todo.SETFILTER("Contact Company No.", FilterContact);
          Todo.SETFILTER("Project No.", FilterProject);
          Todo.SETFILTER("Responsible Person", FilterRespPerson);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempEstimate.TRANSFERFIELDS(Estimate);
            TempEstimate.INSERT;
          END;
        UNTIL Estimate.NEXT = 0;
    END;

    PROCEDURE UpdateProjectFilter@1100528713();
    VAR
      Todo@1100528700 : Record 5080;
      Job@1100528701 : Record 11072003;
    BEGIN
      //**4PS
      TempJob.RESET;
      TempJob.DELETEALL;

      Job.RESET;
      Job.SETFILTER("No.",FilterProject);
      IF Job.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Project No.",Date,Closed);
          Todo.SETRANGE("Project No.", Job."No.");
          Todo.SETFILTER("Campaign No.", FilterCampaign);
          Todo.SETFILTER("Salesperson Code", FilterSalesPerson);
          Todo.SETFILTER("Team Code", FilterTeam);
          Todo.SETFILTER("Contact Company No.", FilterContact);
          Todo.SETFILTER("Responsible Person", FilterRespPerson);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempJob.TRANSFERFIELDS(Job);
            TempJob.INSERT;
          END;
        UNTIL Job.NEXT = 0;
    END;

    PROCEDURE UpdateParcelFilter@1100528721();
    VAR
      Todo@1100528700 : Record 5080;
      Parcel@1100528701 : Record 11012240;
    BEGIN
      //**4PS
      TempParcel.RESET;
      TempParcel.DELETEALL;

      Parcel.RESET;
      IF Parcel.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Parcel No.",Date,Closed);
          Todo.SETRANGE("Parcel No.", Parcel."No.");
          Todo.SETFILTER("Campaign No.", FilterCampaign);
          Todo.SETFILTER("Salesperson Code", FilterSalesPerson);
          Todo.SETFILTER("Team Code", FilterTeam);
          Todo.SETFILTER("Contact Company No.", FilterContact);
          Todo.SETFILTER("Responsible Person", FilterRespPerson);
          Todo.SETFILTER("Project No.", FilterProject);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempParcel.TRANSFERFIELDS(Parcel);
            TempParcel.INSERT;
          END;
        UNTIL Parcel.NEXT = 0;
    END;

    PROCEDURE UpdateBuildingFilter@1100525000();
    VAR
      Todo@1100528700 : Record 5080;
      Building@1100528701 : Record 11071819;
    BEGIN
      //**4PS
      TempBuilding.RESET;
      TempBuilding.DELETEALL;

      Building.RESET;
      IF Building.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Building Code",Date,Closed);
          Todo.SETRANGE("Building Code", Building.Code);
          Todo.SETFILTER("Campaign No.", FilterCampaign);
          Todo.SETFILTER("Salesperson Code", FilterSalesPerson);
          Todo.SETFILTER("Team Code", FilterTeam);
          Todo.SETFILTER("Contact Company No.", FilterContact);
          Todo.SETFILTER("Responsible Person", FilterRespPerson);
          Todo.SETFILTER("Project No.", FilterProject);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempBuilding.TRANSFERFIELDS(Building);
            TempBuilding.INSERT;
          END;
        UNTIL Building.NEXT = 0;
    END;

    PROCEDURE UpdateTryoutFilter@1100528722();
    VAR
      Todo@1100528700 : Record 5080;
      Tryout@1100528701 : Record 11012750;
    BEGIN
      //**4PS
      TempTryout.RESET;
      TempTryout.DELETEALL;

      Tryout.RESET;
      IF Tryout.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Try-out No.",Date,Closed);
          Todo.SETRANGE("Try-out No.", Tryout.Code);
          Todo.SETFILTER("Campaign No.", FilterCampaign);
          Todo.SETFILTER("Salesperson Code", FilterSalesPerson);
          Todo.SETFILTER("Team Code", FilterTeam);
          Todo.SETFILTER("Contact Company No.", FilterContact);
          Todo.SETFILTER("Responsible Person", FilterRespPerson);
          Todo.SETFILTER("Project No.", FilterProject);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempTryout.TRANSFERFIELDS(Tryout);
            TempTryout.INSERT;
          END;
        UNTIL Tryout.NEXT = 0;
    END;

    PROCEDURE UpdateTryoutQuoteFilter@1100528723();
    VAR
      Todo@1100528700 : Record 5080;
      TryoutQuote@1100528701 : Record 11012758;
    BEGIN
      //**4PS
      TempTryoutQuote.RESET;
      TempTryoutQuote.DELETEALL;

      TryoutQuote.RESET;
      IF TryoutQuote.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Try-out Quote No.",Date,Closed);
          Todo.SETRANGE("Try-out Quote No.", TryoutQuote.Code);
          Todo.SETFILTER("Campaign No.", FilterCampaign);
          Todo.SETFILTER("Salesperson Code", FilterSalesPerson);
          Todo.SETFILTER("Team Code", FilterTeam);
          Todo.SETFILTER("Contact Company No.", FilterContact);
          Todo.SETFILTER("Responsible Person", FilterRespPerson);
          Todo.SETFILTER("Project No.", FilterProject);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempTryoutQuote.TRANSFERFIELDS(TryoutQuote);
            TempTryoutQuote.INSERT;
          END;
        UNTIL TryoutQuote.NEXT = 0;
    END;

    PROCEDURE UpdateServiceLocationFilter@1100528724();
    VAR
      Todo@1100528700 : Record 5080;
      ServiceLocation@1100528701 : Record 11012801;
    BEGIN
      //**4PS
      TempServiceLocation.RESET;
      TempServiceLocation.DELETEALL;

      ServiceLocation.RESET;
      IF ServiceLocation.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Service Location No.",Date,Closed);
          Todo.SETRANGE("Service Location No.", ServiceLocation."No.");
          Todo.SETFILTER("Campaign No.", FilterCampaign);
          Todo.SETFILTER("Salesperson Code", FilterSalesPerson);
          Todo.SETFILTER("Team Code", FilterTeam);
          Todo.SETFILTER("Contact Company No.", FilterContact);
          Todo.SETFILTER("Responsible Person", FilterRespPerson);
          Todo.SETFILTER("Project No.", FilterProject);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempServiceLocation.TRANSFERFIELDS(ServiceLocation);
            TempServiceLocation.INSERT;
          END;
        UNTIL ServiceLocation.NEXT = 0;
    END;

    PROCEDURE UpdateServiceContractFilter@1100528725();
    VAR
      Todo@1100528700 : Record 5080;
      ServiceContract@1100528701 : Record 11012812;
    BEGIN
      //**4PS
      TempServiceContract.RESET;
      TempServiceContract.DELETEALL;

      ServiceContract.RESET;
      IF ServiceContract.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Service Contract No.",Date,Closed);
          Todo.SETRANGE("Service Contract No.", ServiceContract."No.");
          Todo.SETFILTER("Campaign No.", FilterCampaign);
          Todo.SETFILTER("Salesperson Code", FilterSalesPerson);
          Todo.SETFILTER("Team Code", FilterTeam);
          Todo.SETFILTER("Contact Company No.", FilterContact);
          Todo.SETFILTER("Responsible Person", FilterRespPerson);
          Todo.SETFILTER("Project No.", FilterProject);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempServiceContract.TRANSFERFIELDS(ServiceContract);
            TempServiceContract.INSERT;
          END;
        UNTIL ServiceContract.NEXT = 0;
    END;

    PROCEDURE UpdateServiceCallFilter@1100528726();
    VAR
      Todo@1100528700 : Record 5080;
      ServiceCall@1100528701 : Record 11012822;
    BEGIN
      //**4PS
      TempServiceCall.RESET;
      TempServiceCall.DELETEALL;

      ServiceCall.RESET;
      IF ServiceCall.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Service Call No.",Date,Closed);
          Todo.SETRANGE("Service Call No.", ServiceCall."No.");
          Todo.SETFILTER("Campaign No.", FilterCampaign);
          Todo.SETFILTER("Salesperson Code", FilterSalesPerson);
          Todo.SETFILTER("Team Code", FilterTeam);
          Todo.SETFILTER("Contact Company No.", FilterContact);
          Todo.SETFILTER("Responsible Person", FilterRespPerson);
          Todo.SETFILTER("Project No.", FilterProject);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempServiceCall.TRANSFERFIELDS(ServiceCall);
            TempServiceCall.INSERT;
          END;
        UNTIL ServiceCall.NEXT = 0;
    END;

    PROCEDURE UpdateServiceOrderFilter@1100528727();
    VAR
      Todo@1100528700 : Record 5080;
      ServiceOrder@1100528701 : Record 11012823;
    BEGIN
      //**4PS
      TempServiceOrder.RESET;
      TempServiceOrder.DELETEALL;

      ServiceOrder.RESET;
      IF ServiceOrder.FINDSET THEN
        REPEAT
          Todo.SETCURRENTKEY("Service Order No.",Date,Closed);
          Todo.SETRANGE("Service Order No.", ServiceOrder."No.");
          Todo.SETFILTER("Campaign No.", FilterCampaign);
          Todo.SETFILTER("Salesperson Code", FilterSalesPerson);
          Todo.SETFILTER("Team Code", FilterTeam);
          Todo.SETFILTER("Contact Company No.", FilterContact);
          Todo.SETFILTER("Responsible Person", FilterRespPerson);
          Todo.SETFILTER("Project No.", FilterProject);
          Todo.SETFILTER(Status, GETFILTER("Task Status Filter"));
          Todo.SETFILTER(Closed, GETFILTER("Task Closed Filter"));
          Todo.SETFILTER(Priority, GETFILTER("Priority Filter"));
          IF Todo.FINDFIRST THEN BEGIN
            TempServiceOrder.TRANSFERFIELDS(ServiceOrder);
            TempServiceOrder.INSERT;
          END;
        UNTIL ServiceOrder.NEXT = 0;
    END;

    [External]
    PROCEDURE Load@1122(MatrixColumns1@1005 : ARRAY [32] OF Text[1024];VAR MatrixRecords1@1006 : ARRAY [32] OF Record 2000000007;TableOptionLocal@1001 : 'Salesperson,Team,Campaign,Contact';ColumnDateFilter@1000 : ARRAY [32] OF Text[50];OutputOptionLocal@1011 : 'No. of Tasks,Contact No.';FilterSalesPersonLocal@1007 : Code[250];FilterTeamLocal@1004 : Code[250];FilterCampaignLocal@1003 : Code[250];FilterContactLocal@1002 : Code[250];FilterRespPersonLocal@1210190000 : Code[250];FilterProjectLocal@1210190001 : Code[250];StatusFilterLocal@1010 : ' ,Not Started,In Progress,Completed,Waiting,Postponed';IncludeClosedLocal@1008 : Boolean;PriorityFilterLocal@1009 : ' ,Low,Normal,High');
    VAR
      i@1013 : Integer;
    BEGIN
      COPYARRAY(ColumnCaptions,MatrixColumns1,1);
      FOR i := 1 TO 32 DO
        MatrixRecords[i].COPY(MatrixRecords1[i]);
      TableOption := TableOptionLocal;
      COPYARRAY(ColumnDateFilters,ColumnDateFilter,1);
      OutputOption := OutputOptionLocal;
      FilterSalesPerson := FilterSalesPersonLocal;
      FilterTeam := FilterTeamLocal;
      FilterCampaign := FilterCampaignLocal;
      FilterContact := FilterContactLocal;
      FilterRespPerson := FilterRespPersonLocal;
      FilterProject := FilterProject;
      StatusFilter := StatusFilterLocal;
      IncludeClosed := IncludeClosedLocal;
      PriorityFilter := PriorityFilterLocal;
      SetFilters;
    END;

    LOCAL PROCEDURE MatrixOnDrillDown@1123(ColumnID@1007 : Integer);
    BEGIN
      Task.SETRANGE(Date,MatrixRecords[ColumnID]."Period Start",MatrixRecords[ColumnID]."Period End");
      CASE TableOption OF
        TableOption::Salesperson:
          Task.SETFILTER("Salesperson Code","No.");
        TableOption::Team:
          Task.SETFILTER("Team Code","No.");
        TableOption::Campaign:
          Task.SETFILTER("Campaign No.","No.");
        TableOption::Contact:
          Task.SETFILTER("Contact No.","No.");
      //**4PS.sn
        TableOption::"Responsible Person":
          Task.SETFILTER("Responsible Person",GETFILTER("Responsible Person Filter"));
        TableOption::"Try-out":
          Task.SETFILTER("Try-out No.",GETFILTER("Try-out Filter"));
        TableOption::"Try-out Quote":
          Task.SETFILTER("Try-out Quote No.",GETFILTER("Try-out Quote Filter"));
        TableOption::Estimate:
          Task.SETFILTER("Estimate No.",GETFILTER("Estimate Filter"));
        TableOption::Project:
          Task.SETFILTER("Project No.",GETFILTER("Project Filter"));
        TableOption::Parcel:
          Task.SETFILTER("Parcel No.",GETFILTER("Parcel Filter"));
        TableOption::Building:
          Task.SETFILTER("Building Code",GETFILTER("Building Filter"));
        TableOption::"Service Location":
          Task.SETFILTER("Service Location No.",GETFILTER("Service Location Filter"));
        TableOption::"Service Contract":
          Task.SETFILTER("Service Contract No.",GETFILTER("Service Contract Filter"));
        TableOption::"Service Call":
          Task.SETFILTER("Service Call No.",GETFILTER("Service Call Filter"));
        TableOption::"Service Order":
          Task.SETFILTER("Service Order No.",GETFILTER("Service Order Filter"));
      //**4PS.en
      END;
      Task.SETFILTER("Salesperson Code",GETFILTER("Salesperson Filter"));
      Task.SETFILTER("Team Code",GETFILTER("Team Filter"));
      Task.SETFILTER("Contact Company No.",GETFILTER("Contact Company Filter"));
      Task.SETFILTER(Status,GETFILTER("Task Status Filter"));
      Task.SETFILTER(Closed,GETFILTER("Task Closed Filter"));
      Task.SETFILTER(Priority,GETFILTER("Priority Filter"));
      Task.SETFILTER("System To-do Type",GETFILTER("System Task Type Filter"));

      PAGE.RUNMODAL(PAGE::"Task List",Task);
    END;

    LOCAL PROCEDURE MATRIX_OnAfterGetRecord@1(Matrix_ColumnOrdinal@1000 : Integer);
    BEGIN
      SetFilters;
      SETRANGE("Date Filter",MatrixRecords[Matrix_ColumnOrdinal]."Period Start",MatrixRecords[Matrix_ColumnOrdinal]."Period End");
      CALCFIELDS("No. of Tasks");
      IF OutputOption <> OutputOption::"Contact No." THEN BEGIN
        IF "No. of Tasks" = 0 THEN
          MATRIX_CellData[Matrix_ColumnOrdinal] := ''
        ELSE
          MATRIX_CellData[Matrix_ColumnOrdinal] := FORMAT("No. of Tasks");
      END ELSE BEGIN
        IF GETFILTER("Team Filter") <> '' THEN
          Task.SETFILTER("Team Code",GETFILTER("Team Filter"));
        IF GETFILTER("Salesperson Filter") <> '' THEN
          Task.SETFILTER("Salesperson Code",GETFILTER("Salesperson Filter"));
        IF GETFILTER("Campaign Filter") <> '' THEN
          Task.SETFILTER("Campaign No.",GETFILTER("Campaign Filter"));
        IF GETFILTER("Contact Filter") <> '' THEN
          Task.SETFILTER("Contact No.","Contact Filter");
        IF GETFILTER("Date Filter") <> '' THEN
          Task.SETFILTER(Date,GETFILTER("Date Filter"));
        IF GETFILTER("Task Status Filter") <> '' THEN
          Task.SETFILTER(Status,GETFILTER("Task Status Filter"));
        IF GETFILTER("Priority Filter") <> '' THEN
          Task.SETFILTER(Priority,GETFILTER("Priority Filter"));
        IF GETFILTER("Task Closed Filter") <> '' THEN
          Task.SETFILTER(Closed,GETFILTER("Task Closed Filter"));
        IF GETFILTER("Contact Company Filter") <> '' THEN
          Task.SETFILTER("Contact Company No.",GETFILTER("Contact Company Filter"));
        IF "No. of Tasks" = 0 THEN
          MATRIX_CellData[Matrix_ColumnOrdinal] := ''
        ELSE
          IF "No. of Tasks" > 1 THEN
            MATRIX_CellData[Matrix_ColumnOrdinal] := MultipleTxt
          ELSE BEGIN
            Task.FINDFIRST;
            IF Task."Contact No." <> '' THEN
              MATRIX_CellData[Matrix_ColumnOrdinal] := Task."Contact No."
            ELSE
              MATRIX_CellData[Matrix_ColumnOrdinal] := MultipleTxt
          END;
      END;
    END;

    LOCAL PROCEDURE FormatLine@2();
    BEGIN
      StyleIsStrong := Type = Type::Company;
    END;

    BEGIN
    END.
  }
}

