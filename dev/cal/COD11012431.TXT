OBJECT Codeunit 11012431 Doc. Registration Interface
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            FileRegistrationTools.CreateCompsXml();
          END;

  }
  CODE
  {
    VAR
      Text001@1100525000 : TextConst 'DEU=Marke ''%1'' erwartet in XML-Datei ''%2''.;ENU=Tag ''%1'' expected in XML file ''%2''.;NLD=Tag ''%1'' verwacht in XML bestand ''%2''.;NOR=Tag ''%1'' forventet i XML-filen ''%2''.;SVE=Taggen ''%1'' f”rv„ntades i XML-filen ''%2''.';
      Text002@1100525001 : TextConst 'DEU=Es gibt noch %1 „ltere Dokumente in der Wartereihe. M”chten Sie diese aus der Wartereihe l”schen und fortfahren?;ENU=%1 older documents are still queued, do you want to remove these from the queue en continue?;NLD=Er staan nog %1 oudere documenten in de wachtrij, wilt u deze verwijderen uit de wachtrij en doorgaan?;NOR=%1 eldre dokumenter er fortsatt i k›en. Vil du fjerne dem fra k›en og fortsette?;SVE=%1 „ldre dokument finns fortfarande i k”n. Vill du ta bort dem fr†n k”n och forts„tta?';
      FileRegistrationTools@1100525003 : Codeunit 11012249;
      FileMgt@1100525004 : Codeunit 419;

    PROCEDURE ReadDocsXml@1100525001();
    VAR
      QueuedExternalDocument@1100525002 : Record 11012148;
      XMLDOMMgt@1100525000 : Codeunit 11020220;
      XMLDoc@1100525001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XMLNodeDocs@1100525003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      OldDocCount@1100525004 : Integer;
    BEGIN
      //read docs.xml and insert content in Queued External Documents
      //docs.xml has following layout:
      //<?xml version="1.0"?>
      //<documents>
      //  <document>
      //    <folder>C:\File Dump</folder>
      //    <filename>Supportmelding19398.pdf</filename>
      //  </document>
      //  <document>
      //    <folder>C:\File Dump</folder>
      //    <filename>Timesheet portal 2009-000-08pre.fob</filename>
      //  </document>
      //</documents>

      IF NOT FileMgt.ClientFileExists(FileRegistrationTools.DocsXmlFilePath()) THEN
        EXIT;

      QueuedExternalDocument.SETRANGE(User, USERID);
      OldDocCount := QueuedExternalDocument.COUNT();
      IF OldDocCount > 0 THEN
        IF CONFIRM(Text002, FALSE, OldDocCount) THEN
          QueuedExternalDocument.DELETEALL(TRUE);

      IF ISNULL(XMLDoc) THEN
        XMLDoc := XMLDoc.XmlDocument;
      XMLDOMMgt.LoadXMLFromClientFile(XMLDoc, FileRegistrationTools.DocsXmlFilePath, TRUE);
      XMLNodeDocs := XMLDoc.DocumentElement;
      IF NOT (XMLNodeDocs.Name = FileRegistrationTools.DocumentsTag) THEN
        ERROR(Text001, FileRegistrationTools.DocumentsTag, FileRegistrationTools.DocsXmlFilePath);
      ReadDocs(XMLNodeDocs);

      //delete the file
      FileMgt.DeleteClientFile(FileRegistrationTools.DocsXmlFilePath)
    END;

    LOCAL PROCEDURE ReadDocs@1100525010(XMLNode@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      XMLDOMMgt@1100525001 : Codeunit 11020220;
      XMLNodeList@1100525002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      XMLNodeDoc@1100525003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      I@1100525004 : Integer;
    BEGIN
      IF XMLDOMMgt.FindNodes(XMLNode, FileRegistrationTools.DocumentTag, XMLNodeList) THEN
      IF ISNULL(XMLNodeList) THEN
        ERROR(Text001, XMLNodeDoc, FileRegistrationTools.DocsXmlFilePath);

      FOR I := 0 TO (XMLNodeList.Count - 1) DO BEGIN
        XMLNodeDoc := XMLNodeList.Item(I);
        ReadDoc(XMLNodeDoc);
      END;
    END;

    LOCAL PROCEDURE ReadDoc@1100525011(XMLNode@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode");
    VAR
      QueuedExternalDocument@1100525001 : Record 11012148;
      XMLDOMMgt@1100525003 : Codeunit 11020220;
      XMLNodeReturn@1100525002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      CLEAR(QueuedExternalDocument);
      WITH QueuedExternalDocument DO BEGIN
        User := USERID;
        IF XMLDOMMgt.FindNode(XMLNode, FileRegistrationTools.FolderTag,XMLNodeReturn) THEN BEGIN
          Folder := XMLNodeReturn.InnerText;
          IF COPYSTR(Folder, STRLEN(Folder), 1) <> '\' THEN
            Folder := Folder + '\';
        END;
        IF XMLDOMMgt.FindNode(XMLNode, FileRegistrationTools.FileNameTag,XMLNodeReturn) THEN
          "File Name" := XMLNodeReturn.InnerText;
        QueuedExternalDocument.Source := QueuedExternalDocument.Source::System; // jhoek.260111
        INSERT(TRUE);
      END;
    END;

    PROCEDURE CreateCompsXml@1100525002();
    BEGIN
      FileRegistrationTools.CreateCompsXml();
    END;

    BEGIN
    {
      //this codeunit can create and read the XML files that are the interface with the Office Addins.
    }
    END.
  }
}

