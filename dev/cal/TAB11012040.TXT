OBJECT Table 11012040 Project Responsible Person
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    Permissions=TableData 11072003=m;
    OnInsert=BEGIN
               "SharePoint Status" := "SharePoint Status"::New;
               InsertJobPersons;
               AddDptPermissions;
               ProjectSiteMgt.LogProjectResponsiblePerson(1, Rec); //**4PS.n
             END;

    OnModify=BEGIN
               IF "SharePoint Status" = "SharePoint Status"::Updated THEN
                 "SharePoint Status" := "SharePoint Status"::Modified;

               ModifyJobPersons;
               ProjectSiteMgt.LogProjectResponsiblePerson(2, Rec); //**4PS.n
             END;

    OnDelete=VAR
               RespPersPermPPT@1100528300 : Record 11229812;
               lJobRec@1100528301 : Record 11072003;
               DPTRespPersPermProject@1100528302 : Record 11072332;
             BEGIN
               IF NOT GlobalDelete THEN BEGIN
                 IF lJobRec.GET("Project No.") THEN BEGIN
                    IF lJobRec."SharePoint Status" = lJobRec."SharePoint Status"::Updated THEN BEGIN
                      lJobRec."SharePoint Status" :=  lJobRec."SharePoint Status"::Modified;
                      lJobRec.MODIFY;
                    END;
                 END;
                 CheckJobPersons;  //T001329.n
                 CheckDptPermissions;
               END;

               RespPersPermPPT.SETRANGE("Project No.", "Project No.");
               RespPersPermPPT.SETRANGE("Line No.", "Line No.");
               IF (NOT RespPersPermPPT.ISEMPTY) THEN
                 RespPersPermPPT.DELETEALL(TRUE);

               DPTRespPersPermProject.SETRANGE("Project No.", "Project No.");
               DPTRespPersPermProject.SETRANGE("Line No.", "Line No.");
               IF (NOT DPTRespPersPermProject.ISEMPTY) THEN
                 DPTRespPersPermProject.DELETEALL;

               //CheckJobPersons;    //T001329.o
               ProjectSiteMgt.LogProjectResponsiblePerson(3, Rec); //**4PS.n
             END;

    OnRename=VAR
               Job@1100528300 : Record 11072003;
               RespPersPermPPT@1100528301 : Record 11229812;
               CreateRespPersPermPPT@1100528302 : Report 11012195;
             BEGIN
               Job.GET("Project No.");
               IF (Job.IsJobInProjectPortal) THEN BEGIN
                 RespPersPermPPT.SETRANGE("Subsite Type", RespPersPermPPT."Subsite Type"::Project);
                 RespPersPermPPT.SETRANGE("Project No.", xRec."Project No.");
                 RespPersPermPPT.SETRANGE("Line No.", xRec."Line No.");
                 RespPersPermPPT.DELETEALL;
                 CreateRespPersPermPPT.ProcessProjectResponsiblePerson(Rec);
               END;

               IF (Job.IsDocumentPortalDualProject) THEN
                 ERROR(Text000);

               ProjectSiteMgt.LogProjectResponsiblePerson(3, xRec); //**4PS.n
               ProjectSiteMgt.LogProjectResponsiblePerson(1, Rec); //**4PS.n
             END;

    CaptionML=[ENU=Project Responsible Person;
               NOR=Prosjektansvarlig;
               SVE=Projektansvarig];
    LookupPageID=Page11012017;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes }
    { 15  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 20  ;   ;Responsibility      ;Code10        ;TableRelation=Responsibility.Code;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Responsibility Description");
                                                              END;

                                                   CaptionML=[ENU=Responsibility;
                                                              NOR=Ansvar;
                                                              SVE=Ansvar];
                                                   NotBlank=Yes }
    { 30  ;   ;Employee No.        ;Code20        ;TableRelation=Employee.No.;
                                                   OnValidate=VAR
                                                                Purchaser@1100525000 : Record 13;
                                                              BEGIN
                                                                IF "Employee No." <> '' THEN BEGIN
                                                                  JobsSetup.GET;
                                                                  IF (Responsibility <> '') AND (Responsibility = JobsSetup."Responsibility Purchaser") THEN
                                                                    Purchaser.GET("Employee No.");
                                                                END;
                                                                CALCFIELDS("Name Employee");
                                                              END;

                                                   OnLookup=VAR
                                                              Employee@1100525000 : Record 5200;
                                                              Purchaser@1100525001 : Record 13;
                                                            BEGIN
                                                              JobsSetup.GET;
                                                              IF (Responsibility <> '') AND (Responsibility = JobsSetup."Responsibility Purchaser") THEN BEGIN
                                                                Purchaser.Code := "Employee No.";
                                                                IF PAGE.RUNMODAL(0, Purchaser) = ACTION::LookupOK THEN
                                                                  VALIDATE("Employee No.", Purchaser.Code);
                                                              END ELSE BEGIN
                                                                Employee."No." := "Employee No.";
                                                                IF PAGE.RUNMODAL(0, Employee) = ACTION::LookupOK THEN
                                                                  VALIDATE("Employee No.", Employee."No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Employee No.;
                                                              NOR=Ansattnr;
                                                              SVE=Anst„llningsnr] }
    { 40  ;   ;Responsibility Description;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Responsibility.Description WHERE (Code=FIELD(Responsibility)));
                                                   CaptionML=[ENU=Responsibility Description;
                                                              NOR=Ansvar, Beskrivelse;
                                                              SVE=Ansvar, beskrivning];
                                                   Editable=No }
    { 50  ;   ;Name Employee       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Employee No.)));
                                                   CaptionML=[ENU=Name Employee;
                                                              NOR=Navn p† ansatt.;
                                                              SVE=Namn p† anst„lld.];
                                                   Editable=No }
    { 51  ;   ;Company E-Mail      ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Company E-Mail" WHERE (No.=FIELD(Employee No.)));
                                                   CaptionML=[ENU=Company E-Mail;
                                                              NOR=Selskapets e-post;
                                                              SVE=F”retag e-post];
                                                   Editable=No }
    { 60  ;   ;SharePoint Status   ;Option        ;CaptionML=[ENU=SharePoint Status;
                                                              NOR=SharePoint-status;
                                                              SVE=SharePoint-status];
                                                   OptionCaptionML=[ENU=New,Modified,Updated;
                                                                    NOR=Ny,Endret,Oppdatert;
                                                                    SVE=Ny,Žndrad,Uppdaterad];
                                                   OptionString=New,Modified,Updated;
                                                   Editable=Yes }
    { 70  ;   ;Portal Login E-Mail Send On;DateTime;
                                                   CaptionML=ENU=Portal Login E-Mail Send On;
                                                   Editable=No }
    { 11128000;;Contract No.       ;Code10        ;CaptionML=[ENU=Contract No.;
                                                              NOR=Kontraktsnr;
                                                              SVE=Kontraktsnr] }
  }
  KEYS
  {
    {    ;Project No.,Line No.                    ;Clustered=Yes }
    {    ;Employee No.,Responsibility,Project No.  }
    {    ;Employee No.,Project No.                 }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Line No.,Responsibility,Employee No.,Name Employee }
  }
  CODE
  {
    VAR
      JobsSetup@1100525000 : Record 315;
      GlobalDelete@1100485000 : Boolean;
      ProjectSiteMgt@1100528300 : Codeunit 11012282;
      DptPermissionsPresentTxt@1100528500 : TextConst 'ENU=There are %1 present. Do you really want to delete this %2?';
      Text000@1100528301 : TextConst 'ENU=Rename is not allowed.;NOR=Gi nytt navn ikke tillatt;SVE=Att ge nytt namn „r inte till†tet.';

    PROCEDURE SetGlobalDelete@1100485000();
    BEGIN
      GlobalDelete := TRUE;
    END;

    PROCEDURE CheckJobPersons@1100525000();
    VAR
      Job@1100525000 : Record 11072003;
    BEGIN
      IF NOT Job.GET("Project No.") THEN EXIT;

      JobsSetup.GET;

      CASE Responsibility OF
        JobsSetup."Responsibility Estimator":
          BEGIN
            IF Job.Estimator = "Employee No." THEN BEGIN
              Job.Estimator := '';
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility Site Manager":
          BEGIN
            IF Job."Site Manager" = "Employee No." THEN BEGIN
              Job."Site Manager" := '';
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility Project Manager":
          BEGIN
            IF Job."Project Manager" = "Employee No." THEN BEGIN
              Job."Project Manager" := '';
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility ProjectEngineer":
          BEGIN
            IF Job."Project Engineer" = "Employee No." THEN BEGIN
              Job."Project Engineer" := '';
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility Administrator":
          BEGIN
            IF Job."Project Administrator" = "Employee No." THEN BEGIN
              Job."Project Administrator" := '';
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility Buyercontact":
          BEGIN
            IF Job.Buyercontact = "Employee No." THEN BEGIN
              Job.Buyercontact := '';
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility Purchaser":
          BEGIN
            IF Job."Purchaser Code" = "Employee No." THEN BEGIN
              Job."Purchaser Code" := '';
              Job.MODIFY(FALSE);
            END;
          END;
      END;
    END;

    PROCEDURE InsertJobPersons@1100530000();
    VAR
      Job@1100525000 : Record 11072003;
    BEGIN
      IF NOT Job.GET("Project No.") THEN EXIT;

      JobsSetup.GET;

      CASE Responsibility OF
        JobsSetup."Responsibility Estimator":
          BEGIN
            IF Job.Estimator = '' THEN BEGIN
              Job.Estimator := "Employee No.";
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility Site Manager":
          BEGIN
            IF Job."Site Manager" = '' THEN BEGIN
              Job."Site Manager" := "Employee No.";
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility Project Manager":
          BEGIN
            IF Job."Project Manager" = '' THEN BEGIN
              Job."Project Manager" := "Employee No.";
              Job.MODIFY(FALSE);
            END
          END;
        JobsSetup."Responsibility ProjectEngineer":
          BEGIN
            IF Job."Project Engineer" = '' THEN BEGIN
              Job."Project Engineer" := "Employee No.";
              Job.MODIFY(FALSE);
              END
          END;
        JobsSetup."Responsibility Administrator":
          BEGIN
            IF Job."Project Administrator" = '' THEN BEGIN
              Job."Project Administrator" := "Employee No.";
              Job.MODIFY(FALSE);
            END
          END;
        JobsSetup."Responsibility Buyercontact":
          BEGIN
            IF Job.Buyercontact = '' THEN BEGIN
              Job.Buyercontact := "Employee No.";
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility Purchaser":
          BEGIN
            IF Job."Purchaser Code" = '' THEN BEGIN
              Job."Purchaser Code" := "Employee No.";
              Job.MODIFY(FALSE);
            END;
          END;
      END;
    END;

    PROCEDURE ModifyJobPersons@1100530001();
    VAR
      Job@1100525000 : Record 11072003;
    BEGIN
      IF NOT Job.GET("Project No.") THEN EXIT;

      JobsSetup.GET;

      CASE Responsibility OF
        JobsSetup."Responsibility Estimator":
          BEGIN
            IF Job.Estimator = xRec."Employee No." THEN BEGIN
              Job.Estimator := "Employee No.";
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility Site Manager":
          BEGIN
            IF Job."Site Manager" = xRec."Employee No." THEN BEGIN
              Job."Site Manager" := "Employee No.";
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility Project Manager":
          BEGIN
            IF Job."Project Manager" = xRec."Employee No." THEN BEGIN
              Job."Project Manager" := "Employee No.";
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility ProjectEngineer":
          BEGIN
            IF Job."Project Engineer" = xRec."Employee No." THEN BEGIN
              Job."Project Engineer" := "Employee No.";
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility Administrator":
          BEGIN
            IF Job."Project Administrator" = xRec."Employee No." THEN BEGIN
              Job."Project Administrator" := "Employee No.";
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility Buyercontact":
          BEGIN
            IF Job.Buyercontact = xRec."Employee No." THEN BEGIN
              Job.Buyercontact := "Employee No.";
              Job.MODIFY(FALSE);
            END;
          END;
        JobsSetup."Responsibility Purchaser":
          BEGIN
            IF Job."Purchaser Code" = xRec."Employee No." THEN BEGIN
              Job."Purchaser Code" := "Employee No.";
              Job.MODIFY(FALSE);
            END;
          END;
      END;
    END;

    PROCEDURE AddDptPermissions@1100528503();
    VAR
      DPTRespPersPermProject@1100528500 : Record 11072332;
      Job@1100528502 : Record 11072003;
      InstallationManagement@1100528501 : Codeunit 11012268;
    BEGIN
      IF (Responsibility = '') OR ("Employee No." = '') THEN
        EXIT;
      IF (InstallationManagement.NoLicensePermissionForTableData(DATABASE::"DPT Resp Pers Perm Project")) THEN
        EXIT;
      Job.GET("Project No.");
      IF (NOT Job.IsDocumentPortalDualProject) THEN
        EXIT;

      DPTRespPersPermProject.AddPortalPermission(Rec, '');
    END;

    PROCEDURE AddProjectPortalPermissions@1100528300();
    VAR
      ProjectResponsiblePerson@1100528300 : Record 11012040;
      CreateRespPersPermPPT@1100528301 : Report 11012195;
    BEGIN
      ProjectResponsiblePerson := Rec;
      CreateRespPersPermPPT.SetSubsiteType(0); //Project
      ProjectResponsiblePerson.SETRANGE("Project No.", "Project No.");
      CreateRespPersPermPPT.SETTABLEVIEW(ProjectResponsiblePerson);
      CreateRespPersPermPPT.RUNMODAL;
    END;

    PROCEDURE UpdateProjectPortal@1100528301();
    VAR
      Job@1100528301 : Record 11072003;
      DocumentPortalProject@1100528300 : Codeunit 11012948;
    BEGIN
      Job.GET("Project No.");
      DocumentPortalProject.AddResponsiblePersons(Job);
      DocumentPortalProject.AddQuoteResponsiblePersons(Job);
    END;

    LOCAL PROCEDURE "---Locals---"@1100528502();
    BEGIN
    END;

    LOCAL PROCEDURE CheckDptPermissions@1100528500() : Boolean;
    VAR
      DPTRespPersPermProject@1100528502 : Record 11072332;
      Job@1100528501 : Record 11072003;
      InstallationManagement@1100528500 : Codeunit 11012268;
    BEGIN
      IF (InstallationManagement.NoLicensePermissionForTableData(DATABASE::"DPT Resp Pers Perm Project")) THEN
        EXIT;
      Job.GET("Project No.");
      IF (NOT Job.IsDocumentPortalDualProject) THEN
        EXIT;
      DPTRespPersPermProject.SETRANGE("Project No.", "Project No.");
      DPTRespPersPermProject.SETRANGE("Line No.", "Line No.");
      DPTRespPersPermProject.SETFILTER("Subsite Synced On", '<>%1', 0DT);
      DPTRespPersPermProject.SETFILTER("Subsite Doc Type Synced On", '<>%1', 0DT);
      IF (DPTRespPersPermProject.ISEMPTY) THEN
        EXIT;

      IF (NOT CONFIRM(DptPermissionsPresentTxt, FALSE, DPTRespPersPermProject.TABLECAPTION, TABLECAPTION)) THEN
        ERROR('');
    END;

    BEGIN
    END.
  }
}

