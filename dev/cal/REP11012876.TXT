OBJECT Report 11012876 Create Serv. Ord. in Ex. Comp.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Serviceauftrag in ausf. Betrieb erstellen;
               ENU=Create Serv. Ord. in Ex. Comp.;
               NLD=Serviceorder in uitv. bedrijf aanmaken;
               NOR=Opprett serv.ord. i ekst. selsk.;
               SVE=Skapa serv.ord. i Ex. Fîretag];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   WebServiceURL.FILTERGROUP(2);
                   WebServiceURL.SETRANGE(Type, WebServiceURL.Type::"Service Network");
                   WebServiceURL.FILTERGROUP(0);
                 END;

    OnPreReport=BEGIN
                  FillGlobalVariables;
                  CheckGLNOfExecutingCompany;
                END;

  }
  DATASET
  {
    { 1373;    ;DataItem;                    ;
               DataItemTable=Table11012823;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               CheckIfOneServOrderIsSelected("Service Order");
                             END;

               OnAfterGetRecord=BEGIN
                                  CreateServOrderInExecCompany("Service Order");
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=[DEU=Web Services URL Code;
                             ENU=Web Service URL Code;
                             NLD=Webservice URL code;
                             NOR=URL-kode for webservice;
                             SVE=URL-kod till webbtjÑnst];
                  SourceExpr=WebServiceURL.Code;
                  OnValidate=BEGIN
                               ValidateWebServiceURL;
                             END;

                  OnLookup=BEGIN
                             HandleLookupWebServiceURL;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1100528401 : TextConst 'DEU=Es sind mehr als 1 %1 ausgewÑhlt worden.;ENU=More than 1 %1 has been selected.;NLD=Er is meer dan 1 %1 geselecteerd.;NOR=Fler enn 1 %1 er valgt;SVE=Fler Ñn en %1 har valts.';
      WebServiceURL@1100528402 : Record 11020659;
      WebServiceMgt@1100528400 : Codeunit 11012266;
      Text001@1100528403 : TextConst 'DEU=Letzte %1 fÅr %2 %3;ENU=Last %1s for %2 %3;NLD=Laatste %1s voor %2 %3;NOR=Siste %1er for %2 %3;SVE=Senaste %1 fîr %2 %3.';
      ServiceOrderNamespace@1100528411 : Text[100];
      ServiceOrderTagName@1100528410 : Text[100];
      ProblemTextLinesTagName@1100528409 : Text[100];
      ProblemTextLineTagName@1100528408 : Text[100];
      ServiceOrderXPath@1100528407 : Text[100];
      ProblemTextLinesXPath@1100528406 : Text[100];
      LastProblemTextLineXPath@1100528405 : Text[100];
      ServOrderExtension@1100528900 : Record 11071727;
      Text002@1100528600 : TextConst 'DEU=Problembeschreibung;ENU=Problem Text;NLD=Probleemtekst;NOR=Problemtekst;SVE=Problemtext';

    LOCAL PROCEDURE FillGlobalVariables@1100528406();
    VAR
      Company@1100528400 : Record 2000000006;
    BEGIN
      ServiceOrderTagName := 'ServiceOrderSVCNET';
      ProblemTextLinesTagName := 'ProblemTextLines';
      ProblemTextLineTagName := 'Problem_Text_Line_SVCNET';
      ServiceOrderXPath := './/so:Create/so:' + ServiceOrderTagName;
      ProblemTextLinesXPath := ServiceOrderXPath + '/so:' + ProblemTextLinesTagName;
      LastProblemTextLineXPath := ProblemTextLinesXPath + '/so:' + ProblemTextLineTagName +  '[last()]';

      WebServiceURL.GET(WebServiceURL.Type::"Service Network", WebServiceURL.Code);
      WebServiceURL.TESTFIELD("Target Namespace");
      ServiceOrderNamespace := WebServiceURL."Target Namespace";
      Company.GET(WebServiceURL."Company Name");
    END;

    LOCAL PROCEDURE CreateServOrderInExecCompany@1100528400(ServiceOrder@1100528403 : Record 11012823);
    VAR
      Namespaces@1100528400 : ARRAY [10,2] OF Text[100];
      ServiceOrderExtension@1100528401 : Record 11071727;
    BEGIN
      CLEAR(WebServiceMgt);
      WebServiceMgt.PrepareSOAPRequest(ServiceOrderNamespace, 'Create');
      Namespaces[1, 1] := 'so';
      Namespaces[1, 2] := ServiceOrderNamespace;
      WebServiceMgt.AddRequestSelectionNamespaces(Namespaces);
      WebServiceMgt.AppendSOAPParameter(ServiceOrderNamespace, ServiceOrderTagName, '');
      WebServiceMgt.AppendParameter(ServiceOrderXPath, ServiceOrderNamespace, ProblemTextLinesTagName, '');

      IF NOT ServOrderExtension.GET(ServiceOrder."No.") THEN
        ServOrderExtension.INIT;  //DP00106

      FillOrderFieldsInSoapRequest(ServiceOrder);
      AddProblemTxtLinsToSoapRequest(ServiceOrder);
      AddObjectInspListToSoapRequest(ServiceOrder);
      AddLast3OrdersToSoapRequest(ServiceOrder);
      WebServiceMgt.SendSOAPRequest2('Create', WebServiceURL.URL, WebServiceURL.Login, WebServiceURL.Password, TRUE);
      WebServiceMgt.AddResponseSelectionNamespaces(Namespaces);

      ServiceOrderExtension.GetServOrderExtension(ServiceOrder."No.");
      ServiceOrderExtension."Order No. Executing Company" :=
        WebServiceMgt.GetResponseValueText('.//so:' + ServiceOrderTagName + '/so:No', TRUE);
      ServiceOrderExtension."Executing Company Name" := WebServiceURL."Company Name";
      ServiceOrderExtension.UpdateServOrderExtension(ServiceOrder."No.");

      AddMappingXMLInvoices(
        ServiceOrder."No.", ServiceOrderExtension."Order No. Executing Company");
    END;

    LOCAL PROCEDURE FillOrderFieldsInSoapRequest@1100528402(ServiceOrder@1100528403 : Record 11012823);
    BEGIN
      FillOrderFieldInSoapRequest('Description', ServiceOrder.Description);
      FillOrderFieldInSoapRequest('Name', ServiceOrder.Name);
      FillOrderFieldInSoapRequest('Address', ServiceOrder.Address);
      FillOrderFieldInSoapRequest('Post_Code', ServiceOrder."Post Code");
      FillOrderFieldInSoapRequest('City', ServiceOrder.City);
      FillOrderFieldInSoapRequest('Contact_Name', ServiceOrder."Contact Name");
      FillOrderFieldInSoapRequest('Phone_No', ServiceOrder."Phone No.");
      FillOrderFieldInSoapRequest('E_Mail', ServiceOrder."E-Mail");
      FillOrderFieldInSoapRequest('Your_Reference', ServiceOrder."Your Reference");
      FillOrderFieldInSoapRequest('Order_No_Customer', ServiceOrder."No.");
      FillOrderFieldInSoapRequest('Principal_Company_Name', COMPANYNAME);
      FillOrderFieldInSoapRequest('Territory_Code', ServiceOrder."Territory Code");
      FillOrderFieldInSoapRequest('Serv_Contr_No_Princ_Comp', ServiceOrder."Service Contract No.");
    END;

    LOCAL PROCEDURE FillOrderFieldInSoapRequest@1100528410(FieldName@1100528400 : Text[50];Value@1100528401 : Text[250]);
    BEGIN
      WebServiceMgt.AppendParameter(
        ServiceOrderXPath, ServiceOrderNamespace, FieldName, Value);
    END;

    LOCAL PROCEDURE AddProblemTxtLinsToSoapRequest@1100528412(ServiceOrder@1100528403 : Record 11012823);
    VAR
      ServiceText@1100528406 : Record 11012882;
    BEGIN
      ServiceText.SETRANGE("Table Name", ServiceText."Table Name"::"Service Order");
      ServiceText.SETRANGE("No.", ServiceOrder."No.");
      ServiceText.SETRANGE("Table Field", 90);  //ServiceOrder.FIELDNO("Problem Text"));  //DP00106

      IF ServiceText.FINDSET THEN BEGIN
        AddProblTextLineToSoapRequest(0D, '', Text002);
        AddProblTextLineToSoapRequest(0D, '', '');
        REPEAT
          AddProblTextLineToSoapRequest(ServiceText.Date, ServiceText.Code, ServiceText.Comment);
        UNTIL ServiceText.NEXT = 0;
        AddProblTextLineToSoapRequest(0D, '', '');
      END;
    END;

    LOCAL PROCEDURE AddObjectInspListToSoapRequest@1100528417(ServiceOrder@1100528403 : Record 11012823);
    VAR
      ServiceOrderObject@1100528400 : Record 11071724;
      ServiceOrderInspectionLine@1100528401 : Record 11071753;
      ServiceText@1100528404 : Record 11012882;
      ServiceOrderInspectionLines@1100528402 : Page 11125261;
    BEGIN
      ServiceOrderObject.SETRANGE("Service Order No.", ServiceOrder."No.");
      IF ServiceOrderObject.FINDSET THEN BEGIN
        ServiceOrderInspectionLine.SETRANGE("Service Order No.", ServiceOrderObject."Service Order No.");
        IF NOT ServiceOrderInspectionLine.ISEMPTY THEN BEGIN
          AddProblTextLineToSoapRequest(0D, '', ServiceOrderInspectionLines.CAPTION);
          AddProblTextLineToSoapRequest(0D, '', '');
        END;
        REPEAT
          ServiceOrderInspectionLine.SETRANGE("Service Order No.", ServiceOrderObject."Service Order No.");
          ServiceOrderInspectionLine.SETRANGE("Service Object No.", ServiceOrderObject."Object No.");
          ServiceOrderInspectionLine.SETRANGE("Maintenance Scheme Code", ServiceOrderObject."Maintenance Scheme");
          IF ServiceOrderInspectionLine.FINDSET THEN BEGIN
            AddProblTextLineToSoapRequest(
              0D,
              '',
              COPYSTR(
                GetIndentationStr(1) + ServiceOrderInspectionLine.FIELDCAPTION("Service Object No.") + ': ' +
                ServiceOrderInspectionLine."Service Object No." + ' - ' +
                ServiceOrderInspectionLine.FIELDCAPTION("Maintenance Scheme Code") + ': ' +
                ServiceOrderInspectionLine."Maintenance Scheme Code", 1, MAXSTRLEN(ServiceText.Comment)));
            REPEAT
              IF ServiceOrderInspectionLine.Type = ServiceOrderInspectionLine.Type::Group THEN
                AddProblTextLineToSoapRequest(
                  0D,
                  '',
                  COPYSTR(
                    GetIndentationStr(2) + ServiceOrderInspectionLine.Description,
                    1, MAXSTRLEN(ServiceText.Comment)))
              ELSE
                AddProblTextLineToSoapRequest(
                  0D,
                  '',
                  COPYSTR(
                    GetIndentationStr(3) + ServiceOrderInspectionLine.Description + ' ' +
                    ServiceOrderInspectionLine.Value + ' ' + ServiceOrderInspectionLine."Unit Of Measure",
                    1, MAXSTRLEN(ServiceText.Comment)));
            UNTIL ServiceOrderInspectionLine.NEXT = 0;
            AddProblTextLineToSoapRequest(0D, '', '');
          END;
        UNTIL ServiceOrderObject.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE AddLast3OrdersToSoapRequest@1100528403(ServiceOrder@1100528404 : Record 11012823);
    VAR
      ServiceOrder2@1100528405 : Record 11012823;
      NoOfOrders@1100528406 : Integer;
    BEGIN
      ServiceOrder2.SETCURRENTKEY("Service Location No.", "Order Date", "Order Time");
      ServiceOrder2.SETFILTER("No.", '<>%1', ServiceOrder."No.");
      ServiceOrder2.SETRANGE("Service Location No.", ServiceOrder."Service Location No.");

      IF ServiceOrder2.FIND('+') THEN BEGIN
        AddProblTextLineToSoapRequest(
          0D,
          '',
          STRSUBSTNO(
            Text001,
            ServiceOrder.TABLECAPTION,
            ServiceOrder.FIELDCAPTION("Service Location No."),
            ServiceOrder."Service Location No."));
        AddProblTextLineToSoapRequest(0D, '', '');
        REPEAT
          AddOrderToSoapRequest(ServiceOrder2);
          NoOfOrders := NoOfOrders + 1;
        UNTIL (NOT ServiceOrder2.FIND('<') OR (NoOfOrders >= 3))
      END;
    END;

    LOCAL PROCEDURE AddOrderToSoapRequest@1100528408(ServiceOrder2@1100528404 : Record 11012823);
    VAR
      ServOrderExtension2@1100528900 : Record 11071727;
    BEGIN
      IF NOT ServOrderExtension2.GET(ServiceOrder2."No.") THEN
        ServOrderExtension2.INIT;  //DP00106

      AddProblTextLineToSoapRequest(
        ServiceOrder2."Order Date",
        '',
        GetIndentationStr(1) + ServiceOrder2.TABLECAPTION + ' '  + ServiceOrder2."No.");
      AddProblTextLineToSoapRequest(0D, '', '');
    END;

    LOCAL PROCEDURE AddOrderTextToSoapRequest@1100528411(TextFieldCaption@1100528404 : Text[50];Text@1100528405 : Text[250]);
    VAR
      StartPos@1100528406 : Integer;
      MaxTextLineLength@1100528408 : Integer;
      ServiceText@1100528409 : Record 11012882;
    BEGIN
      AddProblTextLineToSoapRequest(0D, '', GetIndentationStr(2) + TextFieldCaption + ':');

      StartPos := 1;
      MaxTextLineLength := MAXSTRLEN(ServiceText.Comment) - STRLEN(GetIndentationStr(3));

      WHILE StartPos <= STRLEN(Text) DO BEGIN
        AddProblTextLineToSoapRequest(0D, '', GetIndentationStr(3) + COPYSTR(Text, StartPos, MaxTextLineLength));
        StartPos := StartPos + MaxTextLineLength;
      END;
    END;

    LOCAL PROCEDURE CheckIfOneServOrderIsSelected@1100528401(VAR ServiceOrder@1100528400 : Record 11012823);
    VAR
      ServiceOrder2@1100528401 : Record 11012823;
    BEGIN
      ServiceOrder2.COPY(ServiceOrder);
      IF ServiceOrder2.COUNT <> 1 THEN
        ERROR(Text000, ServiceOrder2.TABLECAPTION);
    END;

    LOCAL PROCEDURE GetIndentationStr@1100528405(IndentationLevel@1100528400 : Integer) IndentationString : Text[100];
    VAR
      I@1100528401 : Integer;
    BEGIN
      FOR I := 1 TO IndentationLevel DO
        IndentationString := IndentationString + '  ';
    END;

    LOCAL PROCEDURE AddProblTextLineToSoapRequest@1100528407(Date@1100528400 : Date;Code@1100528402 : Code[10];CommentText@1100528401 : Text[100]);
    BEGIN
      WebServiceMgt.AppendParameter(
        ProblemTextLinesXPath, ServiceOrderNamespace, ProblemTextLineTagName, '');
      IF Date <> 0D THEN
        WebServiceMgt.AppendParameter(
          LastProblemTextLineXPath,
          ServiceOrderNamespace,
          'Date',
          FORMAT(Date, 0, '<Year4>-<Month,2>-<Day,2>'));
      IF CommentText <> '' THEN
        WebServiceMgt.AppendParameter(
          LastProblemTextLineXPath,
          ServiceOrderNamespace,
          'Comment',
          CommentText);
    END;

    LOCAL PROCEDURE AddMappingXMLInvoices@1100528409(PrincipalServiceOrderNo@1100528400 : Code[20];ExecutingServiceOrderNo@1100528401 : Code[20]);
    VAR
      MappingXMLInvoices@1100528403 : Record 11020563;
    BEGIN
      IF MappingXMLInvoices.GET(
          WebServiceURL."Global Location Number",
          MappingXMLInvoices."Data Type"::"Service Order",
          ExecutingServiceOrderNo,
          0)
      THEN BEGIN
        MappingXMLInvoices."Supplying No. Filter" := '';
        MappingXMLInvoices.Convert := TRUE;
        MappingXMLInvoices."Receiving Type" := MappingXMLInvoices."Receiving Type"::"Service Order";
        MappingXMLInvoices."Receiving No." := PrincipalServiceOrderNo;
        MappingXMLInvoices.MODIFY;
      END ELSE BEGIN
        MappingXMLInvoices."Supplying GLN" := WebServiceURL."Global Location Number";
        MappingXMLInvoices."Data Type" := MappingXMLInvoices."Data Type"::"Service Order";
        MappingXMLInvoices."Supplying No." := ExecutingServiceOrderNo;
        MappingXMLInvoices."Sequence No." := 0;
        MappingXMLInvoices."Supplying No. Filter" := '';
        MappingXMLInvoices.Convert := TRUE;
        MappingXMLInvoices."Receiving Type" := MappingXMLInvoices."Receiving Type"::"Service Order";
        MappingXMLInvoices."Receiving No." := PrincipalServiceOrderNo;
        MappingXMLInvoices.INSERT;
      END;
    END;

    LOCAL PROCEDURE CheckGLNOfExecutingCompany@1100528415();
    VAR
      ETIMVendorCentralMgt@1100528400 : Record 11012304;
    BEGIN
      WebServiceURL.TESTFIELD("Global Location Number");
      ETIMVendorCentralMgt.GET(WebServiceURL."Global Location Number");
    END;

    PROCEDURE ValidateWebServiceURL@1100525000();
    VAR
      Company@1100525000 : Record 2000000006;
    BEGIN
      WebServiceURL.GET(WebServiceURL.Type::"Service Network", WebServiceURL.Code);
      Company.GET(WebServiceURL."Company Name");
    END;

    PROCEDURE HandleLookupWebServiceURL@1100525002();
    VAR
      Company@1100525000 : Record 2000000006;
    BEGIN
      IF PAGE.RUNMODAL(0, WebServiceURL) <> ACTION::LookupOK THEN
        CLEAR(WebServiceURL)
      ELSE
        Company.GET(WebServiceURL."Company Name");
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

