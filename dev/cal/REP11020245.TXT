OBJECT Report 11020245 Job Create Sales Invoice
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03,4PS14.00 (1093);
  }
  PROPERTIES
  {
    CaptionML=[DEU=Verkaufsrechnung erstellen Projekt;
               ENU=Job Create Sales Invoice;
               NLD=Verkoopfactuur project maken;
               NOR=Prosjekt - Opprette salgsfaktura;
               SVE=Projekt - Skapa fîrs.faktura];
    ApplicationArea=#Jobs;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  JobCalcBatches.BatchError(PostingDate,Text000);
                  InvoicePerTask := JobChoice = JobChoice::"Job Task";
                  JobCreateInvoice.DeleteSalesInvoiceBuffer;

                  OnAfterPreReport;
                END;

    OnPostReport=BEGIN
                   OnBeforePostReport;

                   JobCalcBatches.EndCreateInvoice(NoOfInvoices);

                   OnAfterPostReport(NoOfInvoices);
                 END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 2969;    ;DataItem;                    ;
               DataItemTable=Table11072600;
               DataItemTableView=SORTING(Job No.,Job Task No.);
               OnPreDataItem=BEGIN
                               NoOfInvoices := 0;
                               OldJobNo := '';
                               OldJTNo := '';
                             END;

               OnAfterGetRecord=VAR
                                  IsHandled@1000 : Boolean;
                                BEGIN
                                  IsHandled := FALSE;
                                  OnBeforeJobTaskOnAfterGetRecord("Job Task",IsHandled);
                                  IF NOT IsHandled THEN
                                    JobCreateInvoice.CreateSalesInvoiceJobTask(
                                      "Job Task",PostingDate,InvoicePerTask,NoOfInvoices,OldJobNo,OldJTNo,FALSE);
                                END;

               OnPostDataItem=BEGIN
                                JobCreateInvoice.CreateSalesInvoiceJobTask(
                                  "Job Task",PostingDate,InvoicePerTask,NoOfInvoices,OldJobNo,OldJTNo,TRUE);
                              END;

               ReqFilterFields=Job No.,Job Task No.,Planning Date Filter }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   PostingDate := WORKDATE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 7   ;2   ;Field     ;
                  CaptionML=[DEU=Buchungsdatum;
                             ENU=Posting Date;
                             NLD=Boekingsdatum;
                             NOR=Bokfõringsdato;
                             SVE=Bokfîringsdatum];
                  ToolTipML=[DEU=Gibt das Buchungsdatum fÅr den Beleg an.;
                             ENU=Specifies the posting date for the document.;
                             NLD=Hiermee wordt de boekingsdatum van het document opgegeven.;
                             NOR=Angir dokumentets bokfõringsdato.;
                             SVE=Anger dokumentets bokfîringsdatum.];
                  ApplicationArea=#Jobs;
                  SourceExpr=PostingDate }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=Rechnung erstellen fÅr Datum;
                             ENU=Create Invoice per;
                             NLD=Factuur maken per;
                             NOR=Opprette faktura per;
                             SVE=Skapa faktura per];
                  ToolTipML=[DEU=Wenn Sie die Option "Projektaufgabe" auswÑhlen, wird festgelegt, dass Sie eine Rechnung pro Projektaufgabe erstellen mîchten statt einer Rechnung pro Projekt, die standardmÑ·ig erstellt wird.;
                             ENU=Specifies, if you select the Job Task option, that you want to create one invoice per job task rather than the one invoice per job that is created by default.;
                             NLD=Als u de optie Projecttaak selecteert, wordt hiermee opgegeven dat u ≤≤n factuur per projecttaak wilt maken in plaats van de ene factuur per project die standaard wordt gemaakt.;
                             NOR=Hvis du velger alternativet Prosjektoppgaver, angir du at du vil opprette Çn faktura per prosjektoppgave i stedet for Çn faktura per prosjekt som opprettes som standard.;
                             SVE=Anger att du vill skapa en faktura per projektaktivitet i stÑllet fîr en faktura per projekt enligt standardinstÑllningen, om du vÑljer alternativet Projektaktivitet.];
                  OptionCaptionML=[DEU=Projekt,Projektaufgabe;
                                   ENU=Job,Job Task;
                                   NLD=Project,Projecttaak;
                                   NOR=Prosjekt,Prosjektaktivitet;
                                   SVE=Projekt,Projektaktivitet];
                  ApplicationArea=#Jobs;
                  SourceExpr=JobChoice }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      JobCreateInvoice@1001 : Codeunit 11072007;
      JobCalcBatches@1000 : Codeunit 11072017;
      PostingDate@1003 : Date;
      NoOfInvoices@1002 : Integer;
      InvoicePerTask@1004 : Boolean;
      JobChoice@1005 : 'Job,Job Task';
      OldJobNo@1006 : Code[20];
      OldJTNo@1007 : Code[20];
      Text000@1008 : TextConst '@@@=A;DEU=A;ENU=A;NLD=A;NOR=A;SVE=A';

    [Integration]
    LOCAL PROCEDURE OnAfterPostReport@1(NoOfInvoices@1000 : Integer);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterPreReport@2();
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeJobTaskOnAfterGetRecord@3(JobTask@1000 : Record 11072600;VAR IsHandled@1001 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforePostReport@4();
    BEGIN
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

