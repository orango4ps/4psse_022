OBJECT Codeunit 491 Memory Mapped File
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      MemoryMappedFile@1002 : DotNet "'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.MemoryMappedFiles.MemoryMappedFile";
      MemFileName@1001 : Text;
      NoNameSpecifiedErr@1003 : TextConst 'ENU=You need to specify a name for the memory mapped file.;NOR=Du m† gi den minnetilordnede filen et navn.';

    [TryFunction]
    PROCEDURE CreateMemoryMappedFileFromText@1(Text@1000 : Text;Name@1003 : Text);
    VAR
      MemoryMappedViewStream@1004 : DotNet "'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.MemoryMappedFiles.MemoryMappedViewStream";
      c@1002 : Char;
      i@1001 : Integer;
    BEGIN
      MemFileName := Name;
      MemoryMappedFile := MemoryMappedFile.CreateOrOpen(MemFileName,STRLEN(Text));
      MemoryMappedViewStream := MemoryMappedFile.CreateViewStream;
      FOR i := 1 TO STRLEN(Text) DO BEGIN
        c := Text[i];
        MemoryMappedViewStream.WriteByte(c);
      END;
      MemoryMappedViewStream.Flush;
      MemoryMappedViewStream.Dispose;
    END;

    [TryFunction]
    PROCEDURE CreateMemoryMappedFileFromTempBlob@3(VAR TempBlob@1000 : Record 99008535;Name@1004 : Text);
    BEGIN
      // clean up previous use
      IF NOT ISNULL(MemoryMappedFile) THEN
        IF Dispose THEN;
      IF NOT TempBlob.Blob.HASVALUE THEN
        EXIT;
      CreateMemoryMappedFileFromText(TempBlob.GetXMLAsText,Name);
    END;

    [TryFunction]
    PROCEDURE CreateMemoryMappedFileFromJobQueueEntry@2(VAR JobQueueEntry@1000 : Record 472);
    VAR
      TempBlob@1001 : Record 99008535;
    BEGIN
      TempBlob.Blob := JobQueueEntry.XML;
      CreateMemoryMappedFileFromTempBlob(TempBlob,FORMAT(JobQueueEntry.ID));
    END;

    [TryFunction]
    PROCEDURE OpenMemoryMappedFile@6(Name@1000 : Text);
    BEGIN
      IF Name = '' THEN
        ERROR(NoNameSpecifiedErr);
      MemFileName := Name;
      MemoryMappedFile := MemoryMappedFile.OpenExisting(MemFileName);
    END;

    [TryFunction]
    PROCEDURE ReadTextFromMemoryMappedFile@7(VAR Text@1001 : Text);
    VAR
      TempBlob@1002 : TEMPORARY Record 99008535;
      InStr@1003 : InStream;
      MemoryMappedViewStream@1000 : DotNet "'System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.MemoryMappedFiles.MemoryMappedViewStream";
    BEGIN
      IF MemFileName = '' THEN
        ERROR(NoNameSpecifiedErr);

      MemoryMappedViewStream := MemoryMappedFile.CreateViewStream;
      TempBlob.INIT;
      TempBlob.Blob.CREATEINSTREAM(InStr);
      MemoryMappedViewStream.CopyTo(InStr);
      InStr.READTEXT(Text);
      CLEAR(TempBlob.Blob);
      MemoryMappedViewStream.Dispose;
    END;

    PROCEDURE GetName@4() : Text;
    BEGIN
      EXIT(MemFileName);
    END;

    [TryFunction]
    PROCEDURE Dispose@5();
    BEGIN
      MemoryMappedFile.Dispose;
      MemFileName := '';
    END;

    BEGIN
    END.
  }
}

