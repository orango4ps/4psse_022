OBJECT Page 11012435 Document Props Basic WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Belegeigenschaften, Basis-WS;
               ENU=Document Props Basic WS;
               NLD=Documenteigensch. basis WS];
    SourceTable=Table11012746;
    PageType=List;
    OnAfterGetRecord=BEGIN
                       CreatedByFieldService := "Created by Field Service"; // DP00848.n
                       GetDptVersion;
                     END;

    OnNewRecord=BEGIN
                  "External Document" := TRUE; // DP00848.n
                  CreatedByFieldService := FALSE; // DP00848.n
                END;

  }
  CONTROLS
  {
    { 1100528100;0;Container;
                ContainerType=ContentArea }

    { 1100528101;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528102;2;Field  ;
                Name=No;
                SourceExpr="No." }

    { 1100528106;2;Field  ;
                Name=Description;
                SourceExpr=Description }

    { 1100528107;2;Field  ;
                Name=Subject;
                SourceExpr=Subject }

    { 1100528110;2;Field  ;
                Name=ExternalDocument;
                SourceExpr="External Document" }

    { 1100528111;2;Field  ;
                Name=File;
                SourceExpr=File;
                OnValidate=VAR
                             DocumentManagement@1100409000 : Codeunit 11012406;
                           BEGIN
                             DocumentManagement.GetUniqueFileName(File);
                           END;
                            }

    { 1100409000;2;Field  ;
                Name=CreationDate;
                SourceExpr="Creation Date" }

    { 1100525001;2;Field  ;
                Name=CreatedByFieldService;
                SourceExpr=CreatedByFieldService;
                OnValidate=BEGIN
                             "Created by Field Service" := CreatedByFieldService; // DP00848.n
                           END;
                            }

    { 1100525002;2;Field  ;
                Name=AvailableForFieldService;
                SourceExpr="Available for Field Service" }

    { 1100525000;2;Field  ;
                Name=FullFileName;
                SourceExpr=FullFileName }

    { 1100528400;2;Field  ;
                Name=FileName;
                SourceExpr=FileName }

    { 1100525006;2;Field  ;
                Name=DocumentType;
                SourceExpr="Document Type" }

    { 1100525005;2;Field  ;
                Name=DocumentCategory;
                SourceExpr="Document Category" }

    { 1100525004;2;Field  ;
                Name=DocumentNo;
                SourceExpr="Document No." }

    { 1100525003;2;Field  ;
                Name=Reference;
                SourceExpr=Reference }

    { 1100525007;2;Field  ;
                Name=SendToDispatch;
                SourceExpr="Send to Dispatch" }

    { 1100525008;2;Field  ;
                Name=DispatchAttachmentType;
                SourceExpr="Dispatch Attachment Type" }

    { 1100526000;2;Field  ;
                Name=DptMajorVersion;
                SourceExpr=DptMajor }

    { 1100526001;2;Field  ;
                Name=DptMinorVersion;
                SourceExpr=DptMinor }

  }
  CODE
  {
    VAR
      CreatedByFieldService@1100525000 : Boolean;
      DptMinor@1100526000 : Text;
      DptMajor@1100526001 : Text;

    LOCAL PROCEDURE GetDptVersion@1100526000();
    VAR
      DPTDocumentVersion@1100526000 : Record 11229944;
      StringFunctions@1100526001 : Codeunit 11012273;
      SplitArray@1100526002 : ARRAY [10] OF Text;
    BEGIN
      DptMajor := '0';
      DptMinor := '0';
      DPTDocumentVersion.SETRANGE("Source Type", "Document Portal Source Type");
      DPTDocumentVersion.SETRANGE("Source Code", "Document Portal Source No.");
      DPTDocumentVersion.SETRANGE("Document No.", "No.");
      IF NOT DPTDocumentVersion.FINDLAST THEN
        EXIT;

      StringFunctions.SplitString(DPTDocumentVersion.Version, '.', SplitArray);
      IF SplitArray[1] <> '' THEN
        DptMajor := SplitArray[1];

      IF SplitArray[2] <> '' THEN
        DptMinor := SplitArray[2];
    END;

    BEGIN
    END.
  }
}

