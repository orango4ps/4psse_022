OBJECT Codeunit 11012064 Means Price Calc. Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GLSetup@1100485007 : Record 98;
      Means@1100485002 : Record 11020245;
      TempSalesPrice@1100485009 : TEMPORARY Record 11020246;
      FoundSalesPrice@1100485010 : Boolean;
      TempPurchPrice@1100485008 : TEMPORARY Record 11020247;
      PricesInCurrency@1100485003 : Boolean;
      ExchRateDate@1100485004 : Date;
      Currency@1100485005 : Record 4;
      CurrencyFactor@1100485006 : Decimal;
      FoundPurchPrice@1100485000 : Boolean;
      Qty@1100485001 : Decimal;

    [External]
    PROCEDURE FindSalesPrice2@1100485004(CustNo@1100485008 : Code[20];CampaignNo@1100485005 : Code[20];MeansNo@1100485004 : Code[20];Quantity@1100485009 : Decimal;UOM@1100485003 : Code[10];CurrencyCode@1100485002 : Code[10];StartingDate@1100485001 : Date;ShowAll@1100485000 : Boolean) : Decimal;
    VAR
      CustomerRec@1100485006 : Record 18;
    BEGIN
      Qty := Quantity;

      SetCurrency('',1,0D);

      IF NOT Means.GET(MeansNo) THEN
        EXIT;

      IF CustNo <> '' THEN
        CustomerRec.GET(CustNo);
      FindSalesPrice(TempSalesPrice,CustNo,'',CustomerRec."Customer Price Group",CampaignNo,
        MeansNo,UOM,CurrencyCode,StartingDate,ShowAll);
      CalcBestSalesUnitPrice(TempSalesPrice);

      IF FoundSalesPrice THEN
        EXIT(TempSalesPrice."Unit Price")
      ELSE
        EXIT(0);
    END;

    PROCEDURE FindSalesPrice@16(VAR ToSalesPrice@1003 : Record 11020246;CustNo@1000 : Code[20];ContNo@1006 : Code[20];CustPriceGrCode@1001 : Code[10];CampaignNo@1007 : Code[20];MeansNo@1012 : Code[20];UOM@1010 : Code[10];CurrencyCode@1009 : Code[10];StartingDate@1008 : Date;ShowAll@1004 : Boolean);
    VAR
      FromSalesPrice@1002 : Record 11020246;
      TempTargetCampaignGr@1005 : TEMPORARY Record 7030;
    BEGIN
      WITH FromSalesPrice DO BEGIN
        SETRANGE("Means No.",MeansNo);
        SETFILTER("Ending Date",'%1|>=%2',0D,StartingDate);
        IF NOT ShowAll THEN BEGIN
          SETFILTER("Currency Code",'%1|%2',CurrencyCode,'');
          SETRANGE("Starting Date",0D,StartingDate);
        END;

        ToSalesPrice.RESET;
        ToSalesPrice.DELETEALL;

        SETRANGE("Sales Type","Sales Type"::"All Customers");
        SETRANGE("Sales Code");
        CopySalesPriceToSalesPrice(FromSalesPrice,ToSalesPrice);

        IF CustNo <> '' THEN BEGIN
          SETRANGE("Sales Type","Sales Type"::Customer);
          SETRANGE("Sales Code",CustNo);
          CopySalesPriceToSalesPrice(FromSalesPrice,ToSalesPrice);
        END;

        IF CustPriceGrCode <> '' THEN BEGIN
          SETRANGE("Sales Type","Sales Type"::"Customer Price Group");
          SETRANGE("Sales Code",CustPriceGrCode);
          CopySalesPriceToSalesPrice(FromSalesPrice,ToSalesPrice);
        END;

        IF NOT ((CustNo = '') AND (ContNo = '') AND (CampaignNo = '')) THEN BEGIN
          SETRANGE("Sales Type","Sales Type"::Campaign);
          IF ActivatedCampaignExists(TempTargetCampaignGr,CustNo,ContNo,CampaignNo) THEN
            REPEAT
              SETRANGE("Sales Code",TempTargetCampaignGr."Campaign No.");
              CopySalesPriceToSalesPrice(FromSalesPrice,ToSalesPrice);
            UNTIL TempTargetCampaignGr.NEXT = 0;
        END;
      END;
    END;

    LOCAL PROCEDURE CopySalesPriceToSalesPrice@13(VAR FromSalesPrice@1000 : Record 11020246;VAR ToSalesPrice@1001 : Record 11020246);
    BEGIN
      WITH ToSalesPrice DO BEGIN
        IF FromSalesPrice.FIND('-') THEN
          REPEAT
            IF FromSalesPrice."Unit Price" <> 0 THEN BEGIN
              ToSalesPrice := FromSalesPrice;
              INSERT;
            END;
          UNTIL FromSalesPrice.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE ActivatedCampaignExists@21(VAR ToCampaignTargetGr@1001 : Record 7030;CustNo@1000 : Code[20];ContNo@1002 : Code[20];CampaignNo@1004 : Code[20]) : Boolean;
    VAR
      FromCampaignTargetGr@1003 : Record 7030;
      Cont@1005 : Record 5050;
    BEGIN
      WITH FromCampaignTargetGr DO BEGIN
        ToCampaignTargetGr.RESET;
        ToCampaignTargetGr.DELETEALL;

        IF CampaignNo <> '' THEN BEGIN
          ToCampaignTargetGr."Campaign No." := CampaignNo;
          ToCampaignTargetGr.INSERT;
        END ELSE BEGIN
          SETRANGE(Type,Type::Customer);
          SETRANGE("No.",CustNo);
          IF FIND('-') THEN
            REPEAT
              ToCampaignTargetGr := FromCampaignTargetGr;
              ToCampaignTargetGr.INSERT;
            UNTIL NEXT = 0
          ELSE BEGIN
            IF Cont.GET(ContNo) THEN BEGIN
              SETRANGE(Type,Type::Contact);
              SETRANGE("No.",Cont."Company No.");
              IF FIND('-') THEN
                REPEAT
                  ToCampaignTargetGr := FromCampaignTargetGr;
                  ToCampaignTargetGr.INSERT;
                UNTIL NEXT = 0;
            END;
          END;
        END;
        EXIT(ToCampaignTargetGr.FIND('-'));
      END;
    END;

    LOCAL PROCEDURE CalcBestSalesUnitPrice@1100485005(VAR SalesPrice@1000 : Record 11020246);
    VAR
      BestSalesPrice@1002 : Record 11020246;
    BEGIN
      WITH SalesPrice DO BEGIN
        FoundSalesPrice := FIND('-');
        IF FoundSalesPrice THEN
          REPEAT
            IF "Minimum Quantity" <= Qty THEN BEGIN
              ConvertPriceLCYToFCY("Currency Code",TRUE,"Unit Price");

              CASE TRUE OF
                ((BestSalesPrice."Currency Code" = '') AND ("Currency Code" <> '')):
                  BestSalesPrice := SalesPrice;
                ((BestSalesPrice."Currency Code" = '') OR ("Currency Code" <> '')):
                  IF (BestSalesPrice."Unit Price" = 0) OR
                     (BestSalesPrice."Unit Price" > SalesPrice."Unit Price")
                  THEN
                    BestSalesPrice := SalesPrice;
              END;
            END;
          UNTIL NEXT = 0;
      END;

      // No price found in agreement
      IF BestSalesPrice."Unit Price" = 0 THEN BEGIN
        IF Means."Sales Price" <> 0 THEN BEGIN
          FoundSalesPrice := TRUE;
          ConvertPriceLCYToFCY('',TRUE,Means."Sales Price");

          CLEAR(BestSalesPrice);
          BestSalesPrice."Unit Price" := Means."Sales Price";
          BestSalesPrice."Allow Line Disc." := FALSE;
          BestSalesPrice."Allow Invoice Disc." := FALSE;
        END;
      END;

      SalesPrice := BestSalesPrice;
    END;

    [External]
    PROCEDURE FindPurchPrice2@1100485003(VendorNo@1100485006 : Code[20];MeansNo@1100485005 : Code[20];Quantity@1100485004 : Decimal;UOM@1100485003 : Code[10];CurrencyCode@1100485002 : Code[10];StartingDate@1100485001 : Date;ShowAll@1100485000 : Boolean) : Decimal;
    BEGIN
      SetCurrency('',1,0D);

      Qty := Quantity;

      IF NOT Means.GET(MeansNo) THEN
        EXIT;

      FindPurchPrice(TempPurchPrice,VendorNo,MeansNo,UOM,CurrencyCode,StartingDate,ShowAll);
      CalcBestDirectUnitCost(TempPurchPrice);

      IF FoundPurchPrice THEN
        EXIT(TempPurchPrice."Direct Unit Cost")
      ELSE
        EXIT(0);
    END;

    LOCAL PROCEDURE SetCurrency@1100485001(CurrencyCode2@1003 : Code[10];CurrencyFactor2@1001 : Decimal;ExchRateDate2@1002 : Date);
    BEGIN
      PricesInCurrency := CurrencyCode2 <> '';
      IF PricesInCurrency THEN BEGIN
        Currency.GET(CurrencyCode2);
        Currency.TESTFIELD("Unit-Amount Rounding Precision");
        CurrencyFactor :=  CurrencyFactor2;
        ExchRateDate := ExchRateDate2;
      END ELSE
        GLSetup.GET;
    END;

    [External]
    PROCEDURE FindPurchPrice@1100485000(VAR ToPurchPrice@1000 : Record 11020247;VendorNo@1008 : Code[20];MeansNo@1007 : Code[20];UOM@1005 : Code[10];CurrencyCode@1004 : Code[10];StartingDate@1003 : Date;ShowAll@1002 : Boolean);
    VAR
      FromPurchPrice@1001 : Record 11020247;
    BEGIN
      WITH FromPurchPrice DO BEGIN
        SETRANGE("Means No.",MeansNo);
        SETRANGE("Vendor No.",VendorNo);
        SETFILTER("Ending Date",'%1|>=%2',0D,StartingDate);
        IF NOT ShowAll THEN BEGIN
          SETRANGE("Starting Date",0D,StartingDate);
          SETFILTER("Currency Code",'%1|%2',CurrencyCode,'');
        END;

        ToPurchPrice.RESET;
        ToPurchPrice.DELETEALL;
        IF FromPurchPrice.FIND('-') THEN
          REPEAT
            IF FromPurchPrice."Direct Unit Cost" <> 0 THEN BEGIN
              ToPurchPrice := FromPurchPrice;
              ToPurchPrice.INSERT;
            END;
          UNTIL FromPurchPrice.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CalcBestDirectUnitCost@1(VAR PurchPrice@1000 : Record 11020247);
    VAR
      BestPurchPrice@1002 : Record 11020247;
    BEGIN
      WITH PurchPrice DO BEGIN
        FoundPurchPrice := PurchPrice.FIND('-');
        IF FoundPurchPrice THEN
          REPEAT
            IF "Minimum Quantity" <= Qty THEN BEGIN
              CASE TRUE OF
                ((BestPurchPrice."Currency Code" = '') AND ("Currency Code" <> '')):
                  BestPurchPrice := PurchPrice;
                ((BestPurchPrice."Currency Code" = '') OR ("Currency Code" <> '')):
                  IF (BestPurchPrice."Direct Unit Cost" = 0) OR
                     (BestPurchPrice."Direct Unit Cost" > PurchPrice."Direct Unit Cost")
                  THEN
                    BestPurchPrice := PurchPrice;
              END;
            END;
          UNTIL NEXT = 0;
      END;

      // No price found in agreement
      IF BestPurchPrice."Direct Unit Cost" = 0 THEN BEGIN
        BestPurchPrice."Direct Unit Cost" := Means.Costprice;
        IF BestPurchPrice."Direct Unit Cost" <> 0 THEN BEGIN
          FoundPurchPrice := TRUE;
          ConvertPriceLCYToFCY('',FALSE,BestPurchPrice."Direct Unit Cost");
        END;
      END;

      PurchPrice := BestPurchPrice;
    END;

    LOCAL PROCEDURE ConvertPriceLCYToFCY@6(CurrencyCode@1005 : Code[10];UseSalesExchange@1100528200 : Boolean;VAR UnitPrice@1001 : Decimal);
    VAR
      CurrExchRate@1000 : Record 330;
    BEGIN
      IF PricesInCurrency THEN BEGIN
        IF CurrencyCode = '' THEN
          UnitPrice :=
            CurrExchRate.ExchangeAmtLCYToFCY(
              0, '', ExchRateDate,Currency.Code,UnitPrice,CurrencyFactor,UseSalesExchange);
        UnitPrice := ROUND(UnitPrice,Currency."Unit-Amount Rounding Precision");
      END ELSE
        UnitPrice := ROUND(UnitPrice,GLSetup."Unit-Amount Rounding Precision");
    END;

    LOCAL PROCEDURE SetPurchCurrency@18(CurrencyCode2@1003 : Code[10];CurrencyFactor2@1001 : Decimal;ExchRateDate2@1002 : Date);
    BEGIN
      PricesInCurrency := CurrencyCode2 <> '';
      IF PricesInCurrency THEN BEGIN
        Currency.GET(CurrencyCode2);
        Currency.TESTFIELD("Unit-Amount Rounding Precision");
        CurrencyFactor :=  CurrencyFactor2;
        ExchRateDate := ExchRateDate2;
      END ELSE
        GLSetup.GET;
    END;

    BEGIN
    END.
  }
}

