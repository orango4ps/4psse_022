OBJECT Page 1871 Credit Limit Details
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Details;
               NOR=Detaljer;
               SVE=Information];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table18;
    PageType=CardPart;
    OnOpenPage=BEGIN
                 IF GETFILTER("Date Filter") = '' THEN
                   SETFILTER("Date Filter",'..%1',WORKDATE);
                 CALCFIELDS("Balance (LCY)","Shipped Not Invoiced (LCY)","Serv Shipped Not Invoiced(LCY)");
               END;

  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 11  ;1   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the involved entry or record, according to the specified number series.;
                           NOR=Angir nummeret p† den aktuelle oppf›ringen eller posten, i henhold til den angitte nummerserien.;
                           SVE=Anger numret f”r den ber”rda transaktionen eller posten, enligt den angivna nummerserien.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No.";
                Editable=FALSE }

    { 10  ;1   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's name.;
                           NOR=Angir kundens navn.;
                           SVE=Anger kundens namn.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                Editable=FALSE }

    { 2   ;1   ;Field     ;
                ToolTipML=[ENU=Specifies the payment amount that the customer owes for completed sales. This value is also known as the customer's balance.;
                           NOR=Angir betalingsbel›pet som kunden skylder for fullf›rte salg, i tillegg til salg som fortsatt p†g†r. Denne verdien er ogs† kjent som kundens saldo.;
                           SVE=Anger betalningsbeloppet som kunden „r skyldig f”r slutf”rda f”rs„ljningar. Det h„r v„rdet kallas ocks† kundens saldo.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Balance (LCY)";
                OnDrillDown=BEGIN
                              OpenCustomerLedgerEntries(FALSE);
                            END;
                             }

    { 9   ;1   ;Field     ;
                Name=OutstandingAmtLCY;
                CaptionML=[ENU=Outstanding Amt. (LCY);
                           NOR=Utest†ende blp. (NOK);
                           SVE=Utest†ende belopp (BVA)];
                ToolTipML=[ENU=Specifies the amount on sales to the customer that remains to be shipped. The amount is calculated as Amount x Outstanding Quantity / Quantity.;
                           NOR=Angir bel›pet for salg til kunden som fortsatt ikke er levert. Bel›pet beregnes som Bel›p x Restantall / Antall.;
                           SVE=Anger beloppet p† f”rs„ljningar till kunden som „nnu inte har utlevererats. Beloppet ber„knas som Belopp * Restnoterat antal/Antal.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=OrderAmountTotalLCY;
                AutoFormatType=1;
                Editable=FALSE }

    { 8   ;1   ;Field     ;
                CaptionML=[ENU=Shipped/Ret. Rcd. Not Invd. (LCY);
                           NOR=Levert/ret. mott. ikke fakt. (NOK);
                           SVE=Levrd/ret. inlevrd ej faktrd (BVA)];
                ToolTipML=[ENU=Specifies the amount on sales returns from the customer that are not yet refunded;
                           NOR=Angir bel›pet p† ordrereturer fra kunden du enn† ikke har refundert;
                           SVE=Anger beloppet f”r f”rs„ljningsreturer fr†n kunden som „nnu inte har †terbetalats];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShippedRetRcdNotIndLCY;
                Editable=FALSE }

    { 7   ;1   ;Field     ;
                CaptionML=[ENU=Current Amount (LCY);
                           NOR=N†v‘rende bel›p (NOK);
                           SVE=Aktuellt belopp (BVA)];
                ToolTipML=[ENU=Specifies the total amount the whole sales document.;
                           NOR=Angir det totale bel›pet for hele salgsdokumentet.;
                           SVE=Anger hela f”rs„ljningsdokumentets totalbelopp.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=OrderAmountThisOrderLCY;
                AutoFormatType=1;
                Editable=FALSE }

    { 6   ;1   ;Field     ;
                Name=TotalAmountLCY;
                CaptionML=[ENU=Total Amount (LCY);
                           NOR=Bel›p i alt (NOK);
                           SVE=Totalt belopp (BVA)];
                ToolTipML=[ENU=Specifies the sum of the amounts in all of the preceding fields in the window.;
                           NOR=Angir summen av bel›pene i alle de foreg†ende feltene i vinduet.;
                           SVE=Anger summan av beloppen i alla f”reg†ende f„lt i f”nstret.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CustCreditAmountLCY;
                AutoFormatType=1;
                Editable=FALSE }

    { 5   ;1   ;Field     ;
                CaptionML=[ENU=Credit Limit (LCY);
                           SVE=Kreditlimit (BVA)];
                ToolTipML=[ENU=Specifies the maximum amount you allow the customer to exceed the payment balance before warnings are issued.;
                           NOR=Angir maksimalbel›pet du tillater kunden † overskride betalingssaldoen med, f›r det utstedes advarsler.;
                           SVE=Anger det maximala beloppet som kunden kan ”verskrida betalningsbalansen innan varningar skickas ut.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetActualCreditLimit(TODAY);
                Editable=FALSE }

    { 3   ;1   ;Field     ;
                Name=OverdueBalance;
                ToolTipML=[ENU=Specifies payments from the customer that are overdue per today's date.;
                           NOR=Angir betalinger fra kunden som er forfalt per dagens dato.;
                           SVE=Anger betalningar fr†n kunden som f”rfallit per dagens datum.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CalcOverdueBalance;
                CaptionClass=FORMAT(STRSUBSTNO(OverdueAmountsTxt,FORMAT(GETRANGEMAX("Date Filter"))));
                Editable=FALSE;
                OnDrillDown=VAR
                              DtldCustLedgEntry@1001 : Record 379;
                              CustLedgEntry@1000 : Record 21;
                            BEGIN
                              DtldCustLedgEntry.SETFILTER("Customer No.","No.");
                              COPYFILTER("Global Dimension 1 Filter",DtldCustLedgEntry."Initial Entry Global Dim. 1");
                              COPYFILTER("Global Dimension 2 Filter",DtldCustLedgEntry."Initial Entry Global Dim. 2");
                              COPYFILTER("Currency Filter",DtldCustLedgEntry."Currency Code");
                              CustLedgEntry.DrillDownOnOverdueEntries(DtldCustLedgEntry);
                            END;
                             }

    { 4   ;1   ;Field     ;
                CaptionML=[ENU=Invoiced Prepayment Amount (LCY);
                           NOR=Fakturert forskuddsbel›p (NOK);
                           SVE=Fakturerat f”rskottsbetalningsbelopp (BVA)];
                ToolTipML=[ENU=Specifies your sales income from the customer based on invoiced prepayments.;
                           NOR=Angir salgsinntektene fra kunden basert p† fakturerte forskudd.;
                           SVE=Anger f”rs„ljningsint„kter fr†n kunden baserat p† fakturerade f”rskottsbetalningar.];
                ApplicationArea=#Prepayments;
                SourceExpr=GetInvoicedPrepmtAmountLCY;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      OrderAmountTotalLCY@1000 : Decimal;
      ShippedRetRcdNotIndLCY@1001 : Decimal;
      OrderAmountThisOrderLCY@1002 : Decimal;
      CustCreditAmountLCY@1003 : Decimal;
      OverdueAmountsTxt@1005 : TextConst '@@@="%1=Date on which the amounts arebeing calculated.";ENU=Overdue Amounts (LCY) as of %1;NOR=Forfalt saldo (NOK) per %1;SVE=F”rfallna belopp (BVA) per %1';

    [External]
    PROCEDURE PopulateDataOnNotification@25(VAR CreditLimitNotification@1000 : Notification);
    BEGIN
      CreditLimitNotification.SETDATA(FIELDNAME("No."),FORMAT("No."));
      CreditLimitNotification.SETDATA('OrderAmountTotalLCY',FORMAT(OrderAmountTotalLCY));
      CreditLimitNotification.SETDATA('ShippedRetRcdNotIndLCY',FORMAT(ShippedRetRcdNotIndLCY));
      CreditLimitNotification.SETDATA('OrderAmountThisOrderLCY',FORMAT(OrderAmountThisOrderLCY));
      CreditLimitNotification.SETDATA('CustCreditAmountLCY',FORMAT(CustCreditAmountLCY));
    END;

    [External]
    PROCEDURE InitializeFromNotificationVar@7(CreditLimitNotification@1000 : Notification);
    VAR
      Customer@1001 : Record 18;
    BEGIN
      GET(CreditLimitNotification.GETDATA(Customer.FIELDNAME("No.")));
      SETRANGE("No.","No.");

      IF GETFILTER("Date Filter") = '' THEN
        SETFILTER("Date Filter",'..%1',WORKDATE);
      CALCFIELDS("Balance (LCY)","Shipped Not Invoiced (LCY)","Serv Shipped Not Invoiced(LCY)");

      EVALUATE(OrderAmountTotalLCY,CreditLimitNotification.GETDATA('OrderAmountTotalLCY'));
      EVALUATE(ShippedRetRcdNotIndLCY,CreditLimitNotification.GETDATA('ShippedRetRcdNotIndLCY'));
      EVALUATE(OrderAmountThisOrderLCY,CreditLimitNotification.GETDATA('OrderAmountThisOrderLCY'));
      EVALUATE(CustCreditAmountLCY,CreditLimitNotification.GETDATA('CustCreditAmountLCY'));
    END;

    [External]
    PROCEDURE SetCustomerNumber@16(Value@1000 : Code[20]);
    BEGIN
      GET(Value);
    END;

    [External]
    PROCEDURE SetOrderAmountTotalLCY@1(Value@1000 : Decimal);
    BEGIN
      OrderAmountTotalLCY := Value;
    END;

    [External]
    PROCEDURE SetShippedRetRcdNotIndLCY@2(Value@1000 : Decimal);
    BEGIN
      ShippedRetRcdNotIndLCY := Value;
    END;

    [External]
    PROCEDURE SetOrderAmountThisOrderLCY@3(Value@1000 : Decimal);
    BEGIN
      OrderAmountThisOrderLCY := Value;
    END;

    [External]
    PROCEDURE SetCustCreditAmountLCY@4(Value@1000 : Decimal);
    BEGIN
      CustCreditAmountLCY := Value;
    END;

    BEGIN
    END.
  }
}

