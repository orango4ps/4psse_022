OBJECT Page 11020345 Document Reference Points
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Dokument-Logmomenten;
               ENU=Document Reference Points;
               NLD=Document-logmomenten;
               NOR=Dokumentreferanseepunkter;
               SVE=Dokumentreferenspunkter];
    SourceTable=Table11020296;
    DelayedInsert=Yes;
    DataCaptionFields=Document No.;
    PageType=List;
    OnInit=BEGIN
             TypeVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 IF ServiceOrderNo <> '' THEN
                   MarkLinesForServiceOrder();
                 IF ServiceCallNo <> '' THEN
                   MarkLinesForServiceCall();
                 IF ServiceObjectNo <> '' THEN
                   MarkLinesForServiceObject();
               END;

    OnClosePage=VAR
                  ServiceOrder@1100409000 : Record 11012823;
                  ServiceCall@1100409001 : Record 11012822;
                BEGIN
                  //mg, 03-12-12: C003795
                  IF GETFILTER(Type) <> '' THEN BEGIN
                    IF GETRANGEMAX(Type) = Type::ServOrder THEN
                      IF ServiceOrderNo = '' THEN
                        ServiceOrderNo := GETRANGEMAX("Document No.");
                    IF GETRANGEMAX(Type) = Type::ServCall THEN
                      IF ServiceCallNo = '' THEN
                        ServiceCallNo := GETRANGEMAX("Document No.");
                  END;
                  IF RecordManuallyAdded OR RecordDeleted THEN BEGIN
                    IF ServiceOrderNo <> '' THEN
                      IF ServiceOrder.GET(ServiceOrderNo) THEN
                        ServiceOrder.MODIFY(TRUE); // update first deadline
                    IF ServiceCallNo <> '' THEN
                      IF ServiceCall.GET(ServiceCallNo) THEN
                        ServiceCall.MODIFY(TRUE); // update first deadline
                  END;
                END;

    OnAfterGetRecord=BEGIN
                       DocumentNoOnFormat;
                     END;

    OnNewRecord=BEGIN
                  Manual := TRUE;  //db, 23-09-08
                  //"OLD Date-Time (registrated)" := DatetimeMgt.Datetime(TODAY,TIME);
                  "Date-Time (registrated)" := CREATEDATETIME(TODAY,TIME);
                  IF ServiceOrderNo <> '' THEN BEGIN
                    Type := Type::ServOrder;
                    "Document No." := ServiceOrderNo;
                    MARK(TRUE);
                  END;
                  IF ServiceCallNo <> '' THEN BEGIN
                    Type := Type::ServCall;
                    "Document No." := ServiceCallNo;
                    MARK(TRUE);
                  END;
                END;

    OnInsertRecord=BEGIN
                     IF Manual THEN
                       RecordManuallyAdded := TRUE;
                   END;

    OnDeleteRecord=BEGIN
                     CheckIfServOrderFinished;  //db, 03-06-13: C007907
                     RecordDeleted := TRUE;
                   END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                SourceExpr=Type;
                Visible=TypeVisible;
                Editable=FALSE }

    { 1100485003;2;Field  ;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 1100485005;2;Field  ;
                SourceExpr="Date-Time (registrated)" }

    { 1100485022;2;Field  ;
                SourceExpr="Date-Time (modified)" }

    { 1100485024;2;Field  ;
                SourceExpr="Date Modified";
                OnValidate=BEGIN
                             DateModifiedOnAfterValidate;
                           END;
                            }

    { 1100485026;2;Field  ;
                SourceExpr="Time Modified";
                OnValidate=BEGIN
                             TimeModifiedOnAfterValidate;
                           END;
                            }

    { 1100485007;2;Field  ;
                SourceExpr="Reference Point";
                OnValidate=BEGIN
                             ReferencePointOnAfterValidate;
                           END;
                            }

    { 1100485009;2;Field  ;
                SourceExpr="Reference Point Description" }

    { 1100485011;2;Field  ;
                SourceExpr=Actual }

    { 1100485013;2;Field  ;
                SourceExpr="Modified by Employee";
                Visible=FALSE }

    { 1100485015;2;Field  ;
                SourceExpr="Full Name";
                Visible=FALSE }

    { 1100485017;2;Field  ;
                SourceExpr="Modified by";
                Visible=FALSE }

    { 1100485028;2;Field  ;
                SourceExpr=Manual;
                Visible=FALSE }

    { 1100528100;2;Field  ;
                SourceExpr="Modified by Subcont.Port.Vend.";
                Visible=FALSE }

    { 1100528102;2;Field  ;
                SourceExpr="Modified by Subcont.Port. User";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      ServiceOrderNo@1100528600 : Code[20];
      ServiceCallNo@1100528601 : Code[20];
      ServiceObjectNo@1100528300 : Code[20];
      "Document No.Emphasize"@19037394 : Boolean INDATASET;
      TypeVisible@19063733 : Boolean INDATASET;
      RecordManuallyAdded@1100525000 : Boolean;
      RecordDeleted@1100528602 : Boolean;

    PROCEDURE CheckMail@1100526200();
    VAR
      lvRefPointRec@1100526200 : Record 11020271;
    BEGIN
      //db, 21-03-11
      lvRefPointRec.GET("Reference Point");
      SendMail(Type, "Document No.", lvRefPointRec."No.");
    END;

    PROCEDURE SetServiceOrderNo@1100528600(IServiceOrderNo@1100528600 : Code[20]);
    BEGIN
      ServiceOrderNo := IServiceOrderNo;
    END;

    PROCEDURE MarkLinesForServiceOrder@1100528601();
    VAR
      DocumentReferencePoint@1100528601 : Record 11020296;
      ServiceOrder@1100528600 : Record 11012823;
    BEGIN
      IF ServiceOrder.GET(ServiceOrderNo) THEN BEGIN
        RESET;
        IF (ServiceOrder."Call No." <> '') AND (ServiceOrder."Base Service Order No." = ServiceOrder."No.") THEN BEGIN
          DocumentReferencePoint.SETRANGE(Type, DocumentReferencePoint.Type::ServCall);
          DocumentReferencePoint.SETRANGE("Document No.", ServiceOrder."Call No.");
          IF DocumentReferencePoint.FINDSET THEN BEGIN
            REPEAT
              Rec := DocumentReferencePoint;
              MARK(TRUE);
            UNTIL DocumentReferencePoint.NEXT = 0;
            TypeVisible := (TRUE);
          END;
        END;

        ServiceOrder.RESET;
        ServiceOrder.SETCURRENTKEY("Base Service Order No.");
        IF ServiceOrder."Base Service Order No." <> ServiceOrder."No." THEN
          ServiceOrder.SETRANGE("No.", ServiceOrderNo)
        ELSE
          ServiceOrder.SETRANGE("Base Service Order No.", ServiceOrderNo);

        IF ServiceOrder.FINDSET THEN
          REPEAT
            DocumentReferencePoint.SETRANGE(Type, DocumentReferencePoint.Type::ServOrder);
            DocumentReferencePoint.SETRANGE("Document No.", ServiceOrder."No.");
            IF DocumentReferencePoint.FINDSET THEN
              REPEAT
                Rec := DocumentReferencePoint;
                MARK(TRUE);
              UNTIL DocumentReferencePoint.NEXT = 0;
          UNTIL ServiceOrder.NEXT = 0;
      END;

      MARKEDONLY(TRUE);
      SETRANGE(Actual, TRUE);
      IF FINDLAST THEN; //db, 15-09-14: C014484
      SETRANGE(Actual);
    END;

    PROCEDURE SetServiceCallNo@1100528603(IServiceCallNo@1100528600 : Code[20]);
    BEGIN
      ServiceCallNo := IServiceCallNo;
    END;

    PROCEDURE MarkLinesForServiceCall@1100528604();
    VAR
      DocumentReferencePoint@1100528601 : Record 11020296;
      ServiceOrder@1100528600 : Record 11012823;
      ServiceCall@1100528602 : Record 11012822;
    BEGIN
      IF ServiceCall.GET(ServiceCallNo) THEN BEGIN
        RESET;
        DocumentReferencePoint.SETRANGE(Type, DocumentReferencePoint.Type::ServCall);
        DocumentReferencePoint.SETRANGE("Document No.", ServiceCallNo);
        IF DocumentReferencePoint.FINDSET THEN BEGIN
          REPEAT
            Rec := DocumentReferencePoint;
            MARK(TRUE);
          UNTIL DocumentReferencePoint.NEXT = 0;
          TypeVisible := (TRUE);
        END;

        ServiceOrder.RESET;
        ServiceOrder.SETCURRENTKEY("Call No.");
        ServiceOrder.SETRANGE("Call No.", ServiceCallNo);

        IF ServiceOrder.FINDSET THEN
          REPEAT
            DocumentReferencePoint.SETRANGE(Type, DocumentReferencePoint.Type::ServOrder);
            DocumentReferencePoint.SETRANGE("Document No.", ServiceOrder."No.");
            IF DocumentReferencePoint.FINDSET THEN
              REPEAT
                Rec := DocumentReferencePoint;
                MARK(TRUE);
              UNTIL DocumentReferencePoint.NEXT = 0;
          UNTIL ServiceOrder.NEXT = 0;
      END;

      MARKEDONLY(TRUE);
      SETRANGE(Type, Type::ServCall);
      SETRANGE(Actual, TRUE);
      IF FINDLAST THEN; //db, 15-09-14: C014484
      SETRANGE(Type);
      SETRANGE(Actual);
    END;

    PROCEDURE SetServiceObjectNo@1100528301(IServiceObjectNo@1100528600 : Code[20]);
    BEGIN
      ServiceObjectNo := IServiceObjectNo;
    END;

    PROCEDURE MarkLinesForServiceObject@1100528300();
    VAR
      DocumentReferencePoint@1100528601 : Record 11020296;
      ServiceObject@1100528300 : Record 11071691;
    BEGIN
      IF ServiceObject.GET(ServiceObjectNo) THEN BEGIN
        RESET;
        DocumentReferencePoint.SETRANGE(Type, DocumentReferencePoint.Type::ServObject);
        DocumentReferencePoint.SETRANGE("Document No.", ServiceObjectNo);
        IF DocumentReferencePoint.FINDSET THEN BEGIN
          REPEAT
            Rec := DocumentReferencePoint;
            MARK(TRUE);
          UNTIL DocumentReferencePoint.NEXT = 0;
          TypeVisible := (TRUE);
        END;
      END;

      MARKEDONLY(TRUE);
      SETRANGE(Type, Type::ServObject);
      SETRANGE(Actual, TRUE);
      IF FINDLAST THEN; //db, 15-09-14: C014484
      SETRANGE(Type);
      SETRANGE(Actual);
    END;

    LOCAL PROCEDURE DateModifiedOnAfterValidate@19064042();
    BEGIN
      //db, 07-09-09
      CurrPage.SAVERECORD;
      CheckStatusServOrder;  //db, 05-01-10: M17272
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE TimeModifiedOnAfterValidate@19062924();
    BEGIN
      //db, 07-09-09
      CurrPage.SAVERECORD;
      CheckStatusServOrder;  //db, 05-01-10: M17272
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ReferencePointOnAfterValidate@19049355();
    VAR
      INSBOUMaintInstruction@1100529900 : Record 11072350;
      INSBOUMaintStatusMgt@1100528800 : Codeunit 11072102;
      FPSLicenseManagement@1100528500 : Codeunit 11229289;
    BEGIN
      //db, 07-09-09
      CurrPage.SAVERECORD;
      CheckStatusServOrder;  //db, 05-01-10: M17272
      CurrPage.UPDATE;
      CheckMail;  //db, 21-03-11
      IF FPSLicenseManagement.LicenseAndReadPermissionForTable(INSBOUMaintInstruction) THEN
        INSBOUMaintStatusMgt.AddMaintStatusToMessageQueue("Document No.", 3) ;
    END;

    LOCAL PROCEDURE DocumentNoOnFormat@19001080();
    VAR
      ServiceOrder@1100528600 : Record 11012823;
    BEGIN
      IF (ServiceOrderNo + ServiceCallNo <> '') AND (Type = Type::ServOrder) THEN BEGIN
        ServiceOrder.GET("Document No.");
      //  IF ServiceOrder."Base Service Order" THEN
        IF ("Document No." = ServiceOrderNo) OR ("Document No." = ServiceCallNo) THEN
          "Document No.Emphasize" := TRUE;
      //  ELSE
        IF ServiceOrder."No." <> ServiceOrder."Base Service Order No." THEN;
      END;
    END;

    BEGIN
    END.
  }
}

