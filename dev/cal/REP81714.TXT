OBJECT Report 81714 AssNo503 part 1 get data
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE,AssNo503;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF (oldProjectType = '') THEN
                    ERROR('missing Project Type in selection');
                  IF (interimGLAcc = '') THEN
                    ERROR('missing interim Account in selection');

                  IF excelOrGLLines = excelOrGLLines::Excel THEN
                    CreateHeader;
                END;

  }
  DATASET
  {
    { 1000000000;;DataItem;                  ;
               DataItemTable=Table11072003;
               DataItemTableView=SORTING(No.)
                                 WHERE(Project Status=FILTER(..Administrative Finished));
               OnPreDataItem=BEGIN
                               Job.SETRANGE("Project Type",oldProjectType);
                             END;

               OnPostDataItem=BEGIN
                                IF excelOrGLLines = excelOrGLLines::Excel THEN BEGIN
                                  ExcelBuf.CreateBook('','from interim');
                                  ExcelBuf.WriteSheet('Sheet1', COMPANYNAME, USERID);
                                  ExcelBuf.CloseBook;
                                  ExcelBuf.OpenExcel;
                                //  ExcelBuf.GiveUserControl;

                                  ExcelBuf2.CreateBook('','to interim');
                                  ExcelBuf2.WriteSheet('Sheet2', COMPANYNAME, USERID);
                                  ExcelBuf2.CloseBook;
                                  ExcelBuf2.OpenExcel;
                                //  ExcelBuf2.GiveUserControl;
                                END;
                              END;

               ReqFilterFields=No. }

    { 1000000001;1;DataItem;                 ;
               DataItemTable=Table11072005;
               DataItemTableView=SORTING(Job No.,Posting Date);
               OnPreDataItem=BEGIN
                               TempControlProjectCost.RESET;
                               TempControlProjectCost.DELETEALL;
                             END;

               OnAfterGetRecord=VAR
                                  DimVal@1000000000 : Record 349;
                                BEGIN
                                  IF NOT DimVal.GET('KOSTNADSOBJEKT',"Job Ledger Entry"."Global Dimension 2 Code") THEN
                                    CurrReport.SKIP;

                                  IF NOT TempControlProjectCost.GET("Job No.",DimVal."Cost Type") THEN BEGIN
                                    TempControlProjectCost.INIT;
                                    TempControlProjectCost."Project No." := "Job No.";
                                    TempControlProjectCost."Cost Type"   := DimVal."Cost Type";
                                  //  TempControlProjectCost."Cost Object" := "Global Dimension 2 Code";
                                    TempControlProjectCost."Main Project No." := "Global Dimension 2 Code";
                                    TempControlProjectCost.INSERT(FALSE);
                                  END;
                                  TempControlProjectCost."Actual Costs" += "Total Cost (LCY)" + "Total Price (LCY)";
                                  TempControlProjectCost.MODIFY;
                                END;

               OnPostDataItem=VAR
                                sumAmt@1000000000 : Decimal;
                              BEGIN
                                //TempControlProjectCost.SETFILTER("Project No.",'<>%1','');
                                sumAmt := 0;
                                IF TempControlProjectCost.FINDSET THEN
                                REPEAT
                                  IF TempControlProjectCost."Actual Costs" <> 0 THEN
                                    WriteLine;
                                  sumAmt -= TempControlProjectCost."Actual Costs";
                                UNTIL TempControlProjectCost.NEXT=0;

                                IF excelOrGLLines = excelOrGLLines::Excel THEN
                                  IF sumAmt <> 0 THEN BEGIN
                                    RowNo +=1;
                                    EnterCell(RowNo,3,interimGLAcc,FALSE,ExcelBuf."Cell Type"::Text,'');  //G/L Account
                                    EnterCell(RowNo,4,FORMAT(sumAmt),FALSE,ExcelBuf."Cell Type"::Number,'#,##0.00');
                                    EnterCell2(RowNo,3,interimGLAcc,FALSE,ExcelBuf."Cell Type"::Text,'');  //G/L Account
                                    EnterCell2(RowNo,4,FORMAT(-sumAmt),FALSE,ExcelBuf."Cell Type"::Number,'#,##0.00');
                                    sumAmt := 0;
                                  END;
                              END;

               DataItemLink=Job No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   useJnl := excelOrGLLines = excelOrGLLines::GLLines;
                 END;

    }
    CONTROLS
    {
      { 1000000000;;Container;
                  Name=Options;
                  ContainerType=ContentArea }

      { 1100285100;1;Field  ;
                  CaptionML=ENU=Send to Excel or Journal;
                  SourceExpr=excelOrGLLines;
                  OnValidate=BEGIN
                               useJnl := excelOrGLLines = excelOrGLLines::GLLines;
                             END;
                              }

      { 1000000001;1;Field  ;
                  CaptionML=[ENU=Interim Account;
                             NOR=Interimskonto;
                             SVE=Interimskonto];
                  SourceExpr=interimGLAcc;
                  TableRelation="G/L Account" }

      { 1000000002;1;Field  ;
                  CaptionML=ENU=Old Project Type;
                  SourceExpr=oldProjectType;
                  TableRelation="Project Type" }

      { 1100285105;1;Group  ;
                  CaptionML=ENU=To Journal;
                  Visible=useJnl;
                  Editable=useJnl;
                  GroupType=Group }

      { 1100285107;2;Field  ;
                  CaptionML=ENU=New Project Type;
                  SourceExpr=newProjectType;
                  TableRelation="Project Type" }

      { 1100285104;2;Field  ;
                  CaptionML=[ENU=Posting date;
                             SVE=Bokf”ringsdatum];
                  SourceExpr=postingDate;
                  Editable=useJnl }

      { 1100285103;2;Field  ;
                  CaptionML=[ENU=Journal template;
                             SVE=Journalmall];
                  SourceExpr=gJnlTemplate;
                  TableRelation="Gen. Journal Template";
                  Editable=useJnl }

      { 1100285101;2;Field  ;
                  CaptionML=ENU=Journal batch to interim;
                  SourceExpr=gJnlBatchTo;
                  TableRelation="Gen. Journal Batch".Name;
                  Editable=useJnl;
                  OnLookup=VAR
                             GenJournalBatch@1100285100 : Record 232;
                           BEGIN
                             //"Gen. Journal Batch".Name WHERE (Journal Template Name=FILTER(gJnlTemplate))
                             IF gJnlTemplate <> '' THEN
                               GenJournalBatch.SETRANGE("Journal Template Name",gJnlTemplate);
                             IF PAGE.RUNMODAL(0,GenJournalBatch) = ACTION::LookupOK THEN BEGIN
                               gJnlBatchTo := GenJournalBatch.Name;
                               gJnlTemplate := GenJournalBatch."Journal Template Name";
                             END;
                           END;
                            }

      { 1100285102;2;Field  ;
                  CaptionML=ENU=Journal batch from interim;
                  SourceExpr=gJnlBatchFrom;
                  TableRelation="Gen. Journal Batch".Name;
                  Editable=useJnl;
                  OnLookup=VAR
                             GenJournalBatch@1100285100 : Record 232;
                           BEGIN
                             //"Gen. Journal Batch".Name WHERE (Journal Template Name=FILTER(gJnlTemplate))
                             IF gJnlTemplate <> '' THEN
                               GenJournalBatch.SETRANGE("Journal Template Name",gJnlTemplate);
                             IF PAGE.RUNMODAL(0,GenJournalBatch) = ACTION::LookupOK THEN BEGIN
                               gJnlBatchFrom := GenJournalBatch.Name;
                               gJnlTemplate := GenJournalBatch."Journal Template Name";
                             END;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ExcelBuf@1000000001 : TEMPORARY Record 370;
      RowNo@1000000000 : Integer;
      TempControlProjectCost@1000000002 : TEMPORARY Record 11012046;
      ExcelBuf2@1000000003 : TEMPORARY Record 370;
      interimGLAcc@1000000004 : Code[20];
      oldProjectType@1000000006 : Code[20];
      newProjectType@1100285108 : Code[20];
      excelOrGLLines@1100285100 : 'Excel,GLLines';
      gJnlTemplate@1100285102 : Code[10];
      gJnlBatchTo@1100285101 : Code[10];
      gJnlBatchFrom@1100285105 : Code[10];
      useJnl@1100285103 : Boolean INDATASET;
      CurrLineNoTo@1100285104 : Integer;
      CurrLineNoFrom@1100285106 : Integer;
      postingDate@1100285107 : Date;

    PROCEDURE WriteLine@1100285503();
    VAR
      DimVal@1000000000 : Record 349;
    BEGIN

      RowNo +=1;
      IF excelOrGLLines = excelOrGLLines::Excel THEN
        WITH TempControlProjectCost DO BEGIN
          IF NOT DimVal.GET('KOSTNADSOBJEKT',"Main Project No.") THEN;

          EnterCell(RowNo,1,"Project No.",FALSE,ExcelBuf."Cell Type"::Text,'');
          EnterCell(RowNo,2,"Main Project No.",FALSE,ExcelBuf."Cell Type"::Text,'');
          EnterCell(RowNo,3,'',FALSE,ExcelBuf."Cell Type"::Text,'');  //G/L Account
          EnterCell(RowNo,4,FORMAT("Actual Costs"),FALSE,ExcelBuf."Cell Type"::Number,'#,##0.00');
          EnterCell(RowNo,5,'Omkontering WIP '+"Project No.",FALSE,ExcelBuf."Cell Type"::Text,'');
          EnterCell(RowNo,6,FORMAT(DimVal."Cost Type"),FALSE,ExcelBuf."Cell Type"::Text,'');  //G/L Account

          EnterCell2(RowNo,1,"Project No.",FALSE,ExcelBuf."Cell Type"::Text,'');
          EnterCell2(RowNo,2,"Main Project No.",FALSE,ExcelBuf."Cell Type"::Text,'');
          EnterCell2(RowNo,3,'',FALSE,ExcelBuf."Cell Type"::Text,'');  //G/L Account
          EnterCell2(RowNo,4,FORMAT(-"Actual Costs"),FALSE,ExcelBuf."Cell Type"::Number,'#,##0.00');
          EnterCell2(RowNo,5,'Omkontering WIP '+"Project No.",FALSE,ExcelBuf."Cell Type"::Text,'');
          EnterCell2(RowNo,6,FORMAT(DimVal."Cost Type"),FALSE,ExcelBuf."Cell Type"::Text,'');  //G/L Account
        END;

      IF excelOrGLLines = excelOrGLLines::GLLines THEN
      WITH TempControlProjectCost DO
      BEGIN
        createGLlinesTo( -"Actual Costs",interimGLAcc,'WIP-'+FORMAT(postingDate,0,'<Year4>-<Month,2>'),'Omkontering WIP '+"Project No.","Project No.",oldProjectType,"Main Project No.");
        createGLlinesFrom("Actual Costs",interimGLAcc,'WIP-REV-'+FORMAT(postingDate,0,'<Year4>-<Month,2>'),'Omkontering WIP '+"Project No.","Project No.",newProjectType,"Main Project No.");
      END;
    END;

    PROCEDURE CreateHeader@1100285502();
    BEGIN
      ExcelBuf.RESET;
      ExcelBuf.DELETEALL;
      RowNo := 1;

      WITH TempControlProjectCost DO BEGIN
        EnterCell(RowNo,1,'Project',TRUE,ExcelBuf."Cell Type"::Text,'');
        EnterCell(RowNo,2,'Cost Object',TRUE,ExcelBuf."Cell Type"::Text,'');
        EnterCell(RowNo,3,'G/L Account',TRUE,ExcelBuf."Cell Type"::Text,'');
        EnterCell(RowNo,4,'Amount',TRUE,ExcelBuf."Cell Type"::Text,'');
      END;

      ExcelBuf2.RESET;
      ExcelBuf2.DELETEALL;
      WITH TempControlProjectCost DO BEGIN
        EnterCell2(RowNo,1,'Project',TRUE,ExcelBuf."Cell Type"::Text,'');
        EnterCell2(RowNo,2,'Cost Object',TRUE,ExcelBuf."Cell Type"::Text,'');
        EnterCell2(RowNo,3,'G/L Account',TRUE,ExcelBuf."Cell Type"::Text,'');
        EnterCell2(RowNo,4,'Amount',TRUE,ExcelBuf."Cell Type"::Text,'');
      END;
    END;

    LOCAL PROCEDURE EnterCell@3(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;CellType@1100525000 : Integer;NumberFormat@1100525001 : Text[10]);
    BEGIN
      ExcelBuf.INIT;
      ExcelBuf.VALIDATE("Row No.",RowNo);
      ExcelBuf.VALIDATE("Column No.",ColumnNo);
      ExcelBuf."Cell Value as Text" := CellValue;
      ExcelBuf.Formula := '';
      ExcelBuf.Bold := Bold;
      ExcelBuf.NumberFormat := NumberFormat;
      ExcelBuf."Cell Type" := CellType;
      ExcelBuf.INSERT;
    END;

    LOCAL PROCEDURE EnterCell2@1000000031(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;CellType@1100525000 : Integer;NumberFormat@1100525001 : Text[10]);
    BEGIN
      ExcelBuf2.INIT;
      ExcelBuf2.VALIDATE("Row No.",RowNo);
      ExcelBuf2.VALIDATE("Column No.",ColumnNo);
      ExcelBuf2."Cell Value as Text" := CellValue;
      ExcelBuf2.Formula := '';
      ExcelBuf2.Bold := Bold;
      ExcelBuf2.NumberFormat := NumberFormat;
      ExcelBuf2."Cell Type" := CellType;
      ExcelBuf2.INSERT;
    END;

    PROCEDURE createGLlinesTo@1100285105(Amnt@1100285101 : Decimal;BalAcc@1100285102 : Code[20];docNo@1100285105 : Code[20];Desc@1100285100 : Text[50];ProjNo@1100285103 : Code[20];ProjectTypeCode@1100285109 : Code[10];GlobDim2Code@1100285113 : Code[20]);
    VAR
      GenJnlLine@1100285106 : Record 81;
      Job@1100285107 : Record 11072003;
      ProjectType@1100285108 : Record 11012009;
      DimVal@1100285110 : Record 349;
      ICProjSetupRec@1100285111 : Record 315;
      lvICHoursPosting@1100285112 : 'NotApplicable,ReceiverSide,Supplierside';
    BEGIN
      IF CurrLineNoTo = 0 THEN BEGIN
        GenJnlLine.SETRANGE("Journal Template Name", gJnlTemplate);
        GenJnlLine.SETRANGE("Journal Batch Name", gJnlBatchTo);
        IF GenJnlLine.FINDLAST THEN
          CurrLineNoTo := GenJnlLine."Line No.";
      END;


      Job.GET(ProjNo);
      ProjectType.GET(ProjectTypeCode);

      DimVal.GET('KOSTNADSOBJEKT',GlobDim2Code);
      ICProjSetupRec.GET;

      CurrLineNoTo += 10000;
      GenJnlLine.INIT;
      GenJnlLine."Journal Template Name" := gJnlTemplate;
      GenJnlLine."Journal Batch Name" := gJnlBatchTo;
      GenJnlLine."Line No." := CurrLineNoTo;
      GenJnlLine.VALIDATE("Posting Date",postingDate);
      GenJnlLine."Document No." := STRSUBSTNO(docNo,'');
      GenJnlLine.VALIDATE("Account Type",GenJnlLine."Account Type"::"G/L Account");

      GenJnlLine."System-Created Entry" := TRUE;
      GenJnlLine."Skip WIP Check" := TRUE;
      GenJnlLine.VALIDATE("Job No.",ProjNo);

      GenJnlLine.VALIDATE("Bal. Account Type",GenJnlLine."Bal. Account Type"::"G/L Account");
      GenJnlLine.VALIDATE("Bal. Account No.",BalAcc);
      GenJnlLine.VALIDATE("Shortcut Dimension 1 Code",Job."Global Dimension 1 Code");
      GenJnlLine.VALIDATE("Shortcut Dimension 2 Code",GlobDim2Code);

      GenJnlLine."Account No." :=
        ProjectType.GetWipAccByPostingGrp(
          oldProjectType, //Job."Project Type",
          DimVal."Cost Type",
          Job."Project Status",
          ICProjSetupRec."Provisions at Closure",
          COMPANYNAME,
          GenJnlLine."Cost Type Cost Plus Line",
          '',
          lvICHoursPosting::Supplierside,
          '','');//lvVendorPostingGroup);
      GenJnlLine.VALIDATE("Account No.");

      GenJnlLine.VALIDATE(Amount,Amnt);
      GenJnlLine.Description := Desc;
      GenJnlLine.INSERT;
    END;

    PROCEDURE createGLlinesFrom@1100285102(Amnt@1100285107 : Decimal;BalAcc@1100285105 : Code[20];docNo@1100285104 : Code[20];Desc@1100285103 : Text[50];ProjNo@1100285102 : Code[20];ProjectTypeCode@1100285101 : Code[10];GlobDim2Code@1100285100 : Code[20]);
    VAR
      GenJnlLine@1100285112 : Record 81;
      Job@1100285111 : Record 11072003;
      ProjectType@1100285110 : Record 11012009;
      DimVal@1100285109 : Record 349;
      ICProjSetupRec@1100285108 : Record 315;
      lvICHoursPosting@1100285106 : 'NotApplicable,ReceiverSide,Supplierside';
    BEGIN
      IF CurrLineNoFrom = 0 THEN BEGIN
        GenJnlLine.SETRANGE("Journal Template Name", gJnlTemplate);
        GenJnlLine.SETRANGE("Journal Batch Name", gJnlBatchFrom);
        IF GenJnlLine.FINDLAST THEN
          CurrLineNoFrom := GenJnlLine."Line No.";
      END;

      Job.GET(ProjNo);
      ProjectType.GET(ProjectTypeCode);

      DimVal.GET('KOSTNADSOBJEKT',GlobDim2Code);
      ICProjSetupRec.GET;

      CurrLineNoFrom += 10000;
      GenJnlLine.INIT;
      GenJnlLine."Journal Template Name" := gJnlTemplate;
      GenJnlLine."Journal Batch Name" := gJnlBatchFrom;
      GenJnlLine."Line No." := CurrLineNoFrom;

      GenJnlLine.VALIDATE("Posting Date",postingDate);
      GenJnlLine."Document No." := docNo;
      GenJnlLine.VALIDATE("Account Type",GenJnlLine."Account Type"::"G/L Account");

      GenJnlLine."System-Created Entry" := TRUE;
      GenJnlLine."Skip WIP Check" := TRUE;
      GenJnlLine.VALIDATE("Job No.",ProjNo);

      GenJnlLine.VALIDATE("Bal. Account Type",GenJnlLine."Bal. Account Type"::"G/L Account");
      GenJnlLine.VALIDATE("Bal. Account No.",BalAcc);
      GenJnlLine.VALIDATE("Shortcut Dimension 1 Code",Job."Global Dimension 1 Code");
      GenJnlLine.VALIDATE("Shortcut Dimension 2 Code",GlobDim2Code);

      GenJnlLine."Account No." :=
        ProjectType.GetWipAccByPostingGrp(
          newProjectType, //Job."Project Type",
          DimVal."Cost Type",
          Job."Project Status",
          ICProjSetupRec."Provisions at Closure",
          COMPANYNAME,
          GenJnlLine."Cost Type Cost Plus Line",
          '',
          lvICHoursPosting::Supplierside,
          '','');//lvVendorPostingGroup);
      GenJnlLine.VALIDATE("Account No.");

      GenJnlLine.VALIDATE(Amount,Amnt);
      GenJnlLine.Description := Desc;
      GenJnlLine.INSERT;
    END;

    BEGIN
    {
      170808 ITERO.DL pure127570 report crash when calling excel
    }
    END.
  }
  RDLDATA
  {
  }
}

