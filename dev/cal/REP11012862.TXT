OBJECT Report 11012862 Create Invoice Proposal
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Rechnungsvorschlag erstellen;
               ENU=Create Invoice Proposal;
               NLD=Factuurvoorstel aanmaken;
               NOR=Opprett fakturaforslag;
               SVE=Skapa fakturaf”rslag];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CheckSelections;
                END;

    OnPostReport=BEGIN
                   IF GUIALLOWED THEN BEGIN
                     IF FirstProposalCode <> '' THEN BEGIN
                       IF FirstProposalCode <> LastProposalCode THEN
                         MESSAGE(Text000, STRSUBSTNO('%1..%2', FirstProposalCode, LastProposalCode))
                       ELSE
                         MESSAGE(Text000, FirstProposalCode);
                     END ELSE
                       MESSAGE(Text001);

                     MaintenanceInvoiceMgt.ShowErrorsIfAvailable;
                   END;
                 END;

  }
  DATASET
  {
    { 7418;    ;DataItem;ServContractRec     ;
               DataItemTable=Table11012812;
               OnPreDataItem=BEGIN
                               StatusDialog.OPEN(Text002);
                               RecordCount := COUNT;
                               MaintenanceInvoiceMgt.ClearErrors;
                             END;

               OnAfterGetRecord=VAR
                                  ContractInstallment@1100528600 : Record 11071707;
                                  NewProposalCode@1100528601 : Code[20];
                                BEGIN
                                  RecordsProcessed += 1;
                                  StatusDialog.UPDATE(1, ROUND(RecordsProcessed / RecordCount * 9999, 1));

                                  NewProposalCode := MaintenanceInvoiceMgt.CreateInvoiceProposalWithErrorLog(
                                    ServContractRec, FALSE, ContractInstallment, gvUntilForehandDate, gvUntilAfterwardsDate, gvPostingDate, gvDocumentDate, '', CollectWithinSelection, ProposalBatchFilter);
                                  IF NewProposalCode <> '' THEN
                                    LastProposalCode := NewProposalCode;
                                  IF FirstProposalCode = '' THEN
                                    FirstProposalCode := LastProposalCode;

                                  IF CollectWithinSelection THEN
                                    IF ProposalBatchFilter = '' THEN
                                      ProposalBatchFilter := NewProposalCode
                                    ELSE
                                      ProposalBatchFilter := ProposalBatchFilter + '|' + NewProposalCode;
                                END;

               OnPostDataItem=BEGIN
                                StatusDialog.CLOSE;
                              END;

               ReqFilterFields=No.,Customer No.,Service Type,Contract Type }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnQueryClosePage=BEGIN
                         IF CloseAction <> ACTION::Cancel THEN
                           CheckSelections;
                       END;

    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=[DEU=Im Voraus fakturieren bis einschl.;
                             ENU=Forehand Invoice Until;
                             NLD=Vooruit factureren t/m;
                             NOR=Forh†ndsfakturer frem til;
                             SVE=Fakturera p† f”rhand till];
                  SourceExpr=gvUntilForehandDate }

      { 1100525003;2;Field  ;
                  CaptionML=[DEU=Nachtr„glich fakturieren bis einschl.;
                             ENU=Afterwards Invoice Until;
                             NLD=Achteraf factureren t/m;
                             NOR=Etterh†ndsfakturer frem til;
                             SVE=Fakturera efter†t tills];
                  SourceExpr=gvUntilAfterwardsDate }

      { 1100525004;2;Field  ;
                  CaptionML=[DEU=Buchungsdatum;
                             ENU=Posting Date;
                             NLD=Boekingsdatum;
                             NOR=Bokf›ringsdato;
                             SVE=Bokf”ringsdatum];
                  SourceExpr=gvPostingDate }

      { 1100525005;2;Field  ;
                  CaptionML=[DEU=Belegdatum;
                             ENU=Document Date;
                             NLD=Documentdatum;
                             NOR=Dokumentdato;
                             SVE=Dokumentdatum];
                  SourceExpr=gvDocumentDate }

      { 1100528800;2;Field  ;
                  CaptionML=[DEU=Nicht mit bestehenden Rechnungsvorschl„gen erfassen;
                             ENU=Do Not Collect With Existing Invoice Proposals;
                             NLD=Niet samenvoegen met bestaande factuurvoorstellen];
                  SourceExpr=CollectWithinSelection }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      MaintenanceInvoiceMgt@1100528604 : Codeunit 11012828;
      StatusDialog@1100526207 : Dialog;
      gvUntilForehandDate@1100525000 : Date;
      gvUntilAfterwardsDate@1100525001 : Date;
      gvPostingDate@1100525002 : Date;
      gvDocumentDate@1100525003 : Date;
      CollectWithinSelection@1100528800 : Boolean;
      FirstProposalCode@1100526203 : Code[20];
      LastProposalCode@1100526202 : Code[20];
      RecordCount@1100526201 : Integer;
      RecordsProcessed@1100526200 : Integer;
      Text000@1100526206 : TextConst 'DEU=Rechnungsvorschl„ge erstellt: %1;ENU=Invoice Proposals created: %1;NLD=Factuurvoorstellen aangemaakt: %1;NOR=Fakturaforslag opprettet: %1;SVE=Skapade fakturaf”rslag: %1';
      Text001@1100526205 : TextConst 'DEU=Es wurde kein Rechnunsgvorschlag erstellt;ENU=No Invoice Proposals created;NLD=Geen factuurvoorstel aangemaakt;NOR=Ingen fakturaforslag opprettet;SVE=Inga fakturaf”rslag har skapats';
      Text002@1100526204 : TextConst 'DEU=Fortsetzung: @1@@@@@@@@@@@;ENU=Progress: @1@@@@@@@@@@@;NLD=Voortgang: @1@@@@@@@@@@@;NOR=Fremdrift: @1@@@@@@@@@@@;SVE=F”rlopp: @1@@@@@@@@@@@';
      Text003@1100528600 : TextConst 'DEU=Geben Sie ''Im Voraus fakturieren bis einsch.'' ein;ENU=Forehand Invoice Until not set;NLD=Geef Vooruit factureren t/m in;NOR=Forh†ndsfakturer frem til er ikke angitt;SVE=Fakturera p† f”rhand till „r inte inst„llt';
      Text004@1100528601 : TextConst 'DEU=Geben Sie ''Nachtr„glich fakturieren bis einsch.'' ein;ENU=Backward Invoice Until not set;NLD=Geef Achteraf factureren t/m in;NOR=Etterh†ndsfakturer frem til er ikke angitt;SVE=Backa fakturan tills den inte „r inst„lld';
      Text005@1100528602 : TextConst 'DEU=Geben Sie ''Belegdatum'' ein;ENU=Document Date not set;NLD=Geef Documentdatum in;NOR=Dokumentdato er ikke angitt;SVE=Dokumentdatum har inte angetts';
      Text006@1100528603 : TextConst 'DEU=Geben Sie ''Buchungsdatum'' ein;ENU=Posting Date not set;NLD=Geef Boekingsdatum in;NOR=Bokf›ringsdato er ikke angitt;SVE=Bokf”ringsdatum har inte angetts';
      ProposalBatchFilter@1100528801 : Text;

    LOCAL PROCEDURE CheckSelections@1100529000();
    BEGIN
      IF gvUntilForehandDate = 0D THEN
        ERROR(Text003);
      IF gvUntilAfterwardsDate = 0D THEN
        ERROR(Text004);
      IF gvDocumentDate = 0D THEN
        ERROR(Text005);
      IF gvPostingDate = 0D THEN
        ERROR(Text006);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

