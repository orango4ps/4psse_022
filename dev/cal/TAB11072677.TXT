OBJECT Table 11072677 Plant - Maintenance Scheme
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ServiceSetup@1100528800 : Record 11012800;
             BEGIN
               ServiceSetup.GET();
               IF Meter <> '' THEN
                 TESTFIELD("Meter Reading Type");
               IF "Plant No." <> '' THEN
                 CopyMaintSchemePartsToPlantNumber("Plant Type", "Maintenance Scheme", "Plant No.", 0, '');
             END;

    OnModify=BEGIN
               IF Meter <> '' THEN
                 TESTFIELD("Meter Reading Type");
             END;

    OnDelete=VAR
               PlantMaintSchemeVersion@1100528800 : Record 11072674;
               PlantInspectionVersion@1100528803 : Record 11072682;
               PlantMaintSchemePlantPart@1100529000 : Record 11126145;
               PlantMaintenanceArrangement@1100529001 : Record 11126146;
             BEGIN
               IF "Plant No." = '' THEN
                 PlantInspectionVersion.SETRANGE(Level, PlantInspectionVersion.Level::"Plant Type")
               ELSE BEGIN
                 PlantInspectionVersion.SETRANGE(Level, PlantInspectionVersion.Level::"Plant Number");
                 PlantInspectionVersion.SETRANGE("Plant No.", "Plant No.");
               END;
               PlantInspectionVersion.SETRANGE("Plant Type", "Plant Type");
               PlantInspectionVersion.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
               PlantInspectionVersion.DELETEALL(TRUE);

               IF "Plant No." = '' THEN
                 PlantMaintSchemeVersion.SETRANGE(Level, PlantMaintSchemeVersion.Level::"Plant Type")
               ELSE BEGIN
                 PlantMaintSchemeVersion.SETRANGE(Level, PlantMaintSchemeVersion.Level::"Plant Number");
                 PlantMaintSchemeVersion.SETRANGE("Plant No.", "Plant No.");
               END;
               PlantMaintSchemeVersion.SETRANGE("Plant Type", "Plant Type");
               PlantMaintSchemeVersion.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
               PlantMaintSchemeVersion.DELETEALL(TRUE);

               PlantMaintSchemePlantPart.SETRANGE("Plant Type", "Plant Type");
               PlantMaintSchemePlantPart.SETRANGE("Plant No.", "Plant No.");
               PlantMaintSchemePlantPart.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
               PlantMaintSchemePlantPart.DELETEALL(TRUE);

               PlantMaintenanceArrangement.SETRANGE("Plant Type", "Plant Type");
               PlantMaintenanceArrangement.SETRANGE("Plant No.", "Plant No.");
               PlantMaintenanceArrangement.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
               PlantMaintenanceArrangement.DELETEALL(FALSE);
             END;

    OnRename=VAR
               PlantMaintSchemeVersion@1100529002 : Record 11072674;
               PlantInspectionVersion@1100529001 : Record 11072682;
               PlantMaintSchemePlantPart@1100529000 : Record 11126145;
             BEGIN
               IF xRec."Plant No." = '' THEN
                 PlantMaintSchemeVersion.SETRANGE(Level, PlantMaintSchemeVersion.Level::"Plant Type")
               ELSE BEGIN
                 PlantMaintSchemeVersion.SETRANGE(Level, PlantMaintSchemeVersion.Level::"Plant Number");
                 PlantMaintSchemeVersion.SETRANGE("Plant No.", xRec."Plant No.");
               END;
               PlantMaintSchemeVersion.SETRANGE("Plant Type", xRec."Plant Type");
               PlantMaintSchemeVersion.SETRANGE("Maintenance Scheme", xRec."Maintenance Scheme");
               IF NOT PlantMaintSchemeVersion.ISEMPTY THEN
                 ERROR(Text001, PlantMaintSchemeVersion.TABLECAPTION);

               IF xRec."Plant No." = '' THEN
                 PlantInspectionVersion.SETRANGE(Level, PlantInspectionVersion.Level::"Plant Type")
               ELSE BEGIN
                 PlantInspectionVersion.SETRANGE(Level, PlantInspectionVersion.Level::"Plant Number");
                 PlantInspectionVersion.SETRANGE("Plant No.", xRec."Plant No.");
               END;
               PlantInspectionVersion.SETRANGE("Plant Type", xRec."Plant Type");
               PlantInspectionVersion.SETRANGE("Maintenance Scheme", xRec."Maintenance Scheme");
               IF NOT PlantInspectionVersion.ISEMPTY THEN
                 ERROR(Text001, PlantInspectionVersion.TABLECAPTION);

               PlantMaintSchemePlantPart.SETRANGE("Plant Type", xRec."Plant Type");
               PlantMaintSchemePlantPart.SETRANGE("Plant No.", xRec."Plant No.");
               PlantMaintSchemePlantPart.SETRANGE("Maintenance Scheme", xRec."Maintenance Scheme");
               IF NOT PlantMaintSchemePlantPart.ISEMPTY THEN
                 ERROR(Text001, PlantMaintSchemePlantPart.TABLECAPTION);
             END;

    CaptionML=ENU=Plant Maintenance Scheme;
  }
  FIELDS
  {
    { 10  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type".Code;
                                                   OnValidate=VAR
                                                                PlantType@1100529000 : Record 11012551;
                                                              BEGIN
                                                                IF "Plant Type" <> '' THEN BEGIN
                                                                  PlantType.GET("Plant Type");
                                                                  PlantType.TESTFIELD(Bulk, FALSE);
                                                                  PlantType.TESTFIELD(Blocked, FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp];
                                                   NotBlank=Yes }
    { 20  ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=VAR
                                                                PlantNumber@1100529000 : Record 11012552;
                                                              BEGIN
                                                                IF "Plant No." <> '' THEN BEGIN
                                                                  PlantNumber.GET("Plant Type", "Plant No.");
                                                                  PlantNumber.TESTFIELD(Blocked, FALSE);
                                                                  IF ("Plant No." <> xRec."Plant No.") OR ("Starting Date Maintenance" = 0D) THEN
                                                                  "Starting Date Maintenance" := PlantNumber."Receipt Date";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr] }
    { 23  ;   ;Blocked (Plant Type);Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Blocked WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=[ENU=Blocked (Plant Type);
                                                              SVE=Sp„rrad (Maskintyp)];
                                                   Editable=No }
    { 24  ;   ;Blocked (Plant No.) ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".Blocked WHERE (Plant Type=FIELD(Plant Type),
                                                                                                    No.=FIELD(Plant No.)));
                                                   CaptionML=ENU=Blocked (Plant No.);
                                                   Editable=No }
    { 30  ;   ;Maintenance Scheme  ;Code20        ;TableRelation="Plant Stnd. Maintenance Scheme".Code;
                                                   OnValidate=VAR
                                                                PlantStndMaintenanceScheme@1100529000 : Record 11072673;
                                                                PlantMaintenanceScheme@1100529001 : Record 11072677;
                                                                StartDate@1100529002 : Date;
                                                              BEGIN
                                                                IF "Maintenance Scheme" <> '' THEN BEGIN
                                                                  IF "Plant No." = '' THEN BEGIN
                                                                    PlantStndMaintenanceScheme.GET("Maintenance Scheme");
                                                                    IF "Maintenance Scheme" <> xRec."Maintenance Scheme" THEN BEGIN
                                                                      "Base Inspection List" := PlantStndMaintenanceScheme."Base Inspection List";
                                                                      "Interval Maintenance" := PlantStndMaintenanceScheme."Interval Maintenance";
                                                                      "Interval Meter Reading" := PlantStndMaintenanceScheme."Interval Meter Reading";
                                                                      "Specific Meter Reading":= PlantStndMaintenanceScheme."Specific Meter Reading";
                                                                      IF FORMAT("Interval Maintenance") = '' THEN BEGIN
                                                                        Meter := '';
                                                                        "Meter Reading Type" := '';
                                                                      END;
                                                                      VALIDATE("Inspection Type", PlantStndMaintenanceScheme."Inspection Type");
                                                                      IF (("Interval Meter Reading" <> 0) OR ("Specific Meter Reading" <> 0)) AND (Meter = '') THEN
                                                                        FillDefaultMeterReadingTypeOnPlantTypeLevel;
                                                                      "Plan Method" := PlantStndMaintenanceScheme."Plan Method";
                                                                      "Maintenance Day" := PlantStndMaintenanceScheme."Maintenance Day";
                                                                    END;
                                                                  END ELSE BEGIN
                                                                    PlantMaintenanceScheme.GET("Plant Type", '', "Maintenance Scheme");
                                                                    IF "Maintenance Scheme" <> xRec."Maintenance Scheme" THEN BEGIN
                                                                      StartDate := "Starting Date Maintenance";
                                                                      TRANSFERFIELDS(PlantMaintenanceScheme,FALSE);
                                                                      "Starting Date Maintenance" := StartDate;
                                                                      CheckResetMeterAndMeterReadingType(Rec);
                                                                    END;
                                                                  END;
                                                                END;
                                                                CALCFIELDS("Maintenance Scheme Description", "Inspection List Description");
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupMaintenanceScheme(TRUE);
                                                            END;

                                                   CaptionML=[ENU=Maintenance Scheme;
                                                              NOR=Vedlikeholdsskjema;
                                                              SVE=Underh†llsschema];
                                                   NotBlank=Yes }
    { 40  ;   ;Maintenance Scheme Description;Text50;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Stnd. Maintenance Scheme".Description WHERE (Code=FIELD(Maintenance Scheme)));
                                                   CaptionML=[ENU=Maintenance Scheme Description;
                                                              NOR=Beskrivelse av vedlikeholdskjema;
                                                              SVE=Beskrivning av underh†llsschema];
                                                   Editable=No }
    { 100 ;   ;Base Inspection List;Code20        ;TableRelation="Base Plant Inspection List".Code;
                                                   OnValidate=VAR
                                                                PlantInspectionVersion@1100528801 : Record 11072682;
                                                              BEGIN
                                                                IF ("Base Inspection List" <> xRec."Base Inspection List") AND (xRec."Base Inspection List" <> '') THEN BEGIN
                                                                  IF "Plant No." = '' THEN
                                                                    PlantInspectionVersion.SETRANGE(Level, PlantInspectionVersion.Level::"Plant Type")
                                                                  ELSE
                                                                    PlantInspectionVersion.SETRANGE(Level, PlantInspectionVersion.Level::"Plant Number");
                                                                  PlantInspectionVersion.SETRANGE("Plant Type", "Plant Type");
                                                                  IF "Plant No." <>'' THEN
                                                                    PlantInspectionVersion.SETRANGE("Plant No.", "Plant No.");
                                                                  PlantInspectionVersion.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
                                                                  PlantInspectionVersion.SETRANGE("Base Inspection List", xRec."Base Inspection List");
                                                                  IF PlantInspectionVersion.FINDFIRST THEN
                                                                    PlantInspectionVersion.FIELDERROR("Base Inspection List", Text000);
                                                                END;
                                                                CALCFIELDS("Inspection List Description");
                                                              END;

                                                   CaptionML=[ENU=Base Inspection List;
                                                              SVE=Basinspektionslista] }
    { 101 ;   ;Inspection List Description;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Base Plant Inspection List".Description WHERE (Code=FIELD(Base Inspection List)));
                                                   CaptionML=[ENU=Inspection List;
                                                              SVE=Inspektionslista];
                                                   Editable=No }
    { 110 ;   ;Interval Maintenance;DateFormula   ;OnValidate=BEGIN
                                                                IF FORMAT("Interval Maintenance") <> '' THEN BEGIN
                                                                  TESTFIELD("Inspection Type", '');
                                                                  TESTFIELD(Meter, '');
                                                                  TESTFIELD("Meter Reading Type", '');
                                                                  TESTFIELD("Interval Meter Reading", 0);
                                                                  TESTFIELD("Specific Meter Reading", 0);
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Interval Maintenance }
    { 120 ;   ;Meter               ;Code10        ;TableRelation="Plant Meter Type"."Plant Meter" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                         Plant No.=FIELD(Plant No.));
                                                   OnValidate=VAR
                                                                PlantMeterType@1100529750 : Record 11229921;
                                                              BEGIN
                                                                IF Meter = '' THEN BEGIN
                                                                  TESTFIELD("Meter Reading Type", '');
                                                                  TESTFIELD("Interval Meter Reading", 0);
                                                                  TESTFIELD("Specific Meter Reading", 0);
                                                                END ELSE BEGIN
                                                                  TESTFIELD("Inspection Type", '');
                                                                  IF FORMAT("Interval Maintenance") <> '' THEN
                                                                    FIELDERROR("Interval Maintenance");
                                                                  PlantMeterType.SETRANGE("Plant Type","Plant Type");
                                                                  PlantMeterType.SETRANGE("Plant No.","Plant No.");
                                                                  PlantMeterType.SETRANGE("Plant Meter",Meter);
                                                                  PlantMeterType.SETRANGE("Plant Meter Type","Meter Reading Type");
                                                                  IF PlantMeterType.ISEMPTY THEN BEGIN
                                                                    "Meter Reading Type" := '';
                                                                    PlantMeterType.SETRANGE("Plant Meter Type");
                                                                    IF (PlantMeterType.COUNT = 1) AND PlantMeterType.FINDFIRST THEN
                                                                      "Meter Reading Type" := PlantMeterType."Plant Meter Type";
                                                                    CALCFIELDS("Unit of Measure (Meter)");
                                                                  END;
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Meter }
    { 130 ;   ;Meter Reading Type  ;Code10        ;TableRelation="Plant Meter Type"."Plant Meter Type" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                              Plant No.=FIELD(Plant No.),
                                                                                                              Plant Meter=FIELD(Meter));
                                                   OnValidate=BEGIN
                                                                IF "Meter Reading Type" = '' THEN BEGIN
                                                                  TESTFIELD("Interval Meter Reading", 0);
                                                                  TESTFIELD("Specific Meter Reading", 0);
                                                                END ELSE BEGIN
                                                                  TESTFIELD(Meter);
                                                                END;
                                                                CALCFIELDS("Unit of Measure (Meter)");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Meter Reading Type }
    { 131 ;   ;Unit of Measure (Meter);Code10     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Meter Reading Type"."Unit of Measure" WHERE (Code=FIELD(Meter Reading Type)));
                                                   CaptionML=ENU=Unit of Measure (Meter);
                                                   Editable=No }
    { 140 ;   ;Interval Meter Reading;Decimal     ;OnValidate=BEGIN
                                                                IF "Interval Meter Reading" = 0 THEN
                                                                  "Starting Total Meter Reading" := 0
                                                                ELSE BEGIN
                                                                  TESTFIELD("Inspection Type", '');
                                                                  TESTFIELD(Meter);
                                                                  TESTFIELD("Meter Reading Type");
                                                                  TESTFIELD("Specific Meter Reading", 0);
                                                                  IF FORMAT("Interval Maintenance") <> '' THEN
                                                                    FIELDERROR("Interval Maintenance");
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Interval Meter Reading;
                                                   DecimalPlaces=0:0;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 150 ;   ;Specific Meter Reading;Decimal     ;OnValidate=BEGIN
                                                                IF "Specific Meter Reading" <> 0 THEN BEGIN
                                                                  TESTFIELD("Inspection Type", '');
                                                                  TESTFIELD(Meter);
                                                                  TESTFIELD("Meter Reading Type");
                                                                  TESTFIELD("Interval Meter Reading", 0);
                                                                  IF FORMAT("Interval Maintenance") <> '' THEN
                                                                    FIELDERROR("Interval Maintenance");
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Specific Meter Reading;
                                                   DecimalPlaces=0:0;
                                                   MinValue=0;
                                                   BlankZero=Yes;
                                                   Description=Total }
    { 160 ;   ;Inspection Type     ;Code20        ;TableRelation="Plant Type Inspection Type"."Inspection Type" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                                       Inspection Based on=FILTER(Time|Quantity));
                                                   OnValidate=BEGIN
                                                                IF "Inspection Type" <> '' THEN BEGIN
                                                                  TESTFIELD(Meter, '');
                                                                  TESTFIELD("Meter Reading Type", '');
                                                                  TESTFIELD("Interval Meter Reading", 0);
                                                                  TESTFIELD("Specific Meter Reading", 0);
                                                                  IF FORMAT("Interval Maintenance") <> '' THEN
                                                                    FIELDERROR("Interval Maintenance");
                                                                END;
                                                                CALCFIELDS("Inspection Type Description");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Inspection Type;
                                                              SVE=Inspektionstyp] }
    { 161 ;   ;Inspection Type Description;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Inspection Type".Description WHERE (Code=FIELD(Inspection Type)));
                                                   CaptionML=ENU=Inspection Type Description;
                                                   Editable=No }
    { 170 ;   ;Starting Date Maintenance;Date     ;OnValidate=BEGIN
                                                                TESTFIELD("Plant No.");  //Only allowed/needed on plant number level
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Starting Date Maintenance;
                                                              SVE=Startdatum, underh†ll];
                                                   Description=Only on Plant Number Level }
    { 180 ;   ;Plan Method         ;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Plan Method;
                                                              SVE=Planmetod];
                                                   OptionCaptionML=ENU=Theoretical Maintenance Date,Last Execution Date;
                                                   OptionString=Theoretical Maintenance Date,Last Execution Date }
    { 190 ;   ;Maintenance Day     ;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Maintenance Day;
                                                              SVE=Underhållsdag];
                                                   OptionCaptionML=[ENU=" ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday,Weekday,Weekend";
                                                                    SVE=" ,Måndag,Tisdag,Onsdag,Torsdag,Fredag,Lördag,Söndag,Veckodag,Helg"];
                                                   OptionString=[ ,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday,Weekday,Weekend] }
    { 200 ;   ;Inspection No.      ;Code30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number"."Inspection No." WHERE (Plant Type=FIELD(Plant Type),
                                                                                                             No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Inspection No.;
                                                              SVE=Inspektionsnr];
                                                   Description=Only on Plant Number Level;
                                                   Editable=No }
    { 210 ;   ;Starting Total Meter Reading;Decimal;
                                                   OnValidate=BEGIN
                                                                IF "Starting Total Meter Reading" <> 0 THEN BEGIN
                                                                  TESTFIELD("Plant No.");  //Only allowed/needed on plant number level
                                                                  TESTFIELD(Meter);
                                                                  TESTFIELD("Interval Meter Reading");
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Starting Total Meter Reading;
                                                   DecimalPlaces=0:0;
                                                   MinValue=0;
                                                   Description=Only on Plant Number Level }
  }
  KEYS
  {
    {    ;Plant Type,Plant No.,Maintenance Scheme ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528800 : TextConst 'ENU=may not be modified, already used';
      Text001@1100529000 : TextConst 'ENU="Rename not allowed, ''%1'' already exist "';

    LOCAL PROCEDURE FillDefaultMeterReadingTypeOnPlantTypeLevel@1100529000();
    VAR
      PlantMeterType@1100529000 : Record 11229921;
    BEGIN
      PlantMeterType.SETRANGE("Plant Type", "Plant Type");
      PlantMeterType.SETRANGE("Plant No.", '');
      IF PlantMeterType.FINDFIRST THEN BEGIN
        PlantMeterType.SETFILTER("Plant Meter", '<>%1', PlantMeterType."Plant Meter");
        IF PlantMeterType.ISEMPTY THEN BEGIN
          Meter := PlantMeterType."Plant Meter";
          PlantMeterType.SETRANGE("Plant Meter", Meter);
          IF PlantMeterType.FINDFIRST THEN BEGIN
            PlantMeterType.SETFILTER("Plant Meter Type", '<>%1', PlantMeterType."Plant Meter Type");
            IF PlantMeterType.ISEMPTY THEN
              "Meter Reading Type" := PlantMeterType."Plant Meter Type";
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE CheckResetMeterAndMeterReadingType@1100529002(VAR PlantMaintenanceScheme@1100529001 : Record 11072677);
    VAR
      PlantMeterType@1100529000 : Record 11229921;
    BEGIN
      IF (PlantMaintenanceScheme.Meter = '') AND (PlantMaintenanceScheme."Meter Reading Type" = '') THEN
        EXIT;
      PlantMeterType.SETRANGE("Plant Type", PlantMaintenanceScheme."Plant Type");
      PlantMeterType.SETRANGE("Plant No.", PlantMaintenanceScheme."Plant No.");
      PlantMeterType.SETRANGE("Plant Meter", PlantMaintenanceScheme.Meter);
      PlantMeterType.SETRANGE("Plant Meter Type", PlantMaintenanceScheme."Meter Reading Type");
      IF PlantMeterType.ISEMPTY THEN BEGIN
        "Meter Reading Type" := '';
        PlantMeterType.SETRANGE("Plant Meter Type");
        IF PlantMeterType.ISEMPTY THEN
          Meter := '';
      END;
    END;

    PROCEDURE LookupMaintenanceScheme@1100525000(EditableMode@1100525002 : Boolean);
    VAR
      PlantMaintenanceScheme@1100525001 : Record 11072677;
      PlantStndMaintenanceScheme@1100525000 : Record 11072673;
    BEGIN
      IF "Plant No." <> '' THEN BEGIN
        PlantMaintenanceScheme.SETRANGE("Plant Type", "Plant Type");
        PlantMaintenanceScheme.SETRANGE("Plant No.", '');
        IF PlantMaintenanceScheme.FINDSET THEN BEGIN
          REPEAT
            IF PlantStndMaintenanceScheme.GET(PlantMaintenanceScheme."Maintenance Scheme") THEN
              PlantStndMaintenanceScheme.MARK(TRUE);
          UNTIL PlantMaintenanceScheme.NEXT = 0;
        END;
        PlantStndMaintenanceScheme.MARKEDONLY(TRUE);
      END;
      PlantStndMaintenanceScheme.Code := "Maintenance Scheme";
      IF NOT EditableMode THEN
        PAGE.RUNMODAL(0, PlantStndMaintenanceScheme)
      ELSE BEGIN
        IF PAGE.RUNMODAL(0, PlantStndMaintenanceScheme) = ACTION::LookupOK THEN
          VALIDATE("Maintenance Scheme", PlantStndMaintenanceScheme.Code);
      END;
    END;

    PROCEDURE CopyMaintSchemeFromPlantTypeToPlantNumbers@1100528800(IPlantMaintenanceScheme@1100528800 : Record 11072677;VAR OPlantMaintenanceSchemeCopied@1100528805 : Record 11072677);
    VAR
      PlantNumber@1100528801 : Record 11012552;
      PlantMaintenanceScheme@1100528802 : Record 11072677;
    BEGIN
      IF (IPlantMaintenanceScheme."Plant Type" = '') OR (IPlantMaintenanceScheme."Maintenance Scheme" = '') THEN
        EXIT;
      PlantNumber.SETRANGE("Plant Type", IPlantMaintenanceScheme."Plant Type");
      IF PlantNumber.FINDSET THEN BEGIN
        REPEAT
          IF NOT PlantMaintenanceScheme.GET(IPlantMaintenanceScheme."Plant Type", PlantNumber."No.", IPlantMaintenanceScheme."Maintenance Scheme") THEN BEGIN
            PlantMaintenanceScheme := IPlantMaintenanceScheme;
            PlantMaintenanceScheme.VALIDATE("Plant No.", PlantNumber."No.");
            CheckResetMeterAndMeterReadingType(PlantMaintenanceScheme);
            PlantMaintenanceScheme.INSERT;
            OPlantMaintenanceSchemeCopied.GET(PlantMaintenanceScheme."Plant Type", PlantMaintenanceScheme."Plant No.", PlantMaintenanceScheme."Maintenance Scheme");
            OPlantMaintenanceSchemeCopied.MARK(TRUE);
          END;
          CopyMaintSchemePartsToPlantNumber(PlantNumber."Plant Type", IPlantMaintenanceScheme."Maintenance Scheme", PlantNumber."No.", 0, '');
        UNTIL PlantNumber.NEXT = 0;
      END;
    END;

    PROCEDURE CopyMaintSchemePartsToPlantNumber@1100529001(PlantType@1100529000 : Code[20];MaintenanceScheme@1100529001 : Code[20];PlantNo@1100529004 : Code[20];FromLevel@1100529007 : 'PlantType,PlantNo';FromPlantNo@1100529006 : Code[20]);
    VAR
      PlantMaintSchemePlantPart@1100529002 : Record 11126145;
      PlantMaintSchemePlantPart2@1100529003 : Record 11126145;
      PlantPartPlantLevel@1100529005 : Record 11229932;
    BEGIN
      IF (PlantType = '') OR (MaintenanceScheme = '') OR (PlantNo = '') OR ((FromLevel = FromLevel::PlantNo) AND (FromPlantNo = '')) THEN
        EXIT;
      IF FromLevel = FromLevel::PlantType THEN
        FromPlantNo := '';
      PlantMaintSchemePlantPart.SETRANGE("Plant Type", PlantType);
      PlantMaintSchemePlantPart.SETRANGE("Plant No.", FromPlantNo);
      PlantMaintSchemePlantPart.SETRANGE("Maintenance Scheme", MaintenanceScheme);
      IF NOT PlantMaintSchemePlantPart.FINDSET THEN
        EXIT;
      REPEAT
        IF NOT PlantMaintSchemePlantPart2.GET(PlantType, PlantNo, MaintenanceScheme, PlantMaintSchemePlantPart."Plant Part") THEN BEGIN
          IF PlantPartPlantLevel.GET(PlantPartPlantLevel.Level::PlantNumber, PlantType, PlantNo, PlantMaintSchemePlantPart."Plant Part") THEN BEGIN
            PlantMaintSchemePlantPart2 := PlantMaintSchemePlantPart;
            PlantMaintSchemePlantPart2."Plant No." := PlantNo;
            PlantMaintSchemePlantPart2.INSERT;
          END;
        END;
      UNTIL PlantMaintSchemePlantPart.NEXT = 0;
    END;

    PROCEDURE ShowMaintSchemePlantParts@1100529003();
    VAR
      PlantMaintSchemePlantPart@1100529000 : Record 11126145;
    BEGIN
      TESTFIELD("Maintenance Scheme");
      PlantMaintSchemePlantPart.FILTERGROUP(2);
      PlantMaintSchemePlantPart.SETRANGE("Plant Type", "Plant Type");
      PlantMaintSchemePlantPart.SETRANGE("Plant No.", "Plant No.");
      PlantMaintSchemePlantPart.SETRANGE("Maintenance Scheme", "Maintenance Scheme");
      PlantMaintSchemePlantPart.FILTERGROUP(0);
      PlantMaintSchemePlantPart."Plant Type" := "Plant Type";
      PlantMaintSchemePlantPart."Plant No." := "Plant No.";
      PlantMaintSchemePlantPart."Maintenance Scheme" := "Maintenance Scheme";
      PAGE.RUNMODAL(PAGE::"Plant Maint.Scheme Plant Parts", PlantMaintSchemePlantPart);
    END;

    PROCEDURE GetInspectionTypeInterval@1100529004(VAR IntervalInspection@1100529003 : DateFormula;VAR IntervalMeterReading@1100529001 : Decimal;PlantCompany@1100529004 : Text);
    VAR
      InspectionType@1100529000 : Record 11012562;
      PeriodCode@1100529002 : Code[1];
    BEGIN
      CLEAR(IntervalInspection);
      IntervalMeterReading := 0;
      IF "Inspection Type" = '' THEN
        EXIT;
      IF PlantCompany <> '' THEN
        InspectionType.CHANGECOMPANY(PlantCompany);
      InspectionType.GET("Inspection Type");
      IF InspectionType."Inspection Based on" = InspectionType."Inspection Based on"::Time THEN BEGIN
        IF InspectionType."Inspect per" > 0 THEN BEGIN
          CASE InspectionType."Period Length" OF
            InspectionType."Period Length"::Day:
              PeriodCode := 'D';
            InspectionType."Period Length"::Week:
              PeriodCode := 'W';
            InspectionType."Period Length"::Month:
              PeriodCode := 'M';
            InspectionType."Period Length"::Quarter:
              PeriodCode := 'Q';
            InspectionType."Period Length"::Year:
              PeriodCode := 'Y';
          END;
          EVALUATE(IntervalInspection, STRSUBSTNO('<%1%2>', InspectionType."Inspect per", PeriodCode));
        END;
        EXIT;
      END;
      IF InspectionType."Inspection Based on" = InspectionType."Inspection Based on"::Quantity THEN
        IntervalMeterReading := InspectionType."Inspection Interval";
    END;

    BEGIN
    END.
  }
}

