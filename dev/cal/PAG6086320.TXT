OBJECT Page 6086320 Expense Split and Allocation
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.3.00.05;
  }
  PROPERTIES
  {
    Permissions=TableData 6086320=r;
    CaptionML=[DEU=Trennen und Zuweisen von Ausgaben;
               ENU=Expense Split and Allocation;
               NLD=Uitgavensplitsing en allocatie];
    SourceTable=Table6086321;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    OnOpenPage=BEGIN
                 ExpEntryNo := GETRANGEMIN("Expense Entry No.");
                 Expense.GET(ExpEntryNo);

                 Expense.CALCFIELDS("Continia User Name");
                 EnableAction := (NOT Expense.Posted) AND (NOT ReadOnly) AND
                   ((Expense.Status < Expense.Status::"Pending Approval") OR CurrentUserIsNextApprover);
                 CurrPage.EDITABLE := EnableAction;

                 IF ISEMPTY AND (NOT Expense.Posted) AND (NOT ReadOnly) THEN BEGIN
                   UpdateRemAmount;
                   InitRecFromExpense;
                   INSERT(TRUE);
                 END;

                 EnableFields;
               END;

    OnClosePage=BEGIN
                  IF NOT CurrPage.EDITABLE THEN
                    EXIT;

                  UpdateRemAmount;
                  AdjustAmountsToDecimals(RemainingAmount,RemainingAmountLCY,RemainingAmtBankLCY);
                  ExpValidate.RUN(Expense);
                END;

    OnAfterGetRecord=BEGIN
                       UpdateRemAmount;
                       ShortcutFieldFunctions.ShowShortcutFieldValues(ShortcutFieldValues,DATABASE::"Expense Allocation",0,'',"Entry No.");
                     END;

    OnNewRecord=BEGIN
                  UpdateRemAmount;
                  InitRecFromExpense;
                  CLEAR(ShortcutFieldValues);
                END;

    OnInsertRecord=BEGIN
                     UpdateRemAmount;
                     CurrPage.UPDATE(FALSE);
                     EXIT(TRUE);
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT CurrPage.EDITABLE THEN
                         EXIT;

                       DeleteAutoGeneratedEntries;
                       EXIT(ValidateAllocationConsistency(TRUE));

                       EXIT(TRUE);
                     END;

    ActionList=ACTIONS
    {
      { 1160040018;  ;ActionContainer;
                      Name=RelatedInformation;
                      CaptionML=;
                      ActionContainerType=RelatedInformation }
      { 1160040016;1 ;ActionGroup;
                      Name=Line;
                      CaptionML=[DEU=Zeile;
                                 ENU=Line;
                                 NLD=Regel;
                                 SVE=Rad] }
      { 1160040014;2 ;Action    ;
                      Name=<Action3>;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[DEU=Dimensionen;
                                 ENU=Dimensions;
                                 NLD=Dimensies;
                                 SVE=Dimensioner];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowDimensions(ReadOnly);
                               END;
                                }
      { 1160040048;2 ;Action    ;
                      Name=Attendees;
                      CaptionML=[DEU=Statusfilter;
                                 ENU=Attendees;
                                 NLD=Deelnemers];
                      Image=Users;
                      OnAction=BEGIN
                                 DrillDownAttendees;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1160040010;  ;ActionContainer;
                      Name=ActionItems;
                      CaptionML=;
                      ActionContainerType=ActionItems }
      { 1160040011;1 ;Action    ;
                      Name=Create New Expense;
                      CaptionML=[DEU=&Neue Ausgabe erstellen;
                                 ENU=Create &New Expense;
                                 NLD=Maak nieuwe uitgave aan];
                      Promoted=Yes;
                      Enabled=EnableAction;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      OnAction=VAR
                                 ExpenseAllocation@1160040001 : Record 6086321;
                                 SplitAndAllocateMgt@1160040000 : Codeunit 6086301;
                               BEGIN
                                 IF ReadOnly THEN
                                   ERROR('');

                                 Expense.TESTFIELD(Posted,FALSE);

                                 CurrPage.SETSELECTIONFILTER(ExpenseAllocation);
                                 SplitAndAllocateMgt.CreateNewExpenses(ExpenseAllocation);

                                 Expense.GET(ExpEntryNo);
                                 UpdateRemAmount;

                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;;Container;
                Name=ContentArea;
                ContainerType=ContentArea }

    { 1160040012;1;Group  ;
                CaptionML=[DEU=Allgemein;
                           ENU=General;
                           NLD=Algemeen;
                           SVE=AllmÑnt] }

    { 1160040004;2;Field  ;
                Name=Expense Continia User ID;
                CaptionML=[DEU=Mitarbeiternr.;
                           ENU=Continia User ID;
                           NLD=Continia gebruikers-id;
                           SVE=AnstÑllningsnr];
                SourceExpr=Expense."Continia User ID";
                Editable=false }

    { 1160040003;2;Field  ;
                Name=Expense Name;
                CaptionML=[DEU=Name Mitarbeiter;
                           ENU=Name;
                           NLD=Naam;
                           SVE=Namn pÜ anstÑlld];
                SourceExpr=Expense."Continia User Name";
                Editable=false }

    { 1160040021;2;Field  ;
                Name=Expense Description;
                CaptionML=[DEU=Beschreibung;
                           ENU=Description;
                           NLD=Omschrijving;
                           SVE=Beskrivning];
                SourceExpr=Expense.Description;
                Editable=FALSE }

    { 1160040008;2;Field  ;
                Name=Expense Document Date;
                CaptionML=[DEU=Belegdatum;
                           ENU=Document Date;
                           NLD=Documentdatum;
                           SVE=Dokumentdatum];
                SourceExpr=Expense."Document Date";
                Editable=FALSE }

    { 1160040031;2;Group  ;
                GroupType=Group }

    { 1160040015;3;Field  ;
                Name=Expense Currency Code;
                CaptionML=[DEU=WÑhrungscode;
                           ENU=Currency Code;
                           NLD=Valutacode;
                           SVE=Valutakod];
                SourceExpr=Expense."Currency Code";
                Editable=FALSE }

    { 1160040017;3;Field  ;
                Name=Expense Amount;
                CaptionML=[DEU=Betrag;
                           ENU=Amount;
                           NLD=Bedrag;
                           SVE=Belopp];
                SourceExpr=Expense.Amount;
                AutoFormatType=1;
                AutoFormatExpr=Expense."Currency Code";
                Editable=FALSE }

    { 1160040019;3;Field  ;
                Name=Expense Remaining Amount;
                CaptionML=[DEU=Restbetrag;
                           ENU=Remaining Amount;
                           NLD=Resterend bedrag;
                           SVE=èterstÜende belopp];
                SourceExpr=RemainingAmount;
                AutoFormatType=1;
                AutoFormatExpr=Expense."Currency Code";
                Editable=FALSE }

    { 1160040029;3;Field  ;
                Name=Expense Amount (LCY);
                CaptionML=[DEU=Betrag (MW);
                           ENU=Amount (LCY);
                           NLD=Bedrag (LV);
                           SVE=Belopp (BVA)];
                SourceExpr=Expense."Amount (LCY)";
                Editable=False }

    { 1160040030;3;Field  ;
                Name=Expense Remaining Amount (LCY);
                CaptionML=[DEU=Restbetrag (MW);
                           ENU=Remaining Amount (LCY);
                           NLD=Resterend bedrag (LV);
                           SVE=èterstÜende belopp (BVA)];
                SourceExpr=RemainingAmountLCY;
                AutoFormatType=1;
                Editable=False }

    { 1160040000;1;Group  ;
                GroupType=Repeater }

    { 1160040023;2;Field  ;
                Name=Continia User ID;
                SourceExpr="Continia User ID" }

    { 1160040020;2;Field  ;
                Name=Expense Type;
                SourceExpr="Expense Type" }

    { 1160040005;2;Field  ;
                Name=Description;
                SourceExpr=Description }

    { 1160040006;2;Field  ;
                Name=Description 2;
                SourceExpr="Description 2";
                Visible=false }

    { 1160040049;2;Field  ;
                Name=Attendees;
                CaptionML=[DEU=Statusfilter;
                           ENU=Attendees;
                           NLD=Deelnemers];
                SourceExpr=GetAttendeesForDisplay;
                OnDrillDown=BEGIN
                              DrillDownAttendees;
                              CurrPage.UPDATE;
                            END;
                             }

    { 1160040025;2;Field  ;
                Name=Amount;
                SourceExpr=Amount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1160040013;2;Field  ;
                Name=Amount (LCY);
                SourceExpr="Amount (LCY)";
                Editable=FALSE }

    { 1160040001;2;Field  ;
                Name=Amount %;
                SourceExpr="Amount %";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1160040033;2;Field  ;
                Name=Bank-Currency Amount;
                SourceExpr="Bank-Currency Amount";
                Visible=false }

    { 1160040032;2;Field  ;
                Name=Bank Currency Code;
                SourceExpr="Bank Currency Code";
                Visible=false }

    { 1160040026;2;Field  ;
                Name=Global Dimension 1 Code;
                SourceExpr="Global Dimension 1 Code" }

    { 1160040027;2;Field  ;
                Name=Global Dimension 2 Code;
                SourceExpr="Global Dimension 2 Code" }

    { 1160040024;2;Field  ;
                Name=Job No.;
                SourceExpr="Job No." }

    { 1160040022;2;Field  ;
                Name=Job Task No.;
                SourceExpr="Job Task No." }

    { 1160040034;2;Field  ;
                Name=Billable;
                SourceExpr=Billable;
                Visible=false }

    { 1160040028;2;Field  ;
                Name=Admin Comment;
                SourceExpr="Admin Comment" }

    { 1160040035;2;Field  ;
                Name=Job Line Type;
                SourceExpr="Job Line Type";
                Visible=false }

    { 1160040047;2;Field  ;
                Name=ShortcutFieldValues1;
                SourceExpr=ShortcutFieldValues[1];
                CaptionClass=GetShortcutFieldCaption(1);
                Visible=CustomfieldVisible1;
                Style=Attention;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(1,DATABASE::"Expense Allocation",0,'',"Entry No.",ShortcutFieldValues[1]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(1,DATABASE::"Expense Allocation",0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040046;2;Field  ;
                Name=ShortcutFieldValues2;
                SourceExpr=ShortcutFieldValues[2];
                CaptionClass=GetShortcutFieldCaption(2);
                Visible=CustomfieldVisible2;
                Style=Attention;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(2,DATABASE::"Expense Allocation",0,'',"Entry No.",ShortcutFieldValues[2]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(2,DATABASE::"Expense Allocation",0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040045;2;Field  ;
                Name=ShortcutFieldValues3;
                SourceExpr=ShortcutFieldValues[3];
                CaptionClass=GetShortcutFieldCaption(3);
                Visible=CustomfieldVisible3;
                Style=Attention;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(3,DATABASE::"Expense Allocation",0,'',"Entry No.",ShortcutFieldValues[3]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(3,DATABASE::"Expense Allocation",0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040044;2;Field  ;
                Name=ShortcutFieldValues4;
                SourceExpr=ShortcutFieldValues[4];
                CaptionClass=GetShortcutFieldCaption(4);
                Visible=CustomfieldVisible4;
                Style=Attention;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(4,DATABASE::"Expense Allocation",0,'',"Entry No.",ShortcutFieldValues[4]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(4,DATABASE::"Expense Allocation",0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040043;2;Field  ;
                Name=ShortcutFieldValues5;
                SourceExpr=ShortcutFieldValues[5];
                CaptionClass=GetShortcutFieldCaption(5);
                Visible=CustomfieldVisible5;
                Style=Attention;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(5,DATABASE::"Expense Allocation",0,'',"Entry No.",ShortcutFieldValues[5]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(5,DATABASE::"Expense Allocation",0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040042;2;Field  ;
                Name=ShortcutFieldValues6;
                SourceExpr=ShortcutFieldValues[6];
                CaptionClass=GetShortcutFieldCaption(6);
                Visible=CustomfieldVisible6;
                Style=Attention;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(6,DATABASE::"Expense Allocation",0,'',"Entry No.",ShortcutFieldValues[6]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(6,DATABASE::"Expense Allocation",0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040041;2;Field  ;
                Name=ShortcutFieldValues7;
                SourceExpr=ShortcutFieldValues[7];
                CaptionClass=GetShortcutFieldCaption(7);
                Visible=CustomfieldVisible7;
                Style=Attention;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(7,DATABASE::"Expense Allocation",0,'',"Entry No.",ShortcutFieldValues[7]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(7,DATABASE::"Expense Allocation",0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040040;2;Field  ;
                Name=ShortcutFieldValues8;
                SourceExpr=ShortcutFieldValues[8];
                CaptionClass=GetShortcutFieldCaption(8);
                Visible=CustomfieldVisible8;
                Style=Attention;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(8,DATABASE::"Expense Allocation",0,'',"Entry No.",ShortcutFieldValues[8]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(8,DATABASE::"Expense Allocation",0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040039;2;Field  ;
                Name=ShortcutFieldValues9;
                SourceExpr=ShortcutFieldValues[9];
                CaptionClass=GetShortcutFieldCaption(9);
                Visible=CustomfieldVisible9;
                Style=Attention;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(9,DATABASE::"Expense Allocation",0,'',"Entry No.",ShortcutFieldValues[9]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(9,DATABASE::"Expense Allocation",0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 1160040038;2;Field  ;
                Name=ShortcutFieldValues10;
                SourceExpr=ShortcutFieldValues[10];
                CaptionClass=GetShortcutFieldCaption(10);
                Visible=CustomfieldVisible10;
                Style=Attention;
                OnValidate=BEGIN
                             ShortcutFieldFunctions.ValidateShortcutFieldValue(10,DATABASE::"Expense Allocation",0,'',"Entry No.",ShortcutFieldValues[10]);
                           END;

                OnLookup=BEGIN
                           EXIT(ShortcutFieldFunctions.LookupShortcutFieldValue(10,DATABASE::"Expense Allocation",0,'',"Entry No.",FALSE,Text));
                         END;
                          }

    { 3   ;2   ;Field     ;
                Name=Cash/Private Card;
                SourceExpr="Cash/Private Card" }

    { 1160040050;2;Field  ;
                Name=Expense Account Type;
                SourceExpr="Expense Account Type" }

    { 1160040007;2;Field  ;
                Name=Expense Account;
                Lookup=Yes;
                SourceExpr="Expense Account";
                OnLookup=BEGIN
                           EXIT(LookupPostingAccount(Text));
                         END;
                          }

    { 1160040002;2;Field  ;
                Name=Gen. Prod. Posting Group;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=false }

    { 1160040009;2;Field  ;
                Name=VAT Prod. Posting Group;
                SourceExpr="VAT Prod. Posting Group";
                Visible=false }

    { 1160040036;2;Field  ;
                Name=Gen. Bus. Posting Group;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=false }

    { 1160040037;2;Field  ;
                Name=VAT Bus. Posting Group;
                SourceExpr="VAT Bus. Posting Group";
                Visible=false }

  }
  CODE
  {
    VAR
      Expense@1160040000 : Record 6086320;
      ShortcutFieldFunctions@1160040024 : Codeunit 6086304;
      ExpValidate@1160040007 : Codeunit 6086321;
      CustomFieldNames@1160040023 : ARRAY [10] OF Text[50];
      ShortcutFieldCaptions@1160040022 : ARRAY [10] OF Text[250];
      ShortcutFieldValues@1160040021 : ARRAY [10] OF Text[250];
      RemainingAmount@1160040001 : Decimal;
      RemainingAmountLCY@1160040002 : Decimal;
      RemainingAmtBankLCY@1160040008 : Decimal;
      ExpEntryNo@1160040004 : Integer;
      CustomFieldVisible1@1160040019 : Boolean INDATASET;
      CustomFieldVisible10@1160040018 : Boolean INDATASET;
      CustomFieldVisible2@1160040017 : Boolean INDATASET;
      CustomFieldVisible3@1160040016 : Boolean INDATASET;
      CustomFieldVisible4@1160040015 : Boolean INDATASET;
      CustomFieldVisible5@1160040014 : Boolean INDATASET;
      CustomFieldVisible6@1160040013 : Boolean INDATASET;
      CustomFieldVisible7@1160040012 : Boolean INDATASET;
      CustomFieldVisible8@1160040010 : Boolean INDATASET;
      CustomFieldVisible9@1160040009 : Boolean INDATASET;
      EnableAction@1160040025 : Boolean INDATASET;
      JobNoVisible@1160040026 : Boolean INDATASET;
      ReadOnly@1160040006 : Boolean;

    LOCAL PROCEDURE UpdateRemAmount@1160040006();
    VAR
      ExpenseAllocation@1160040000 : Record 6086321;
    BEGIN
      ExpenseAllocation.SETCURRENTKEY("Expense Entry No.");
      ExpenseAllocation.SETRANGE("Expense Entry No.",ExpEntryNo);
      ExpenseAllocation.SETFILTER("Entry No.",'<>%1',"Entry No.");
      ExpenseAllocation.CALCSUMS(Amount,"Amount (LCY)","Bank-Currency Amount");

      RemainingAmount := Expense.Amount - ExpenseAllocation.Amount - Amount;
      RemainingAmountLCY := Expense."Amount (LCY)" - ExpenseAllocation."Amount (LCY)" - "Amount (LCY)";
      RemainingAmtBankLCY := Expense."Bank-Currency Amount" - ExpenseAllocation."Bank-Currency Amount" - "Bank-Currency Amount";
    END;

    LOCAL PROCEDURE InitRecFromExpense@1160040002();
    BEGIN
      TRANSFERFIELDS(Expense,FALSE);
      "Expense Entry No." := Expense."Entry No.";
      VALIDATE(Amount,RemainingAmount);
      VALIDATE("Bank Currency Code",Expense."Bank Currency Code");
    END;

    PROCEDURE SetReadOnly@1160040005();
    BEGIN
      ReadOnly := TRUE;
    END;

    LOCAL PROCEDURE EnableFields@1160040000();
    VAR
      EMSetup@1160040000 : Record 6086300;
      t@1160040001 : Integer;
    BEGIN
      EMSetup.GET;

      FOR t := 1 TO 10 DO
        CustomFieldNames[t] := ShortcutFieldFunctions.GetShortcutFieldCode(DATABASE::"Expense Allocation",t);

      CustomFieldVisible1 := CustomFieldNames[1] <> '';
      CustomFieldVisible2 := CustomFieldNames[2] <> '';
      CustomFieldVisible3 := CustomFieldNames[3] <> '';
      CustomFieldVisible4 := CustomFieldNames[4] <> '';
      CustomFieldVisible5 := CustomFieldNames[5] <> '';
      CustomFieldVisible6 := CustomFieldNames[6] <> '';
      CustomFieldVisible7 := CustomFieldNames[7] <> '';
      CustomFieldVisible8 := CustomFieldNames[8] <> '';
      CustomFieldVisible9 := CustomFieldNames[9] <> '';
      CustomFieldVisible10 := CustomFieldNames[10] <> '';

      JobNoVisible := ShortcutFieldFunctions.JobNoVisible(DATABASE::Expense);
    END;

    LOCAL PROCEDURE GetShortcutFieldCaption@1160040001(ShortcutFieldNo@1160040000 : Integer) : Text[250];
    BEGIN
      IF ShortcutFieldCaptions[1] = '' THEN
        ShortcutFieldFunctions.GetShortcutFieldCaptionsArray(ShortcutFieldCaptions,DATABASE::"Expense Allocation");

      EXIT(ShortcutFieldCaptions[ShortcutFieldNo]);
    END;

    PROCEDURE CurrentUserIsNextApprover@1160040004() : Boolean;
    VAR
      EMApprovalMgt@1160040000 : Codeunit 6086312;
      ContiniaVerMgt@1160040001 : Codeunit 6192775;
      DCAppMgt@1160040002 : Codeunit 6085722;
    BEGIN
      IF ContiniaVerMgt.NAVVersion <= 60010 THEN
        EXIT(UPPERCASE(DCAppMgt.RemoveDomainName(USERID)) = EMApprovalMgt.GetNextApprover(DATABASE::Expense,FORMAT(ExpEntryNo)))
      ELSE
        EXIT(USERID = EMApprovalMgt.GetNextApprover(DATABASE::Expense,FORMAT(ExpEntryNo)));
    END;

    BEGIN
    END.
  }
}

