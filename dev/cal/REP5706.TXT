OBJECT Report 5706 Create Stockkeeping Unit
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Lagerhaltungsdaten erstellen;
               ENU=Create Stockkeeping Unit;
               NLD=SKU maken;
               NOR=Opprett lagerfõringsenhet;
               SVE=Skapa lagerstÑlleenhet];
    ApplicationArea=#Warehouse;
    ProcessingOnly=Yes;
    UsageCategory=Administration;
    AdditionalSearchTermsML=[DEU=Lagerhaltungsdaten erstellen;
                             ENU=create sku;
                             NLD=sku maken;
                             NOR=opprett lfe];
  }
  DATASET
  {
    { 8129;    ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               Location.SETRANGE("Use As In-Transit",FALSE);

                               DialogWindow.OPEN(
                                 Text000 +
                                 Text001 +
                                 Text002);

                               SaveFilters := TRUE;
                             END;

               OnAfterGetRecord=VAR
                                  ItemVariant@1000 : Record 5401;
                                BEGIN
                                  IF SaveFilters THEN BEGIN
                                    LocationFilter := GETFILTER("Location Filter");
                                    VariantFilter := GETFILTER("Variant Filter");
                                    SaveFilters := FALSE;
                                  END;
                                  SETFILTER("Location Filter",LocationFilter);
                                  SETFILTER("Variant Filter",VariantFilter);

                                  Location.SETFILTER(Code,GETFILTER("Location Filter"));

                                  OnItemOnAfterGetRecordOnAfterSetLocationFilter(Location,Item);

                                  IF ReplacePreviousSKUs THEN BEGIN
                                    StockkeepingUnit.RESET;
                                    StockkeepingUnit.SETRANGE("Item No.","No.");
                                    IF GETFILTER("Variant Filter") <> '' THEN
                                      StockkeepingUnit.SETFILTER("Variant Code",GETFILTER("Variant Filter"));
                                    IF GETFILTER("Location Filter") <> '' THEN
                                      StockkeepingUnit.SETFILTER("Location Code",GETFILTER("Location Filter"));
                                    StockkeepingUnit.DELETEALL;
                                  END;

                                  DialogWindow.UPDATE(1,"No.");
                                  ItemVariant.SETRANGE("Item No.","No.");
                                  ItemVariant.SETFILTER(Code,GETFILTER("Variant Filter"));
                                  CASE TRUE OF
                                    (SKUCreationMethod = SKUCreationMethod::Location) OR
                                    ((SKUCreationMethod = SKUCreationMethod::"Location & Variant") AND
                                     (NOT ItemVariant.FIND('-'))):
                                      BEGIN
                                        IF Location.FIND('-') THEN
                                          REPEAT
                                            DialogWindow.UPDATE(2,Location.Code);
                                            SETRANGE("Location Filter",Location.Code);
                                            CreateSKUIfRequired(Item,Location.Code,'');
                                          UNTIL Location.NEXT = 0;
                                      END;
                                    (SKUCreationMethod = SKUCreationMethod::Variant) OR
                                    ((SKUCreationMethod = SKUCreationMethod::"Location & Variant") AND
                                     (NOT Location.FIND('-'))):
                                      BEGIN
                                        IF ItemVariant.FIND('-') THEN
                                          REPEAT
                                            DialogWindow.UPDATE(3,ItemVariant.Code);
                                            SETRANGE("Variant Filter",ItemVariant.Code);
                                            CreateSKUIfRequired(Item,'',ItemVariant.Code);
                                          UNTIL ItemVariant.NEXT = 0;
                                      END;
                                    (SKUCreationMethod = SKUCreationMethod::"Location & Variant"):
                                      BEGIN
                                        IF Location.FIND('-') THEN
                                          REPEAT
                                            DialogWindow.UPDATE(2,Location.Code);
                                            SETRANGE("Location Filter",Location.Code);
                                            IF ItemVariant.FIND('-') THEN
                                              REPEAT
                                                DialogWindow.UPDATE(3,ItemVariant.Code);
                                                SETRANGE("Variant Filter",ItemVariant.Code);
                                                CreateSKUIfRequired(Item,Location.Code,ItemVariant.Code);
                                              UNTIL ItemVariant.NEXT = 0;
                                          UNTIL Location.NEXT = 0;
                                      END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                DialogWindow.CLOSE;
                              END;

               ReqFilterFields=No.,Inventory Posting Group,Location Filter,Variant Filter,Shelf No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   ReplacePreviousSKUs := FALSE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 3   ;2   ;Field     ;
                  CaptionML=[DEU=Erstellung nach;
                             ENU=Create Per;
                             NLD=Maken per;
                             NOR=Opprett per];
                  ToolTipML=[DEU=Gibt an, ob Sie Lagerhaltungsdaten pro Lagerort oder pro Variante oder pro Standort zusammen mit der Variante erstellen mîchten.;
                             ENU=Specifies if you want to create stockkeeping units per location or per variant or per location combined with variant.;
                             NLD=Hiermee wordt opgegeven of u SKU's wilt maken per vestiging, per variant of per vestiging gecombineerd met per variant.;
                             NOR=Angir om du vil opprette lagerfõringsenheter per lokasjon eller per variant, eller per lokasjon kombinert med varianten.];
                  OptionCaptionML=[DEU=Lagerort,Variante,Lagerort & Variante;
                                   ENU=Location,Variant,Location & Variant;
                                   NLD=Vestiging,Variant,Vestiging en variant;
                                   NOR=Lokasjon,Variant,Lokasjon og variant];
                  ApplicationArea=#Location;
                  SourceExpr=SKUCreationMethod }

      { 1   ;2   ;Field     ;
                  CaptionML=[DEU=Nur fÅr Artikel am Lager;
                             ENU=Item In Inventory Only;
                             NLD=Alleen artikelen in voorraad;
                             NOR=Bare lagervarer];
                  ToolTipML=[DEU=Gibt an, ob die Stapelverarbeitung nur Lagerhaltungsdaten fÅr Artikel erstellen soll, die Sie am Lager haben (d. h. fÅr Artikel, die im Feld "Lagerbestand" einen Wert Åber 0 haben).;
                             ENU=Specifies if you only want the batch job to create stockkeeping units for items that are in your inventory (that is, for items where the value in the Inventory field is above 0).;
                             NLD=Hiermee wordt opgegeven of met de batchtaak alleen SKU's worden gemaakt voor artikelen die in voorraad zijn (artikelen waarvoor de waarde in het veld Voorraad groter is dan 0).;
                             NOR=Angir om du vil at kjõrselen bare skal opprette lagerfõringsenheter for varer pÜ lager (det vil si for varer som har en verdi som er hõyere enn 0 i feltet Beholdning).];
                  ApplicationArea=#Location;
                  SourceExpr=ItemInInventoryOnly }

      { 7   ;2   ;Field     ;
                  CaptionML=[DEU=Vorh. Lagerh.-Daten lîschen;
                             ENU=Replace Previous SKUs;
                             NLD=Vorige SKU's vervangen;
                             NOR=Erstatt tidligere LFEer];
                  ToolTipML=[DEU=Gibt an, ob die Stapelverarbeitung alle frÅher erstellten Lagerhaltungsdaten zu den Artikeln ersetzen soll, die Sie in die Stapelverarbeitung einbezogen haben.;
                             ENU=Specifies if you want the batch job to replace all previous created stockkeeping units on the items you have included in the batch job.;
                             NLD=Hiermee wordt opgegeven of met de batchtaak alle eerder gemaakte SKU's worden vervangen voor de artikelen die u in de batchtaak hebt opgenomen.;
                             NOR=Angir om du vil at kjõrselen skal erstatte alle tidligere lagerfõringsenheter som er opprettet pÜ varene som er med i kjõrselen.];
                  ApplicationArea=#Warehouse;
                  SourceExpr=ReplacePreviousSKUs }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=Artikelnr.     #1##################\;ENU=Item No.       #1##################\;NLD=Artikelnr.     #1##################\;NOR=Varenr.        #1##################\';
      Text001@1001 : TextConst 'DEU=Lagerortcode   #2########\;ENU=Location Code  #2########\;NLD=Vestiging      #2########\;NOR=Lokasjonskode  #2########\';
      Text002@1002 : TextConst 'DEU=Variantencode  #3########\;ENU=Variant Code   #3########\;NLD=Variant        #3########\;NOR=Variantkode    #3########\';
      StockkeepingUnit@1003 : Record 5700;
      Location@1004 : Record 14;
      DialogWindow@1008 : Dialog;
      SKUCreationMethod@1005 : 'Location,Variant,Location & Variant';
      ItemInInventoryOnly@1006 : Boolean;
      ReplacePreviousSKUs@1007 : Boolean;
      SaveFilters@1009 : Boolean;
      LocationFilter@1010 : Code[1024];
      VariantFilter@1011 : Code[1024];

    [External]
    PROCEDURE CreateSKUIfRequired@26(VAR Item2@1000 : Record 27;LocationCode@1001 : Code[10];VariantCode@1002 : Code[10]);
    VAR
      IsHandled@1003 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforeCreateSKU(Item2,LocationCode,VariantCode,ItemInInventoryOnly,IsHandled);
      IF IsHandled THEN
        EXIT;

      Item2.CALCFIELDS(Inventory);
      IF (ItemInInventoryOnly AND (Item2.Inventory > 0)) OR
         (NOT ItemInInventoryOnly)
      THEN
        IF NOT StockkeepingUnit.GET(LocationCode,Item2."No.",VariantCode) THEN
          CreateSKU(Item2,LocationCode,VariantCode);
    END;

    [External]
    PROCEDURE InitializeRequest@1(CreatePerOption@1000 : 'Location,Variant,Location & Variant';NewItemInInventoryOnly@1001 : Boolean;NewReplacePreviousSKUs@1002 : Boolean);
    BEGIN
      SKUCreationMethod := CreatePerOption;
      ItemInInventoryOnly := NewItemInInventoryOnly;
      ReplacePreviousSKUs := NewReplacePreviousSKUs;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCreateSKU@3(VAR Item@1000 : Record 27;LocationCode@1002 : Code[10];VariantCode@1001 : Code[10];ItemInInventoryOnly@1003 : Boolean;VAR IsHandled@1004 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeStockkeepingUnitInsert@2(VAR StockkeepingUnit@1000 : Record 5700;Item@1001 : Record 27);
    BEGIN
    END;

    [External]
    PROCEDURE CreateSKU@6(VAR Item2@1003 : Record 27;LocationCode@1002 : Code[10];VariantCode@1001 : Code[10]);
    BEGIN
      StockkeepingUnit.INIT;
      StockkeepingUnit."Item No." := Item2."No.";
      StockkeepingUnit."Location Code" := LocationCode;
      StockkeepingUnit."Variant Code" := VariantCode;
      StockkeepingUnit.CopyFromItem(Item2);
      StockkeepingUnit."Last Date Modified" := WORKDATE;
      StockkeepingUnit."Special Equipment Code" := Item2."Special Equipment Code";
      StockkeepingUnit."Put-away Template Code" := Item2."Put-away Template Code";
      StockkeepingUnit.SetHideValidationDialog(TRUE);
      StockkeepingUnit.VALIDATE("Phys Invt Counting Period Code",Item2."Phys Invt Counting Period Code");
      StockkeepingUnit."Put-away Unit of Measure Code" := Item2."Put-away Unit of Measure Code";
      StockkeepingUnit."Use Cross-Docking" := Item2."Use Cross-Docking";
      OnBeforeStockkeepingUnitInsert(StockkeepingUnit,Item2);
      StockkeepingUnit.INSERT(TRUE);
    END;

    [Integration]
    LOCAL PROCEDURE OnItemOnAfterGetRecordOnAfterSetLocationFilter@4(VAR Location@1001 : Record 14;VAR Item@1000 : Record 27);
    BEGIN
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

