OBJECT Page 769 Aged Acc. Payable Chart
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Aged Accounts Payable;
               NOR=Aldersfordelt saldoliste - leverandõr;
               SVE=Lev.skulder - Ülder];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table23;
    PageType=CardPart;
    ShowFilter=No;
    OnOpenPage=VAR
                 BusChartUserSetup@1000 : Record 487;
               BEGIN
                 BusChartUserSetup.InitSetupPage(PAGE::"Aged Acc. Payable Chart");
                 BusinessChartBuffer."Period Length" := BusChartUserSetup."Period Length";
               END;

    OnAfterGetRecord=BEGIN
                       IF "No." <> xRec."No." THEN BEGIN
                         VendorNo := "No.";
                         UpdateChart;
                       END;
                     END;

    ActionList=ACTIONS
    {
      { 4       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 6       ;1   ;Action    ;
                      Name=DayPeriod;
                      CaptionML=[ENU=Day;
                                 NOR=Dag;
                                 SVE=Dag];
                      ToolTipML=[ENU=View pending payments summed for one day. Overdue payments are shown as amounts on specific days from the due date going back two weeks from today's date.;
                                 NOR=Vis ventende betalinger summert for Çn dag. Forfalte betalinger vises som belõp pÜ bestemte dager fra forfallsdatoen og to uker tilbake fra dagens dato.;
                                 SVE=Visa vÑntande betalningar summerade fîr en dag. Fîrfallna betalningar visas som belopp pÜ specifika dagar, frÜn fîrfallodatumet och tvÜ veckor tillbaka frÜn dagens datum.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=DayEnabled;
                      OnAction=BEGIN
                                 BusinessChartBuffer."Period Length" := BusinessChartBuffer."Period Length"::Day;
                                 UpdatePage;
                               END;
                                }
      { 7       ;1   ;Action    ;
                      Name=WeekPeriod;
                      CaptionML=[ENU=Week;
                                 NOR=Uke;
                                 SVE=Vecka];
                      ToolTipML=[ENU=Show pending payments summed for one week. Overdue payments are shown as amounts within specific weeks from the due date going back three months from today's date.;
                                 NOR=Vis ventende betalinger summert for Çn uke. Forfalte betalinger vises som belõp i bestemte uker fra forfallsdatoen og tre mÜneder tilbake fra dagens dato.;
                                 SVE=Visa vÑntande betalningar summerade fîr en vecka. Fîrfallna betalningar visas som belopp inom specifika veckor, frÜn fîrfallodatumet och tre mÜnader tillbaka frÜn dagens datum.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=WeekEnabled;
                      OnAction=BEGIN
                                 BusinessChartBuffer."Period Length" := BusinessChartBuffer."Period Length"::Week;
                                 UpdatePage;
                               END;
                                }
      { 8       ;1   ;Action    ;
                      Name=MonthPeriod;
                      CaptionML=[ENU=Month;
                                 NOR=MÜned;
                                 SVE=MÜnad];
                      ToolTipML=[ENU=View pending payments summed for one month. Overdue payments are shown as amounts within specific months from the due date going back one year from today's date.;
                                 NOR=Vis ventende betalinger summert for Çn mÜned. Forfalte betalinger vises som belõp i bestemte mÜneder fra forfallsdatoen og ett Ür tilbake fra dagens dato.;
                                 SVE=Visa vÑntande betalningar summerade fîr en mÜnad. Fîrfallna betalningar visas som belopp inom specifika mÜnader, frÜn fîrfallodatumet och ett Ür tillbaka frÜn dagens datum.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=MonthEnabled;
                      OnAction=BEGIN
                                 BusinessChartBuffer."Period Length" := BusinessChartBuffer."Period Length"::Month;
                                 UpdatePage;
                               END;
                                }
      { 9       ;1   ;Action    ;
                      Name=QuarterPeriod;
                      CaptionML=[ENU=Quarter;
                                 NOR=Kvartal;
                                 SVE=Kvartal];
                      ToolTipML=[ENU=Show pending payments summed for one quarter. Overdue payments are shown as amounts within specific quarters from the due date going back three years from today's date.;
                                 NOR=Vis ventende betalinger summert for ett kvartal. Forfalte betalinger vises som belõp i bestemte kvartaler fra forfallsdatoen og tre Ür tilbake fra dagens dato.;
                                 SVE=Visa vÑntande betalningar summerade fîr ett kvartal. Fîrfallna betalningar visas som belopp inom specifika kvartal, frÜn fîrfallodatumet och tre Ür tillbaka frÜn dagens datum.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=QuarterEnabled;
                      OnAction=BEGIN
                                 BusinessChartBuffer."Period Length" := BusinessChartBuffer."Period Length"::Quarter;
                                 UpdatePage;
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=YearPeriod;
                      CaptionML=[ENU=Year;
                                 NOR=èr;
                                 SVE=èr];
                      ToolTipML=[ENU=Show pending payments summed for one year. Overdue payments are shown as amounts within specific years from the due date going back five years from today's date.;
                                 NOR=Vis ventende betalinger summert for ett Ür. Forfalte betalinger vises som belõp i bestemte Ür fra forfallsdatoen og fem Ür tilbake fra dagens dato.;
                                 SVE=Visa vÑntande betalningar summerade fîr ett Ür. Fîrfallna betalningar visas som belopp inom specifika Ür, frÜn fîrfallodatumet och fem Ür tillbaka frÜn dagens datum.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=YearEnabled;
                      OnAction=BEGIN
                                 BusinessChartBuffer."Period Length" := BusinessChartBuffer."Period Length"::Year;
                                 UpdatePage;
                               END;
                                }
      { 12      ;1   ;Action    ;
                      Name=All;
                      CaptionML=[ENU=All;
                                 NOR=Alle;
                                 SVE=Alla];
                      ToolTipML=[ENU=Show all accounts receivable in two columns, one with amounts not overdue and one with all overdue amounts.;
                                 NOR=Vis alle kortsiktige fordringer i to kolonner, Çn med ikke-forfalte belõp og Çn med alle forfalte belõp.;
                                 SVE=Visa alla kundfordringar i tvÜ kolumner. En kolumn med ej fîrfallna belopp och en kolumn med alla fîrfallna belopp.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=AllEnabled;
                      OnAction=BEGIN
                                 BusinessChartBuffer."Period Length" := BusinessChartBuffer."Period Length"::None;
                                 UpdatePage;
                               END;
                                }
      { 5       ;1   ;Separator  }
      { 11      ;1   ;Action    ;
                      Name=ChartInformation;
                      CaptionML=[ENU=Chart Information;
                                 NOR=Diagraminformasjon;
                                 SVE=Diagraminformation];
                      ToolTipML=[ENU=View a description of the chart.;
                                 NOR=Vis en beskrivelse av diagrammet.;
                                 SVE=Visa en beskrivning av diagrammet.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Info;
                      OnAction=BEGIN
                                 MESSAGE(AgedAccPayable.Description(TRUE));
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=ChartContainer;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                ToolTipML=[ENU=Specifies the status of the chart.;
                           NOR=Angir statusen til diagrammet.;
                           SVE=Anger diagrammets status.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=StatusText;
                Editable=FALSE;
                ShowCaption=No }

    { 3   ;1   ;Field     ;
                Name=BusinessChart;
                ToolTipML=;
                ApplicationArea=#Basic,#Suite;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35] }

  }
  CODE
  {
    VAR
      BusinessChartBuffer@1004 : Record 485;
      TempEntryNoAmountBuf@1012 : TEMPORARY Record 386;
      AgedAccPayable@1011 : Codeunit 764;
      isInitialized@1003 : Boolean;
      StatusText@1005 : Text;
      DayEnabled@1006 : Boolean;
      WeekEnabled@1007 : Boolean;
      MonthEnabled@1008 : Boolean;
      QuarterEnabled@1009 : Boolean;
      YearEnabled@1010 : Boolean;
      AllEnabled@1000 : Boolean;
      VendorNo@1002 : Code[20];
      UpdatedVendorNo@1013 : Code[20];

    LOCAL PROCEDURE Initialize@4();
    BEGIN
      isInitialized := TRUE;
      UpdatePage;
    END;

    LOCAL PROCEDURE UpdatePage@2();
    BEGIN
      EnableActions;
      UpdateStatusText;
      UpdateChart;
      SavePeriodSelection;
    END;

    LOCAL PROCEDURE UpdateChart@1();
    BEGIN
      IF NOT isInitialized THEN
        EXIT;

      IF VendorNo = '' THEN
        EXIT;

      IF UpdatedVendorNo = VendorNo THEN
        EXIT;

      BusinessChartBuffer."Period Filter Start Date" := WORKDATE;
      AgedAccPayable.UpdateDataPerVendor(BusinessChartBuffer,VendorNo,TempEntryNoAmountBuf);
      BusinessChartBuffer.Update(CurrPage.BusinessChart);
      UpdatedVendorNo := VendorNo;
    END;

    LOCAL PROCEDURE SavePeriodSelection@15();
    VAR
      BusChartUserSetup@1000 : Record 487;
    BEGIN
      BusChartUserSetup."Period Length" := BusinessChartBuffer."Period Length";
      BusChartUserSetup.SaveSetupPage(BusChartUserSetup,PAGE::"Aged Acc. Payable Chart");
    END;

    LOCAL PROCEDURE EnableActions@3();
    VAR
      IsDay@1001 : Boolean;
      IsWeek@1002 : Boolean;
      IsMonth@1003 : Boolean;
      IsQuarter@1004 : Boolean;
      IsYear@1005 : Boolean;
      IsAnyPeriod@1000 : Boolean;
    BEGIN
      IsAnyPeriod := BusinessChartBuffer."Period Length" = BusinessChartBuffer."Period Length"::None;
      IsDay := BusinessChartBuffer."Period Length" = BusinessChartBuffer."Period Length"::Day;
      IsWeek := BusinessChartBuffer."Period Length" = BusinessChartBuffer."Period Length"::Week;
      IsMonth := BusinessChartBuffer."Period Length" = BusinessChartBuffer."Period Length"::Month;
      IsQuarter := BusinessChartBuffer."Period Length" = BusinessChartBuffer."Period Length"::Quarter;
      IsYear := BusinessChartBuffer."Period Length" = BusinessChartBuffer."Period Length"::Year;

      DayEnabled := (NOT IsDay AND isInitialized) OR IsAnyPeriod;
      WeekEnabled := (NOT IsWeek AND isInitialized) OR IsAnyPeriod;
      MonthEnabled := (NOT IsMonth AND isInitialized) OR IsAnyPeriod;
      QuarterEnabled := (NOT IsQuarter AND isInitialized) OR IsAnyPeriod;
      YearEnabled := (NOT IsYear AND isInitialized) OR IsAnyPeriod;
      AllEnabled := (NOT IsAnyPeriod) AND isInitialized;
    END;

    LOCAL PROCEDURE UpdateStatusText@5();
    BEGIN
      StatusText := AgedAccPayable.UpdateStatusText(BusinessChartBuffer);
    END;

    PROCEDURE UpdateChartForVendor@6(NewVendorNo@1000 : Code[20]);
    BEGIN
      VendorNo := NewVendorNo;
      UpdateChart;
    END;

    EVENT BusinessChart@-3::DataPointClicked@1(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
      BusinessChartBuffer.SetDrillDownIndexes(point);
      AgedAccPayable.DrillDown(BusinessChartBuffer,VendorNo,TempEntryNoAmountBuf);
    END;

    EVENT BusinessChart@-3::DataPointDoubleClicked@2(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT BusinessChart@-3::AddInReady@3();
    BEGIN
      Initialize;
    END;

    EVENT BusinessChart@-3::Refresh@4();
    BEGIN
      UpdatePage;
    END;

    BEGIN
    END.
  }
}

