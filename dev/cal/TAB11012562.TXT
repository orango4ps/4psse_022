OBJECT Table 11012562 Inspection Type
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Inspection Type;
               NOR=Inspeksjonstype;
               SVE=Inspektionstyp];
    LookupPageID=Page11012570;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 20  ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                IF ("Search Name" = UPPERCASE(xRec.Description)) OR ("Search Name" = '') THEN
                                                                  "Search Name" := Description;
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 30  ;   ;Search Name         ;Code50        ;CaptionML=[ENU=Search Name;
                                                              NOR=Sõkenavn;
                                                              SVE=Sîknamn] }
    { 35  ;   ;Inspection Based on ;Option        ;OnValidate=BEGIN
                                                                IF "Inspection Based on" <> "Inspection Based on"::Both THEN BEGIN
                                                                  IF "Inspection Based on" = "Inspection Based on"::Time THEN BEGIN
                                                                    TESTFIELD("Inspection Interval", 0);
                                                                    TESTFIELD("Meter Reading Type", '');
                                                                  END;
                                                                  IF "Inspection Based on" = "Inspection Based on"::Quantity THEN BEGIN
                                                                    TESTFIELD("Inspect per", 0);
                                                                    "Aut. Approval for Shipment" := FALSE;
                                                                  END;
                                                                END;
                                                                CheckResetLimitWarning();
                                                              END;

                                                   CaptionML=ENU=Inspection Based on;
                                                   OptionCaptionML=[ENU=Time,Quantity,Both;
                                                                    SVE=Tid,Antal,BÜda];
                                                   OptionString=Time,Quantity,Both }
    { 40  ;   ;Inspect per         ;Integer       ;OnValidate=BEGIN
                                                                //DP00614
                                                                IF "Inspect per" <> 0 THEN BEGIN
                                                                  IF "Inspection Based on" = "Inspection Based on"::Quantity THEN
                                                                    FIELDERROR("Inspection Based on");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Inspect per;
                                                              NOR=Inspiser per;
                                                              SVE=Inspektera per];
                                                   MinValue=0 }
    { 50  ;   ;Period Length       ;Option        ;CaptionML=[ENU=Period Length;
                                                              NOR=Periodelengde;
                                                              SVE=Period];
                                                   OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year;
                                                                    NOR=Dag,Uke,MÜned,Kvartal,èr;
                                                                    SVE=Dag,Vecka,MÜnad,Kvartal,èr];
                                                   OptionString=Day,Week,Month,Quarter,Year }
    { 60  ;   ;Meter Reading Type  ;Code10        ;TableRelation="Plant Meter Reading Type";
                                                   OnValidate=BEGIN
                                                                IF "Meter Reading Type" = '' THEN
                                                                  TESTFIELD("Inspection Interval", 0)
                                                                ELSE BEGIN
                                                                  IF "Inspection Based on" = "Inspection Based on"::Time THEN
                                                                    FIELDERROR("Inspection Based on");
                                                                END;

                                                                CALCFIELDS("Unit of Measure");
                                                              END;

                                                   CaptionML=ENU=Meter Reading Type }
    { 61  ;   ;Unit of Measure     ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Meter Reading Type"."Unit of Measure" WHERE (Code=FIELD(Meter Reading Type)));
                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=Enhet;
                                                              SVE=MÜttenhet];
                                                   Editable=No }
    { 65  ;   ;Inspection Interval ;Decimal       ;OnValidate=BEGIN
                                                                IF "Inspection Interval" <> 0 THEN BEGIN
                                                                  IF "Inspection Based on" = "Inspection Based on"::Time THEN
                                                                    FIELDERROR("Inspection Based on");
                                                                  TESTFIELD("Meter Reading Type");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Inspection Interval;
                                                   DecimalPlaces=0:0;
                                                   MinValue=0 }
    { 70  ;   ;Inspection Vendor   ;Code20        ;TableRelation=Vendor.No.;
                                                   CaptionML=[ENU=Inspection Vendor;
                                                              NOR=Inspeksjonsleverandõr;
                                                              SVE=Inspektionsleverantîr] }
    { 80  ;   ;Text                ;Text250       ;CaptionML=[ENU=Text;
                                                              NOR=Tekst;
                                                              SVE=BenÑmning] }
    { 90  ;   ;Lifetime            ;DateFormula   ;CaptionML=[ENU=Lifetime;
                                                              NOR=Levetid;
                                                              SVE=Livstid] }
    { 100 ;   ;Inspection Warning  ;Boolean       ;OnValidate=BEGIN
                                                                CheckResetLimitWarning();
                                                              END;

                                                   CaptionML=[ENU=Inspection Warning;
                                                              NOR=Inspeksjonsadvarsel;
                                                              SVE=Inspektionsvarning] }
    { 102 ;   ;Aut. Approval for Shipment;Boolean ;OnValidate=BEGIN
                                                                //DP00614
                                                                IF "Aut. Approval for Shipment" THEN BEGIN
                                                                  IF "Inspection Based on" = "Inspection Based on"::Quantity THEN
                                                                    FIELDERROR("Inspection Based on");
                                                                END;

                                                                CheckResetLimitWarning();
                                                              END;

                                                   CaptionML=[ENU=Aut. Approval for Shipment;
                                                              NOR=Automatisk Godkjenning for Forsendelse;
                                                              SVE=Beh. GodkÑnnande fîr utleverans] }
    { 105 ;   ;Time Limit Warning  ;DateFormula   ;OnValidate=BEGIN
                                                                CheckResetLimitWarning();
                                                              END;

                                                   CaptionML=[ENU=Time Limit Warning;
                                                              NOR=Tidsbegrensning, Advarsel;
                                                              SVE=TidsgrÑns, varning] }
    { 110 ;   ;Interval Limit Warning;Decimal     ;OnValidate=BEGIN
                                                                CheckResetLimitWarning();
                                                              END;

                                                   CaptionML=ENU=Interval Limit Warning;
                                                   DecimalPlaces=0:0;
                                                   MinValue=0 }
    { 120 ;   ;Upd. Inspection from SO Maint.;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Update Inspection from SO Maintenance }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100525000 : TextConst 'ENU=Inspection Type ''%1'' is still present on Plant Type(s).;NOR=Inspeksjonstype ''%1'' finnes allerede pÜ maskintype(r).;SVE=Inspektionstyp ''%1'' finns redan pÜ Maskinstyp(er).';
      Text002@1100525001 : TextConst 'ENU=There are still open inspection(s) of Inspection Typetype''.;NOR=Det finnes fortsatt Üpne inspeksjoner av Inspeksjonstypen.;SVE=Det finns fortfarande îppna inspektioner av inspektionstypen.';
      Text003@1100525002 : TextConst 'ENU=Are you sure you want to delete Inspection Type ''%1'' ?;NOR=Er du sikker pÜ Ü du vil fjerne Inspeksjonstype ''%1'' ?;SVE=ér du sÑker pÜ att du vill ta bort inspektionstyp ''%1'' ?';

    LOCAL PROCEDURE CheckResetLimitWarning@1100485002();
    BEGIN
      //DP00614.c
      IF (FORMAT("Time Limit Warning") <> '') AND
         (("Inspection Based on" = "Inspection Based on"::Quantity) OR
          ((NOT "Inspection Warning") AND (NOT "Aut. Approval for Shipment")))
      THEN
        CLEAR("Time Limit Warning");
      IF ("Interval Limit Warning" <> 0) AND
         (("Inspection Based on" = "Inspection Based on"::Time) OR (NOT "Inspection Warning"))
      THEN
        "Interval Limit Warning" := 0;
    END;

    PROCEDURE ConfirmOnDelete@1100525000();
    VAR
      lvPlantTypeInspecTypeRec@1100525000 : Record 11012563;
      lvPlantInspectionRec@1100525001 : Record 11012564;
      lvText@1100525002 : Text[500];
    BEGIN
      lvPlantTypeInspecTypeRec.SETRANGE("Inspection Type", Code);
      IF lvPlantTypeInspecTypeRec.FINDFIRST THEN
        lvText := Text001;

      lvPlantInspectionRec.SETRANGE("Inspection Type", Code);
      lvPlantInspectionRec.SETRANGE("Inspection Result", lvPlantInspectionRec."Inspection Result"::" ");
      IF lvPlantInspectionRec.FINDFIRST THEN BEGIN
        IF lvText <> '' THEN
          lvText := lvText + '\';
        lvText := lvText + Text002;
      END;

      IF lvText <> '' THEN BEGIN
        lvText := lvText + ' \ \' + STRSUBSTNO(Text003, Code);
        IF NOT CONFIRM(lvText) THEN
          ERROR('');
      END;
    END;

    BEGIN
    END.
  }
}

