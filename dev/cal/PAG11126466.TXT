OBJECT Page 11126466 Open Workload by Serv. Loc.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=Offene T„tigkeiten nach Servicestandort;
               ENU=Open Workload by Service Location;
               NLD=Openstaande werkzaamheden per servicelocatie];
    SourceTable=Table11071977;
    PageType=List;
    SourceTableTemporary=Yes;
    OnAfterGetRecord=VAR
                       ServiceOrder@1100528600 : Record 11012823;
                     BEGIN
                       IF Type = Type::"Service Order" THEN BEGIN
                         ServiceOrder.COPY(ExcludeServiceOrder);
                         ServiceOrder.FILTERGROUP(7);
                         ServiceOrder.SETFILTER("No.", Code);
                         ServiceOrder.FILTERGROUP(0);
                         InCurrentServiceOrderDS := NOT ServiceOrder.ISEMPTY;
                       END ELSE
                         InCurrentServiceOrderDS := FALSE;
                     END;

    ActionList=ACTIONS
    {
      { 1100528615;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528616;1 ;Action    ;
                      CaptionML=[DEU=Serviceauftr„ge erstellen;
                                 ENU=Create Service Orders;
                                 NLD=Serviceorders aanmaken;
                                 NOR=Opprette serviceordre;
                                 SVE=Skapa serviceorder];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrderPlanManagement@1100528601 : Codeunit 11012868;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(Rec);
                                 ServiceOrderPlanManagement.CreateServiceOrdersForOpenWorkloadLines(Rec);
                                 ServiceOrderPlanManagement.BuildOpenWorkloadByServiceLocation(ServiceLocation, WindowInDays, ExcludeServiceOrder, Rec);
                                 IF FINDFIRST THEN;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100528618;1 ;Action    ;
                      CaptionML=[DEU=Serviceauftr„ge (neu) planen;
                                 ENU=(Re)Plan Service Orders;
                                 NLD=Serviceorders (her)plannen];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Replan;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TmpOpenWorkloadbyServLoc@1100528600 : TEMPORARY Record 11071977;
                                 OrigTmpOpenWorkloadbyServLoc@1100528603 : TEMPORARY Record 11071977;
                                 ServiceOrder@1100528602 : Record 11012823;
                                 ReplanServiceOrder@1100528601 : Page 11126465;
                               BEGIN
                                 OrigTmpOpenWorkloadbyServLoc.COPY(Rec, TRUE);
                                 CurrPage.SETSELECTIONFILTER(Rec);
                                 TmpOpenWorkloadbyServLoc.COPY(Rec, TRUE);
                                 Rec.COPY(OrigTmpOpenWorkloadbyServLoc, TRUE);
                                 TmpOpenWorkloadbyServLoc.SETFILTER(Type, '<>%1', TmpOpenWorkloadbyServLoc.Type::"Service Order");
                                 IF NOT TmpOpenWorkloadbyServLoc.ISEMPTY THEN
                                   ERROR(Text000);
                                 TmpOpenWorkloadbyServLoc.SETRANGE(Type);
                                 IF NOT TmpOpenWorkloadbyServLoc.FINDSET THEN
                                   ERROR(Text001);
                                 REPEAT
                                   ServiceOrder."No." := TmpOpenWorkloadbyServLoc.Code;
                                   ServiceOrder.MARK(TRUE);
                                 UNTIL TmpOpenWorkloadbyServLoc.NEXT = 0;
                                 ServiceOrder.MARKEDONLY(TRUE);
                                 ReplanServiceOrder.SetReplanData(ServiceOrder, TODAY, 1, 0, TRUE, FALSE, TRUE, TRUE);
                                 ReplanServiceOrder.RUNMODAL;
                                 SetOpenWorkloadData(ServiceLocation, ExcludeServiceOrder, WindowInDays);
                               END;
                                }
      { 1100528632;1 ;Action    ;
                      CaptionML=[DEU=Serviceauftrag Karte;
                                 ENU=Service Order Card;
                                 NLD=Serviceorderkaart;
                                 NOR=Serviceordrekort;
                                 SVE=Serviceorderkort];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Card;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1100528600 : Record 11012823;
                               BEGIN
                                 TESTFIELD(Type, Type::"Service Order");
                                 ServiceOrder.GET(Code);
                                 ServiceOrder.ShowServiceOrderCard;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528600;0;Container;
                ContainerType=ContentArea }

    { 1100528601;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528602;2;Field  ;
                SourceExpr="Service Location No." }

    { 1100528603;2;Field  ;
                SourceExpr=Type }

    { 1100528604;2;Field  ;
                SourceExpr=Code;
                Style=Strong;
                StyleExpr=InCurrentServiceOrderDS }

    { 1100528605;2;Field  ;
                SourceExpr="Service Object No.";
                OnLookup=VAR
                           ServiceOrderObject@1100528600 : Record 11071724;
                         BEGIN
                           IF Type = Type::"Service Order" THEN BEGIN
                             ServiceOrderObject.SETRANGE("Service Order No.", Code);
                             PAGE.RUNMODAL(0, ServiceOrderObject);
                           END;
                         END;
                          }

    { 1100528621;2;Field  ;
                SourceExpr="Service Object Description" }

    { 1100528606;2;Field  ;
                SourceExpr="Maintenance Scheme" }

    { 1100528607;2;Field  ;
                SourceExpr="Line No." }

    { 1100528731;2;Field  ;
                SourceExpr=Description }

    { 1100528613;2;Field  ;
                SourceExpr="Starting Date" }

    { 1100528614;2;Field  ;
                SourceExpr="Starting Time" }

    { 1100528617;2;Field  ;
                SourceExpr="Duration Time" }

    { 1100528633;2;Field  ;
                SourceExpr="First Possible Starting Date" }

    { 1100528634;2;Field  ;
                SourceExpr="First Possible Starting Time" }

    { 1100528635;2;Field  ;
                SourceExpr="Last Possible Ending Date" }

    { 1100528636;2;Field  ;
                SourceExpr="Last Possible Ending Time" }

    { 1100528608;2;Field  ;
                SourceExpr=Address }

    { 1100528609;2;Field  ;
                SourceExpr="Address 2" }

    { 1100528610;2;Field  ;
                SourceExpr="Post Code" }

    { 1100528611;2;Field  ;
                SourceExpr=City }

    { 1100528612;2;Field  ;
                SourceExpr="Territory Code" }

    { 1100528619;2;Field  ;
                SourceExpr=Discipline }

    { 1100528620;2;Field  ;
                SourceExpr="Trade Speciality" }

    { 1100528622;2;Field  ;
                SourceExpr="Employee No." }

    { 1100528623;2;Field  ;
                SourceExpr="Employee Name" }

    { 1100528624;2;Field  ;
                SourceExpr="Order Type" }

    { 1100528628;2;Field  ;
                SourceExpr="Order Type Description" }

    { 1100528625;2;Field  ;
                SourceExpr=Problem }

    { 1100528629;2;Field  ;
                SourceExpr="Problem Description" }

    { 1100528626;2;Field  ;
                SourceExpr="Actual Reference Point" }

    { 1100528630;2;Field  ;
                SourceExpr="Reference Point Description" }

    { 1100528627;2;Field  ;
                SourceExpr="On Hold" }

    { 1100528631;2;Field  ;
                SourceExpr="Firm Planned" }

  }
  CODE
  {
    VAR
      ExcludeServiceOrder@1100528602 : Record 11012823;
      ServiceLocation@1100528600 : Record 11012801;
      WindowInDays@1100528601 : Integer;
      InCurrentServiceOrderDS@1100528603 : Boolean INDATASET;
      Text000@1100528604 : TextConst 'DEU=Die ausgew„hlten Zeilen enthalten Zeilen, die keine Serviceauftr„ge sind;ENU=Selected Lines contain lines which are not Service Orders;NLD=Geselecteerde regels bevatten regels welke geen serviceorders zijn';
      Text001@1100528605 : TextConst 'DEU=Keine Zeilen ausgew„hlt;ENU=No Lines Selected;NLD=Geen regels geselecteerd';

    PROCEDURE SetOpenWorkloadData@1100528600(VAR IServiceLocation@1100528600 : Record 11012801;VAR IExcludeServiceOrder@1100528603 : Record 11012823;IWindowInDays@1100528601 : Integer);
    VAR
      ServiceOrderPlanManagement@1100528602 : Codeunit 11012868;
    BEGIN
      ServiceLocation.COPY(IServiceLocation);
      WindowInDays := IWindowInDays;
      ExcludeServiceOrder.COPY(IExcludeServiceOrder);
      ServiceOrderPlanManagement.BuildOpenWorkloadByServiceLocation(ServiceLocation, WindowInDays, ExcludeServiceOrder, Rec);
      IF FINDFIRST THEN;
    END;

    PROCEDURE GetSelectedServiceOrderDS@1100528601(VAR OServiceOrder@1100528600 : Record 11012823);
    BEGIN
      OServiceOrder.RESET;
      CurrPage.SETSELECTIONFILTER(Rec);
      SETRANGE(Type, Type::"Service Order");
      IF FINDSET THEN
        REPEAT
          OServiceOrder."No." := Code;
          OServiceOrder.MARK(TRUE);
        UNTIL NEXT = 0;
      OServiceOrder.MARKEDONLY(TRUE);
    END;

    BEGIN
    END.
  }
}

