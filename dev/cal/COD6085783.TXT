OBJECT Codeunit 6085783 CEM Database Trigger
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.3.00;
  }
  PROPERTIES
  {
    Permissions=TableData 6086345=rimd;
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TempChangeLogSetupTable@1160040000 : TEMPORARY Record 403;
      ContiniaUserMgt@1160040001 : Codeunit 6085781;

    PROCEDURE GetTableTriggerSetup@1(TableID@1000 : Integer;VAR RunInsert@1001 : Boolean;VAR RunModify@1002 : Boolean;VAR RunDelete@1003 : Boolean;VAR RunRename@1004 : Boolean);
    VAR
      FieldType@1160040000 : Record 6086345;
    BEGIN
      IF TableID = DATABASE::"Change Log Entry" THEN
        EXIT;

      IF ContiniaUserMgt.IsLimitedUser(USERID) THEN
        EXIT;

      IF COMPANYNAME = '' THEN
        EXIT;

      CASE TableID OF
        DATABASE::"Bank Account":
          RunModify := TRUE;

        DATABASE::Vendor:
          RunModify := TRUE;
      END;

      IF NOT TempChangeLogSetupTable.GET(TableID) THEN BEGIN
        TempChangeLogSetupTable.INIT;
        TempChangeLogSetupTable."Table No." := TableID;

        FieldType.SETRANGE("Source Table No.",TableID);
        IF NOT FieldType.ISEMPTY THEN BEGIN
          TempChangeLogSetupTable."Log Insertion" := TempChangeLogSetupTable."Log Insertion"::"All Fields";
          TempChangeLogSetupTable."Log Modification" := TempChangeLogSetupTable."Log Modification"::"All Fields";
          TempChangeLogSetupTable."Log Deletion" := TempChangeLogSetupTable."Log Deletion"::"All Fields";
        END;

        TempChangeLogSetupTable.INSERT;
      END;

      RunInsert := RunInsert OR (TempChangeLogSetupTable."Log Insertion" = TempChangeLogSetupTable."Log Insertion"::"All Fields");
      RunModify := RunModify OR (TempChangeLogSetupTable."Log Modification" = TempChangeLogSetupTable."Log Modification"::"All Fields");
      RunDelete := RunDelete OR (TempChangeLogSetupTable."Log Deletion" = TempChangeLogSetupTable."Log Deletion"::"All Fields");
      RunRename := RunRename OR RunModify;
    END;

    PROCEDURE Insert@1160040007(VAR RecRef@1160040001 : RecordRef) : Boolean;
    BEGIN
      IF RecRef.ISTEMPORARY THEN
        EXIT;

      IF ContiniaUserMgt.IsLimitedUser(USERID) THEN
        EXIT;

      MarkTableForUpdate(RecRef.NUMBER);
    END;

    PROCEDURE Modify@1160040006(VAR RecRef@1160040001 : RecordRef) : Boolean;
    BEGIN
      IF RecRef.ISTEMPORARY THEN
        EXIT;

      IF ContiniaUserMgt.IsLimitedUser(USERID) THEN
        EXIT;

      MarkTableForUpdate(RecRef.NUMBER);

      CASE RecRef.NUMBER OF
        DATABASE::"Bank Account",DATABASE::Vendor:
          CheckPostedTransaction(RecRef);
      END;
    END;

    PROCEDURE Delete@1160040005(VAR RecRef@1160040001 : RecordRef) : Boolean;
    BEGIN
      IF RecRef.ISTEMPORARY THEN
        EXIT;

      IF ContiniaUserMgt.IsLimitedUser(USERID) THEN
        EXIT;

      MarkTableForUpdate(RecRef.NUMBER);
    END;

    PROCEDURE Rename@1160040003(VAR RecRef@1160040003 : RecordRef;VAR xRecRef@1160040000 : RecordRef) : Boolean;
    BEGIN
      IF RecRef.ISTEMPORARY THEN
        EXIT;

      IF ContiniaUserMgt.IsLimitedUser(USERID) THEN
        EXIT;

      MarkTableForUpdate(RecRef.NUMBER);
    END;

    LOCAL PROCEDURE MarkTableForUpdate@1160040000(TableID@1160040000 : Integer);
    VAR
      FieldType@1160040001 : Record 6086345;
    BEGIN
      FieldType.SETRANGE("Source Table No.",TableID);
      IF FieldType.FINDFIRST THEN BEGIN
        FieldType."Last Update Date/Time" := CURRENTDATETIME;
        FieldType.MODIFY;
      END;
    END;

    PROCEDURE GetTableTriggerMask@1160040001(VAR tableId@1160040000 : Integer) : Integer;
    BEGIN
      EXIT(0);
    END;

    LOCAL PROCEDURE CheckPostedTransaction@1160040002(VAR RecRef@1160040001 : RecordRef);
    VAR
      Vendor@1160040004 : Record 23;
      BankAccount@1160040003 : Record 270;
      EMSetup@1160040000 : Record 6086300;
      UserCreditCard@1160040005 : Record 6086311;
      RecRef2@1160040006 : RecordRef;
      FldRef@1160040002 : FieldRef;
      FldRef2@1160040007 : FieldRef;
    BEGIN
      IF NOT EMSetup.GET THEN
        EXIT;

      IF NOT RecRef2.GET(RecRef.RECORDID) THEN
        EXIT;

      CASE RecRef.NUMBER OF
        DATABASE::"Bank Account":
          BEGIN
            FldRef := RecRef.FIELD(BankAccount.FIELDNO("Currency Code"));
            FldRef2 := RecRef2.FIELD(BankAccount.FIELDNO("Currency Code"));
            IF FldRef.VALUE = FldRef2.VALUE THEN
              EXIT;

            FldRef := RecRef.FIELD(BankAccount.FIELDNO("No."));
            UserCreditCard.SETRANGE("Account Type",UserCreditCard."Account Type"::"Bank Account");
            UserCreditCard.SETRANGE("Account No.",FORMAT(FldRef.VALUE));
          END;

        DATABASE::Vendor:
          BEGIN
            FldRef := RecRef.FIELD(BankAccount.FIELDNO("Currency Code"));
            FldRef2 := RecRef2.FIELD(BankAccount.FIELDNO("Currency Code"));
            IF FldRef.VALUE = FldRef2.VALUE THEN
              EXIT;

            FldRef := RecRef.FIELD(Vendor.FIELDNO("No."));
            UserCreditCard.SETRANGE("Account Type",UserCreditCard."Account Type"::Vendor);
            UserCreditCard.SETRANGE("Account No.",FORMAT(FldRef.VALUE));
          END;

        ELSE
          EXIT;

      END;

      IF UserCreditCard.FINDSET THEN
        REPEAT
          UserCreditCard.FailIfIncompletedBankTrans(
            UserCreditCard."Card No.",UserCreditCard."Continia User ID",EMSetup."Post Bank Trans. on Import");
        UNTIL UserCreditCard.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

