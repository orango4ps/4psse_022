OBJECT XMLport 11012161 Export CUF-XML
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Export CUF-XML;
               SVE=Exportera CUF-XML];
    Direction=Export;
    Format/Evaluate=XML Format/Evaluate;
  }
  ELEMENTS
  {
    { [{CDEC3967-EEA9-4AD9-8CF1-33AF387297E9}];  ;CUF                 ;Element ;Text     }

    { [{29804FD9-DC91-4C2D-BEBF-203AA8F1FE9D}];1 ;AANMAAKDATUMTIJD    ;Attribute;Text   ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 AANMAAKDATUMTIJD := XMLFormat.FormatDateAndTime(TODAY, TIME);
                                                                               END;
                                                                                }

    { [{ED96A236-63D6-485C-930F-E2DC949052DE}];1 ;PROJECTGEGEVENS     ;Element ;Table   ;
                                                  SourceTable=Table11012151;
                                                  Export::OnAfterGetRecord=BEGIN
                                                                             Estimate2.SETRANGE("No.", Estimate."No.");
                                                                             "Summary Sheet".SETRANGE(Summary, SummarySheetNo);

                                                                             FillTmpDimensionValue(Estimate."No.");
                                                                           END;
                                                                            }

    { [{F9DDD846-D09F-470E-B36E-03F96B0BF98A}];2 ;CUF_VERSIE          ;Attribute;Text   ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 CUF_VERSIE := '4.003';
                                                                               END;
                                                                                }

    { [{9BC4A5D8-EDDF-4CF4-8092-4CA370F72596}];2 ;SYSTEEMHUIS         ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{885FE362-CE5C-4C7B-A532-9AE65B5B406E}];2 ;AANMAAKDATUM        ;Attribute;Field  ;
                                                  DataType=Date;
                                                  SourceField=Estimate::Creation Date }

    { [{7C7FB54C-7B43-4021-8842-4D55F6C0934A}];2 ;PROJECTNUMMER       ;Attribute;Field  ;
                                                  DataType=Code;
                                                  SourceField=Estimate::No.;
                                                  Occurrence=Optional }

    { [{44154C00-38A0-407C-A0B0-53ACD8F1793B}];2 ;PROJECTNAAM         ;Attribute;Field  ;
                                                  DataType=Text;
                                                  SourceField=Estimate::Description;
                                                  Occurrence=Optional }

    { [{70B87DFF-F428-4219-85B9-7C8CC0AA4806}];2 ;CALCULATOR          ;Attribute;Field  ;
                                                  DataType=Text;
                                                  SourceField=Estimate::Name Estimator;
                                                  Occurrence=Optional }

    { [{04B00C7B-7EFA-4C4E-9FF5-8E595F29A5BA}];2 ;OPDRACHTGEVER       ;Attribute;Field  ;
                                                  DataType=Text;
                                                  SourceField=Estimate::Customer Name;
                                                  Occurrence=Optional }

    { [{DAE57EBE-71CE-412A-8A71-9D0772026E2E}];2 ;VALUTA              ;Attribute;Text   ;
                                                  Export::OnBeforePassVariable=VAR
                                                                                 GeneralLedgerSetup@1210190000 : Record 98;
                                                                               BEGIN
                                                                                 GeneralLedgerSetup.GET;
                                                                                 VALUTA := GeneralLedgerSetup."LCY Code";
                                                                               END;
                                                                                }

    { [{E0D7A148-5950-4E3C-A6E9-DD74E0C55EFF}];1 ;SORTEERCODES        ;Element ;Text     }

    { [{CD9EECF6-3E0C-4B30-A556-9BB2B7A02E3D}];2 ;SORTERING           ;Attribute;Text   ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 SORTERING := 'BEWAKINGSCODE';
                                                                               END;
                                                                                }

    { [{588DB414-E950-447A-B6D9-1913D660B5E7}];2 ;FUNCTIE             ;Attribute;Text   ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 FUNCTIE := Text000;
                                                                               END;
                                                                                }

    { [{39BA16DB-7913-44C5-9EF9-B5C1C5DD4A55}];2 ;SORTEERCODE_REGEL   ;Element ;Table   ;
                                                  SourceTable=Table2000000026;
                                                  Export::OnPreXMLItem=BEGIN
                                                                         IF TmpDimensionValue.COUNT = 0 THEN
                                                                           currXMLport.BREAK
                                                                         ELSE
                                                                           Integer.SETRANGE(Number, 1, TmpDimensionValue.COUNT);
                                                                       END;

                                                  Export::OnAfterGetRecord=BEGIN
                                                                             IF Integer.Number = 1 THEN
                                                                               TmpDimensionValue.FINDFIRST
                                                                             ELSE
                                                                               TmpDimensionValue.NEXT;
                                                                           END;
                                                                            }

    { [{7C1880A4-620E-420B-8336-CBC22CEEB458}];3 ;CODE                ;Attribute;Text   ;
                                                  VariableName=CODE_SORTCODE_REGEL;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 CODE_SORTCODE_REGEL := TmpDimensionValue.Code;
                                                                               END;
                                                                                }

    { [{EF9C32F9-0990-4D63-A667-A870C5BFC81D}];3 ;OMSCHRIJVING        ;Attribute;Text   ;
                                                  VariableName=OMSCHRIJVING_SORTCODE_REGEL;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 OMSCHRIJVING_SORTCODE_REGEL := TmpDimensionValue.Name;
                                                                               END;
                                                                                }

    { [{929CB7E9-1FA6-49D3-91EB-AA9B22152425}];3 ;EENHEID             ;Attribute;Text   ;
                                                  VariableName=EENHEID_SORTCODE_REGEL;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 EENHEID_SORTCODE_REGEL := TmpDimensionValue."Unit of Measure";
                                                                               END;
                                                                                }

    { [{4C9A714D-BD78-462C-9574-2061FDBFE4E4}];3 ;TERUGDEEL_HOEVEELHEID;Attribute;Text  ;
                                                  Occurrence=Optional }

    { [{E0A933D1-2866-44E8-94FC-B545C176254E}];1 ;BEGROTING           ;Element ;Table   ;
                                                  VariableName=Estimate2;
                                                  SourceTable=Table11012151;
                                                  Export::OnPreXMLItem=BEGIN
                                                                         Estimate2.SETRANGE("No.", Estimate."No."); //In RTC filtering must be done in OnPreXMLItem.
                                                                       END;
                                                                        }

    { [{9493CC0B-D2C4-4CEE-B3B8-9321B95B7A8A}];2 ;UREN                ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Estimate2::Hours (Cost);
                                                  Occurrence=Optional }

    { [{79603B8D-E892-4494-952B-AD3B5FC9BC53}];2 ;LOONKOSTEN          ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Estimate2::Labor Cost Amount;
                                                  Occurrence=Optional }

    { [{75F3D425-64E1-46D0-B443-D82185817950}];2 ;MATERIAALKOSTEN     ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Estimate2::Material Cost Amount;
                                                  Occurrence=Optional }

    { [{C43BD981-6F9E-414B-80B1-241E2814986D}];2 ;MATERIEELKOSTEN     ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Estimate2::Plant Cost Amount;
                                                  Occurrence=Optional }

    { [{6CDC16A8-579C-4D7A-88EC-C9B87163E0BB}];2 ;ONDERAANNEMING      ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Estimate2::Subcontracting Cost Amount;
                                                  Occurrence=Optional }

    { [{52BBA352-5EB4-40A2-BFDB-CC3A6BC2B63D}];2 ;OVERIGE_KOSTEN      ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Estimate2::Sundry Cost Amount;
                                                  Occurrence=Optional }

    { [{894D975E-995F-47D4-97B0-9D879CA7DD69}];2 ;BUNDELING           ;Element ;Table   ;
                                                  SourceTable=Table11072074;
                                                  LinkFields=Field10=FIELD(Field1);
                                                  LinkTable=Estimate2;
                                                  MinOccurs=Zero }

    { [{31EAA762-5740-4AC1-AA78-58966004535B}];3 ;CODE                ;Attribute;Field  ;
                                                  DataType=Code;
                                                  SourceField=Sub-Estimate::Sub-Estimate No.;
                                                  Occurrence=Optional }

    { [{0AF1B6EF-99D6-4BC3-95BE-940F6C7D8B1D}];3 ;OMSCHRIJVING        ;Attribute;Field  ;
                                                  DataType=Text;
                                                  SourceField=Sub-Estimate::Description;
                                                  Occurrence=Optional }

    { [{247D8CB6-0D58-4340-8ABA-D76883FC24F0}];3 ;EENHEID             ;Attribute;Field  ;
                                                  DataType=Code;
                                                  SourceField=Sub-Estimate::Unit of Measure;
                                                  Occurrence=Optional }

    { [{4E6722B5-0DB0-49F9-9E3A-781EDEB2661E}];3 ;TERUGDEEL_HOEVEELHEID;Attribute;Field ;
                                                  DataType=Decimal;
                                                  SourceField=Sub-Estimate::Frequency;
                                                  Occurrence=Optional }

    { [{2A9B0322-AC58-44CF-BF67-1735D9E723E9}];3 ;UREN                ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Sub-Estimate::Cum. Hours Chapter;
                                                  Occurrence=Optional }

    { [{0C99BE84-089A-42FC-9BEF-CDD736ECDFE6}];3 ;LOONKOSTEN          ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Sub-Estimate::Cum. Labor Chapter;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassField=BEGIN
                                                                              "Sub-Estimate"."Labor Amount" *= "Sub-Estimate".Frequency;
                                                                            END;
                                                                             }

    { [{3DEC5274-4119-45B2-853F-63105F39376D}];3 ;MATERIAALKOSTEN     ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Sub-Estimate::Cum. Material Chapter;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassField=BEGIN
                                                                              "Sub-Estimate"."Material Amount" *= "Sub-Estimate".Frequency;
                                                                            END;
                                                                             }

    { [{24030380-3185-4CCE-B97B-24045B1106A5}];3 ;MATERIEELKOSTEN     ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Sub-Estimate::Cum. Plant Chapter;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassField=BEGIN
                                                                              "Sub-Estimate"."Plant Amount" *= "Sub-Estimate".Frequency;
                                                                            END;
                                                                             }

    { [{A663A6DC-8C40-42AD-9B06-1CE40A7B0AE7}];3 ;ONDERAANNEMING      ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Sub-Estimate::Cum. Subcontracting Chapter;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassField=BEGIN
                                                                              "Sub-Estimate"."Subcontracting Amount" *= "Sub-Estimate".Frequency;
                                                                            END;
                                                                             }

    { [{72F85217-31CD-4C1F-9D20-6A0068F85F6A}];3 ;OVERIGE_KOSTEN      ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Sub-Estimate::Cum. Sundry Chapter;
                                                  Export::OnBeforePassField=BEGIN
                                                                              "Sub-Estimate"."Sundry Amount" *= "Sub-Estimate".Frequency;  //DP00381
                                                                            END;
                                                                             }

    { [{AE318F85-2203-4A82-BCB3-708FD4CE95DA}];3 ;BUNDELING           ;Element ;Table   ;
                                                  SourceTable=Table11072073;
                                                  LinkFields=Field10=FIELD(Field10),
                                                             Field12=FIELD(Field20);
                                                  LinkTable=Sub-Estimate;
                                                  MinOccurs=Zero;
                                                  Export::OnAfterGetRecord=BEGIN
                                                                             GetCumTotals;  //DP00381
                                                                           END;
                                                                            }

    { [{F3130CCB-43B7-44B0-9662-51B9AB14213B}];4 ;CODE                ;Attribute;Field  ;
                                                  DataType=Code;
                                                  SourceField=Estimate Part::Part;
                                                  Occurrence=Optional }

    { [{C0061A1B-777F-4267-A70B-90465DA69C53}];4 ;OMSCHRIJVING        ;Attribute;Field  ;
                                                  DataType=Text;
                                                  SourceField=Estimate Part::Description;
                                                  Occurrence=Optional }

    { [{37EA6747-20FB-4325-B3DD-972051A88838}];4 ;EENHEID             ;Attribute;Field  ;
                                                  DataType=Code;
                                                  SourceField=Estimate Part::Unit of Measure;
                                                  Occurrence=Optional }

    { [{CCDC2EB4-2A4B-4118-9350-CE5E8DDB8BFF}];4 ;TERUGDEEL_HOEVEELHEID;Attribute;Field ;
                                                  DataType=Decimal;
                                                  SourceField=Estimate Part::Quantity;
                                                  Occurrence=Optional }

    { [{0F94BFCF-2815-4F67-B6F9-E46995649DCD}];4 ;UREN                ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 UREN := XMLFormat.FormatDecimal(EstPartTotal."Cum. Hours Part");  //DP00381
                                                                               END;
                                                                                }

    { [{9370B19A-E7FC-44C7-8ECE-9BA4F676773B}];4 ;LOONKOSTEN          ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 LOONKOSTEN := XMLFormat.FormatDecimal(EstPartTotal."Cum. Labor Part");  //DP00381
                                                                               END;
                                                                                }

    { [{0C1944C4-7C0C-4008-8978-22AF4333F96C}];4 ;MATERIAALKOSTEN     ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 MATERIAALKOSTEN := XMLFormat.FormatDecimal(EstPartTotal."Cum. Material Part");  //DP00381
                                                                               END;
                                                                                }

    { [{12738F9E-8008-4A0D-B5E5-89984FCF27D7}];4 ;MATERIEELKOSTEN     ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 MATERIEELKOSTEN := XMLFormat.FormatDecimal(EstPartTotal."Cum. Plant Part");  //DP00381
                                                                               END;
                                                                                }

    { [{124B82F6-BA66-469B-9C00-992838E2DC9C}];4 ;ONDERAANNEMING      ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 ONDERAANNEMING := XMLFormat.FormatDecimal(EstPartTotal."Cum. Subcontracting Part");  //DP00381
                                                                               END;
                                                                                }

    { [{7A540E3F-738C-4301-A9F6-46DF1AB41A66}];4 ;OVERIGE_KOSTEN      ;Element ;Text    ;
                                                  VariableName=OVERIGE_KOSTEN_PART;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 OVERIGE_KOSTEN_PART := XMLFormat.FormatDecimal(EstPartTotal."Cum. Sundry Part");  //DP00381
                                                                               END;
                                                                                }

    { [{500D6EF1-C923-431B-B6F7-3C1C913906A5}];4 ;BUNDELING           ;Element ;Table   ;
                                                  VariableName=Estimate Line Recipe;
                                                  SourceTable=Table11072072;
                                                  SourceTableView=WHERE(Field70=FILTER(<>''),
                                                                        Field140=FILTER(<>0));
                                                  LinkFields=Field10=FIELD(Field10),
                                                             Field30=FIELD(Field12),
                                                             Field45=FIELD(Field15),
                                                             Field50=FIELD(Field20);
                                                  LinkTable=Estimate Part;
                                                  MinOccurs=Zero }

    { [{66012821-BC09-4BAB-91C1-861F181B4485}];5 ;CODE                ;Attribute;Field  ;
                                                  DataType=Code;
                                                  SourceField=Estimate Line Recipe::Recipe;
                                                  Occurrence=Optional }

    { [{A0F36FEE-312D-469F-A9EE-090A70DE4DD4}];5 ;OMSCHRIJVING        ;Attribute;Field  ;
                                                  DataType=Text;
                                                  SourceField=Estimate Line Recipe::Description;
                                                  Occurrence=Optional }

    { [{317EE28A-540D-4DC4-999D-A5C77B1BF01F}];5 ;EENHEID             ;Attribute;Field  ;
                                                  DataType=Code;
                                                  SourceField=Estimate Line Recipe::Unit of Measure;
                                                  Occurrence=Optional }

    { [{03E30164-E256-4E79-AC59-6D0D2035F6FE}];5 ;TERUGDEEL_HOEVEELHEID;Attribute;Field ;
                                                  DataType=Decimal;
                                                  SourceField=Estimate Line Recipe::Quantity;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassField=BEGIN
                                                                              "Estimate Line Recipe".Quantity *= "Estimate Line Recipe"."Part Quantity";
                                                                            END;
                                                                             }

    { [{8CCD5CFA-6F9E-48B8-AD0D-B3F75A21E400}];5 ;UREN                ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Estimate Line Recipe::Hours;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassField=BEGIN
                                                                              "Estimate Line Recipe".Hours *= "Estimate Line Recipe"."Part Quantity";
                                                                            END;
                                                                             }

    { [{EA653A50-C64C-46F3-AAD0-0F9B3738FAC2}];5 ;LOONKOSTEN          ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Estimate Line Recipe::Labor Cost Amount;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassField=BEGIN
                                                                              "Estimate Line Recipe"."Labor Cost Amount" *= "Estimate Line Recipe"."Part Quantity";
                                                                            END;
                                                                             }

    { [{0F481DC1-C638-487F-93C9-D0994D210CDB}];5 ;MATERIAALKOSTEN     ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Estimate Line Recipe::Material Cost Amount;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassField=BEGIN
                                                                              "Estimate Line Recipe"."Material Cost Amount" *= "Estimate Line Recipe"."Part Quantity";
                                                                            END;
                                                                             }

    { [{9FF9FD16-3F17-41D1-9134-F2898800F23B}];5 ;MATERIEELKOSTEN     ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Estimate Line Recipe::Plant Cost Amount;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassField=BEGIN
                                                                              "Estimate Line Recipe"."Plant Cost Amount" *= "Estimate Line Recipe"."Part Quantity";
                                                                            END;
                                                                             }

    { [{BBCB17FA-68BD-4FB8-A96D-AE625E120B5B}];5 ;ONDERAANNEMING      ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Estimate Line Recipe::Subcontracting Cost Amount;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassField=BEGIN
                                                                              "Estimate Line Recipe"."Subcontracting Cost Amount" *= "Estimate Line Recipe"."Part Quantity";
                                                                            END;
                                                                             }

    { [{4AACD7A7-426E-4F33-8633-81ACBE3A79E9}];5 ;OVERIGE_KOSTEN      ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Estimate Line Recipe::Sundry Cost Amount;
                                                  Export::OnBeforePassField=BEGIN
                                                                              "Estimate Line Recipe"."Sundry Cost Amount" *= "Estimate Line Recipe"."Part Quantity";  //DP00381
                                                                            END;
                                                                             }

    { [{926E716E-2968-4F3C-B99F-7DCA57986D2D}];5 ;BEGROTINGSREGEL     ;Element ;Table   ;
                                                  VariableName=RecipeLineLoop;
                                                  SourceTable=Table2000000026;
                                                  MinOccurs=Zero;
                                                  Export::OnPreXMLItem=VAR
                                                                         LineNo@1100528600 : Integer;
                                                                       BEGIN
                                                                         TmpRecipeLine.RESET;
                                                                         TmpRecipeLine.DELETEALL;

                                                                         RecipeLine.SETRANGE("Estimate No.", "Estimate Line Recipe"."Estimate No.");
                                                                         RecipeLine.SETRANGE("Sub-Estimate No.", "Estimate Line Recipe"."Sub-Estimate No.");
                                                                         RecipeLine.SETRANGE("Part Group", "Estimate Line Recipe"."Part Group");
                                                                         RecipeLine.SETRANGE(Part, "Estimate Line Recipe".Part);
                                                                         RecipeLine.SETRANGE("Estimate Line", "Estimate Line Recipe"."Line No.");
                                                                         RecipeLine.SETFILTER(Quantity, '<>%1', 0);
                                                                         IF NOT RecipeLine.FINDSET THEN
                                                                           currXMLport.BREAK;
                                                                         LineNo := 0;
                                                                         REPEAT
                                                                           IF RecipeLine.Norm <> 0 THEN BEGIN
                                                                             LineNo += 10000;
                                                                             TmpRecipeLine := RecipeLine;
                                                                             TmpRecipeLine."Line No." := LineNo;
                                                                             TmpRecipeLine."Net Cost Price" := 0;
                                                                             TmpRecipeLine.INSERT;
                                                                           END;

                                                                           IF RecipeLine."Net Cost Price" <> 0 THEN BEGIN
                                                                             LineNo += 10000;
                                                                             TmpRecipeLine := RecipeLine;
                                                                             TmpRecipeLine."Line No." := LineNo;
                                                                             TmpRecipeLine.Norm := 0;
                                                                             TmpRecipeLine."Cost Rate" := 0;
                                                                             TmpRecipeLine."Rate Code" := '';
                                                                             TmpRecipeLine.INSERT;
                                                                           END;
                                                                         UNTIL RecipeLine.NEXT = 0;

                                                                         IF TmpRecipeLine.COUNT = 0 THEN
                                                                           currXMLport.BREAK
                                                                         ELSE
                                                                           RecipeLineLoop.SETRANGE(Number, 1, TmpRecipeLine.COUNT);
                                                                       END;

                                                  Export::OnAfterGetRecord=BEGIN
                                                                             IF RecipeLineLoop.Number = 1 THEN
                                                                               TmpRecipeLine.FINDFIRST
                                                                             ELSE
                                                                               TmpRecipeLine.NEXT;
                                                                           END;
                                                                            }

    { [{F77102D1-9DAE-4F0F-9213-A772291278EA}];6 ;CODE                ;Attribute;Text   ;
                                                  VariableName=CODE_RECEPT;
                                                  DataType=Code;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 CODE_RECEPT := TmpRecipeLine.Element;
                                                                               END;
                                                                                }

    { [{D92E9B1A-F8CD-426B-B414-D87804F6D077}];6 ;OMSCHRIJVING        ;Attribute;Text   ;
                                                  VariableName=OMSCHRIJVING_RECEPT;
                                                  DataType=Text;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 OMSCHRIJVING_RECEPT := TmpRecipeLine.Description;
                                                                               END;
                                                                                }

    { [{12BF1D6D-9019-40D2-A1B1-F652F60A306F}];6 ;HOEVEELHEID_EENHEID ;Attribute;Text   ;
                                                  VariableName=HOEVEELHEID_EENHEID_RECEPT;
                                                  DataType=Code;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 HOEVEELHEID_EENHEID_RECEPT := TmpRecipeLine."Unit of Measure";
                                                                               END;
                                                                                }

    { [{9EDB413D-2E08-480A-85EE-4852BCF9DC15}];6 ;HOEVEELHEID         ;Attribute;Text   ;
                                                  VariableName=HOEVEELHEID_RECEPT;
                                                  DataType=Decimal;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=VAR
                                                                                 Quantity@1100528600 : Decimal;
                                                                               BEGIN
                                                                                 TmpRecipeLine.CALCFIELDS("Estimate Part Quantity", "Estimate Quantity");
                                                                                 Quantity := TmpRecipeLine.Quantity * TmpRecipeLine."Estimate Part Quantity" * TmpRecipeLine."Time Quantity";
                                                                                 IF NOT TmpRecipeLine."Ignore Recipe Quantity" THEN
                                                                                   Quantity *= TmpRecipeLine."Estimate Quantity";
                                                                                 HOEVEELHEID_RECEPT := XMLFormat.FormatDecimal(Quantity);
                                                                               END;
                                                                                }

    { [{3EB27441-6C6F-4EDB-A620-A61BA346E890}];6 ;AANTAL_EENHEID      ;Attribute;Text   ;
                                                  VariableName=AANTAL_EENHEID_RECEPT;
                                                  Occurrence=Optional }

    { [{5138F607-0255-4A48-8D94-AE435CA950CC}];6 ;AANTAL              ;Attribute;Text   ;
                                                  VariableName=AANTAL_RECEPT;
                                                  Occurrence=Optional }

    { [{235BB8D8-96FD-430C-88A0-4984D1725346}];6 ;INZET_EENHEID       ;Attribute;Text   ;
                                                  VariableName=INZET_EENHEID_RECEPT;
                                                  Occurrence=Optional }

    { [{76AB84EA-D306-4D67-A117-90DC0B229425}];6 ;INZET               ;Attribute;Text   ;
                                                  VariableName=INZET_RECEPT;
                                                  Occurrence=Optional }

    { [{D54687BC-6B06-4C6F-9DCE-6139EDF7F4CB}];6 ;PRODUCTIE_EENHEID   ;Attribute;Text   ;
                                                  VariableName=PRODUCTIE_EENHEID_RECEPT;
                                                  Occurrence=Optional }

    { [{CCB6CF4E-1C95-479D-90DD-0326773625B9}];6 ;PRODUCTIE           ;Attribute;Text   ;
                                                  VariableName=PRODUCTIE_RECEPT;
                                                  Occurrence=Optional }

    { [{35897317-6022-4E33-9671-E5BD206C446F}];6 ;HOEVEELHEID_FACTOR  ;Attribute;Text   ;
                                                  VariableName=HOEVEELHEID_FACTOR_RECEPT;
                                                  Occurrence=Optional }

    { [{041B4775-FFD8-4704-8E45-A0023106F4E8}];6 ;FACTORCODE          ;Attribute;Text   ;
                                                  VariableName=FACTORCODE_RECEPT;
                                                  Occurrence=Optional }

    { [{FDD7C010-D607-433F-B86F-600231816B78}];6 ;UUR_NORM            ;Attribute;Text   ;
                                                  VariableName=UUR_NORM_RECEPT;
                                                  DataType=Decimal;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF TmpRecipeLine.Norm * TmpRecipeLine."Cum. Adj. Factor Hours" <> 0 THEN
                                                                                   UUR_NORM_RECEPT := XMLFormat.FormatDecimal(TmpRecipeLine.Norm * TmpRecipeLine."Cum. Adj. Factor Hours")
                                                                                 ELSE
                                                                                   UUR_NORM_RECEPT := '';
                                                                               END;
                                                                                }

    { [{D633C5D5-B701-42EE-9E65-C9DDDFAF5505}];6 ;UUR_TARIEF          ;Attribute;Text   ;
                                                  VariableName=UUR_TARIEF_RECEPT;
                                                  DataType=Decimal;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF TmpRecipeLine."Cost Rate" <> 0 THEN
                                                                                   UUR_TARIEF_RECEPT := XMLFormat.FormatDecimal(TmpRecipeLine."Cost Rate")
                                                                                 ELSE
                                                                                   UUR_TARIEF_RECEPT := '';
                                                                               END;
                                                                                }

    { [{BF3AF660-6697-4FB5-8A9B-9379FF2AF981}];6 ;UUR_TARIEFCODE      ;Attribute;Text   ;
                                                  VariableName=UUR_TARIEFCODE_RECEPT;
                                                  DataType=Code;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 UUR_TARIEFCODE_RECEPT := TmpRecipeLine."Rate Code";
                                                                               END;
                                                                                }

    { [{DF08DE47-ED93-4BDA-80DF-4CD1578CC7B7}];6 ;MATERIAALPRIJS      ;Attribute;Text   ;
                                                  VariableName=MATERIAALPRIJS_RECEPT;
                                                  DataType=Decimal;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF TmpRecipeLine."Net Cost Price" * TmpRecipeLine."Cum. Adj. Factor Price" <> 0 THEN
                                                                                   MATERIAALPRIJS_RECEPT := XMLFormat.FormatDecimal(TmpRecipeLine."Net Cost Price" * TmpRecipeLine."Cum. Adj. Factor Price")
                                                                                 ELSE
                                                                                   MATERIAALPRIJS_RECEPT := '';

                                                                                 IF TmpRecipeLine."Cost Type (Price)" <> TmpRecipeLine."Cost Type (Price)"::Material THEN
                                                                                   MATERIAALPRIJS_RECEPT := '';  //DP00381
                                                                               END;
                                                                                }

    { [{2AE77A8A-12D8-4A0B-97C7-F2CB1932EC24}];6 ;MATERIEELPRIJS      ;Attribute;Text   ;
                                                  VariableName=MATERIEELPRIJS_RECEPT;
                                                  DataType=Decimal;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF TmpRecipeLine."Net Cost Price" * TmpRecipeLine."Cum. Adj. Factor Price" <> 0 THEN
                                                                                   MATERIEELPRIJS_RECEPT := XMLFormat.FormatDecimal(TmpRecipeLine."Net Cost Price" * TmpRecipeLine."Cum. Adj. Factor Price")
                                                                                 ELSE
                                                                                   MATERIEELPRIJS_RECEPT := '';

                                                                                 IF TmpRecipeLine."Cost Type (Price)" <> TmpRecipeLine."Cost Type (Price)"::Plant THEN
                                                                                   MATERIEELPRIJS_RECEPT := '';  //DP00381
                                                                               END;
                                                                                }

    { [{4C3C05EB-B154-41E6-90BD-2056832B2A45}];6 ;ONDERAANNEMINGSPRIJS;Attribute;Text   ;
                                                  VariableName=ONDERAANNEMINGSPRIJS_RECEPT;
                                                  DataType=Decimal;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF TmpRecipeLine."Net Cost Price" * TmpRecipeLine."Cum. Adj. Factor Price" <> 0 THEN
                                                                                   ONDERAANNEMINGSPRIJS_RECEPT := XMLFormat.FormatDecimal(
                                                                                     TmpRecipeLine."Net Cost Price" * TmpRecipeLine."Cum. Adj. Factor Price")
                                                                                 ELSE
                                                                                   ONDERAANNEMINGSPRIJS_RECEPT := '';

                                                                                 IF TmpRecipeLine."Cost Type (Price)" <> TmpRecipeLine."Cost Type (Price)"::Subcontracting THEN
                                                                                   ONDERAANNEMINGSPRIJS_RECEPT := '';   //DP00381
                                                                               END;
                                                                                }

    { [{DD15FC8F-39A1-4873-ACD1-A8C76FC68497}];6 ;OVERIGE_KOSTEN      ;Attribute;Text   ;
                                                  VariableName=OVERIGE_KOSTEN_RECEPT;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF TmpRecipeLine."Net Cost Price" * TmpRecipeLine."Cum. Adj. Factor Price" <> 0 THEN
                                                                                   OVERIGE_KOSTEN_RECEPT := XMLFormat.FormatDecimal(
                                                                                     TmpRecipeLine."Net Cost Price" * TmpRecipeLine."Cum. Adj. Factor Price")
                                                                                 ELSE
                                                                                   OVERIGE_KOSTEN_RECEPT := '';

                                                                                 IF TmpRecipeLine."Cost Type (Price)" <> TmpRecipeLine."Cost Type (Price)"::Sundry THEN
                                                                                   OVERIGE_KOSTEN_RECEPT := '';   //DP00381
                                                                               END;
                                                                                }

    { [{50373F52-4318-4F5A-95EC-EFBB22CE17DB}];6 ;STELPOST            ;Attribute;Text   ;
                                                  VariableName=STELPOST_RECEPT;
                                                  Occurrence=Optional }

    { [{A7DD64C4-36F4-4D26-A8AB-710B1229F7F2}];6 ;BTW                 ;Attribute;Text   ;
                                                  VariableName=BTW_RECEPT;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 BTW_RECEPT := XMLFormat.FormatDecimal(0);
                                                                               END;
                                                                                }

    { [{C8D7AD09-6062-4991-931B-5EA741D743FB}];6 ;EAN_CODE            ;Attribute;Text   ;
                                                  VariableName=EAN_CODE_RECEPT;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=VAR
                                                                                 Item@1210190000 : Record 27;
                                                                                 TradeItem@1210190001 : Record 11012317;
                                                                                 BasicItem@1210190002 : Record 11012316;
                                                                               BEGIN
                                                                                 IF TmpRecipeLine."Net Cost Price" <> 0 THEN BEGIN
                                                                                   IF TmpRecipeLine."Item No." <> '' THEN
                                                                                     IF Item.GET(TmpRecipeLine."Item No.") THEN
                                                                                       EAN_CODE_RECEPT := Item."GTIN Code";

                                                                                   IF (EAN_CODE_RECEPT = '') AND (TmpRecipeLine."Trade Item" <> '') AND (TmpRecipeLine."Vendor (Trade Item)" <> '') THEN
                                                                                     IF TradeItem.GET(TmpRecipeLine."Vendor (Trade Item)", TmpRecipeLine."Trade Item") THEN  //db, 15-05-17
                                                                                       EAN_CODE_RECEPT := TradeItem."GTIN Code (Item)";

                                                                                   IF (EAN_CODE_RECEPT = '') AND (TmpRecipeLine."Basic Item" <> '') AND (TmpRecipeLine.Manufacturer <> '') THEN
                                                                                     IF BasicItem.GET(TmpRecipeLine.Manufacturer, TmpRecipeLine."Basic Item") THEN
                                                                                       EAN_CODE_RECEPT := BasicItem."GTIN Code";
                                                                                 END;
                                                                               END;
                                                                                }

    { [{C3897BE4-AB7A-450F-B767-233B28B93507}];6 ;ARTIKELGROEP        ;Attribute;Text   ;
                                                  VariableName=ARTIKELGROEP_RECEPT;
                                                  Occurrence=Optional }

    { [{922F3786-7915-4E48-8D41-05F04960EFFE}];6 ;BESTELEENHEID       ;Attribute;Text   ;
                                                  VariableName=BESTELEENHEID_RECEPT;
                                                  Occurrence=Optional }

    { [{92F9DA1A-F47E-4F74-B2EB-191ED428AFEE}];6 ;HOEVEELHEIDPEREENHEID;Attribute;Text  ;
                                                  VariableName=HOEVEELHEIDPEREENHEID_RECEPT;
                                                  Occurrence=Optional }

    { [{967410F7-1ECB-45D6-B1A2-F72D2577BED2}];6 ;LEVERANCIERSCODE    ;Attribute;Text   ;
                                                  VariableName=LEVERANCIERSCODE_RECEPT;
                                                  Occurrence=Optional }

    { [{01BCB3D1-CEAB-4099-BFC0-CDEC3339DEE5}];6 ;COMMENTAAR          ;Attribute;Text   ;
                                                  VariableName=COMMENTAAR_RECEPT;
                                                  Occurrence=Optional }

    { [{1FAD4C32-4FE0-4E7F-9901-9FAB8166D925}];6 ;SORTEERCODE         ;Element ;Text    ;
                                                  VariableName=SORTEERCODE_RECEPT;
                                                  MinOccurs=Zero }

    { [{17B73AB2-9E9C-4BC2-84A2-061EAF6D5ACA}];7 ;SORTERING           ;Attribute;Text   ;
                                                  VariableName=SORTERING_RECEPT;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 SORTERING_RECEPT := 'BEWAKINGSCODE'
                                                                               END;
                                                                                }

    { [{D6487039-9C6B-432C-AB51-7769608FEA91}];7 ;WAARDE              ;Attribute;Text   ;
                                                  VariableName=WAARDE_RECEPT;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 WAARDE_RECEPT := GetCostObjectFromRecipeLine(TmpRecipeLine);
                                                                                 IF WAARDE_RECEPT = '' THEN
                                                                                   currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{9C962571-689C-4891-9AEC-74A7465B9BE9}];4 ;BEGROTINGSREGEL     ;Element ;Table   ;
                                                  VariableName=EstimateLineLoop;
                                                  SourceTable=Table2000000026;
                                                  SourceTableView=SORTING(Field1);
                                                  LinkTable=Estimate Part;
                                                  MinOccurs=Zero;
                                                  Export::OnPreXMLItem=VAR
                                                                         LineNo@1100528600 : Integer;
                                                                       BEGIN
                                                                         TmpEstimateLine.RESET;
                                                                         TmpEstimateLine.DELETEALL;

                                                                         EstimateLine.SETRANGE("Estimate No.", "Estimate Part"."Estimate No.");
                                                                         EstimateLine.SETRANGE("Sub-Estimate No.", "Estimate Part"."Sub-Estimate No.");
                                                                         EstimateLine.SETRANGE("Part Group", "Estimate Part"."Part Group");
                                                                         EstimateLine.SETRANGE(Part, "Estimate Part".Part);
                                                                         EstimateLine.SETRANGE(Recipe, '');
                                                                         EstimateLine.SETFILTER(Quantity, '<>%1', 0);
                                                                         IF NOT EstimateLine.FINDSET THEN
                                                                           currXMLport.BREAK;
                                                                         LineNo := 0;
                                                                         REPEAT
                                                                           IF EstimateLine.Norm <> 0 THEN BEGIN
                                                                             LineNo += 10000;
                                                                             TmpEstimateLine := EstimateLine;
                                                                             TmpEstimateLine."Line No." := LineNo;
                                                                             TmpEstimateLine."Net Cost Price" := 0;
                                                                             TmpEstimateLine.INSERT;
                                                                           END;

                                                                           IF EstimateLine."Net Cost Price" <> 0 THEN BEGIN
                                                                             LineNo += 10000;
                                                                             TmpEstimateLine := EstimateLine;
                                                                             TmpEstimateLine."Line No." := LineNo;
                                                                             TmpEstimateLine.Norm := 0;
                                                                             TmpEstimateLine."Cost Rate" := 0;
                                                                             TmpEstimateLine."Rate Code" := '';
                                                                             TmpEstimateLine.INSERT;
                                                                           END;
                                                                         UNTIL EstimateLine.NEXT = 0;

                                                                         IF TmpEstimateLine.COUNT = 0 THEN
                                                                           currXMLport.BREAK
                                                                         ELSE
                                                                           EstimateLineLoop.SETRANGE(Number, 1, TmpEstimateLine.COUNT);
                                                                       END;

                                                  Export::OnAfterGetRecord=BEGIN
                                                                             IF EstimateLineLoop.Number = 1 THEN
                                                                               TmpEstimateLine.FINDFIRST
                                                                             ELSE
                                                                               TmpEstimateLine.NEXT;
                                                                           END;
                                                                            }

    { [{AC8C7BD4-6C9E-473D-A85C-F1D18CA69812}];5 ;CODE                ;Attribute;Text   ;
                                                  DataType=Code;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 CODE := TmpEstimateLine.Element;
                                                                               END;
                                                                                }

    { [{1655E06E-1FFD-4372-BB28-DB1491775532}];5 ;OMSCHRIJVING        ;Attribute;Text   ;
                                                  DataType=Text;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 OMSCHRIJVING := TmpEstimateLine.Description;
                                                                               END;
                                                                                }

    { [{432FEB74-9CFF-4ABA-9270-A266299BDB87}];5 ;HOEVEELHEID_EENHEID ;Attribute;Text   ;
                                                  DataType=Code;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 HOEVEELHEID_EENHEID := TmpEstimateLine."Unit of Measure";
                                                                               END;
                                                                                }

    { [{E8D60890-3617-46B8-BC58-43AB17FF7017}];5 ;HOEVEELHEID         ;Attribute;Text   ;
                                                  DataType=Decimal;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 HOEVEELHEID := XMLFormat.FormatDecimal(
                                                                                   TmpEstimateLine.Quantity * TmpEstimateLine."Part Quantity" * TmpEstimateLine."Time Quantity");
                                                                               END;
                                                                                }

    { [{EFF83191-4950-4031-9832-0F184D9A5903}];5 ;AANTAL_EENHEID      ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{95DF5CDC-547A-48A8-9D00-F756C8C04EBC}];5 ;AANTAL              ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{3B869E34-ABBE-4813-B093-4588BD621ECC}];5 ;INZET_EENHEID       ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{6DACDCF5-6448-4518-ABB9-C40AA7A43214}];5 ;INZET               ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{4CB95874-43A1-4E61-8A7B-E993BCC030A9}];5 ;PRODUCTIE_EENHEID   ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{E6561DA3-3C62-4026-A1A5-83AB48107261}];5 ;PRODUCTIE           ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{F46781FF-AECF-42C8-AAFB-4023E19F7EBE}];5 ;HOEVEELHEID_FACTOR  ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{A28C4340-03B6-40A7-A21C-1F22E323A859}];5 ;FACTORCODE          ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{F23E02A0-E06D-4498-A295-FF5FCCD0D6A6}];5 ;UUR_NORM            ;Attribute;Text   ;
                                                  DataType=Decimal;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF TmpEstimateLine.Norm * TmpEstimateLine."Cum. Adj. Factor Hours" <> 0 THEN
                                                                                   UUR_NORM := XMLFormat.FormatDecimal(TmpEstimateLine.Norm * TmpEstimateLine."Cum. Adj. Factor Hours")
                                                                                 ELSE
                                                                                   UUR_NORM := '';
                                                                               END;
                                                                                }

    { [{CE1ACAE6-75AA-4F87-A36F-14FC696A9681}];5 ;UUR_TARIEF          ;Attribute;Text   ;
                                                  DataType=Decimal;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF TmpEstimateLine."Cost Rate" <> 0 THEN
                                                                                   UUR_TARIEF := XMLFormat.FormatDecimal(TmpEstimateLine."Cost Rate")
                                                                                 ELSE
                                                                                   UUR_TARIEF := '';
                                                                               END;
                                                                                }

    { [{9AD71599-957B-4341-9735-2985893E68A4}];5 ;UUR_TARIEFCODE      ;Attribute;Text   ;
                                                  DataType=Code;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 UUR_TARIEFCODE := TmpEstimateLine."Rate Code";
                                                                               END;
                                                                                }

    { [{ABF28FED-EF9B-4511-BCC5-62DD9B09BCDE}];5 ;MATERIAALPRIJS      ;Attribute;Text   ;
                                                  DataType=Decimal;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF TmpEstimateLine."Net Cost Price" * TmpEstimateLine."Cum. Adj. Factor Price" <> 0 THEN
                                                                                   MATERIAALPRIJS := XMLFormat.FormatDecimal(TmpEstimateLine."Net Cost Price" * TmpEstimateLine."Cum. Adj. Factor Price")
                                                                                 ELSE
                                                                                   MATERIAALPRIJS := '';

                                                                                 IF TmpEstimateLine."Cost Type (Price)" <> TmpEstimateLine."Cost Type (Price)"::Material THEN
                                                                                   MATERIAALPRIJS := '';   //DP00381
                                                                               END;
                                                                                }

    { [{5713F60E-302F-42F5-B9E1-06B150B17C36}];5 ;MATERIEELPRIJS      ;Attribute;Text   ;
                                                  DataType=Decimal;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF TmpEstimateLine."Net Cost Price" * TmpEstimateLine."Cum. Adj. Factor Price" <> 0 THEN
                                                                                   MATERIEELPRIJS := XMLFormat.FormatDecimal(TmpEstimateLine."Net Cost Price" * TmpEstimateLine."Cum. Adj. Factor Price")
                                                                                 ELSE
                                                                                   MATERIEELPRIJS := '';

                                                                                 IF TmpEstimateLine."Cost Type (Price)" <> TmpEstimateLine."Cost Type (Price)"::Plant THEN
                                                                                   MATERIEELPRIJS := '';   //DP00381
                                                                               END;
                                                                                }

    { [{B0E39F7D-92AD-4D4B-9CC8-BB2CDD894CE5}];5 ;ONDERAANNEMINGSPRIJS;Attribute;Text   ;
                                                  DataType=Decimal;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF TmpEstimateLine."Net Cost Price" * TmpEstimateLine."Cum. Adj. Factor Price" <> 0 THEN
                                                                                   ONDERAANNEMINGSPRIJS := XMLFormat.FormatDecimal(
                                                                                     TmpEstimateLine."Net Cost Price" * TmpEstimateLine."Cum. Adj. Factor Price")
                                                                                 ELSE
                                                                                   ONDERAANNEMINGSPRIJS := '';

                                                                                 IF TmpEstimateLine."Cost Type (Price)" <> TmpEstimateLine."Cost Type (Price)"::Subcontracting THEN
                                                                                   ONDERAANNEMINGSPRIJS := '';   //DP00381
                                                                               END;
                                                                                }

    { [{FFCA375C-55FD-4112-8A00-E743808BD943}];5 ;OVERIGE_KOSTEN      ;Attribute;Text   ;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 IF TmpEstimateLine."Net Cost Price" * TmpEstimateLine."Cum. Adj. Factor Price" <> 0 THEN
                                                                                   OVERIGE_KOSTEN := XMLFormat.FormatDecimal(
                                                                                     TmpEstimateLine."Net Cost Price" * TmpEstimateLine."Cum. Adj. Factor Price")
                                                                                 ELSE
                                                                                   OVERIGE_KOSTEN := '';

                                                                                 IF TmpEstimateLine."Cost Type (Price)" <> TmpEstimateLine."Cost Type (Price)"::Sundry THEN
                                                                                   OVERIGE_KOSTEN := '';   //DP00381
                                                                               END;
                                                                                }

    { [{87B88BBC-6AF6-498F-84B0-ADEAD209E90C}];5 ;STELPOST            ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{EF69A52F-751B-483D-B818-AE8C9B7FA8B3}];5 ;BTW                 ;Attribute;Text   ;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 BTW := XMLFormat.FormatDecimal(0);
                                                                               END;
                                                                                }

    { [{26177715-9D6E-498D-B4E8-4E32524F7271}];5 ;EAN_CODE            ;Attribute;Text   ;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=VAR
                                                                                 TradeItem@1210190000 : Record 11012317;
                                                                                 BasicItem@1210190002 : Record 11012316;
                                                                                 Item@1210190001 : Record 27;
                                                                               BEGIN
                                                                                 IF TmpEstimateLine."Net Cost Price" <> 0 THEN BEGIN
                                                                                   IF TmpEstimateLine."Item No." <> '' THEN
                                                                                     IF Item.GET(TmpEstimateLine."Item No.") THEN
                                                                                       EAN_CODE := Item."GTIN Code";

                                                                                   IF (EAN_CODE = '') AND (TmpEstimateLine."Trade Item" <> '') AND (TmpEstimateLine."Vendor (Trade Item)" <> '') THEN
                                                                                     IF TradeItem.GET(TmpEstimateLine."Vendor (Trade Item)", TmpEstimateLine."Trade Item") THEN
                                                                                       EAN_CODE := TradeItem."GTIN Code (Item)";

                                                                                   IF (EAN_CODE = '') AND (TmpEstimateLine."Basic Item" <> '') AND (TmpEstimateLine.Manufacturer <> '') THEN
                                                                                     IF BasicItem.GET(TmpEstimateLine.Manufacturer, TmpEstimateLine."Basic Item") THEN
                                                                                       EAN_CODE := BasicItem."GTIN Code";
                                                                                 END;
                                                                               END;
                                                                                }

    { [{FF16468F-02B7-41EB-AAD5-B81D954CFA9C}];5 ;ARTIKELGROEP        ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{4E56AA63-1D60-4B72-A6C5-CA0E75D3B88B}];5 ;BESTELEENHEID       ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{CA3FAEDC-BC2B-42EC-A7CE-732D77B14226}];5 ;HOEVEELHEIDPEREENHEID;Attribute;Text  ;
                                                  Occurrence=Optional }

    { [{1BB24078-C300-4F6A-91B7-2CBF60ABFCDA}];5 ;LEVERANCIERSCODE    ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{010AE942-3C82-4D32-A339-95A9C92C5404}];5 ;COMMENTAAR          ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{C62C9CAB-0FD7-46C5-A9EB-2B19B140D176}];5 ;SORTEERCODE         ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{C3652B6A-2608-4264-B928-96D096BD284B}];6 ;SORTERING           ;Attribute;Text   ;
                                                  VariableName=SORTERING_CALC_REGEL;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 SORTERING_CALC_REGEL := 'BEWAKINGSCODE';
                                                                               END;
                                                                                }

    { [{604CE5DC-15A9-43C5-A355-9E1E233D06C7}];6 ;WAARDE              ;Attribute;Text   ;
                                                  Occurrence=Optional;
                                                  Export::OnBeforePassVariable=BEGIN
                                                                                 WAARDE := GetCostObjectFromEstimateLine(TmpEstimateLine);
                                                                                 IF WAARDE = '' THEN
                                                                                   currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{7663FD7B-DB20-4810-820B-F22B0767F6A6}];1 ;STAARTGEGEVENS      ;Element ;Table   ;
                                                  SourceTable=Table11012172;
                                                  LinkFields=Field10=FIELD(Field1);
                                                  LinkTable=Estimate2;
                                                  MinOccurs=Zero;
                                                  Export::OnPreXMLItem=BEGIN
                                                                         "Summary Sheet".SETRANGE(Summary, SummarySheetNo); //In RTC filtering must be done in OnPreXMLItem.
                                                                       END;
                                                                        }

    { [{4B9A147B-3D7E-4EAE-85ED-DD3AD3A31ABD}];2 ;AANNEEMSOM          ;Attribute;Text   ;
                                                  Occurrence=Optional }

    { [{81EF8CA3-C8DF-4CEE-BCA3-D8534D18934B}];2 ;VRIJE_GROOTHEID     ;Element ;Table   ;
                                                  SourceTable=Table11012171;
                                                  SourceTableView=WHERE(Field460=CONST(Yes));
                                                  LinkFields=Field10=FIELD(Field10),
                                                             Field20=FIELD(Field20);
                                                  LinkTable=Summary Sheet }

    { [{1AA5BF1F-A7EA-4763-B2FC-CE8CA42D4037}];3 ;OMSCHRIJVING        ;Attribute;Field  ;
                                                  DataType=Text;
                                                  SourceField=Summary Sheet Line::Description;
                                                  Occurrence=Optional }

    { [{846DA08A-9DD0-4936-9409-358926CEB379}];3 ;BEDRAG              ;Attribute;Field  ;
                                                  DataType=Decimal;
                                                  SourceField=Summary Sheet Line::Amount;
                                                  Occurrence=Optional }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      EstimateLine@1100528602 : Record 11072072;
      RecipeLine@1100528604 : Record 11072075;
      TmpEstimateLine@1100528603 : TEMPORARY Record 11072072;
      TmpRecipeLine@1100528605 : TEMPORARY Record 11072075;
      XMLFormat@1210190000 : Codeunit 11020221;
      SummarySheetNo@1210190001 : Code[10];
      Text000@1100528600 : TextConst 'ENU=Cost Object;SVE=Kostnadsobjekt';
      TmpDimensionValue@1100528601 : TEMPORARY Record 349;
      EstPartTotal@1100525000 : Record 11229767;

    PROCEDURE SetSummarySheetNo@1210190001(ISummarySheetNo@1210190000 : Code[10]);
    BEGIN
      SummarySheetNo := ISummarySheetNo;
    END;

    PROCEDURE GetCostObjectFromRecipeLine@1100528600(IRecipeLine@1100528600 : Record 11072075) CostObject : Code[20];
    BEGIN
      IF IRecipeLine.Norm * IRecipeLine."Cost Rate" <> 0 THEN
        CostObject := IRecipeLine."Cost Object Labor";
      IF IRecipeLine."Net Cost Price" <> 0 THEN
        CostObject := IRecipeLine."Cost Object Price";
    END;

    PROCEDURE GetCostObjectFromEstimateLine@1100528602(IEstimateLine@1100528600 : Record 11072072) CostObject : Code[20];
    BEGIN
      IF IEstimateLine.Norm * IEstimateLine."Cost Rate" <> 0 THEN
        CostObject := IEstimateLine."Cost Object Labor";
      IF IEstimateLine."Net Cost Price" <> 0 THEN
        CostObject := IEstimateLine."Cost Object Price";
    END;

    PROCEDURE FillTmpDimensionValue@1100528607(IEstimateNo@1100528600 : Code[20]);
    VAR
      EstimateLine@1100528601 : Record 11072072;
      RecipeLine@1100528605 : Record 11072075;
      DimensionValue@1100528604 : Record 349;
      GeneralLedgerSetup@1100528603 : Record 98;
      CostObject@1100528602 : Code[20];
    BEGIN
      GeneralLedgerSetup.GET;
      EstimateLine.SETRANGE("Estimate No.", IEstimateNo);
      EstimateLine.SETFILTER(Quantity, '<>%1', 0);
      IF EstimateLine.FINDSET THEN BEGIN
        REPEAT
          CostObject := GetCostObjectFromEstimateLine(EstimateLine);
          IF (CostObject <> '') AND NOT TmpDimensionValue.GET('', CostObject) THEN BEGIN
            TmpDimensionValue.INIT;
            TmpDimensionValue.Code := CostObject;
            IF DimensionValue.GET(GeneralLedgerSetup."Global Dimension 2 Code", CostObject) THEN
              TmpDimensionValue.Name := DimensionValue.Name;
            TmpDimensionValue.INSERT;
          END;
        UNTIL EstimateLine.NEXT = 0;
      END;

      RecipeLine.SETRANGE("Estimate No.", IEstimateNo);
      RecipeLine.SETFILTER(Quantity, '<>%1', 0);
      IF RecipeLine.FINDSET THEN BEGIN
        REPEAT
          CostObject := GetCostObjectFromRecipeLine(RecipeLine);
          IF (CostObject <> '') AND NOT TmpDimensionValue.GET('', CostObject) THEN BEGIN
            TmpDimensionValue.INIT;
            TmpDimensionValue.Code := CostObject;
            IF DimensionValue.GET(GeneralLedgerSetup."Global Dimension 2 Code", CostObject) THEN
              TmpDimensionValue.Name := DimensionValue.Name;
            TmpDimensionValue.INSERT;
          END;
        UNTIL RecipeLine.NEXT = 0;  //db, 15-05-17
      END;
    END;

    PROCEDURE GetCumTotals@1100525001();
    BEGIN
      //DP00381
      WITH EstPartTotal DO BEGIN
        GET("Estimate Part"."Estimate No.", "Estimate Part"."Sub-Estimate No.",
          "Estimate Part"."Part Group", "Estimate Part".Part);
        CALCFIELDS("Cum. Hours Part", "Cum. Labor Part", "Cum. Material Part",
          "Cum. Subcontracting Part", "Cum. Plant Part");
      END;
    END;

    BEGIN
    END.
  }
}

