OBJECT Table 11020569 Function Profile
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    DataCaptionFields=No.,Name;
    OnInsert=BEGIN
               InsertTenantPermissionSetForFunctionProfile;
             END;

    OnModify=BEGIN
               UpdateTenantPermissionSetFromFunctionProfile;
             END;

    OnDelete=VAR
               StandardAuthManagement@1100529200 : Codeunit 11012269;
             BEGIN
               StandardAuthManagement.ConfirmDeleteAccessControl("No.");

               IF CONFIRM(STRSUBSTNO(Text002,TABLECAPTION,"No.")) THEN BEGIN
                 StandardAuthManagement.DeleteFunctionProfileData("No.");
                 StandardAuthManagement.DeleteTenantPermissionSet("No.");
                 StandardAuthManagement.DeleteTenantPermissions("No.");
               END ELSE
                 ERROR(Text003);
             END;

    CaptionML=[ENU=Function Profile;
               NOR=Funksjonsprofil;
               SVE=Funktionsprofil];
    LookupPageID=Page11124833;
    DrillDownPageID=Page11124833;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              NOR=Rolle-ID;
                                                              SVE=Roll-ID];
                                                   NotBlank=Yes }
    { 15  ;   ;Name                ;Text30        ;CaptionML=[ENU=Name;
                                                              NOR=Navn;
                                                              SVE=Namn] }
    { 40  ;   ;No. Of Users        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Access Control" WHERE (Role ID=FIELD(No.)));
                                                   CaptionML=[ENU=Database Users;
                                                              NOR=Antall databasebrukere;
                                                              SVE=Antal databasanv„ndare];
                                                   Editable=No }
    { 60  ;   ;No. Of Roles in Profile Role;Integer;
                                                   CaptionML=[ENU=Permission Sets;
                                                              NOR=Antall roller i profilrolle;
                                                              SVE=Antal roller i profilroll];
                                                   Editable=No }
    { 70  ;   ;Content Changed     ;Boolean       ;CaptionML=[ENU=Content Changed;
                                                              NOR=Innhold endret;
                                                              SVE=Žndrat inneh†ll];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text002@1100529200 : TextConst 'ENU=%1 %2 will be deleted, with all related data, continue?';
      Text003@1100529201 : TextConst 'ENU=Aborted.';

    PROCEDURE SetContentChanged@1210190000(FunctionProfileCde@1210190001 : Code[20];NewValue@1210190000 : Boolean);
    VAR
      FunctionProfile@1210190002 : Record 11020569;
    BEGIN
      IF FunctionProfile.GET(FunctionProfileCde) THEN BEGIN
        FunctionProfile."Content Changed" := NewValue;
        FunctionProfile.MODIFY;
      END;
    END;

    PROCEDURE InsertTenantPermissionSetForFunctionProfile@1100529200();
    VAR
      TenantPermissionSet@1100529200 : Record 2000000165;
      ZeroGUID@1100527700 : GUID;
    BEGIN
      IF NOT TenantPermissionSet.GET(ZeroGUID,"No.") THEN BEGIN
        TenantPermissionSet."App ID" := ZeroGUID;
        TenantPermissionSet."Role ID" := "No.";
        TenantPermissionSet.INSERT;
      END;
    END;

    PROCEDURE UpdateTenantPermissionSetFromFunctionProfile@1100529223();
    VAR
      TenantPermissionSet@1100529200 : Record 2000000165;
      ZeroGUID@1100527700 : GUID;
    BEGIN
      IF TenantPermissionSet.GET(ZeroGUID,"No.") THEN BEGIN
        TenantPermissionSet.Name := Name;
        TenantPermissionSet.MODIFY;
      END;
    END;

    PROCEDURE FunctionProfileExistsForPermissionSet@1100529201(PermissionSetNo@1100529201 : Code[20]) : Boolean;
    VAR
      FunctionProfile@1100529200 : Record 11020569;
    BEGIN
      EXIT(FunctionProfile.GET(PermissionSetNo));
    END;

    BEGIN
    END.
  }
}

