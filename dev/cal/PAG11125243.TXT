OBJECT Page 11125243 Service Order Cost Plus SF2
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Order Cost Plus Entry;
               NOR=Serviceordre, selvkosttransaksjon;
               SVE=Redovisad sj„lvkostnad f”r serviceorder];
    InsertAllowed=No;
    SourceTable=Table11012825;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             "Service Order No.Editable" := TRUE;
             "Additional CostEditable" := TRUE;
           END;

    OnOpenPage=BEGIN
                 ServSetup.GET;
               END;

    OnAfterGetRecord=BEGIN
                       "Service Order No.Indent" := 0;
                       CALCFIELDS("Service Contract No.");
                       ServiceOrderNoOnFormat;
                     END;

    OnNewRecord=VAR
                  ServiceOrderExtension@1100528601 : Record 11071727;
                BEGIN
                  CALCFIELDS("Service Contract No.");
                  "Posting Date" := WORKDATE;  //db, 08-01-10: M17743
                  IF ServOrderRec.GET("Service Order No.") THEN BEGIN
                    "Currency Code" := ServOrderRec."Currency Code";
                    ServiceOrderExtension.GetServOrderExtension("Service Order No.");
                    "Price Book Code" := ServiceOrderExtension."Price Book Code";
                    "Unit Price Index Date" := ServiceOrderExtension."Price Book Index Date";
                  END;
                  //T003311
                  SetSkipDetermineChargeable(FALSE);
                  DetermineChargeable;
                  //
                END;

    OnInsertRecord=BEGIN
                     SetSkipDetermineChargeable(TRUE); //T003311
                   END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateEditable; //mg, 16-12-10: M19900
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1901310304;1 ;ActionGroup;
                      CaptionML=[ENU=Cost Plus Entries;
                                 NOR=Selvkosttransaksjoner;
                                 SVE=Redovisade sj„lvkostnader] }
      { 1901129404;2 ;Action    ;
                      CaptionML=[ENU=Show to be invoiced Entries;
                                 NOR=Vis transaksjoner som skal faktureres;
                                 SVE=Visa transaktioner som ska faktureras];
                      Image=CreateJobSalesInvoice;
                      OnAction=BEGIN
                                 ShowToBeInvoicedEntries(TRUE);
                               END;
                                }
      { 1903343504;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Service Order Card;
                                 NOR=Serviceordrekort;
                                 SVE=Serviceorderkort];
                      Image=EditLines;
                      OnAction=BEGIN
                                 ShowServiceOrderCard;
                               END;
                                }
      { 1100528604;2 ;Action    ;
                      CaptionML=[ENU=Copy;
                                 NOR=KOPIER;
                                 SVE=KOPIA];
                      Image=Copy;
                      OnAction=BEGIN
                                 DuplicateLine;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190000;1;Group  ;
                Name=tbCostPlusEntries;
                IndentationColumnName="Service Order No.Indent";
                IndentationControls=Service Order No.;
                GroupType=Repeater }

    { 1100525004;2;Field  ;
                SourceExpr="Service Order No.";
                Editable="Service Order No.Editable";
                OnValidate=VAR
                             ServiceOrder@1100525000 : Record 11012823;
                           BEGIN
                             //mg.sn, 16-12-10: M19900
                             ServiceOrder.GET("Service Order No.");
                             Rec.FILTERGROUP(4);
                             ServiceOrder.TESTFIELD("Base Service Order No.", Rec.GETFILTER("Base Service Order No."));
                             Rec.FILTERGROUP(0);
                             //mg.en, 16-12-10: M19900
                           END;

                OnLookup=VAR
                           ServiceOrder@1100525000 : Record 11012823;
                           ServiceOrderListPage@1100525001 : Page 11012830;
                         BEGIN
                           //mg.sn, 16-12-10: M19900
                           Rec.FILTERGROUP(4);
                           Rec.COPYFILTER("Base Service Order No.", ServiceOrder."Base Service Order No.");
                           Rec.FILTERGROUP(0);
                           ServiceOrder.SETCURRENTKEY("Base Service Order No.");
                           IF "Service Order No." <> '' THEN
                             ServiceOrder.GET("Service Order No.");
                           ServiceOrderListPage.LOOKUPMODE := TRUE;
                           ServiceOrderListPage.SETTABLEVIEW(ServiceOrder);
                           ServiceOrderListPage.SETRECORD(ServiceOrder);
                           IF ServiceOrderListPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             IF "Service Order No." = '' THEN BEGIN
                               ServiceOrderListPage.GETRECORD(ServiceOrder);
                               "Service Order No." := ServiceOrder."No.";
                               "Base Service Order No." := ServiceOrder."Base Service Order No.";
                             END;
                           END;
                           //mg.en, 16-12-10: M19900
                         END;
                          }

    { 1210190005;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 1210190073;2;Field  ;
                SourceExpr="Object No.";
                Visible=FALSE }

    { 1100485012;2;Field  ;
                SourceExpr="Object Customer";
                Visible=FALSE }

    { 1210190031;2;Field  ;
                SourceExpr="Posting Date" }

    { 1100528200;2;Field  ;
                SourceExpr="Execution Date" }

    { 1100485000;2;Field  ;
                SourceExpr="Source Document";
                OnDrillDown=BEGIN
                              Navigate;  //db, 05-02-07
                            END;
                             }

    { 1100485022;2;Field  ;
                SourceExpr="Source Line" }

    { 1210190047;2;Field  ;
                SourceExpr="Employee No.";
                OnValidate=BEGIN
                             EmployeeNoOnAfterValidate;
                           END;
                            }

    { 1100485010;2;Field  ;
                CaptionML=[ENU=Name;
                           NOR=Navn;
                           SVE=Namn];
                SourceExpr=EmplRec.CompleteEmployeeName("Employee No.");
                Visible=FALSE }

    { 1210190055;2;Field  ;
                SourceExpr="Item No.";
                OnValidate=BEGIN
                             ItemNoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Item No.")) THEN //DP02213
                             CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1100528500;2;Field  ;
                SourceExpr="Serial No.";
                Visible=FALSE }

    { 1100528501;2;Field  ;
                SourceExpr="Lot No.";
                Visible=FALSE }

    { 1210190065;2;Field  ;
                SourceExpr=Manufacturer }

    { 1210190057;2;Field  ;
                SourceExpr="Basic Item";
                OnValidate=BEGIN
                             BasicItemOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Basic Item")) THEN  //DP02213
                             CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1210190063;2;Field  ;
                SourceExpr="Vendor (Trade Item)" }

    { 1210190059;2;Field  ;
                SourceExpr="Trade Item";
                OnValidate=BEGIN
                             TradeItemOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF HandleLookupItem(FIELDNO("Trade Item")) THEN  //DP02213
                             CurrPage.UPDATE(FALSE);
                         END;

                OnAssistEdit=BEGIN
                               HandleItemAssistEdit(3);
                             END;
                              }

    { 1210190007;2;Field  ;
                SourceExpr="Cost Object";
                LookupPageID=Cost Object List;
                OnValidate=BEGIN
                             CostObjectOnAfterValidate;
                           END;
                            }

    { 1100485006;2;Field  ;
                SourceExpr="Cost Component" }

    { 1100485008;2;Field  ;
                SourceExpr="Wage Component";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                DrillDown=No;
                SourceExpr="Description Wage Component";
                Visible=FALSE }

    { 1210190009;2;Field  ;
                SourceExpr="Cost Type";
                Visible=FALSE }

    { 1210190011;2;Field  ;
                SourceExpr=Description }

    { 1210190067;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1210190075;2;Field  ;
                SourceExpr="Text Block" }

    { 1210190013;2;Field  ;
                SourceExpr=Quantity }

    { 1100528502;2;Field  ;
                SourceExpr="Dimensional Factor";
                Visible=FALSE }

    { 1210190015;2;Field  ;
                SourceExpr="Unit of Measure" }

    { 1210190017;2;Field  ;
                SourceExpr="Hour Rate Code";
                OnLookup=BEGIN
                           //db.sn, 07-01-11: M27653
                           LookupHourRate;
                           CurrPage.UPDATE(TRUE);
                           //db.en, 07-01-11: M27653
                         END;
                          }

    { 1100525001;2;Field  ;
                SourceExpr="Gross Price";
                Visible=FALSE }

    { 1210190001;2;Field  ;
                SourceExpr="Gross Price (LCY)" }

    { 1100485020;2;Field  ;
                SourceExpr="Purchase Discount % (Item)";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525009;2;Field  ;
                SourceExpr="Cost Price";
                Visible=FALSE }

    { 1100485018;2;Field  ;
                SourceExpr="Cost Price (LCY)" }

    { 1210190003;2;Field  ;
                SourceExpr="Sales Discount % (Item)" }

    { 1100525003;2;Field  ;
                SourceExpr="Basic Price";
                Visible=FALSE }

    { 1210190023;2;Field  ;
                SourceExpr="Basic Price (LCY)" }

    { 1100485032;2;Field  ;
                SourceExpr="Basic Price Found at";
                Visible=FALSE }

    { 1210190025;2;Field  ;
                SourceExpr="Surcharge %" }

    { 1100525005;2;Field  ;
                SourceExpr="Surcharge Amount (FCY)";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Surcharge Amount (LCY)";
                Visible=FALSE }

    { 1100525007;2;Field  ;
                SourceExpr="Sales Price";
                Visible=FALSE }

    { 1210190027;2;Field  ;
                SourceExpr="Sales Price (LCY)" }

    { 1210190019;2;Field  ;
                SourceExpr="Discount % (ServOrder)" }

    { 1100485026;2;Field  ;
                SourceExpr="Discount % (ServContr)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              DrillDownDiscount(0);  //db, 23-05-08
                            END;
                             }

    { 1100528603;2;Field  ;
                SourceExpr="Discount Term Level";
                Visible=FALSE }

    { 1100485028;2;Field  ;
                SourceExpr="Discount % (Warranty)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              DrillDownDiscount(1);  //db, 23-05-08
                            END;
                             }

    { 1100528605;2;Field  ;
                SourceExpr="Warranty Code";
                Visible=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Invoice Price";
                Visible=FALSE }

    { 1210190021;2;Field  ;
                SourceExpr="Invoice Price (LCY)" }

    { 1100485004;2;Field  ;
                SourceExpr="Additional Cost";
                Editable="Additional CostEditable" }

    { 1100525102;2;Field  ;
                SourceExpr="Extra Cost";
                Visible=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr=Checked }

    { 1210190077;2;Field  ;
                SourceExpr=Chargeable }

    { 1210190029;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1100528800;2;Field  ;
                SourceExpr=Text;
                Visible=FALSE }

    { 1210190033;2;Field  ;
                SourceExpr="Creation Date" }

    { 1210190035;2;Field  ;
                SourceExpr="Last Date Modified" }

    { 1210190037;2;Field  ;
                SourceExpr="Entry No. Service Ledger" }

    { 1100485002;2;Field  ;
                SourceExpr="Installment Scheme";
                Visible=FALSE }

    { 1100485024;2;Field  ;
                SourceExpr="Installment No.";
                Visible=FALSE }

    { 1210190039;2;Field  ;
                SourceExpr=Invoiced }

    { 1100525010;2;Field  ;
                SourceExpr="Invoiced Price";
                Visible=FALSE }

    { 1210190041;2;Field  ;
                SourceExpr="Invoiced Price (LCY)" }

    { 1100525011;2;Field  ;
                SourceExpr="Invoice in Process";
                Visible=FALSE }

    { 1210190043;2;Field  ;
                SourceExpr="Invoice in Process (LCY)" }

    { 1100525012;2;Field  ;
                SourceExpr="Credit Memo in Process";
                Visible=FALSE }

    { 1210190045;2;Field  ;
                SourceExpr="Credit Memo in Process (LCY)" }

    { 1210190081;2;Field  ;
                SourceExpr="Unit Price Extention";
                Visible=FALSE }

    { 1210190051;2;Field  ;
                SourceExpr="From Date";
                Visible=FALSE }

    { 1100485014;2;Field  ;
                SourceExpr="From Time";
                Visible=FALSE }

    { 1210190053;2;Field  ;
                SourceExpr="To Date";
                Visible=FALSE }

    { 1100485016;2;Field  ;
                SourceExpr="To Time";
                Visible=FALSE }

    { 1210190061;2;Field  ;
                SourceExpr="Glazing Service Call No.";
                Visible=FALSE }

    { 1210190079;2;Field  ;
                SourceExpr="Glazing Service Call Line No.";
                Visible=FALSE }

    { 1100528600;2;Field  ;
                SourceExpr="FSA-Created Entry";
                Visible=FALSE }

    { 1100528601;2;Field  ;
                SourceExpr="Unit Price Code" }

    { 1100528607;2;Field  ;
                SourceExpr="Surcharge Set Code (PriceBook)" }

    { 1100528602;2;Field  ;
                SourceExpr="Created by Work Order No.";
                Visible=FALSE }

    { 1100528300;2;Field  ;
                SourceExpr="Dsp Assignment Id";
                Visible=false }

    { 1100528301;2;Field  ;
                SourceExpr="Service Order Object No.";
                Visible=false }

    { 1100528302;2;Field  ;
                SourceExpr="Service Order Object Descr";
                Visible=false }

  }
  CODE
  {
    VAR
      Text009@1210190000 : TextConst 'ENU=Before editing text enter the line first;NOR=Velg rad f›r du redigerer tekst.;SVE=V„lj rad innan du redigerar text.';
      ServSetup@1100485000 : Record 11012800;
      EmplRec@1100485002 : Record 5200;
      ServOrderRec@1100485005 : Record 11012823;
      "Additional CostEditable"@19064947 : Boolean INDATASET;
      "Service Order No.Indent"@19063923 : Integer INDATASET;
      "Service Order No.Editable"@19020415 : Boolean INDATASET;
      tbCostPlusEntriesHeight@19071156 : Integer;
      tbCostPlusEntriesWidth@19043067 : Integer;
      PostingDateEditable@1100525003 : Boolean INDATASET;
      CostComponentEditable@1100525004 : Boolean INDATASET;

    PROCEDURE EditText@8();
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text009);

      TextFrm.SetSelection(DATABASE::"Service Order Cost Plus Entry","Service Order No.",
        '','','','','',"Line No.",0);

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE CompressLines@1210190000();
    VAR
      CompressCu@1210190000 : Codeunit 11012043;
      lvCostPlusRec@1210190001 : Record 11012825;
    BEGIN
      lvCostPlusRec.COPY(Rec);
      CompressCu.ProcessServiceCostPlus(lvCostPlusRec);
    END;

    PROCEDURE SetInvoiceStatus@1100525000();
    BEGIN
      SetInvoiceStatus(Rec);
    END;

    PROCEDURE UpdateEditable@1100525003();
    VAR
      ServiceOrder@1100525000 : Record 11012823;
    BEGIN
      //mg, 16-12-10: M19900
      "Service Order No.Editable" := "Service Order No." = '';
      IF NOT ServiceOrder.GET("Service Order No.") THEN
        ServiceOrder.INIT;
      "Additional CostEditable" := ServiceOrder."Source Type" <> ServiceOrder."Source Type"::Direct;
      PostingDateEditable := "Entry No. Service Ledger" = 0;
      CostComponentEditable := ServSetup."Cost Component Editable";
    END;

    PROCEDURE SetupWidthHeight@1100526200(Width@1100526200 : Integer;Height@1100526201 : Integer);
    BEGIN
      tbCostPlusEntriesWidth := Width;
      tbCostPlusEntriesHeight := Height;
    END;

    PROCEDURE ShowToBeInvoicedEntries@1100528600(Show@1100528600 : Boolean);
    BEGIN
      IF Show THEN BEGIN
        SETRANGE(Chargeable, TRUE);
        SETRANGE(Invoiced, FALSE);
      END ELSE BEGIN
        SETRANGE(Chargeable);
        SETRANGE(Invoiced);
      END;
    END;

    PROCEDURE ShowServiceOrderCard@1100528601();
    VAR
      ServiceOrder@1100528600 : Record 11012823;
    BEGIN
      IF NOT ServiceOrder.GET("Service Order No.") THEN EXIT;
      PAGE.RUNMODAL(PAGE::"Service Order (General)", ServiceOrder)
    END;

    LOCAL PROCEDURE EmployeeNoOnAfterValidate@19040646();
    BEGIN
      CurrPage.SAVERECORD;  //db, 23-06-08 (CalcSurcharge)
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      CurrPage.SAVERECORD;  //db, 23-06-08 (CalcSurcharge)
    END;

    LOCAL PROCEDURE BasicItemOnAfterValidate@19054956();
    BEGIN
      CurrPage.SAVERECORD;  //db, 23-06-08 (CalcSurcharge)
    END;

    LOCAL PROCEDURE TradeItemOnAfterValidate@19075338();
    BEGIN
      CurrPage.SAVERECORD;  //db, 23-06-08 (CalcSurcharge)
    END;

    LOCAL PROCEDURE CostObjectOnAfterValidate@19061648();
    BEGIN
      CurrPage.SAVERECORD;  //db, 23-06-08 (CalcSurcharge)
    END;

    LOCAL PROCEDURE ServiceOrderNoOnFormat@19047673();
    BEGIN
      IF "Base Service Order No." <> "Service Order No." THEN
        "Service Order No.Indent" := 1;
    END;

    PROCEDURE HandleItemAssistEdit@1100528302(ZoomType@1210190000 : Integer);
    BEGIN
      AssistEditItemData(ZoomType);
      IF ZoomType = -1 THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE SetNonEmptyCollectiveListNoFilter@1100529500();
    BEGIN
      FILTERGROUP(9);
      SETFILTER("Collective List No.", '<>%1', '');
      FILTERGROUP(0);
    END;

    BEGIN
    END.
  }
}

