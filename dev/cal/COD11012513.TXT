OBJECT Codeunit 11012513 CFW Custom Action Template
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11229460;
    OnRun=VAR
            CFWConnectorMapping@1100528303 : Record 11229354;
            RecId@1100528302 : RecordID;
            Result@1100528301 : Text;
            RECORDIDText@1100528300 : Text;
          BEGIN
            RECORDIDText := Rec.InterfaceDataGetRECORDID;
            EVALUATE(RecId,RECORDIDText);
            CFWConnectorMapping.GET(RecId);

            CASE CFWConnectorMapping."Action Code" OF
              'WEEK':    Result := WeekNumber(CFWConnectorMapping,Rec);
              'TEST':    Result := Test(CFWConnectorMapping,Rec);
            ELSE
              ERROR(NotDefinedTxt, CFWActions.TABLECAPTION, CFWActions.Code);
            END;
            Rec.InterfaceDataSetReturnValue(Result);
            MODIFY;
          END;

  }
  CODE
  {
    VAR
      NotDefinedTxt@1100528301 : TextConst 'ENU=%1 %2 not defined.';
      CFWActions@1100528300 : Record 11229478;

    LOCAL PROCEDURE WeekNumber@1100528300(CFWConnectorMapping@1100528300 : Record 11229354;VAR CFWConnectorDataLine@1100528301 : Record 11229460) Result : Text;
    VAR
      Value@1100528302 : Text;
      DateVar@1100528310 : Date;
      Field@1100528303 : Record 2000000041;
    BEGIN
      Value := GetValue(CFWConnectorMapping,CFWConnectorDataLine,Field.Type::Date);
      EVALUATE(DateVar,Value);
      Result := FORMAT(DATE2DWY(DateVar,2),0,9);
    END;

    LOCAL PROCEDURE Test@1100528302(CFWConnectorMapping@1100528300 : Record 11229354;VAR CFWConnectorDataLine@1100528301 : Record 11229460) Result : Text;
    VAR
      Value@1100528302 : Text;
      Field@1100528303 : Record 2000000041;
    BEGIN
      Value := GetValue(CFWConnectorMapping,CFWConnectorDataLine,Field.Type::Date);
      Result := STRSUBSTNO('@%1@',Value);
    END;

    LOCAL PROCEDURE GetValue@1100528301(CFWConnectorMapping@1100528301 : Record 11229354;CFWConnectorDataLine@1100528300 : Record 11229460;FieldType@1100528306 : Integer) Value : Text;
    VAR
      XmlDoc@1100528307 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XmlNode@1100528309 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      CFWConnectorManagement@1100528305 : Codeunit 11229291;
      SourceCultureInfo@1100528304 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Globalization.CultureInfo";
      TargetCultureInfo@1100528303 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Globalization.CultureInfo";
      Xpath@1100528312 : Text;
      Nodecounter@1100528311 : Integer;
      temp@1100528310 : Text;
    BEGIN
      CFWConnectorDataLine.ReadXmlDocFromBlob(CFWConnectorDataLine.FIELDNO("Inbound Data"),XmlDoc);
      Xpath := CFWConnectorDataLine.InterfaceDataGetValue('Xpath');
      IF (Xpath <>'') THEN BEGIN
        temp :=  CFWConnectorDataLine.InterfaceDataGetValue('NodeCounter');
        EVALUATE(Nodecounter,temp);
        XmlNode := XmlDoc.SelectNodes(Xpath).Item(Nodecounter-1);
        Value := CFWConnectorManagement.ReturnNodeText(XmlNode, CFWConnectorMapping."Element Name", TRUE);
      END ELSE
        Value := CFWConnectorManagement.ReturnNodeText(XmlDoc, '//'+CFWConnectorMapping."Element Name", TRUE);
      Value := CFWConnectorManagement.ChangeTextToCulture(FieldType,Value,CFWConnectorMapping.Culture);
    END;

    BEGIN
    END.
  }
}

