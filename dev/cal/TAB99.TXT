OBJECT Table 99 Item Vendor
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               InsertItemCrossReference;
               //UpdateItemCrossReference;  //**4PS: db, 01-08-19 weer dezelfde mergefout !?

               //**4PS.sn
               "Last Date Modified" := TODAY;
               CheckDoubles;
               //**4PS.en
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY; //**4PS.n
               UpdateItemCrossReference;
             END;

    OnDelete=BEGIN
               DeleteItemCrossReference;
               StoreDeletedData('D', COMPANYNAME); //**4PS.n
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY; //**4PS.n
               UpdateItemCrossReference;
               StoreDeletedData('R', COMPANYNAME); //**4PS.n
             END;

    CaptionML=[ENU=Item Vendor;
               NOR=Vareleverand›r;
               SVE=Artikelns leverant”r];
    LookupPageID=Page114;
  }
  FIELDS
  {
    { 1   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Varenr.;
                                                              SVE=Artikelnr];
                                                   NotBlank=Yes }
    { 2   ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                Vend.GET("Vendor No.");
                                                                "Lead Time Calculation" := Vend."Lead Time Calculation";
                                                              END;

                                                   CaptionML=[ENU=Vendor No.;
                                                              NOR=Leverand›rnr.;
                                                              SVE=Leverant”rsnr];
                                                   NotBlank=Yes }
    { 6   ;   ;Lead Time Calculation;DateFormula  ;OnValidate=BEGIN
                                                                LeadTimeMgt.CheckLeadTimeIsNotNegative("Lead Time Calculation");
                                                              END;

                                                   CaptionML=[ENU=Lead Time Calculation;
                                                              NOR=Beregning av leveringstid;
                                                              SVE=Ledtidsber„kning] }
    { 7   ;   ;Vendor Item No.     ;Text20        ;OnValidate=VAR
                                                                lvTradeItemRec@1100525000 : Record 11012317;
                                                              BEGIN
                                                                //**4PS.sn
                                                                IF "Vendor Item No." <> '' THEN BEGIN
                                                                  IF "Source Type" = "Source Type"::"Trade Item" THEN BEGIN
                                                                    IF FPSLicenseManagement.LicenseAndReadPermissionForTable(lvTradeItemRec) THEN
                                                                      IF NOT lvTradeItemRec.GET("Vendor (Trade Item)","Vendor Item No.") THEN
                                                                        ERROR(Text11012006);
                                                                    IF NOT CheckItemMeasure THEN BEGIN
                                                                      CASE ErrorCode OF
                                                                        1: ERROR(Text11012001);
                                                                        2: ERROR(Text11012002);
                                                                        3: ERROR(Text11012003,UnitofMeasureCde,"Vendor Item No.");
                                                                      END;
                                                                    END;
                                                                    IF FPSLicenseManagement.LicenseAndReadPermissionForTable(lvTradeItemRec) THEN
                                                                      IF lvTradeItemRec.GET("Vendor (Trade Item)","Vendor Item No.") THEN
                                                                       "GTIN Code" := lvTradeItemRec."GTIN Code (Item)";
                                                                  END;
                                                                  IF "Source Type" = "Source Type"::Item THEN BEGIN
                                                                    IF ItemRec.GET("Vendor Item No.") THEN
                                                                      "GTIN Code" := ItemRec."GTIN Code";
                                                                  END;
                                                                END;

                                                                CheckDoubles;
                                                                UpdateVendorItem;  //db, 03-09-12: 19781
                                                                //**4PS.en
                                                              END;

                                                   CaptionML=[ENU=Vendor Item No.;
                                                              NOR=Leverand›rs varenr.;
                                                              SVE=Leverant”rens artikelnr] }
    { 5700;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE (Item No.=FIELD(Item No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              NOR=Variantkode;
                                                              SVE=Variantkod] }
    { 11012000;;GTIN Code          ;Code20        ;CaptionML=[ENU=GTIN Code;
                                                              SVE=GTIN-kod] }
    { 11012001;;Vendor Name        ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              SVE=Leverant”rsnamn];
                                                   Editable=No }
    { 11012002;;Default Vendor     ;Boolean       ;CaptionML=[ENU=Default Vendor;
                                                              SVE=Standardleverant”r] }
    { 11012003;;Source Type        ;Option        ;OnValidate=BEGIN
                                                                //**4PS
                                                                IF "Source Type" <> xRec."Source Type" THEN
                                                                  IF "Vendor Item No." <> '' THEN
                                                                    ERROR(Text11012005,"Vendor Item No.");
                                                              END;

                                                   CaptionML=[ENU=Source Type;
                                                              SVE=Ursprungstyp];
                                                   OptionCaptionML=[ENU=Navision Item,Trade Item;
                                                                    SVE=Navision-artikel,Anskaffningsartikel];
                                                   OptionString=Item,Trade Item }
    { 11012004;;Local Vendor       ;Boolean       ;CaptionML=[ENU=Local Vendor;
                                                              SVE=Lokal leverant”r] }
    { 11012005;;Vendor (Trade Item);Code15        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor."Vendor (Trade Item)" WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor (Trade Item);
                                                              SVE=Leverant”r (skaffningsartikel)];
                                                   Editable=No }
    { 11012006;;Description Trade Item;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Trade Item"."Item Description" WHERE (Item Code=FIELD(Vendor Item No.),
                                                                                                             Vendor=FIELD("Vendor (Trade Item)")));
                                                   CaptionML=[ENU=Description Trade Item;
                                                              SVE=Beskrivning, skaffningsartikel] }
    { 11012007;;Serial No.         ;Integer       ;CaptionML=[ENU=Serial No.;
                                                              SVE=Serienr] }
    { 11012008;;Last Date Modified ;Date          ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Last Date Modified;
                                                              SVE=Uppdateringsdatum];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Vendor No.,Item No.,Variant Code,Serial No.;
                                                   Clustered=Yes }
    {    ;Item No.,Variant Code,Vendor No.         }
    {    ;Vendor No.,Vendor Item No.               }
    {    ;Vendor Item No.                          }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Vend@1000 : Record 23;
      ItemCrossReference@1002 : Record 5717;
      ItemRec@1100525006 : Record 27;
      DistIntegration@1001 : Codeunit 5702;
      LeadTimeMgt@1003 : Codeunit 5404;
      Text11012001@1100525000 : TextConst 'ENU=Itemrelation not Allowed By deviant Base Unit of Measure;SVE=Artikelrelation inte till†ten av avvikande basenhet';
      Text11012002@1100525002 : TextConst 'ENU=Package Unit of the Trade Item is not present in table Item Unit of the Navision Item.;SVE=Anskaffningsartikeln saknar paketenhet i tabellen f”r artikelenheter i Navision-artikeln.';
      Text11012003@1100525001 : TextConst 'ENU=Relationship between Application unit (%1) en Packaging Unit is not the same as quantity by unit of measure of Trade Item %2;SVE=Relationen mellan programenheten (%1) och paketenheten „r inte samma som antalet efter enhet i skaffningsartikeln %2';
      ErrorCode@1100525003 : Integer;
      UnitofMeasureCde@1100525004 : Code[20];
      Text11012004@1100525005 : TextConst 'ENU=Adding not Allowed, Supplier Item already exists.;SVE=Till„gg „r inte till†tet, leverant”rsartikeln finns redan.';
      Text11012005@1100525007 : TextConst 'ENU=It is Not Allowed to Change Source Because Item No. Vendor (%1) is not empty.;SVE=Det „r inte till†tet att „ndra k„lla p† grund av artikelnr. Leverant”r (%1) „r inte tomt.';
      Text11012006@1100525008 : TextConst 'ENU=Trade Item does not exist.;SVE=Anskaffningsartikeln finns inte.';
      Text11012007@1100525009 : TextConst 'ENU=Not allowed, Item is Expired;SVE=Inte till†tet, artikeln har g†tt ut';
      FPSLicenseManagement@1100527400 : Codeunit 11229289;

    LOCAL PROCEDURE InsertItemCrossReference@1();
    BEGIN
      IF ItemCrossReference.WRITEPERMISSION THEN
        IF ("Vendor No." <> '') AND ("Item No." <> '') THEN
          DistIntegration.InsertItemCrossReference(Rec);
    END;

    LOCAL PROCEDURE DeleteItemCrossReference@2();
    BEGIN
      IF ItemCrossReference.WRITEPERMISSION THEN
        IF ("Vendor No." <> '') AND ("Item No." <> '') THEN
          DistIntegration.DeleteItemCrossReference(Rec);
    END;

    LOCAL PROCEDURE UpdateItemCrossReference@6();
    BEGIN
      IF ItemCrossReference.WRITEPERMISSION THEN
        IF ("Vendor No." <> '') AND ("Item No." <> '') THEN
          IF ("Vendor No." <> xRec."Vendor No.") OR ("Item No." <> xRec."Item No.") OR
             ("Variant Code" <> xRec."Variant Code") OR ("Vendor Item No." <> xRec."Vendor Item No.")
          THEN
            DistIntegration.UpdateItemCrossReference(Rec,xRec);
    END;

    PROCEDURE LookupVendorItem@1100485000();
    VAR
      ItemRec@1100485001 : Record 27;
      TradeItemRec@1100485000 : Record 11012317;
    BEGIN
      //**4PS
      IF "Source Type" = "Source Type"::Item THEN BEGIN
        IF ItemRec.GET("Vendor Item No.") THEN;
        IF PAGE.RUNMODAL(0, ItemRec) = ACTION::LookupOK THEN BEGIN
          "Vendor Item No." := ItemRec."No.";
          "GTIN Code" := ItemRec."GTIN Code";
        END;
      END;
      IF "Source Type" = "Source Type"::"Trade Item" THEN BEGIN
        Vend.GET("Vendor No.");
        IF Vend."Vendor (Trade Item)" = '' THEN EXIT;
        TradeItemRec.SETRANGE(Vendor, Vend."Vendor (Trade Item)");
        IF TradeItemRec.GET(Vend."Vendor (Trade Item)", "Vendor Item No.") THEN;
        IF PAGE.RUNMODAL(0, TradeItemRec) = ACTION::LookupOK THEN BEGIN
          IF NOT TradeItemRec.Expired THEN BEGIN
            VALIDATE("Vendor Item No.",TradeItemRec."Item Code");
            "GTIN Code" := TradeItemRec."GTIN Code (Item)";
          END ELSE
            ERROR(Text11012007)
        END;
      END;
    END;

    PROCEDURE CheckItemMeasure@1100525000() : Boolean;
    VAR
      lvItemRec@1100525006 : Record 27;
      lvTradeItemRec@1100525004 : Record 11012317;
      lvItemUnitMeasureRec@1100525003 : Record 5404;
      lvVendorRec@1100525001 : Record 23;
    BEGIN
      //**4PS
      lvItemRec.GET("Item No.");
      IF "Vendor Item No." <> '' THEN BEGIN
        IF "Source Type" = "Source Type"::"Trade Item" THEN BEGIN
          lvVendorRec.GET("Vendor No.");
          IF FPSLicenseManagement.LicenseAndReadPermissionForTable(lvTradeItemRec) THEN
            IF lvTradeItemRec.GET(lvVendorRec."Vendor (Trade Item)","Vendor Item No.") THEN
              IF lvItemRec."Base Unit of Measure" <> UPPERCASE(lvTradeItemRec."Application Unit") THEN BEGIN
                ErrorCode := 1;
                EXIT(FALSE);
              END;
      END;
        lvItemUnitMeasureRec.SETRANGE("Item No.","Item No.");
        lvItemUnitMeasureRec.SETRANGE(Code,lvTradeItemRec."Packaging Unit");
        IF NOT lvItemUnitMeasureRec.FINDFIRST THEN BEGIN
          ErrorCode := 2;
          EXIT(FALSE);
        END ELSE BEGIN
          IF lvTradeItemRec."Application Unit Quantity" = lvItemUnitMeasureRec."Qty. per Unit of Measure" THEN
            EXIT(TRUE)
          ELSE BEGIN
            ErrorCode := 3;
            UnitofMeasureCde := lvTradeItemRec."Application Unit";
            EXIT(FALSE);
          END;
        END;
      END;
    END;

    PROCEDURE CheckDoubles@1100525001();
    VAR
      lvItemVendorRec@1100525000 : Record 99;
    BEGIN
      //**4PS
      IF "Vendor Item No." = '' THEN EXIT;
      IF "Source Type" <> "Source Type"::"Trade Item" THEN EXIT;

      lvItemVendorRec.SETRANGE("Item No.","Item No.");
      lvItemVendorRec.SETRANGE("Source Type","Source Type");
      CALCFIELDS("Vendor (Trade Item)");
      lvItemVendorRec.SETRANGE("Vendor (Trade Item)","Vendor (Trade Item)");
      lvItemVendorRec.SETRANGE("Vendor Item No.","Vendor Item No.");
      IF lvItemVendorRec.FINDFIRST THEN
        ERROR(Text11012004);
    END;

    PROCEDURE GetDefaultVendorNo@1100530000(ItemNo@1100530000 : Code[20];VariantCode@1100530001 : Code[10];OneIsDefault@1100530002 : Boolean) : Code[20];
    VAR
      ItemVend@1100530003 : Record 99;
    BEGIN
      //**4PS
      IF (ItemNo = '') THEN
        EXIT('');

      ItemVend.SETCURRENTKEY("Item No.", "Variant Code", "Vendor No.");
      ItemVend.SETRANGE("Item No.", ItemNo);
      ItemVend.SETRANGE("Variant Code", VariantCode);
      ItemVend.SETFILTER("Vendor No.", '<>%1', '');
      ItemVend.SETRANGE("Default Vendor", TRUE);
      IF ItemVend.FINDFIRST THEN
        EXIT(ItemVend."Vendor No.");

      IF OneIsDefault THEN BEGIN
        ItemVend.SETRANGE("Default Vendor");  //Reset filter
        IF ItemVend.COUNT = 1 THEN BEGIN
          IF ItemVend.FINDFIRST THEN
            EXIT(ItemVend."Vendor No.");
        END;
      END;

      EXIT('');
    END;

    PROCEDURE UpdateVendorItem@1100409000();
    VAR
      ItemCostMgt@1100409000 : Codeunit 5804;
    BEGIN
      //**4PS
      //db, 03-09-12: 19781
      IF "Source Type" <> "Source Type"::Item THEN EXIT;

      ItemRec.GET("Item No.");
      IF ItemRec."Vendor No." = xRec."Vendor No." THEN BEGIN
        ItemRec."Vendor No." := "Vendor No.";
        ItemRec.MODIFY(TRUE);
        ItemCostMgt.UpdateSKUFromItem(ItemRec, ItemRec.FIELDNO("Vendor Item No."));
      END;
      IF ItemRec."Vendor Item No." = xRec."Vendor Item No." THEN BEGIN
        ItemRec."Vendor Item No." := "Vendor Item No.";
        ItemRec.MODIFY(TRUE);
        ItemCostMgt.UpdateSKUFromItem(ItemRec, ItemRec.FIELDNO("Vendor Item No."));
      END;
    END;

    LOCAL PROCEDURE StoreDeletedData@1100528703(Mode@1100528001 : Code[1];Company@1100528000 : Text[50]);
    VAR
      InstallationManagement@1100528700 : Codeunit 11012268;
      DeletedDataMgtApps@1100528701 : Codeunit 11012440;
    BEGIN
      //**4PS
      IF NOT InstallationManagement.LicensePermissionForCodeUnit(CODEUNIT::"Deleted Data Mgt (Apps)") THEN
        EXIT;

      IF (Mode = 'D') THEN
        DeletedDataMgtApps.StoreDeletedItemVendor(Rec, Company);

      IF (Mode = 'R') THEN
        IF (xRec."Vendor No." = '') THEN
          DeletedDataMgtApps.StoreDeletedItemVendor(Rec, Company)
        ELSE
          DeletedDataMgtApps.StoreDeletedItemVendor(xRec, Company);
    END;

    BEGIN
    {
      db, 17-09-12: C002302; CheckDoubles removed: OnModify, OnLookup (Vendor Item No.)
    }
    END.
  }
}

