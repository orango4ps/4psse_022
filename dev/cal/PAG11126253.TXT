OBJECT Page 11126253 Tmp. Surv. Loc. Str. Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=šbersicht Standortstruktur Zeilen;
               ENU=Survey Location Structure Lines;
               NLD=Locatiestructuurregels;
               NOR=Rader for kartlegging av lokasjonsstruktur;
               SVE=Kartl„ggn.platsstruktur linjer];
    SourceTable=Table11071806;
    DataCaptionExpr=DataCaptionTxt;
    PageType=List;
    SourceTableTemporary=Yes;
    OnOpenPage=VAR
                 ServiceSetup@1100528600 : Record 11012800;
               BEGIN
                 ServiceSetup.GET;
                 TenderCodeSystemNo := ServiceSetup."Tender Code System 1";
               END;

    OnAfterGetRecord=BEGIN
                       ServiceAmountHideValue := FALSE;
                       ServiceRateHideValue := FALSE;
                       SalesAmountHideValue := FALSE;
                       CostAmountHideValue := FALSE;
                       SalesPriceHideValue := FALSE;
                       CorrectionFactorHideValue := FALSE;
                       BaseSalesPriceHideValue := FALSE;
                       SalesSurchargeAmountHideValue := FALSE;
                       CostPriceHideValue := FALSE;
                       SurchargeAmountHideValue := FALSE;
                       NetCostPriceHideValue := FALSE;

                       DescriptionIndent := 0;

                       IF "Object Line" THEN BEGIN
                         CALCFIELDS(Description, "Description 2");
                         LineDescription := Description;
                         LineDescription2 := "Description 2";
                       END ELSE BEGIN
                         LineDescription := "Code Description";
                         LineDescription2 := '';
                       END;

                       LineDescriptionOnFormat;
                       NetCostPriceOnFormat;
                       SurchargeAmountOnFormat;
                       CostPriceOnFormat;
                       SalesSurchargeAmountOnFormat;
                       BaseSalesPriceOnFormat;
                       CorrectionFactorOnFormat;
                       SalesPriceOnFormat;
                       CostAmountOnFormat;
                       SalesAmountOnFormat;
                       ServiceRateOnFormat;
                       ServiceAmountOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1100525006;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525005;1 ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&uncties;
                                 NOR=Fu&nksjon;
                                 SVE=F&unktioner] }
      { 1100525007;2 ;Action    ;
                      CaptionML=[DEU=Baubeschreibungscode System w„hlen;
                                 ENU=Select Tender Code System;
                                 NLD=Bestekscode systeem selecteren;
                                 NOR=Velg system for tilbudskode;
                                 SVE=V„lj andbudkodsystem];
                      Promoted=Yes;
                      Image=SelectLineToApply;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceSetup@1100525001 : Record 11012800;
                                 CodingSystem@1100525000 : Record 11012088;
                               BEGIN
                                 ServiceSetup.GET;
                                 IF ServiceSetup."Tender Code System 1" <> '' THEN
                                   IF CodingSystem.GET(ServiceSetup."Tender Code System 1") THEN
                                     CodingSystem.MARK(TRUE);
                                 IF ServiceSetup."Tender Code System 2" <> '' THEN
                                   IF CodingSystem.GET(ServiceSetup."Tender Code System 2") THEN
                                     CodingSystem.MARK(TRUE);
                                 IF TenderCodeSystemNo <> '' THEN
                                   CodingSystem.GET(TenderCodeSystemNo);
                                 CodingSystem.MARKEDONLY(TRUE);
                                 IF PAGE.RUNMODAL(0, CodingSystem) = ACTION::LookupOK THEN
                                   TenderCodeSystemNo := CodingSystem."Coding System";

                                 TestValidTenderCodeSystem(TenderCodeSystemNo);
                                 BuildLocationTenderDocument(SurveyNo, LocationCode, TenderCodeSystemNo);
                               END;
                                }
      { 1100525003;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Kollektiv „ndern (Baubeschreibungsstruktur);
                                 ENU=Modify Collectively (Tender Element Structure);
                                 NLD=Collectief bijwerken (Besteksstructuur);
                                 NOR=Modifiser kollektivt (tilbudselementstruktur);
                                 SVE=Žndra samlat (Anbudselementstruktur)];
                      Promoted=Yes;
                      Image=CalculateLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 UpdateSurveyLocObjects;
                               END;
                                }
      { 1100525002;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Ruder Verkaufsbetrag (Baubeschreibungsstruktur);
                                 ENU=Round Sales Amount (Tender Element Structure);
                                 NLD=Verkoopbedrag afronden (Besteksstructuur);
                                 NOR=Rund av salgsbel›p (tilbudselementstruktur);
                                 SVE=Omg†ng, f”rs„ljningsbelopp (anbudselementstruktur)];
                      Promoted=Yes;
                      Image=CalculateLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 RoundSalesAmount;
                               END;
                                }
      { 1100525001;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Stunden nach Objekttr„ger anpassen (Baubeschreibungsstruktur);
                                 ENU=Adjust Hours by Cost Object (Tender Element Structure);
                                 NLD=Uren per kostendrager corrigeren (Besteksstructuur);
                                 NOR=Juster timer etter kostnadsobjekt (tilbudselementstruktur);
                                 SVE=Justera timmar efter kostnadsobjekt (anbudselementstruktur)];
                      Promoted=Yes;
                      Image=CalculateLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 AdjustHoursByCostObject;
                               END;
                                }
      { 1100525000;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Verbinden mit Servicevertrag (Baubeschreibungsstruktur);
                                 ENU=Attach to Service Contract (Tender Element Structure);
                                 NLD=Koppel aan servicecontract (Besteksstructuur);
                                 NOR=Legg ved servicekontrakt (tilbudselementstruktur);
                                 SVE=Bifoga till servicekontrakt (anbudselementstruktur)];
                      Promoted=Yes;
                      Image=SelectLineToApply;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 AttachToContract();
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100528600;1;Group  ;
                Editable=FALSE;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1100528607;2;Field  ;
                SourceExpr=Code }

    { 1100528613;2;Field  ;
                Name=Description;
                CaptionML=[DEU=Beschreibung;
                           ENU=Description;
                           NLD=Omschrijving;
                           NOR=Beskrivelse;
                           SVE=Beskrivning];
                SourceExpr=LineDescription }

    { 1100528602;2;Field  ;
                CaptionML=[DEU=Beschreibung 2;
                           ENU=Description 2;
                           NLD=Omschrijving 2;
                           NOR=Beskrivelse 2;
                           SVE=Beskrivning 2];
                SourceExpr=LineDescription2 }

    { 1100528615;2;Field  ;
                SourceExpr="Standard Object No." }

    { 1100528619;2;Field  ;
                SourceExpr=Quantity }

    { 1100528621;2;Field  ;
                SourceExpr="Quantity per Object";
                Visible=FALSE }

    { 1100528631;2;Field  ;
                SourceExpr="Service Package";
                Visible=FALSE }

    { 1100528635;2;Field  ;
                SourceExpr="Object Customer";
                Visible=FALSE }

    { 1100528637;2;Field  ;
                SourceExpr="In use since";
                Visible=FALSE }

    { 1100528639;2;Field  ;
                SourceExpr="Warranty Starting Date";
                Visible=FALSE }

    { 1100528641;2;Field  ;
                SourceExpr="Warranty Code";
                Visible=FALSE }

    { 1100528643;2;Field  ;
                SourceExpr=Building;
                Visible=FALSE }

    { 1100528645;2;Field  ;
                SourceExpr=Floor;
                Visible=FALSE }

    { 1100528647;2;Field  ;
                SourceExpr=Room;
                Visible=FALSE }

    { 1100528649;2;Field  ;
                SourceExpr="Customer Feature";
                Visible=FALSE }

    { 1100528601;2;Field  ;
                SourceExpr="Serial No.";
                Visible=FALSE }

    { 1100528651;2;Field  ;
                SourceExpr="Year of Manufacture";
                Visible=FALSE }

    { 1100528653;2;Field  ;
                SourceExpr="Net Cost Price";
                HideValue=NetCostPriceHideValue }

    { 1100528603;2;Field  ;
                SourceExpr="Net Cost Price (Material)";
                Visible=FALSE }

    { 1100528604;2;Field  ;
                SourceExpr="Net Cost Price (Labor)";
                Visible=FALSE }

    { 1100528605;2;Field  ;
                SourceExpr="Net Cost Price (Subcontr.)";
                Visible=FALSE }

    { 1100528606;2;Field  ;
                SourceExpr="Net Cost Price (Plant)";
                Visible=FALSE }

    { 1100528608;2;Field  ;
                SourceExpr="Net Cost Price (Sundry)";
                Visible=FALSE }

    { 1100528655;2;Field  ;
                SourceExpr="Surcharge Amount";
                HideValue=SurchargeAmountHideValue }

    { 1100528657;2;Field  ;
                SourceExpr="Cost Price";
                HideValue=CostPriceHideValue }

    { 1100528659;2;Field  ;
                SourceExpr="Sales Surcharge Amount";
                HideValue=SalesSurchargeAmountHideValue }

    { 1100528661;2;Field  ;
                SourceExpr="Base Sales Price";
                HideValue=BaseSalesPriceHideValue }

    { 1100528663;2;Field  ;
                SourceExpr="Correction Factor";
                HideValue=CorrectionFactorHideValue }

    { 1100528665;2;Field  ;
                SourceExpr="Sales Price";
                HideValue=SalesPriceHideValue }

    { 1100528667;2;Field  ;
                SourceExpr="Cost Amount";
                HideValue=CostAmountHideValue }

    { 1100528669;2;Field  ;
                SourceExpr="Sales Amount";
                HideValue=SalesAmountHideValue }

    { 1100528671;2;Field  ;
                SourceExpr="Customer Object Group" }

    { 1100528673;2;Field  ;
                SourceExpr="Service Rate";
                HideValue=ServiceRateHideValue }

    { 1100528675;2;Field  ;
                SourceExpr="Service Amount";
                HideValue=ServiceAmountHideValue }

    { 1100528677;2;Field  ;
                SourceExpr="Include in Contract" }

    { 1100528679;2;Field  ;
                SourceExpr="Objects Created" }

    { 1100528681;2;Field  ;
                SourceExpr="Service Contract No." }

  }
  CODE
  {
    VAR
      SurveyNo@1100528603 : Code[20];
      LocationCode@1100528602 : Code[10];
      TenderCodeSystemNo@1100528601 : Code[20];
      LineNo@1100528600 : Integer;
      LineDescription@1100528604 : Text[100];
      Text000@1100528605 : TextConst 'DEU=Nur in der Serviceeinrichtung eingerichtete Baubeschreibungssysteme k”nnen verwendet werden.;ENU=Only Tender Code Systems set in Service Setup can be used.;NLD=Alleen bestekscoderingsystemen vastgelegd in de serviceinstellingen kunnen worden gebruikt.;NOR=Kun Tilbudskodesystemer valgt i Serviceinstillinger kan brukes;SVE=Endast anbudskodsystem inst„llt i serviceinst„llningar kan anv„ndas.';
      Text003@1100528606 : TextConst 'DEU=Zuerst Datens„tze ausw„hlen;ENU=First select records;NLD=Selecteer eerst records;NOR=Marker poster f›rst;SVE=Markera f”rst poster';
      Text004@1100528609 : TextConst 'DEU=%1 der %2 Objekte sind in der Baubeschreibungsstruktur enthalten;ENU=%1 of %2 Objects are included in the Tender Element Structure;NLD=%1 van %2 objecten zijn opgenomen in de besteksstructuur;NOR=%1 av %2 objekter er inkludert i tilbudselementstrukturen.;SVE=%1 i %2 objekt ing†r i anbudselementstruktur';
      LineDescription2@1100528607 : Text[50];
      MessageTxt@1100528610 : Text[80];
      DescriptionEmphasize@19010547 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;
      NetCostPriceHideValue@19076013 : Boolean INDATASET;
      SurchargeAmountHideValue@19014877 : Boolean INDATASET;
      CostPriceHideValue@19013020 : Boolean INDATASET;
      SalesSurchargeAmountHideValue@19043667 : Boolean INDATASET;
      BaseSalesPriceHideValue@19012414 : Boolean INDATASET;
      CorrectionFactorHideValue@19076625 : Boolean INDATASET;
      SalesPriceHideValue@19025435 : Boolean INDATASET;
      CostAmountHideValue@19070123 : Boolean INDATASET;
      SalesAmountHideValue@19062867 : Boolean INDATASET;
      ServiceRateHideValue@19015016 : Boolean INDATASET;
      ServiceAmountHideValue@19038052 : Boolean INDATASET;
      Text005@1100525000 : TextConst 'DEU=Baubeschreibungssystem %1;ENU=Tender Code System %1;NLD=Bestekscode systeem %1;NOR=Tilbudskodesystem %1;SVE=Anbudskodsystem %1';

    PROCEDURE SetDefaults@1100526209(ISurveyNo@1100528600 : Code[20];ILocationCode@1100526201 : Code[10]);
    VAR
      ServiceSetup@1100525000 : Record 11012800;
    BEGIN
      ServiceSetup.GET;
      TenderCodeSystemNo := ServiceSetup."Tender Code System 1";

      SurveyNo := ISurveyNo;
      LocationCode := ILocationCode;
      BuildLocationTenderDocument(SurveyNo, LocationCode, TenderCodeSystemNo);
    END;

    PROCEDURE BuildLocationTenderDocument@1100526201(ISurveyNo@1100528601 : Code[20];ILocationCode@1100526207 : Code[10];ITenderCodeSystemNo@1100526201 : Code[20]);
    VAR
      ServiceSetup@1100526200 : Record 11012800;
      CodeperCodingSystem@1100526206 : Record 11012089;
      ServSurvLocationObject@1100528600 : Record 11071813;
      TmpServiceSurveyStructureLine@1100526204 : TEMPORARY Record 11071806;
      TmpServiceSurveyStructureLine2@1100526202 : TEMPORARY Record 11071806;
      NoOfObjects@1100528602 : Integer;
    BEGIN
      ServiceSetup.GET;

      ServSurvLocationObject.SETRANGE("Survey No.", ISurveyNo);
      IF ILocationCode <> '' THEN
        ServSurvLocationObject.SETRANGE("Location Code", ILocationCode);
      NoOfObjects := ServSurvLocationObject.COUNT;

      CodeperCodingSystem.SETRANGE("Coding System", ITenderCodeSystemNo);
      IF CodeperCodingSystem.FINDSET THEN BEGIN
        REPEAT
          InsertTempRecord(CodeperCodingSystem, '', 0, TmpServiceSurveyStructureLine);
          IF ServiceSetup."Tender Code System 1" = ITenderCodeSystemNo THEN BEGIN
            ServSurvLocationObject.SETRANGE("Tender Code System 1", ITenderCodeSystemNo);
            ServSurvLocationObject.SETRANGE("Tender Code 1", CodeperCodingSystem.Code);
          END ELSE BEGIN
            ServSurvLocationObject.SETRANGE("Tender Code System 2", ITenderCodeSystemNo);
            ServSurvLocationObject.SETRANGE("Tender Code 2", CodeperCodingSystem.Code);
          END;
          IF ServSurvLocationObject.FINDSET THEN BEGIN
            REPEAT
              InsertTempRecord(
                CodeperCodingSystem, ServSurvLocationObject."Location Code",
                ServSurvLocationObject."Seq. No.", TmpServiceSurveyStructureLine);
              InsertCheckRecord(CodeperCodingSystem.Code, TmpServiceSurveyStructureLine2);
              InsertCheckRecord(CodeperCodingSystem.Chapter, TmpServiceSurveyStructureLine2);
              InsertCheckRecord(CodeperCodingSystem.Paragraph, TmpServiceSurveyStructureLine2);
            UNTIL ServSurvLocationObject.NEXT = 0;
          END;
        UNTIL CodeperCodingSystem.NEXT = 0;

        IF TmpServiceSurveyStructureLine.FINDFIRST THEN BEGIN
          REPEAT
            IF NOT (TmpServiceSurveyStructureLine."Object Line") AND (TmpServiceSurveyStructureLine.Level <> 0) THEN
              IF NOT TmpServiceSurveyStructureLine2.GET(SurveyNo, LocationCode, 0, TmpServiceSurveyStructureLine.Code, 0) THEN
                TmpServiceSurveyStructureLine.DELETE;
          UNTIL TmpServiceSurveyStructureLine.NEXT = 0;
        END;
      END;

      TmpServiceSurveyStructureLine.SETFILTER("Seq. No.", '<>%1', 0);
      IF NoOfObjects <> TmpServiceSurveyStructureLine.COUNT THEN
        MessageTxt := STRSUBSTNO(Text004, TmpServiceSurveyStructureLine.COUNT, NoOfObjects)
      ELSE
        MessageTxt := '';
      TmpServiceSurveyStructureLine.SETRANGE("Seq. No.");

      DELETEALL;
      TmpServiceSurveyStructureLine.SETCURRENTKEY("Survey No.", Code, "Line No.");
      IF TmpServiceSurveyStructureLine.FINDFIRST THEN BEGIN
        REPEAT
          COPY(TmpServiceSurveyStructureLine);
          INSERT;
        UNTIL TmpServiceSurveyStructureLine.NEXT = 0;
        FINDFIRST;
      END;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE InsertTempRecord@1100526212(ICodeperCodingSystem@1100526200 : Record 11012089;ILocationCode@1100528600 : Code[10];ISeqNo@1100526201 : Integer;VAR ITmpServiceSurveyStructureLine@1100526202 : TEMPORARY Record 11071806);
    BEGIN
      IF ISeqNo = 0 THEN
        LineNo := 0
      ELSE
        LineNo += 10000;
      ITmpServiceSurveyStructureLine.INIT;
      ITmpServiceSurveyStructureLine."Survey No." := SurveyNo;
      ITmpServiceSurveyStructureLine."Location Code" := ILocationCode;
      ITmpServiceSurveyStructureLine.Code := ICodeperCodingSystem.Code;
      ITmpServiceSurveyStructureLine."Line No." := LineNo;
      ITmpServiceSurveyStructureLine."Object Line" := ISeqNo > 0;
      ITmpServiceSurveyStructureLine."Seq. No." := ISeqNo;
      ITmpServiceSurveyStructureLine.Level := ICodeperCodingSystem.Level;
      ITmpServiceSurveyStructureLine."Element Level 1" := ICodeperCodingSystem.Chapter;
      ITmpServiceSurveyStructureLine."Element Level 2" := ICodeperCodingSystem.Paragraph;
      ITmpServiceSurveyStructureLine."Code Description" := ICodeperCodingSystem.Description;
      ITmpServiceSurveyStructureLine.INSERT;
    END;

    PROCEDURE InsertCheckRecord@1100526200(ICode@1100526200 : Code[20];VAR ITmpServiceSurveyStructureLine@1100526201 : TEMPORARY Record 11071806);
    BEGIN
      IF NOT ITmpServiceSurveyStructureLine.GET(SurveyNo, LocationCode, 0, ICode, 0) THEN BEGIN
        ITmpServiceSurveyStructureLine.INIT;
        ITmpServiceSurveyStructureLine."Survey No." := SurveyNo;
        ITmpServiceSurveyStructureLine."Location Code" := LocationCode;
        ITmpServiceSurveyStructureLine.Code := ICode;
        ITmpServiceSurveyStructureLine.INSERT;
      END;
    END;

    PROCEDURE TestValidTenderCodeSystem@1100528600(ITenderCodeSystem@1100528600 : Code[20]);
    VAR
      ServiceSetup@1100528601 : Record 11012800;
    BEGIN
      ServiceSetup.GET;
      IF (ServiceSetup."Tender Code System 1" <> ITenderCodeSystem) AND (ServiceSetup."Tender Code System 2" <> ITenderCodeSystem) THEN
        ERROR(Text000);
    END;

    PROCEDURE UpdateSurveyLocObjects@1100528601();
    VAR
      TmpServiceSurveyStructureLine@1100528600 : TEMPORARY Record 11071806;
      ServSurvLocationObject@1100528602 : Record 11071813;
      UpdateSurvLocationObjectsREP@1100528603 : Report 11012738;
    BEGIN
      GetSelectedRecordSet(TmpServiceSurveyStructureLine);
      IF TmpServiceSurveyStructureLine.ISEMPTY THEN
        ERROR(Text003);

      TmpServiceSurveyStructureLine.GetObjectRecordSetFromTmp(TmpServiceSurveyStructureLine, ServSurvLocationObject);
      UpdateSurvLocationObjectsREP.SETTABLEVIEW(ServSurvLocationObject);
      UpdateSurvLocationObjectsREP.RUNMODAL;

      CLEARMARKS;
    END;

    PROCEDURE AttachToContract@1100528603();
    VAR
      TmpServiceSurveyStructureLine@1100528600 : TEMPORARY Record 11071806;
      ServSurvLocationObject@1100528601 : Record 11071813;
    BEGIN
      GetSelectedRecordSet(TmpServiceSurveyStructureLine);
      IF TmpServiceSurveyStructureLine.ISEMPTY THEN
        ERROR(Text003);

      TmpServiceSurveyStructureLine.GetObjectRecordSetFromTmp(TmpServiceSurveyStructureLine, ServSurvLocationObject);
      ServSurvLocationObject.AttachSelObjectsToContract(ServSurvLocationObject);
    END;

    PROCEDURE RoundSalesAmount@1100528604();
    VAR
      TmpServiceSurveyStructureLine@1100528601 : TEMPORARY Record 11071806;
      ServSurvLocationObject@1100528600 : Record 11071813;
    BEGIN
      GetSelectedRecordSet(TmpServiceSurveyStructureLine);
      IF TmpServiceSurveyStructureLine.ISEMPTY THEN
        ERROR(Text003);
      TmpServiceSurveyStructureLine.GetObjectRecordSetFromTmp(TmpServiceSurveyStructureLine, ServSurvLocationObject);
      ServSurvLocationObject.RoundSalesAmount(ServSurvLocationObject);
    END;

    PROCEDURE ShowUnattachedObjects@1100528602();
    VAR
      TmpServiceSurveyStructureLine@1100528601 : TEMPORARY Record 11071806;
      ServSurvLocationObject@1100528600 : Record 11071813;
    BEGIN
      GetSelectedRecordSet(TmpServiceSurveyStructureLine);
      TmpServiceSurveyStructureLine.GetObjectRecordSetFromTmp(TmpServiceSurveyStructureLine, ServSurvLocationObject);
      ServSurvLocationObject.SETRANGE("Survey No.", SurveyNo);
      IF LocationCode <> '' THEN
        ServSurvLocationObject.SETRANGE("Location Code", LocationCode);
      ServSurvLocationObject.MARKEDONLY(FALSE);
      IF ServSurvLocationObject.FINDSET THEN
        REPEAT
          ServSurvLocationObject.MARK(NOT ServSurvLocationObject.MARK);
        UNTIL ServSurvLocationObject.NEXT = 0;
      ServSurvLocationObject.MARKEDONLY(TRUE);
      PAGE.RUNMODAL(0, ServSurvLocationObject);
    END;

    PROCEDURE AdjustHoursByCostObject@1100528607();
    VAR
      TmpServiceSurveyStructureLine@1100528601 : TEMPORARY Record 11071806;
      ServSurvLocationObject@1100528600 : Record 11071813;
    BEGIN
      GetSelectedRecordSet(TmpServiceSurveyStructureLine);
      TmpServiceSurveyStructureLine.GetObjectRecordSetFromTmp(TmpServiceSurveyStructureLine, ServSurvLocationObject);
      ServSurvLocationObject.AdjustHoursByCostObject(ServSurvLocationObject);
    END;

    LOCAL PROCEDURE TenderCodeSystemNoOnAfterValid@19030220();
    BEGIN
      BuildLocationTenderDocument(SurveyNo, LocationCode, TenderCodeSystemNo);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE LineDescriptionOnFormat@19076134();
    BEGIN
      IF "Object Line" THEN
        DescriptionIndent := Level + 1
      ELSE BEGIN
        DescriptionIndent := Level;
        DescriptionEmphasize := TRUE;
      END;
    END;

    LOCAL PROCEDURE NetCostPriceOnFormat@19043991();
    BEGIN
      IF NOT "Object Line" THEN
        NetCostPriceHideValue := TRUE;
    END;

    LOCAL PROCEDURE SurchargeAmountOnFormat@19045600();
    BEGIN
      IF NOT "Object Line" THEN
        SurchargeAmountHideValue := TRUE;
    END;

    LOCAL PROCEDURE CostPriceOnFormat@19057049();
    BEGIN
      IF NOT "Object Line" THEN
        CostPriceHideValue := TRUE;
    END;

    LOCAL PROCEDURE SalesSurchargeAmountOnFormat@19040869();
    BEGIN
      IF NOT "Object Line" THEN
        SalesSurchargeAmountHideValue := TRUE;
    END;

    LOCAL PROCEDURE BaseSalesPriceOnFormat@19069926();
    BEGIN
      IF NOT "Object Line" THEN
        BaseSalesPriceHideValue := TRUE;
    END;

    LOCAL PROCEDURE CorrectionFactorOnFormat@19017225();
    BEGIN
      IF NOT "Object Line" THEN
        CorrectionFactorHideValue := TRUE;
    END;

    LOCAL PROCEDURE SalesPriceOnFormat@19053956();
    BEGIN
      IF NOT "Object Line" THEN
        SalesPriceHideValue := TRUE;
    END;

    LOCAL PROCEDURE CostAmountOnFormat@19034852();
    BEGIN
      IF NOT "Object Line" THEN
        CostAmountHideValue := TRUE;
    END;

    LOCAL PROCEDURE SalesAmountOnFormat@19055352();
    BEGIN
      IF NOT "Object Line" THEN
        SalesAmountHideValue := TRUE;
    END;

    LOCAL PROCEDURE ServiceRateOnFormat@19047251();
    BEGIN
      IF NOT "Object Line" THEN
        ServiceRateHideValue := TRUE;
    END;

    LOCAL PROCEDURE ServiceAmountOnFormat@19054387();
    BEGIN
      IF NOT "Object Line" THEN
        ServiceAmountHideValue := TRUE;
    END;

    PROCEDURE DataCaptionTxt@1100525000() : Text[110];
    BEGIN
      EXIT(FORMAT(STRSUBSTNO(Text005, TenderCodeSystemNo) + ' - ' + MessageTxt));
    END;

    PROCEDURE GetSelectedRecordSet@1100525001(VAR OTmpServiceSurveyStructureLine@1100525000 : TEMPORARY Record 11071806);
    VAR
      TmpServiceSurveyStructureLine@1100525002 : TEMPORARY Record 11071806;
    BEGIN
      TmpServiceSurveyStructureLine.COPY(Rec); // Save user filters
      CurrPage.SETSELECTIONFILTER(Rec); // Can't use TmpServiceSurveyStructureLine. Form uses Temporary DataSet
      OTmpServiceSurveyStructureLine.COPY(Rec, TRUE);
      //reset;
      COPY(TmpServiceSurveyStructureLine);
    END;

    BEGIN
    END.
  }
}

