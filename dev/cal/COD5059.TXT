OBJECT Codeunit 5059 ProfileManagement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00,4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1001 : TextConst 'ENU=General;NOR=Generelt;SVE=Allm„nt';
      Text001@1002 : TextConst 'ENU=No profile questionnaire is created for this contact.;NOR=Det er ikke opprettet noe profilsp›rreskjema for denne kontakten.;SVE=Inget profilfr†geformul„r „r skapad f”r denna kontakt.';
      ProfileQuestnHeaderTemp@1003 : TEMPORARY Record 5087;

    LOCAL PROCEDURE FindLegalProfileQuestionnaire@5(Cont@1000 : Record 5050);
    VAR
      ContBusRel@1005 : Record 5054;
      ProfileQuestnHeader@1001 : Record 5087;
      ContProfileAnswer@1002 : Record 5089;
      Valid@1003 : Boolean;
    BEGIN
      ProfileQuestnHeaderTemp.DELETEALL;

      WITH ProfileQuestnHeader DO BEGIN
        RESET;
        IF FIND('-') THEN
          REPEAT
            Valid := TRUE;
            IF ("Contact Type" = "Contact Type"::Companies) AND
               (Cont.Type <> Cont.Type::Company)
            THEN
              Valid := FALSE;
            IF ("Contact Type" = "Contact Type"::People) AND
               (Cont.Type <> Cont.Type::Person)
            THEN
              Valid := FALSE;
            IF Valid AND ("Business Relation Code" <> '') THEN
              IF NOT ContBusRel.GET(Cont."Company No.","Business Relation Code") THEN
                Valid := FALSE;
            IF NOT Valid THEN BEGIN
              ContProfileAnswer.RESET;
              ContProfileAnswer.SETRANGE("Contact No.",Cont."No.");
              ContProfileAnswer.SETRANGE("Profile Questionnaire Code",Code);
              IF ContProfileAnswer.FINDFIRST THEN
                Valid := TRUE;
            END;
            IF Valid THEN BEGIN
              ProfileQuestnHeaderTemp := ProfileQuestnHeader;
              ProfileQuestnHeaderTemp.INSERT;
            END;
          UNTIL NEXT = 0;
      END;
    END;

    [External]
    PROCEDURE GetQuestionnaire@2() : Code[20];
    VAR
      ProfileQuestnHeader@1000 : Record 5087;
    BEGIN
      IF ProfileQuestnHeader.FINDFIRST THEN
        EXIT(ProfileQuestnHeader.Code);

      ProfileQuestnHeader.INIT;
      ProfileQuestnHeader.Code := Text000;
      ProfileQuestnHeader.Description := Text000;
      ProfileQuestnHeader.INSERT;
      EXIT(ProfileQuestnHeader.Code);
    END;

    [External]
    PROCEDURE ProfileQuestionnaireAllowed@4(Cont@1000 : Record 5050;ProfileQuestnHeaderCode@1001 : Code[20]) : Code[20];
    BEGIN
      FindLegalProfileQuestionnaire(Cont);

      IF ProfileQuestnHeaderTemp.GET(ProfileQuestnHeaderCode) THEN
        EXIT(ProfileQuestnHeaderCode);
      IF ProfileQuestnHeaderTemp.FINDFIRST THEN
        EXIT(ProfileQuestnHeaderTemp.Code);

      ERROR(Text001);
    END;

    [External]
    PROCEDURE ShowContactQuestionnaireCard@7(Cont@1000 : Record 5050;ProfileQuestnLineCode@1002 : Code[20];ProfileQuestnLineLineNo@1004 : Integer);
    VAR
      ProfileQuestnLine@1003 : Record 5088;
      ContProfileAnswers@1001 : Page 5114;
    BEGIN
      Cont.CheckIfMinorForProfiles;
      ContProfileAnswers.SetParameters(Cont,ProfileQuestionnaireAllowed(Cont,''),ProfileQuestnLineCode,ProfileQuestnLineLineNo);
      IF ProfileQuestnHeaderTemp.GET(ProfileQuestnLineCode) THEN BEGIN
        ProfileQuestnLine.GET(ProfileQuestnLineCode,ProfileQuestnLineLineNo);
        ContProfileAnswers.SETRECORD(ProfileQuestnLine);
      END;
      ContProfileAnswers.RUNMODAL;
    END;

    [External]
    PROCEDURE CheckName@10(CurrentQuestionsChecklistCode@1000 : Code[20];VAR Cont@1001 : Record 5050);
    BEGIN
      FindLegalProfileQuestionnaire(Cont);
      ProfileQuestnHeaderTemp.GET(CurrentQuestionsChecklistCode);
    END;

    [External]
    PROCEDURE SetName@6(ProfileQuestnHeaderCode@1000 : Code[20];VAR ProfileQuestnLine@1001 : Record 5088;ContactProfileAnswerLine@1002 : Integer);
    BEGIN
      ProfileQuestnLine.FILTERGROUP := 2;
      ProfileQuestnLine.SETRANGE("Profile Questionnaire Code",ProfileQuestnHeaderCode);
      ProfileQuestnLine.FILTERGROUP := 0;
      IF ContactProfileAnswerLine = 0 THEN
        IF ProfileQuestnLine.FIND('-') THEN;
    END;

    [External]
    PROCEDURE LookupName@8(VAR ProfileQuestnHeaderCode@1000 : Code[20];VAR ProfileQuestnLine@1001 : Record 5088;VAR Cont@1002 : Record 5050);
    BEGIN
      COMMIT;
      FindLegalProfileQuestionnaire(Cont);
      IF ProfileQuestnHeaderTemp.GET(ProfileQuestnHeaderCode) THEN;
      IF PAGE.RUNMODAL(
           PAGE::"Profile Questionnaire List",ProfileQuestnHeaderTemp) = ACTION::LookupOK
      THEN
        ProfileQuestnHeaderCode := ProfileQuestnHeaderTemp.Code;

      SetName(ProfileQuestnHeaderCode,ProfileQuestnLine,0);
    END;

    [External]
    PROCEDURE ShowAnswerPoints@1(CurrProfileQuestnLine@1000 : Record 5088);
    BEGIN
      CurrProfileQuestnLine.SETRANGE("Profile Questionnaire Code",CurrProfileQuestnLine."Profile Questionnaire Code");
      PAGE.RUNMODAL(PAGE::"Answer Points",CurrProfileQuestnLine);
    END;

    BEGIN
    {
      4PS specific object due to PAGE call of page Answer Points, which has a different number in 4PS Construct.
    }
    END.
  }
}

