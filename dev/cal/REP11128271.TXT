OBJECT Report 11128271 Copy Price History
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE,SEEV.PRI;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy Price History;
               NOR=Kopier prishistorikk;
               SVE=Kopiera prishistorik];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CustPriceList.RESET;
                  "Price History Trade Item".COPYFILTER("Price List Code",CustPriceList.Code);

                  "Price History Trade Item".SETFILTER("Price List Code",'%1','');
                  IF "Price History Trade Item".GETFILTER("Price List Code") = '' THEN
                    ERROR(Text001,"Price History Trade Item".FIELDCAPTION("Price List Code"));
                  IF CustPriceList.COUNT > 1 THEN
                    ERROR(Text002,"Price History Trade Item".FIELDCAPTION("Price List Code"),CustPriceList.TABLECAPTION);

                  IF ToCustPriceListCode = '' THEN
                    ERROR(Text003);

                  //+++4PSSE.MK 131030 4PS-014
                  IF FromCustPriceListCode = '' THEN
                    ERROR(Text004);
                  //---4PSSE.MK 131030
                END;

  }
  DATASET
  {
    { 5000;    ;DataItem;                    ;
               DataItemTable=Table11012315;
               OnPreDataItem=BEGIN
                               //+++4PSSE.MK 131030 4PS-014
                               SETFILTER("Price List Code", FromCustPriceListCode);
                               //---4PSSE.MK 131030
                             END;

               OnAfterGetRecord=BEGIN
                                  PriceHistTradeItem := "Price History Trade Item";
                                  PriceHistTradeItem."Price List Code" := ToCustPriceListCode;
                                  IF NOT Currency.GET(PriceHistTradeItem."Currency Code") THEN
                                    Currency.InitRoundingPrecision();
                                  IF RaisePercent <> 0 THEN BEGIN
                                    PriceHistTradeItem.VALIDATE("Gross Price"
                                      ,ROUND(PriceHistTradeItem."Gross Price" /100 *(100 +RaisePercent),Currency."Unit-Amount Rounding Precision"));
                                    // other fields?
                                  END;
                                  IF "Price List Code" <> ToCustPriceListCode THEN
                                    PriceHistTradeItem.INSERT
                                  ELSE
                                    PriceHistTradeItem.MODIFY;
                                END;

               ReqFilterFields=Price List Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1000000000;;Container;
                  CaptionML=[ENU=Options;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  ContainerType=ContentArea }

      { 1100285000;1;Field  ;
                  CaptionML=[ENU=From Customer Price List Code;
                             NOR=Fra kundeprislistekode;
                             SVE=Till kundprislistekod];
                  SourceExpr=FromCustPriceListCode;
                  OnLookup=VAR
                             CustomerPriceList@1100285000 : Record 11128273;
                             CentralCustomerPriceList@1100285002 : Record 11128274;
                             TempCentralCustomerPriceList@1100285001 : TEMPORARY Record 11128274;
                           BEGIN
                             //+++ 4PSSE.MK 4PS-014
                             TempCentralCustomerPriceList.DELETEALL;
                             CustomerPriceList.SETRANGE("Display Price List", TRUE);
                             IF CustomerPriceList.FINDSET THEN REPEAT
                               IF CentralCustomerPriceList.GET(CustomerPriceList.Code) THEN BEGIN
                                 TempCentralCustomerPriceList.INIT;
                                 TempCentralCustomerPriceList.Code := CentralCustomerPriceList.Code;
                                 TempCentralCustomerPriceList.Description := CentralCustomerPriceList.Description;
                                 TempCentralCustomerPriceList.INSERT;
                               END;
                             UNTIL CustomerPriceList.NEXT = 0;

                             IF  PAGE.RUNMODAL(0, TempCentralCustomerPriceList) = ACTION::LookupOK THEN
                               FromCustPriceListCode := TempCentralCustomerPriceList.Code;
                             RequestOptionsPage.UPDATE;
                             //--- 4PSSE.MK
                           END;
                            }

      { 1000000001;1;Field  ;
                  CaptionML=[ENU=To Customer Price List Code;
                             NOR=Prislistekode for Til Kunde;
                             SVE=Till kundprislistekod];
                  SourceExpr=ToCustPriceListCode;
                  TableRelation="Customer Price List";
                  OnLookup=VAR
                             CustomerPriceList@1100285002 : Record 11128273;
                             CentralCustomerPriceList@1100285001 : Record 11128274;
                             TempCentralCustomerPriceList@1100285000 : TEMPORARY Record 11128274;
                           BEGIN
                             //+++ 4PSSE.MK 4PS-014
                             TempCentralCustomerPriceList.DELETEALL;
                             CustomerPriceList.SETRANGE("Display Price List", TRUE);
                             IF CustomerPriceList.FINDSET THEN REPEAT
                               IF CentralCustomerPriceList.GET(CustomerPriceList.Code) THEN BEGIN
                                 TempCentralCustomerPriceList.INIT;
                                 TempCentralCustomerPriceList.Code := CentralCustomerPriceList.Code;
                                 TempCentralCustomerPriceList.Description := CentralCustomerPriceList.Description;
                                 TempCentralCustomerPriceList.INSERT;
                               END;
                             UNTIL CustomerPriceList.NEXT = 0;

                             IF  PAGE.RUNMODAL(0, TempCentralCustomerPriceList) = ACTION::LookupOK THEN
                               ToCustPriceListCode := TempCentralCustomerPriceList.Code;
                             RequestOptionsPage.UPDATE;
                             //--- 4PSSE.MK
                           END;
                            }

      { 1000000002;1;Field  ;
                  CaptionML=[ENU=Price Adjust %;
                             NOR=Prisjustering %;
                             SVE=Prisjustering %];
                  DecimalPlaces=0:2;
                  SourceExpr=RaisePercent }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FromCustPriceListCode@1100285000 : Code[10];
      ToCustPriceListCode@1000000000 : Code[10];
      RaisePercent@1000000001 : Decimal;
      CustPriceList@1000000002 : Record 11128273;
      Text001@1000000003 : TextConst 'ENU=Filter for %1 is missing;NOR=Filter for %1 mangler;SVE=Filter f”r %1 saknas';
      Text002@1000000004 : TextConst 'ENU=Filter for %1 includes more than one %2;NOR=Filter for %1 inkluderer fler enn en %2;SVE=Filter f”r %1 omfattar fler „n en %2';
      PriceHistTradeItem@1000000005 : Record 11012315;
      Text003@1000000006 : TextConst 'ENU=You must select the new Customer Price List Code in options tab;NOR=Du m† angi ny Prislistekode for Kunde p† fanen alternativer;SVE=Du m†ste ange ny prislistekod p† alternativfliken';
      Currency@1000000007 : Record 4;
      Text004@1100285001 : TextConst 'ENU=You must select the Customer Price List Code that you want to copy from in options tab;NOR=Du m† velge den kundeprislistekoden du vil kopier fra p† alternativfanen;SVE=Du m†ste ange den prislistekod du vill kopiera ifr†n, p† alternativfliken';
      CustomerPriceList@1100285002 : Record 11128273;

    BEGIN
    {
      4PSSE.MK 131030. Call 4PS-014. Added new filter on which price list code the function will copy from.
    }
    END.
  }
  RDLDATA
  {
  }
}

