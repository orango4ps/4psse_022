OBJECT Table 11012366 Estimate Purchase Action
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Estimate No.,Estimate Description,Code,Description;
    OnInsert=VAR
               lCopyData@1100525000 : Boolean;
             BEGIN
               PurchSetup.GET;

               "Changed by" := USERID;
               "Changed on" := TODAY;

               IF (NOT (Status IN [Status::Approved, Status::Definitive])) THEN
                 "Approval Date" := 0D
               ELSE
                 "Approval Date" := TODAY;

               IF PurchActionRec.GET(Code) THEN
                 IF SilentInsert THEN
                   lCopyData := TRUE
                 ELSE
                   lCopyData := CONFIRM(Text000);
                 IF lCopyData THEN BEGIN
                   TRANSFERFIELDS(PurchActionRec,FALSE);
                   PurchActTextRec.SETRANGE("Line Type", PurchActTextRec."Line Type"::"Purchase Action");
                   PurchActTextRec.SETRANGE("No.",'');
                   PurchActTextRec.SETRANGE("Purchase Action",Code);
                   IF PurchActTextRec.FIND('-') THEN BEGIN
                     REPEAT
                       PurchActText2Rec.TRANSFERFIELDS(PurchActTextRec,TRUE);
                       PurchActText2Rec."Line Type" := PurchActText2Rec."Line Type"::"Estimate Purchase Action";
                       PurchActText2Rec."No." := "Estimate No.";
                       PurchActText2Rec.INSERT;
                     UNTIL PurchActTextRec.NEXT = 0;
                   END;

                   PurchActFeatRec.SETRANGE("Estimate No.",'');
                   PurchActFeatRec.SETRANGE("Project No.",'');
                   PurchActFeatRec.SETRANGE("Purchase Action",Code);
                   IF PurchActFeatRec.FIND('-') THEN BEGIN
                     REPEAT
                       PurchActFeat2Rec.TRANSFERFIELDS(PurchActFeatRec,TRUE);
                       PurchActFeat2Rec.Source := PurchActFeat2Rec.Source::Estimate;
                       PurchActFeat2Rec."Estimate No." := "Estimate No.";
                       PurchActFeat2Rec.INSERT;
                     UNTIL PurchActFeatRec.NEXT = 0;
                   END;
                 END;

               EstRec.GET("Estimate No.");
               "Requested Quote Receipt Date" := EstRec."Requested Quote Receipt Date";
               "Vendors React before" := EstRec."Vendors React before";

               "Amounts Only" := PurchSetup."Default Amounts Only Orders";
             END;

    OnModify=BEGIN
               "Changed by" := USERID;
               "Changed on" := TODAY;

               IF EstPurchActionRec.GET("Estimate No.", Code) THEN
                 IF (Status <> EstPurchActionRec.Status) THEN BEGIN
                   IF (NOT (Status IN [Status::Approved, Status::Definitive])) THEN
                     "Approval Date" := 0D
                   ELSE BEGIN
                     IF (Status IN [Status::Approved, Status::Definitive]) AND
                        (NOT (EstPurchActionRec.Status IN [Status::Approved, Status::Definitive]))
                     THEN
                       "Approval Date" := TODAY;
                   END;

                   UpdatePurchStatusLines;
                 END;
             END;

    OnDelete=VAR
               lvPAVendRec@1100485000 : Record 11012068;
               lvQuoteCompRec@1210190000 : Record 11012074;
             BEGIN
               EstLineRec.RESET;
               EstLineRec.SETCURRENTKEY("Estimate No.", "Purchase Action");
               EstLineRec.SETRANGE("Estimate No.","Estimate No.");
               EstLineRec.SETRANGE("Purchase Action",Code);
               IF EstLineRec.FINDFIRST THEN
                 ERROR(STRSUBSTNO(
                   Text001,
                   TABLECAPTION, EstLineRec.TABLECAPTION));

               PurchActTextRec.SETRANGE("Line Type", PurchActTextRec."Line Type"::"Estimate Purchase Action");
               PurchActTextRec.SETRANGE("No.","Estimate No.");
               PurchActTextRec.SETRANGE("Purchase Action",Code);
               PurchActTextRec.DELETEALL;

               PurchActFeatRec.SETRANGE("Estimate No.","Estimate No.");
               PurchActFeatRec.SETRANGE("Purchase Action",Code);
               PurchActFeatRec.DELETEALL;

               DocRelRec.SETRANGE(Source, DocRelRec.Source::Estimate);
               DocRelRec.SETRANGE("Estimate No.","Estimate No.");
               DocRelRec.SETRANGE("Purchase Action",Code);
               DocRelRec.DELETEALL;

               ParRec.SETRANGE(Type,ParRec.Type::EstPurchAction);
               ParRec.SETRANGE("No.","Estimate No.");
               ParRec.SETRANGE("Purchase Action",Code);
               ParRec.DELETEALL;

               lvPAVendRec.SETRANGE("Estimate No.","Estimate No.");
               lvPAVendRec.SETRANGE("Purchase Action",Code);
               lvPAVendRec.DELETEALL;

               lvQuoteCompRec.SETRANGE("Estimate No.","Estimate No.");
               lvQuoteCompRec.SETRANGE("Purchase Action",Code);
               lvQuoteCompRec.DELETEALL;
             END;

    OnRename=BEGIN
               "Changed by" := USERID;
               "Changed on" := TODAY;
             END;

    CaptionML=[ENU=Estimate Purchase Action;
               NOR=Kalkyle Í Innkj›pshandling;
               SVE=Kalkyl Í ink”ps†tg„rd];
    LookupPageID=Page11072274;
  }
  FIELDS
  {
    { 5   ;   ;Estimate No.        ;Code20        ;TableRelation=Estimate;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Estimate Description");
                                                              END;

                                                   CaptionML=[ENU=Estimate No.;
                                                              NOR=Kalkylenr;
                                                              SVE=Kalkylnr] }
    { 10  ;   ;Code                ;Code10        ;TableRelation="Purchase Action";
                                                   AltSearchField=Search Name;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Purchase Action;
                                                              NOR=Innkj›pshandling;
                                                              SVE=Ink”ps†tg„rd];
                                                   NotBlank=Yes;
                                                   Description=Purchase Action }
    { 20  ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                IF ("Search Name" = UPPERCASE(xRec.Description)) OR ("Search Name" = '') THEN
                                                                  "Search Name" := Description;
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 30  ;   ;Search Name         ;Code50        ;CaptionML=[ENU=Search Name;
                                                              NOR=S›kenavn;
                                                              SVE=S”knamn] }
    { 40  ;   ;Responsible Employee;Code20        ;TableRelation=Employee.No.;
                                                   CaptionML=[ENU=Responsible Employee;
                                                              NOR=Ansvarlig Ansatt;
                                                              SVE=Ansvarig] }
    { 50  ;   ;Text                ;Text250       ;CaptionML=[ENU=Text;
                                                              NOR=Tekst;
                                                              SVE=Ben„mning] }
    { 60  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[ENU=Concept,Applied,Approved,Definitive;
                                                                    NOR=Konsept,Anvendt,Godkjent,Definitiv;
                                                                    SVE=Koncept,Till„mpat,Godk„nt,Definitiv];
                                                   OptionString=Concept,Applied,Approved,Definitive }
    { 65  ;   ;Approval Date       ;Date          ;CaptionML=[ENU=Approval Date;
                                                              NOR=Dato for godkjenning;
                                                              SVE=Datum godk„nd];
                                                   Editable=No }
    { 70  ;   ;Changed by          ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Changed by;
                                                              NOR=Endret av;
                                                              SVE=Žndrat av];
                                                   Editable=No }
    { 80  ;   ;Changed on          ;Date          ;CaptionML=[ENU=Changed on;
                                                              NOR=Endret den;
                                                              SVE=Žndrat den];
                                                   Editable=No }
    { 90  ;   ;Estimate Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Estimate.Description WHERE (No.=FIELD(Estimate No.)));
                                                   CaptionML=[ENU=Estimate Description;
                                                              NOR=Kalkylebeskrivelse;
                                                              SVE=Kalkylbeskrivning];
                                                   Editable=No }
    { 100 ;   ;Activate for        ;Option        ;CaptionML=[ENU=Activate for;
                                                              NOR=Aktiver for;
                                                              SVE=Aktivera f”r];
                                                   OptionCaptionML=[ENU=" ,Quote,Advice,Purchase";
                                                                    NOR=" ,Tilbud,Bestilling,Innkj›p";
                                                                    SVE=" ,Offert,Best„llning,Ink”p"];
                                                   OptionString=[ ,Quote,Advice,Purchase] }
    { 105 ;   ;Document Group      ;Code20        ;TableRelation="Document Group".Code;
                                                   CaptionML=[ENU=Document Group;
                                                              NOR=Dokumentgruppen finnes ikke;
                                                              SVE=Dokumentgrupp] }
    { 110 ;   ;Document Template   ;Code20        ;TableRelation="Document Template"."Template Code" WHERE (Type=CONST(Purchase Quote));
                                                   CaptionML=[ENU=Document Template;
                                                              NOR=Dokumentmal;
                                                              SVE=Dokumentmall] }
    { 120 ;   ;Requested Quote Receipt Date;Date  ;CaptionML=[ENU=Requested Quote Receipt Date;
                                                              NOR=Kvitteringsdato for anmodet tilbud;
                                                              SVE=Inleveransdatum f”r beg„rd offert] }
    { 130 ;   ;Vendors React before;Date          ;CaptionML=[ENU=Vendors React before;
                                                              NOR=Leverand›rer reagerer innen;
                                                              SVE=Leverant”rer reagerar innan] }
    { 140 ;   ;Purchase Budget     ;Decimal       ;OnValidate=BEGIN
                                                                //This was a flowfield with the following formula:
                                                                //  Sum("Estimate Line"."Cumulative Total" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                //  Purchase Action Mat.=FIELD(Code),Purchase Action Status Mat.=FILTER(>=Approved)))
                                                                // But there is a problem with indexes.
                                                                // Per Cost Type a key needed,
                                                                // results in 3 fields, which must be summed
                                                              END;

                                                   CaptionML=[ENU=Purchase Budget;
                                                              NOR=Innkj›psbudsjett;
                                                              SVE=Ink”psbudget];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 150 ;   ;Expected No. of Vendors;Integer    ;CaptionML=[ENU=Expected No. of Vendors;
                                                              NOR=Forventet antall leverand›rer;
                                                              SVE=F”rv„ntat antal leverant”rer] }
    { 160 ;   ;Name Employee       ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Responsible Employee)));
                                                   CaptionML=[ENU=Name Employee;
                                                              NOR=Navn p† ansatt.;
                                                              SVE=Namn p† anst„lld.];
                                                   Editable=No }
    { 1000;   ;Document Fysical Template;BLOB     ;CaptionML=[ENU=Document Fysical Template;
                                                              NOR=Dokument, fysisk mal;
                                                              SVE=Dokument, fysisk mall] }
    { 1010;   ;Amounts Only        ;Boolean       ;CaptionML=[ENU=Amounts Only;
                                                              NOR=Kun bel›p;
                                                              SVE=Endast belopp] }
    { 1020;   ;Cost Type           ;Option        ;CaptionML=[ENU=Cost Type;
                                                              NOR=Kosttype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=Labor,Material,Subcontracting,Plant,Sundry;
                                                                    NOR=Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse;
                                                                    SVE=Arbetskraft,Material,Underentreprenad,Maskin,Diverse];
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry }
  }
  KEYS
  {
    {    ;Estimate No.,Code                       ;Clustered=Yes }
    {    ;Responsible Employee                     }
    {    ;Status                                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@11012002 : TextConst 'ENU=Copy Standard Purchase Action ?;NOR=Kopier standardInnkj›pshandling?;SVE=Kopiera standardink”ps†tg„rd?';
      Text001@11012003 : TextConst 'ENU=A %1 attached to a %2 cannot be deleted.;NOR=En %1 vedlagt en %2 kan ikke tas bort.;SVE=En %1 som har bifogats till en %2 kan inte tas bort.';
      PurchSetup@1100485009 : Record 312;
      PurchActionRec@11012000 : Record 11012025;
      EstLineRec@11012001 : Record 11072072;
      PurchActTextRec@1210190005 : Record 11012067;
      PurchActText2Rec@1210190004 : Record 11012067;
      PurchActFeatRec@1210190003 : Record 11012069;
      PurchActFeat2Rec@1210190002 : Record 11012069;
      DocRelRec@1210190006 : Record 11012071;
      ParRec@1210190007 : Record 11012072;
      EstRec@1100485006 : Record 11012151;
      EstPurchActionRec@1100485007 : Record 11012366;
      SilentInsert@1100525000 : Boolean;

    PROCEDURE UpdatePurchStatusLines@1();
    VAR
      EstLineRec2@11012000 : Record 11072072;
    BEGIN
      EstLineRec.RESET;
      EstLineRec.SETCURRENTKEY("Estimate No.", "Purchase Action");
      EstLineRec.SETRANGE("Estimate No.", "Estimate No.");
      EstLineRec.SETRANGE("Purchase Action", Code);
      IF EstLineRec.FINDSET(TRUE, TRUE) THEN
        REPEAT
          IF (EstLineRec."Purchase Action Status" <> Status) OR
             (EstLineRec."Purch. Action Appr. Date" <> "Approval Date") THEN
          BEGIN
            EstLineRec2 := EstLineRec;
            EstLineRec2."Purchase Action Status" := Status;
            EstLineRec2."Purch. Action Appr. Date" := "Approval Date";
            EstLineRec2.MODIFY;
          END;
        UNTIL EstLineRec.NEXT = 0;
    END;

    PROCEDURE SetSilentInsert@1100525001(lSilentInsert@1100525000 : Boolean);
    BEGIN
      SilentInsert := lSilentInsert;
    END;

    PROCEDURE CopyPurchaseActions@3(EstimateNo@1100528512 : Text);
    VAR
      Estimate@1100528509 : Record 11012151;
      StandPurchActionRec@1100528508 : Record 11012025;
      EstPurchActionRec@1100528507 : Record 11012366;
      FeatByPurchActionRec@1100528506 : Record 11012069;
      FeatByPurchActionRec2@1100528505 : Record 11012069;
      PurchaseTextRecOrig@1100528504 : Record 11012067;
      PurchaseTextRecDest@1100528503 : Record 11012067;
      PurchActionCounter@1100528501 : Integer;
      PurchActionCounterOK@1100528500 : Integer;
      Text000@1100528511 : TextConst 'ENU=The following data has been copied:\\;SVE=F”ljande data har kopierats:\\';
      Text001@1100528510 : TextConst 'ENU=%5 of the %6 standard Purchase Actions\';
    BEGIN
      PurchActionCounter := StandPurchActionRec.COUNT;
      PurchActionCounterOK := 0;

      Estimate.GET(EstimateNo);

      IF StandPurchActionRec.FINDSET THEN BEGIN
        REPEAT
          IF NOT EstPurchActionRec.GET(EstimateNo,StandPurchActionRec.Code) THEN BEGIN
            EstPurchActionRec.INIT;
            EstPurchActionRec."Estimate No." := EstimateNo;
            EstPurchActionRec.TRANSFERFIELDS(StandPurchActionRec);
            EstPurchActionRec."Changed by" := USERID;
            EstPurchActionRec."Changed on" := TODAY;
            EstPurchActionRec."Requested Quote Receipt Date" := Estimate."Requested Quote Receipt Date";
            EstPurchActionRec."Vendors React before" := Estimate."Vendors React before";
            EstPurchActionRec.INSERT;

            FeatByPurchActionRec.RESET;
            FeatByPurchActionRec.SETRANGE("Estimate No.", '');
            FeatByPurchActionRec.SETRANGE("Project No.",'');
            FeatByPurchActionRec.SETRANGE("Purchase Action",StandPurchActionRec.Code);
            IF FeatByPurchActionRec.FINDSET THEN BEGIN
              REPEAT
                FeatByPurchActionRec2.INIT;
                FeatByPurchActionRec2.Source := FeatByPurchActionRec2.Source::Estimate;
                FeatByPurchActionRec2."Estimate No." := EstimateNo;
                FeatByPurchActionRec2."Purchase Action" := FeatByPurchActionRec."Purchase Action";
                FeatByPurchActionRec2."Contact Feature Group" := FeatByPurchActionRec."Contact Feature Group";
                FeatByPurchActionRec2."Contact Feature" := FeatByPurchActionRec."Contact Feature";
                FeatByPurchActionRec2."Contact Feature Description" := FeatByPurchActionRec."Contact Feature Description";
                FeatByPurchActionRec2.INSERT;
              UNTIL FeatByPurchActionRec.NEXT = 0;
            END;

            PurchaseTextRecOrig.SETRANGE(PurchaseTextRecOrig."Line Type", PurchaseTextRecOrig."Line Type"::"Purchase Action");
            PurchaseTextRecOrig.SETRANGE("Purchase Action", StandPurchActionRec.Code);
            IF PurchaseTextRecOrig.FINDSET THEN BEGIN
              REPEAT
                PurchaseTextRecDest.TRANSFERFIELDS(PurchaseTextRecOrig);
                PurchaseTextRecDest."Line Type" := PurchaseTextRecDest."Line Type"::"Estimate Purchase Action";
                PurchaseTextRecDest."No." := EstimateNo;
                PurchaseTextRecDest.INSERT;
              UNTIL PurchaseTextRecOrig.NEXT = 0;
            END;
            PurchActionCounterOK := PurchActionCounterOK + 1;
          END;
        UNTIL StandPurchActionRec.NEXT = 0;
      END;

      MESSAGE(Text000 + Text001, PurchActionCounterOK, PurchActionCounter);
    END;

    BEGIN
    END.
  }
}

