OBJECT Page 5734 Item Category Attributes
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Category Attributes;
               NOR=Attributter for varekategori;
               SVE=Artikelkategoriattribut];
    LinksAllowed=No;
    SourceTable=Table7504;
    SourceTableView=SORTING(Inheritance Level,Attribute Name)
                    ORDER(Ascending);
    PageType=ListPart;
    SourceTableTemporary=Yes;
    RefreshOnActivate=Yes;
    OnClosePage=BEGIN
                  TempRecentlyItemAttributeValueMapping.DELETEALL;
                END;

    OnAfterGetRecord=BEGIN
                       UpdateProperties;
                     END;

    OnInsertRecord=VAR
                     TempItemAttributeValueToInsert@1000 : TEMPORARY Record 7501;
                     ItemAttributeValueMapping@1002 : Record 7505;
                     ItemAttributeManagement@1001 : Codeunit 7500;
                   BEGIN
                     IF ItemCategoryCode <> '' THEN BEGIN
                       ItemAttributeValueMapping."Table ID" := DATABASE::"Item Category";
                       ItemAttributeValueMapping."No." := ItemCategoryCode;
                       ItemAttributeValueMapping."Item Attribute ID" := "Attribute ID";
                       ItemAttributeValueMapping."Item Attribute Value ID" := GetAttributeValueID(TempItemAttributeValueToInsert);
                       ItemAttributeValueMapping.INSERT;
                       ItemAttributeManagement.InsertCategoryItemsBufferedAttributeValueMapping(
                         TempItemAttributeValueToInsert,TempRecentlyItemAttributeValueMapping,ItemCategoryCode);
                       InsertRecentlyAddedCategoryAttribute(ItemAttributeValueMapping);
                     END;
                   END;

    OnDeleteRecord=VAR
                     TempItemAttributeValueToDelete@1000 : TEMPORARY Record 7501;
                     ItemAttributeValue@1001 : Record 7501;
                     ItemAttributeValueMapping@1003 : Record 7505;
                     ItemAttributeManagement@1002 : Codeunit 7500;
                   BEGIN
                     IF "Inherited-From Key Value" <> '' THEN
                       ERROR(DeleteInheritedAttribErr);

                     ItemAttributeValueMapping.SETRANGE("Table ID",DATABASE::"Item Category");
                     ItemAttributeValueMapping.SETRANGE("No.",ItemCategoryCode);
                     ItemAttributeValueMapping.SETRANGE("Item Attribute ID","Attribute ID");
                     ItemAttributeValueMapping.FINDFIRST;
                     IF ItemAttributeManagement.SearchCategoryItemsForAttribute(ItemCategoryCode,"Attribute ID") THEN
                       IF CONFIRM(STRSUBSTNO(DeleteItemInheritedParentCategoryAttributesQst,ItemCategoryCode,ItemCategoryCode)) THEN BEGIN
                         ItemAttributeValue.SETRANGE("Attribute ID","Attribute ID");
                         ItemAttributeValue.SETRANGE(ID,ItemAttributeValueMapping."Item Attribute Value ID");
                         ItemAttributeValue.FINDFIRST;
                         TempItemAttributeValueToDelete.TRANSFERFIELDS(ItemAttributeValue);
                         TempItemAttributeValueToDelete.INSERT;
                         DeleteRecentlyItemAttributeValueMapping("Attribute ID");
                         ItemAttributeManagement.DeleteCategoryItemsAttributeValueMapping(TempItemAttributeValueToDelete,ItemCategoryCode);
                       END;
                     ItemAttributeValueMapping.DELETE;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateProperties;
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Enabled=RowEditable;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                AssistEdit=No;
                CaptionML=[ENU=Attribute;
                           NOR=Attributt;
                           SVE=Attribut];
                ToolTipML=[ENU=Specifies the item attribute.;
                           NOR=Angir vareattributtet.;
                           SVE=Anger artikelattributet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Attribute Name";
                TableRelation="Item Attribute".Name WHERE (Blocked=CONST(No));
                StyleExpr=StyleTxt;
                OnValidate=BEGIN
                             PersistInheritanceData;
                           END;
                            }

    { 4   ;2   ;Field     ;
                Name=Value;
                CaptionML=[ENU=Default Value;
                           NOR=Standardverdi;
                           SVE=StandardvÑrde];
                ToolTipML=[ENU=Specifies the value of the item attribute.;
                           NOR=Angir verdien for vareattributtet.;
                           SVE=Anger vÑrdet pÜ artikelattributet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Value;
                TableRelation=IF (Attribute Type=CONST(Option)) "Item Attribute Value".Value WHERE (Attribute ID=FIELD(Attribute ID),
                                                                                                    Blocked=CONST(No));
                StyleExpr=StyleTxt;
                OnValidate=BEGIN
                             PersistInheritanceData;
                             ChangeDefaultValue;
                           END;
                            }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the item or resource's unit of measure, such as piece or hour.;
                           NOR=Angir navnet pÜ varens eller ressursens enhet, for eksempel stykk eller time.;
                           SVE=Anger namnet pÜ artikelns eller resursens mÜttenhet, t.ex. styck eller timme.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure";
                StyleExpr=StyleTxt }

    { 5   ;2   ;Field     ;
                CaptionML=[ENU=Inherited From;
                           NOR=Arvet fra;
                           SVE=érvd frÜn];
                ToolTipML=[ENU=Specifies the parent item category that the item attributes are inherited from.;
                           NOR=Angir den overordnede varekategorien som vareattributtene arves fra.;
                           SVE=Anger den îverordnade artikelkategorin som artikelattributen har Ñrvts frÜn.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Inherited-From Key Value";
                Editable=FALSE;
                StyleExpr=StyleTxt }

  }
  CODE
  {
    VAR
      TempRecentlyItemAttributeValueMapping@1006 : TEMPORARY Record 7505;
      ItemCategoryCode@1000 : Code[20];
      DeleteInheritedAttribErr@1002 : TextConst 'ENU=You cannot delete attributes that are inherited from a parent item category.;NOR=Du kan ikke slette attributter som er arvet fra en overordnet varekategori.;SVE=Du kan inte ta bort attribut som har Ñrvts frÜn en îverordnad artikelkategori.';
      RowEditable@1001 : Boolean;
      StyleTxt@1003 : Text;
      ChangingDefaultValueMsg@1005 : TextConst '@@@=%1 - item category code;ENU=The new default value will not apply to items that use the current item category, ''''%1''''. It will only apply to new items.;NOR=Den nye standardverdien gjelder ikke for varer som bruker gjeldende varekategori %1. Den gjelder bare for nye varer.;SVE=Det nya standardvÑrdet gÑller inte fîr artiklar som anvÑnder den aktuella artikelkategorin %1''. Det gÑller bara fîr nya artiklar.';
      DeleteItemInheritedParentCategoryAttributesQst@1004 : TextConst '@@@=%1 - item category code,%2 - item category code;ENU=One or more items belong to item category ''''%1''''.\\Do you want to delete the inherited item attributes for the items in question?;NOR=ên eller flere varer tilhõrer varekategorien %1.\\Vil du slette de arvede vareattributtene for de aktuelle varene?;SVE=En eller flera artiklar tillhîr artikelkategorin %1.\\Vill du ta bort de Ñrvda artikelattributen fîr de berîrda artiklarna?';

    [External]
    PROCEDURE LoadAttributes@29(CategoryCode@1004 : Code[20]);
    VAR
      TempItemAttributeValue@1000 : TEMPORARY Record 7501;
      ItemAttributeValue@1002 : Record 7501;
      ItemAttributeValueMapping@1001 : Record 7505;
      ItemCategory@1007 : Record 5722;
      CurrentCategoryCode@1005 : Code[20];
    BEGIN
      RESET;
      DELETEALL;
      IF CategoryCode = '' THEN
        EXIT;
      SortByInheritance;
      ItemAttributeValueMapping.SETRANGE("Table ID",DATABASE::"Item Category");
      SetItemCategoryCode(CategoryCode);
      CurrentCategoryCode := CategoryCode;
      REPEAT
        IF ItemCategory.GET(CurrentCategoryCode) THEN BEGIN
          ItemAttributeValueMapping.SETRANGE("No.",CurrentCategoryCode);
          IF ItemAttributeValueMapping.FINDSET THEN
            REPEAT
              IF ItemAttributeValue.GET(
                   ItemAttributeValueMapping."Item Attribute ID",ItemAttributeValueMapping."Item Attribute Value ID")
              THEN BEGIN
                TempItemAttributeValue.TRANSFERFIELDS(ItemAttributeValue);
                IF TempItemAttributeValue.INSERT THEN
                  IF NOT AttributeExists(TempItemAttributeValue."Attribute ID") THEN BEGIN
                    IF CurrentCategoryCode = ItemCategoryCode THEN
                      InsertRecord(TempItemAttributeValue,DATABASE::"Item Category",'')
                    ELSE
                      InsertRecord(TempItemAttributeValue,DATABASE::"Item Category",CurrentCategoryCode);
                    "Inheritance Level" := ItemCategory.Indentation;
                    MODIFY;
                  END;
              END
            UNTIL ItemAttributeValueMapping.NEXT = 0;
          CurrentCategoryCode := ItemCategory."Parent Category";
        END ELSE
          CurrentCategoryCode := '';
      UNTIL CurrentCategoryCode = '';
      RESET;
      CurrPage.UPDATE(FALSE);
      SortByInheritance;
    END;

    [External]
    PROCEDURE SaveAttributes@2(CategoryCode@1003 : Code[20]);
    VAR
      TempNewItemAttributeValue@1000 : TEMPORARY Record 7501;
      ItemAttributeValueMapping@1001 : Record 7505;
      ItemAttribute@1002 : Record 7500;
      TempNewCategItemAttributeValue@1008 : TEMPORARY Record 7501;
      TempOldCategItemAttributeValue@1007 : TEMPORARY Record 7501;
      ItemAttributeManagement@1004 : Codeunit 7500;
    BEGIN
      IF CategoryCode = '' THEN
        EXIT;
      TempOldCategItemAttributeValue.LoadCategoryAttributesFactBoxData(CategoryCode);

      SETRANGE("Inherited-From Table ID",DATABASE::"Item Category");
      SETRANGE("Inherited-From Key Value",'');
      PopulateItemAttributeValue(TempNewItemAttributeValue);
      ItemAttributeValueMapping.SETRANGE("Table ID",DATABASE::"Item Category");
      ItemAttributeValueMapping.SETRANGE("No.",CategoryCode);
      ItemAttributeValueMapping.DELETEALL;

      IF TempNewItemAttributeValue.FINDSET THEN
        REPEAT
          ItemAttributeValueMapping."Table ID" := DATABASE::"Item Category";
          ItemAttributeValueMapping."No." := CategoryCode;
          ItemAttributeValueMapping."Item Attribute ID" := TempNewItemAttributeValue."Attribute ID";
          ItemAttributeValueMapping."Item Attribute Value ID" := TempNewItemAttributeValue.ID;
          ItemAttributeValueMapping.INSERT;
          ItemAttribute.GET(ItemAttributeValueMapping."Item Attribute ID");
          ItemAttribute.RemoveUnusedArbitraryValues;
        UNTIL TempNewItemAttributeValue.NEXT = 0;

      TempNewCategItemAttributeValue.LoadCategoryAttributesFactBoxData(CategoryCode);
      ItemAttributeManagement.UpdateCategoryItemsAttributeValueMapping(
        TempNewCategItemAttributeValue,TempOldCategItemAttributeValue,ItemCategoryCode,ItemCategoryCode);
    END;

    LOCAL PROCEDURE PersistInheritanceData@1();
    BEGIN
      "Inherited-From Table ID" := DATABASE::"Item Category";
      CurrPage.SAVERECORD;
    END;

    [External]
    PROCEDURE SetItemCategoryCode@3(CategoryCode@1000 : Code[20]);
    BEGIN
      IF ItemCategoryCode <> CategoryCode THEN BEGIN
        ItemCategoryCode := CategoryCode;
        TempRecentlyItemAttributeValueMapping.DELETEALL;
      END;
    END;

    [External]
    PROCEDURE SortByInheritance@4();
    BEGIN
      SETCURRENTKEY("Inheritance Level","Attribute Name");
    END;

    LOCAL PROCEDURE UpdateProperties@6();
    BEGIN
      RowEditable := "Inherited-From Key Value" = '';
      IF RowEditable THEN
        StyleTxt := 'Standard'
      ELSE
        StyleTxt := 'Strong';
    END;

    LOCAL PROCEDURE AttributeExists@9(AttributeID@1001 : Integer) AttribExist : Boolean;
    BEGIN
      SETRANGE("Attribute ID",AttributeID);
      AttribExist := NOT ISEMPTY;
      RESET;
    END;

    LOCAL PROCEDURE ChangeDefaultValue@5();
    VAR
      ItemAttributeValueMapping@1001 : Record 7505;
      TempItemAttributeValueToInsert@1002 : TEMPORARY Record 7501;
      ItemAttributeManagement@1000 : Codeunit 7500;
    BEGIN
      ItemAttributeValueMapping.SETRANGE("Table ID",DATABASE::"Item Category");
      ItemAttributeValueMapping.SETRANGE("No.",ItemCategoryCode);
      ItemAttributeValueMapping.SETRANGE("Item Attribute ID","Attribute ID");
      IF ItemAttributeValueMapping.FINDFIRST THEN BEGIN
        ItemAttributeValueMapping."Item Attribute Value ID" := GetAttributeValueID(TempItemAttributeValueToInsert);
        ItemAttributeValueMapping.MODIFY;
      END;

      IF IsRecentlyAddedCategoryAttribute("Attribute ID") THEN
        UpdateRecentlyItemAttributeValueMapping(TempItemAttributeValueToInsert)
      ELSE
        IF ItemAttributeManagement.SearchCategoryItemsForAttribute(ItemCategoryCode,"Attribute ID") THEN
          MESSAGE(STRSUBSTNO(ChangingDefaultValueMsg,ItemCategoryCode));
    END;

    LOCAL PROCEDURE InsertRecentlyAddedCategoryAttribute@24(ItemAttributeValueMapping@1000 : Record 7505);
    BEGIN
      TempRecentlyItemAttributeValueMapping.TRANSFERFIELDS(ItemAttributeValueMapping);
      IF TempRecentlyItemAttributeValueMapping.INSERT THEN;
    END;

    LOCAL PROCEDURE IsRecentlyAddedCategoryAttribute@7(AttributeID@1001 : Integer) : Boolean;
    BEGIN
      TempRecentlyItemAttributeValueMapping.SETRANGE("Item Attribute ID",AttributeID);
      EXIT(NOT TempRecentlyItemAttributeValueMapping.ISEMPTY)
    END;

    LOCAL PROCEDURE UpdateRecentlyItemAttributeValueMapping@10(VAR TempItemAttributeValueToInsert@1000 : TEMPORARY Record 7501);
    VAR
      ItemAttributeValueMapping@1001 : Record 7505;
    BEGIN
      TempRecentlyItemAttributeValueMapping.SETRANGE("Item Attribute ID",TempItemAttributeValueToInsert."Attribute ID");
      IF TempRecentlyItemAttributeValueMapping.FINDSET THEN
        REPEAT
          ItemAttributeValueMapping.SETRANGE("Table ID",TempRecentlyItemAttributeValueMapping."Table ID");
          ItemAttributeValueMapping.SETRANGE("No.",TempRecentlyItemAttributeValueMapping."No.");
          ItemAttributeValueMapping.SETRANGE("Item Attribute ID",TempRecentlyItemAttributeValueMapping."Item Attribute ID");
          ItemAttributeValueMapping.FINDFIRST;
          ItemAttributeValueMapping.VALIDATE("Item Attribute Value ID",TempItemAttributeValueToInsert.ID);
          ItemAttributeValueMapping.MODIFY;
        UNTIL TempRecentlyItemAttributeValueMapping.NEXT = 0;
    END;

    LOCAL PROCEDURE DeleteRecentlyItemAttributeValueMapping@12(AttributeID@1000 : Integer);
    BEGIN
      TempRecentlyItemAttributeValueMapping.SETRANGE("Item Attribute ID",AttributeID);
      TempRecentlyItemAttributeValueMapping.DELETEALL;
    END;

    BEGIN
    END.
  }
}

