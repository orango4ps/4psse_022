OBJECT XMLport 11012903 Import Investm. Prop. Matrix
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Import Investm. Prop. Matrix;
    Direction=Import;
    OnPreXMLport=BEGIN
                   InvestmentProposal.GET(ProjectNo, VersionCode);
                 END;

    Format=Variable Text;
    FieldDelimiter=<None>;
    FieldSeparator=[;];
    UseRequestPage=No;
  }
  ELEMENTS
  {
    { [{160F084B-C23B-4472-A649-9DA7CEDCE354}];  ;Root                ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  MaxOccurs=Unbounded }

    { [{67677B47-8933-4A41-9816-63D04AF4A10D}];1 ;Integer             ;Element ;Table   ;
                                                  SourceTable=Table2000000026;
                                                  SourceTableView=SORTING(Field1);
                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 IF ImportRubricCode <> '' THEN
                                                                                   ImportLine;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{EB28E641-AFBD-46E2-9FE1-DDC8307FE643}];2 ;ImportRubricCode    ;Element ;Text    ;
                                                  DataType=Code;
                                                  Width=20 }

    { [{3DDD7D9F-7E25-4E5E-AB67-703044592134}];2 ;ImportDescription   ;Element ;Text    ;
                                                  DataType=Text;
                                                  MinOccurs=Zero;
                                                  MaxOccurs=Unbounded;
                                                  Width=50 }

    { [{1014D7B0-2397-4E1D-92E7-088239C27A31}];2 ;ImportType          ;Element ;Text    ;
                                                  DataType=Option;
                                                  MinOccurs=Zero;
                                                  MaxOccurs=Unbounded }

    { [{FD6EF690-904A-46F0-942C-12F474953C42}];2 ;ImportTotalling     ;Element ;Text    ;
                                                  DataType=Text;
                                                  MinOccurs=Zero;
                                                  MaxOccurs=Unbounded }

    { [{F5A7E213-E154-4303-9548-497137435291}];2 ;ImportBudgetAmount  ;Element ;Text     }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      InvestmentProposal@1100527701 : Record 11012912;
      ProjectNo@1100525001 : Code[20];
      VersionCode@1100525000 : Code[10];

    PROCEDURE InitSelections@1100485004(SetProjectNo@1100485000 : Code[20];SetVersionCode@1100485001 : Code[10]);
    BEGIN
      ProjectNo := SetProjectNo;
      VersionCode := SetVersionCode;
    END;

    LOCAL PROCEDURE ImportLine@1100525001();
    VAR
      InvestmProposalRubricLine@1100527700 : Record 11012913;
    BEGIN
      InsertInvestmentProposalRubricLine(InvestmProposalRubricLine);
      IF InvestmProposalRubricLine.Type IN [InvestmProposalRubricLine.Type::Costs, InvestmProposalRubricLine.Type::Revenues] THEN BEGIN
        InsertRubricBudgetToDistribute;
        InsertInvestmentProposalBudget;
      END;
    END;

    LOCAL PROCEDURE InsertInvestmentProposalRubricLine@1100525003(VAR InvestmProposalRubricLine@1100527701 : Record 11012913);
    VAR
      RecExists@1100527700 : Boolean;
    BEGIN
      RecExists := InvestmProposalRubricLine.GET(ProjectNo, VersionCode, ImportRubricCode);
      IF NOT RecExists THEN
        CLEAR(InvestmProposalRubricLine);

      InvestmProposalRubricLine.VALIDATE("Project No.", ProjectNo);
      InvestmProposalRubricLine.VALIDATE(Version, VersionCode);
      InvestmProposalRubricLine.VALIDATE("Rubric Code", ImportRubricCode);
      InvestmProposalRubricLine.VALIDATE(Description, COPYSTR(ImportDescription,1,MAXSTRLEN(InvestmProposalRubricLine.Description)));
      CASE ImportType OF
        'Cost','Kosten':
          BEGIN
            InvestmProposalRubricLine.VALIDATE(Type,InvestmProposalRubricLine.Type::Costs);
            InvestmProposalRubricLine.VALIDATE("Cost Object Filter", ImportRubricCode);
          END;
        'Subtotal','Subtotaal':
          BEGIN
            InvestmProposalRubricLine.VALIDATE(Type,InvestmProposalRubricLine.Type::Subtotal);
            InvestmProposalRubricLine.VALIDATE("Cost Object Filter", '');
            InvestmProposalRubricLine.VALIDATE(Totaling, ImportTotalling);
          END;
        ELSE
          BEGIN
            InvestmProposalRubricLine.VALIDATE(Type,InvestmProposalRubricLine.Type::Revenues);
            InvestmProposalRubricLine.VALIDATE("Cost Object Filter", ImportRubricCode);
          END;
      END;

      IF RecExists THEN
        InvestmProposalRubricLine.MODIFY(TRUE)
      ELSE
        InvestmProposalRubricLine.INSERT(TRUE);
    END;

    LOCAL PROCEDURE InsertRubricBudgetToDistribute@1100527700();
    VAR
      RubricBudgettoDistribute@1100527700 : Record 11012909;
      BudgetAmountDec@1100527701 : Decimal;
    BEGIN
      RubricBudgettoDistribute.VALIDATE("Project No.", ProjectNo);
      RubricBudgettoDistribute.VALIDATE(Version, VersionCode);
      RubricBudgettoDistribute.VALIDATE("Rubric Code", ImportRubricCode);
      RubricBudgettoDistribute.VALIDATE(Description, COPYSTR(ImportDescription,1,MAXSTRLEN(RubricBudgettoDistribute.Description)));
      EVALUATE(BudgetAmountDec,ImportBudgetAmount);
      RubricBudgettoDistribute.VALIDATE(Amount,BudgetAmountDec);
      RubricBudgettoDistribute.INSERT(TRUE);
    END;

    LOCAL PROCEDURE InsertInvestmentProposalBudget@1100527702();
    VAR
      InvestmentProposalBudget@1100527700 : Record 11012914;
      BudgetAmountDec@1100527701 : Decimal;
    BEGIN
      InvestmentProposalBudget.VALIDATE("Project No.", ProjectNo);
      InvestmentProposalBudget.VALIDATE(Version, VersionCode);
      InvestmentProposalBudget.VALIDATE("Rubric Code", ImportRubricCode);
      InvestmentProposalBudget.VALIDATE(Date, InvestmentProposal."Version Date");
      InvestmentProposalBudget.VALIDATE(Description, COPYSTR(ImportDescription,1,MAXSTRLEN(InvestmentProposalBudget.Description)));
      InvestmentProposalBudget.Frequency := 1;
      InvestmentProposalBudget.Quantity := 1;
      InvestmentProposalBudget."Unit of Measure" := '';
      EVALUATE(BudgetAmountDec,ImportBudgetAmount);
      InvestmentProposalBudget.VALIDATE("Unit Price", BudgetAmountDec);
      InvestmentProposalBudget.INSERT(TRUE);
    END;

    BEGIN
    END.
  }
}

