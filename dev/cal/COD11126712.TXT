OBJECT Codeunit 11126712 Dotnet Functions
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE Stripzero@1100525044(textIn@1100525000 : Text) : Text;
    BEGIN
      IF textIn = '' THEN EXIT(textIn);
      IF COPYSTR(textIn,1,1) <>'0' THEN EXIT(textIn);
      EXIT(Stripzero(COPYSTR(textIn,2)));
    END;

    PROCEDURE SerializeToBlob@1100529900(VAR TempBlob@1100529901 : TEMPORARY Record 99008535;DnObjectIn@1100529900 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object");
    BEGIN
      SerializeToBlob2(TempBlob, DnObjectIn, '', '');
    END;

    PROCEDURE SerializeToBlob2@1100528304(VAR TempBlob@1100529901 : TEMPORARY Record 99008535;DnObjectIn@1100529900 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";RootTag@1100528300 : Text;RootNamespace@1100528301 : Text);
    VAR
      OStream@1100529904 : OutStream;
      DnXmlSerializer@1100529903 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.Serialization.XmlSerializer";
      DnMemorystream@1100529902 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.MemoryStream";
      DnXmlRootAttribute@1100528302 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.Serialization.XmlRootAttribute";
    BEGIN
      CLEAR(TempBlob);
      TempBlob.INIT;
      IF ISNULL(DnObjectIn) THEN
        EXIT;

      DnMemorystream := DnMemorystream.MemoryStream;
      IF (RootTag <> '') AND (RootNamespace <> '') THEN BEGIN
        DnXmlRootAttribute := DnXmlRootAttribute.XmlRootAttribute(RootTag);
        DnXmlRootAttribute.Namespace := RootNamespace;
        DnXmlSerializer := DnXmlSerializer.XmlSerializer(DnObjectIn.GetType, DnXmlRootAttribute);
      END ELSE
        DnXmlSerializer := DnXmlSerializer.XmlSerializer(DnObjectIn.GetType);
      DnXmlSerializer.Serialize(DnMemorystream, DnObjectIn);

      TempBlob.Blob.CREATEOUTSTREAM(OStream);
      COPYSTREAM(OStream, DnMemorystream);
    END;

    PROCEDURE SerializeToFile@1100525011(Object@1100525000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";Filenaam@1100525006 : Text);
    VAR
      xmlSerializer@1100525001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.Serialization.XmlSerializer";
      StreamWriter@1100525002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.StreamWriter";
      TempFilename@1100525005 : Text;
    BEGIN
      IF ISNULL(Object) THEN EXIT;
      TempFilename := Filenaam;
      StreamWriter := StreamWriter.StreamWriter(TempFilename);

      xmlSerializer := xmlSerializer.XmlSerializer(Object.GetType);
      xmlSerializer.Serialize(StreamWriter,Object);
      StreamWriter.Close;
    END;

    PROCEDURE SerializeToText@1100528300(Object@1100525000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";RootTag@1100528304 : Text;RootNamespace@1100528303 : Text;RemoveInfoTag@1100528305 : Boolean) XmlString : Text;
    VAR
      TempBlob@1100528301 : TEMPORARY Record 99008535;
      RegExpManagement@1100528302 : Codeunit 11012262;
      IStream@1100528300 : InStream;
      xmlSerializer@1100525001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.Serialization.XmlSerializer";
      StreamWriter@1100525002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.StreamWriter";
      TextString@1100525005 : BigText;
    BEGIN
      IF ISNULL(Object) THEN EXIT;
      TempBlob.INIT;
      SerializeToBlob2(TempBlob, Object, RootTag, RootNamespace);
      TempBlob.Blob.CREATEINSTREAM(IStream);
      IStream.READ(XmlString);
      IF (RemoveInfoTag) THEN
        XmlString := RegExpManagement.Replace(XmlString, '<\?xml.*utf-8\?>', '');
    END;

    PROCEDURE DeSerializeFromBlob@1100529901(TempBlob@1100529901 : TEMPORARY Record 99008535;VAR DnObjectOut@1100529900 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object") : Boolean;
    BEGIN
      IF (NOT TempBlob.Blob.HASVALUE) THEN
        EXIT;

      EXIT(DeSerializeFromBlob2(TempBlob, DnObjectOut, '', ''));
    END;

    PROCEDURE DeSerializeFromBlob2@1100529902(TempBlob@1100529903 : TEMPORARY Record 99008535;VAR DnObjectOut@1100529902 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";RootTag@1100529901 : Text;RootNamespace@1100529900 : Text) : Boolean;
    VAR
      DnXmlSerializer@1100529907 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.Serialization.XmlSerializer";
      DnMemorystream@1100529906 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.MemoryStream";
      DnXmlRootAttribute@1100529905 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.Serialization.XmlRootAttribute";
      IStream@1100529904 : InStream;
    BEGIN
      IF (NOT TempBlob.Blob.HASVALUE) THEN
        EXIT;

      TempBlob.Blob.CREATEINSTREAM(IStream);
      DnMemorystream := DnMemorystream.MemoryStream;
      COPYSTREAM(DnMemorystream, IStream);
      DnMemorystream.Position := 0;

      IF (RootTag <> '') AND (RootNamespace <> '') THEN BEGIN
        DnXmlRootAttribute := DnXmlRootAttribute.XmlRootAttribute(RootTag);
        DnXmlRootAttribute.Namespace := RootNamespace;
        DnXmlSerializer := DnXmlSerializer.XmlSerializer(DnObjectOut.GetType, DnXmlRootAttribute);
      END ELSE
        DnXmlSerializer := DnXmlSerializer.XmlSerializer(DnObjectOut.GetType);
      DnObjectOut := DnXmlSerializer.Deserialize(DnMemorystream);
      EXIT(TRUE);
    END;

    PROCEDURE DeSerializeFromFile@1100525010(VAR Object@1100525000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";Filenaam@1100525006 : Text) : Boolean;
    VAR
      xmlSerializer@1100525001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.Serialization.XmlSerializer";
      StreamReader@1100525007 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.StreamReader";
    BEGIN
      StreamReader := StreamReader.StreamReader(Filenaam);
      Object := Object.Object;
      xmlSerializer := xmlSerializer.XmlSerializer(Object.GetType);
      Object := xmlSerializer.Deserialize(StreamReader);
      EXIT(TRUE);
    END;

    PROCEDURE DeSerializeFromText@1100528301(VAR Object@1100525000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";XmlText@1100525006 : Text;RootTag@1100528301 : Text;RootNamespace@1100528302 : Text) : Boolean;
    VAR
      TempBlob@1100528307 : TEMPORARY Record 99008535;
      BigText@1100528300 : BigText;
      OutStream@1100528308 : OutStream;
    BEGIN
      BigText.ADDTEXT(XmlText);
      TempBlob.Blob.CREATEOUTSTREAM(OutStream);
      BigText.WRITE(OutStream);
      EXIT(DeSerializeFromBlob2(TempBlob, Object, RootTag, RootNamespace));
    END;

    PROCEDURE DeserializeFromStream@1100525001(VAR Object@1100525000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";XmlDoc@1100525009 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument") : Boolean;
    VAR
      xmlSerializer@1100525001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.Serialization.XmlSerializer";
      StreamWriter@1100525002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.StreamWriter";
      File@1100525003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.File";
      NavInstr@1100525004 : InStream;
      TempFilename@1100525005 : Text;
      XMLreader@1100525006 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlReader";
      XMLReaderSettings@1100525008 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlReaderSettings";
      MemoryStream@1100525007 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.MemoryStream";
      StreamReader@1100525011 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.StreamReader";
    BEGIN
      Object := Object.Object;
      MemoryStream := MemoryStream.MemoryStream;
      XmlDoc.Save(MemoryStream);
      MemoryStream.Position := 0;
      StreamReader := StreamReader.StreamReader(MemoryStream);
      xmlSerializer := xmlSerializer.XmlSerializer(Object.GetType);
      Object := xmlSerializer.Deserialize(StreamReader);
      EXIT(TRUE);
    END;

    PROCEDURE CreateOf@1100525056(VAR List@1100525000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.List`1";Object@1100525002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object");
    VAR
      arr@1100525004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";
      Activator@1100525003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Activator";
      Type@1100525001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Type";
    BEGIN
      arr := arr.CreateInstance(GETDOTNETTYPE(Type),1);
      arr.SetValue(GETDOTNETTYPE(Object),0);
      Type := GETDOTNETTYPE(List);
      Type := Type.MakeGenericType(arr);
      List := Activator.CreateInstance(Type);
    END;

    PROCEDURE COPYSTRValidate@1100525035(inputstring@1100525000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";from@1100525001 : Integer;length@1100525002 : Integer) : Text;
    BEGIN
      IF ISNULL(inputstring) THEN
        EXIT('');
      EXIT(COPYSTR(inputstring,from,length));
    END;

    PROCEDURE CastNAV@1100525000(value@1100525000 : Variant;VAR Result@1100525001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object");
    BEGIN
      CastObj(value,Result);
    END;

    PROCEDURE CastObj@1100525003(value@1100525001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";VAR Result@1100525000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object");
    VAR
      MethodInfoArray@1100525003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";
      Type@1100525002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Type";
      i@1100525004 : Integer;
      MethodInfo@1100525005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Reflection.MethodInfo";
      ParameterInfo@1100525006 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Reflection.ParameterInfo";
      ObjectArray@1100525007 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";
      NULL@1100525008 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";
      Convert@1100525009 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Convert";
    BEGIN
      Type := GETDOTNETTYPE(Result);
      MethodInfoArray := Type.GetMethods();
      FOR i := 0 TO MethodInfoArray.Length() - 1 DO BEGIN
        MethodInfo := MethodInfoArray.GetValue(i);
        IF (MethodInfo.IsPublic) AND (MethodInfo.IsStatic) AND
           (MethodInfo.Name IN ['op_Explicit','op_Implicit']) AND
           (MethodInfo.ReturnType.ToString() = Type.ToString()) AND
           (MethodInfo.GetParameters().Length = 1) THEN BEGIN
          ParameterInfo := MethodInfo.GetParameters().GetValue(0);
          IF (ParameterInfo.ParameterType.Equals(GETDOTNETTYPE(value))) THEN BEGIN
            ObjectArray := ObjectArray.CreateInstance(GETDOTNETTYPE(NULL), 1);
            ObjectArray.SetValue(value, 0);
            Result := MethodInfo.Invoke(NULL, ObjectArray);
            EXIT;
          END;
        END;
      END;
      Result := Convert.ChangeType(value, Type);
    END;

    PROCEDURE COPYSTRValidateText@1100525004(inputstring@1100525000 : Text;from@1100525001 : Integer;length@1100525002 : Integer) : Text;
    BEGIN
      IF inputstring = '' THEN
        EXIT('');
      EXIT(COPYSTR(inputstring,from,length));
    END;

    BEGIN
    END.
  }
}

