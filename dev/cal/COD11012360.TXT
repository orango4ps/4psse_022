OBJECT Codeunit 11012360 PostingManagement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      IsReturnLine@1100525000 : Boolean;

    PROCEDURE BufferSurcharges@1100409000(Origin@1100409007 : 'Project,Service,Indirect';GenJnlLine@1100409000 : Record 81;JobJnlLine@1100409001 : Record 11072008;ServJnlLine@1100409002 : Record 11012820;VAR JobJnlPostLine@1100409003 : Codeunit 11072003;VAR ServJnlPostLine@1100409004 : Codeunit 11012802;VAR SurchargePostingBuffer@1100409005 : ARRAY [2] OF TEMPORARY Record 49;VAR ComplWIPPostingBuffer@1100409020 : ARRAY [2] OF TEMPORARY Record 49);
    VAR
      Project@1100409006 : Record 11072003;
      ServiceOrder@1100409008 : Record 11012823;
      ProjectType@1100409010 : Record 11012009;
      ServiceType@1100409011 : Record 11012814;
      DimVal@1100409012 : Record 349;
      SurchDimVal@1100409016 : Record 349;
      Employee@1100409009 : Record 5200;
      OverheadSurcharge@1100409015 : Record 11020208;
      JobJnlLine2@1100409018 : Record 11072008;
      ServJnlLine2@1100409019 : Record 11012820;
      GenJnlLine2@1100528402 : Record 81;
      SurchargePostingBuffer2@1100409022 : Record 49;
      ServiceContract@1100409021 : Record 11012812;
      GeneralLedgerSetup@1100528400 : Record 98;
      PostedHourLine@1100528403 : Record 11012085;
      ServiceCategory@1100529601 : Record 11071985;
      DimMgt@1100409013 : Codeunit 408;
      PostingType@1100409014 : Code[20];
      DepartmentCode@1100528401 : Code[20];
      TotSurchAmount@1100409017 : Decimal;
      PostCost@1100525001 : Boolean;
      IncludeSourceTypeDepartmentPlant@1100529600 : Boolean;
    BEGIN
      IF NOT ((Origin = Origin::Indirect) AND (GenJnlLine."Shortcut Dimension 2 Code" = '')) THEN
        DimMgt.GetDimValueRec(2, GenJnlLine."Shortcut Dimension 2 Code", DimVal, TRUE, '');

      CASE Origin OF
        Origin::Project:
          BEGIN
            Project.GET(JobJnlLine."Job No.");
            Project.TESTFIELD("Project Type");
            PostingType := Project."Project Type";
            ProjectType.GET(Project."Project Type");
            PostCost := (JobJnlLine."Entry Type" = JobJnlLine."Entry Type"::Usage);
            AdjustDimVal(JobJnlLine."Entry Type" = JobJnlLine."Entry Type"::Sale,DimVal);
          END;
        Origin::Service:
          BEGIN
            IF (ServJnlLine."Entry Type" = ServJnlLine."Entry Type"::Sale) AND (ServJnlLine."Service Order No." = '') THEN BEGIN
              IF ServiceCategory.GET(ServJnlLine."Service Order No.", ServJnlLine."Service Category") THEN
                PostingType := ServiceCategory."Service Type";
              IF PostingType = '' THEN BEGIN
                ServiceContract.GET(ServJnlLine."Service Contract No.");
                ServiceContract.TESTFIELD("Service Type");
                PostingType := ServiceContract."Service Type";
              END;
            END ELSE BEGIN
              ServiceOrder.GET(ServJnlLine."Service Order No.");
              IF ServJnlLine."Additional Cost" THEN BEGIN
                ServiceOrder.TESTFIELD("Service Type (Other)");
                PostingType := ServiceOrder."Service Type (Other)";
              END ELSE BEGIN
                ServiceOrder.TESTFIELD("Service Type");
                PostingType := ServiceOrder."Service Type";
              END;
            END;
            ServiceType.GET(PostingType);
      //    PostCost := (ServJnlLine."Total Revenue" = 0); //C022170.o
            PostCost := (ServJnlLine."Entry Type" = ServJnlLine."Entry Type"::Usage); //C022170.n
            AdjustDimVal(ServJnlLine."Entry Type" = ServJnlLine."Entry Type"::Sale,DimVal);
          END;
        Origin::Indirect: //Only for indirect hours of external employees.
          BEGIN
            PostCost := TRUE;
            PostedHourLine.SETCURRENTKEY("Purchase Order No.", "Purchase Order Line No.");
            PostedHourLine.SETRANGE("Purchase Order No.", GenJnlLine."Purchase Order");
            PostedHourLine.SETRANGE("Purchase Order Line No.", GenJnlLine."Purchase Order Line No.");
            IF PostedHourLine.FINDFIRST THEN
              PostingType := PostedHourLine."Cost Code";
          END;
      END;

      IF GenJnlLine."Employee No." <> '' THEN
        IF Employee.GET(GenJnlLine."Employee No.") THEN;

      IF (DimVal."Cost Type" = DimVal."Cost Type"::Labor) AND (GenJnlLine."Employee No." <> '') THEN
        IF (Employee.External) AND (Employee."External Post No Surcharge") THEN
          EXIT;

      IF GeneralLedgerSetup.GET THEN;
      IF (GenJnlLine."Employee No." <> '') AND
         (GeneralLedgerSetup."Source Department Surcharge" =
          GeneralLedgerSetup."Source Department Surcharge"::Employee)
      THEN
        DepartmentCode := Employee."Global Dimension 1 Code"
      ELSE
        DepartmentCode := GenJnlLine."Shortcut Dimension 1 Code";

      IncludeSourceTypeDepartmentPlant := GenJnlLine."Plant Invoice" AND (DimVal."Cost Type" = DimVal."Cost Type"::Plant);

      IF OverheadSurcharge.GetSurcharges1(
        Origin, PostingType, GenJnlLine."Job No.", PostCost, DimVal."Cost Type", DimVal.Code, GenJnlLine."Wage Component",
        DepartmentCode, Employee."Trade Association", GenJnlLine."Cost Component", GenJnlLine."Posting Date",
        OverheadSurcharge, IsReturnLine, IncludeSourceTypeDepartmentPlant)
      THEN
        REPEAT
          OverheadSurcharge.GetSurchargeDimVal(DimVal, SurchDimVal);
          OverheadSurcharge.TESTFIELD("Coverage Account");

          CASE Origin OF
            Origin::Project:
              BEGIN
                JobJnlLine2 := JobJnlLine;
                JobJnlLine2.InitSurcharge(
                  JobJnlLine2,DimVal,SurchDimVal,
                  OverheadSurcharge,JobJnlLine."Shortcut Dimension 1 Code",PostingType,TotSurchAmount,JobJnlLine."Vendor Posting Group");

                JobJnlPostLine.RunWithCheck(JobJnlLine2);
              END;
            Origin::Service:
              BEGIN
                ServJnlLine2 := ServJnlLine;
                ServJnlLine2.InitSurcharge(
                  ServJnlLine2,DimVal,SurchDimVal,
                  OverheadSurcharge,ServJnlLine."Shortcut Dimension 1 Code",PostingType,TotSurchAmount,ServJnlLine."Vendor Posting Group");
                ServJnlLine2."Unit Cost" := ServJnlLine2."Unit Cost (LCY)";
                ServJnlLine2."Sales Price" := ServJnlLine2."Sales Price (LCY)";
                ServJnlLine2."Total Cost" := ServJnlLine2."Total Cost (LCY)";
                ServJnlLine2."Total Revenue" := ServJnlLine2."Total Revenue (LCY)";
                ServJnlLine2."Currency Code" := '';

                ServJnlPostLine.RunWithCheck(ServJnlLine2);
              END;
            Origin::Indirect:
              BEGIN
                GenJnlLine2 := GenJnlLine;
                GenJnlLine2.InitSurchargeForExternalIndirectHours(
                  GenJnlLine2,DimVal,SurchDimVal,OverheadSurcharge,PostedHourLine,
                  GenJnlLine."Shortcut Dimension 1 Code",TotSurchAmount);
              END;
          END;

          //Post Debit Line
          CLEAR(SurchargePostingBuffer[1]);
          SurchargePostingBuffer[1]."Employee No." := GenJnlLine."Employee No.";
          SurchargePostingBuffer[1]."Tax Area Code" := GenJnlLine."Document No.";  //Separates documents
          //M24815 "Gen. Bus. Posting Group" Now used to seperate different Posting dates
          //Primary Key is used to the max
          SurchargePostingBuffer[1]."Gen. Bus. Posting Group" := STRSUBSTNO('%1', GenJnlLine."Posting Date");
          SurchargePostingBuffer[1]."Posting Date" := GenJnlLine."Posting Date";
          CASE Origin OF
            Origin::Project:
              BEGIN
                SurchargePostingBuffer[1]."Origin Type" := SurchargePostingBuffer[1]."Origin Type"::Project;
                SurchargePostingBuffer[1]."Job No." := JobJnlLine2."Job No.";
                SurchargePostingBuffer[1]."Extension Contract" := JobJnlLine2."Extension Contract";
                SurchargePostingBuffer[1]."G/L Account" := JobJnlLine2."No.";
                SurchargePostingBuffer[1]."Global Dimension 1 Code" := JobJnlLine2."Shortcut Dimension 1 Code";
                SurchargePostingBuffer[1]."Global Dimension 2 Code" := JobJnlLine2."Shortcut Dimension 2 Code";
                SurchargePostingBuffer[1]."Dimension Set ID" := JobJnlLine2."Dimension Set ID";
                SurchargePostingBuffer[1]."Cost Component" := JobJnlLine2."Cost Component";
                SurchargePostingBuffer[1].Description:= JobJnlLine2.Description;
                //SurchargePostingBuffer[1]."Description 2" := JobJnlLine2."Description 2";  //**4PS01.n  //21-04-08
                SurchargePostingBuffer[1].Element := JobJnlLine2.Element;
                SurchargePostingBuffer[1]."Bal. Account No." := SurchargePostingBuffer[1].Element; // Omdat element niet meer in key kan
                SurchargePostingBuffer[1].Amount := JobJnlLine2."Total Cost (LCY)";
                SurchargePostingBuffer2 := SurchargePostingBuffer[1]; //Save
                UpdateSurchargeBuffer(SurchargePostingBuffer);

                IF ProjectType."Post Complementary Surcharge" THEN
                  PostComplementaryWIPSurcharge(ProjectType.GetComplWipAccSurch(DimVal."Cost Type",GenJnlLine."Posting Group"),SurchargePostingBuffer,ComplWIPPostingBuffer);
              END;
            Origin::Service:
              BEGIN
                SurchargePostingBuffer[1]."Origin Type" := SurchargePostingBuffer[1]."Origin Type"::Service;
                SurchargePostingBuffer[1]."Service Order No." := ServJnlLine2."Service Order No.";
                SurchargePostingBuffer[1]."Service Contract No." := ServJnlLine2."Service Contract No.";
                SurchargePostingBuffer[1]."Service Location No." := ServJnlLine2."Service Location No.";
                SurchargePostingBuffer[1]."G/L Account" := ServJnlLine2."G/L Account";
                SurchargePostingBuffer[1]."Global Dimension 1 Code" := ServJnlLine2."Shortcut Dimension 1 Code";
                SurchargePostingBuffer[1]."Global Dimension 2 Code" := ServJnlLine2."Shortcut Dimension 2 Code";
                SurchargePostingBuffer[1]."Dimension Set ID" := ServJnlLine2."Dimension Set ID";
                SurchargePostingBuffer[1]."Cost Component" := ServJnlLine2."Cost Component";
                SurchargePostingBuffer[1].Description:= ServJnlLine2.Description;
                //SurchargePostingBuffer[1]."Description 2" := ServJnlLine2."Description 2";  //**4PS01.n
                SurchargePostingBuffer[1].Amount := ServJnlLine2."Total Cost (LCY)";
                SurchargePostingBuffer2 := SurchargePostingBuffer[1]; //Save
                UpdateSurchargeBuffer(SurchargePostingBuffer);

                IF ServiceType."Post Complementary Surcharge" THEN
                  PostComplementaryWIPSurcharge(ServiceType.GetComplWipAccSurch(DimVal."Cost Type",GenJnlLine."Posting Group"),SurchargePostingBuffer,ComplWIPPostingBuffer);
              END;
            Origin::Indirect:
              BEGIN
                SurchargePostingBuffer[1]."Origin Type" := SurchargePostingBuffer[1]."Origin Type"::" ";
                SurchargePostingBuffer[1]."G/L Account" := GenJnlLine2."Account No.";
                SurchargePostingBuffer[1]."Global Dimension 1 Code" := GenJnlLine2."Shortcut Dimension 1 Code";
                SurchargePostingBuffer[1]."Global Dimension 2 Code" := GenJnlLine2."Shortcut Dimension 2 Code";
                SurchargePostingBuffer[1]."Dimension Set ID" := GenJnlLine2."Dimension Set ID";
                SurchargePostingBuffer[1]."Cost Component" := GenJnlLine2."Cost Component";
                SurchargePostingBuffer[1].Description:= GenJnlLine2.Description;
                SurchargePostingBuffer[1].Amount := GenJnlLine2.Amount;
                SurchargePostingBuffer2 := SurchargePostingBuffer[1]; //Save
                UpdateSurchargeBuffer(SurchargePostingBuffer);
              END;
          END;

          //Post Credit Line
          SurchargePostingBuffer[1] := SurchargePostingBuffer2; //Get Save
          SurchargePostingBuffer[1]."G/L Account" := OverheadSurcharge."Coverage Account";
          GetCreditDim1(OverheadSurcharge, GenJnlLine."Employee No.", GenJnlLine."Plant Type", GenJnlLine."Plant No.", SurchargePostingBuffer);

          IF OverheadSurcharge."Compress Coverage Posting" THEN BEGIN  //Call C006064 n
            SurchargePostingBuffer[1]."Cost Component" := '';
            SurchargePostingBuffer[1]."Job No." := '';
            SurchargePostingBuffer[1].Element := '';
            SurchargePostingBuffer[1]."Bal. Account No." := ''; // Omdat element niet meer in key kan
            SurchargePostingBuffer[1]."Service Order No." := '';
            SurchargePostingBuffer[1]."Service Contract No." := '';
            //SurchargePostingBuffer[1]."Employee No." := '';  //05-01-09
          END ELSE BEGIN                                        //Call C006064 sn
            SurchargePostingBuffer[1]."Buy-Back Item (Plant Order)" := TRUE;   // FIELD USED FOR OTHER PURPOSE, because index is full
          END;                                                  //Call C006064 en

          SurchargePostingBuffer[1].Amount := SurchargePostingBuffer[1].Amount * -1;
          SurchargePostingBuffer[1]."Origin Type" := SurchargePostingBuffer[1]."Origin Type"::" ";

          UpdateSurchargeBuffer(SurchargePostingBuffer);

          //Melding 11891, iom JR kostenplaats van regel en project/SO vullen.
          SurchargePostingBuffer[1] := SurchargePostingBuffer2; //Get Save
          SurchargePostingBuffer[1].Amount := SurchargePostingBuffer[1].Amount * -1;
          CASE Origin OF
            Origin::Project:
              IF ProjectType."Post Complementary Surcharge" THEN
                PostComplementaryWIPSurcharge(ProjectType.GetComplWIPCoverAccSurch(DimVal."Cost Type",GenJnlLine."Posting Group"),SurchargePostingBuffer,ComplWIPPostingBuffer);
            Origin::Service:
              IF ServiceType."Post Complementary Surcharge" THEN
                PostComplementaryWIPSurcharge(ServiceType.GetComplWIPCoverAccSurch(DimVal."Cost Type",GenJnlLine."Posting Group"),SurchargePostingBuffer,ComplWIPPostingBuffer);
          END;

        UNTIL OverheadSurcharge.NEXT = 0;
    END;

    PROCEDURE UpdateSurchargeBuffer@5815(VAR SurchargePostingBuffer@1100409000 : ARRAY [2] OF TEMPORARY Record 49);
    BEGIN
      IF SurchargePostingBuffer[1].Amount = 0 THEN
        EXIT;

      SurchargePostingBuffer[2] := SurchargePostingBuffer[1];
      IF SurchargePostingBuffer[2].FIND THEN BEGIN
        SurchargePostingBuffer[2].Amount :=
          SurchargePostingBuffer[2].Amount + SurchargePostingBuffer[1].Amount;
        SurchargePostingBuffer[2].MODIFY;
      END ELSE
        SurchargePostingBuffer[1].INSERT;
    END;

    PROCEDURE PostComplementaryWIPSurcharge@1100485008(lvAccount@1100485001 : Code[20];SurchargePostingBuffer@1100525000 : ARRAY [2] OF TEMPORARY Record 49;VAR ComplWIPPostingBuffer@1100525001 : ARRAY [2] OF TEMPORARY Record 49);
    BEGIN
      IF SurchargePostingBuffer[1].Amount = 0 THEN
        EXIT;

      CLEAR(ComplWIPPostingBuffer[1]);
      ComplWIPPostingBuffer[1]."Origin Type" := SurchargePostingBuffer[1]."Origin Type"; //C023157
      ComplWIPPostingBuffer[1]."G/L Account" := lvAccount;
      ComplWIPPostingBuffer[1].Amount := SurchargePostingBuffer[1].Amount;
      ComplWIPPostingBuffer[1].Description := SurchargePostingBuffer[1].Description;
      ComplWIPPostingBuffer[1]."Job No." :=  SurchargePostingBuffer[1]."Job No.";
      //C023157.sn
      ComplWIPPostingBuffer[1].Element := SurchargePostingBuffer[1].Element;
      ComplWIPPostingBuffer[1]."Bal. Account No." := SurchargePostingBuffer[1].Element;
      //C023157.en
      ComplWIPPostingBuffer[1]."Service Order No." := SurchargePostingBuffer[1]."Service Order No.";
      ComplWIPPostingBuffer[1]."Service Contract No." := SurchargePostingBuffer[1]."Service Contract No.";
      ComplWIPPostingBuffer[1]."Global Dimension 1 Code" := SurchargePostingBuffer[1]."Global Dimension 1 Code";
      ComplWIPPostingBuffer[1]."Global Dimension 2 Code" := SurchargePostingBuffer[1]."Global Dimension 2 Code";
      ComplWIPPostingBuffer[1]."Dimension Set ID" := SurchargePostingBuffer[1]."Dimension Set ID";
      //M22560  Cost component is needed for check only
      ComplWIPPostingBuffer[1]."Cost Component" := SurchargePostingBuffer[1]."Cost Component";
      //M24815 "Gen. Bus. Posting Group" now used for separating different Posting dates
      ComplWIPPostingBuffer[1]."Gen. Bus. Posting Group" := SurchargePostingBuffer[1]."Gen. Bus. Posting Group";
      ComplWIPPostingBuffer[1]."Posting Date" := SurchargePostingBuffer[1]."Posting Date";
      ComplWIPPostingBuffer[1]."Tax Area Code" := SurchargePostingBuffer[1]."Tax Area Code";  //db, 02-02-11: M24739
      ComplWIPPostingBuffer[1]."Buy-Back Item (Plant Order)" := TRUE; //C020986 FIELD USED FOR OTHER PURPOSE, because index is full
                                                                      //also used for Call C024805 because Surcharges have no Balance Acount in Record
      UpdateComplementaryWIPBuffer(ComplWIPPostingBuffer);
    END;

    PROCEDURE UpdateComplementaryWIPBuffer@1100409003(VAR ComplWIPPostingBuffer@1100525000 : ARRAY [2] OF TEMPORARY Record 49);
    BEGIN
      ComplWIPPostingBuffer[2] := ComplWIPPostingBuffer[1];
      IF ComplWIPPostingBuffer[2].FIND THEN BEGIN
        ComplWIPPostingBuffer[2].Amount :=
          ComplWIPPostingBuffer[2].Amount + ComplWIPPostingBuffer[1].Amount;
        ComplWIPPostingBuffer[2].MODIFY;
      END ELSE
        ComplWIPPostingBuffer[1].INSERT;
    END;

    PROCEDURE GetCreditDim1@1100525000(OverheadSurcharge@1100525000 : Record 11020208;EmployeeNo@1100525004 : Code[20];PlantType@1100529600 : Code[20];PlantNo@1100529601 : Code[10];VAR SurchargePostingBuffer@1100525001 : ARRAY [2] OF TEMPORARY Record 49);
    VAR
      Employee@1100525003 : Record 5200;
      TradeAssociation@1100525002 : Record 11012015;
      PlantNumber@1100529602 : Record 11012552;
      DimMgt@1100525005 : Codeunit 408;
    BEGIN
      CASE OverheadSurcharge."Source Type Department" OF
        OverheadSurcharge."Source Type Department"::Employee:
          BEGIN
            SurchargePostingBuffer[1]."Global Dimension 1 Code" := '';
            IF Employee.GET(EmployeeNo) THEN BEGIN
              IF TradeAssociation.GET(Employee."Trade Association") THEN BEGIN
                IF TradeAssociation."Source Department Code" = TradeAssociation."Source Department Code"::"Trade Association" THEN
                  SurchargePostingBuffer[1]."Global Dimension 1 Code" := TradeAssociation."Department Code"
                ELSE
                  SurchargePostingBuffer[1]."Global Dimension 1 Code" := Employee."Global Dimension 1 Code";
              END ELSE BEGIN
                SurchargePostingBuffer[1]."Global Dimension 1 Code" := Employee."Global Dimension 1 Code";
              END;
            END;
          END;
        OverheadSurcharge."Source Type Department"::Job:;
          //No Changes
        OverheadSurcharge."Source Type Department"::Fixed:
          SurchargePostingBuffer[1]."Global Dimension 1 Code" := OverheadSurcharge."Coverage Department";
        OverheadSurcharge."Source Type Department"::Plant:
          IF PlantNumber.GET(PlantType, PlantNo) THEN
            SurchargePostingBuffer[1]."Global Dimension 1 Code" := PlantNumber."Department Code"
          ELSE
            SurchargePostingBuffer[1]."Global Dimension 1 Code" := '';
      END;

      DimMgt.ValidateShortcutDimValues(1,SurchargePostingBuffer[1]."Global Dimension 1 Code",SurchargePostingBuffer[1]."Dimension Set ID");
    END;

    PROCEDURE SetPostingFromSalesLine@1100525005(Origin@1100409000 : 'Project,Service';SalesLine@1100525000 : Record 37;SalesHeader@1100525005 : Record 36;JobJnlLine@1100409002 : Record 11072008;ServJnlLine@1100409001 : Record 11012820;VAR GenJnlLine@1100525001 : Record 81;DocumentNo@1100525003 : Code[20]);
    BEGIN
      GenJnlLine.INIT; //Only for Sales
      GenJnlLine."Posting Date" := SalesHeader."Posting Date";
      GenJnlLine."Job No." := SalesLine."Job No.";

      IF SalesHeader."Plant Invoice" THEN BEGIN
        CASE Origin OF
          Origin::Project:
            GenJnlLine."Shortcut Dimension 1 Code" := JobJnlLine."Shortcut Dimension 1 Code";
          Origin::Service:
            GenJnlLine."Shortcut Dimension 1 Code" := ServJnlLine."Shortcut Dimension 1 Code";
        END;
        GenJnlLine."Plant Type" := SalesLine."Plant Type";
        GenJnlLine."Plant No." := SalesLine."Plant No.";
      END ELSE
        GenJnlLine."Shortcut Dimension 1 Code" := SalesLine."Shortcut Dimension 1 Code";

      GenJnlLine."Shortcut Dimension 2 Code" := SalesLine."Shortcut Dimension 2 Code";
      GenJnlLine."Employee No." := SalesLine."Employee No.";
      GenJnlLine."Cost Component" := SalesLine."Cost Component";
      GenJnlLine."Document No." := DocumentNo;
      GenJnlLine."Plant Invoice" := SalesHeader."Plant Invoice";
    END;

    PROCEDURE SetPostingFromPurchLine@1100525001(PurchLine@1100525000 : Record 39;PurchHeader@1100525001 : Record 38;VAR GenJnlLine@1100525002 : Record 81);
    BEGIN
      GenJnlLine."Posting Date" := PurchHeader."Posting Date";
      GenJnlLine."Job No." := PurchLine."Job No.";
      GenJnlLine."Shortcut Dimension 1 Code" := PurchLine."Shortcut Dimension 1 Code";
      GenJnlLine."Shortcut Dimension 2 Code" := PurchLine."Shortcut Dimension 2 Code";
      GenJnlLine."Employee No." := PurchLine."Employee No.";
      GenJnlLine."Wage Component" := PurchLine."Wage Component";
      GenJnlLine."Cost Component" := PurchLine."Cost Component";
      GenJnlLine."Account Type" := GenJnlLine."Account Type"::Vendor;
      GenJnlLine."Posting Group" := PurchHeader."Vendor Posting Group";
    END;

    PROCEDURE SetPostingFromApprovalLine@1100525004(InvApprovalLine@1100525000 : Record 11012032;VAR GenJnlLine@1100525002 : Record 81);
    BEGIN
      GenJnlLine."Posting Date" := InvApprovalLine."Posting Date";
      GenJnlLine."Job No." := InvApprovalLine."Project No.";
      GenJnlLine."Shortcut Dimension 1 Code" := InvApprovalLine."Shortcut Dimension 1 Code";
      GenJnlLine."Shortcut Dimension 2 Code" := InvApprovalLine."Shortcut Dimension 2 Code";
      GenJnlLine."Employee No." := InvApprovalLine."Employee No.";
      GenJnlLine."Wage Component" := InvApprovalLine."Wage Component";
      GenJnlLine."Cost Component" := InvApprovalLine."Cost Component";
    END;

    PROCEDURE SetPostingFromItemJnlLine@1100525002(ItemJnlLine@1100525000 : Record 83;VAR GenJnlLine@1100525002 : Record 81);
    BEGIN
      GenJnlLine."Posting Date" := ItemJnlLine."Posting Date";
      GenJnlLine."Job No." := ItemJnlLine."Job No.";
      GenJnlLine."Shortcut Dimension 1 Code" := ItemJnlLine."Shortcut Dimension 1 Code";
      GenJnlLine."Shortcut Dimension 2 Code" := ItemJnlLine."Shortcut Dimension 2 Code";
      GenJnlLine."Cost Component" := ItemJnlLine."Cost Component";
      GenJnlLine."Document No." := ItemJnlLine."Document No.";
      IsReturnLine := (ItemJnlLine.Quantity < 0);
    END;

    PROCEDURE PostSurchargesFromGenJnlLine@1100409001(OrigGenJnlLine@1100409003 : Record 81;VAR GenJnlPostLine@1100409004 : Codeunit 12;VAR SurchargePostingBuffer@1100409001 : ARRAY [2] OF TEMPORARY Record 49;VAR Counter@1100409005 : Integer);
    VAR
      GenJnlLine@1100409002 : Record 81;
    BEGIN
      IF SurchargePostingBuffer[1].FIND('-') THEN
        REPEAT
          GenJnlLine.INIT;

          GenJnlLine."Source Code" := OrigGenJnlLine."Source Code";
          GenJnlLine."Reason Code" := OrigGenJnlLine."Reason Code";
          GenJnlLine."Journal Template Name" := OrigGenJnlLine."Journal Template Name";
          GenJnlLine."Journal Batch Name" := OrigGenJnlLine."Journal Batch Name";
          GenJnlLine."Account Type" := GenJnlLine."Account Type"::"G/L Account";
          GenJnlLine."Document No." := OrigGenJnlLine."Document No.";
          GenJnlLine."Document Date" := OrigGenJnlLine."Document Date";
          GenJnlLine."Extension Contract" := OrigGenJnlLine."Extension Contract";
          GenJnlLine."Purchase Action" := OrigGenJnlLine."Purchase Action";
          GenJnlLine."Service Location No." := OrigGenJnlLine."Service Location No.";
          GenJnlLine."Additional Cost (Service)" := OrigGenJnlLine."Additional Cost (Service)";
          GenJnlLine."Interest Date" := OrigGenJnlLine."Interest Date";
          GenJnlLine."System-Created Entry" := TRUE;
          GenJnlLine."Vendor Posting Group" := OrigGenJnlLine."Vendor Posting Group";

          GenJnlLine."Account No." := SurchargePostingBuffer[1]."G/L Account";
          GenJnlLine."Posting Date" := SurchargePostingBuffer[1]."Posting Date";
          GenJnlLine.Description := SurchargePostingBuffer[1].Description;
          GenJnlLine."Description 2" := SurchargePostingBuffer[1]."Description 2";  //**4PS01.n
          //* Veld SurchargePostingBuffer[1]."Bal. Account No." werd nooit gevuld. Veld wordt nu gebruikt voor Element want
          //* element zit niet in key (lukt ook niet meer om dit nog toe te voegen). Dus "Bal. Account No." hier niet meer vullen.
          //GenJnlLine."Bal. Account No." := SurchargePostingBuffer[1]."Bal. Account No.";
          GenJnlLine.Amount := SurchargePostingBuffer[1].Amount;
          GenJnlLine.VALIDATE(Amount);
          GenJnlLine."Shortcut Dimension 1 Code" := SurchargePostingBuffer[1]."Global Dimension 1 Code";
          GenJnlLine."Shortcut Dimension 2 Code" := SurchargePostingBuffer[1]."Global Dimension 2 Code";
          GenJnlLine."Dimension Set ID" := SurchargePostingBuffer[1]."Dimension Set ID";
          GenJnlLine."Cost Component" := SurchargePostingBuffer[1]."Cost Component";
          GenJnlLine."Job No." := SurchargePostingBuffer[1]."Job No.";
          GenJnlLine.Element := SurchargePostingBuffer[1].Element;
          GenJnlLine."Service Order No." := SurchargePostingBuffer[1]."Service Order No.";
          GenJnlLine.GetServiceCategory;
          GenJnlLine."Service Contract No." := SurchargePostingBuffer[1]."Service Contract No.";
          GenJnlLine."Origin Type" := SurchargePostingBuffer[1]."Origin Type";
          GenJnlLine."Employee No." := SurchargePostingBuffer[1]."Employee No.";

          //Call C006064 n  FIELD "Buy-Back Item (Plant Order)" USED FOR OTHER PURPOSE
          GenJnlLine."Skip WIP Check" := SurchargePostingBuffer[1]."Buy-Back Item (Plant Order)";

          GenJnlPostLine.RunWithCheck(GenJnlLine);
          Counter := Counter + 1;
        UNTIL SurchargePostingBuffer[1].NEXT = 0;
      SurchargePostingBuffer[1].DELETEALL;
    END;

    PROCEDURE PostSurchargesFromSalesLine@1100409004(ComplementaryWIP@1100409008 : Boolean;SourceCode@1100409005 : Code[20];DocumentType@1100409006 : Integer;DocumentNo@1100409007 : Code[20];SalesHeader@1100409000 : Record 36;VAR GenJnlPostLine@1100409003 : Codeunit 12;VAR SurchargePostingBuffer@1100409002 : ARRAY [2] OF TEMPORARY Record 49);
    VAR
      GenJnlLine@1100409004 : Record 81;
    BEGIN
      IF SurchargePostingBuffer[1].FIND('-') THEN
        REPEAT
          GenJnlLine.INIT;

          GenJnlLine."Source Code" := SourceCode;
          GenJnlLine."Reason Code" := SalesHeader."Reason Code";
          GenJnlLine."Account Type" := GenJnlLine."Account Type"::"G/L Account";
          GenJnlLine."Document Type" := DocumentType;
          GenJnlLine."Document No." := DocumentNo;
          GenJnlLine."Posting Date" := SalesHeader."Posting Date";
          GenJnlLine."Document Date" := SalesHeader."Document Date";
          GenJnlLine."System-Created Entry" := TRUE;

          GenJnlLine."Account No." := SurchargePostingBuffer[1]."G/L Account";
          GenJnlLine.Description := SurchargePostingBuffer[1].Description;
          GenJnlLine."Description 2" := SurchargePostingBuffer[1]."Description 2";  //**4PS01.n
          //* Veld SurchargePostingBuffer[1]."Bal. Account No." werd nooit gevuld. Veld wordt nu gebruikt voor Element want
          //* element zit niet in key (lukt ook niet meer om dit nog toe te voegen). Dus "Bal. Account No." hier niet meer vullen.
          //GenJnlLine."Bal. Account No." := SurchargePostingBuffer[1]."Bal. Account No.";
          GenJnlLine.Amount := SurchargePostingBuffer[1].Amount;
          GenJnlLine.VALIDATE(Amount);
          GenJnlLine."Shortcut Dimension 1 Code" := SurchargePostingBuffer[1]."Global Dimension 1 Code";
          GenJnlLine."Shortcut Dimension 2 Code" := SurchargePostingBuffer[1]."Global Dimension 2 Code";
          GenJnlLine."Dimension Set ID" := SurchargePostingBuffer[1]."Dimension Set ID";
          GenJnlLine."Origin Type" := SurchargePostingBuffer[1]."Origin Type";

          IF ComplementaryWIP THEN BEGIN
            IF NOT SurchargePostingBuffer[1]."Buy-Back Item (Plant Order)" THEN //Call C024805 new; Surcharges have Element located in field Balance Account.
              GenJnlLine."Bal. Account No." := SurchargePostingBuffer[1]."Bal. Account No.";
            GenJnlLine."Closed Project No." := SurchargePostingBuffer[1]."Job No.";
            GenJnlLine."Closed Service Order No." := SurchargePostingBuffer[1]."Service Order No.";
            GenJnlLine."Closed Service Contract No." := SurchargePostingBuffer[1]."Service Contract No.";
          END ELSE BEGIN
            GenJnlLine."Extension Contract" := SurchargePostingBuffer[1]."Extension Contract";
            GenJnlLine."Service Location No." := SurchargePostingBuffer[1]."Service Location No.";
            GenJnlLine."Interest Date" := SalesHeader."Interest Date";
            GenJnlLine."Alternative Bill-to Address" := SalesHeader."Alternative Bill-to Address";
            GenJnlLine."Job No." := SurchargePostingBuffer[1]."Job No.";
            GenJnlLine.Element := SurchargePostingBuffer[1].Element;
            GenJnlLine."Service Order No." := SurchargePostingBuffer[1]."Service Order No.";
            GenJnlLine.GetServiceCategory;
            GenJnlLine."Service Contract No." := SurchargePostingBuffer[1]."Service Contract No.";
            GenJnlLine."Cost Component" := SurchargePostingBuffer[1]."Cost Component";
            GenJnlLine."Employee No." := SurchargePostingBuffer[1]."Employee No.";
          END;

          //Call C006064 n  FIELD "Buy-Back Item (Plant Order)" USED FOR OTHER PURPOSE
          GenJnlLine."Skip WIP Check" := SurchargePostingBuffer[1]."Buy-Back Item (Plant Order)";

          GenJnlPostLine.RunWithCheck(GenJnlLine);
        UNTIL SurchargePostingBuffer[1].NEXT = 0;
      SurchargePostingBuffer[1].DELETEALL;
    END;

    PROCEDURE PostSurchargesFromPurchLine@1100409002(ComplementaryWIP@1100525004 : Boolean;SourceCode@1100525003 : Code[20];DocumentType@1100525002 : Integer;DocumentNo@1100525001 : Code[20];OrigGenJnlLine@1100525000 : Record 81;PurchLine@1100409001 : Record 39;PurchHeader@1100409000 : Record 38;VAR GenJnlPostLine@1100409003 : Codeunit 12;VAR SurchargePostingBuffer@1100409002 : ARRAY [2] OF TEMPORARY Record 49);
    VAR
      GenJnlLine@1100409004 : Record 81;
    BEGIN
      IF SurchargePostingBuffer[1].FIND('-') THEN
        REPEAT
          GenJnlLine.INIT;

          GenJnlLine."Source Code" := SourceCode;
          GenJnlLine."Reason Code" := PurchHeader."Reason Code";
          GenJnlLine."Account Type" := GenJnlLine."Account Type"::"G/L Account";
          GenJnlLine."Account No." := SurchargePostingBuffer[1]."G/L Account";
          GenJnlLine."Document Type" := DocumentType;
          GenJnlLine."Document No." := DocumentNo;
          GenJnlLine."Posting Date" := PurchHeader."Posting Date";
          GenJnlLine."Document Date" := PurchHeader."Document Date";
          GenJnlLine."Service Location No." := OrigGenJnlLine."Service Location No.";
          GenJnlLine."Additional Cost (Service)" := OrigGenJnlLine."Additional Cost (Service)";
          GenJnlLine."System-Created Entry" := TRUE;
          GenJnlLine.Description := SurchargePostingBuffer[1].Description;
          GenJnlLine."Description 2" := SurchargePostingBuffer[1]."Description 2";  //**4PS01.n
          //* Veld SurchargePostingBuffer[1]."Bal. Account No." werd nooit gevuld. Veld wordt nu gebruikt voor Element want
          //* element zit niet in key (lukt ook niet meer om dit nog toe te voegen). Dus "Bal. Account No." hier niet meer vullen.
          //GenJnlLine."Bal. Account No." := SurchargePostingBuffer[1]."Bal. Account No.";
          GenJnlLine.Amount := SurchargePostingBuffer[1].Amount;
          GenJnlLine.VALIDATE(Amount);
          GenJnlLine."Shortcut Dimension 1 Code" := SurchargePostingBuffer[1]."Global Dimension 1 Code";
          GenJnlLine."Shortcut Dimension 2 Code" := SurchargePostingBuffer[1]."Global Dimension 2 Code";
          GenJnlLine."Dimension Set ID" := SurchargePostingBuffer[1]."Dimension Set ID";
          GenJnlLine."Origin Type" := SurchargePostingBuffer[1]."Origin Type";

          IF ComplementaryWIP THEN BEGIN
            IF NOT SurchargePostingBuffer[1]."Buy-Back Item (Plant Order)" THEN //Call C024805 new; Surcharges have Element located in field Balance Account.
              GenJnlLine."Bal. Account No." := SurchargePostingBuffer[1]."Bal. Account No.";
            GenJnlLine."Closed Project No." := SurchargePostingBuffer[1]."Job No.";
            GenJnlLine."Closed Service Order No." := SurchargePostingBuffer[1]."Service Order No.";
            GenJnlLine."Closed Service Contract No." := SurchargePostingBuffer[1]."Service Contract No.";
          END ELSE BEGIN
            GenJnlLine."Extension Contract" := OrigGenJnlLine."Extension Contract";
            GenJnlLine."Service Location No." := SurchargePostingBuffer[1]."Service Location No.";
            GenJnlLine."Interest Date" := PurchHeader."Interest Date";
            GenJnlLine."Job No." := SurchargePostingBuffer[1]."Job No.";
            GenJnlLine.Element := SurchargePostingBuffer[1].Element;
            GenJnlLine."Service Order No." := SurchargePostingBuffer[1]."Service Order No.";
            GenJnlLine.GetServiceCategory;
            GenJnlLine."Service Contract No." := SurchargePostingBuffer[1]."Service Contract No.";
            GenJnlLine."Cost Component" := SurchargePostingBuffer[1]."Cost Component";
            GenJnlLine."Employee No." := SurchargePostingBuffer[1]."Employee No.";
          END;

          //Call C006064 n  FIELD "Buy-Back Item (Plant Order)" USED FOR OTHER PURPOSE
          GenJnlLine."Skip WIP Check" := SurchargePostingBuffer[1]."Buy-Back Item (Plant Order)";

          GenJnlPostLine.RunWithCheck(GenJnlLine);
        UNTIL SurchargePostingBuffer[1].NEXT = 0;
      SurchargePostingBuffer[1].DELETEALL;
    END;

    PROCEDURE AdjustDimVal@1100409009(ChangeToRevenue@1100409001 : Boolean;VAR DimVal@1100409002 : Record 349);
    BEGIN
      IF ChangeToRevenue THEN
        IF DimVal."Cost Type" <> DimVal."Cost Type"::Revenue THEN BEGIN
          CLEAR(DimVal);
          DimVal."Cost Type" := DimVal."Cost Type"::Revenue;
        END;
    END;

    BEGIN
    END.
  }
}

