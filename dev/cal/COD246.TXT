OBJECT Codeunit 246 Item Jnl.-Explode BOM
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03,4PS14.00;
  }
  PROPERTIES
  {
    TableNo=83;
    OnRun=VAR
            InventorySetup@1100528300 : Record 313;
            Selection@1004 : Integer;
          BEGIN
            TESTFIELD("Item No.");
            CALCFIELDS("Reserved Qty. (Base)");
            TESTFIELD("Reserved Qty. (Base)",0);
            FromBOMComp.SETRANGE("Parent Item No.","Item No.");
            FromBOMComp.SETRANGE(Type,FromBOMComp.Type::Item);
            NoOfBOMComp := FromBOMComp.COUNT;
            IF NoOfBOMComp = 0 THEN
              ERROR(
                Text000,
                "Item No.");

            Selection := STRMENU(Text003,2);
            IF Selection = 0 THEN
              EXIT;

            InventorySetup.GET; //**4PS.n

            ToItemJnlLine.RESET;
            ToItemJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
            ToItemJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
            ToItemJnlLine.SETRANGE("Document No.","Document No.");
            ToItemJnlLine.SETRANGE("Posting Date","Posting Date");
            ToItemJnlLine.SETRANGE("Entry Type","Entry Type");
            ToItemJnlLine := Rec;
            IF ToItemJnlLine.FIND('>') THEN BEGIN
              LineSpacing := (ToItemJnlLine."Line No." - "Line No.") DIV (1 + NoOfBOMComp);
              IF LineSpacing = 0 THEN
                ERROR(Text002);
            END ELSE
              LineSpacing := 10000;

            ToItemJnlLine := Rec;
            FromBOMComp.SETFILTER("No.",'<>%1','');
            IF FromBOMComp.FIND('-') THEN
              REPEAT
                Item.GET(FromBOMComp."No.");
                ToItemJnlLine."Line No." := 0;
                ToItemJnlLine."Item No." := FromBOMComp."No.";
                ToItemJnlLine."Variant Code" := FromBOMComp."Variant Code";
                ToItemJnlLine."Unit of Measure Code" := FromBOMComp."Unit of Measure Code";
                ToItemJnlLine."Qty. per Unit of Measure" :=
                  UOMMgt.GetQtyPerUnitOfMeasure(Item,FromBOMComp."Unit of Measure Code");
                ToItemJnlLine.Quantity := ROUND("Quantity (Base)" * FromBOMComp."Quantity per",0.00001);
                IF ToItemJnlLine.Quantity > 0 THEN
                  IF ItemCheckAvail.ItemJnlCheckLine(ToItemJnlLine, FALSE, 0) THEN
                    ItemCheckAvail.RaiseUpdateInterruptedError;
              UNTIL FromBOMComp.NEXT = 0;

            ToItemJnlLine := Rec;
            ToItemJnlLine.INIT;
            //**4PS.so
            //ToItemJnlLine.Description := Description;
            //ToItemJnlLine.MODIFY;
            //**4PS.eo
            ToItemJnlLine.DELETE; ////**4PS.n delete original BOM line

            FromBOMComp.RESET;
            FromBOMComp.SETRANGE("Parent Item No.","Item No.");
            FromBOMComp.SETRANGE(Type,FromBOMComp.Type::Item);
            FromBOMComp.FIND('-');
            NextLineNo := "Line No.";

            REPEAT
              ToItemJnlLine.INIT;
              ToItemJnlLine."Journal Template Name" := "Journal Template Name";
              ToItemJnlLine."Document No." := "Document No.";
              ToItemJnlLine."Document Date" := "Document Date";
              ToItemJnlLine."Posting Date" := "Posting Date";
              ToItemJnlLine."External Document No." := "External Document No.";
              ToItemJnlLine."Entry Type" := "Entry Type";
              ToItemJnlLine."Location Code" := "Location Code";
              NextLineNo := NextLineNo + LineSpacing;
              ToItemJnlLine."Line No." := NextLineNo;
              //**4PS.sn
              ToItemJnlLine."Receiving Company" := "Receiving Company";
              ToItemJnlLine."Supplying Company" := "Supplying Company";
              ToItemJnlLine."Job No." := "Job No.";
              ToItemJnlLine.Element := Element;
              ToItemJnlLine."Element Level" := "Element Level";
              ToItemJnlLine.Chapter := Chapter;
              ToItemJnlLine.Paragraph := Paragraph;
              ToItemJnlLine."Extension Contract" := "Extension Contract";
              ToItemJnlLine."Delivery Date" := "Delivery Date";
              ToItemJnlLine."Ship To Location" := "Ship To Location";
              ToItemJnlLine.Deliver := Deliver;
              ToItemJnlLine.Blocked := Blocked;
              ToItemJnlLine."Delivery Account No." := "Delivery Account No.";
              ToItemJnlLine."Delivery Dimension 1 Code" := "Delivery Dimension 1 Code";
              ToItemJnlLine."Main Project No." := "Main Project No.";
              ToItemJnlLine."Origin Type Line" := "Origin Type Line";
              ToItemJnlLine."Good Customs" := "Good Customs";
              ToItemJnlLine."Shipment with T1" := "Shipment with T1";
              ToItemJnlLine."Customs Destination Code" := "Customs Destination Code";
              ToItemJnlLine."Plant Type" := "Plant Type";
              ToItemJnlLine."Plant No." := "Plant No.";
              ToItemJnlLine."Country/Region of Origin/Dest." := "Country/Region of Origin/Dest.";
              ToItemJnlLine."Entity Type" := "Entity Type";
              ToItemJnlLine."System No." := "System No.";
              ToItemJnlLine."Entity No." := "Entity No.";
              ToItemJnlLine."Cable Transit Pos." := "Cable Transit Pos.";
              ToItemJnlLine."Yard No." := "Yard No.";
              ToItemJnlLine."Cost Component" := "Cost Component";
              ToItemJnlLine."Service Order No." := "Service Order No.";
              ToItemJnlLine."Service Location No." := "Service Location No.";
              ToItemJnlLine."Service Contract No." := "Service Contract No.";
              ToItemJnlLine."Additional Cost (Service)" := "Additional Cost (Service)";
              ToItemJnlLine."Service Source Type" := "Service Source Type";
              ToItemJnlLine."Base Service Order No." := "Base Service Order No.";
              ToItemJnlLine."Service Control Year" := "Service Control Year";
              ToItemJnlLine."Rental Unit" := "Rental Unit";
              ToItemJnlLine."Project Stock" := "Project Stock";
              ToItemJnlLine."Delivery Time" := "Delivery Time";
              ToItemJnlLine."FSC Type Code" := "FSC Type Code";
              //**4PS.en
              ToItemJnlLine."Drop Shipment" := "Drop Shipment";
              ToItemJnlLine."Source Code" := "Source Code";
              ToItemJnlLine."Reason Code" := "Reason Code";
              ToItemJnlLine.VALIDATE("Item No.",FromBOMComp."No.");
              ToItemJnlLine.VALIDATE("Variant Code",FromBOMComp."Variant Code");
              ToItemJnlLine.VALIDATE("Unit of Measure Code",FromBOMComp."Unit of Measure Code");
              ToItemJnlLine.VALIDATE(
                Quantity,
                ROUND("Quantity (Base)" * FromBOMComp."Quantity per",0.00001));
              ToItemJnlLine.Description := FromBOMComp.Description;
              OnBeforeToItemJnlLineInsert(ToItemJnlLine,Rec);

              //**4PS.sn
              IF (InventorySetup."Default Blocked") THEN
                ToItemJnlLine.Blocked := InventorySetup."Default Blocked"
              ELSE
                ToItemJnlLine.Blocked := ItemCheckAvail.ItemJnlLineShowWarning(ToItemJnlLine);
              //**4PS.en

              ToItemJnlLine.INSERT;

              IF Selection = 1 THEN BEGIN
                ToItemJnlLine."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
                ToItemJnlLine."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
                ToItemJnlLine."Dimension Set ID" := "Dimension Set ID";
                ToItemJnlLine.MODIFY;
              END;
            UNTIL FromBOMComp.NEXT = 0;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Item %1 is not a BOM.;NOR=Varen %1 er ikke en stykkliste.;SVE=Artikel %1 „r inte en struktur.';
      Text002@1001 : TextConst 'ENU=There is not enough space to explode the BOM.;NOR=Det er ikke nok plass til † utfolde stykklisten.;SVE=Det finns inte tillr„ckligt med utrymme f”r att expandera strukturen.';
      Text003@1002 : TextConst 'ENU=&Copy dimensions from BOM,&Retrieve dimensions from components;NOR=&Kopier dimensjoner fra stykkliste,&Hent dimensjoner fra komponenter;SVE=&Kopiera dimensioner fr†n struktur,&H„mta dimensioner fr†n komponenter';
      ToItemJnlLine@1003 : Record 83;
      FromBOMComp@1004 : Record 90;
      Item@1005 : Record 27;
      ItemCheckAvail@1006 : Codeunit 311;
      UOMMgt@1007 : Codeunit 5402;
      LineSpacing@1008 : Integer;
      NextLineNo@1009 : Integer;
      NoOfBOMComp@1010 : Integer;

    [Integration]
    LOCAL PROCEDURE OnBeforeToItemJnlLineInsert@1(VAR ToItemJournalLine@1000 : Record 83;FromItemJournalLine@1001 : Record 83);
    BEGIN
    END;

    BEGIN
    END.
  }
}

