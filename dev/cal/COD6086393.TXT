OBJECT Codeunit 6086393 EM Bank Entry Set Recon.-No.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.2.60;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE ApplyEntries@1(VAR BankAccReconLine@1000 : Record 6086375;VAR BankTransaction@1001 : Record 6086330;Relation@1002 : 'One-to-One,One-to-Many') : Boolean;
    BEGIN
      BankTransaction.LOCKTABLE;
      BankAccReconLine.LOCKTABLE;
      BankAccReconLine.FIND;

      IF BankTransaction.IsApplied THEN
        EXIT(FALSE);

      IF (Relation = Relation::"One-to-One") AND (BankAccReconLine."Applied Entries" > 0) THEN
        EXIT(FALSE);

      BankAccReconLine.TESTFIELD(Type,BankAccReconLine.Type::"Bank Transaction Entry");
      SetReconNo(BankTransaction,BankAccReconLine);
      BankAccReconLine."Applied Amount" += BankTransaction."Bank-Currency Amount";
      BankAccReconLine."Applied Entries" := BankAccReconLine."Applied Entries" + 1;
      BankAccReconLine.VALIDATE("Statement Amount");
      BankAccReconLine.MODIFY;
      EXIT(TRUE);
    END;

    PROCEDURE RemoveApplication@4(VAR BankTransaction@1001 : Record 6086330);
    VAR
      BankAccReconLine@1000 : Record 6086375;
    BEGIN
      BankTransaction.TESTFIELD("Bank Statement Transaction",FALSE);

      BankTransaction.LOCKTABLE;
      BankAccReconLine.LOCKTABLE;

      IF NOT BankAccReconLine.GET(
         BankTransaction."Bank Account Type",
         BankTransaction."Bank Account No.",
         BankTransaction."Statement No.",
         BankTransaction."Statement Line No.")
      THEN
        EXIT;

      BankAccReconLine.TESTFIELD(Type,BankAccReconLine.Type::"Bank Transaction Entry");
      RemoveReconNo(BankTransaction,BankAccReconLine);

      BankAccReconLine."Applied Amount" -= BankTransaction."Bank-Currency Amount";
      BankAccReconLine."Applied Entries" := BankAccReconLine."Applied Entries" - 1;
      BankAccReconLine.VALIDATE("Statement Amount");
      BankAccReconLine.MODIFY;
    END;

    PROCEDURE SetReconNo@2(VAR BankTransaction@1000 : Record 6086330;VAR BankAccReconLine@1001 : Record 6086375);
    BEGIN
      BankTransaction.TESTFIELD(Reconciled,FALSE);

      BankTransaction.TESTFIELD("Statement Status",BankTransaction."Statement Status"::Open);
      BankTransaction.TESTFIELD("Statement No.",'');
      BankTransaction.TESTFIELD("Statement Line No.",0);
      BankTransaction.TESTFIELD("Bank Account Type",BankAccReconLine."Bank Account Type");
      BankTransaction.TESTFIELD("Bank Account No.",BankAccReconLine."Bank Account No.");

      BankTransaction."Statement Status" := BankTransaction."Statement Status"::"Bank Transaction Applied";
      BankTransaction."Statement No." := BankAccReconLine."Statement No.";
      BankTransaction."Statement Line No." := BankAccReconLine."Statement Line No.";
      BankTransaction.MODIFY;
    END;

    PROCEDURE RemoveReconNo@3(VAR BankTransaction@1000 : Record 6086330;VAR BankAccReconLine@1001 : Record 6086375);
    BEGIN
      BankTransaction.TESTFIELD(Reconciled,FALSE);

      BankTransaction.TESTFIELD("Statement Status",BankTransaction."Statement Status"::"Bank Transaction Applied");
      BankTransaction.TESTFIELD("Statement No.",BankAccReconLine."Statement No.");
      BankTransaction.TESTFIELD("Statement Line No.",BankAccReconLine."Statement Line No.");

      BankTransaction.TESTFIELD("Bank Account Type",BankAccReconLine."Bank Account Type");
      BankTransaction.TESTFIELD("Bank Account No.",BankAccReconLine."Bank Account No.");
      BankTransaction."Statement Status" := BankTransaction."Statement Status"::Open;
      BankTransaction."Statement No." := '';
      BankTransaction."Statement Line No." := 0;
      BankTransaction.MODIFY;
    END;

    BEGIN
    END.
  }
}

