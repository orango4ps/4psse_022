OBJECT Codeunit 93 Purch.-Quote to Order (Yes/No)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    TableNo=38;
    OnRun=VAR
            ConfirmManagement@1001 : Codeunit 27;
            IsHandled@1000 : Boolean;
            lvPurchHeadRec@1210190001 : Record 38;
            lvNoSeries@1210190000 : Code[10];
            PurchaseRequisition@1100525000 : Record 11229330;
          BEGIN
            TESTFIELD("Document Type","Document Type"::Quote);
            //**4PS.so
            //IF NOT ConfirmManagement.ConfirmProcess(Text000,TRUE) THEN
            //  EXIT;
            //**4PS.eo

            //**4PS.sn
            VendorRec.GET("Buy-from Vendor No.");
            VendorRec.TESTFIELD("Block Purchase Order", FALSE);
            IF "Purchase Requisition No." <> '' THEN BEGIN
              PurchaseRequisition.GET("Purchase Requisition No.");
              PurchaseRequisition.TESTFIELD("Quote only", FALSE);
            END;
            CheckIfMakingOrderAllowedForQuoteStatus;
            CheckIfNoQuoteConsentLinesAvailable;
            TESTFIELD("No.");
            ExistingOrderNo := '';
            PurchOrderRec.SETCURRENTKEY("Document Type", "Copied from Purchase Quote No.");
            PurchOrderRec.SETRANGE("Document Type","Document Type"::Order);
            PurchOrderRec.SETRANGE("Copied from Purchase Quote No.","No.");
            IF PurchOrderRec.FINDLAST THEN BEGIN
              CASE STRMENU(Text11012004, 1) OF
                0:
                  ERROR('');
                1:
                  BEGIN
                    IF PAGE.RUNMODAL(0, PurchOrderRec) = ACTION::LookupOK THEN
                      ExistingOrderNo := PurchOrderRec."No.";
                    IF (ExistingOrderNo = '') THEN
                      ERROR('');
                  END;
              END;
            END ELSE BEGIN
              IF ("Quote Status" <> "Quote Status"::Selected) THEN BEGIN
                IF NOT CONFIRM(Text11012000, FALSE,FIELDCAPTION("Quote Status")) THEN
                  EXIT;
              END ELSE BEGIN
                IF NOT CONFIRM(Text000,FALSE) THEN
                  EXIT;
              END;
            END;

            IF (ExistingOrderNo = '') THEN BEGIN
              IF gAskForNoSerie THEN BEGIN
                lvPurchHeadRec.CheckAskForNoSeries("Document Type"::Order, lvNoSeries);
                PurchQuoteToOrder.SetAskForNoSerie(lvNoSeries);
              END;
            END ELSE BEGIN
              PurchQuoteToOrder.SetOnExistingOrder(ExistingOrderNo);
            END;
            //**4PS.en

            IsHandled := FALSE;
            OnBeforePurchQuoteToOrder(Rec,IsHandled);
            IF IsHandled THEN
              EXIT;

            PurchQuoteToOrder.RUN(Rec);
            PurchQuoteToOrder.GetPurchOrderHeader(PurchOrderHeader);

            MESSAGE(Text001,"No.",PurchOrderHeader."No.");
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Do you want to convert the quote to an order?;NOR=Vil du konvertere foresp›rselen til en bestilling?;SVE=Vill du konvertera offerten till en order?';
      Text001@1001 : TextConst 'ENU=Quote number %1 has been converted to order number %2.;NOR=Foresp›rsel %1 er konvertert til bestilling %2.;SVE=Ink”psoffert %1 har konverterats till ink”psorder %2.';
      Text11012000@11012004 : TextConst 'ENU=%1 is not ''Selected''.\ \Do you want to convert the quote to an order?;NOR=%1 er ikke ''Valgt''.\ \Vil du konvertere tilbudet til en ordre?;SVE=%1 har inte valts.\ \Vill du konvertera offerten till en order?';
      PurchOrderHeader@1002 : Record 38;
      PurchOrderRec@1100485002 : Record 38;
      VendorRec@1100525000 : Record 23;
      PurchQuoteToOrder@1003 : Codeunit 96;
      Text11012001@1210190000 : TextConst 'ENU=Move Quote to Blanket Order?;NOR=Flytte tilbud til rammeordre?;SVE=Vill du flytta offerten till avropsordern?';
      Text11012003@1210190002 : TextConst 'ENU=%1 is not ''Selected''.\ \Do you want to convert the quote to a blanket order?;NOR=%1 er ikke ''Valgt''.\ \Vil du konvertere tilbudet til en rammeordre?;SVE=%1 har inte valts.\ \Vill du konvertera offerten till en avropsorder?';
      gAskForNoSerie@1210190003 : Boolean;
      Text11012004@1100485000 : TextConst 'ENU=Quote is already converted. Copy the not copied lines to an existing order,Quote is already converted. Copy the not copied lines to a new order;NOR=Tilbudet er allerede konvertert. Kopier radene som ikke kopiert til en eksisterende ordre,Foresp›rselen er allerede konvertert, kopiere radene som ikke er kopiert til en ny ordre;SVE=Offerten har redan konverterats, kopiera raderna som inte har kopierats till en befintlig order,Offerten har redan konverterats, kopiera raderna som inte har kopierats till en ny order';
      ExistingOrderNo@1100485001 : Code[20];

    [Integration]
    LOCAL PROCEDURE OnBeforePurchQuoteToOrder@1(VAR PurchaseHeader@1000 : Record 38;VAR IsHandled@1001 : Boolean);
    BEGIN
    END;

    PROCEDURE MoveQuoteToBlanketOrder@1210190000(VAR PurchHeadRec@1210190000 : Record 38);
    VAR
      lvPurchHeadRec@1100485001 : Record 38;
      lvNoSeries@1100485000 : Code[10];
    BEGIN
      //**4PS.n
      WITH PurchHeadRec DO BEGIN
        TESTFIELD("Document Type","Document Type"::Quote);
        TESTFIELD("No.");

        ExistingOrderNo := '';
        PurchOrderRec.SETCURRENTKEY("Document Type", "Copied from Purchase Quote No.");
        PurchOrderRec.SETRANGE("Document Type","Document Type"::"Blanket Order");
        PurchOrderRec.SETRANGE("Copied from Purchase Quote No.","No.");
        IF PurchOrderRec.FINDLAST THEN BEGIN
          CASE STRMENU(Text11012004, 1) OF
            0:
              ERROR('');
            1:
              BEGIN
                IF PAGE.RUNMODAL(0, PurchOrderRec) = ACTION::LookupOK THEN
                  ExistingOrderNo := PurchOrderRec."No.";
                IF (ExistingOrderNo = '') THEN
                  ERROR('');
              END;
          END;
        END ELSE BEGIN
          IF ("Quote Status" <> "Quote Status"::Selected) THEN BEGIN
            IF NOT CONFIRM(Text11012003, FALSE,FIELDCAPTION("Quote Status")) THEN
              EXIT;
          END ELSE BEGIN
            IF NOT CONFIRM(Text11012001,FALSE) THEN
              EXIT;
          END;
        END;

        IF (ExistingOrderNo = '') THEN BEGIN
          IF gAskForNoSerie THEN BEGIN
            lvPurchHeadRec.CheckAskForNoSeries("Document Type"::"Blanket Order", lvNoSeries);
            PurchQuoteToOrder.SetAskForNoSerie(lvNoSeries);
          END;
        END ELSE BEGIN
          PurchQuoteToOrder.SetOnExistingOrder(ExistingOrderNo);
        END;

        PurchQuoteToOrder.PurchQuoteToBlanketPurchOrder(PurchHeadRec);
        PurchQuoteToOrder.GetPurchOrderHeader(PurchOrderHeader);

        MESSAGE(
          Text001,
          "No.",PurchOrderHeader."No.");
      END;
    END;

    PROCEDURE SetAskForNoSerie@1210190001();
    BEGIN
      //**4PS.n
      gAskForNoSerie := TRUE;
    END;

    BEGIN
    END.
  }
}

