OBJECT Table 11020534 IMOS Codeunit Interface
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=iMOS Codeunit Interface;
               NOR=Grensesnitt for iMOS-kodenhet;
               SVE=GrÑnssnitt fîr iMOS-kodenhet];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              NOR=Lõpenummer;
                                                              SVE=Lîpnr] }
    { 10  ;   ;Action              ;Option        ;CaptionML=[ENU=Action;
                                                              NOR=Handling;
                                                              SVE=ètgÑrd];
                                                   OptionCaptionML=[ENU=Send All,Receive All,Show Outbound Document,Show Inbound Document,Send Document,Receive Document;
                                                                    NOR=Sende alt,Ta imot alt,Vis utgÜende dokument,Vis innkommende dokument,Send dokument,Ta imot dokument;
                                                                    SVE=Skicka allt,Ta emot allt,Visa utgÜende dokument,Visa ingÜende dokument,Skicka dokument,Ta emot dokument];
                                                   OptionString=Send All,Receive All,Show Outbound Document,Show Inbound Document,Send Document,Receive Document }
    { 20  ;   ;Doc. Posting Policy ;Option        ;CaptionML=[ENU=Doc. Posting Policy;
                                                              NOR=Dok. Bokfõringspolicy;
                                                              SVE=Dok.bokfîringspolicy];
                                                   OptionCaptionML=[ENU=Posting errors are not processed,Stop and show the first posting error;
                                                                    NOR=Bokfõringsfeil behandles ikke,Stopp og vis fõrste bokfõringsfeil;
                                                                    SVE=Bokfîringsfel behandlas inte,Stoppa och visa fîrsta bokfîringsfel];
                                                   OptionString=Posting errors are not processed,Stop and show the first posting error }
    { 21  ;   ;Date Sent           ;Date          ;CaptionML=[ENU=Date Sent;
                                                              NOR=Dato sendt;
                                                              SVE=Skickat datum] }
    { 22  ;   ;Time Sent           ;Time          ;CaptionML=[ENU=Time Sent;
                                                              NOR=Tid sendt;
                                                              SVE=Skickat tid] }
    { 30  ;   ;Record ID           ;RecordID      ;CaptionML=[ENU=Record ID;
                                                              NOR=Post-ID;
                                                              SVE=Post-ID] }
    { 31  ;   ;Outbound Doc. Record ID;RecordID   ;CaptionML=[ENU=Outbound Doc. Record ID;
                                                              NOR=Post-ID for UtgÜende dok.;
                                                              SVE=Post-ID fîr utgÜende dok.] }
    { 40  ;   ;XML Document        ;BLOB          ;CaptionML=[ENU=XML Document;
                                                              NOR=XML-dokument;
                                                              SVE=XML-dokument] }
    { 50  ;   ;XML Document Identifier;Text30     ;CaptionML=[ENU=XML Document Identifier;
                                                              NOR=XML-dokument-ID;
                                                              SVE=XML-dokument-ID] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE SetPartnerAgreement@1000000000(PartnerAgreement@1000000000 : Record 11020547);
    VAR
      MyRecRef@1100525000 : RecordRef;
    BEGIN
      MyRecRef.GETTABLE(PartnerAgreement);
      "Record ID" := MyRecRef.RECORDID;
    END;

    PROCEDURE GetPartnerAgreement@1000000001(VAR PartnerAgreement@1000000000 : Record 11020547) : Boolean;
    VAR
      MyRecRef@1100525000 : RecordRef;
      MyRecID@1100525001 : RecordID;
    BEGIN
      MyRecID := "Record ID";

      IF MyRecID.TABLENO <> DATABASE::"IMOS XML-Protocol" THEN
        EXIT(FALSE);

      MyRecRef := MyRecID.GETRECORD;
      MyRecRef.SETTABLE(PartnerAgreement);
      EXIT(PartnerAgreement.FIND('='));
    END;

    PROCEDURE SetOutboundDocument@1000000002(OutboundDocument@1000000000 : Record 11020543);
    VAR
      MyRecRef@1100525000 : RecordRef;
    BEGIN
      MyRecRef.GETTABLE(OutboundDocument);
      "Outbound Doc. Record ID" := MyRecRef.RECORDID;
    END;

    PROCEDURE GetOutboundDocument@1000000003(VAR OutboundDocument@1000000000 : Record 11020543) : Boolean;
    VAR
      MyRecRef@1100525000 : RecordRef;
      MyRecID@1100525001 : RecordID;
    BEGIN
      MyRecID := "Outbound Doc. Record ID";

      IF MyRecID.TABLENO <> DATABASE::"Outbound IMOS Document" THEN
        EXIT(FALSE);

      MyRecRef := MyRecID.GETRECORD;
      MyRecRef.SETTABLE(OutboundDocument);

      EXIT(OutboundDocument.FIND('='));
    END;

    PROCEDURE SetInboundDocument@1000000005(InboundDocument@1000000000 : Record 11020538);
    VAR
      MyRecRef@1100525000 : RecordRef;
    BEGIN
      MyRecRef.GETTABLE(InboundDocument);
      "Record ID" := MyRecRef.RECORDID;
    END;

    PROCEDURE GetInboundDocument@1000000004(VAR InboundDocument@1000000001 : Record 11020538) : Boolean;
    VAR
      MyRecRef@1100525000 : RecordRef;
      MyRecID@1100525001 : RecordID;
    BEGIN
      MyRecID := "Record ID";

      IF MyRecID.TABLENO <> DATABASE::"Inbound IMOS Document" THEN
        EXIT(FALSE);

      MyRecRef := MyRecID.GETRECORD;
      MyRecRef.SETTABLE(InboundDocument);

      EXIT(InboundDocument.FIND('='));
    END;

    PROCEDURE SetXMLDocument@1000000006(XMLDOMDocument@1000000001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      InStrm@1000000000 : InStream;
    BEGIN
      "XML Document".CREATEINSTREAM(InStrm);
       XMLDOMDocument.Save(InStrm);
    END;

    PROCEDURE GetXMLDocument@1000000007(VAR XMLDOMDocument@1000000000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      Outstrm@1000000001 : OutStream;
    BEGIN
      CALCFIELDS("XML Document");
      "XML Document".CREATEOUTSTREAM(Outstrm);
      IF "XML Document".HASVALUE THEN BEGIN
        XMLDOMDocument := XMLDOMDocument.XmlDocument;
        XMLDOMDocument.Load(Outstrm);
      END;
    END;

    BEGIN
    END.
  }
}

