OBJECT Report 12013588 EX Delete Inv. Purch. Orders
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF500000;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Delete Invoiced Purch. Orders;
               SVE=Ta bort fakturerad ink”psorder];
    ProcessingOnly=Yes;
    UsageCategory=ReportsAndAnalysis;
  }
  DATASET
  {
    { 4458;    ;DataItem;                    ;
               DataItemTable=Table38;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Order));
               ReqFilterHeadingML=[ENU=Purchase Order;
                                   SVE=Ink”psorder];
               OnPreDataItem=BEGIN
                               ExFlowSetup.GET;
                               ExFlowSetup.TESTFIELD("Order Applies-to",ExFlowSetup."Order Applies-to"::"Purch Order Lines");

                               Window.OPEN(Text000);
                             END;

               OnAfterGetRecord=VAR
                                  ReservePurchLine@1000 : Codeunit 99000834;
                                BEGIN
                                  Window.UPDATE(1,"No.");

                                  ItemChargeAssgntPurch.RESET;
                                  ItemChargeAssgntPurch.SETRANGE("Document Type","Document Type");
                                  ItemChargeAssgntPurch.SETRANGE("Document No.","No.");
                                  PurchLine.RESET;
                                  PurchLine.SETRANGE("Document Type","Document Type");
                                  PurchLine.SETRANGE("Document No.","No.");
                                  PurchLine.SETFILTER(Quantity, '>%1', 0);
                                  PurchLine.SETRANGE("Fully Matched", TRUE);
                                  IF PurchLine.FIND('-') THEN BEGIN
                                    PurchLine.SETRANGE("Fully Matched", FALSE);
                                    IF NOT PurchLine.FIND('-') THEN BEGIN
                                      PurchLine.LOCKTABLE;

                                      PurchLine.RESET;
                                      PurchLine.SETRANGE("Document Type","Document Type");
                                      PurchLine.SETRANGE("Document No.","No.");
                                      IF PurchLine.FINDSET(TRUE) THEN BEGIN
                                        REPEAT
                                          IF PurchLine.Type = PurchLine.Type::"Charge (Item)" THEN BEGIN
                                            ItemChargeAssgntPurch.SETRANGE("Document Line No.",PurchLine."Line No.");
                                            ItemChargeAssgntPurch.DELETEALL;
                                          END;
                                          IF PurchLine.HASLINKS THEN
                                            PurchLine.DELETELINKS;

                                          PurchLine.DELETE;
                                        UNTIL PurchLine.NEXT = 0;

                                        ExFlowNAVVerMgt.DeleteHeader("Purchase Header",PurchRcptHeader,PurchInvHeader,PurchCrMemoHeader,ReturnShptHeader,PrepmtPurchInvHeader,PrepmtPurchCrMemoHeader);

                                        ReservePurchLine.DeleteInvoiceSpecFromHeader("Purchase Header");

                                        PurchCommentLine.SETRANGE("Document Type","Document Type");
                                        PurchCommentLine.SETRANGE("No.","No.");
                                        PurchCommentLine.DELETEALL;

                                        WhseRequest.SETRANGE("Source Type",DATABASE::"Purchase Line");
                                        WhseRequest.SETRANGE("Source Subtype","Document Type");
                                        WhseRequest.SETRANGE("Source No.","No.");
                                        WhseRequest.DELETEALL(TRUE);

                                        ExFlowSEMgt.PurchHeaderDeleteInw("Purchase Header");

                                        IF HASLINKS THEN
                                          DELETELINKS;

                                        DELETE;
                                        COMMIT;
                                      END;
                                    END;
                                  END;
                                END;

               ReqFilterFields=No.,Buy-from Vendor No.,Pay-to Vendor No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Processing purch. orders #1##########;SVE=Behandlar ink”psorder    #1##########';
      PurchLine@1001 : Record 39;
      PurchRcptHeader@1011 : Record 120;
      PurchInvHeader@1010 : Record 122;
      PurchCrMemoHeader@1009 : Record 124;
      ReturnShptHeader@1008 : Record 6650;
      PrepmtPurchInvHeader@1014 : Record 122;
      PrepmtPurchCrMemoHeader@1013 : Record 124;
      PurchCommentLine@1002 : Record 43;
      WhseRequest@1007 : Record 5765;
      ItemChargeAssgntPurch@1100285001 : Record 5805;
      ExFlowSetup@1100285000 : Record 12013601;
      PostPurchDelete@1100285003 : Codeunit 364;
      ExFlowSEMgt@1100285002 : Codeunit 12013598;
      ExFlowNAVVerMgt@1100285004 : Codeunit 12057146;
      Window@1004 : Dialog;

    BEGIN
    {
      Used when connecting a purchase invoice against an purchase order and not against the purchase receipt
    }
    END.
  }
  RDLDATA
  {
  }
}

