OBJECT Page 6086321 Mileage Reimbursement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.3.00.04;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Kilometerleistung-VergÅtung;
               ENU=Mileage Reimbursement;
               NLD=Kilometrage terugbetaling];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table6086001;
    DataCaptionExpr='';
    UsageCategory=Tasks;
    OnOpenPage=VAR
                 UserResp@1160040000 : Record 6086379;
               BEGIN
                 Period := STRSUBSTNO('..%1',WORKDATE);
                 EMNavVersionMgt.MakePeriodFilter(Period);

                 FILTERGROUP(2);
                 IF UserResp.GetResponsibilityFilter <> '' THEN
                   SETFILTER("User ID",UserResp.GetResponsibilityFilter);
                 FILTERGROUP(0);

                 PostingType := PostingType::"Ready to Reimburse";

                 RateId.FINDFIRST;
                 RecRef.GETTABLE(RateId);

                 SetColumns;
                 UpdateMatrixSubform;
               END;

    ActionList=ACTIONS
    {
      { 1160040008;  ;ActionContainer;
                      Name=ActionItems;
                      CaptionML=;
                      ActionContainerType=ActionItems }
      { 1160040013;1 ;ActionGroup;
                      Name=Function;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unction;
                                 NLD=Functie;
                                 SVE=F&unktion] }
      { 1160040001;2 ;Action    ;
                      Name=Reimburse;
                      ShortCutKey=F9;
                      CaptionML=[DEU=VergÅten;
                                 ENU=Reimburse;
                                 NLD=Terugbetalen];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Post;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Mileage@1160040000 : Record 6086338;
                               BEGIN
                                 Mileage.SETCURRENTKEY("Continia User ID","Registration Date",Posted,Reimbursed,"Reimbursement Method");
                                 Mileage.SETRANGE(Posted,TRUE);
                                 Mileage.SETRANGE(Reimbursed,FALSE);
                                 Mileage.SETFILTER("Reimbursement Method",'<>%1',Mileage."Reimbursement Method"::"Vendor (on User)");
                                 IF GETFILTER("User ID") <> '' THEN
                                   COPYFILTER("User ID",Mileage."Continia User ID");
                                 IF Period <> '' THEN
                                   Mileage.SETFILTER("Registration Date",Period);

                                 CODEUNIT.RUN(CODEUNIT::"Mileage-Reimburse Batch",Mileage);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1160040000;;Container;
                Name=ContentArea;
                ContainerType=ContentArea }

    { 1160040010;1;Group  ;
                Name=Group;
                CaptionML=[DEU=Allgemein;
                           ENU=General;
                           NLD=Algemeen;
                           SVE=AllmÑnt];
                GroupType=Group }

    { 1160040009;2;Field  ;
                Name=Period;
                CaptionML=[DEU=Datumsfilter;
                           ENU=Date Filter;
                           NLD=Datumfilter;
                           SVE=Datumfilter];
                SourceExpr=Period;
                OnValidate=BEGIN
                             EMNavVersionMgt.MakePeriodFilter(Period);
                             UpdateMatrixSubform;
                           END;
                            }

    { 1160040014;2;Field  ;
                Name=QtyType;
                CaptionML=[DEU=Anzeigen als;
                           ENU=View as;
                           NLD=View als;
                           SVE=Visa som];
                OptionCaptionML=[DEU=Abstand,Betrag;
                                 ENU=Distance,Amount;
                                 NLD=Afstand,Bedrag];
                SourceExpr=QtyType;
                OnValidate=BEGIN
                             UpdateMatrixSubform;
                           END;
                            }

    { 1160040006;2;Field  ;
                Name=PostingType;
                CaptionML=[DEU=Anzeigen nach;
                           ENU=View by;
                           NLD=View door;
                           SVE=Visa per];
                OptionCaptionML=[DEU=Warten auf Buchung, Bereit fÅr VergÅtung, Gebucht und vergÅtet, Alles;
                                 ENU=Awaiting Posting,Ready to Reimburse,Posted and Reimbursed,Everything;
                                 NLD=Wachten op boeken,Gereed voor terugbetaling,Geboekt en terugbetaald,Alles];
                SourceExpr=PostingType;
                OnValidate=BEGIN
                             UpdateMatrixSubform;
                           END;
                            }

    { 1160040005;1;Part   ;
                Name=MatrixForm;
                PagePartID=Page6086322;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      MatrixRecords@1160040003 : ARRAY [32] OF Record 6086366;
      RateId@1160040018 : Record 6086366;
      EMNavVersionMgt@1160040000 : Codeunit 6086319;
      RecRef@1160040012 : RecordRef;
      ColumnSet@1160040010 : Text[1024];
      MatrixColumnCaptions@1160040011 : ARRAY [32] OF Text[1024];
      Period@1160040002 : Text[30];
      PKFirstRecInCurrSet@1160040008 : Text[100];
      CurrSetLength@1160040007 : Integer;
      PostingType@1160040005 : 'Awaiting Posting,Ready to Reimburse,Posted and Reimbursed,Everything';
      QtyType@1160040006 : 'Distance,Amount';

    LOCAL PROCEDURE SetColumns@11();
    VAR
      MatrixMgt@1000 : Codeunit 9200;
      Wanted@1160040000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn';
    BEGIN
      MatrixMgt.GenerateMatrixData(RecRef,Wanted::Initial,12,1,PKFirstRecInCurrSet,MatrixColumnCaptions,ColumnSet,CurrSetLength);
    END;

    LOCAL PROCEDURE UpdateMatrixSubform@1102601000();
    BEGIN
      CurrPage.MatrixForm.PAGE.Load(MatrixColumnCaptions,MatrixRecords,QtyType,PostingType,Period);
    END;

    BEGIN
    END.
  }
}

