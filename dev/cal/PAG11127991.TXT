OBJECT Page 11127991 Symbrio Item Buffer Check
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Check Symbrio Item Buffer content;
               SVE=Kontrollera inneh†llet i Symbrio Artikelbuffert];
    SourceTable=Table11127976;
    PageType=NavigatePage;
    OnOpenPage=BEGIN
                 enableDeleteRows := FALSE;
               END;

    ActionList=ACTIONS
    {
      { 1100285003;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100285004;1 ;Action    ;
                      Name=RunCheck;
                      CaptionML=[ENU=Run Check;
                                 NOR=Kj›r kontroll;
                                 SVE=K”r kontroll];
                      Image=Absence;
                      OnAction=BEGIN
                                 RunCheck;
                               END;
                                }
      { 1100285100;1 ;Action    ;
                      Name=DeleteRows;
                      CaptionML=[ENU=Delete incorrect articles;
                                 NOR=Slett ukorrekte artikler;
                                 SVE=Radera felaktiga artiklar];
                      Enabled=enableDeleteRows;
                      Image=DeleteExpiredComponents;
                      OnAction=BEGIN
                                 DeleteRows;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100285000;0;Container;
                ContainerType=ContentArea }

    { 1100285001;1;Group  ;
                Name=CostObjectGroup;
                CaptionML=[ENU=Cost Object;
                           NOR=Kostnadsobjekt;
                           SVE=Kostnadsobjekt];
                GroupType=GridLayout }

    { 1100285005;2;Field  ;
                CaptionML=[ENU=Result;
                           NOR=Resultat;
                           SVE=Resultat];
                SourceExpr=gvCheckCostObjectResult;
                Enabled=TRUE;
                Editable=FALSE;
                MultiLine=Yes;
                Style=StrongAccent;
                StyleExpr=TRUE }

  }
  CODE
  {
    VAR
      gvCheckCostObjectResult@1100285001 : Text;
      gvCurrentCostObject@1100285009 : Code[20];
      gvMissingCostObjects@1100285004 : Text;
      gvCR@1100285002 : Char;
      gvLF@1100285003 : Char;
      gvDimensionValueRec@1100285005 : Record 349;
      gvBlankCostObject@1100285006 : Boolean;
      Text001@1100285000 : TextConst 'ENU=There are lines with missing Cost Objects;NOR=Det finnes linjer med manglende kostnadsobjekt;SVE=Det finns rader som saknar kostnadsobjekt';
      Text002@1100285007 : TextConst 'ENU=The following Cost Objects are incorrect:;NOR=F›lgende kostnadsobjekt er feil:;SVE=F”ljande kostnadsobjekt „r felaktiga:';
      Text003@1100285008 : TextConst 'ENU=The Cost Objects that has been entered are correct.;NOR=De kostnadsobjekter som har blitt skrevet inn er korrekte.;SVE=De kostnadsobjekt som har angivits „r korrekta.';
      gvErrorsFound@1100285101 : Text;
      ItemSetup@1100285102 : Record 11012300;
      ArticleNoErrLen@1100285103 : Text;
      ArticleNoErrChar@1100285104 : Text;
      Text004@1100285105 : TextConst 'ENU=The following article exceeds no of characters and will not be imported:;NOR=Den f›lgende artikkelen skrider antal tegn, og vil ikke bli importert:;SVE=F”ljande artikelnummer ”verskrider antal tecken och kommer inte att kunna importeras:';
      Text005@1100285106 : TextConst 'ENU=The following article contains illegal characters and will not be imported:;NOR=Den f›lgende artikkelen inneholder ulovlige tegn, og vil ikke bli importert:;SVE=F”ljande artikelnummer inneh†ller otill†tna tecken och kommer inte att kunna importeras:';
      Text006@1100285110 : TextConst 'ENU=You want all faulty items should be deleted?;NOR=Du vil at alle defekte artikler b›r slettes?;SVE=Vill du att alla felaktiga artiklar skall raderas?';
      ErrLen@1100285100 : TextConst 'ENU=%1 %2 exceeds %3 chars;NOR=%1 %2 overskrider %3 tegn;SVE=%1 %2 ”verstiger %3 tecken';
      ErrIllegalChar@1100285107 : TextConst 'ENU=%1 %2 contain illegal chars;NOR=%1 %2 inneholder ulovlige tegn;SVE=%1 %2 inneh†ller otill†tna tecken';
      tempSymbrioItemBuffer@1100285108 : TEMPORARY Record 11127976;
      enableDeleteRows@1100285109 : Boolean INDATASET;

    PROCEDURE RunCheck@1100285100();
    VAR
      SymbrioItemBuffer@1100285101 : Record 11127976;
      TradeItemImportLog@1100285100 : Record 11012333;
    BEGIN
      gvCR := 13;
      gvLF := 10;

      gvDimensionValueRec.SETRANGE("Global Dimension No.", 2);
      gvCheckCostObjectResult := '';
      gvMissingCostObjects := '';
      gvBlankCostObject := FALSE;
      gvCurrentCostObject := 'ZZZZZZZZ';
      //>>RFC158
      ArticleNoErrLen := '';
      ArticleNoErrChar := '';
      tempSymbrioItemBuffer.RESET;
      tempSymbrioItemBuffer.DELETEALL(FALSE);
      //<<RFC158

      Rec.SETCURRENTKEY(AccountRef1);

      IF Rec.FINDSET(FALSE) THEN BEGIN
        REPEAT
      //>>RFC158
          SymbrioItemBuffer.GET("Entry No.");
          IF SymbrioItemBuffer."Error Message" <> '' THEN BEGIN
            SymbrioItemBuffer."Error Message" := '';
            SymbrioItemBuffer.MODIFY(FALSE);
            "Error Message" := '';
          END;
      //<<RFC158

          IF gvCurrentCostObject <> AccountRef1 THEN BEGIN
            gvCurrentCostObject := COPYSTR(AccountRef1,1,MAXSTRLEN(gvCurrentCostObject));
            //gvCurrentCostObject := AccountRef1;

            IF gvCurrentCostObject = '' THEN BEGIN
              gvBlankCostObject := TRUE;
            END ELSE BEGIN
              gvDimensionValueRec.SETFILTER(Code, gvCurrentCostObject);
              IF NOT gvDimensionValueRec.FINDFIRST THEN BEGIN
                IF STRPOS(gvMissingCostObjects, gvCurrentCostObject) < 1 THEN
                  gvMissingCostObjects := gvMissingCostObjects + gvCurrentCostObject + FORMAT(gvCR) + FORMAT(gvLF);
              END;
            END;
          END;

      //>>RFC158
          IF STRLEN(ArticleNo) > MAXSTRLEN(TradeItemImportLog."Item Code") THEN BEGIN //20
            "Error Message" +=  STRSUBSTNO(ErrLen,FIELDCAPTION(ArticleNo),ArticleNo,MAXSTRLEN(TradeItemImportLog."Item Code")) + FORMAT(gvCR) + FORMAT(gvLF);
            ArticleNoErrLen +=  ArticleNo + FORMAT(gvCR) + FORMAT(gvLF);
          END;
          IF NOT ItemSetup.LegalCharacter(COPYSTR(ArticleNo,1,30)) THEN BEGIN
            "Error Message" +=  STRSUBSTNO(ErrIllegalChar,FIELDCAPTION(ArticleNo),ArticleNo) + FORMAT(gvCR) + FORMAT(gvLF);
            ArticleNoErrChar +=  ArticleNo + FORMAT(gvCR) + FORMAT(gvLF);
          END;

          IF STRLEN(BranchNo) > MAXSTRLEN(TradeItemImportLog."GTIN Code (Item)") THEN BEGIN //20
            "Error Message" +=  STRSUBSTNO(ErrLen,FIELDCAPTION(BranchNo),BranchNo,MAXSTRLEN(TradeItemImportLog."GTIN Code (Item)")) + FORMAT(gvCR) + FORMAT(gvLF);
            ArticleNoErrLen +=  ArticleNo + FORMAT(gvCR) + FORMAT(gvLF);
          END;

          IF STRLEN(RebateGroupNo) > MAXSTRLEN(TradeItemImportLog."Discount Group Code") THEN BEGIN //35
            "Error Message" +=  STRSUBSTNO(ErrLen,FIELDCAPTION(RebateGroupNo),RebateGroupNo,MAXSTRLEN(TradeItemImportLog."Discount Group Code")) + FORMAT(gvCR) + FORMAT(gvLF);
            ArticleNoErrLen +=  ArticleNo + FORMAT(gvCR) + FORMAT(gvLF);
          END;

          IF STRLEN(AccountRef1) > MAXSTRLEN(TradeItemImportLog."Cost Object Code") THEN BEGIN //20
            "Error Message" +=  STRSUBSTNO(ErrLen,FIELDCAPTION(AccountRef1),AccountRef1,MAXSTRLEN(TradeItemImportLog."Cost Object Code")) + FORMAT(gvCR) + FORMAT(gvLF);
            ArticleNoErrLen +=  ArticleNo + FORMAT(gvCR) + FORMAT(gvLF);
          END;

          IF STRLEN("Price List Code") > MAXSTRLEN(TradeItemImportLog."Price List Code") THEN BEGIN //10
            "Error Message" +=  STRSUBSTNO(ErrLen,FIELDCAPTION("Price List Code"),"Price List Code",MAXSTRLEN(TradeItemImportLog."Price List Code")) + FORMAT(gvCR) + FORMAT(gvLF);
            ArticleNoErrLen +=  ArticleNo + FORMAT(gvCR) + FORMAT(gvLF);
          END;


          IF "Error Message" <> '' THEN BEGIN
            SymbrioItemBuffer.GET("Entry No.");
            SymbrioItemBuffer."Error Message" := "Error Message";
            SymbrioItemBuffer.MODIFY(FALSE);
            "Error Message" := '';
            IF NOT tempSymbrioItemBuffer.GET("Entry No.") THEN BEGIN
              tempSymbrioItemBuffer."Entry No." := "Entry No.";
              tempSymbrioItemBuffer.INSERT(FALSE);
              IF NOT enableDeleteRows THEN
                enableDeleteRows := TRUE;
            END;
          END;
      //<<RFC158

        UNTIL Rec.NEXT = 0;
      END;

      IF gvBlankCostObject THEN
        gvCheckCostObjectResult := Text001 + FORMAT(gvCR) + FORMAT(gvLF);

      IF gvMissingCostObjects <> '' THEN
        gvCheckCostObjectResult := gvCheckCostObjectResult + Text002 + FORMAT(gvCR) + FORMAT(gvLF) + gvMissingCostObjects
      ELSE
        gvCheckCostObjectResult := gvCheckCostObjectResult + Text003 + FORMAT(gvCR) + FORMAT(gvLF) + gvMissingCostObjects;

      //>>RFC158
      IF (gvCheckCostObjectResult <> '') AND (ArticleNoErrLen <> '') THEN
        gvCheckCostObjectResult += FORMAT(gvCR) + FORMAT(gvLF);
      IF ArticleNoErrLen <> '' THEN
        gvCheckCostObjectResult += Text004 + FORMAT(gvCR) + FORMAT(gvLF) + ArticleNoErrLen;

      IF (gvCheckCostObjectResult <> '') AND (ArticleNoErrChar <> '') THEN
        gvCheckCostObjectResult += FORMAT(gvCR) + FORMAT(gvLF);
      IF ArticleNoErrChar <> '' THEN
        gvCheckCostObjectResult += Text005 + FORMAT(gvCR) + FORMAT(gvLF) + ArticleNoErrChar;
      //<<RFC158
    END;

    PROCEDURE DeleteRows@1100285102();
    VAR
      lvSymbrioItemBuffer@1100285100 : Record 11127976;
    BEGIN
      //RFC158
      IF tempSymbrioItemBuffer.FINDSET THEN
        IF CONFIRM(Text006) THEN
          REPEAT
            IF lvSymbrioItemBuffer.GET(tempSymbrioItemBuffer."Entry No.") THEN
              lvSymbrioItemBuffer.DELETE;
          UNTIL tempSymbrioItemBuffer.NEXT=0;
      enableDeleteRows :=FALSE;
      gvCheckCostObjectResult := '';
    END;

    BEGIN
    {
      150927 ITERO.AC SYM099 New page used to check contents in Symbrio Item Buffer
      170203 ITERO.DL RFC158 extend check on ArticleNo
    }
    END.
  }
}

