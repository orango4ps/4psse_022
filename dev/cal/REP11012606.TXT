OBJECT Report 11012606 Copy Empl. Plan to Hour Acc.-R
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Planung in Stundenerfassung kopieren;
               ENU=Copy Employee Plan to Hour Acc.;
               NLD=Planning naar urenverantw. kopiâren;
               NOR=Kopier ansattplan til Utgjorte timer;
               SVE=Kopiera anstÑllningsplan till ack. timmar];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  ValidateWeek();
                  Window.OPEN(Text000);
                END;

    OnPostReport=BEGIN
                   Window.CLOSE;
                 END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 7528;    ;DataItem;                    ;
               DataItemTable=Table5200;
               DataItemTableView=SORTING(No.);
               OnAfterGetRecord=BEGIN
                                  FirstOfEmpl := TRUE;
                                  Window.UPDATE(1, "No.");
                                END;

               ReqFilterFields=No. }

    { 5442;1   ;DataItem;                    ;
               DataItemTable=Table11012623;
               DataItemTableView=SORTING(Vendor No.,Employee No.,Date,Time From,Line No.);
               OnPreDataItem=BEGIN
                               SETRANGE(Date, DateFrom, DateTo);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF FirstOfEmpl THEN BEGIN
                                    FirstOfEmpl := FALSE;
                                    IF NOT HourAccRec.GET(YearNo, WeekNo, "Employee No.") THEN BEGIN
                                      HourAccRec.INIT;
                                      HourAccRec."Employee No." := '';
                                      HourAccRec.Year := YearNo;
                                      HourAccRec.VALIDATE(Week, WeekNo);
                                      HourAccRec.VALIDATE("Employee No.", "Employee No.");
                                      HourAccRec.INSERT(TRUE);
                                    END;
                                    HourAccLineRec.RESET;
                                    HourAccLineRec.SETRANGE(Year, YearNo);
                                    HourAccLineRec.SETRANGE(Week, WeekNo);
                                    HourAccLineRec.SETRANGE("Employee No.", "Employee No.");
                                    IF HourAccLineRec.FIND('-') THEN
                                      NextLineNo := HourAccLineRec."Line No.";
                                    NextLineNo := NextLineNo + 10000;
                                    TmpLineNoRec.RESET;
                                    TmpLineNoRec.DELETEALL;
                                    TmpLineNoRec.SETCURRENTKEY("Request No.", "Request Line No.", "Assigned Employee Line No.");
                                  END;

                                  HourAccLineRec.INIT;
                                  HourAccLineRec.Year := YearNo;
                                  HourAccLineRec.Week := WeekNo;
                                  HourAccLineRec."Employee No." := "Employee No.";

                                  TmpLineNoRec.SETRANGE("Request No.", "Request No.");
                                  TmpLineNoRec.SETRANGE("Request Line No.", "Request Line No.");
                                  TmpLineNoRec.SETRANGE("Assigned Employee Line No.", "Assigned Employee Line No.");
                                  IF TmpLineNoRec.FIND('-') THEN
                                    HourAccLineRec.GET(YearNo, WeekNo, "Employee No.", TmpLineNoRec."Line No.")
                                  ELSE BEGIN
                                    HourAccLineRec.INIT;
                                    HourAccLineRec.Year := YearNo;
                                    HourAccLineRec.Week := WeekNo;
                                    HourAccLineRec."Employee No." := "Employee No.";
                                    HourAccLineRec."Line No." := NextLineNo;
                                    NextLineNo := NextLineNo + 10000;
                                    HourAccLineRec.Type := HourAccLineRec.Type::Project;
                                    HourAccLineRec.VALIDATE("Project No.", "Project No.");
                                    HourAccLineRec.VALIDATE(Element, Element);
                                    HourAccLineRec.VALIDATE("Cost Component", "Cost Component");
                                    HourAccLineRec.INSERT(TRUE);
                                    //
                                    TmpLineNoRec."Request No." := "Request No.";
                                    TmpLineNoRec."Request Line No." := "Request Line No.";
                                    TmpLineNoRec."Assigned Employee Line No." := "Assigned Employee Line No.";
                                    TmpLineNoRec."Line No." := HourAccLineRec."Line No.";
                                    TmpLineNoRec.INSERT;
                                  END;

                                  CASE DATE2DWY(Date, 1) OF  //* Day No.
                                    1:
                                      BEGIN
                                        HourAccLineRec.VALIDATE("Monday From", "Time From");
                                        HourAccLineRec.VALIDATE("Monday To", "Time To");
                                      END;
                                    2:
                                      BEGIN
                                        HourAccLineRec.VALIDATE("Tuesday From", "Time From");
                                        HourAccLineRec.VALIDATE("Tuesday To", "Time To");
                                      END;
                                    3:
                                      BEGIN
                                        HourAccLineRec.VALIDATE("Wednesday From", "Time From");
                                        HourAccLineRec.VALIDATE("Wednesday To", "Time To");
                                      END;
                                    4:
                                      BEGIN
                                        HourAccLineRec.VALIDATE("Thursday From", "Time From");
                                        HourAccLineRec.VALIDATE("Thursday To", "Time To");
                                      END;
                                    5:
                                      BEGIN
                                        HourAccLineRec.VALIDATE("Friday From", "Time From");
                                        HourAccLineRec.VALIDATE("Friday To", "Time To");
                                      END;
                                    6:
                                      BEGIN
                                        HourAccLineRec.VALIDATE("Saturday From", "Time From");
                                        HourAccLineRec.VALIDATE("Saturday To", "Time To");
                                      END;
                                    7:
                                      BEGIN
                                        HourAccLineRec.VALIDATE("Sunday From", "Time From");
                                        HourAccLineRec.VALIDATE("Sunday To", "Time To");
                                      END;
                                  END;
                                  HourAccLineRec.MODIFY(TRUE);
                                END;

               DataItemLink=Employee No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnInit=BEGIN
               WeekRec.RESET;
               WeekRec.SETCURRENTKEY("Starting Date");
               WeekRec.SETRANGE("Starting Date", 0D, TODAY - 7);
               IF WeekRec.FIND('+') THEN BEGIN
                 YearNo := WeekRec.Year;
                 WeekNo := WeekRec.Week;
               END;
             END;

    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  CaptionML=[DEU=Jahr;
                             ENU=Year;
                             NLD=Jaar;
                             NOR=èr;
                             SVE=èr];
                  SourceExpr=YearNo }

      { 1100525003;2;Field  ;
                  CaptionML=[DEU=Woche;
                             ENU=Week;
                             NLD=Week;
                             NOR=Uke;
                             SVE=Vecka];
                  SourceExpr=WeekNo;
                  OnValidate=BEGIN
                               ValidateWeek();
                             END;

                  OnLookup=BEGIN
                             WeekRec.RESET;
                             WeekRec.Year := YearNo;
                             WeekRec.Week := WeekNo;
                             IF PAGE.RUNMODAL(PAGE::"UAR Week Table", WeekRec) = ACTION::LookupOK THEN BEGIN
                               WeekNo := WeekRec.Week;
                               ValidateWeek();
                             END;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      WeekRec@1210190001 : Record 11012601;
      HourAccRec@1210190000 : Record 11012609;
      HourAccLineRec@1210190006 : Record 11012610;
      TmpLineNoRec@1210190012 : TEMPORARY Record 11012623;
      Window@1210190010 : Dialog;
      DateFrom@1210190004 : Date;
      DateTo@1210190005 : Date;
      FirstOfEmpl@1210190008 : Boolean;
      YearNo@1210190003 : Integer;
      WeekNo@1210190002 : Integer;
      NextLineNo@1210190009 : Integer;
      Text000@1210190011 : TextConst 'DEU=Mitarbeiter #1##########;ENU=Employee #1##########;NLD=Werknemer #1##########;SVE=AnstÑlld #1##########';

    PROCEDURE ValidateWeek@1210190000();
    BEGIN
      WeekRec.GET(YearNo, WeekNo);
      DateFrom := WeekRec."Starting Date";
      DateTo := DateFrom + 6;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

