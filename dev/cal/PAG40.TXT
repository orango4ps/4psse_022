OBJECT Page 40 Item Journal
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03,4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Journals;
               NOR=Varekladder;
               SVE=Artikeljournaler];
    ApplicationArea=#Basic,#Suite;
    SaveValues=Yes;
    SourceTable=Table83;
    DataCaptionExpr=DataCaption;
    DelayedInsert=Yes;
    PageType=Worksheet;
    UsageCategory=Tasks;
    AdditionalSearchTermsML=[ENU=increase inventory,decrease inventory,adjust inventory;
                             NOR=lagerõkning,lagerreduksjon,lagerjustering;
                             SVE=îka lager,minska lager,justera lager];
    AutoSplitKey=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Page,Post/Print,Line,Item;
                                NOR=Ny,Prosess,Rapport,Side,Bokfõr/skriv ut,Linje,Vare;
                                SVE=Ny,Process,Rapport,Sida,Bokfîr/skriv ut,Rad,Artikel];
    OnOpenPage=VAR
                 ServerConfigSettingHandler@1001 : Codeunit 6723;
                 JnlSelected@1000 : Boolean;
                 FPSLicenseManagement@1100527400 : Codeunit 11229289;
               BEGIN
                 IsSaasExcelAddinEnabled := ServerConfigSettingHandler.GetIsSaasExcelAddinEnabled;
                 IF ClientTypeManagement.GetCurrentClientType = CLIENTTYPE::ODataV4 THEN
                   EXIT;

                 SetDimensionsVisibility;

                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 IF IsOpenedFromBatch THEN BEGIN
                   CurrentJnlBatchName := "Journal Batch Name";
                   ItemJnlMgt.OpenJnl(CurrentJnlBatchName,Rec);
                   EXIT;
                 END;

                 IF NOT TemplAndBatchSelectionSet THEN BEGIN  //**4PS.n
                   ItemJnlMgt.TemplateSelection(PAGE::"Item Journal",0,FALSE,Rec,JnlSelected);
                   IF NOT JnlSelected THEN
                     ERROR('');
                   ItemJnlMgt.OpenJnl(CurrentJnlBatchName,Rec);
                 END;  //**4PS.n

                 //**4PS.sn
                 IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(PlantSetup) THEN BEGIN
                   ToPlantInventoryEditable := FALSE;
                   ToPlantLocationEditable := FALSE;
                   ToPlantTypeEditable := FALSE;
                 END ELSE BEGIN
                   ToPlantInventoryEditable := TRUE;
                   ToPlantLocationEditable := TRUE;
                   ToPlantTypeEditable := TRUE;
                 END;

                 ProjSetup.GET;

                 InvtSetup.GET;
                 ProjectStockEditable := InvtSetup.JobInventoryByStockRelease('');
                 UnitCostEditable := InvtSetup."Cost Price Item Jnl. Editable";
                 //**4PS.en
               END;

    OnAfterGetRecord=BEGIN
                       DetermineInventory(Rec);  //**4PS.n
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  xRec."Entry Type" := "Entry Type"::Sale;  //**4PS.n (adjust initial value only for this form)
                  SetUpNewLine(xRec);
                  CLEAR(ShortcutDimCode);
                  DetermineInventory(Rec);  //**4PS.n
                  "Origin Type Line" := "Origin Type Line"::ItemJnlManual;  //**4PS.n
                END;

    OnInsertRecord=BEGIN
                     //** 4PS.so
                     //IF "Entry Type" > "Entry Type"::"Negative Adjmt." THEN
                     //  ERROR(Text000,"Entry Type");
                     //** 4PS.eo
                   END;

    OnDeleteRecord=VAR
                     ReserveItemJnlLine@1000 : Codeunit 99000835;
                   BEGIN
                     COMMIT;
                     IF NOT ReserveItemJnlLine.DeleteLineConfirm(Rec) THEN
                       EXIT(FALSE);
                     ReserveItemJnlLine.DeleteLine(Rec);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           ItemJnlMgt.GetItem("Item No.",ItemDescription);
                           GetOtherDescriptions;  //**4PS.n
                           QuantityToPostEditable := (NOT ItemJournalLineIsSplitLine(Rec));   //**4PS.n
                           ProjectStockEditable := InvtSetup.JobInventoryByStockRelease("Job No.");
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 81      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 NOR=&Linje;
                                 SVE=Ra&d];
                      Image=Line }
      { 82      ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 NOR=Dimensjoner;
                                 SVE=Dimensioner];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 NOR=Vis eller rediger dimensjoner, for eksempel omrÜde, prosjekt eller avdeling, som du kan tilordne til salgs- og kjõpsdokumenter for Ü distribuere kostnader og analysere transaksjonshistorikk.;
                                 SVE=Visa eller redigera mÜtt, till exempel omrÜde, projekt eller avdelning, som du kan tilldela till fîrsÑljnings- och inkîpsdokument fîr att fîrdela kostnader och analysera transaktionshistorik.];
                      ApplicationArea=#Dimensions;
                      Promoted=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowDimensions;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 6500    ;2   ;Action    ;
                      Name=ItemTrackingLines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 NOR=Vare&sporingslinjer;
                                 SVE=&ArtikelspÜrningsrader];
                      ToolTipML=[ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                                 NOR=Vis eller rediger serienumre og partinumre som er tilordnet til varen i dokumentet eller pÜ kladdelinjen.;
                                 SVE=Visa eller redigera serie- och partinummer som har tilldelats artikeln pÜ dokument- eller journalraden.];
                      ApplicationArea=#ItemTracking;
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=ItemTrackingLines;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 OpenItemTrackingLines(FALSE);
                               END;
                                }
      { 69      ;2   ;Action    ;
                      CaptionML=[ENU=Bin Contents;
                                 NOR=Hylleinnhold;
                                 SVE=LagerplatsinnehÜll];
                      ToolTipML=[ENU=View items in the bin if the selected line contains a bin code.;
                                 NOR=Vis varer i hyllen hvis den valgte linjen inneholder en hyllekode.;
                                 SVE=Visa artiklar pÜ lagerplatsen om den valda raden innehÜller en lagerplatskod.];
                      ApplicationArea=#Warehouse;
                      RunObject=Page 7305;
                      RunPageView=SORTING(Location Code,Item No.,Variant Code);
                      RunPageLink=Location Code=FIELD(Location Code),
                                  Item No.=FIELD(Item No.),
                                  Variant Code=FIELD(Variant Code);
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=BinContent;
                      PromotedCategory=Category6 }
      { 1210190026;2 ;Action    ;
                      CaptionML=[ENU=&Text Block;
                                 SVE=&Textblock];
                      Image=Text;
                      OnAction=BEGIN
                                 //**4PS
                                 EditText();
                               END;
                                }
      { 83      ;2   ;Action    ;
                      CaptionML=[ENU=&Recalculate Unit Amount;
                                 NOR=&Beregn enhetsbelõp pÜ nytt;
                                 SVE=Ombe&rÑkna a-pris];
                      ToolTipML=[ENU=Reset the unit amount to the amount specified on the item card.;
                                 NOR=Tilbakestill enhetsbelõpet til belõpet som er angitt pÜ varekortet.;
                                 SVE=èterstÑll enhetsbeloppet till det belopp som anges pÜ artikelkortet.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=UpdateUnitCost;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 RecalculateUnitAmount;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 1100528000;2 ;Action    ;
                      CaptionML=ENU=Recalculate Unit Amount selected lines;
                      Visible=FALSE;
                      Image=UpdateUnitCost;
                      OnAction=VAR
                                 ItemJournalLine@1100528000 : Record 83;
                               BEGIN
                                 //**4PS
                                 CurrPage.SETSELECTIONFILTER(ItemJournalLine);
                                 IF ItemJournalLine.FINDSET THEN
                                   REPEAT
                                     ItemJournalLine.RecalculateUnitAmount;
                                     ItemJournalLine.MODIFY;
                                   UNTIL ItemJournalLine.NEXT = 0;

                                 CurrPage.UPDATE;
                               END;
                                }
      { 29      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Item;
                                 NOR=V&are;
                                 SVE=Art&ikel];
                      Image=Item }
      { 30      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 NOR=Kort;
                                 SVE=Kort];
                      ToolTipML=[ENU=View or change detailed information about the record on the document or journal line.;
                                 NOR=Vis eller endre detaljert informasjon om posten i dokumentet eller pÜ kladdelinjen.;
                                 SVE=Visa eller Ñndra detaljerad information om posten pÜ dokument- eller journalraden.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 30;
                      RunPageLink=No.=FIELD(Item No.);
                      Promoted=Yes;
                      Image=EditLines;
                      PromotedCategory=Category7 }
      { 31      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 NOR=Post&er;
                                 SVE=&Transaktioner];
                      ToolTipML=[ENU=View the history of transactions that have been posted for the selected record.;
                                 NOR=Vis transaksjonshistorikken som har blitt bokfõrt for den valgte posten.;
                                 SVE=Visa transaktionshistoriken som har bokfîrts fîr den valda posten.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 38;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(Item No.);
                      Promoted=Yes;
                      Image=ItemLedger;
                      PromotedCategory=Category7 }
      { 77      ;2   ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 NOR=Varetilgjengelighet per;
                                 SVE=Artikeldisp. per];
                      Image=ItemAvailability }
      { 3       ;3   ;Action    ;
                      CaptionML=[ENU=Event;
                                 NOR=Hendelse;
                                 SVE=UtstÑllning];
                      ToolTipML=[ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                                 NOR=Vis hvordan den aktuelle og forventede disponible beholdningen for en vare vil utvikle seg over tid i henhold til tilbud og etterspõrselhendelser.;
                                 SVE=Visa hur aktuell och planerad lagerutveckling fîr en artikel utvecklas med tiden enligt tillgÜngs- och efterfrÜgehÑndelser.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=FALSE;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItemJnlLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 78      ;3   ;Action    ;
                      CaptionML=[ENU=Period;
                                 NOR=Periode;
                                 SVE=Period];
                      ToolTipML=[ENU=Show the projected quantity of the item over time according to time periods, such as day, week, or month.;
                                 NOR=Viser beregnet antall av varen over tid i henhold til tidsperioder, for eksempel dag, uke eller mÜned.;
                                 SVE=Visa planerat antal fîr artikeln îver tiden enligt tidsperioder, sÜsom dag, vecka eller mÜnad.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItemJnlLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 79      ;3   ;Action    ;
                      CaptionML=[ENU=Variant;
                                 NOR=Variant;
                                 SVE=Variant];
                      ToolTipML=[ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                                 NOR=Vis eller rediger varens varianter. Du kan definere de ulike fargene som varianter av varen i stedet for Ü definere hver variant som en egen vare.;
                                 SVE=Visa eller redigera artikelns varianter. I stÑllet fîr att registrera varje fÑrg pÜ en artikel som en separat artikel, kan du registrera de olika fÑrgerna som varianter av artikeln.];
                      ApplicationArea=#Planning;
                      Visible=FALSE;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItemJnlLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 76      ;3   ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[ENU=Location;
                                 NOR=Lokasjon;
                                 SVE=LagerstÑlle];
                      ToolTipML=[ENU=View the actual and projected quantity of the item per location.;
                                 NOR=Vis faktisk og beregnet antall av varen per lokasjon.;
                                 SVE=Visa aktuellt och planerat antal artiklar per lagerstÑlle.];
                      ApplicationArea=#Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItemJnlLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 5       ;3   ;Action    ;
                      AccessByPermission=TableData 5870=R;
                      CaptionML=[ENU=BOM Level;
                                 NOR=StykklistenivÜ;
                                 SVE=StrukturnivÜ];
                      ToolTipML=[ENU=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.;
                                 NOR=Vis tilgjengelighetstall for stykklistevarer som angir hvor mange enheter av en overordnet vare du kan lage basert pÜ tilgjengeligheten av underordnede varer.;
                                 SVE=Visa tillgÑnglighetssiffror fîr artiklar i strukturer som visar hur mÜnga enheter av en îverordnad artikel som gÜr att tillverka baserat pÜ underartiklarnas tillgÑnglighet.];
                      ApplicationArea=#Assembly;
                      Visible=FALSE;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItemJnlLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 1100528303;3 ;Action    ;
                      CaptionML=[ENU=I&tem Inventory by Company;
                                 SVE=Artikellager efter fîretag];
                      Image=ItemWorksheet;
                      OnAction=BEGIN
                                 ShowItemInventoryByCompany;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 71      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NOR=F&unksjoner;
                                 SVE=Fu&nktion];
                      Image=Action }
      { 72      ;2   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=[ENU=E&xplode BOM;
                                 NOR=U&tfold stykkliste;
                                 SVE=Expandera str&uktur];
                      ToolTipML=[ENU=Insert new lines for the components on the bill of materials, for example to sell the parent item as a kit. CAUTION: The line for the parent item will be deleted and represented by a description only. To undo, you must delete the component lines and add a line the parent item again.;
                                 NOR=Sett inn nye linjer for komponentene pÜ stykklisten, for eksempel for Ü selge den overordnede varen som en pakke. OBS! Linjen for den overordnede varen blir slettet og representert av bare en beskrivelse. Hvis du vil angre, mÜ du slette komponentlinjene og legge til en linje for den overordnede varen pÜ nytt.;
                                 SVE=Infoga nya rader fîr strukturens komponenter, till exempel att sÑlja den îverordnade artikeln som ett paket. VARNING! Den îverordnade artikelns rad raderas representeras av en beskrivning. èngra genom att radera komponentraderna och pÜ nytt lÑgga till en rad fîr den îverordnade artikeln.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit 246;
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=ExplodeBOM;
                      PromotedCategory=Process }
      { 7300    ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Calculate Warehouse Adjustment;
                                 NOR=&Beregn lagerjustering;
                                 SVE=&BerÑkna distributionslagerjustering];
                      ToolTipML=[ENU=Calculate adjustments in quantity based on the warehouse adjustment bin for each item in the journal. New lines are added for negative and positive quantities.;
                                 NOR=Beregn justeringer i antall basert pÜ lagerjusteringshylle for hver vare i kladden. Nye linjer legges til for negative og positive verdier.;
                                 SVE=BerÑkna kvantitetsjusteringar utifrÜn justeringsldistributionslagerplatsen fîr varje artikel i journalen. Nya rader lÑggs till fîr negativa och positiva kvantiteter.];
                      ApplicationArea=#Warehouse;
                      Visible=FALSE;
                      Image=CalculateWarehouseAdjustment;
                      OnAction=BEGIN
                                 CalcWhseAdjmt.SetItemJnlLine(Rec);
                                 CalcWhseAdjmt.RUNMODAL;
                                 CLEAR(CalcWhseAdjmt);
                               END;
                                }
      { 74      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Get Standard Journals;
                                 NOR=&Hent standardkladder;
                                 SVE=&HÑmta standardjournaler];
                      ToolTipML=[ENU=Import journal lines from a standard journal that already exists.;
                                 NOR=Importer kladdelinjer fra en standardkladd som allerede finnes.;
                                 SVE=Importera journalrader frÜn en befintlig standardjournal.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=GetStandardJournal;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 StdItemJnl@1001 : Record 752;
                               BEGIN
                                 StdItemJnl.FILTERGROUP := 2;
                                 StdItemJnl.SETRANGE("Journal Template Name","Journal Template Name");
                                 StdItemJnl.FILTERGROUP := 0;
                                 IF PAGE.RUNMODAL(PAGE::"Standard Item Journals",StdItemJnl) = ACTION::LookupOK THEN BEGIN
                                   StdItemJnl.CreateItemJnlFromStdJnl(StdItemJnl,CurrentJnlBatchName);
                                   MESSAGE(Text001,StdItemJnl.Code);
                                 END
                               END;
                                }
      { 75      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Save as Standard Journal;
                                 NOR=&Lagre som standardkladd;
                                 SVE=&Spara som standardjournal];
                      ToolTipML=[ENU=Save the journal lines as a standard journal that you can later reuse.;
                                 NOR=Lagre kladdelinjene som en standardkladd du kan bruke pÜ nytt senere.;
                                 SVE=Spara journalraderna som en standardjournal som du kan ÜteranvÑnda senare.];
                      ApplicationArea=#Suite;
                      Visible=FALSE;
                      Image=SaveasStandardJournal;
                      OnAction=VAR
                                 ItemJnlBatch@1007 : Record 233;
                                 ItemJnlLines@1006 : Record 83;
                                 StdItemJnl@1005 : Record 752;
                                 SaveAsStdItemJnl@1004 : Report 751;
                               BEGIN
                                 ItemJnlLines.SETFILTER("Journal Template Name","Journal Template Name");
                                 ItemJnlLines.SETFILTER("Journal Batch Name",CurrentJnlBatchName);
                                 CurrPage.SETSELECTIONFILTER(ItemJnlLines);
                                 ItemJnlLines.COPYFILTERS(Rec);

                                 ItemJnlBatch.GET("Journal Template Name",CurrentJnlBatchName);
                                 SaveAsStdItemJnl.Initialise(ItemJnlLines,ItemJnlBatch);
                                 SaveAsStdItemJnl.RUNMODAL;
                                 IF NOT SaveAsStdItemJnl.GetStdItemJournal(StdItemJnl) THEN
                                   EXIT;

                                 MESSAGE(Text002,StdItemJnl.Code);
                               END;
                                }
      { 1000000000;2 ;Action    ;
                      CaptionML=[ENU=Generate Production Orders;
                                 SVE=Generera produktionsorder];
                      Visible=FALSE;
                      Image=MakeOrder;
                      OnAction=BEGIN
                                 //**4PS
                                 GenerateProductionOrders;
                               END;
                                }
      { 1100525001;2 ;Action    ;
                      CaptionML=[ENU=Generate Requisition Lines;
                                 SVE=Generera rekvisitionsrader];
                      Image=CreateDocument;
                      OnAction=VAR
                                 lvReqLine@1100525002 : Record 246;
                               BEGIN
                                 //**4PS
                                 GeneratePurchaseProposal;
                                 COMMIT;

                                 lvReqLine.FILTERGROUP := 2;
                                 lvReqLine.SETRANGE("Worksheet Template Name", ProjSetup."Purchase Journal Template");
                                 lvReqLine.SETRANGE("Journal Batch Name", ProjSetup."Purchase Journal Batch");
                                 lvReqLine.FILTERGROUP := 0;
                                 PAGE.RUN(PAGE::"Req. Worksheet", lvReqLine);
                               END;
                                }
      { 1210190040;2 ;Action    ;
                      CaptionML=[ENU=Split Item Journal Line;
                                 SVE=Dela artikeljournalrad];
                      Image=SplitChecks;
                      OnAction=BEGIN
                                 //**4PS
                                 SplitLines;
                               END;
                                }
      { 1100485027;2 ;Action    ;
                      CaptionML=[ENU=Deblock;
                                 SVE=Frigîr];
                      Image=ReopenCancelled;
                      OnAction=BEGIN
                                 //**4PS
                                 Deblock;
                               END;
                                }
      { 1100528304;2 ;ActionGroup;
                      CaptionML=ENU=Import IC Inventory &Lines;
                      Visible=FALSE;
                      Image=Setup }
      { 1100528301;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Orders;
                                 SVE=Order];
                      Visible=FALSE;
                      Image=Order;
                      OnAction=BEGIN
                                 //**4PS
                                 ImportInventoryOrderLines(1);
                               END;
                                }
      { 1100528305;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Transfers;
                      Visible=FALSE;
                      Image=TransferOrder;
                      OnAction=BEGIN
                                 //**4PS
                                 ImportInventoryOrderLines(3);
                               END;
                                }
      { 32      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 NOR=B&okfõring;
                                 SVE=B&okfîring];
                      Image=Post }
      { 33      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 NOR=Kontrollrapport;
                                 SVE=Testrapport];
                      ToolTipML=[ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                                 NOR=Vis en kontrollrapport slik at du kan finne og rette eventuelle feil fõr du bokfõrer kladden eller dokumentet.;
                                 SVE=Visa en testrapport sÜ att du kan hitta och rÑtta till eventuella fel innan du bokfîr journalen eller dokumentet.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=FALSE;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintItemJnlLine(Rec);
                               END;
                                }
      { 34      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 NOR=B&okfõr;
                                 SVE=&Bokfîr];
                      ToolTipML=[ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                                 NOR=Fullfõr dokumentet eller kladden ved Ü bokfõre belõpene og antallene til de relaterte kontiene i selskapstablÜene.;
                                 SVE=Slutfîr dokumentet eller journalen genom att bokfîra beloppen och kvantiteterna till de relaterade kontona i fîretagets redovisning.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 CheckStatusAndRun(FALSE);  //**4PS.n
                                 //**4PS.so
                                 //CODEUNIT.RUN(CODEUNIT::"Item Jnl.-Post",Rec);
                                 //CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 //CurrPage.UPDATE(FALSE);
                                 //**4PS.eo
                               END;
                                }
      { 35      ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 NOR=Bokfõr og &skriv ut;
                                 SVE=Bokfîr och skriv &ut];
                      ToolTipML=[ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                                 NOR=Fullfõr og klargjõr for Ü skrive ut dokumentet eller kladden. Verdiene og antallene blir bokfõrt til de relaterte kontiene. Det vises en rapportforespõrselsside der du kan angi hva som skal inkluderes pÜ utskriften.;
                                 SVE=Slutfîr och fîrbered utskrift av dokumentet eller journalen. VÑrdena och kvantiteterna bokfîrs pÜ de relaterade kontona. Ett fînster med en rapportbegÑran dÑr du kan ange vad som ska tas med pÜ utskriften.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 CheckStatusAndRun(TRUE);  //**4PS.n
                                 //**4PS.so
                                 //CODEUNIT.RUN(CODEUNIT::"Item Jnl.-Post+Print",Rec);
                                 //CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 //CurrPage.UPDATE(FALSE);
                                 //**4PS.eo
                               END;
                                }
      { 1210190006;1 ;ActionGroup;
                      CaptionML=[ENU=&Print;
                                 SVE=Skriv &ut];
                      Image=Print }
      { 1210190007;2 ;Action    ;
                      CaptionML=[ENU=Report Selection;
                                 SVE=Rapportval];
                      Image=Print;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ItemJnlLine@1210190002 : Record 83;
                                 PrintDoc@1210190001 : Codeunit 229;
                               BEGIN
                                 //**4PS
                                 CheckMarkedLines(ItemJnlLine);  //C034187 (db, 28-11-16)
                                 PrintDoc.PrintItemJnl(ItemJnlLine);
                               END;
                                }
      { 1210190008;2 ;Action    ;
                      CaptionML=[ENU=Project Dispatch Note;
                                 SVE=Projektleveransbesked];
                      Visible=FALSE;
                      Image=Print;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ItemJnlLine@1100525001 : Record 83;
                                 DocumentPrint@1100528200 : Codeunit 229;
                               BEGIN
                                 //**4PS
                                 ItemJnlLine.COPY(Rec);  //db, 05-12-14: C019287
                                 ItemJnlLine.SETRANGE("Journal Template Name", "Journal Template Name");
                                 ItemJnlLine.SETRANGE("Journal Batch Name", "Journal Batch Name");
                                 //REPORT.RUN(REPORT::"Project Dispatch Note",TRUE,FALSE,ItemJnlLine);
                                 DocumentPrint.PrintProjectDispatchNote(ItemJnlLine); //**4PS.n
                               END;
                                }
      { 70      ;2   ;Action    ;
                      CaptionML=[ENU=Inventory Movement;
                                 NOR=&Skriv ut;
                                 SVE=Skriv &ut];
                      ToolTipML=[ENU=Prepare to print the document. A report request window for the document opens where you can specify what to include on the print-out.;
                                 NOR=Klargjõr for Ü skrive ut dokumentet. Det vises et rapportforespõrselsvindu for dokumentet der du kan angi hva som skal inkluderes pÜ utskriften.;
                                 SVE=Fîrbered utskrift av dokumentet. Ett rapportfînster om dokumentet îppnas dÑr det gÜr att ange vad du vill inkludera pÜ utskriften.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Print;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ItemJnlLine@1001 : Record 83;
                                 DocumentPrint@1100528400 : Codeunit 229;
                               BEGIN
                                 //**4PS
                                 //db, 05-05-06: deze optie zit in standaard versie onder aparte button afdrukken.
                                 ItemJnlLine.COPY(Rec);
                                 ItemJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
                                 ItemJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                 //REPORT.RUNMODAL(REPORT::"Inventory Movement",TRUE,TRUE,ItemJnlLine); //**4PS.o
                                 DocumentPrint.PrintInventoryMovement(ItemJnlLine); //**4PS.n
                               END;
                                }
      { 1100528402;2 ;Action    ;
                      CaptionML=[ENU=Picking List;
                                 SVE=Plockningslista];
                      Image=Print;
                      OnAction=VAR
                                 ItemJournalLine@1100528400 : Record 83;
                                 DocumentPrint@1100528200 : Codeunit 229;
                               BEGIN
                                 //**4PS.sn
                                 // This report cannot be added to "Report Selection",
                                 // because a filter must be set on "Job No.".
                                 // Rec has a filter (filtergroup > 0) on template name and batch name, so
                                 // in the report you will see only lines within the current template and batch.
                                 ItemJournalLine.COPY(Rec);
                                 ItemJournalLine.SETRANGE("Job No.", "Job No.");
                                 //REPORT.RUNMODAL(REPORT::"Picking List (Item Journal)", TRUE, TRUE, ItemJournalLine);
                                 DocumentPrint.PrintPickingList(ItemJournalLine); //**4PS.n
                                 //**4PS.en
                               END;
                                }
      { 150     ;1   ;ActionGroup;
                      CaptionML=[ENU=Page;
                                 NOR=Side;
                                 SVE=Sida] }
      { 151     ;2   ;Action    ;
                      Name=EditInExcel;
                      CaptionML=[ENU=Edit in Excel;
                                 NOR=Rediger i Excel;
                                 SVE=Redigera i Excel];
                      ToolTipML=[ENU=Send the data in the journal to an Excel file for analysis or editing.;
                                 NOR=Send dataene i journalen til en Excel-fil for analyse eller redigering.;
                                 SVE=Skicka data i journalen till en Excel-fil fîr analys eller redigering.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsSaasExcelAddinEnabled;
                      PromotedIsBig=Yes;
                      Image=Excel;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ODataUtility@1000 : Codeunit 6710;
                               BEGIN
                                 ODataUtility.EditJournalWorksheetInExcel(CurrPage.CAPTION,CurrPage.OBJECTID(FALSE),"Journal Batch Name","Journal Template Name");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 25  ;1   ;Field     ;
                Lookup=Yes;
                CaptionML=[ENU=Batch Name;
                           NOR=Bunkenavn;
                           SVE=Journalnamn];
                ToolTipML=[ENU=Specifies the name of the journal batch, a personalized journal layout, that the journal is based on.;
                           NOR=Angir navnet pÜ kladden, et tilpasset kladdoppsett, som kladden er basert pÜ.;
                           SVE=Anger namnet pÜ journalen, en anpassad journallayout, som journalen Ñr baserad pÜ.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CurrentJnlBatchName;
                OnValidate=BEGIN
                             ItemJnlMgt.CheckName(CurrentJnlBatchName,Rec);
                             CurrentJnlBatchNameOnAfterVali;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           ItemJnlMgt.LookupName(CurrentJnlBatchName,Rec);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the posting date for the entry.;
                           NOR=Angir postens bokfõringsdato.;
                           SVE=Anger transaktionens bokfîringsdatum.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a document number for the journal line.;
                           NOR=Angir et dokumentnummer for kladdelinjen.;
                           SVE=Anger ett dokumentnummer fîr journalraden.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No." }

    { 39  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the related document was created.;
                           NOR=Angir datoen da de relaterte dokumentet ble opprettet.;
                           SVE=Anger datumet nÑr det relaterade dokumentet skapades.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of transaction that will be posted from the item journal line.;
                           NOR=Angir transaksjonstypen som blir bokfõrt fra varekladdelinjen.;
                           SVE=Anger vilken transaktionstyp som bokfîrs frÜn artikeljournalraden.];
                OptionCaptionML=[ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer;
                                 NOR=Kjõp,Salg,Oppjustering,Nedjustering;
                                 SVE=Inkîp,FîrsÑljning,Positiv just.,Negativ just.,ôverfîring];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Entry Type" }

    { 27  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a document number that refers to the customer's or vendor's numbering system.;
                           NOR=Angir et dokumentnummer som henviser til kundens eller leverandõrens nummereringssystem.;
                           SVE=Anger ett dokumentnummer som refererar till kundens eller leverantîrens nummersystem.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="External Document No.";
                Visible=FALSE }

    { 1210190034;2;Field  ;
                SourceExpr="Receiving Company";
                Visible=FALSE;
                OnValidate=BEGIN
                             ReceivingCompanyOnAfterValidat;
                           END;
                            }

    { 1210190013;2;Field  ;
                SourceExpr="Service Order No.";
                OnValidate=BEGIN
                             ServiceOrderNoOnAfterValidate;
                           END;
                            }

    { 1210190023;2;Field  ;
                SourceExpr="Service Contract No.";
                Visible=FALSE }

    { 1100528300;2;Field  ;
                SourceExpr="Service Object No.";
                Visible=FALSE }

    { 1210190015;2;Field  ;
                SourceExpr="Service Location No.";
                Visible=FALSE }

    { 1100485021;2;Field  ;
                SourceExpr="Service Control Year";
                Visible=FALSE }

    { 1100485008;2;Field  ;
                SourceExpr="Additional Cost (Service)";
                Visible=FALSE }

    { 1101200000;2;Field  ;
                SourceExpr="Job No.";
                OnValidate=BEGIN
                             JobNoOnAfterValidate;
                           END;
                            }

    { 1100485019;2;Field  ;
                SourceExpr="Project Stock";
                Visible=FALSE;
                Editable=ProjectStockEditable }

    { 1101200002;2;Field  ;
                SourceExpr=Element;
                Visible=FALSE }

    { 1210190036;2;Field  ;
                SourceExpr="Extension Contract";
                Visible=FALSE }

    { 1100485017;2;Field  ;
                SourceExpr="Rental Unit";
                Visible=FALSE }

    { 1100485906;2;Field  ;
                SourceExpr="Plant Type";
                Visible=FALSE }

    { 1100485908;2;Field  ;
                SourceExpr="Plant No.";
                Visible=FALSE }

    { 1100485910;2;Field  ;
                SourceExpr="Cost Component Plant";
                Visible=FALSE }

    { 1100485912;2;Field  ;
                SourceExpr="Delivery Account No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;  //DP02371: show dimension
                           END;
                            }

    { 1100485914;2;Field  ;
                SourceExpr="Delivery Dimension 1 Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 1210190045;2;Field  ;
                SourceExpr=Deliver;
                Visible=FALSE }

    { 1210190011;2;Field  ;
                SourceExpr="Ship To Location" }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the item on the journal line.;
                           NOR=Angir nummeret pÜ varen pÜ kladdelinjen.;
                           SVE=Anger numret pÜ journalradens artikel.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item No.";
                OnValidate=BEGIN
                             ItemJnlMgt.GetItem("Item No.",ItemDescription);
                             ShowShortcutDimCode(ShortcutDimCode);
                               ItemNoOnAfterValidate;
                           END;
                            }

    { 1100485006;2;Field  ;
                SourceExpr="Shelf No.";
                Visible=FALSE }

    { 63  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the variant of the item on the line.;
                           NOR=Angir varianten for varen pÜ linjen.;
                           SVE=Anger varianten av artikeln pÜ raden.];
                ApplicationArea=#Planning;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the item on the journal line.;
                           NOR=Angir en beskrivelse av varen pÜ kladdelinjen.;
                           SVE=Anger en beskrivning av journalradens artikel.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 1101200004;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1210190027;2;Field  ;
                SourceExpr="Text Block";
                Visible=FALSE }

    { 1100485015;2;Field  ;
                CaptionML=[ENU=Department Code Project/Service Order;
                           SVE=Avdelningskod fîr projekt/serviceorder];
                SourceExpr=GetReceivingDept;
                Visible=FALSE;
                Editable=FALSE }

    { 1100525012;2;Field  ;
                SourceExpr="Cost Type";
                Visible=FALSE }

    { 1100485011;2;Field  ;
                SourceExpr="Cost Component";
                Visible=FALSE }

    { 37  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the inventory location where the item on the journal line will be registered.;
                           NOR=Angir koden for lagerlokasjonen der varen pÜ kladdelinjen skal registreres.;
                           SVE=Anger koden fîr lagerstÑllet dÑr artikeln pÜ journalraden registreras.];
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                OnValidate=VAR
                             Item@1000 : Record 27;
                             WMSManagement@1001 : Codeunit 7302;
                           BEGIN
                             IF "Location Code" <> '' THEN
                               IF Item.GET("Item No.") THEN
                                 Item.TESTFIELD(Type,Item.Type::Inventory);
                             WMSManagement.CheckItemJnlLineLocation(Rec,xRec);
                               LocationCodeOnAfterValidate;
                           END;
                            }

    { 65  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the bin where the items are picked or put away.;
                           NOR=Angir hyllen der varene plukkes eller plasseres.;
                           SVE=Anger lagerplatsen dÑr artiklarna plockas eller fîrs in.];
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 1100526200;2;Field  ;
                SourceExpr="Bin Code (Project Inventory)";
                Visible=FALSE }

    { 47  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the salesperson or purchaser who is linked to the sale or purchase on the journal line.;
                           NOR=Angir koden for selgeren eller innkjõperen som er knyttet til salget eller kjõpet pÜ kladdelinjen.;
                           SVE=Anger koden fîr sÑljaren eller inkîparen som Ñr knuten till fîrsÑljningen eller inkîpet pÜ journalraden.];
                ApplicationArea=#Suite;
                SourceExpr="Salespers./Purch. Code";
                Visible=FALSE }

    { 45  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the vendor's or customer's trade type to link transactions made for this business partner with the appropriate general ledger account according to the general posting setup.;
                           NOR=Angir leverandõrens eller kundens handelstype for Ü koble transaksjoner gjort for denne forretningspartneren, med riktig finanskonto i henhold til det generelle bokfõringsoppsettet.;
                           SVE=Anger leverantîrens eller kundens handelstyp fîr att koppla transaktioner som skapas fîr affÑrspartnern till det lÑmpliga redovisningskontot enligt den generella bokfîringsinstÑllningen.];
                ApplicationArea=#Suite;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=FALSE }

    { 53  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item's product type to link transactions made for this item with the appropriate general ledger account according to the general posting setup.;
                           NOR=Angir varens produkttype for Ü koble transaksjoner gjort for denne varen, med riktig finanskonto i henhold til det generelle bokfõringsoppsettet.;
                           SVE=Anger artikelns produkttyp fîr att koppla transaktioner som skapas fîr artikeln till det lÑmpliga redovisningskontot enligt den generella bokfîringsinstÑllningen.];
                ApplicationArea=#Suite;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of units of the item to be included on the journal line.;
                           NOR=Angir hvor mange enheter av varen som skal inngÜ i linjen.;
                           SVE=Anger antalet enheter av artikeln som ska inkluderas pÜ journalraden.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 1100528400;2;Field  ;
                SourceExpr="Quantity to Post";
                Editable=QuantityToPostEditable }

    { 67  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                           NOR=Angir hvordan hver enhet av varen eller ressursen mÜles, for eksempel i stykker eller timer. Verdien i feltet Lagerenhet pÜ vare- eller ressurskortet settes inn som standard.;
                           SVE=Anger hur varje enhet av artikeln eller resursen mÑts, till exempel i stycken eller timmar. Som standard infogas vÑrdet i fÑltet Basenhet pÜ artikel- eller resurskortet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code" }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the price of one unit of the item on the journal line.;
                           NOR=Angir prisen pÜ Çn enhet av varen pÜ kladdelinjen.;
                           SVE=Anger styckpriset fîr artikeln pÜ journalraden.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Amount";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line's net amount.;
                           NOR=Angir linjens nettobelõp.;
                           SVE=Anger radens nettobelopp.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Amount;
                Visible=FALSE }

    { 84  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the discount amount of this entry on the line.;
                           NOR=Angir rabattbelõpet for denne posten pÜ linjen.;
                           SVE=Anger rabattbeloppet fîr den hÑr transaktionen pÜ raden.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Discount Amount";
                Visible=FALSE }

    { 49  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the percentage of the item's last purchase cost that includes indirect costs, such as freight that is associated with the purchase of the item.;
                           NOR=Angir prosentandelen av varens siste kjõpskost som inkluderer indirekte kostnader, for eksempel frakt som er knyttet til kjõpet av varen.;
                           SVE=Anger andelen av artikelns senaste inkîpskostnad som inkluderar indirekta kostnader, till exempel frakt som Ñr kopplad till inkîp av artikeln.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Indirect Cost %";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the cost of one unit of the item or resource on the line.;
                           NOR=Angir kostnaden for Çn enhet for varen eller ressursen pÜ linjen.;
                           SVE=Anger kostnaden fîr en enhet av artikeln eller resursen pÜ raden.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Cost";
                Visible=FALSE;
                Editable=UnitCostEditable }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the quantity on the journal line must be applied to an already-posted entry. In that case, enter the entry number that the quantity will be applied to.;
                           NOR=Angir om antallet pÜ kladdelinjen mÜ utlignes mot en allerede bokfõrt oppfõring. Angi i det tilfellet lõpenummeret som antallet skal gjelde for.;
                           SVE=Anger om antalet pÜ journalraden ska kopplas till en redan bokfîrd transaktion. I sÜ fall anger du transaktionsnumret som antalet ska kopplas till.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Entry";
                Visible=FALSE }

    { 51  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the outbound item ledger entry, whose cost is forwarded to the inbound item ledger entry.;
                           NOR=Angir nummeret for den utgÜende vareposten, som har en kostnad som videresende stil den inngÜende vareposten.;
                           SVE=Anger numret pÜ den avgÜende artikeltransaktionen, vars kostnad îverfîrs till den ankommande artikeltransaktionen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-from Entry";
                Visible=FALSE }

    { 55  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of transaction that the document represents, for the purpose of reporting to INTRASTAT.;
                           NOR=Angir transaksjonstypen som dokumentet representerer ved rapportering til INTRASTAT.;
                           SVE=Anger den transaktionstyp som dokumentet representerar fîr inrapportering till INTRASTAT.];
                ApplicationArea=#Suite;
                SourceExpr="Transaction Type";
                Visible=FALSE }

    { 57  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the transport method, for the purpose of reporting to INTRASTAT.;
                           NOR=Angir transportmÜten ved rapportering til INTRASTAT.;
                           SVE=Anger transportsÑttet fîr inrapportering till INTRASTAT.];
                ApplicationArea=#Suite;
                SourceExpr="Transport Method";
                Visible=FALSE }

    { 59  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the country/region of the address.;
                           NOR=Angir landet/omrÜdet for adressen.;
                           SVE=Anger adressens land/region.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Country/Region Code";
                Visible=FALSE }

    { 61  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the reason code, a supplementary source code that enables you to trace the entry.;
                           NOR=Angir Ürsakskoden, som er en ekstra kildekode som gjõr det mulig Ü spore posten.;
                           SVE=Anger uppfîljningskoden, en extra ursprungskod som anvÑnds fîr att spÜra transaktionen.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Reason Code";
                Visible=FALSE }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                           NOR=Angir koden til Snarveisdimensjon 1, som er Çn av to globale dimensjonskoder som du har definert i vinduet Finansoppsett.;
                           SVE=Anger koden fîr GenvÑg dimension 1, som Ñr en av tvÜ globala dimensionskoder som du stÑller in i fînstret RedovisningsinstÑllningar.];
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=DimVisible1;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;
                            }

    { 19  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                           NOR=Angir koden til Snarveisdimensjon 2, som er Çn av to globale dimensjonskoder som du har definert i vinduet Finansoppsett.;
                           SVE=Anger koden fîr GenvÑg dimension 2, som Ñr en av tvÜ globala dimensionskoder som du stÑller in i fînstret RedovisningsinstÑllningar.];
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=DimVisible2;
                LookupPageID=Cost Object List }

    { 17  ;2   ;Field     ;
                Name=ShortcutDimCode3;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                Visible=DimVisible3;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);

                             OnAfterValidateShortcutDimCode(Rec,ShortcutDimCode,3);
                           END;

                OnLookup=BEGIN
                           //**4PS
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                         END;
                          }

    { 15  ;2   ;Field     ;
                Name=ShortcutDimCode4;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                Visible=DimVisible4;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);

                             OnAfterValidateShortcutDimCode(Rec,ShortcutDimCode,4);
                           END;

                OnLookup=BEGIN
                           //**4PS
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                         END;
                          }

    { 13  ;2   ;Field     ;
                Name=ShortcutDimCode5;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                Visible=DimVisible5;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);

                             OnAfterValidateShortcutDimCode(Rec,ShortcutDimCode,5);
                           END;

                OnLookup=BEGIN
                           //**4PS
                           LookupShortcutDimCode(5,ShortcutDimCode[5]);
                         END;
                          }

    { 11  ;2   ;Field     ;
                Name=ShortcutDimCode6;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                Visible=DimVisible6;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);

                             OnAfterValidateShortcutDimCode(Rec,ShortcutDimCode,6);
                           END;

                OnLookup=BEGIN
                           //**4PS
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                         END;
                          }

    { 9   ;2   ;Field     ;
                Name=ShortcutDimCode7;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                Visible=DimVisible7;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);

                             OnAfterValidateShortcutDimCode(Rec,ShortcutDimCode,7);
                           END;

                OnLookup=BEGIN
                           //**4PS
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                         END;
                          }

    { 7   ;2   ;Field     ;
                Name=ShortcutDimCode8;
                ToolTipML=;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);

                             OnAfterValidateShortcutDimCode(Rec,ShortcutDimCode,8);
                           END;

                OnLookup=BEGIN
                           //**4PS
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                         END;
                          }

    { 1101200014;2;Field  ;
                SourceExpr="New Location Code" }

    { 1210190043;2;Field  ;
                SourceExpr="New Bin Code";
                Visible=FALSE }

    { 1101200006;2;Field  ;
                CaptionML=[ENU=Inventory;
                           SVE=Lager];
                DecimalPlaces=0:5;
                SourceExpr=InventoryDec;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //**4PS
                              DrillDownInventory;
                            END;
                             }

    { 1210190000;2;Field  ;
                SourceExpr="Inventory Status";
                Visible=FALSE;
                Editable=FALSE }

    { 1101200008;2;Field  ;
                SourceExpr="Delivery Date";
                Visible=FALSE }

    { 1100528302;2;Field  ;
                SourceExpr="Delivery Time";
                Visible=FALSE }

    { 1210190009;2;Field  ;
                SourceExpr=Blocked;
                Visible=FALSE;
                OnValidate=BEGIN
                             BlockedOnAfterValidate;
                           END;
                            }

    { 1100485004;2;Field  ;
                SourceExpr="To Plant Inventory";
                Visible=FALSE;
                Editable=ToPlantInventoryEditable }

    { 1100485002;2;Field  ;
                SourceExpr="To Plant Type";
                Visible=FALSE;
                Editable=ToPlantTypeEditable }

    { 1100485000;2;Field  ;
                SourceExpr="To Plant Location";
                Visible=FALSE;
                Editable=ToPlantLocationEditable }

    { 1210190002;2;Field  ;
                SourceExpr="Production Order";
                Visible=FALSE }

    { 1210190004;2;Field  ;
                SourceExpr="Production Status";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190038;2;Field  ;
                SourceExpr="Quantity (Produced)";
                Visible=FALSE }

    { 1210190041;2;Field  ;
                SourceExpr="Quantity (Released)";
                Visible=FALSE }

    { 1100526100;2;Field  ;
                SourceExpr="Yard No.";
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="System No.";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                SourceExpr="Entity Type";
                Visible=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr="Entity No.";
                Visible=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Cable Transit Pos.";
                Visible=FALSE }

    { 1100525010;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=FALSE }

    { 1100528306;2;Field  ;
                SourceExpr="IC Inventory Line Type";
                Visible=FALSE }

    { 1100528401;2;Field  ;
                SourceExpr="FSC Type Code";
                Visible=FALSE }

    { 1100526000;2;Field  ;
                SourceExpr="Employee Company";
                Visible=FALSE }

    { 1100528403;2;Field  ;
                SourceExpr="Employee No.";
                Visible=FALSE }

    { 1100526001;2;Field  ;
                CaptionML=[ENU=Employee Name;
                           SVE=Namn pÜ anstÑlld];
                SourceExpr=GetEmployeeName;
                Visible=FALSE }

    { 1100525003;2;Field  ;
                SourceExpr="Input by";
                Visible=FALSE }

    { 1100527350;2;Field  ;
                SourceExpr="Plot No.";
                Visible=FALSE }

    { 22  ;1   ;Group      }

    { 1900669001;2;Group  ;
                GroupType=FixedLayout }

    { 23  ;2   ;Field     ;
                CaptionML=[ENU=Item;
                           SVE=Artikel];
                ToolTipML=[ENU=Specifies a description of the item.;
                           NOR=Angir en beskrivelse av varen.;
                           SVE=Anger en beskrivning av artikeln.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ItemDescription;
                Visible=FALSE;
                Editable=FALSE;
                ShowCaption=No }

    { 1210190029;2;Field  ;
                CaptionML=[ENU=Project;
                           SVE=Projekt];
                SourceExpr=ProjDescription;
                Visible=FALSE;
                Editable=FALSE }

    { 1210190031;2;Field  ;
                CaptionML=[ENU=Service Order;
                           SVE=Serviceorder];
                SourceExpr=ServOrderDescription;
                Visible=FALSE;
                Editable=FALSE }

    { 1210190033;2;Field  ;
                CaptionML=[ENU=Service Location;
                           SVE=Serviceplats];
                SourceExpr=ServLocDescription;
                Visible=FALSE;
                Editable=FALSE }

    { 1100485023;2;Field  ;
                Name=InventoryDec2;
                DrillDown=Yes;
                CaptionML=[ENU=Inventory;
                           SVE=Lager];
                DecimalPlaces=0:5;
                SourceExpr=InventoryDec;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //**4PS
                              DrillDownInventory;
                            END;
                             }

    { 1100485025;2;Field  ;
                DrillDown=No;
                CaptionML=[ENU=Planned Inventory;
                           SVE=Lager Õ slÑppt];
                DecimalPlaces=0:5;
                SourceExpr=InventoryDec-QuantityToPost;
                Visible=FALSE;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1903326807;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=No.=FIELD(Item No.);
                PagePartID=Page9090;
                Visible=FALSE;
                PartType=Page }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot use entry type %1 in this journal.;NOR=Du kan ikke bruke posttype %1 i denne kladden.;SVE=Du kan inte anvÑnda transaktionstyp %1 i denna journal.';
      CalcWhseAdjmt@1006 : Report 7315;
      ItemJnlMgt@1001 : Codeunit 240;
      ReportPrint@1002 : Codeunit 228;
      ItemAvailFormsMgt@1010 : Codeunit 353;
      ClientTypeManagement@1011 : Codeunit 4030;
      CurrentJnlBatchName@1003 : Code[10];
      ItemDescription@1004 : Text[100];
      ShortcutDimCode@1005 : ARRAY [8] OF Code[20];
      Text001@1007 : TextConst 'ENU=Item Journal lines have been successfully inserted from Standard Item Journal %1.;NOR=Varekladdelinjer ble satt inn fra standardvarekladden %1.;SVE=Rader har infogats frÜn standardartikeljournalen %1.';
      Text002@1008 : TextConst 'ENU=Standard Item Journal %1 has been successfully created.;NOR=Standardvarekladden %1 ble opprettet.;SVE=Standardartikeljournalen %1 har skapats.';
      IsSaasExcelAddinEnabled@1009 : Boolean;
      DimVisible1@1019 : Boolean;
      DimVisible2@1018 : Boolean;
      DimVisible3@1017 : Boolean;
      DimVisible4@1016 : Boolean;
      DimVisible5@1015 : Boolean;
      DimVisible6@1014 : Boolean;
      DimVisible7@1013 : Boolean;
      DimVisible8@1012 : Boolean;
      Text11012001@1210190001 : TextConst 'ENU=First select records.;SVE=Markera fîrst poster';
      Text11012002@1210190002 : TextConst 'ENU=Before editing text enter the line first;SVE=VÑlj rad innan du redigerar text.';
      ProjSetup@1100525001 : Record 315;
      PlantSetup@1100485000 : Record 11012550;
      InvtSetup@1100525000 : Record 313;
      InventoryDec@1100485005 : Decimal;
      QuantityToPost@1100485009 : Decimal;
      ProjDescription@1100485004 : Text[100];
      ServOrderDescription@1100485003 : Text[100];
      ServLocDescription@1100485002 : Text[100];
      Text11012003@1100485007 : TextConst 'ENU=Ignore Stock?;SVE=Ignorera lager?';
      Text11012004@1100485010 : TextConst 'ENU=Inventory may not become negative.;SVE=Lager fÜr inte vara negativt.';
      Text11012005@1100485011 : TextConst 'ENU=Do you want to deblock?;SVE=Vill du frigîra?';
      IgnoreStock@1100485008 : Boolean;
      DPA_IsHardFilter@1100000999 : Boolean;
      TemplAndBatchSelectionSet@1100526200 : Boolean;
      ToPlantInventoryEditable@1100525002 : Boolean INDATASET;
      ToPlantLocationEditable@1100525003 : Boolean INDATASET;
      ToPlantTypeEditable@1100525004 : Boolean INDATASET;
      ProjectStockEditable@1100525005 : Boolean INDATASET;
      UnitCostEditable@1100525006 : Boolean INDATASET;
      QuantityToPostEditable@1100525007 : Boolean INDATASET;

    PROCEDURE DetermineInventory@1(iItemJournalLine@1100485001 : Record 83);
    VAR
      Item@11012010 : Record 27;
      ItemJournalLine@1100485000 : Record 83;
    BEGIN
      //**4PS
      InventoryDec := 0;
      QuantityToPost := 0;

      WITH iItemJournalLine DO BEGIN
        IF NOT Item.GET("Item No.") THEN
          EXIT;

        Item.SETRANGE("Location Filter", "Location Code");
        Item.SETRANGE("Variant Filter", "Variant Code");
        Item.CALCFIELDS(Inventory);
        InventoryDec := Item.Inventory;

        ItemJournalLine.RESET;
        ItemJournalLine.SETCURRENTKEY("Entry Type","Item No.", Blocked);
        ItemJournalLine.SETRANGE("Entry Type", ItemJournalLine."Entry Type"::Sale);
        ItemJournalLine.SETRANGE("Item No.", "Item No.");
        ItemJournalLine.SETRANGE(Blocked, FALSE);
        ItemJournalLine.SETRANGE("Location Code", "Location Code");
        ItemJournalLine.SETRANGE("Variant Code", "Variant Code");
        //ItemJournalLine.SETFILTER("Shipment Date",'>%1&<=%2',0D, "Shipment Date");
        IF ItemJournalLine.FINDSET THEN
          REPEAT
            QuantityToPost := QuantityToPost + ItemJournalLine.CalcQuantityToPostBase;
          UNTIL ItemJournalLine.NEXT = 0;
      END;
    END;

    PROCEDURE GeneratePurchaseProposal@4();
    VAR
      ItemJournalLine@1100525000 : Record 83;
      RequisitionLine@11012000 : Record 246;
      LineNumber@11012001 : Integer;
    BEGIN
      //**4PS
      ItemJournalLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(ItemJournalLine);
      IF ItemJournalLine.ISEMPTY THEN BEGIN //db, 28-11-16
        MESSAGE(Text11012001);
      END ELSE BEGIN
        RequisitionLine.LOCKTABLE;
        RequisitionLine.SETRANGE("Worksheet Template Name", ProjSetup."Purchase Journal Template");
        RequisitionLine.SETRANGE("Journal Batch Name", ProjSetup."Purchase Journal Batch");
        IF RequisitionLine.FIND('+') THEN
          LineNumber := RequisitionLine."Line No."
        ELSE
          LineNumber := 0;
        IF ItemJournalLine.FIND('-') THEN BEGIN
          REPEAT
            RequisitionLine.INIT;
            RequisitionLine."Worksheet Template Name" := ProjSetup."Purchase Journal Template";
            RequisitionLine."Journal Batch Name"      := ProjSetup."Purchase Journal Batch";
            RequisitionLine."Line No." := LineNumber + 1;
            RequisitionLine.Quantity := ItemJournalLine.Quantity;
            RequisitionLine.Type := RequisitionLine.Type::Item;
            RequisitionLine.VALIDATE("No.", ItemJournalLine."Item No.");
            RequisitionLine.Description := ItemJournalLine.Description;
            RequisitionLine."Description 2" := ItemJournalLine."Description 2";
            RequisitionLine.VALIDATE("Unit of Measure Code", ItemJournalLine."Unit of Measure Code");
            RequisitionLine."Shortcut Dimension 2 Code" := ItemJournalLine."Shortcut Dimension 2 Code";
            RequisitionLine."Cost Component" := ItemJournalLine."Cost Component";
            RequisitionLine."Due Date" := ItemJournalLine."Delivery Date";
            RequisitionLine."Comments for Logistics" := ItemJournalLine."Comments for Logistics";  //db, 03-10-13: C009866
            RequisitionLine."Location Code" := ItemJournalLine."Location Code";  //db, 18-02-14: C008202
            RequisitionLine.INSERT;
            LineNumber := RequisitionLine."Line No.";  //db, 18-02-13: C005930
          UNTIL ItemJournalLine.NEXT = 0;
        END;
      END;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE GenerateProductionOrders@1000000000();
    VAR
      ItemJournalLine@1100485001 : Record 83;
      Item@1000000001 : Record 27;
      ConfirmedQuestion@1100485000 : Boolean;
    BEGIN
      //**4PS
      ItemJournalLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(ItemJournalLine);
      IF ItemJournalLine.ISEMPTY THEN BEGIN
        MESSAGE(Text11012001);
      END ELSE BEGIN
        ItemJournalLine.SETRANGE("Journal Template Name", "Journal Template Name");
        ItemJournalLine.SETRANGE("Journal Batch Name", "Journal Batch Name");
        ItemJournalLine.SETFILTER("Inventory Status", '<%1', "Inventory Status"::"in production");
        IF ItemJournalLine.FIND('-') THEN BEGIN
          ConfirmedQuestion := FALSE;
          IgnoreStock := FALSE;
          REPEAT
            TESTFIELD("Delivery Date");
            IF InvtSetup."Location Mandatory" = TRUE THEN
              TESTFIELD("Location Code");
            Item.GET(ItemJournalLine."Item No.");
            IF Item."Replenishment System" = Item."Replenishment System"::"Prod. Order" THEN BEGIN
              DetermineInventory(ItemJournalLine);
              IF InventoryDec >= ItemJournalLine.Quantity THEN BEGIN
                IgnoreStock := CONFIRM(Text11012003);
                ConfirmedQuestion := TRUE;
              END;
            END;
          UNTIL (ItemJournalLine.NEXT = 0) OR ConfirmedQuestion;
        END;

        IF ItemJournalLine.FIND('-') THEN BEGIN
          REPEAT
            TESTFIELD("Delivery Date");
            IF InvtSetup."Location Mandatory" = TRUE THEN
              TESTFIELD("Location Code");
            Item.GET(ItemJournalLine."Item No.");
            IF Item."Replenishment System" = Item."Replenishment System"::"Prod. Order" THEN BEGIN
              DetermineInventory(ItemJournalLine);
              IF (NOT IgnoreStock) AND (InventoryDec >= ItemJournalLine.Quantity) THEN BEGIN
                ItemJournalLine."Inventory Status" := "Inventory Status"::"on stock";
                ItemJournalLine.MODIFY;
              END ELSE BEGIN
                ItemJournalLine."Production Order" := CreateProductionOrder(ItemJournalLine);
                ItemJournalLine."Production Status" := ItemJournalLine."Production Status"::"Firm Planned";
                ItemJournalLine."Inventory Status" := "Inventory Status"::"in production";
                ItemJournalLine.VALIDATE("Quantity (Reserved)");
                ItemJournalLine.Blocked := TRUE;
                ItemJournalLine.CalcOverheadSurcharge;
                ItemJournalLine.MODIFY;
              END;
            END;
          UNTIL ItemJournalLine.NEXT = 0;
        END;
      END;

      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE CreateProductionOrder@1000000004(iItemJnlLine@1000000003 : Record 83) : Code[20];
    VAR
      ProdHeader@1000000000 : Record 5405;
      ProdSetup@1000000002 : Record 99000765;
      NoSeriesMgt@1210190006 : Codeunit 396;
      CreateProdOrderLines@1210190000 : Codeunit 99000787;
    BEGIN
      //**4PS
      WITH iItemJnlLine DO BEGIN
        //create header production order
        ProdHeader.INIT;
        ProdSetup.GET;
        ProdSetup.TESTFIELD("Firm Planned Order Nos.");
        NoSeriesMgt.InitSeries(ProdSetup."Firm Planned Order Nos.",ProdHeader."No. Series",0D,ProdHeader."No.",ProdHeader."No. Series");

        ProdHeader."Source Type" := ProdHeader."Source Type"::Item;
        ProdHeader.VALIDATE("Source No.", "Item No.");
        ProdHeader.Status := ProdHeader.Status::"Firm Planned";
        ProdHeader.Description := Description;
        ProdHeader."Description 2" := "Description 2";
        ProdHeader."Search Description" := "Job No.";
        ProdHeader."Starting Date" := "Posting Date";
        ProdHeader."Starting Time" := ProdSetup."Normal Starting Time";
        ProdHeader."Ending Date" := "Delivery Date" - 1;
        ProdHeader."Ending Time" := ProdSetup."Normal Ending Time";
        ProdHeader."Due Date" := ProdHeader."Ending Date";
        ProdHeader."Creation Date" := TODAY;
        ProdHeader.UpdateDatetime;
        ProdHeader.VALIDATE(Quantity, Quantity);

        ProdHeader."Location Code" := "Location Code";
        ProdHeader."Inventory Posting Group" := "Inventory Posting Group";
        ProdHeader."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
        ProdHeader."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
        ProdHeader.INSERT;
        ProdHeader.VALIDATE("Shortcut Dimension 1 Code", "Shortcut Dimension 1 Code");
        ProdHeader.VALIDATE("Shortcut Dimension 2 Code", "Shortcut Dimension 2 Code");
        ProdHeader.MODIFY;

        //create line production order
        ProdHeader.SETRANGE("No.",ProdHeader."No.");
        CreateProdOrderLines.Copy(ProdHeader,1,"Variant Code",FALSE);
      END;

      EXIT(ProdHeader."No.");
    END;

    PROCEDURE CheckStatusAndRun@1210190000(PrintBln@1210190007 : Boolean);
    VAR
      Item@1210190000 : Record 27;
      ItemJournalLine@1210190003 : Record 83;
      ItemJnlTemplate@1100485001 : Record 233;
      NoSeriesMgt@1100485000 : Codeunit 396;
      ItemJournalLineDocument@1210190004 : Code[20];
      TempItemJournalLine@1100528400 : TEMPORARY Record 83;
      DimMgt@1100285000 : Codeunit 408;
      prevDimSetID@1100285001 : Integer;
    BEGIN
      //>>150121
      DimMgt.SetCompany("Receiving Company"); //**4PS.n
      DimMgt.SetDimensionValueChainsBool(TRUE);
      IF "Shortcut Dimension 1 Code" <> '' THEN BEGIN
        prevDimSetID := "Dimension Set ID";
        DimMgt.ValidateShortcutDimValues(1,"Shortcut Dimension 1 Code","Dimension Set ID");
        IF "Dimension Set ID" <> prevDimSetID THEN
          MODIFY(FALSE);
      END;
      IF "Shortcut Dimension 2 Code" <> '' THEN BEGIN
        prevDimSetID := "Dimension Set ID";
        DimMgt.ValidateShortcutDimValues(2,"Shortcut Dimension 2 Code","Dimension Set ID");
        IF "Dimension Set ID" <> prevDimSetID THEN
          MODIFY(FALSE);
      END;
      //<<150121

      //**4PS
      ItemJournalLine.COPY(Rec);

      ItemJournalLine.SETRANGE("Journal Template Name", ItemJournalLine."Journal Template Name");
      ItemJournalLine.SETRANGE("Journal Batch Name", ItemJournalLine."Journal Batch Name");
      ItemJournalLine.SETRANGE(Blocked, FALSE);
      IF ItemJournalLine.FIND('-') THEN BEGIN
        REPEAT
          HandlePartialPost(ItemJournalLine, TempItemJournalLine);
          Item.GET(ItemJournalLine."Item No.");
          IF Item."Replenishment System" = Item."Replenishment System"::"Prod. Order" THEN BEGIN
            IF (ItemJournalLine."Entry Type" = ItemJournalLine."Entry Type"::"Positive Adjmt.") OR
               (ItemJournalLine."Entry Type" = ItemJournalLine."Entry Type"::"Negative Adjmt.") THEN BEGIN
              IF ItemJournalLine."Inventory Status" < ItemJournalLine."Inventory Status"::"on stock" THEN
                ItemJournalLine."Inventory Status" := ItemJournalLine."Inventory Status"::"on stock";
            END;
            IF ItemJournalLine."Inventory Status" = ItemJournalLine."Inventory Status"::free THEN BEGIN
              DetermineInventory(ItemJournalLine);
              IF InventoryDec >= ItemJournalLine.Quantity THEN
                ItemJournalLine."Inventory Status" := "Inventory Status"::"on stock";
            END;
            IF ItemJournalLine."Inventory Status" = ItemJournalLine."Inventory Status"::produced THEN
              ItemJournalLine."Inventory Status" := ItemJournalLine."Inventory Status"::"on stock";
          END ELSE BEGIN
            IF ItemJournalLine."Inventory Status" < ItemJournalLine."Inventory Status"::"on stock" THEN
              ItemJournalLine."Inventory Status" := ItemJournalLine."Inventory Status"::"on stock";
          END;
          IF ItemJournalLine."Quantity (Released)" <> 0 THEN BEGIN
            IF ItemJournalLine.Quantity = ItemJournalLine."Quantity (Released)" THEN
              ItemJournalLine."Inventory Status" := ItemJournalLine."Inventory Status"::processed;
            IF ItemJournalLine.Blocked = FALSE THEN BEGIN
              ItemJournalLine.Quantity := ItemJournalLine.Quantity - ItemJournalLine."Quantity (Released)";
              ItemJournalLine."Quantity (Released)" := 0;
              ItemJournalLine.VALIDATE(Quantity);
            END;
          END;

          //when new mutation are added in Item Journal with more recent document no.
          //then (default) posting run complains that document no. does not match with last one in journal serie.

          IF ItemJnlTemplate.GET(ItemJournalLine."Journal Template Name", ItemJournalLine."Journal Batch Name") THEN BEGIN
            IF ItemJnlTemplate."No. Series" <> '' THEN BEGIN
              IF ItemJournalLineDocument = '' THEN BEGIN
                CLEAR(NoSeriesMgt);
                ItemJournalLineDocument := NoSeriesMgt.GetNextNo(ItemJnlTemplate."No. Series", ItemJournalLine."Posting Date", FALSE);
              END;
              ItemJournalLine."Document No." := ItemJournalLineDocument;
            END;
          END;
          ItemJournalLine.MODIFY;
          IF ItemJournalLine."Inventory Status" = ItemJournalLine."Inventory Status"::processed THEN
            ItemJournalLine.DELETE(TRUE);
        UNTIL ItemJournalLine.NEXT = 0;
      END;

      CreateJnlLinesForPartialPosts(TempItemJournalLine);
      COMMIT;
      IF PrintBln = FALSE THEN
        CODEUNIT.RUN(CODEUNIT::"Item Jnl.-Post", ItemJournalLine)
      ELSE
        CODEUNIT.RUN(CODEUNIT::"Item Jnl.-Post+Print", ItemJournalLine);

      IF NOT InvtSetup."Default Blocked" THEN
        UnblockNewJnlLinesForPartPosts(TempItemJournalLine);

      CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE EditText@1210190001();
    VAR
      TextFrm@1210190000 : Page 11012120;
    BEGIN
      //**4PS
      IF "Line No." = 0 THEN
        ERROR(Text11012002);

      TextFrm.SetSelection(DATABASE::"Item Journal Line","Journal Template Name", "Journal Batch Name",
        '','','','',"Line No.", 0);

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    PROCEDURE GetOtherDescriptions@1210190002();
    VAR
      ProjRec@1210190000 : Record 11072003;
      ServOrderRec@1210190001 : Record 11012823;
      ServLocRec@1210190004 : Record 11012801;
    BEGIN
      //**4PS
      ProjDescription := '';
      ServOrderDescription := '';
      ServLocDescription := '';

      IF "Job No." <> '' THEN BEGIN
        IF "Receiving Company" <> '' THEN
          ProjRec.CHANGECOMPANY("Receiving Company")
        ELSE
          ProjRec.CHANGECOMPANY(COMPANYNAME);
        IF ProjRec.GET("Job No.") THEN
          ProjDescription := ProjRec.Description;
      END;
      IF "Service Order No." <> '' THEN BEGIN
        IF "Receiving Company" <> '' THEN
          ServOrderRec.CHANGECOMPANY("Receiving Company")
        ELSE
          ServOrderRec.CHANGECOMPANY(COMPANYNAME);
        IF ServOrderRec.GET("Service Order No.") THEN
          ServOrderDescription := ServOrderRec.Description;
      END;
      IF "Service Location No." <> '' THEN BEGIN
        IF "Receiving Company" <> '' THEN
          ServLocRec.CHANGECOMPANY("Receiving Company")
        ELSE
          ServLocRec.CHANGECOMPANY(COMPANYNAME);
        IF ServLocRec.GET("Service Location No.") THEN
          ServLocDescription := ServLocRec.Description;
      END;
    END;

    PROCEDURE SplitLines@9();
    VAR
      LineNumber@11012000 : Integer;
      ItemJournalLine@1100528400 : Record 83;
      ItemJournalLine2@1210190006 : Record 83;
      TempItemJournalLine@1100528401 : TEMPORARY Record 83;
    BEGIN
      //**4PS
      ItemJournalLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(ItemJournalLine);
      IF ItemJournalLine.ISEMPTY THEN BEGIN  //db, 28-11-16
        MESSAGE(Text11012001);
        EXIT;
      END;

      REPEAT
        ItemJournalLine."Related Document (Parent)" :=
          ItemJournalLine."Document No." + '~' + STRSUBSTNO('%1', ItemJournalLine."Line No.");
        ItemJournalLine.MODIFY(TRUE);
        TempItemJournalLine := ItemJournalLine;
        TempItemJournalLine.INSERT;
      UNTIL ItemJournalLine.NEXT = 0;

      IF TempItemJournalLine.FINDSET THEN
        REPEAT
          LineNumber := TempItemJournalLine."Line No." + 1;
          WHILE ItemJournalLine2.GET(
            TempItemJournalLine."Journal Template Name", TempItemJournalLine."Journal Batch Name", LineNumber)
          DO
            LineNumber := LineNumber + 1;

          ItemJournalLine2 := TempItemJournalLine;
          ItemJournalLine2."Line No." := LineNumber;
          ItemJournalLine2.INSERT(TRUE);
          ItemJournalLine2.VALIDATE("Shortcut Dimension 1 Code");
          ItemJournalLine2.VALIDATE("Shortcut Dimension 2 Code");
          ItemJournalLine2.Blocked := InvtSetup."Default Blocked";
          ItemJournalLine2."Inventory Status" := ItemJournalLine2."Inventory Status"::free;
          ItemJournalLine2."Production Status" := ItemJournalLine2."Production Status"::Finished;
          ItemJournalLine2."Production Order" := '';
          ItemJournalLine2.Quantity := 0;
          ItemJournalLine2."Quantity (Produced)" := 0;
          ItemJournalLine2."Quantity (Released)" := 0;
          ItemJournalLine2."Related Document (Parent)" := '';
          ItemJournalLine2."Related Document (Child)" := TempItemJournalLine."Related Document (Parent)";
          ItemJournalLine2.MODIFY(TRUE);
        UNTIL TempItemJournalLine.NEXT = 0;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE GetReceivingDept@1100485000() DepartmentCode : Code[20];
    VAR
      ProjRec@1100485001 : Record 11072003;
      ServOrderRec@1100485003 : Record 11012823;
    BEGIN
      //**4PS
      DepartmentCode := '';
      IF "Job No." <> '' THEN BEGIN
        IF "Receiving Company" <> '' THEN
          ProjRec.CHANGECOMPANY("Receiving Company")
        ELSE
          ProjRec.CHANGECOMPANY(COMPANYNAME);
        IF ProjRec.GET("Job No.") THEN
          DepartmentCode := ProjRec."Global Dimension 1 Code";
      END;
      IF "Service Order No." <> '' THEN BEGIN
        IF "Receiving Company" <> '' THEN
          ServOrderRec.CHANGECOMPANY("Receiving Company")
        ELSE
          ServOrderRec.CHANGECOMPANY(COMPANYNAME);
        IF ServOrderRec.GET("Service Order No.") THEN
          DepartmentCode := ServOrderRec."Global Dimension 1 Code";
      END;

      EXIT(DepartmentCode);
    END;

    PROCEDURE Deblock@1100485001();
    VAR
      ItemJournalLine@1100485000 : Record 83;
      Deblock@1100485001 : Boolean;
    BEGIN
      //**4PS
      IF NOT CONFIRM(Text11012005) THEN
        EXIT;

      WITH ItemJournalLine DO BEGIN
        COPY(Rec);
        SETRANGE("Journal Template Name", "Journal Template Name");
        SETRANGE("Journal Batch Name", "Journal Batch Name");
        CurrPage.SETSELECTIONFILTER(ItemJournalLine);
        IF ISEMPTY THEN
          MESSAGE(Text11012001);
        SETCURRENTKEY("Delivery Date","Journal Template Name","Journal Batch Name");
        SETRANGE(Blocked, TRUE);
        IF FINDSET(TRUE, FALSE) THEN BEGIN
          REPEAT
            Deblock := TRUE;
            IF InvtSetup."Block Deblock Insuff. Invent." THEN BEGIN
              DetermineInventory(ItemJournalLine);
              IF "Quantity to Post" > InventoryDec - QuantityToPost THEN
                Deblock := FALSE;
            END;
            IF Deblock THEN BEGIN
              Blocked := FALSE;
              MODIFY;
            END;
          UNTIL NEXT = 0;
        END;
      END;
    END;

    PROCEDURE ImportInventoryOrderLines@1100528300(LineType@1100528301 : Option);
    VAR
      ImportICIventoryLines@1100528300 : Report 11012655;
    BEGIN
      //**4PS
      ImportICIventoryLines.SetLineType(LineType); //1=Order,2=Delivery,3=Transfer
      ImportICIventoryLines.SetTemplateAndBatch("Journal Template Name", CurrentJnlBatchName); //C018816
      ImportICIventoryLines.SetLineTypeEditable(FALSE);
      ImportICIventoryLines.RUNMODAL;
    END;

    LOCAL PROCEDURE ReceivingCompanyOnAfterValidat@19023184();
    BEGIN
      CurrPage.SAVERECORD;  //**4PS.n
    END;

    LOCAL PROCEDURE ServiceOrderNoOnAfterValidate@19042308();
    BEGIN
      GetOtherDescriptions;  //**4PS.n
    END;

    LOCAL PROCEDURE JobNoOnAfterValidate@19070084();
    BEGIN
      GetOtherDescriptions;  //**4PS.n
      ProjectStockEditable := InvtSetup.JobInventoryByStockRelease("Job No.");
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      //**4PS.sn
      DetermineInventory(Rec);
      GetOtherDescriptions;
      //**4PS.en
    END;

    LOCAL PROCEDURE LocationCodeOnAfterValidate@19034787();
    BEGIN
      DetermineInventory(Rec);  //**4PS.n
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      CurrPage.UPDATE(TRUE);  //**4PS.n  (update quantity released)
    END;

    LOCAL PROCEDURE BlockedOnAfterValidate@19012791();
    BEGIN
      //**4PS
      CurrPage.SAVERECORD;
      DetermineInventory(Rec);
      IF NOT Blocked AND InvtSetup."Block Deblock Insuff. Invent." AND
        ("Entry Type" = "Entry Type"::Sale) THEN
        IF (InventoryDec - QuantityToPost) < 0 THEN BEGIN
          Blocked := TRUE;
          CurrPage.UPDATE(TRUE);
          MESSAGE(Text11012004);
        END;
    END;

    LOCAL PROCEDURE CurrentJnlBatchNameOnAfterVali@19002411();
    BEGIN
      CurrPage.SAVERECORD;
      ItemJnlMgt.SetName(CurrentJnlBatchName,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetDimensionsVisibility@2();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimVisible1 := FALSE;
      DimVisible2 := FALSE;
      DimVisible3 := FALSE;
      DimVisible4 := FALSE;
      DimVisible5 := FALSE;
      DimVisible6 := FALSE;
      DimVisible7 := FALSE;
      DimVisible8 := FALSE;

      DimMgt.UseShortcutDims(
        DimVisible1,DimVisible2,DimVisible3,DimVisible4,DimVisible5,DimVisible6,DimVisible7,DimVisible8);

      CLEAR(DimMgt);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterValidateShortcutDimCode@10(VAR ItemJournalLine@1000 : Record 83;VAR ShortcutDimCode@1001 : ARRAY [8] OF Code[20];DimIndex@1002 : Integer);
    BEGIN
    END;

    PROCEDURE ShowItemInventoryByCompany@1100409000();
    VAR
      AdviceOrderMgt@1100528300 : Codeunit 11012041;
    BEGIN
      AdviceOrderMgt.RunItemInventoryByCompany("Item No.");
    END;

    PROCEDURE SetSelectionTemplateAndBatch@1100526200(TemplName@1100526200 : Code[10];BatchName@1100526201 : Code[10]);
    BEGIN
      //**4PS
      FILTERGROUP := 2;
      SETRANGE("Journal Template Name", TemplName);
      SETRANGE("Journal Batch Name", BatchName);
      FILTERGROUP := 0;
      CurrentJnlBatchName := BatchName;
      TemplAndBatchSelectionSet := TRUE;
    END;

    LOCAL PROCEDURE CheckMarkedLines@1100529400(VAR ItemJnlLine@1100529400 : Record 83);
    BEGIN
      //**4PS
      CurrPage.SETSELECTIONFILTER(ItemJnlLine);
      ItemJnlLine.SETFILTER("Line No.", '<>%1', "Line No.");  //check if more then 1 line marked
      ItemJnlLine.MARKEDONLY(TRUE);
      IF NOT ItemJnlLine.FINDFIRST THEN BEGIN
        //use predefined filter on page, may be extended by user with filter on other tablefields
        ItemJnlLine.COPY(Rec);
        ItemJnlLine.SETRANGE("Journal Template Name", "Journal Template Name");
        ItemJnlLine.SETRANGE("Journal Batch Name", "Journal Batch Name");
      END;
      ItemJnlLine.SETRANGE("Line No.");
    END;

    BEGIN
    END.
  }
}

