OBJECT Table 11229797 Consumed Web Service
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=BEGIN
               "Prefix Envelope Namespace" := 'soapenv';
               "Envelope Namespace" := 'http://schemas.xmlsoap.org/soap/envelope/';
               "Content Type" := 'text/xml; charset=utf-8';
             END;

    OnDelete=VAR
               ConsumedWebServiceParameter@1100528302 : Record 11229363;
               VendorGS1Login@1100528301 : Record 11012132;
             BEGIN
               DeleteConsumedWebServiceLines(Code);

               ConsumedWebServiceParameter.SETRANGE("Web Service Code", Code);
               ConsumedWebServiceParameter.DELETEALL;

               VendorGS1Login.SETRANGE("Consumed Web Service Code", Code);
               VendorGS1Login.MODIFYALL("Consumed Web Service Code", '');
             END;

    CaptionML=ENU=Consumed Web Service;
    LookupPageID=Page11126543;
    DrillDownPageID=Page11126543;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 15  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 20  ;   ;Login               ;Text30        ;CaptionML=[ENU=Login;
                                                              NOR=Innlogging;
                                                              SVE=Inloggning] }
    { 30  ;   ;Password            ;Text30        ;ExtendedDatatype=Masked;
                                                   CaptionML=[ENU=Password;
                                                              NOR=Passord;
                                                              SVE=L”senord] }
    { 40  ;   ;Web Service URL     ;Text250       ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Web Service URL;
                                                              NOR=Webbservice-URL;
                                                              SVE=Webbservice-URL] }
    { 50  ;   ;Web Proxy Address   ;Text250       ;CaptionML=ENU=Web Proxy Address }
    { 60  ;   ;Active              ;Boolean       ;CaptionML=[ENU=Active;
                                                              NOR=Aktiv;
                                                              SVE=Aktiv] }
    { 61  ;   ;Active Lines Present;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Consumed Web Service Line" WHERE (Web Service Code=FIELD(Code),
                                                                                                        Active=CONST(Yes)));
                                                   CaptionML=ENU=Active Lines Present;
                                                   Editable=No }
    { 70  ;   ;Log Communication   ;Boolean       ;CaptionML=ENU=Log Communication }
    { 200 ;   ;Prefix Envelope Namespace;Text30   ;CaptionML=ENU=Envelope Namespace Prefix }
    { 201 ;   ;Envelope Namespace  ;Text250       ;OnValidate=BEGIN
                                                                //Not all namespaces end with a '/'
                                                                //IF (COPYSTR("Envelope Namespace", STRLEN("Envelope Namespace")) <> '/') THEN
                                                                //  "Envelope Namespace" += '/';
                                                              END;

                                                   CaptionML=ENU=Envelope Namespace }
    { 210 ;   ;Content Type        ;Text250       ;CaptionML=[ENU=Content Type;
                                                              NOR=Innholdstype;
                                                              SVE=Inneh†llstyp] }
    { 220 ;   ;SOAP Action         ;Text250       ;CaptionML=ENU=SOAP Action }
    { 221 ;   ;SOAP Version        ;Option        ;CaptionML=ENU=SOAP Version;
                                                   OptionCaptionML=ENU=1.0,1.1,1.2;
                                                   OptionString=1.0,1.1,1.2;
                                                   Description=RFFU;
                                                   Editable=No }
    { 300 ;   ;Use Custom SOAP Header;Boolean     ;CaptionML=ENU=Use Custom SOAP Header }
    { 310 ;   ;Custom SOAP Header XML;BLOB        ;CaptionML=ENU=Custom SOAP Header XML }
    { 320 ;   ;Support Info        ;Text250       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Support Info }
    { 330 ;   ;Fault Node          ;Text250       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Fault Node }
    { 340 ;   ;Prefix Fault Namespace;Text30      ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Prefix Fault Namespace }
    { 350 ;   ;Fault Namespace     ;Text250       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Fault Namespace }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE ToggleActive@1100528300();
    VAR
      ConsumedWebServiceLine@1100528301 : Record 11229798;
    BEGIN
      Active := NOT Active;
      ConsumedWebServiceLine.SETRANGE("Web Service Code", Code);
      IF (NOT ConsumedWebServiceLine.FINDSET(TRUE)) THEN
        EXIT;

      REPEAT
        ConsumedWebServiceLine.Active := Active;
        ConsumedWebServiceLine.MODIFY;
      UNTIL (ConsumedWebServiceLine.NEXT = 0);
    END;

    PROCEDURE ToggleLogCommunication@1100528301();
    VAR
      ConsumedWebServiceLine@1100528301 : Record 11229798;
    BEGIN
      "Log Communication" := NOT "Log Communication";
      ConsumedWebServiceLine.SETRANGE("Web Service Code", Code);
      IF (NOT ConsumedWebServiceLine.FINDSET(TRUE)) THEN
        EXIT;

      REPEAT
        ConsumedWebServiceLine."Log Communication" := "Log Communication";
        ConsumedWebServiceLine.MODIFY;
      UNTIL (ConsumedWebServiceLine.NEXT = 0);
    END;

    PROCEDURE StartNamespacePage@1100528302();
    VAR
      ConsumedWebServiceNamespace@1100528300 : Record 11229838;
    BEGIN
      ConsumedWebServiceNamespace.FILTERGROUP(9);
      ConsumedWebServiceNamespace.SETRANGE("Web Service Code", Code);
      ConsumedWebServiceNamespace.SETRANGE("Seq. No.", 0);
      ConsumedWebServiceNamespace.FILTERGROUP(9);
      PAGE.RUNMODAL(PAGE::"Consumed Web Service Namespace", ConsumedWebServiceNamespace);
    END;

    PROCEDURE EditCustomHeader@1100528303();
    VAR
      ConsumedWebServiceMgt@1100528300 : Codeunit 11229310;
    BEGIN
      ConsumedWebServiceMgt.EditSOAPHeader(Rec);
    END;

    PROCEDURE GetFreeConsumedWebServiceCode@1100525004() : Code[20];
    VAR
      ConsumedWebService@1100525000 : Record 11229797;
      Prefix@1100525001 : Code[10];
      Counter@1100525002 : Integer;
      Text000@1100525003 : TextConst 'ENU=No more Free %1 %2 available.';
    BEGIN
      Prefix := 'INSBOU-';
      FOR Counter := 1 TO 999999 DO BEGIN
        IF (NOT ConsumedWebService.GET(Prefix + FORMAT(Counter))) THEN
          EXIT(Prefix + FORMAT(Counter));
      END;
      ERROR(Text000, ConsumedWebService.TABLECAPTION, ConsumedWebService.FIELDCAPTION(Code));
    END;

    PROCEDURE FillHeaderXML@1100528309(VAR ConsumedWebService@1100528300 : Record 11229797;MessageServerVersion@1100525000 : ' ,2.4,3.0,3.1';MessageVersion@1100525001 : Code[20];ApplicationId@1100525002 : Code[50];RelationId@1100529900 : Code[30]);
    VAR
      ConsumedWebServiceLine@1100528304 : Record 11229798;
      TempBlob@1100528302 : Record 99008535;
      FileManagement@1100528301 : Codeunit 419;
      ClientFileName@1100528303 : Text;
      ClientFolderName@1100528305 : Text;
    BEGIN
      IF (ConsumedWebService.Login = '') OR (ConsumedWebService.Password = '') THEN BEGIN
        ConsumedWebService."Use Custom SOAP Header" := FALSE;
        CLEAR(ConsumedWebService."Custom SOAP Header XML");
        EXIT;
      END;

      ClientFolderName := FileManagement.ClientTempFolderName + '\' + FORMAT(DELCHR(CREATEGUID, '<=>', '{}'));
      FileManagement.CreateClientDirectory(ClientFolderName);
      ClientFileName := ClientFolderName + '\' + FORMAT(DELCHR(CREATEGUID, '<=>', '{}')) + '.xml';

      IF (MessageServerVersion = MessageServerVersion::" ") OR (MessageServerVersion = MessageServerVersion::"2.4") THEN BEGIN
        ConsumedWebServiceLine.SETRANGE("Web Service Code", ConsumedWebService.Code);
        ConsumedWebServiceLine.FINDFIRST;

        FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:Header>', ConsumedWebService."Prefix Envelope Namespace"));
        FileManagement.AppendTextLineToClientFile(ClientFileName,
          STRSUBSTNO('<%1:CustomInfo><%2:IsTestMessage>false</%2:IsTestMessage><%2:IsContentCompressed>false</%2:IsContentCompressed></%1:CustomInfo>',
          ConsumedWebServiceLine."Prefix Method Namespace", ConsumedWebServiceLine."Prefix Method Namespace",
          ConsumedWebServiceLine."Prefix Method Namespace"));
        FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:AuthenticationInfo>', ConsumedWebServiceLine."Prefix Method Namespace"));
        FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:ApplicationId>%2</%1:ApplicationId>',
          ConsumedWebServiceLine."Prefix Method Namespace", ApplicationId));
        FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:RelationId>%2</%1:RelationId>',
          ConsumedWebServiceLine."Prefix Method Namespace", RelationId));
        FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:VersionId>%2</%1:VersionId>',
          ConsumedWebServiceLine."Prefix Method Namespace", MessageVersion));
        FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:UserId>%2</%1:UserId>',
          ConsumedWebServiceLine."Prefix Method Namespace", ConsumedWebService.Login));
        FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:Password>%2</%1:Password>',
          ConsumedWebServiceLine."Prefix Method Namespace", ConsumedWebService.Password));
        FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('</%1:AuthenticationInfo>', ConsumedWebServiceLine."Prefix Method Namespace"));
        FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('</%1:Header>', ConsumedWebService."Prefix Envelope Namespace"));
      END;
      IF (MessageServerVersion = MessageServerVersion::"3.0") OR (MessageServerVersion = MessageServerVersion::"3.1")THEN BEGIN
        FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<%1:Header>', ConsumedWebService."Prefix Envelope Namespace"));
        FileManagement.AppendTextLineToClientFile(ClientFileName,'<wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">');
        FileManagement.AppendTextLineToClientFile(ClientFileName,'<wsse:UsernameToken>');
        FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<wsse:Username>%1</wsse:Username>',ConsumedWebService.Login));
        FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('<wsse:Password>%1</wsse:Password>',ConsumedWebService.Password));
        FileManagement.AppendTextLineToClientFile(ClientFileName,'</wsse:UsernameToken>');
        FileManagement.AppendTextLineToClientFile(ClientFileName,'</wsse:Security>');
        FileManagement.AppendTextLineToClientFile(ClientFileName,'<mes:CustomInfo>');
        CASE MessageServerVersion OF
          MessageServerVersion::"3.0":
            BEGIN
              FileManagement.AppendTextLineToClientFile(ClientFileName,'<IsTestMessage>false</IsTestMessage>');
              FileManagement.AppendTextLineToClientFile(ClientFileName,'<LanguageCode/>');
              FileManagement.AppendTextLineToClientFile(ClientFileName,'<IsContentCompressed>false</IsContentCompressed>');
              FileManagement.AppendTextLineToClientFile(ClientFileName,STRSUBSTNO('<ApplicationId>%1</ApplicationId>',ApplicationId));
              FileManagement.AppendTextLineToClientFile(ClientFileName,STRSUBSTNO('<VersionId>%1</VersionId>',MessageVersion));
              FileManagement.AppendTextLineToClientFile(ClientFileName,STRSUBSTNO('<RelationId>%1</RelationId>',RelationId));
            END;
          MessageServerVersion::"3.1":
            BEGIN
              FileManagement.AppendTextLineToClientFile(ClientFileName,'<mes:IsTestMessage>false</mes:IsTestMessage>');
              FileManagement.AppendTextLineToClientFile(ClientFileName,'<mes:LanguageCode/>');
              FileManagement.AppendTextLineToClientFile(ClientFileName,'<mes:IsContentCompressed>false</mes:IsContentCompressed>');
              FileManagement.AppendTextLineToClientFile(ClientFileName,STRSUBSTNO('<mes:ApplicationId>%1</mes:ApplicationId>',ApplicationId));
              FileManagement.AppendTextLineToClientFile(ClientFileName,STRSUBSTNO('<mes:VersionId>%1</mes:VersionId>',MessageVersion));
              FileManagement.AppendTextLineToClientFile(ClientFileName,STRSUBSTNO('<mes:RelationId>%1</mes:RelationId>',RelationId));
            END;
        END;

        FileManagement.AppendTextLineToClientFile(ClientFileName,'</mes:CustomInfo>');
        FileManagement.AppendTextLineToClientFile(ClientFileName, STRSUBSTNO('</%1:Header>', ConsumedWebService."Prefix Envelope Namespace"));
      END;
      FileManagement.BLOBImport4PS(TempBlob, ClientFileName, FALSE);
      ConsumedWebService."Custom SOAP Header XML" := TempBlob.Blob;
      ConsumedWebService."Use Custom SOAP Header" := TRUE;
    END;

    PROCEDURE DeleteConsumedWebService@1100525003(ConsumedWebserviceCode@1100525001 : Code[20]);
    VAR
      ConsumedWebService@1100525000 : Record 11229797;
    BEGIN
      IF (ConsumedWebserviceCode = '') THEN
        EXIT;

      DeleteConsumedWebServiceLines(Code);
      ConsumedWebService.SETRANGE(Code, ConsumedWebserviceCode);
      ConsumedWebService.DELETEALL;
    END;

    PROCEDURE InsertConsumedWebServiceLines@1100525016(ConsumedWebService@1100525000 : Record 11229797;MessageServiceVersion@1100525004 : ' ,2.4,3.0,3.1');
    VAR
      Prefix@1100525001 : Text[30];
      Namespace@1100525002 : Text[250];
      ConsumedWebServiceLine@1100525003 : Record 11229798;
    BEGIN
      CASE MessageServiceVersion OF
        MessageServiceVersion::" ",
        MessageServiceVersion::"2.4":
          BEGIN
            Prefix := 'etim';
            Namespace := 'http://etim.nl/xmlschemas/messageservice/2.40';
            ConsumedWebServiceLine.InsertLine(ConsumedWebService, 10, 'GetAvailableMessages', 'GetAvailableMessagesRequest','GetAvailableMessagesResponse', Prefix, Namespace);
            ConsumedWebServiceLine.InsertLine(ConsumedWebService, 20, 'GetMessage', 'GetMessageRequest','GetMessageResponse', Prefix, Namespace);
            ConsumedWebServiceLine.InsertLine(ConsumedWebService, 30, 'DeleteMessage', 'DeleteMessageRequest','DeleteMessageResponse', Prefix, Namespace);
            ConsumedWebServiceLine.InsertLine(ConsumedWebService, 40, 'PostMessage', 'PostMessageRequest','PostMessageResponse', Prefix, Namespace);
          END;
        MessageServiceVersion::"3.0",
        MessageServiceVersion::"3.1":
          BEGIN
            Prefix := 'mes';
            IF MessageServiceVersion = MessageServiceVersion::"3.0" THEN
              Namespace := 'https://www.ketenstandaard.nl/WS/MessageService/3.0';
            IF MessageServiceVersion = MessageServiceVersion::"3.1" THEN
              Namespace := 'https://www.ketenstandaard.nl/WS/MessageService/3.1';
            ConsumedWebServiceLine.InsertLine(ConsumedWebService, 10, 'GetAvailableMessages', 'AvailableMessagesRequest','AvailableMessagesResponse', Prefix, Namespace);
            ConsumedWebServiceLine.InsertLine(ConsumedWebService, 20, 'GetMessage', 'MessageRequest','MessageResponse', Prefix, Namespace);
            ConsumedWebServiceLine.InsertLine(ConsumedWebService, 30, 'DeleteMessage', 'MessageRequest','MessageResponse', Prefix, Namespace);
            ConsumedWebServiceLine.InsertLine(ConsumedWebService, 40, 'PostMessage', 'Message','MessageResponse', Prefix, Namespace);
          END;
      END;
    END;

    PROCEDURE DeleteConsumedWebServiceLines@1100525002(ConsumedWebserviceCode@1100525001 : Code[20]);
    VAR
      ConsumedWebServiceLine@1100525002 : Record 11229798;
    BEGIN
      ConsumedWebServiceLine.SETRANGE("Web Service Code", ConsumedWebserviceCode);
      ConsumedWebServiceLine.DELETEALL(TRUE);
    END;

    BEGIN
    END.
  }
}

