OBJECT Table 11072671 Plant Meter Reading
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Plant Type");
               TESTFIELD("Plant No.");
               TESTFIELD(Meter);
               TESTFIELD("Meter Reading Type");
               TESTFIELD(Date);
               CheckOrderOfMeterReadings;
             END;

    OnModify=BEGIN
               IF ("Meter Reading" <> xRec."Meter Reading") OR
                  (("New Starting Value Type" <> Rec."New Starting Value Type"::" ") AND ("End Meter Reading" <> xRec."End Meter Reading"))
               THEN
                 CheckOrderOfMeterReadings;
             END;

    OnDelete=VAR
               PlantMeterReading@1100529000 : Record 11072671;
             BEGIN
               IF "New Starting Value Type" <> "New Starting Value Type"::" " THEN BEGIN
                 PlantMeterReading.CHANGECOMPANY(CURRENTCOMPANY);
                 PlantMeterReading.SETRANGE("Plant Type", "Plant Type");
                 PlantMeterReading.SETRANGE("Plant No.", "Plant No.");
                 PlantMeterReading.SETRANGE(Meter, Meter);
                 PlantMeterReading.SETRANGE("Meter Reading Type", "Meter Reading Type");
                 IF PlantMeterReading.FINDLAST THEN BEGIN
                   IF (PlantMeterReading.Date <> Date) OR (PlantMeterReading."Meter Time" <> "Meter Time") THEN
                     FIELDERROR("New Starting Value Type", STRSUBSTNO(Text004, "New Starting Value Type"));
                 END;
               END;
             END;

    OnRename=BEGIN
               ERROR(Text000); //T005361
             END;

    CaptionML=[ENU=Plant Meter Reading;
               SVE=Maskinr„knareavl„sning];
    LookupPageID=Page11125948;
  }
  FIELDS
  {
    { 10  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   OnValidate=VAR
                                                                PlantType@1100529000 : Record 11012551;
                                                              BEGIN
                                                                IF "Plant Type" <> '' THEN BEGIN
                                                                  PlantType.CHANGECOMPANY(CURRENTCOMPANY);
                                                                  PlantType.GET("Plant Type");
                                                                  PlantType.TESTFIELD("Meter Reading", TRUE);
                                                                  PlantType.TESTFIELD(Bulk, FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp];
                                                   NotBlank=Yes }
    { 20  ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Plant Description", "Inspection No.");
                                                              END;

                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr];
                                                   NotBlank=Yes }
    { 21  ;   ;Plant Description   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".Description WHERE (Plant Type=FIELD(Plant Type),
                                                                                                        No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Plant Description;
                                                              NOR=Maskinbeskrivelse;
                                                              SVE=Maskinbeskrivning];
                                                   Editable=No }
    { 22  ;   ;Inspection No.      ;Code30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number"."Inspection No." WHERE (Plant Type=FIELD(Plant Type),
                                                                                                             No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Inspection No.;
                                                              NOR=Inspeksjonnr.;
                                                              SVE=Inspektionsnr];
                                                   Editable=No }
    { 30  ;   ;Meter Reading Type  ;Code10        ;TableRelation="Plant Meter Type"."Plant Meter Type" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                              Plant No.=FIELD(Plant No.),
                                                                                                              Plant Meter=FIELD(Meter));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Unit of Measure", "Meter Reading Type Comment");
                                                                //Do not copy Comment of plant meter type (plant no level) to all meter readings. We had already complaints about this of some customers.
                                                                //Replaced by flowfield with comment of plant meter type. This column is available on the meter reading page.
                                                                //IF "Meter Reading Type" <> '' THEN
                                                                //  IF PlantMeterType.GET("Plant Type", "Plant No.", Meter, "Meter Reading Type") THEN
                                                                //    Comment := PlantMeterType.Comment;
                                                              END;

                                                   CaptionML=ENU=Meter Reading Type;
                                                   NotBlank=Yes }
    { 31  ;   ;Unit of Measure     ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Meter Reading Type"."Unit of Measure" WHERE (Code=FIELD(Meter Reading Type)));
                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=M†leenhet;
                                                              SVE=M†ttenhet];
                                                   Editable=No }
    { 32  ;   ;Meter Reading Type Comment;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Meter Type".Comment WHERE (Plant Type=FIELD(Plant Type),
                                                                                                        Plant No.=FIELD(Plant No.),
                                                                                                        Plant Meter=FIELD(Meter),
                                                                                                        Plant Meter Type=FIELD(Meter Reading Type)));
                                                   CaptionML=ENU=Meter Reading Type Comment;
                                                   Editable=No }
    { 40  ;   ;Date                ;Date          ;CaptionML=[ENU=Date;
                                                              NOR=Dato;
                                                              SVE=Datum];
                                                   NotBlank=Yes }
    { 41  ;   ;Meter Time          ;Time          ;OnValidate=VAR
                                                                NewDateTime@1100529000 : DateTime;
                                                              BEGIN
                                                                IF "Meter Time" <> 0T THEN BEGIN
                                                                  TESTFIELD(Date);
                                                                  NewDateTime := ROUNDDATETIME(CREATEDATETIME(Date, "Meter Time"), 1000);
                                                                  "Meter Time" := DT2TIME(NewDateTime);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Time;
                                                              NOR=Tid;
                                                              SVE=Tid] }
    { 50  ;   ;Meter Reading       ;Decimal       ;OnValidate=BEGIN
                                                                IF "Meter Reading" <> 0 THEN BEGIN
                                                                  TESTFIELD("Plant Type");
                                                                  TESTFIELD("Plant No.");
                                                                  TESTFIELD(Meter);
                                                                  TESTFIELD("Meter Reading Type");
                                                                  TESTFIELD(Date);
                                                                END;
                                                                CheckOrderOfMeterReadings;
                                                              END;

                                                   CaptionML=[ENU=Meter Reading;
                                                              NOR=Meteravlesning;
                                                              SVE=M„taravl„sning];
                                                   DecimalPlaces=0:0;
                                                   MinValue=0 }
    { 70  ;   ;Meter               ;Code10        ;TableRelation="Plant Meter Type"."Plant Meter" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                         Plant No.=FIELD(Plant No.));
                                                   OnValidate=VAR
                                                                PlantMeterType@1100529750 : Record 11229921;
                                                              BEGIN
                                                                //**4PS.sn BI049 KD 19-09-16
                                                                PlantMeterType.CHANGECOMPANY(CURRENTCOMPANY);
                                                                PlantMeterType.SETRANGE("Plant Type","Plant Type");
                                                                PlantMeterType.SETRANGE("Plant No.","Plant No.");
                                                                PlantMeterType.SETRANGE("Plant Meter",Meter);
                                                                PlantMeterType.SETRANGE("Plant Meter Type","Meter Reading Type");
                                                                IF PlantMeterType.ISEMPTY THEN BEGIN
                                                                  PlantMeterType.SETRANGE("Plant Meter Type");
                                                                  IF PlantMeterType.FINDFIRST THEN
                                                                    "Meter Reading Type" := PlantMeterType."Plant Meter Type"
                                                                  ELSE
                                                                    "Meter Reading Type" := '';
                                                                  CALCFIELDS("Unit of Measure", "Meter Reading Type Comment");
                                                                END;
                                                                //**4PS.en BI049 KD 19-09-16
                                                              END;

                                                   CaptionML=ENU=Meter;
                                                   NotBlank=Yes }
    { 80  ;   ;Comment             ;Text50        ;CaptionML=[ENU=Comment;
                                                              NOR=Merknad;
                                                              SVE=Kommentar];
                                                   Description=C037443 }
    { 90  ;   ;Order Type          ;Option        ;CaptionML=[ENU=Order Type;
                                                              NOR=Ordretype;
                                                              SVE=Ordertyp];
                                                   OptionCaptionML=ENU=" ,Plant Order,ServiceOrder";
                                                   OptionString=[ ,PlantOrder,ServiceOrder] }
    { 95  ;   ;Order No.           ;Code20        ;TableRelation=IF (Order Type=CONST(PlantOrder)) "Plant Order"
                                                                 ELSE IF (Order Type=CONST(ServiceOrder)) "Service Order";
                                                   CaptionML=[ENU=Order No.;
                                                              NOR=Ordrenr.;
                                                              SVE=Ordernr] }
    { 100 ;   ;New Starting Value Type;Option     ;CaptionML=ENU=New Starting Value Type;
                                                   OptionCaptionML=ENU=" ,Replacement,Maximum Value";
                                                   OptionString=[ ,Replacement,MaximumValue];
                                                   Editable=No }
    { 105 ;   ;End Meter Reading   ;Decimal       ;OnValidate=BEGIN
                                                                IF ("End Meter Reading" <> 0) AND ("New Starting Value Type" = "New Starting Value Type"::" ") THEN
                                                                  TESTFIELD("End Meter Reading", 0);
                                                                CheckOrderOfMeterReadings;
                                                              END;

                                                   CaptionML=ENU=End Meter Reading;
                                                   DecimalPlaces=0:0;
                                                   MinValue=0 }
    { 110 ;   ;Order Description   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Order".Description WHERE (No.=FIELD(Order No.)));
                                                   CaptionML=ENU=Order Description;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Plant Type,Plant No.,Meter,Meter Reading Type,Date,Meter Time;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100409000 : TextConst 'ENU=Rename not allowed;NOR=Ikke tillatt † endre navn.;SVE=Det „r inte till†tet att byta namn.';
      Text001@1100529000 : TextConst 'ENU=(%1) may not be %2 than %3 %4 (%5)';
      Text002a@1100529001 : TextConst 'ENU=less';
      Text002b@1100529002 : TextConst 'ENU=greater';
      Text003a@1100529003 : TextConst 'ENU=previous;SVE=F”reg†ende';
      Text003b@1100529004 : TextConst 'ENU=next;SVE=N„sta';
      Text004@1100529005 : TextConst 'ENU=is ''%1'': Delete only allowed if this is the last meter reading of plant number/meter/meter reading type';

    PROCEDURE GetPreviousMeterReadingRecord@1100529000(VAR CurrMeterReading@1100529002 : Record 11072671;VAR PrevMeterReading@1100529000 : Record 11072671);
    BEGIN
      WITH CurrMeterReading DO BEGIN
        PrevMeterReading.CHANGECOMPANY(CURRENTCOMPANY);
        //**4PS.sn BI049 KD 10-08-16
        // IF ("Plant Type" = '') OR ("Plant No." = '') OR ("Meter Reading Type" = '') OR (Date = 0D) THEN
        IF ("Plant Type" = '') OR ("Plant No." = '') OR ("Meter Reading Type" = '') OR (Meter = '') OR (Date = 0D) THEN
        //**4PS.en BI049 KD 10-08-16
          CLEAR(PrevMeterReading)
        ELSE BEGIN
          PrevMeterReading.SETRANGE("Plant Type", "Plant Type");
          PrevMeterReading.SETRANGE("Plant No.", "Plant No.");
          PrevMeterReading.SETRANGE("Meter Reading Type", "Meter Reading Type");
          //**4PS.sn BI049 KD 10-08-16
          PrevMeterReading.SETRANGE(Meter, Meter);
          PrevMeterReading.SETRANGE(Date, Date);
          PrevMeterReading.SETFILTER("Meter Time", '<%1', "Meter Time");
          IF NOT PrevMeterReading.FINDLAST THEN BEGIN
            PrevMeterReading.SETRANGE("Meter Time");
          //**4PS.en BI049 KD 10-08-16
            PrevMeterReading.SETRANGE(Date, 0D, Date - 1);
            IF NOT PrevMeterReading.FINDLAST THEN
              CLEAR(PrevMeterReading);
          END; //**4PS.n BI049 KD 10-08-16
        END;
      END;
    END;

    LOCAL PROCEDURE CheckOrderOfMeterReadings@1100529003();
    VAR
      PlantMeterReading@1100529000 : Record 11072671;
      PrevMeterReadingFound@1100529001 : Boolean;
      NextMeterReadingFound@1100529002 : Boolean;
    BEGIN
      PlantMeterReading.CHANGECOMPANY(CURRENTCOMPANY);
      PlantMeterReading.SETRANGE("Plant Type", "Plant Type");
      PlantMeterReading.SETRANGE("Plant No.", "Plant No.");
      PlantMeterReading.SETRANGE(Meter, Meter);
      PlantMeterReading.SETRANGE("Meter Reading Type", "Meter Reading Type");

      PlantMeterReading.SETRANGE(Date, Date);
      PlantMeterReading.SETFILTER("Meter Time", '<%1', "Meter Time");
      PrevMeterReadingFound := PlantMeterReading.FINDLAST;
      IF NOT PrevMeterReadingFound THEN BEGIN
        PlantMeterReading.SETFILTER(Date, '<%1', Date);
        PlantMeterReading.SETRANGE("Meter Time");
        PrevMeterReadingFound := PlantMeterReading.FINDLAST;
      END;
      IF PrevMeterReadingFound THEN BEGIN
        IF "New Starting Value Type" = "New Starting Value Type"::" " THEN BEGIN
          IF ("Meter Reading" < PlantMeterReading."Meter Reading") THEN
            PlantMeterReading.FIELDERROR("Meter Reading",
              STRSUBSTNO(Text001, "Meter Reading", Text002a, Text003a, FIELDCAPTION("Meter Reading"), PlantMeterReading."Meter Reading"));
        END ELSE BEGIN
          IF ("End Meter Reading" < PlantMeterReading."Meter Reading") THEN
            PlantMeterReading.FIELDERROR("End Meter Reading",
              STRSUBSTNO(Text001, "End Meter Reading", Text002a, Text003a, FIELDCAPTION("Meter Reading"), PlantMeterReading."Meter Reading"));
        END;
      END;

      PlantMeterReading.SETRANGE(Date, Date);
      PlantMeterReading.SETFILTER("Meter Time", '>%1', "Meter Time");
      NextMeterReadingFound := PlantMeterReading.FINDFIRST;
      IF NOT NextMeterReadingFound THEN BEGIN
        PlantMeterReading.SETFILTER(Date, '>%1', Date);
        PlantMeterReading.SETRANGE("Meter Time");
        NextMeterReadingFound := PlantMeterReading.FINDFIRST;
      END;
      IF NextMeterReadingFound AND ("Meter Reading" > PlantMeterReading."Meter Reading") THEN
        PlantMeterReading.FIELDERROR("Meter Reading",
         STRSUBSTNO(Text001, "Meter Reading", Text002b, Text003b, FIELDCAPTION("Meter Reading"), PlantMeterReading."Meter Reading"));
    END;

    PROCEDURE NewStartingValueMeterReading@1100529002(NewStartingValueType@1100529001 : Option;OrderType@1100529003 : Option;OrderNo@1100529002 : Code[20]);
    VAR
      NewStartValueMeterReading@1100529000 : Report 11012632;
    BEGIN
      IF CURRENTCOMPANY <> COMPANYNAME THEN
        EXIT;
      TESTFIELD("Plant Type");
      TESTFIELD("Plant No.");
      TESTFIELD(Meter);
      TESTFIELD("Meter Reading Type");
      NewStartValueMeterReading.SetSelections("Plant Type", "Plant No.", Meter, "Meter Reading Type", NewStartingValueType, OrderType, OrderNo);
      NewStartValueMeterReading.RUNMODAL;
    END;

    BEGIN
    {
      4PS 10-08-16 UKR-C25593 KD: Multiple meter readings (BI049) - Fields Meter, Time added
                                                                    Primary key changed - fields Meter, Time added
                                                                    Field "Meter Reading Type" changed - relation to table 11229921 "Plant Meter Type"
                                                                    Trigger GetActualMeterReadingMeter added
                                                                    Trigger GetPreviousMeterReadingRecord changed
                                                                    Triggers DefaultMeterReadingType, GetActualMeterReadingDate removed
    }
    END.
  }
}

