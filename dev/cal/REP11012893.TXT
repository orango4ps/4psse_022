OBJECT Report 11012893 Move SO Cost Plus to BaseOrder
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Move Service Order Cost Plus to BaseOrder;
               NOR=Flytt serviceordreselvkost til basisordre;
               SVE=Flytta extra serviceorderkostnad till basorder];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 1373;    ;DataItem;                    ;
               DataItemTable=Table11012823;
               DataItemTableView=SORTING(Base Service Order No.)
                                 WHERE(Base Service Order=CONST(No));
               OnAfterGetRecord=VAR
                                  ServiceOrderCostPlusEntry@1210190000 : Record 11012825;
                                BEGIN
                                  ServiceOrderCostPlusEntry.LOCKTABLE;
                                  ServiceOrderCostPlusEntry.SETRANGE("Service Order No.", "Base Service Order No.");
                                  IF ServiceOrderCostPlusEntry.FINDLAST THEN
                                    LastLineNoBaseOrder := ServiceOrderCostPlusEntry."Line No.";
                                  LastLineNoBaseOrder += 10000;
                                END;
                                 }

    { 3589;1   ;DataItem;                    ;
               DataItemTable=Table11012825;
               DataItemTableView=SORTING(Service Order No.,Line No.);
               OnAfterGetRecord=VAR
                                  ServiceOrderCostPlusEntry@1210190000 : Record 11012825;
                                BEGIN
                                  CALCFIELDS("Cost Type");
                                  IF (("Cost Type" = "Cost Type"::Material) AND MoveCostTypeMaterial) OR
                                     (("Cost Type" = "Cost Type"::Labor) AND MoveCostTypeLabor) OR
                                     (("Cost Type" = "Cost Type"::Plant) AND MoveCostTypePlant) OR
                                     (("Cost Type" = "Cost Type"::Subcontracting) AND MoveCostTypeSubcontracting) OR
                                     (("Cost Type" = "Cost Type"::Sundry) AND MoveCostTypeSundry) THEN BEGIN
                                    ServiceOrderCostPlusEntry := "Service Order Cost Plus Entry";
                                    ServiceOrderCostPlusEntry."Service Order No." := "Service Order"."Base Service Order No.";
                                    ServiceOrderCostPlusEntry."Line No." := LastLineNoBaseOrder;
                                    LastLineNoBaseOrder += 10000;
                                    ServiceOrderCostPlusEntry.INSERT;  //db, 14-03-13: C006283 (skip insert-trigger; do not reset cost component)
                                    DELETE;
                                  END;
                                END;

               DataItemLink=Service Order No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[ENU=Options;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Group  ;
                  CaptionML=[ENU=Move Cost Plus Entries by Cost Type;
                             NOR=Flytt selvkosttransaksjoner etter kosttype;
                             SVE=Flytta extra redovisade sj„lvkostnader efter kostnadstyp];
                  GroupType=Group }

      { 1100525003;3;Field  ;
                  CaptionML=[ENU=Material;
                             NOR=Materialee;
                             SVE=Material];
                  SourceExpr=MoveCostTypeMaterial }

      { 1100525004;3;Field  ;
                  CaptionML=[ENU=Labor;
                             NOR=Arbeidskraft;
                             SVE=Arbetskraft];
                  SourceExpr=MoveCostTypeLabor }

      { 1100525005;3;Field  ;
                  CaptionML=[ENU=Plant;
                             NOR=Maskin;
                             SVE=Maskin];
                  SourceExpr=MoveCostTypePlant }

      { 1100525006;3;Field  ;
                  CaptionML=[ENU=Subcontracting;
                             NOR=Underentrepen›r;
                             SVE=Underentreprenad];
                  SourceExpr=MoveCostTypeSubcontracting }

      { 1100525007;3;Field  ;
                  CaptionML=[ENU=Sundry;
                             NOR=Diverse;
                             SVE=Diverse];
                  SourceExpr=MoveCostTypeSundry }

      { 1100525008;2;Field  ;
                  CaptionML=[ENU=Compress Lines;
                             NOR=Komprimer rader;
                             SVE=Komprimera rader];
                  SourceExpr=CompressLines }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      LastLineNoBaseOrder@1210190000 : Integer;
      MoveCostTypeMaterial@1210190001 : Boolean;
      MoveCostTypeLabor@1210190002 : Boolean;
      MoveCostTypePlant@1210190003 : Boolean;
      MoveCostTypeSubcontracting@1210190004 : Boolean;
      MoveCostTypeSundry@1210190005 : Boolean;
      CompressLines@1210190006 : Boolean;

    PROCEDURE GetCompressedFlag@1210190000() : Boolean;
    BEGIN
      EXIT(CompressLines);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

