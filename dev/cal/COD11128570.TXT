OBJECT Codeunit 11128570 OIOUBL Document Encode
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVDK9.00 (13600);
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CompanyInfo@1060001 : Record 79;
      GLSetup@1060003 : Record 98;
      Text13600@1060026 : TextConst 'ENU=should be %1 characters long;NOR=skal v‘re  %1 tegn lang;SVE=ska vara %1 tecken l†ngt';
      CompanyInfoRead@1101100002 : Boolean;
      GLSetupRead@1101100003 : Boolean;
      Text000@1060000 : TextConst 'ENU=The customer must be Danish.';

    PROCEDURE DateToText@1060039(VarDate@1000 : Date) : Text[20];
    BEGIN
      IF VarDate = 0D THEN
        EXIT('1753-01-01');
      EXIT(FORMAT(VarDate,0,'<Year4>-<Month,2>-<Day,2>'));
    END;

    PROCEDURE BooleanToText@1060034(VarBoolean@1000 : Boolean) : Text[5];
    BEGIN
      CASE VarBoolean OF
        TRUE:
          EXIT('true');
        FALSE:
          EXIT('false');
      END;
    END;

    PROCEDURE DecimalToText@1060036(VarDecimal@1000 : Decimal) : Text[30];
    BEGIN
      EXIT(FORMAT(VarDecimal,0,'<Precision,2:2><Sign><Integer><Decimals><Comma,.>'));
    END;

    PROCEDURE IntegerToText@9(VarInteger@1000 : Integer) : Text[250];
    BEGIN
      EXIT(FORMAT(VarInteger,0,'<Sign><Integer,2><Filler Character,0>'));
    END;

    PROCEDURE IsValidEANNo@1(EAN@1000 : Code[13]) : Boolean;
    VAR
      GLNCalculator@1060000 : Codeunit 1607;
    BEGIN
      EXIT(GLNCalculator.IsValidCheckDigit13(EAN));
    END;

    PROCEDURE CheckCurrencyCode@5(CurrencyCode@1000 : Code[10]) : Boolean;
    BEGIN
      EXIT(STRLEN(CurrencyCode) = 3);
    END;

    PROCEDURE DecimalToPromille@1101100000(Decimal@1101100000 : Decimal) : Text[4];
    BEGIN
      EXIT(FORMAT(ABS(Decimal * 10), 0, '<Integer,4><Filler Character,0>'));
    END;

    PROCEDURE GetOIOUBLCountryRegionCode@1101100002(CountryRegionCode@1101100000 : Code[10]) : Code[10];
    VAR
      CountryRegion@1101100001 : Record 9;
    BEGIN
      IF CountryRegionCode = '' THEN BEGIN
        ReadCompanyInfo;
        CompanyInfo.TESTFIELD("Country/Region Code");
        CountryRegionCode := CompanyInfo."Country/Region Code";
      END;

      CountryRegion.GET(CountryRegionCode);
      CountryRegion.TESTFIELD("OIOUBL Country/Region Code");
      IF STRLEN(CountryRegion."OIOUBL Country/Region Code") <> 2 THEN
        CountryRegion.FIELDERROR("OIOUBL Country/Region Code",STRSUBSTNO(Text13600,2));
      EXIT(CountryRegion."OIOUBL Country/Region Code");
    END;

    PROCEDURE GetOIOUBLCurrencyCode@1101100004(CurrencyCode@1101100000 : Code[10]) : Code[10];
    VAR
      Currency@1101100001 : Record 4;
    BEGIN
      IF CurrencyCode = '' THEN BEGIN
        ReadGLSetup;
        GLSetup.TESTFIELD("LCY Code");
        CurrencyCode := GLSetup."LCY Code";
      END;

      IF NOT Currency.GET(CurrencyCode) THEN BEGIN
        IF STRLEN(CurrencyCode) <> 3 THEN
          GLSetup.FIELDERROR("LCY Code",STRSUBSTNO(Text13600,3));
        EXIT(CurrencyCode);
      END;
      Currency.TESTFIELD("OIOUBL Currency Code");
      IF STRLEN(Currency."OIOUBL Currency Code") <> 3 THEN
        Currency.FIELDERROR("OIOUBL Currency Code",STRSUBSTNO(Text13600,3));
      EXIT(Currency."OIOUBL Currency Code");
    END;

    PROCEDURE ReadCompanyInfo@1101100003();
    BEGIN
      IF NOT CompanyInfoRead THEN BEGIN
        CompanyInfo.GET;
        CompanyInfoRead := TRUE;
      END;
    END;

    PROCEDURE ReadGLSetup@1101100011();
    BEGIN
      IF NOT GLSetupRead THEN BEGIN
        GLSetup.GET;
        GLSetupRead := TRUE;
      END;
    END;

    PROCEDURE TestFolder@1101100001(FolderName@1101100001 : Text[260]) : Boolean;
    VAR
      TempFile@1101100000 : File;
    BEGIN
      IF NOT TempFile.CREATE(FolderName + '\$$temp$$') THEN
        EXIT(FALSE);

      TempFile.CLOSE;
      ERASE(FolderName + '\$$temp$$');
      EXIT(TRUE);
    END;

    PROCEDURE IsValidCountryCode@1060000(CountryCode@1060000 : Code[10]);
    BEGIN
      ReadCompanyInfo;
      IF CountryCode <> CompanyInfo."Country/Region Code" THEN
        ERROR(Text000);
    END;

    PROCEDURE GetCompanyVATRegNo@1060001(VATRegNo@1060000 : Text[20]) : Text[20];
    BEGIN
      ReadCompanyInfo;
      IF COPYSTR(VATRegNo,1,2) <> CompanyInfo."Country/Region Code" THEN
        EXIT(CompanyInfo."Country/Region Code" + VATRegNo);
      EXIT(VATRegNo);
    END;

    PROCEDURE GetCustomerVATRegNo@1060002(VATRegNo@1060000 : Text[20]) : Text[20];
    BEGIN
      ReadCompanyInfo;
      IF COPYSTR(VATRegNo,1,2) <> CompanyInfo."Country/Region Code" THEN
        EXIT(CompanyInfo."Country/Region Code" + VATRegNo);
      EXIT(VATRegNo);
    END;

    PROCEDURE GetUoMCode@1060003(UoMCode@1060000 : Code[10]) : Text;
    VAR
      UnitofMeasure@1060001 : Record 204;
    BEGIN
      IF NOT UnitofMeasure.GET(UoMCode) THEN
        EXIT(FORMAT(UoMCode));
      IF UnitofMeasure."International Standard Code" <> '' THEN
        EXIT(UnitofMeasure."International Standard Code");
      EXIT(UoMCode);
    END;

    BEGIN
    END.
  }
}

