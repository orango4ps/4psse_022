OBJECT Table 5507 Sales Cr. Memo Entity Buffer
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.05;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    OnModify=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    OnRename=BEGIN
               IF Posted AND (NOT IsRenameAllowed) THEN
                 ERROR(CannotModifyPostedInvioceErr);

               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    ReplicateData=No;
    CaptionML=[ENU=Sales Cr. Memo Entity Buffer;
               NOR=Enhetsbuffer for salgskr.nota];
  }
  FIELDS
  {
    { 2   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                UpdateSellToCustomerId;
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              NOR=Salg til-kundenr.;
                                                              SVE=Fîrs.kundnr];
                                                   NotBlank=Yes }
    { 3   ;   ;No.                 ;Code20        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 4   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              NOR=Faktura-til kundenummer;
                                                              SVE=Faktureringskundnr];
                                                   NotBlank=Yes }
    { 5   ;   ;Bill-to Name        ;Text100       ;TableRelation=Customer;
                                                   ValidateTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to Name;
                                                              NOR=Faktura-til navn;
                                                              SVE=Faktureringsnamn] }
    { 7   ;   ;Bill-to Address     ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to Address;
                                                              NOR=Faktura-til adresse;
                                                              SVE=Faktureringsadress] }
    { 8   ;   ;Bill-to Address 2   ;Text50        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to Address 2;
                                                              NOR=Faktura-til adresse 2;
                                                              SVE=Faktureringsadress 2] }
    { 9   ;   ;Bill-to City        ;Text30        ;TableRelation=IF (Bill-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Bill-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Bill-to Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to City;
                                                              NOR=Faktura-til sted;
                                                              SVE=Faktureras ort] }
    { 10  ;   ;Bill-to Contact     ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to Contact;
                                                              NOR=Faktura-til kontakt;
                                                              SVE=Faktureringskontaktperson] }
    { 23  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   OnValidate=BEGIN
                                                                UpdatePaymentTermsId;
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              NOR=Kode for betalingsbetingelser;
                                                              SVE=Betalningsvillkorskod] }
    { 24  ;   ;Due Date            ;Date          ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Due Date;
                                                              NOR=Forfallsdato;
                                                              SVE=Fîrfallodatum] }
    { 27  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   OnValidate=BEGIN
                                                                UpdateShipmentMethodId;
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              NOR=LeveringsmÜtekode;
                                                              SVE=Utleveransvillkorskod] }
    { 31  ;   ;Customer Posting Group;Code20      ;TableRelation="Customer Posting Group";
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Customer Posting Group;
                                                              NOR=Bokfõringsgruppe - kunde;
                                                              SVE=Kundbokfîringsmall] }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                UpdateCurrencyId;
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod] }
    { 35  ;   ;Prices Including VAT;Boolean       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Prices Including VAT;
                                                              NOR=Priser inkl. mva.;
                                                              SVE=Priser inkl. moms] }
    { 43  ;   ;Salesperson Code    ;Code20        ;TableRelation=Salesperson/Purchaser;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              NOR=Selgerkode;
                                                              SVE=SÑljarkod] }
    { 52  ;   ;Applies-to Doc. Type;Option        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Applies-to Doc. Type;
                                                              NOR=Utligningsbilagstype;
                                                              SVE=Kopplas till dokumenttyp];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    NOR=" ,Betaling,Faktura,Kreditnota,Rentenota,Purring,Refusjon";
                                                                    SVE=" ,Betalning,Faktura,Kreditnota,RÑntefaktura,BetalningspÜminnelse,èterbetalning"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 53  ;   ;Applies-to Doc. No. ;Code20        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Applies-to Doc. No.;
                                                              NOR=Utligningsbilagsnr.;
                                                              SVE=Kopplas till ver.nr] }
    { 56  ;   ;Recalculate Invoice Disc.;Boolean  ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Sales Line" WHERE (Document Type=CONST(Invoice),
                                                                                         Document No.=FIELD(No.),
                                                                                         Recalculate Invoice Disc.=CONST(Yes)));
                                                   CaptionML=[ENU=Recalculate Invoice Disc.;
                                                              NOR=Beregn fakturarabatt pÜ nytt;
                                                              SVE=BerÑkna om fakturarabatt];
                                                   Editable=No }
    { 60  ;   ;Amount              ;Decimal       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Amount;
                                                              NOR=Belõp;
                                                              SVE=Belopp];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Amount Including VAT;Decimal       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Amount Including VAT;
                                                              NOR=Belõp inkl. mva.;
                                                              SVE=Belopp inkl. moms];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 79  ;   ;Sell-to Customer Name;Text100      ;TableRelation=Customer.Name;
                                                   ValidateTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Customer Name;
                                                              NOR=Salg til-kundenavn;
                                                              SVE=Fîrs.kundnamn] }
    { 81  ;   ;Sell-to Address     ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Address;
                                                              NOR=Salg til-adresse;
                                                              SVE=Fîrs.adress] }
    { 82  ;   ;Sell-to Address 2   ;Text50        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Address 2;
                                                              NOR=Salg til-adresse 2;
                                                              SVE=Fîrs.adress 2] }
    { 83  ;   ;Sell-to City        ;Text30        ;TableRelation=IF (Sell-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Sell-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Sell-to Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to City;
                                                              NOR=Salg til-sted;
                                                              SVE=Fîrs.ort] }
    { 84  ;   ;Sell-to Contact     ;Text100       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Contact;
                                                              NOR=Salg til-kontakt;
                                                              SVE=Fîrs.kontaktperson] }
    { 85  ;   ;Bill-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to Post Code;
                                                              NOR=Faktura-til postnummer;
                                                              SVE=Faktureras postnr] }
    { 86  ;   ;Bill-to County      ;Text30        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to County;
                                                              NOR=Faktura-til fylke/delstat;
                                                              SVE=Faktureras delstat];
                                                   CaptionClass='5,1,' + "Bill-to Country/Region Code" }
    { 87  ;   ;Bill-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Bill-to Country/Region Code;
                                                              NOR=Faktura-til lands-/omrÜdekode;
                                                              SVE=Faktureringsland/-region] }
    { 88  ;   ;Sell-to Post Code   ;Code20        ;TableRelation=IF (Sell-to Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Sell-to Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Sell-to Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Post Code;
                                                              NOR=Salg til-postnr.;
                                                              SVE=Fîrs.postnrkod] }
    { 89  ;   ;Sell-to County      ;Text30        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to County;
                                                              NOR=Salg til-fylke/delstat;
                                                              SVE=Fîrs.delstat];
                                                   CaptionClass='5,1,' + "Sell-to Country/Region Code" }
    { 90  ;   ;Sell-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Country/Region Code;
                                                              NOR=Lands-/omrÜdekode for Salg til;
                                                              SVE=Fîrs.land/-region] }
    { 99  ;   ;Document Date       ;Date          ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Document Date;
                                                              NOR=Dokumentdato;
                                                              SVE=Faktura- datum] }
    { 100 ;   ;External Document No.;Code35       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=External Document No.;
                                                              NOR=Eksterndokumentnr.;
                                                              SVE=Externt dokumentnr] }
    { 171 ;   ;Sell-to Phone No.   ;Text30        ;ExtendedDatatype=Phone No.;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Phone No.;
                                                              NOR=Salg-til telefonnummer.] }
    { 172 ;   ;Sell-to E-Mail      ;Text80        ;ExtendedDatatype=E-Mail;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Email;
                                                              NOR=E-post;
                                                              SVE=E-post] }
    { 1304;   ;Cust. Ledger Entry No.;Integer     ;TableRelation="Cust. Ledger Entry"."Entry No.";
                                                   TestTableRelation=No;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Cust. Ledger Entry No.;
                                                              NOR=Kundepostnr.;
                                                              SVE=Kundreskontra lîpnr] }
    { 1305;   ;Invoice Discount Amount;Decimal    ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Invoice Discount Amount;
                                                              NOR=Fakturarabattbelõp;
                                                              SVE=Fakturarabatt];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 5052;   ;Sell-to Contact No. ;Code20        ;TableRelation=Contact;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Sell-to Contact No.;
                                                              NOR=Salg til-kontaktnr.;
                                                              SVE=Fîrs.kontaktnr] }
    { 5750;   ;Shipping Advice     ;Option        ;AccessByPermission=TableData 110=R;
                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Shipping Advice;
                                                              NOR=Leveringsõnske;
                                                              SVE=Leveranstyp];
                                                   OptionCaptionML=[ENU=Partial,Complete;
                                                                    NOR=Delvis,Fullstendig;
                                                                    SVE=Delvis,FullstÑndig];
                                                   OptionString=Partial,Complete }
    { 5752;   ;Completely Shipped  ;Boolean       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Completely Shipped;
                                                              NOR=Fullstendig levert;
                                                              SVE=FÑrdigt levererat] }
    { 5790;   ;Requested Delivery Date;Date       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Requested Delivery Date;
                                                              NOR=ùnsket leveringsdato;
                                                              SVE=BegÑrt leveransdatum] }
    { 8000;   ;Id                  ;GUID          ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Id;
                                                              NOR=ID;
                                                              SVE=ID] }
    { 9600;   ;Total Tax Amount    ;Decimal       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Total Tax Amount;
                                                              NOR=Totalt mva-belõp];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 9601;   ;Status              ;Option        ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[@@@={Locked};
                                                                    ENU=Draft,In Review,Open,Canceled,Corrective,Paid;
                                                                    NOR=Draft,In Review,Open,Canceled,Corrective,Paid];
                                                   OptionString=Draft,In Review,Open,Canceled,Corrective,Paid }
    { 9602;   ;Posted              ;Boolean       ;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Posted;
                                                              NOR=Bokfõrt;
                                                              SVE=Bokfîrd] }
    { 9624;   ;Discount Applied Before Tax;Boolean;DataClassification=CustomerContent;
                                                   CaptionML=[ENU=Discount Applied Before Tax;
                                                              NOR=Rabatt utlignet fõr skatt] }
    { 9630;   ;Last Modified Date Time;DateTime   ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Last Modified Date Time;
                                                              NOR=Dato/klokkeslett for siste endring;
                                                              SVE=Senast Ñndrad, datum och tid];
                                                   Editable=No }
    { 9631;   ;Customer Id         ;GUID          ;TableRelation=Customer.Id;
                                                   OnValidate=BEGIN
                                                                UpdateSellToCustomerNo;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Customer Id;
                                                              NOR=Kunde-ID;
                                                              SVE=Kund-ID] }
    { 9633;   ;Contact Graph Id    ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Contact Graph Id;
                                                              NOR=Graph-ID for kontakt] }
    { 9634;   ;Currency Id         ;GUID          ;TableRelation=Currency.Id;
                                                   OnValidate=BEGIN
                                                                UpdateCurrencyCode;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Currency Id;
                                                              NOR=Valuta-ID] }
    { 9635;   ;Payment Terms Id    ;GUID          ;TableRelation="Payment Terms".Id;
                                                   OnValidate=BEGIN
                                                                UpdatePaymentTermsCode;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Payment Terms Id;
                                                              NOR=ID for betalingsbetingelser] }
    { 9636;   ;Shipment Method Id  ;GUID          ;TableRelation="Shipment Method".Id;
                                                   OnValidate=BEGIN
                                                                UpdateShipmentMethodCode;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Shipment Method Id;
                                                              NOR=ID for leveringsmÜte] }
    { 9638;   ;Bill-to Customer Id ;GUID          ;TableRelation=Customer.Id;
                                                   OnValidate=BEGIN
                                                                UpdateBillToCustomerNo;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Bill-to Customer Id;
                                                              NOR=Faktura-til kunde-ID] }
  }
  KEYS
  {
    {    ;No.,Posted                               }
    {    ;Id                                      ;Clustered=Yes }
    {    ;Cust. Ledger Entry No.                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CannotModifyPostedInvioceErr@1000 : TextConst '@@@={Locked};ENU=The credit memo has been posted and can no longer be modified.;NOR=The credit memo has been posted and can no longer be modified.';
      IsRenameAllowed@1001 : Boolean;

    LOCAL PROCEDURE UpdateSellToCustomerId@2();
    VAR
      Customer@1000 : Record 18;
    BEGIN
      IF "Sell-to Customer No." = '' THEN BEGIN
        CLEAR("Customer Id");
        EXIT;
      END;

      IF NOT Customer.GET("Sell-to Customer No.") THEN
        EXIT;

      "Customer Id" := Customer.Id;
    END;

    LOCAL PROCEDURE UpdateBillToCustomerId@16();
    VAR
      Customer@1000 : Record 18;
    BEGIN
      IF "Bill-to Customer No." = '' THEN BEGIN
        CLEAR("Bill-to Customer Id");
        EXIT;
      END;

      IF NOT Customer.GET("Bill-to Customer No.") THEN
        EXIT;

      "Bill-to Customer Id" := Customer.Id;
    END;

    [External]
    PROCEDURE UpdateCurrencyId@9();
    VAR
      Currency@1000 : Record 4;
    BEGIN
      IF "Currency Code" = '' THEN BEGIN
        CLEAR("Currency Id");
        EXIT;
      END;

      IF NOT Currency.GET("Currency Code") THEN
        EXIT;

      "Currency Id" := Currency.Id;
    END;

    [External]
    PROCEDURE UpdatePaymentTermsId@57();
    VAR
      PaymentTerms@1000 : Record 3;
    BEGIN
      IF "Payment Terms Code" = '' THEN BEGIN
        CLEAR("Payment Terms Id");
        EXIT;
      END;

      IF NOT PaymentTerms.GET("Payment Terms Code") THEN
        EXIT;

      "Payment Terms Id" := PaymentTerms.Id;
    END;

    [External]
    PROCEDURE UpdateShipmentMethodId@58();
    VAR
      ShipmentMethod@1000 : Record 10;
    BEGIN
      IF "Shipment Method Code" = '' THEN BEGIN
        CLEAR("Shipment Method Id");
        EXIT;
      END;

      IF NOT ShipmentMethod.GET("Shipment Method Code") THEN
        EXIT;

      "Shipment Method Id" := ShipmentMethod.Id;
    END;

    LOCAL PROCEDURE UpdateSellToCustomerNo@1();
    VAR
      Customer@1000 : Record 18;
    BEGIN
      IF NOT ISNULLGUID("Customer Id") THEN BEGIN
        Customer.SETRANGE(Id,"Customer Id");
        Customer.FINDFIRST;
      END;

      VALIDATE("Sell-to Customer No.",Customer."No.");
    END;

    LOCAL PROCEDURE UpdateBillToCustomerNo@18();
    VAR
      Customer@1000 : Record 18;
    BEGIN
      IF NOT ISNULLGUID("Bill-to Customer Id") THEN BEGIN
        Customer.SETRANGE(Id,"Bill-to Customer Id");
        Customer.FINDFIRST;
      END;

      VALIDATE("Bill-to Customer No.",Customer."No.");
    END;

    LOCAL PROCEDURE UpdateCurrencyCode@10();
    VAR
      Currency@1000 : Record 4;
    BEGIN
      IF NOT ISNULLGUID("Currency Id") THEN BEGIN
        Currency.SETRANGE(Id,"Currency Id");
        Currency.FINDFIRST;
      END;

      VALIDATE("Currency Code",Currency.Code);
    END;

    LOCAL PROCEDURE UpdatePaymentTermsCode@56();
    VAR
      PaymentTerms@1001 : Record 3;
    BEGIN
      IF NOT ISNULLGUID("Payment Terms Id") THEN BEGIN
        PaymentTerms.SETRANGE(Id,"Payment Terms Id");
        PaymentTerms.FINDFIRST;
      END;

      VALIDATE("Payment Terms Code",PaymentTerms.Code);
    END;

    LOCAL PROCEDURE UpdateShipmentMethodCode@59();
    VAR
      ShipmentMethod@1000 : Record 10;
    BEGIN
      IF NOT ISNULLGUID("Shipment Method Id") THEN BEGIN
        ShipmentMethod.SETRANGE(Id,"Shipment Method Id");
        ShipmentMethod.FINDFIRST;
      END;

      VALIDATE("Shipment Method Code",ShipmentMethod.Code);
    END;

    [External]
    PROCEDURE UpdateReferencedRecordIds@5();
    BEGIN
      UpdateSellToCustomerId;
      UpdateBillToCustomerId;
      UpdateCurrencyId;
      UpdatePaymentTermsId;
      UpdateShipmentMethodId;

      UpdateGraphContactId;
    END;

    [External]
    PROCEDURE UpdateGraphContactId@6();
    VAR
      contactFound@1003 : Boolean;
    BEGIN
      IF "Sell-to Contact No." = '' THEN
        contactFound := UpdateContactIdFromCustomer
      ELSE
        contactFound := UpdateContactIdFromSellToContactNo;

      IF NOT contactFound THEN
        CLEAR("Contact Graph Id");
    END;

    LOCAL PROCEDURE UpdateContactIdFromCustomer@7() : Boolean;
    VAR
      Customer@1001 : Record 18;
      Contact@1002 : Record 5050;
      GraphIntContact@1000 : Codeunit 5461;
      GraphID@1003 : Text[250];
    BEGIN
      IF ISNULLGUID("Customer Id") THEN
        EXIT(FALSE);

      Customer.SETRANGE(Id,"Customer Id");
      IF NOT Customer.FINDFIRST THEN
        EXIT(FALSE);

      IF NOT GraphIntContact.FindGraphContactIdFromCustomer(GraphID,Customer,Contact) THEN
        EXIT(FALSE);

      "Contact Graph Id" := GraphID;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE UpdateContactIdFromSellToContactNo@8() : Boolean;
    VAR
      Contact@1002 : Record 5050;
      GraphIntegrationRecord@1001 : Record 5451;
      GraphID@1000 : Text[250];
    BEGIN
      IF NOT Contact.GET("Sell-to Contact No.") THEN
        EXIT(FALSE);

      IF NOT GraphIntegrationRecord.FindIDFromRecordID(Contact.RECORDID,GraphID) THEN
        EXIT(FALSE);

      "Contact Graph Id" := GraphID;

      EXIT(TRUE);
    END;

    [External]
    PROCEDURE GetIsRenameAllowed@4() : Boolean;
    BEGIN
      EXIT(IsRenameAllowed);
    END;

    [External]
    PROCEDURE SetIsRenameAllowed@3(RenameAllowed@1000 : Boolean);
    BEGIN
      IsRenameAllowed := RenameAllowed;
    END;

    BEGIN
    END.
  }
}

