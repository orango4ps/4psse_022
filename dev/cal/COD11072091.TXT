OBJECT Codeunit 11072091 Do Orders FLS VisiTour
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            MessageId := STRSUBSTNO(ErrorText);
            CASE Type OF
              1: CreateOrder;
              2: GetSchedule;
              3: FixSchedule;
            ELSE
              ERROR(Text000);
            END;
          END;

  }
  CODE
  {
    VAR
      ServiceOrder@1100409000 : Record 11012823;
      MessageId@1100409006 : Text;
      Type@1100409001 : Integer;
      Text000@1100409002 : TextConst 'DEU=Diese Funktion wurde nicht implementiert.;ENU=This Function not Implemented.;NLD=Deze functie is niet ge‹mplementeerd.';
      FromDate@1100409004 : Date;
      ToDate@1100409005 : Date;
      FromEmployee@1100528300 : Code[20];
      ToEmployee@1100528301 : Code[20];
      NoOfOrders@1100528302 : Integer;
      NodeList@1100409003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      ErrorText@1100409007 : TextConst 'DEU=Auftr„ge nicht erstellt:;ENU=Orders not created:;NLD=Niet aangemaakte orders:';
      OkText@1100409008 : TextConst 'DEU=Auftr„ge erfolgreich erstellt:;ENU=Orders created Successfully:;NLD=Correct verwerkte orders:';

    LOCAL PROCEDURE CreateOrder@1100409001();
    VAR
      FLSVisiTourInterface@1100409000 : Codeunit 11072090;
    BEGIN
      FLSVisiTourInterface.CreateUpdateCall2(ServiceOrder, FALSE);
      MessageId := STRSUBSTNO(OkText);
      ERROR(FLSVisiTourInterface.GetLastMessage);
    END;

    LOCAL PROCEDURE GetSchedule@1100409004();
    VAR
      FLSVisiTourInterface@1100409000 : Codeunit 11072090;
    BEGIN
      FLSVisiTourInterface.GetSchedule(FromDate, ToDate);
      FLSVisiTourInterface.GetNodeList(NodeList);
    END;

    LOCAL PROCEDURE FixSchedule@1100528300();
    VAR
      FLSVisiTourInterface@1100409000 : Codeunit 11072090;
    BEGIN
      FLSVisiTourInterface.FixSchedule(FromDate, FromEmployee, NoOfOrders);
      FLSVisiTourInterface.GetNodeList(NodeList);
    END;

    PROCEDURE SetOrder@1100409002(iServiceOrder@1100409000 : Record 11012823);
    BEGIN
      ServiceOrder := iServiceOrder;
    END;

    PROCEDURE SetType@1100409000(NewType@1100409000 : Integer);
    BEGIN
      Type := NewType;
    END;

    PROCEDURE SetFromToDate@1100409006(iFromDate@1100409000 : Date;iToDate@1100409001 : Date);
    BEGIN
      FromDate := iFromDate;
      ToDate := iToDate;
    END;

    PROCEDURE SetFromToEmployee@1100528301(iFromEmployee@1100409000 : Code[20];iToEmployee@1100409001 : Code[20]);
    BEGIN
      FromEmployee := iFromEmployee;
      ToEmployee := iToEmployee;
    END;

    PROCEDURE SetNoOfOrders@1100528302(iNoOfOrders@1100528300 : Integer);
    BEGIN
      NoOfOrders := iNoOfOrders;
    END;

    PROCEDURE GetNodeList@1100409018(VAR iNodeList@1100409000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList");
    BEGIN
      iNodeList := NodeList;
    END;

    PROCEDURE GetMessageId@1100409003() : Text;
    BEGIN
      EXIT(MessageId);
    END;

    BEGIN
    END.
  }
}

