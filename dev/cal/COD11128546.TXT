OBJECT Codeunit 11128546 GAP Initializer
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            GAPProducts.InitializeProductsCodes;
          END;

  }
  CODE
  {
    VAR
      GAPProducts@1100528000 : Record 11124990;
      InitializeResultMessage@1100528700 : Text;
      Text000@1100528702 : TextConst 'DEU=Client fÅr Werkzeug-Lagerort-App;ENU=Client for Plant Location app;NLD=Cliânt voor Materieel locatie app';
      Text001@1100528701 : TextConst 'DEU=Werkzeug-Lagerort-Bereich;ENU=Plant Location app scope;NLD=Materieel locatie app scope';
      Text002@1100528704 : TextConst 'DEU=Client fÅr Hoch- und Tiefbau-App;ENU=Client for Civil Construction app;NLD=Cliânt voor GWW app';
      Text003@1100528703 : TextConst 'DEU=Hoch- und Tiefbau-App-Bereich;ENU=Civil Construction app scope;NLD=GWW app scope';
      Text004@1100528706 : TextConst 'DEU=Client fÅr Lager-App;ENU=Client for Warehouse app;NLD=Cliânt voor magazijn app';
      Text005@1100528705 : TextConst 'DEU=Lager-App-Bereich;ENU=Warehouse app scope;NLD=Magazijn app scope';
      Text006@1100528708 : TextConst 'DEU=Client fÅr On Site-App;ENU=Client for On Site App;NLD=Cliânt voor on site app';
      Text007@1100528707 : TextConst 'DEU=On Site-App-Bereich;ENU=On Site App scope;NLD=On site app scope';
      Text008@1100528711 : TextConst 'DEU=App-Einrichtung war nicht initialisiert. öberprÅfen Sie Seite %1;ENU=App Setup wasn''t initialized. Please check page %1.;NLD=App instellingen was niet geãnitialiseerd. Controleer pagina %1';
      Text009@1100528710 : TextConst 'DEU=Keine 4PS-Lizenzen fÅr %1 verfÅgbar;ENU=No 4PS license found for %1. Please import new license file.;NLD=Geen 4PS licenties beschikbaar voor %1';
      Text010@1100528709 : TextConst 'DEU=%1 Lizenzen fÅr %2 verfÅgbar.;ENU=%1 licenses available for %2.;NLD=%1 licenties beschikbaar voor %2.';
      Text011@1100528714 : TextConst 'DEU=Das Feld %1 in der Tabelle %2 muss einen Wert enthalten.;ENU=The field %1 of table %2 must have a value.;NLD=Het veld %1 van tabel %2 moet een waarde bevatten.';
      Text012@1100528713 : TextConst 'DEU=Es sind keine Unternehmen fÅr das Lager-App. Stellen Sie das Feld %1 auf Seite %2 ein.;ENU=No companies available for warehouse app. Please set the property %1 in page %2.;NLD=Geen bedrijven beschikbaar voor de magazijn app. Zet het veld %1 in pagina %2.';
      Text013@1100528712 : TextConst 'DEU=%1 darf nicht leer sein.;ENU=%1 Should not be empty.;NLD=%1 mag niet leeg zijn.';
      Text014@1100528716 : TextConst 'DEU=Client fÅr Au·endienst-App;ENU=Client for Field Service App;NLD=Cliânt voor buitendienst app';
      Text015@1100528715 : TextConst 'DEU=Au·endienst-App Bereich;ENU=Field Service App scope;NLD=Buitendienst app scope';

    PROCEDURE InitializePLA@1100528017() : Text;
    VAR
      ClientId@1100528000 : Code[20];
      ApiResourceApp@1100528001 : Text;
      PlantAppSetup@1100528004 : Record 11124924;
    BEGIN
      InitializeResultMessage := '';
      PlantAppSetup.GET();
      PlantAppSetup.TESTFIELD("Use Generic User Management", TRUE);

      GAPProducts.InitializeProductsCodes;

      ClientId := GAPProducts.GetProductCodePLA;
      ApiResourceApp := 'PlaApp';

      CreateAppClient(ClientId, Text000);
      CreateAppGrandTypesByClient(ClientId);

      InsertApiResource(ApiResourceApp, Text001, GAPProducts.GetProductNamePLA, GAPProducts.GetProductCodePLA);
      LinkApiResourceToClient(ClientId, ApiResourceApp);
      CreateAppRedirectUrls(ClientId, GAPProducts.GetProductCodePLA);

      InitializeDefaultAppClaims(ApiResourceApp);
      CreateDefaultAppSetupGroup(GAPProducts.GetProductCodePLA);

      GenerateClientSecret(ClientId);
      CheckConfiguration(GAPProducts.GetProductCodePLA);
      EXIT(InitializeResultMessage);
    END;

    PROCEDURE InitializeCCA@1100528016() : Text;
    VAR
      ClientId@1100528001 : Code[20];
      ApiResourceApp@1100528000 : Text;
      CCAAppSetup@1100528004 : Record 11128520;
    BEGIN
      InitializeResultMessage := '';
      CCAAppSetup.GET;
      CCAAppSetup.TESTFIELD("Use Generic User Management", TRUE);

      GAPProducts.InitializeProductsCodes;

      ClientId := GAPProducts.GetProductCodeCCA;
      ApiResourceApp := 'CcaApp';

      CreateAppClient(ClientId, Text002);
      CreateAppGrandTypesByClient(ClientId);

      InsertApiResource(ApiResourceApp, Text003, GAPProducts.GetProductNameCCA, GAPProducts.GetProductCodeCCA);
      LinkApiResourceToClient(ClientId, ApiResourceApp);
      CreateAppRedirectUrls(ClientId, GAPProducts.GetProductCodeCCA);

      InitializeDefaultAppClaims(ApiResourceApp);
      CreateDefaultAppSetupGroup(GAPProducts.GetProductCodeCCA);

      GenerateClientSecret(ClientId);
      CheckConfiguration(GAPProducts.GetProductCodeCCA);
      EXIT(InitializeResultMessage);
    END;

    PROCEDURE InitializeWHA@1100528555() : Text;
    VAR
      ClientId@1100528003 : Code[20];
      ApiResourceApp@1100528002 : Text;
      EmpolySetup@1100528004 : Record 11126692;
    BEGIN
      InitializeResultMessage := '';
      EmpolySetup.GET;

      GAPProducts.InitializeProductsCodes;

      ClientId := GAPProducts.GetProductCodeWHA;
      ApiResourceApp:= 'WhaApp';

      CreateAppClient(ClientId, Text004);
      CreateAppGrandTypesByClient(ClientId);

      InsertApiResource(ApiResourceApp, Text005, GAPProducts.GetProductNameWHA, GAPProducts.GetProductCodeWHA);
      LinkApiResourceToClient(ClientId, ApiResourceApp);
      CreateAppRedirectUrls(ClientId, GAPProducts.GetProductCodeWHA);

      InitializeDefaultAppClaims(ApiResourceApp);

      CreateDefaultAppSetupGroup(GAPProducts.GetProductCodeWHA);

      GenerateClientSecret(ClientId);
      CheckConfiguration(GAPProducts.GetProductCodeWHA);
      CheckWhaConfiguration;
      EXIT(InitializeResultMessage);
    END;

    PROCEDURE InitializeOSA@1100526000() : Text;
    VAR
      ClientId@1100528003 : Code[20];
      ApiResourceApp@1100528002 : Text;
    BEGIN
      InitializeResultMessage := '';
      GAPProducts.InitializeProductsCodes;

      ClientId := GAPProducts.GetProductCodeOSA;
      ApiResourceApp:= 'OsaApp';

      CreateAppClient(ClientId, Text006);
      CreateAppGrandTypesByClient(ClientId);

      InsertApiResource(ApiResourceApp, Text007, GAPProducts.GetProductNameOSA, GAPProducts.GetProductCodeOSA);
      LinkApiResourceToClient(ClientId, ApiResourceApp);
      CreateAppRedirectUrls(ClientId, GAPProducts.GetProductCodeOSA);

      InitializeDefaultAppClaims(ApiResourceApp);

      CreateDefaultAppSetupGroup(GAPProducts.GetProductCodeOSA);

      GenerateClientSecret(ClientId);
      CheckConfiguration(GAPProducts.GetProductCodeOSA);
      EXIT(InitializeResultMessage);
    END;

    PROCEDURE InitializeFSA@1100528703() : Text;
    VAR
      ClientId@1100528003 : Code[20];
      ApiResourceApp@1100528002 : Text;
    BEGIN
      InitializeResultMessage := '';
      GAPProducts.InitializeProductsCodes;

      ClientId := GAPProducts.GetProductCodeFSA;
      ApiResourceApp:= 'FsaApp';

      CreateAppClient(ClientId, Text014);
      CreateAppGrandTypesByClient(ClientId);

      InsertApiResource(ApiResourceApp, Text015, GAPProducts.GetProductNameFSA, GAPProducts.GetProductCodeFSA);
      LinkApiResourceToClient(ClientId, ApiResourceApp);
      CreateAppRedirectUrls(ClientId, GAPProducts.GetProductCodeFSA);

      InitializeDefaultAppClaims(ApiResourceApp);

      CreateDefaultAppSetupGroup(GAPProducts.GetProductCodeFSA);

      GenerateClientSecret(ClientId);
      CheckConfiguration(GAPProducts.GetProductCodeFSA);
      EXIT(InitializeResultMessage);
    END;

    LOCAL PROCEDURE InsertClaim@1100528556(ApiResource@1100528550 : Code[20];TabelId@1100528551 : Integer;FieldId@1100528552 : Integer);
    VAR
      GAPClaimsByApiResource@1100528000 : Record 11124989;
    BEGIN
      GAPClaimsByApiResource."API Resource" := ApiResource;
      GAPClaimsByApiResource."Table Id" := TabelId;
      GAPClaimsByApiResource."Field Id" := FieldId;

      IF NOT GAPClaimsByApiResource.INSERT(TRUE) THEN
        GAPClaimsByApiResource.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE InsertApiResource@1100528567(Name@1100528550 : Text;Description@1100528551 : Text;DisplayName@1100528552 : Text;ProductCode@1100528553 : Code[10]);
    VAR
      GAPApiResources@1100528000 : Record 11124987;
    BEGIN
      GAPApiResources.Name := Name;
      GAPApiResources.Description := Description;
      GAPApiResources."Display Name" := DisplayName;
      GAPApiResources."Product Code" := ProductCode;

      IF NOT GAPApiResources.INSERT(TRUE) THEN
        GAPApiResources.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE LinkApiResourceToClient@1100528568(ClientId@1100528550 : Text;ApiResource@1100528551 : Text);
    VAR
      GAPApiResourcesByClient@1100528000 : Record 11124988;
    BEGIN
      GAPApiResourcesByClient."Client ID" := ClientId;
      GAPApiResourcesByClient."API Resource" := ApiResource;

      IF NOT GAPApiResourcesByClient.INSERT(TRUE) THEN
        GAPApiResourcesByClient.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE InitializeDefaultAppClaims@1100528557(ApiResourceName@1100528550 : Code[20]);
    VAR
      TableIdGAPAppUserSetup@1100528000 : Integer;
      TableIdGAPAppUser@1100528001 : Integer;
      GAPAppUserSetup@1100528002 : Record 11124976;
      GAPAppUser@1100528003 : Record 11124975;
    BEGIN
      TableIdGAPAppUserSetup := DATABASE::"App User Setup GAP";
      TableIdGAPAppUser := DATABASE::"App User GAP";

      InsertClaim(ApiResourceName, TableIdGAPAppUserSetup, GAPAppUserSetup.FIELDNO(Username));
      InsertClaim(ApiResourceName, TableIdGAPAppUserSetup, GAPAppUserSetup.FIELDNO("Resource No."));
      InsertClaim(ApiResourceName, TableIdGAPAppUserSetup, GAPAppUserSetup.FIELDNO("Resource Company"));
      InsertClaim(ApiResourceName, TableIdGAPAppUserSetup, GAPAppUserSetup.FIELDNO("Employee No."));
      InsertClaim(ApiResourceName, TableIdGAPAppUserSetup, GAPAppUserSetup.FIELDNO("Employee Company"));
      InsertClaim(ApiResourceName, TableIdGAPAppUserSetup, GAPAppUserSetup.FIELDNO("Resource Name"));
      InsertClaim(ApiResourceName, TableIdGAPAppUser, GAPAppUser.FIELDNO(Name));
    END;

    LOCAL PROCEDURE CreateAppClient@1100528000(ClientId@1100528000 : Code[20];ClientName@1100528001 : Text);
    VAR
      GAPClient@1100528002 : Record 11124983;
    BEGIN
      GAPClient."Client ID" := ClientId;
      GAPClient."Client Name" := ClientName;
      GAPClient."Allow Offline Acces" := TRUE;
      GAPClient."Require Client Secret" := FALSE;
      GAPClient."Allow Acces Tokens Via Browser" := TRUE;
      GAPClient."Require Consent" := FALSE;

      IF NOT GAPClient.INSERT(TRUE) THEN
        GAPClient.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE CreateAppGrandTypesByClient@1100528002(ClientId@1100528001 : Code[20]);
    VAR
      GAPGrandTypesByClient@1100528000 : Record 11124984;
    BEGIN
      IF NOT GAPGrandTypesByClient.GET(ClientId, GAPGrandTypesByClient."Grant Type"::ClientCredentials) THEN BEGIN
        GAPGrandTypesByClient."Client ID" := ClientId;
        GAPGrandTypesByClient."Grant Type" := GAPGrandTypesByClient."Grant Type"::ClientCredentials;
        GAPGrandTypesByClient.INSERT(TRUE);
      END;

      IF NOT GAPGrandTypesByClient.GET(ClientId, GAPGrandTypesByClient."Grant Type"::Hybrid) THEN BEGIN
        GAPGrandTypesByClient."Client ID" := ClientId;
        GAPGrandTypesByClient."Grant Type" := GAPGrandTypesByClient."Grant Type"::Hybrid;
        GAPGrandTypesByClient.INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE CreateAppRedirectUrls@1100528004(ClientId@1100528000 : Code[20];ProductCode@1100528001 : Code[10]);
    VAR
      GAPRedirectURL@1100528002 : Record 11124985;
    BEGIN
      GAPRedirectURL."Client ID" := ClientId;
      GAPRedirectURL.Type := GAPRedirectURL.Type::RedirectUri;
      GAPRedirectURL.URL := STRSUBSTNO('fps.%1://callbackLogin',LOWERCASE(ProductCode));
      IF NOT GAPRedirectURL.INSERT(TRUE) THEN
        GAPRedirectURL.MODIFY(TRUE);

      GAPRedirectURL."Client ID" := ClientId;
      GAPRedirectURL.Type := GAPRedirectURL.Type::PostLogoutRedirectUri;
      GAPRedirectURL.URL := STRSUBSTNO('fps.%1://callbackLogout',LOWERCASE(ProductCode));
      IF NOT GAPRedirectURL.INSERT(TRUE) THEN
        GAPRedirectURL.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE CreateDefaultAppSetupGroup@1100528001(ProductCode@1100528001 : Code[10]);
    VAR
      GAPAppSetupGroup@1100528002 : Record 11124992;
      TEXT000@1100528003 : TextConst 'DEU=Standard Einrichtung Gruppe fÅr;ENU=Default setup group for;NLD=Standaard instellingen groep voor';
    BEGIN
      GAPProducts.GET(ProductCode);
      GAPAppSetupGroup.Name := STRSUBSTNO('GR_%1', ProductCode);
      GAPAppSetupGroup."Product Code" := ProductCode;
      GAPAppSetupGroup.Description := STRSUBSTNO('%1 %2',TEXT000, GAPProducts.Name);

      IF NOT GAPAppSetupGroup.INSERT(TRUE) THEN
        GAPAppSetupGroup.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE GenerateClientSecret@1100528302(ClientId@1100526000 : Code[10]);
    VAR
      StringFunctions@1100525000 : Codeunit 11012273;
      ClientSecretGAP@1100525001 : Record 11124986;
      ClientSecret@1100526001 : Text;
    BEGIN
      StringFunctions.GeneratePasswordPlainText(ClientSecret, 16);
      ClientSecretGAP.SETRANGE("Client ID", ClientId);

      IF ClientSecretGAP.COUNT > 0 THEN
        ClientSecretGAP.DELETEALL;

      ClientSecretGAP.INIT;
      ClientSecretGAP."Client ID" := ClientId;
      ClientSecretGAP."Client Secret" := ClientSecret;
      ClientSecretGAP.INSERT;
    END;

    LOCAL PROCEDURE CheckConfiguration@1100528700(ProductCode@1100528701 : Code[10]);
    VAR
      AppSetup@1100528700 : Record 11130033;
      AppFeature@1100528702 : Record 11130030;
      WebServiceSet@1100528703 : Record 11229298;
      LicenseManagement@1100528704 : Codeunit 11229289;
      PageAppSetup@1100528706 : Page 11130778;
      PageAppFeatures@1100528711 : Page 11130770;
      Licenses@1100528707 : Integer;
      PermissionManager@1100528705 : Codeunit 9002;
    BEGIN
      IF NOT AppFeature.IsFeatureInitialized(ProductCode) THEN
        AppFeature.InitializeFeatureByProductCode(ProductCode);

      IF NOT AppSetup.GET THEN BEGIN
        AppSetup.INSERT;
        InitializeResultMessage += GetMessageSeparateCharacters + STRSUBSTNO(Text008, PageAppSetup.CAPTION);
      END;

      IF NOT (PermissionManager.SoftwareAsAService) THEN BEGIN
        Licenses := LicenseManagement.GetLicenseCountByProductCode(ProductCode);
        IF Licenses = 0 THEN
          InitializeResultMessage += GetMessageSeparateCharacters + STRSUBSTNO(Text009, ProductCode)
        ELSE
          InitializeResultMessage += GetMessageSeparateCharacters + STRSUBSTNO(Text010, Licenses, ProductCode);

        IF GUIALLOWED THEN BEGIN // Not from 4PS Data Upgrade
          CODEUNIT.RUN(CODEUNIT::"Possible Web Service Mgt");
          IF WebServiceSet.GET(ProductCode) THEN
            WebServiceSet.TogglePublishWebService(WebServiceSet,TRUE);

          IF WebServiceSet.GET('GAP') THEN
            WebServiceSet.TogglePublishWebService(WebServiceSet,TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE CheckWhaConfiguration@1100528701();
    VAR
      CompanyData@1100528702 : Record 11020674;
      EmpolySetup@1100528700 : Record 11126692;
      Companies@1100528704 : Page 357;
      IntercompanyRelation@1100528705 : Record 11012057;
    BEGIN
      EmpolySetup.GET;
      IF EmpolySetup."Setup Company" = '' THEN
        InitializeResultMessage += GetMessageSeparateCharacters + STRSUBSTNO(Text011, EmpolySetup.FIELDCAPTION("Setup Company"), EmpolySetup.TABLECAPTION);
      IF EmpolySetup."Proxy URL" = '' THEN
        InitializeResultMessage += GetMessageSeparateCharacters + STRSUBSTNO(Text011, EmpolySetup.FIELDCAPTION("Proxy URL"), EmpolySetup.TABLECAPTION);

      CompanyData.SETRANGE(CompanyData."Empoly App Company", TRUE);
      IF NOT CompanyData.FINDFIRST THEN
        InitializeResultMessage += GetMessageSeparateCharacters + STRSUBSTNO(Text012, CompanyData.FIELDCAPTION("Empoly App Company"), Companies.CAPTION);

      IF IntercompanyRelation.ISEMPTY THEN
        InitializeResultMessage += GetMessageSeparateCharacters + STRSUBSTNO(Text013, IntercompanyRelation.TABLECAPTION);
    END;

    LOCAL PROCEDURE GetMessageSeparateCharacters@1100528702() : Text;
    BEGIN
      EXIT('\ - ')
    END;

    BEGIN
    END.
  }
}

