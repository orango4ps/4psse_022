OBJECT Table 11126755 DSP LIP Request
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnDelete=VAR
               DSPLIPRequestLine@1100528300 : Record 11126756;
             BEGIN
               TESTFIELD("Processed On");
               DSPLIPRequestLine.SETRANGE("Entry No.", "Entry No.");
               DSPLIPRequestLine.DELETEALL(TRUE);
             END;

    CaptionML=ENU=DSP MA Request;
    LookupPageID=Page11126963;
    DrillDownPageID=Page11126963;
  }
  FIELDS
  {
    { 10  ;   ;Entry No.           ;BigInteger    ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=Entry No.;
                                                              SVE=L”pnr];
                                                   Editable=No }
    { 20  ;   ;Company Name        ;Text30        ;TableRelation=Company.Name;
                                                   CaptionML=[ENU=Company Name;
                                                              SVE=F”retagsnamn];
                                                   Editable=No }
    { 30  ;   ;Processed On        ;DateTime      ;CaptionML=[ENU=Processed on;
                                                              SVE=Behandlat den];
                                                   Editable=No }
    { 40  ;   ;Receipient Id       ;Code50        ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Receipient Id }
    { 50  ;   ;Sender Id           ;Code50        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Sender Id;
                                                              SVE=Avs„ndar-ID] }
    { 100 ;   ;Request Id          ;Text50        ;CaptionML=ENU=Request Id }
    { 110 ;   ;Message Version     ;Text10        ;CaptionML=ENU=Message Version }
    { 120 ;   ;Principal           ;Text50        ;CaptionML=[ENU=Principal;
                                                              SVE=Uppdragsgivare] }
    { 130 ;   ;Phone               ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone;
                                                              SVE=Telefon] }
    { 140 ;   ;Mobile Phone        ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Mobile Phone;
                                                              SVE=Mobiltelefon] }
    { 150 ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=E-Mail;
                                                              SVE=E-post] }
    { 160 ;   ;Service Area Contract Code;Text50  ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Service Area Contract Code }
    { 520 ;   ;Request Version     ;Integer       ;CaptionML=ENU=Request Version }
    { 550 ;   ;Xml Message         ;BLOB          ;CaptionML=ENU=XML Message }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      MustHaveValueErr@1100528300 : TextConst 'ENU=" must have a value."';

    PROCEDURE GetXmlMessage@1100528306(VAR DnXmlDocument@1100528301 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      OStream@1100528300 : OutStream;
    BEGIN
      IF (NOT "Xml Message".HASVALUE) THEN
        FIELDERROR("Xml Message", MustHaveValueErr);

      CALCFIELDS("Xml Message");
      "Xml Message".CREATEOUTSTREAM(OStream);
      DnXmlDocument := DnXmlDocument.XmlDocument();
      DnXmlDocument.Load(OStream);
    END;

    [External]
    PROCEDURE ShowXmlMessage@1100528300();
    VAR
      TempXMLBuffer@1100528302 : TEMPORARY Record 1235;
      XMLViewer4PS@1100528301 : Page 11129908;
      IStream@1100528300 : InStream;
    BEGIN
      IF (NOT "Xml Message".HASVALUE) THEN
        EXIT;

      CALCFIELDS("Xml Message");
      "Xml Message".CREATEINSTREAM(IStream);
      TempXMLBuffer.Load(IStream);
      XMLViewer4PS.SetTempTable(TempXMLBuffer);
      XMLViewer4PS.SetShowAttributes(FALSE);
      XMLViewer4PS.RUNMODAL;
    END;

    BEGIN
    END.
  }
}

