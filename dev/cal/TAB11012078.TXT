OBJECT Table 11012078 Hour Line Template Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF ("Receiving Company" = '') THEN
                 "Receiving Company" := COMPANYNAME;
             END;

    OnModify=BEGIN
               GetObjectNoDescription;
               CheckWageComponents;
             END;

    CaptionML=ENU=Hour Line Template Line;
    LookupPageID=Page11012000;
  }
  FIELDS
  {
    { 10  ;   ;Source              ;Option        ;CaptionML=[ENU=Source;
                                                              NOR=Source;
                                                              SVE=K„lla];
                                                   OptionCaptionML=[ENU=Hour Accounting,Site Mngmnt. Hours;
                                                                    SVE=Tidrapportering,Byggledning Timmar];
                                                   OptionString=Hour Accounting,Site Mngmnt. Hours }
    { 20  ;   ;Receiving Company   ;Text30        ;TableRelation=Company;
                                                   CaptionML=[ENU=Receiving Company;
                                                              NOR=Mottakselskap;
                                                              SVE=Mottagningsf”retag] }
    { 30  ;   ;Template Code       ;Code20        ;TableRelation="Hour Line Template".Code WHERE (Source=FIELD(Source),
                                                                                                  Receiving Company=FIELD(Receiving Company));
                                                   CaptionML=[ENU=Template Code;
                                                              NOR=Malkode;
                                                              SVE=Mallkod];
                                                   NotBlank=Yes }
    { 40  ;   ;Start Date          ;Date          ;OnValidate=BEGIN
                                                                IF (DATE2DWY("Start Date", 1) <> 1) THEN BEGIN
                                                                  "Start Date" := DWY2DATE(1, DATE2DWY("Start Date", 2), DATE2DWY("Start Date", 3));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Start Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum];
                                                   NotBlank=Yes }
    { 50  ;   ;Type                ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Hour Line Template".Type WHERE (Source=FIELD(Source),
                                                                                                       Receiving Company=FIELD(Receiving Company),
                                                                                                       Code=FIELD(Template Code)));
                                                   CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Typ];
                                                   OptionCaptionML=ENU=Project,Indirect,Service,Plant,Unmanned Plant;
                                                   OptionString=Project,Indirect,Service,Plant,UnmannedPlant;
                                                   Editable=No }
    { 60  ;   ;Object No.          ;Code20        ;OnValidate=BEGIN
                                                                ChangeIC;
                                                                CALCFIELDS(Type);
                                                                CASE Type OF
                                                                  Type::Project,
                                                                  Type::Plant,
                                                                  Type::UnmannedPlant:
                                                                    Job.GET("Object No.");
                                                                  Type::Indirect:
                                                                    CostCode.GET("Object No.");
                                                                  Type::Service:
                                                                    ServiceOrder.GET("Object No.");
                                                                END;
                                                                GetObjectNoDescription;

                                                                IF Type IN [Type::Plant, Type::UnmannedPlant] THEN
                                                                    FillDefaultPlantCompany();
                                                              END;

                                                   OnLookup=BEGIN
                                                              ChangeIC;
                                                              CALCFIELDS(Type);
                                                              CASE Type OF
                                                                Type::Project,
                                                                Type::Plant,
                                                                Type::UnmannedPlant: BEGIN
                                                                  IF (Job.GET("Object No.")) THEN;
                                                                  IF (PAGE.RUNMODAL(0, Job) = ACTION::LookupOK) THEN
                                                                    VALIDATE("Object No.", Job."No.");
                                                                END;
                                                                Type::Indirect: BEGIN
                                                                  IF (CostCode.GET("Object No.")) THEN;
                                                                  IF (PAGE.RUNMODAL(0, CostCode) = ACTION::LookupOK) THEN
                                                                    VALIDATE("Object No.", CostCode.Code);
                                                                END;
                                                                Type::Service: BEGIN
                                                                  IF (ServiceOrder.GET("Object No.")) THEN;
                                                                  IF (PAGE.RUNMODAL(0, ServiceOrder) = ACTION::LookupOK) THEN
                                                                    VALIDATE("Object No.", ServiceOrder."No.");
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Object No.;
                                                              NOR=Objektnr.;
                                                              SVE=Objektnr] }
    { 61  ;   ;Object Description  ;Text100       ;CaptionML=[ENU=Object Description;
                                                              NOR=Objektbeskrivelse;
                                                              SVE=Objektbeskrivning];
                                                   Editable=No }
    { 70  ;   ;Department Code     ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Department Description");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Avdelingskode;
                                                              SVE=Mottagande avdelningskod];
                                                   CaptionClass='1,1,1' }
    { 71  ;   ;Department Description;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Global Dimension No.=CONST(1),
                                                                                                    Code=FIELD(Department Code)));
                                                   CaptionML=ENU=Department Description;
                                                   Editable=No;
                                                   CaptionClass='1,11012000,1, , ' + Text000 }
    { 80  ;   ;Cost Object         ;Code20        ;OnValidate=BEGIN
                                                                CALCFIELDS("Cost Object Description");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ChangeIC;
                                                              DimensionValue.SETRANGE(DimensionValue."Global Dimension No.", 2);
                                                              DimensionValue.SETFILTER("Cost Type", '%1|%2|%3',
                                                                DimensionValue."Cost Type"::Labor, DimensionValue."Cost Type"::Plant, DimensionValue."Cost Type"::Sundry);
                                                              IF (PAGE.RUNMODAL(0, DimensionValue) = ACTION::LookupOK) THEN
                                                                VALIDATE("Cost Object", DimensionValue.Code);
                                                            END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 81  ;   ;Cost Object Description;Text50     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Global Dimension No.=CONST(2),
                                                                                                    Code=FIELD(Cost Object)));
                                                   CaptionML=[ENU=Cost Object Description;
                                                              NOR=Kostnadsobjekt, Beskrivelse;
                                                              SVE=Kostnadsobjekt, beskrivning];
                                                   Editable=No;
                                                   CaptionClass='1,11012000,2, , ' + Text000 }
    { 90  ;   ;Wage Component      ;Code20        ;TableRelation="Wage Component";
                                                   OnValidate=BEGIN
                                                                CheckWageComponents;
                                                                CALCFIELDS("Wage Component Description");
                                                              END;

                                                   CaptionML=[ENU=Wage Component;
                                                              NOR=L›nnsart;
                                                              SVE=L”neart] }
    { 91  ;   ;Wage Component Description;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Wage Component".Description WHERE (Code=FIELD(Wage Component)));
                                                   CaptionML=[ENU=Wage Component Description;
                                                              NOR=Beskrivelse av l›nnsart;
                                                              SVE=Beskrivning av l”neart];
                                                   Editable=No }
    { 100 ;   ;Element             ;Code20        ;OnValidate=BEGIN
                                                                ChangeIC;
                                                                CALCFIELDS(Type);
                                                                CASE Type OF
                                                                  Type::Project:
                                                                    ProjectElement.GET("Object No.", Element);
                                                                END;
                                                                GetElementDescription;
                                                              END;

                                                   OnLookup=BEGIN
                                                              ChangeIC;
                                                              CALCFIELDS(Type);
                                                              CASE Type OF
                                                                Type::Project: BEGIN
                                                                  ProjectElement.SETRANGE("Project No.", "Object No.");
                                                                  IF (ProjectElement.GET("Object No.", Element)) THEN;
                                                                  IF (PAGE.RUNMODAL(0, ProjectElement) = ACTION::LookupOK) THEN
                                                                    VALIDATE(Element, ProjectElement.Element);
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 101 ;   ;Element Description ;Text50        ;CaptionML=[ENU=Element Description;
                                                              NOR=Elementbeskrivelse;
                                                              SVE=Elementbeskrivning];
                                                   Editable=No }
    { 170 ;   ;Plant Company       ;Text30        ;TableRelation=Company;
                                                   OnValidate=VAR
                                                                PlantMgtCompRec@1100525001 : Record 11020586;
                                                                TmpPlantMgtCompRec@1100525000 : TEMPORARY Record 11020586;
                                                              BEGIN
                                                                IF "Plant Company" <> '' THEN BEGIN
                                                                  IF NOT PlantMgtCompRec.GET("Plant Company") THEN
                                                                    ERROR(Text005, "Plant Company", PlantMgtCompRec.TABLECAPTION)
                                                                  ELSE BEGIN
                                                                    IF "Object No." <> '' THEN BEGIN
                                                                      PlantMgtCompRec.GetPlantCompaniesForProject("Object No.", TmpPlantMgtCompRec, "Receiving Company", FALSE);
                                                                      IF NOT TmpPlantMgtCompRec.GET("Plant Company") THEN
                                                                        ERROR(Text006, "Object No.", FIELDCAPTION("Plant Company"), "Plant Company");
                                                                    END;
                                                                  END;
                                                                END;

                                                                IF ("Plant Company" = '') OR ("Plant Company" <> xRec."Plant Company") THEN BEGIN
                                                                  "Plant Location" := '';
                                                                  "Plant Type" := '';
                                                                  "Plant No." := '';
                                                                  "Cost Component Plant" := '';
                                                                  "Plant Location" := FillDefaultPlantLoc();
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupPlantCompany();
                                                            END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Plant Company;
                                                              SVE=Maskinf”retag];
                                                   Description=Supplying Plant Company }
    { 180 ;   ;Plant Location      ;Code20        ;OnValidate=VAR
                                                                PlantLocRec@1100525000 : Record 11012554;
                                                              BEGIN
                                                                IF "Object No." = '' THEN
                                                                  "Plant Location" := '';
                                                                IF "Plant Location" <> '' THEN BEGIN
                                                                  IF (NOT (Type IN [Type::Plant, Type::UnmannedPlant])) THEN
                                                                    FIELDERROR(Type);

                                                                  TESTFIELD("Plant Company");
                                                                  PlantLocRec.CHANGECOMPANY("Plant Company");
                                                                  PlantLocRec.GET("Plant Location");
                                                                  PlantLocRec.CheckBlockFromOtherCompany(1, FALSE, TRUE, "Plant Company");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupPlantLocation();
                                                            END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Plant Location;
                                                              SVE=Maskinutplacering] }
    { 190 ;   ;Plant Type          ;Code20        ;OnValidate=VAR
                                                                PlantTypeRec@1100525000 : Record 11012551;
                                                              BEGIN
                                                                IF ("Plant Type" = '') OR ("Plant Type" <> xRec."Plant Type") THEN
                                                                  "Plant No." := '';
                                                                IF "Plant Type" <> '' THEN BEGIN
                                                                  IF (NOT (Type IN [Type::Plant, Type::UnmannedPlant])) THEN
                                                                    FIELDERROR(Type);

                                                                  TESTFIELD("Plant Company");
                                                                  PlantTypeRec.CHANGECOMPANY("Plant Company");
                                                                  PlantTypeRec.GET("Plant Type");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupPlantType();
                                                            END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Plant Type;
                                                              SVE=Maskintyp] }
    { 200 ;   ;Plant No.           ;Code10        ;OnValidate=VAR
                                                                PlantNoRec@1100525000 : Record 11012552;
                                                              BEGIN
                                                                IF "Plant No." <> '' THEN BEGIN
                                                                  IF (NOT (Type IN [Type::Plant, Type::UnmannedPlant])) THEN
                                                                    FIELDERROR(Type);

                                                                  PlantNoRec.CHANGECOMPANY("Plant Company");
                                                                  PlantNoRec.GET("Plant Type", "Plant No.");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupPlantNo();
                                                            END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Plant No.;
                                                              SVE=Maskinnr] }
    { 210 ;   ;Cost Component Plant;Code10        ;OnValidate=VAR
                                                                PlantCostCompRec@1100525000 : Record 11012575;
                                                              BEGIN
                                                                IF "Cost Component Plant" <> '' THEN BEGIN
                                                                  TESTFIELD(Type, Type::Plant);

                                                                  PlantCostCompRec.CHANGECOMPANY("Plant Company");
                                                                  PlantCostCompRec.GET("Cost Component Plant");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupCostCompPlant();
                                                            END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Cost Component Plant;
                                                              SVE=Kostnadsdel, Maskin] }
  }
  KEYS
  {
    {    ;Source,Receiving Company,Template Code,Start Date;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Job@1100528302 : Record 11072003;
      ServiceOrder@1100528301 : Record 11012823;
      CostCode@1100528300 : Record 11012083;
      ProjectElement@1100528303 : Record 11012010;
      DimensionValue@1100528500 : Record 349;
      Text000@1100527350 : TextConst 'ENU=Description;SVE=Beskrivning';
      Text005@1100528501 : TextConst 'ENU="''%1'' is not setup as %2. ";SVE="''%1'' har inte st„llts in som %2. "';
      Text006@1100528502 : TextConst 'ENU=There is no plant location of project ''%1'' present in %2 ''%3''.;SVE=Det finns ingen Maskinsplats f”r projektet ''%1'' i %2 ''%3''.';

    PROCEDURE GetObjectNoDescription@1100528300();
    BEGIN
      ChangeIC;
      "Object Description" := '';
      CALCFIELDS(Type);
      CASE Type OF
        Type::Project,
        Type::Plant,
        Type::UnmannedPlant:
          IF Job.GET("Object No.") THEN
            "Object Description" := Job.Description;
        Type::Indirect:
          IF CostCode.GET("Object No.") THEN
            "Object Description" := CostCode.Description;
        Type::Service:
          IF ServiceOrder.GET("Object No.") THEN
            "Object Description" := ServiceOrder.Description;
      END;
    END;

    PROCEDURE GetElementDescription@1100528301();
    BEGIN
      ChangeIC;
      "Element Description" := '';
      IF (ProjectElement.GET("Object No.", Element)) THEN
        "Element Description" := ProjectElement.Description;
    END;

    PROCEDURE ChangeIC@1100528313();
    BEGIN
      Job.CHANGECOMPANY("Receiving Company");
      ServiceOrder.CHANGECOMPANY("Receiving Company");
      ProjectElement.CHANGECOMPANY("Receiving Company");
      CostCode.CHANGECOMPANY("Receiving Company");
      DimensionValue.CHANGECOMPANY("Receiving Company");
    END;

    PROCEDURE CheckWageComponents@1100528302();
    VAR
      WageComponent@1100528300 : Record 11012014;
    BEGIN
      IF ("Wage Component" <> '') THEN
        WageComponent.GET("Wage Component");
    END;

    PROCEDURE LookupPlantCompany@1100525014();
    VAR
      PlantMgtCompRec@1100525001 : Record 11020586;
      TmpPlantMgtCompRec@1100525002 : TEMPORARY Record 11020586;
      NoOfPlantComps@1100525000 : Integer;
    BEGIN
      IF (NOT (Type IN [Type::Plant, Type::UnmannedPlant])) OR ("Receiving Company" = '') THEN
        EXIT;
      PlantMgtCompRec.GetPlantCompany(TRUE, NoOfPlantComps, "Receiving Company");
      IF ("Object No." <> '') THEN BEGIN
        NoOfPlantComps := 0;
        IF NoOfPlantComps = 0 THEN
          NoOfPlantComps := PlantMgtCompRec.GetPlantCompaniesForProject("Object No.", TmpPlantMgtCompRec, "Receiving Company",FALSE);
        IF NoOfPlantComps = 0 THEN BEGIN
          PlantMgtCompRec.CHANGECOMPANY("Receiving Company");
          PlantMgtCompRec."Plant Company" := "Plant Company";
          PAGE.RUNMODAL(0, PlantMgtCompRec);
        END ELSE BEGIN
          TmpPlantMgtCompRec."Plant Company" := "Plant Company";
          IF Type = Type::UnmannedPlant THEN BEGIN
             PAGE.RUNMODAL(0, TmpPlantMgtCompRec)
          END ELSE BEGIN
            IF PAGE.RUNMODAL(0, TmpPlantMgtCompRec) = ACTION::LookupOK THEN BEGIN
              IF TmpPlantMgtCompRec."Plant Company" <> "Plant Company" THEN BEGIN
                xRec."Plant Company" := "Plant Company";
                VALIDATE("Plant Company", TmpPlantMgtCompRec."Plant Company");
              END;
            END;
          END;
        END;
      END ELSE BEGIN
        PlantMgtCompRec.CHANGECOMPANY("Receiving Company");
        PlantMgtCompRec."Plant Company" := "Plant Company";
        IF Type = Type::UnmannedPlant THEN
          PAGE.RUNMODAL(0, PlantMgtCompRec)
        ELSE BEGIN
          IF PAGE.RUNMODAL(0, PlantMgtCompRec) = ACTION::LookupOK THEN
            VALIDATE("Plant Company", PlantMgtCompRec."Plant Company");
        END;
      END;
    END;

    PROCEDURE LookupPlantLocation@1100525013();
    VAR
      PlantLocRec@1100525001 : Record 11012554;
      ProjCompany@1100525000 : Text[30];
    BEGIN
      IF (NOT (Type IN [Type::Plant, Type::UnmannedPlant])) OR ("Object No." = '') THEN
        EXIT;
      IF "Plant Company" <> "Receiving Company" THEN
        ProjCompany := "Receiving Company";

      PlantLocRec.CHANGECOMPANY("Plant Company");
      PlantLocRec.SETCURRENTKEY("Company Name", "Project No.", "Service Order No.", "Employee No.");
      PlantLocRec.FILTERGROUP(9);
      IF Type = Type::UnmannedPlant THEN
        PlantLocRec.SETRANGE("Service Order No.", "Object No.")
      ELSE
        PlantLocRec.SETRANGE("Project No.", "Object No.");
      PlantLocRec.SETRANGE("Company Name", ProjCompany);
      PlantLocRec.FILTERGROUP(0);
      PlantLocRec.Code := "Plant Location";
      PlantLocRec."Project No." := "Object No.";
      PlantLocRec."Company Name" := ProjCompany;
      IF PAGE.RUNMODAL(0, PlantLocRec) = ACTION::LookupOK THEN
        VALIDATE("Plant Location", PlantLocRec.Code);
    END;

    PROCEDURE LookupPlantType@1100525001();
    VAR
      PlantSetup@1100529900 : Record 11012550;
      PlantTypeRec@1100525000 : Record 11012551;
    BEGIN
      IF (NOT (Type IN [Type::Plant, Type::UnmannedPlant])) THEN
        EXIT;
      PlantSetup.CHANGECOMPANY("Plant Company");
      PlantTypeRec.CHANGECOMPANY("Plant Company");
      PlantSetup.GET;
      IF NOT PlantSetup."No Filter on Hr. Acc. Type" THEN BEGIN
        IF Type = Type::UnmannedPlant THEN  //C-028223 (Soft filter)
          PlantTypeRec.SETRANGE("Hour Accounting Type", PlantTypeRec."Hour Accounting Type"::Unmanned)
        ELSE
          PlantTypeRec.SETRANGE("Hour Accounting Type", PlantTypeRec."Hour Accounting Type"::Manned);
      END;
      PlantTypeRec.Code := "Plant Type";
      IF PAGE.RUNMODAL(0, PlantTypeRec) = ACTION::LookupOK THEN
        VALIDATE("Plant Type", PlantTypeRec.Code);
    END;

    PROCEDURE LookupPlantNo@1100525003();
    VAR
      PlantNoRec@1100525000 : Record 11012552;
    BEGIN
      IF (NOT (Type IN [Type::Plant, Type::UnmannedPlant])) THEN
        EXIT;
      PlantNoRec.CHANGECOMPANY("Plant Company");
      PlantNoRec.SETRANGE("Plant Type", "Plant Type");
      PlantNoRec."Plant Type" := "Plant Type";
      PlantNoRec."No." := "Plant No.";
      IF PAGE.RUNMODAL(0, PlantNoRec) = ACTION::LookupOK THEN
        VALIDATE("Plant No.", PlantNoRec."No.");
    END;

    PROCEDURE LookupCostCompPlant@1100525005();
    VAR
      PlantCostCompRec@1100525000 : Record 11012575;
    BEGIN
      IF (Type <> Type::Plant) THEN
        EXIT;
      PlantCostCompRec.CHANGECOMPANY("Plant Company");
      PlantCostCompRec.Code := "Cost Component Plant";
      IF PAGE.RUNMODAL(0, PlantCostCompRec) = ACTION::LookupOK THEN
        VALIDATE("Cost Component Plant", PlantCostCompRec.Code);
    END;

    PROCEDURE FillDefaultPlantCompany@1100525004();
    VAR
      PlantMgtCompRec@1100525000 : Record 11020586;
      TmpPlantMgtCompRec@1100525003 : TEMPORARY Record 11020586;
      NoOfPlantComps@1100525001 : Integer;
      NewPlantCompany@1100525002 : Text[30];
    BEGIN
      IF "Receiving Company" = '' THEN BEGIN
        "Plant Company" := '';
        "Plant Location" := '';
        "Plant Type" := '';
        "Plant No." := '';
        "Cost Component Plant" := '';
        EXIT;
      END;

      CASE Type OF
        Type::UnmannedPlant:
          BEGIN
            NewPlantCompany := '';  //*For unmanned plant only the supplying company allowed
            IF ("Object No." <> '') THEN BEGIN
              PlantMgtCompRec.GetPlantCompaniesForProject("Object No.", TmpPlantMgtCompRec, "Receiving Company", FALSE);
              IF TmpPlantMgtCompRec.GET(COMPANYNAME) THEN
                NewPlantCompany := COMPANYNAME;
            END ELSE BEGIN
              IF PlantMgtCompRec.GET(COMPANYNAME) THEN
                NewPlantCompany := COMPANYNAME;
            END;
          END;
        Type::Plant:
          BEGIN
            NewPlantCompany := "Plant Company";
            PlantMgtCompRec."Plant Company" := PlantMgtCompRec.GetPlantCompany(TRUE, NoOfPlantComps, "Receiving Company");
            IF (PlantMgtCompRec."Plant Company" <> '') AND (NoOfPlantComps = 1) THEN
              NewPlantCompany := PlantMgtCompRec."Plant Company";
            IF (NoOfPlantComps > 1) AND ("Object No." = '') THEN BEGIN
              IF ("Plant Company" = '') OR (NOT PlantMgtCompRec.GET("Plant Company")) THEN BEGIN
                NewPlantCompany := '';
                PlantMgtCompRec.SETRANGE(Default, TRUE);
                IF PlantMgtCompRec.FINDFIRST THEN
                  NewPlantCompany := PlantMgtCompRec."Plant Company";
                PlantMgtCompRec.SETRANGE(Default);  //* Reset filter
              END;
            END;
            IF (NoOfPlantComps > 1) AND ("Object No." <> '') THEN BEGIN
              IF PlantMgtCompRec.GetPlantCompaniesForProject("Object No.", TmpPlantMgtCompRec, "Receiving Company", FALSE) = 1 THEN BEGIN
                NewPlantCompany := TmpPlantMgtCompRec."Plant Company";
              END ELSE BEGIN
                IF ("Plant Company" = '') OR (NOT TmpPlantMgtCompRec.GET("Plant Company")) THEN BEGIN
                  NewPlantCompany := '';
                  TmpPlantMgtCompRec.SETRANGE(Default, TRUE);
                  IF TmpPlantMgtCompRec.FINDFIRST THEN
                    NewPlantCompany := TmpPlantMgtCompRec."Plant Company";
                  TmpPlantMgtCompRec.SETRANGE(Default);  //* Reset filter
                END;
              END;
            END;
          END;
      END;

      IF "Plant Company" <> NewPlantCompany THEN BEGIN
        "Plant Company" := NewPlantCompany;
        "Plant Location" := '';
        "Plant Type" := '';
        "Plant No." := '';
        "Cost Component Plant" := '';
      END;
    END;

    PROCEDURE FillDefaultPlantLoc@1100525012() : Code[20];
    VAR
      PlantLocRec@1100525001 : Record 11012554;
      lvDefPlantLoc@1100525002 : Code[20];
      lvProjCompany@1100525000 : Text[30];
    BEGIN
      //* Default location only when there is only 1 plant location of the project.
      IF "Plant Company" = '' THEN
        EXIT('');
      IF "Object No." <> '' THEN BEGIN
        IF "Plant Company" <> "Receiving Company" THEN
          lvProjCompany := "Receiving Company";
        PlantLocRec.CHANGECOMPANY("Plant Company");
        PlantLocRec.SETCURRENTKEY("Company Name", "Project No.", "Service Order No.", "Employee No.");
        PlantLocRec.SETRANGE("Project No.", "Object No.");
        PlantLocRec.SETRANGE("Company Name", lvProjCompany);
        PlantLocRec.SETRANGE(Blocked, FALSE);
        IF PlantLocRec.FINDFIRST THEN BEGIN
          lvDefPlantLoc := PlantLocRec.Code;
          IF PlantLocRec.NEXT <> 0 THEN
            lvDefPlantLoc := '';
        END;
      END;
      EXIT(lvDefPlantLoc);
    END;

    BEGIN
    END.
  }
}

