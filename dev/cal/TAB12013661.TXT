OBJECT Table 12013661 EX Column
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF513000;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               RecRef.GETTABLE(Rec);
               WebSetting.TableChange(RecRef);
             END;

    OnModify=BEGIN
               RecRef.GETTABLE(Rec);
               WebSetting.TableChange(RecRef);
             END;

    OnDelete=VAR
               CodingRuleLine@1100285003 : Record 12013663;
               CodingRuleLine2@1100285002 : Record 12013663;
               TempCodingRule@1100285000 : TEMPORARY Record 12013660;
               CodingRule@1100285001 : Record 12013660;
               ExDocLineDim@1100285004 : Record 12013611;
               ExDeletedDocLineDim@1100285005 : Record 12013625;
             BEGIN
               CodingRuleLine.RESET;
               CodingRuleLine.SETRANGE("Column ID", ID);
               IF CodingRuleLine.FINDSET(TRUE) THEN BEGIN
                 REPEAT
                   CodingRuleLine2.GET(CodingRuleLine.ID,CodingRuleLine."Line No.");
                   CodingRuleLine2.DELETE;

                   TempCodingRule.ID := CodingRuleLine.ID;
                   IF TempCodingRule.INSERT THEN;
                 UNTIL CodingRuleLine.NEXT = 0;

                CodingRuleLine.RESET;
                TempCodingRule.RESET;
                IF TempCodingRule.FIND('-') THEN
                  REPEAT
                    CodingRuleLine.SETRANGE(ID, TempCodingRule.ID);
                    IF CodingRuleLine.FINDFIRST THEN
                      CodingRuleLine.UpdateExpression
                    ELSE BEGIN
                      CodingRule.GET(TempCodingRule.ID);
                      CodingRule.Expression := '';
                      CodingRule.Expression2 := '';
                      CodingRule.Expression3 := '';
                      CodingRule.Expression4 := '';
                      CodingRule.MODIFY;
                    END;
                  UNTIL TempCodingRule.NEXT = 0;
               END;

               ExDocLineDim.RESET;
               IF ExDocLineDim.SETCURRENTKEY("Dimension Code") THEN;
               ExDocLineDim.SETRANGE("Dimension Code", Code);
               IF ExDocLineDim.FINDSET THEN BEGIN
                 REPEAT
                   ExDeletedDocLineDim.INIT;
                   ExDeletedDocLineDim.TRANSFERFIELDS(ExDocLineDim);
                   ExDeletedDocLineDim."Document Line ID" := 0;
                   ExDeletedDocLineDim.ID := 0;
                   ExDeletedDocLineDim."Deleted By" := USERID;
                   ExDeletedDocLineDim."Deleted Date" := CREATEDATETIME(TODAY,TIME);
                   ExDeletedDocLineDim."Old ID" := ExDocLineDim.ID;
                   ExDeletedDocLineDim."Old Document Line ID" := ExDocLineDim."Document Line ID";
                   ExDeletedDocLineDim.INSERT;
                 UNTIL ExDocLineDim.NEXT = 0;

                 ExDocLineDim.DELETEALL;
               END;

               RecRef.GETTABLE(Rec);
               WebSetting.TableChange(RecRef);
             END;

    CaptionML=[ENU=ExFlow Column;
               SVE=ExFlow Kolumn];
  }
  FIELDS
  {
    { 2   ;   ;ID                  ;BigInteger    ;AutoIncrement=No;
                                                   CaptionML=[ENU=ID;
                                                              SVE=ID] }
    { 10  ;   ;Code                ;Text50        ;OnValidate=VAR
                                                                ExDocLineDim@1100285000 : Record 12013611;
                                                                ExCodingRuleLine@1100285001 : Record 12013663;
                                                              BEGIN
                                                                TESTFIELD(Code);
                                                                IF Code <> xRec.Code THEN BEGIN
                                                                  ExDocLineDim.RESET;
                                                                  IF ExDocLineDim.SETCURRENTKEY("Dimension Code") THEN;
                                                                  ExDocLineDim.SETRANGE("Dimension Code", xRec.Code);
                                                                  ExDocLineDim.MODIFYALL("Dimension Code",Code,FALSE);

                                                                  ExCodingRuleLine.RESET;
                                                                  ExCodingRuleLine.SETRANGE("Column Code", xRec.Code);
                                                                  ExCodingRuleLine.MODIFYALL("Column Code",Code,FALSE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              SVE=Kod] }
    { 11  ;   ;Source              ;Text50        ;CaptionML=[ENU=Source;
                                                              SVE=K„lla] }
    { 12  ;   ;Format              ;Text250       ;CaptionML=[ENU=Format;
                                                              SVE=Format] }
    { 14  ;   ;Use Auto Completion ;Boolean       ;CaptionML=[ENU=Use Auto Completion;
                                                              SVE=Automatisk komplettering] }
    { 15  ;   ;Is Free Text        ;Boolean       ;CaptionML=[ENU=Is Free Text;
                                                              SVE=Fritext] }
    { 16  ;   ;Sort Order          ;Integer       ;CaptionML=[ENU=Sort Order;
                                                              SVE=Sorteringsordning] }
    { 17  ;   ;Document Display Expr;Text250      ;CaptionML=[ENU=Document Display Expr;
                                                              SVE=Dokumentvisnings uttryck] }
    { 18  ;   ;Line Display Expr   ;Text250       ;CaptionML=[ENU=Line Display Expr;
                                                              SVE=Radvisnigns uttryck] }
    { 19  ;   ;Data Type           ;Text30        ;CaptionML=[ENU=Data Type;
                                                              SVE=Datatyp] }
    { 20  ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Dimension;
                                                              SVE=Dimension] }
    { 100 ;   ;Purchase Line Field ID;Integer     ;TableRelation=Field.No. WHERE (TableNo=CONST(39));
                                                   CaptionML=[ENU=Purchase Line Field ID;
                                                              SVE=Ink”psrad f„ltnr] }
    { 101 ;   ;Is Autofill Trigger ;Option        ;CaptionML=[ENU=Auto fill Column;
                                                              SVE=Fyll automatiskt];
                                                   OptionCaptionML=[ENU=Inactive,Default NAV,Customized;
                                                                    SVE=Inaktiv,Standard NAV,Kundanpassad];
                                                   OptionString=Inactive,Default dim,Customized }
    { 102 ;   ;Copy Dimenson On Split;Boolean     ;CaptionML=[ENU=Copy dimension when splitting line;
                                                              SVE=Kopiera dimensioner vid delning av rad] }
    { 110 ;   ;No of Values to Send;Integer       ;CaptionML=[ENU=Number of Values to Send;
                                                              SVE=Antal av v„rden att skicka];
                                                   Description=2753 }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
    {    ;Source                                   }
    {    ;Code                                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      WebSetting@1100285001 : Record 12057071;
      RecRef@1100285000 : RecordRef;

    PROCEDURE ChangeFormatField@1100285015();
    VAR
      DividerChar@1100285001 : Char;
      FromChars@1100285003 : Text[250];
      ToChars@1100285004 : Text[250];
    BEGIN
      DividerChar := 8211;
      FromChars := SYSTEM.FORMAT(DividerChar);
      DividerChar := 8212;
      ToChars := SYSTEM.FORMAT(DividerChar);

      UpdateSignInExColumn(FromChars, ToChars);

      DividerChar := 45;
      FromChars := SYSTEM.FORMAT(DividerChar);

      UpdateSignInExColumn(FromChars, ToChars);
    END;

    LOCAL PROCEDURE UpdateSignInExColumn@1100285016(FromChars@1100285000 : Text[250];ToChars@1100285001 : Text[250]);
    VAR
      EXColumn@1100285003 : Record 12013661;
      Position@1100285002 : Integer;
    BEGIN
      IF Rec.FINDSET THEN BEGIN
        REPEAT
          Position := STRPOS(Rec.Format, FromChars);
          IF Position <> 0 THEN BEGIN
             Rec.Format:= CONVERTSTR(Rec.Format, FromChars, ToChars);
             Rec.MODIFY;
          END;
        UNTIL Rec.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

