OBJECT Codeunit 11012455 DPT User Token Cache
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      DPTSetup@1100528312 : Record 11229823;
      DPTUserTokenCache@1100528308 : Record 11229824;
      Employee@1100528311 : Record 5200;
      User@1100528310 : Record 2000000120;
      UserSetup@1100528309 : Record 91;
      IStream@1100528306 : InStream;
      OStream@1100528301 : OutStream;
      Bytes@1100528305 : DotNet "'mscorlib'.System.Array" RUNONCLIENT;
      DotNetUser@1100528304 : DotNet "'Fps.Dpt.Nav, Version=4.0.10.0, Culture=neutral, PublicKeyToken=284c6828aa038142'.Fps.Dpt.Nav.Entities.User" RUNONCLIENT;
      DotNetAuthenticationManager@1100528303 : DotNet "'Fps.Dpt.Nav.Windows, Version=4.0.10.0, Culture=neutral, PublicKeyToken=284c6828aa038142'.Fps.Dpt.Nav.Windows.O365AuthenticationManager" RUNONCLIENT;
      DotNetDPTSettings@1100528302 : DotNet "'Fps.Dpt.Nav, Version=4.0.10.0, Culture=neutral, PublicKeyToken=284c6828aa038142'.Fps.Dpt.Nav.DptSettings" RUNONCLIENT;
      MemoryStream@1100528300 : DotNet "'mscorlib'.System.IO.MemoryStream";

    PROCEDURE ValidateUserTokenCache@1100528349(UserSecurityIdIn@1100528304 : Text);
    BEGIN
      DPTSetup.GET;
      IF (DPTSetup."SharePoint Version" <> DPTSetup."SharePoint Version"::"Sharepoint Online") THEN
        EXIT;
      User.GET(UserSecurityIdIn);
      UserSetup.GET(User."User Name");
      Employee.GET(UserSetup."Employee No.");

      IF (NOT DPTUserTokenCache.GET(UserSecurityIdIn)) THEN BEGIN
        DPTUserTokenCache.INIT;
        DPTUserTokenCache."User Security ID" := UserSecurityIdIn;
        DPTUserTokenCache.INSERT;
      END;
      DPTUserTokenCache.CALCFIELDS("Azure AD Token Cache");

      CLEAR(DotNetUser);
      DotNetUser := DotNetUser.User;
      IF (DPTUserTokenCache."Azure AD Token Cache".HASVALUE) THEN BEGIN
        DPTUserTokenCache."Azure AD Token Cache".CREATEINSTREAM(IStream);
        MemoryStream := MemoryStream.MemoryStream;
        COPYSTREAM(MemoryStream, IStream);
        Bytes := MemoryStream.GetBuffer;
        DotNetUser.AzureADToken := Bytes;
      END;
      DotNetUser.EmailAddress := Employee."Company E-Mail";
      DotNetUser.O365AccountName := User."Authentication Email";
      DotNetUser.WindowsAccountName := User."User Name";

      CLEAR(DotNetDPTSettings);
      DotNetDPTSettings := DotNetDPTSettings.DptSettings;
      DotNetDPTSettings.AppId := DPTSetup."App ID";
      DotNetDPTSettings.AppSecret := DPTSetup."App Secret";
      DotNetDPTSettings.AzureADClientId := DPTSetup."Azure AD App ID";
      DotNetDPTSettings.AppUrl := DPTSetup."Proxy URL";
      DotNetDPTSettings.AzureADClientId := DPTSetup."Azure AD App ID";
      DotNetDPTSettings.CollectAnonymousData := DPTSetup."Send Anonymous Analytics Data";
      DotNetDPTSettings.GuestsGroupName := DPTSetup."Guest Group Name";
      DotNetDPTSettings.GuestsSiteUrl := DPTSetup."Guest Site URL";
      DotNetDPTSettings.InstrumentationKey := DPTSetup."Instrumentation Key";
      DotNetDPTSettings.LandingsPageUrl := DPTSetup."Portal URL";
      DotNetDPTSettings.SharePointUrl := DPTSetup."Portal URL";

      CLEAR(DotNetAuthenticationManager);
      DotNetAuthenticationManager := DotNetAuthenticationManager.Create(DotNetDPTSettings);
      DotNetAuthenticationManager.EnsureValidToken(DotNetUser);

      Bytes := DotNetUser.AzureADToken;
      MemoryStream := MemoryStream.MemoryStream(Bytes);
      DPTUserTokenCache."Azure AD Token Cache".CREATEOUTSTREAM(OStream);
      MemoryStream.WriteTo(OStream);
      DPTUserTokenCache.MODIFY;
    END;

    BEGIN
    {
      //Must run client side.
      //All Vars are defined as Globals
    }
    END.
  }
}

