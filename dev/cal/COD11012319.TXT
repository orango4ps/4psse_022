OBJECT Codeunit 11012319 Export Contacts (Plant Mgt.)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=VAR
            Cont@1100525001 : Record 5050;
            Cont2@1100525006 : Record 5050;
            ContBusRel@1100525004 : Record 5054;
            Company@1100525002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
            Person@1100525005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
            Contacts@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
            XMLDOMManagement4PS@1100525003 : Codeunit 11020220;
          BEGIN
            IF GUIALLOWED THEN
              Window.OPEN(Text000);

            UtilityFunctions.CreateOutFolder;

            DOMDocument := DOMDocument.XmlDocument;

            AppendElement(DOMDocument, 'contacts', '', Contacts);
            Contacts.SetAttribute('version', '1.0');
            Contacts.SetAttribute('exportdate', UtilityFunctions.FormatDateTime(CURRENTDATETIME));

            ContBusRel.SETCURRENTKEY("Link to Table","No.");
            ContBusRel.SETRANGE("Link to Table", ContBusRel."Link to Table"::Customer);
            ContBusRel.SETFILTER("No.", '<>%1', '');

            IF ContBusRel.FINDSET THEN BEGIN
              REPEAT
                IF GUIALLOWED THEN
                  Window.UPDATE;

                Cont.GET(ContBusRel."Contact No.");
                IF NOT Cont.Blocked THEN BEGIN
                  AppendContact(Contacts, Cont, ContBusRel."No.", Company);

                  Cont2.SETCURRENTKEY("Company No.");
                  Cont2.SETRANGE("Company No.", Cont."Company No.");
                  Cont2.SETRANGE(Type, Cont2.Type::Person);
                  Cont2.SETFILTER("Login ID", '<>%1', '');
                  Cont2.SETRANGE(Blocked, FALSE);

                  IF Cont2.FINDSET THEN
                    REPEAT
                      IF GUIALLOWED THEN
                        Window.UPDATE;
                      AppendContact(Company, Cont2, '', Person);
                    UNTIL Cont2.NEXT = 0;
                END;
              UNTIL ContBusRel.NEXT = 0;
            END;

            IF GUIALLOWED THEN
              XMLDOMManagement4PS.SaveXMLToClientFile(DOMDocument, FileName)
            ELSE
              DOMDocument.Save(FileName);

            IF GUIALLOWED THEN
              Window.CLOSE;
          END;

  }
  CODE
  {
    VAR
      UtilityFunctions@1100525003 : Codeunit 11012318;
      DOMDocument@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      Window@1100525001 : Dialog;
      Text000@1100525002 : TextConst 'DEU=Kontakte exportieren...;ENU=Exporting Contacts...;NLD=Relaties exporteren...;SVE=Exporterar kontakter ...';

    PROCEDURE AppendContact@1100525000(ParentNode@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";Cont@1100525001 : Record 5050;CustNo@1100525004 : Code[20];VAR NewElement@1100525002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement");
    VAR
      Dummy@1100525003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement";
    BEGIN
      CASE Cont.Type OF
        Cont.Type::Company:
          BEGIN
            AppendElement(ParentNode, 'company', '', NewElement);
            AppendElement(NewElement, 'no', Cont."No.", Dummy);
            AppendElement(NewElement, 'custno', CustNo, Dummy);
            AppendElement(NewElement, 'name', Cont.Name, Dummy);
            AppendElement(NewElement, 'name2', Cont."Name 2", Dummy);
            AppendElement(NewElement, 'address', Cont.Address, Dummy);
            AppendElement(NewElement, 'address2', Cont."Address 2", Dummy);
            AppendElement(NewElement, 'postcode', Cont."Post Code", Dummy);
            AppendElement(NewElement, 'city', Cont.City, Dummy);
            AppendElement(NewElement, 'country', Cont."Country/Region Code", Dummy);
            AppendElement(NewElement, 'phone', Cont."Phone No.", Dummy);
            AppendElement(NewElement, 'phone2', Cont."Phone No. 2", Dummy);
            AppendElement(NewElement, 'mobile', Cont."Mobile Phone No.", Dummy);
            AppendElement(NewElement, 'mobile2', Cont."Mobile Phone No. 2", Dummy);
            AppendElement(NewElement, 'workphone', Cont."Phone No. Work", Dummy);
            AppendElement(NewElement, 'workphone2', Cont."Phone No. Work 2", Dummy);
            AppendElement(NewElement, 'fax', Cont."Fax No.", Dummy);
            AppendElement(NewElement, 'email', Cont."E-Mail", Dummy);
            AppendElement(NewElement, 'lastmodified', UtilityFunctions.FormatDate(Cont."Last Date Modified"), Dummy);
            AppendElement(NewElement, 'website', Cont."Website Code (Plant Mgt.)", Dummy); // jhoek.280211
            AppendElement(NewElement, 'languagecode', FORMAT(LanguageIDFromLanguageCode(Cont."Language Code")), Dummy); // jhoek.280211
          END;
        Cont.Type::Person:
          BEGIN
            AppendElement(ParentNode, 'person', '', NewElement);
            AppendElement(NewElement, 'no', Cont."No.", Dummy);
            AppendElement(NewElement, 'languagecode', FORMAT(LanguageIDFromLanguageCode(Cont."Language Code")), Dummy); // jhoek.280211
            AppendElement(NewElement, 'name', Cont.Name, Dummy);
            AppendElement(NewElement, 'name2', Cont."Name 2", Dummy);
            AppendElement(NewElement, 'address', Cont.Address, Dummy);
            AppendElement(NewElement, 'address2', Cont."Address 2", Dummy);
            AppendElement(NewElement, 'postcode', Cont."Post Code", Dummy);
            AppendElement(NewElement, 'city', Cont.City, Dummy);
            AppendElement(NewElement, 'country', Cont."Country/Region Code", Dummy);
            AppendElement(NewElement, 'phone', Cont."Phone No.", Dummy);
            AppendElement(NewElement, 'phone2', Cont."Phone No. 2", Dummy);
            AppendElement(NewElement, 'mobile', Cont."Mobile Phone No.", Dummy);
            AppendElement(NewElement, 'mobile2', Cont."Mobile Phone No. 2", Dummy);
            AppendElement(NewElement, 'workphone', Cont."Phone No. Work", Dummy);
            AppendElement(NewElement, 'workphone2', Cont."Phone No. Work 2", Dummy);
            AppendElement(NewElement, 'fax', Cont."Fax No.", Dummy);
            AppendElement(NewElement, 'email', Cont."E-Mail", Dummy);
            AppendElement(NewElement, 'login', Cont."Login ID", Dummy);
            AppendElement(NewElement, 'password', Cont.Password, Dummy);
            AppendElement(NewElement, 'role', UtilityFunctions.FormatOption(Cont.Role, 'normal,admin'), Dummy);
            AppendElement(NewElement,  'enablementdate', UtilityFunctions.FormatDate(Cont."Enablement Date"), Dummy);
            AppendElement(NewElement,  'lastmodified', UtilityFunctions.FormatDate(Cont."Last Date Modified"), Dummy);
          END;
      END;
    END;

    LOCAL PROCEDURE AppendElement@1100525004(ParentNode@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";Name@1100525001 : Text[80];Value@1100525003 : Text[1024];VAR NewElement@1100525002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlElement");
    VAR
      TextNode@1100525004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlText";
    BEGIN
      NewElement := DOMDocument.CreateElement(Name);

      IF Value <> '' THEN BEGIN
        TextNode := DOMDocument.CreateTextNode(Value);
        NewElement.AppendChild(TextNode);
      END;

      ParentNode.AppendChild(NewElement);
    END;

    PROCEDURE LanguageIDFromLanguageCode@1100528701(LanguageCode@1100528700 : Code[10]) : Integer;
    VAR
      Language@1100528701 : Record 8;
    BEGIN
      IF Language.GET(LanguageCode) THEN
        IF Language."Windows Language ID" <> 0 THEN
          EXIT(Language."Windows Language ID");

      EXIT(1043);
    END;

    LOCAL PROCEDURE FileName@1100525010() : Text[260];
    VAR
      PlantMgtFileExchangeSetup@1100525000 : Record 11125655;
    BEGIN
      PlantMgtFileExchangeSetup.GET;
      PlantMgtFileExchangeSetup.TESTFIELD("Export Path");

      EXIT(STRSUBSTNO('%1\contacts%2.xml', DELCHR(PlantMgtFileExchangeSetup."Export Path", '>', '\'), UtilityFunctions.FileNameDateTime)
      );
    END;

    BEGIN
    END.
  }
}

