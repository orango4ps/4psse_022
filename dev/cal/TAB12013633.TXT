OBJECT Table 12013633 ExFlow Contract Matching
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF513000;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ExContract@1100285000 : Record 12013633;
             BEGIN
               ExContract.LOCKTABLE;
               IF ExContract.FINDLAST THEN
                 "Contract No." := ExContract."Contract No." + 1
               ELSE
                 "Contract No." := 1;
             END;

    OnDelete=BEGIN
               CALCFIELDS("Posted Amount");
               IF "Posted Amount" > 0 THEN
                 ERROR(EXF105);

               CALCFIELDS("Attachment Blob");
               IF "Attachment Blob".HASVALUE THEN
                 ConfirmDelete;
             END;

    CaptionML=[ENU=ExFlow Contract;
               SVE=ExFlow Avtal];
    LookupPageID=Page12057081;
    DrillDownPageID=Page12057081;
  }
  FIELDS
  {
    { 1   ;   ;Contract No.        ;Integer       ;CaptionML=[ENU=Contract No.;
                                                              SVE=Avtalsnummer] }
    { 5   ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor No.;
                                                              SVE=Leverantîrsnummer] }
    { 6   ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              SVE=Leverantîrsnamn];
                                                   Editable=No }
    { 10  ;   ;From Date           ;Date          ;CaptionML=[ENU=Valid from Date;
                                                              SVE=Giltigt frÜn datum] }
    { 11  ;   ;To Date             ;Date          ;CaptionML=[ENU=Valid to Date;
                                                              SVE=Giltigt till datum] }
    { 15  ;   ;External Contract No.;Code20       ;CaptionML=[ENU=External Contract No.;
                                                              SVE=Externt avtalsnummer] }
    { 20  ;   ;Contract Amount (LCY);Decimal      ;CaptionML=[ENU=Tot. Contract Amount (Net LCY);
                                                              SVE=Totalt avtalsbelopp (netto BVA)] }
    { 21  ;   ;Max invoice amount  ;Decimal       ;CaptionML=[ENU=Max. invoice amount (Net LCY);
                                                              SVE=Max. fakturabelopp (netto BVA)] }
    { 50  ;   ;Auto Approve        ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Auto. Approve Matched Invoice;
                                                              SVE=AutogodkÑnn matchad faktura] }
    { 100 ;   ;Posted Amount       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("ExFlow Document Entry"."Value Amount (LCY)" WHERE (Contract No.=FIELD(Contract No.)));
                                                   CaptionML=[ENU=Posted Amount (Net LCY);
                                                              SVE=Bokfîrt belopp (netto BVA)];
                                                   Editable=No }
    { 12013621;;Predefined Purch. Code;Code10     ;TableRelation="EX Standard Purchase Code".Code;
                                                   CaptionML=[ENU=ExFlow Purchase Code;
                                                              SVE=ExFlow inkîpskod] }
    { 12013622;;Invoicing Period   ;DateFormula   ;OnValidate=BEGIN
                                                                IF FORMAT("Invoicing Period") <> '' THEN
                                                                  SetPeriodDefaults;
                                                              END;

                                                   CaptionML=[ENU=Invoicing Period;
                                                              SVE=Faktureringsperiod] }
    { 12013623;;Number of Invoices in Period;Integer;
                                                   CaptionML=[ENU=Number of Invoices in Period;
                                                              SVE=Antal tillÜtna fakturor i perioden];
                                                   BlankZero=No }
    { 12013625;;Description        ;Text250       ;CaptionML=[ENU=Description;
                                                              SVE=Beskrivning] }
    { 12013626;;Use Invoice Date Field;Option     ;CaptionML=[ENU=Match dates based on:;
                                                              SVE=Matcha datum mot fakturans:];
                                                   OptionCaptionML=[ENU=Posting Date,Document Date,Due Date;
                                                                    SVE=Bokfîringsdatum,Dokumentdatum,Fîrfallodatum];
                                                   OptionString=Posting Date,Document Date,Due date }
    { 12013627;;Period Start Date  ;Date          ;OnValidate=BEGIN
                                                                IF "Period Start Date" <> 0D THEN
                                                                  SetPeriodDefaults;
                                                              END;

                                                   CaptionML=[ENU=Period Start Date;
                                                              SVE=Period startdatum] }
    { 12013628;;Check Periods      ;Boolean       ;CaptionML=[ENU=Check Periods;
                                                              SVE=Kontrollera perioder] }
    { 12013629;;Attachment Blob    ;BLOB          ;CaptionML=[ENU=Attachment BLOB;
                                                              SVE=Bilags BLOB] }
    { 12013630;;Attached File      ;Text100       ;CaptionML=[ENU=Attachment File name;
                                                              SVE=Bilagsfilnamn];
                                                   Editable=No }
    { 12013631;;Copy Attached File To Invoice;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Copy Attached File To Invoice" THEN
                                                                  IF NOT "Attachment Blob".HASVALUE THEN
                                                                    ERROR(EXF107);
                                                              END;

                                                   CaptionML=[ENU=Copy Attachment to Matched Invoice;
                                                              SVE=Kopiera bilaga till matchad faktura] }
  }
  KEYS
  {
    {    ;Contract No.                            ;Clustered=Yes }
    {    ;Vendor No.,External Contract No.         }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Contract No.,Vendor No.,External Contract No.,From Date,To Date }
  }
  CODE
  {
    VAR
      TXT001@1100285002 : TextConst 'ENU=The Contract Reference has been created.;SVE=Avtalsreferensen har skapats.';
      TXT002@1100285001 : TextConst 'ENU=Please enter "Vendor No." and "External Contract No." to create a Contract Reference.;SVE=Fyll i "Leverantîrsnummer" och "Externt Avtalsnummer" fîr att skapa en avtalsreferens.';
      TXT003@1100285000 : TextConst 'ENU=The Contract Reference already exists.;SVE=Avtalsreferensen finns redan.';
      EXF101@1100285006 : TextConst 'ENU=Import Attachment;SVE=Importera bilaga';
      EXF102@1100285005 : TextConst 'ENU=All Files (*.*)|*.*;SVE=Alla filer (*.*)|*.*';
      EXF103@1100285004 : TextConst 'ENU=Warning the existing attachment will be deleted, proceed anyway?;SVE=Varning den existerande billagan kommer att tas bort. FortsÑtta ÑndÜ?';
      EXF104@1100285003 : TextConst 'ENU=Aborted;SVE=ètgÑrd avbryten';
      EXF105@1100285007 : TextConst 'ENU=Contracts with posted amounts can not be deleted.;SVE=Kontrakt dÑr det finns bokfîrda belopp fÜr ej tas bort.';
      EXF106@1100285008 : TextConst 'ENU=Attachment file does not exist.;SVE=Bifogad fil finns ej.';
      EXF107@1100285009 : TextConst 'ENU=Please upload an attachment.;SVE=Ladda upp bilaga.';

    PROCEDURE GetToDate@1100285027() ToDate : Date;
    VAR
      DateForm@1100285002 : DateFormula;
      DateText@1100285001 : Text;
    BEGIN
      IF "Period Start Date" = 0D THEN
        EXIT(0D);

      IF FORMAT("Invoicing Period") = '' THEN
        EXIT("Period Start Date");

      DateText := FORMAT("Invoicing Period") + '<-1D>';  //2334
      IF NOT EVALUATE(DateForm,DateText) THEN
        DateForm := "Invoicing Period";

      EXIT(CALCDATE(DateForm ,"Period Start Date"));
    END;

    LOCAL PROCEDURE SetPeriodDefaults@1100285000();
    BEGIN
      IF "Number of Invoices in Period" = 0 THEN
        "Number of Invoices in Period" := 1;

      "Check Periods" := TRUE;
    END;

    PROCEDURE CreateContractReference@1100285001();
    VAR
      EXReference@1100285000 : Record 12013632;
    BEGIN
      IF ("Vendor No." = '') OR ("External Contract No." = '') THEN
        ERROR(TXT002);

      EXReference.INIT;
      EXReference.Reference:= "External Contract No.";
      EXReference."Vendor No." := "Vendor No.";
      EXReference."Contract No.":="Contract No.";
      IF NOT EXReference.INSERT THEN
        ERROR(TXT003);

      MESSAGE(TXT001);
    END;

    PROCEDURE ImportDocument@1100285003(VAR ExContract@1100285000 : Record 12013633);
    VAR
      ExFlowFileMgt@1100285002 : Codeunit 12013602;
      TempFileName@1100285001 : Text[250];
      FileManagement@1100285003 : Codeunit 419;
      TempBlob@1100285004 : Record 99008535;
    BEGIN
      ExContract.CALCFIELDS("Attachment Blob");
      IF ExContract."Attachment Blob".HASVALUE THEN
        ConfirmDelete;

      ExFlowFileMgt.FileNameFromDialog(TempFileName,EXF101,4,EXF102,0);

      IF TempFileName <> '' THEN BEGIN
        IF FileManagement.ServerFileExists(TempFileName) THEN
          FileManagement.BLOBImportFromServerFile(TempBlob,TempFileName)
        ELSE
          FileManagement.BLOBImportFromServerFile(TempBlob,FileManagement.UploadFileSilent(TempFileName));
        ExContract."Attachment Blob" := TempBlob.Blob;
        ExContract."Attached File" := COPYSTR(FileManagement.GetFileName(TempFileName),1,MAXSTRLEN(TempFileName));
      END;
    END;

    PROCEDURE Export@3(ShowFileDialog@1002 : Boolean) : Text;
    VAR
      TempBlob@1001 : Record 99008535;
      FileMgt@1000 : Codeunit 419;
      DefaultFileName@1100285000 : Text;
    BEGIN
      CALCFIELDS("Attachment Blob");
      IF NOT "Attachment Blob".HASVALUE THEN BEGIN
        IF ShowFileDialog THEN
          ERROR(EXF106)
        ELSE
          EXIT;
      END;
      TempBlob.Blob := "Attachment Blob";
      EXIT(FileMgt.BLOBExport(TempBlob,"Attached File",ShowFileDialog));
    END;

    LOCAL PROCEDURE ConfirmDelete@1100285002();
    BEGIN
      IF NOT CONFIRM(EXF103,FALSE) THEN
        ERROR(EXF104);
    END;

    BEGIN
    {
      826- New function added - CreateContractReference
    }
    END.
  }
}

