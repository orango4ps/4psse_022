OBJECT Codeunit 11012373 Initialize Sls Text Line Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=VAR
            StdSalesReportTextLine@1100525000 : Record 11071890;
          BEGIN
            IF StdSalesReportTextLine.ISEMPTY THEN BEGIN
              InitializeGenericReports;
              InitializeStdSalesReportTextLine;
            END;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU="<b>Invoice No: </b>;<b>%1</b>;Date: ;<div align=""right"">%2</div>";NOR="<b>Fakturanr: </b>;<b>%1</b>;Dato: ;<div align=""right"">%2</div>";SVE="<b>Fakturanr: </b>;<b>%1</b>;Datum: ;<div align=""right"">%2</div>"';
      Text001@1001 : TextConst 'ENU="Customer: ;%1;Due Date: ;<div align=""right"">%2</div>";NOR="Kunde: ;%1;Forfallsdato: ;<div align=""right"">%2</div>";SVE="Kund: ;%1;F”rfallodatum: ;<div align=""right"">%2</div>"';
      Text002@1002 : TextConst 'ENU="Customer: ;%1";NOR="Kunde: ;%1";SVE="Kund: ;%1"';
      Text003@1003 : TextConst 'ENU="Vat Registration No.: ;%1";NOR="Momsregistreringsnr.: ;%1";SVE="Momsreg.nr: ;%1"';
      Text004@1004 : TextConst 'ENU="Your reference: ;%1";NOR="Deres referanse: ;%1";SVE="Er referens: ;%1"';
      Text005@1005 : TextConst 'ENU=%1;NOR=%1;SVE=%1';
      Text006@1006 : TextConst 'ENU="Rental period until: ;%1";NOR="Utleieperiode frem til: ;%1";SVE="Hyresperiod till: ;%1"';
      Text007@1007 : TextConst 'ENU=Project %1, %2;NOR=Prosjekt %1, %2;SVE=Projekt %1, %2';
      Text008@1008 : TextConst 'ENU=Extension Contract %1, %2;NOR=ETA-Kontrakt %1, %2;SVE=ŽTA %1,%2';
      Text009@1009 : TextConst 'ENU=Service Contract %1, %2;NOR=Servicekontrakt %1, %2;SVE=Servicekontrakt %1, %2';
      Text010@1010 : TextConst 'ENU=Service Order %1, %2, %3, %4, %5;NOR=Serviceordre %1, %2, %3, %4, %5;SVE=Serviceorder %1, %2, %3, %4, %5';
      Text011@1011 : TextConst 'ENU=Rental Unit %1-%2 %3, %4 %5 %6;NOR=Utleieenhet %1-%2 %3, %4 %5 %6;SVE=Uthyrningsenhet %1-%2 %3, %4 %5 %6';
      Text012@1012 : TextConst 'ENU="Contract Amount;<div align=""right"">%1</div>";NOR="Kontraktsbel›p;<div align=""right"">%1</div>";SVE="Kontraktsbelopp;<div align=""right"">%1</div>"';
      Text013@1013 : TextConst 'ENU="Already invoiced;<div align=""right"">%1</div>";NOR="Allerede fakturert;<div align=""right"">%1</div>";SVE="Redan fakturerat;<div align=""right"">%1</div>"';
      Text014@1014 : TextConst 'ENU="This Invoice;<div align=""right"">%1</div>";NOR="Denne faktura;<div align=""right"">%1</div>";SVE="Denna faktura;<div align=""right"">%1</div>"';
      Text015@1015 : TextConst 'ENU="Still to be invoiced;<div align=""right"">%1</div>";NOR="Gjenst†r † fakturere;<div align=""right"">%1</div>";SVE="Kvarst†r att fakturera;<div align=""right"">%1</div>"';
      Text016@1016 : TextConst 'ENU="Labour %1%; <div align=""right"">%2</div>";NOR="Arbeidskraft %1%; <div align=""right"">%2</div>";SVE="Arbetskraft %1%; <div align=""right"">%2</div>"';
      Text017@1017 : TextConst 'ENU="Labour; <div align=""right"">%1</div>";NOR="Arbeidskraft; <div align=""right"">%1</div>";SVE="Arbetskraft; <div align=""right"">%1</div>"';
      Text018@1018 : TextConst 'ENU="Blocked account %1 %;<div align=""right"">%2</div>";NOR="Blokkert konto %1 %;<div align=""right"">%2</div>";SVE="Sp„rrad period %1 %;<div align=""right"">%2</div>"';
      Text019@1019 : TextConst 'ENU=CIS period: %1.;NOR=CIS-periode: %1;SVE=CIS period: %1.';
      Text020@1020 : TextConst 'ENU=Please pay the amount of  %1 %2 to account no. %3.;NOR=Vennligst betal bel›pet for %1 %2 til kontonr %3;SVE=V„nligen betala beloppet f”r %1 %2 till konto nr. %3.';
      Text021@1021 : TextConst 'ENU=The remaining part of %1 %2 is to be paid to our blocked account %3.;NOR=Den gjenst†ende delen av %1 %2 skal betales til v†r sperrede konto %3;SVE=Den †terst†ende delen av %1 %2 skall betalas till v†rt sp„rrade konto %3.';
      Text022@1022 : TextConst 'ENU=Please pay the amount of  %1 %2 to account no.. %3 in the name of %4 in %5.;NOR=Vennligst betal bel›pet for %1 %2 til kontonr %3 i navnet til %4 i %5;SVE=V„nligen betala beloppet om %1 %2 till konto %3 i namnet av %4 i %5.';
      Text023@1023 : TextConst 'ENU=Please refer to %1 in your payment.;NOR=Vennligst referer til %1 i din betaling;SVE=V„nligen h„nvisa till %1 i er betalning.';
      Text024@1024 : TextConst 'ENU=This concerns %1 % of the delivery instalment of %2 %3.;NOR=Dette gjelder %1 % av delbetaling ved leveransen %2 %3;SVE=Detta g„ller %1 % av delbetalning vid leverans %2 %3.';
      Text025@1025 : TextConst 'ENU=Payment Reference: %1 / %2.;NOR=Betalingsreferanse: %1 / %2.;SVE=Betalningsreferens: %1 / %2.';
      Text026@1026 : TextConst 'ENU=Payment Terms: %1.;NOR=Betalingsvilk†r: %1.;SVE=Betalningsvillkor: %1.';
      Text027@1027 : TextConst 'ENU=For any questions regarding this invoice you can call with %1.;NOR=For sp›rsm†l om denne fakturaen kan du kontakte %1;SVE=F”r eventuella fr†gor om denna faktura kan du tala med %1.';
      Text028@1100528200 : TextConst 'ENU="Extension Contract Amt;<div align=""right"">%1</div>"';

    PROCEDURE InitializeGenericReports@1100525000();
    BEGIN
      InsertGenericReport(11020285,11020281);
      InsertGenericReport(11020285,11020282);
      InsertGenericReport(11020285,11020283);
      InsertGenericReport(11020285,11020284);
    END;

    PROCEDURE InitializeStdSalesReportTextLine@1100525024();
    BEGIN
      // == PRO FORMA INVOICE == HEADER
      InsertHeaderInvoiceNoDocumentDate(2,36);
      InsertHeaderCustomerNoDueDateInvoice(2,36);
      InsertHeaderVatRegistrationNo(2,36);
      InsertHeaderPrincipalReference(2,36);
      InsertHeaderInvoiceTextEmptyLine(2);
      InsertHeaderInvoiceText(2,36);
      InsertHeaderPlantRentalPeriod(2,36);
      // == PRO FORMA INVOICE == BEFORE DETAIL ==
      InsertBeforeDetailProjectNoDescription(2,37);
      InsertBeforeDetailProjectInstallmentTextLine(2);
      InsertBeforeDetailProjectCostPlusTextLine(2);
      InsertBeforeDetailProjectEmptyLine(2);
      InsertBeforeDetailProjectExtensionContractNoDescription(2,37);
      InsertBeforeDetailProjectExtensionContractInstallmentTextLine(2);
      InsertBeforeDetailProjectExtensionContractCostPlusTextLine(2);
      InsertBeforeDetailProjectExtensionContractEmptyLine(2);
      InsertBeforeDetailServiceContractNoDescription(2,37);
      InsertBeforeDetailServiceContractEmptyLine(2);
      InsertBeforeDetailServiceOrderNoDescription(2,37);
      InsertBeforeDetailServiceOrderEmptyLine(2);
      InsertBeforeDetailRentalUnitNoDescription(2,37);
      InsertBeforeDetailRentalUnitEmptyLine(2);
      // == PRO FORMA INVOICE == AFTER DETAIL ==
      InsertAfterDetailProjectEmptyLine(2);
      InsertAfterDetailServiceContractEmptyLine(2);
      InsertAfterDetailServiceOrderInvoiceTextLine(2);
      InsertAfterDetailServiceOrderEmptyLine(2);
      InsertAfterDetailRentalUnitEmptyLine(2);
      // PRO FORMA INVOICE == FOOTER ==
      InsertFooterProjectContractAmount(2);
      InsertFooterProjectExtensionContractAmount(2);
      InsertFooterProjectInvoicedContractAmount(2);
      InsertFooterProjectThisInvoiceContractAmount(2,36);
      InsertFooterProjectContractAmountStillToInvoice(2);
      InsertFooterProjectContractAmountEmptyLine(2);
      InsertFooterLaborPartInstallment(2,36);
      InsertFooterLaborPartCostPlus(2);
      InsertFooterBlockedAmount(2,36);
      InsertFooterReservedVatPeriod(2,36);
      InsertFooterBlockedAmountEmptyLine(2);
      InsertFooterBankAccountPayment(2);
      InsertFooterBlockedAccountPayment(2);
      InsertFooterNotaryBankAccountPayment(2);
      InsertFooterNotaryCase(2,36);
      InsertFooterNotaryWithhold(2,36);
      InsertFooterVatClauseDescriptionsEmptyLine(2);
      InsertFooterVatClauseDescriptions(2);
      InsertFooterEmptyLine(2);
      InsertFooterMentionOnPayment(2,36);
      InsertFooterPaymentTerms(2);
      InsertFooterDirectDebit(2);
      InsertFooterQuestions(2);


      // PRO FORMA CREDIT MEMO == HEADER ==
      InsertHeaderInvoiceNoDocumentDate(3,36);
      InsertHeaderCustomerNoDueDateCreditMemo(3,36);
      InsertHeaderVatRegistrationNo(3,36);
      InsertHeaderPrincipalReference(3,36);
      InsertHeaderInvoiceTextEmptyLine(3);
      InsertHeaderInvoiceText(3,36);
      InsertHeaderPlantRentalPeriod(3,36);
      // PRO FORMA CREDIT MEMO == BEFORE DETAIL ==
      InsertBeforeDetailProjectNoDescription(3,37);
      InsertBeforeDetailProjectExtensionContractNoDescription(3,37);
      InsertBeforeDetailServiceContractNoDescription(3,37);
      InsertBeforeDetailServiceContractEmptyLine(3);
      InsertBeforeDetailServiceOrderNoDescription(3,37);
      InsertBeforeDetailServiceOrderEmptyLine(3);
      InsertBeforeDetailRentalUnitNoDescription(3,37);
      InsertBeforeDetailRentalUnitEmptyLine(3);
      // PRO FORMA CREDIT MEMO == AFTER DETAIL ==
      InsertAfterDetailProjectEmptyLine(3);
      InsertAfterDetailServiceContractEmptyLine(3);
      InsertAfterDetailServiceOrderEmptyLine(3);
      InsertAfterDetailRentalUnitEmptyLine(3);
      // PRO FORMA CREDIT MEMO == FOOTER ==
      InsertFooterLaborPartInstallment(3,36);
      InsertFooterLaborPartCostPlus(3);
      InsertFooterBlockedAmount(3,36);
      InsertFooterReservedVatPeriod(3,36);
      InsertFooterBlockedAmountEmptyLine(3);
      InsertFooterVatClauseDescriptionsEmptyLine(3);
      InsertFooterVatClauseDescriptions(3);
      InsertFooterQuestions(3);


      // POSTED INVOICE == HEADER ==
      InsertHeaderInvoiceNoDocumentDate(7,112);
      InsertHeaderCustomerNoDueDateInvoice(7,112);
      InsertHeaderVatRegistrationNo(7,112);
      InsertHeaderPrincipalReference(7,112);
      InsertHeaderInvoiceTextEmptyLine(7);
      InsertHeaderInvoiceText(7,112);
      InsertHeaderPlantRentalPeriod(7,112);
      // POSTED INVOICE == BEFORE DETAIL ==
      InsertBeforeDetailProjectNoDescription(7,113);
      InsertBeforeDetailProjectInstallmentTextLine(7);
      InsertBeforeDetailProjectCostPlusTextLine(7);
      InsertBeforeDetailProjectEmptyLine(7);
      InsertBeforeDetailProjectExtensionContractNoDescription(7,113);
      InsertBeforeDetailProjectExtensionContractInstallmentTextLine(7);
      InsertBeforeDetailProjectExtensionContractCostPlusTextLine(7);
      InsertBeforeDetailProjectExtensionContractEmptyLine(7);
      InsertBeforeDetailServiceContractNoDescription(7,113);
      InsertBeforeDetailServiceContractEmptyLine(7);
      InsertBeforeDetailServiceOrderNoDescription(7,113);
      InsertBeforeDetailServiceOrderEmptyLine(7);
      InsertBeforeDetailRentalUnitNoDescription(7,113);
      InsertBeforeDetailRentalUnitEmptyLine(7);
      // POSTED INVOICE == AFTER DETAIL
      InsertAfterDetailProjectEmptyLine(7);
      InsertAfterDetailServiceContractEmptyLine(7);
      InsertAfterDetailServiceOrderInvoiceTextLine(7);
      InsertAfterDetailServiceOrderEmptyLine(7);
      InsertAfterDetailRentalUnitEmptyLine(7);
      // POSTED INVOICE == FOOTER
      InsertFooterProjectContractAmount(7);
      InsertFooterProjectExtensionContractAmount(7);
      InsertFooterProjectInvoicedContractAmount(7);
      InsertFooterProjectThisInvoiceContractAmount(7,112);
      InsertFooterProjectContractAmountStillToInvoice(7);
      InsertFooterProjectContractAmountEmptyLine(7);
      InsertFooterLaborPartInstallment(7,112);
      InsertFooterLaborPartCostPlus(7);
      InsertFooterBlockedAmount(7,112);
      InsertFooterReservedVatPeriod(7,112);
      InsertFooterBlockedAmountEmptyLine(7);
      InsertFooterBankAccountPayment(7);
      InsertFooterBlockedAccountPayment(7);
      InsertFooterNotaryBankAccountPayment(7);
      InsertFooterNotaryCase(7,112);
      InsertFooterNotaryWithhold(7,112);
      InsertFooterVatClauseDescriptionsEmptyLine(7);
      InsertFooterVatClauseDescriptions(7);
      InsertFooterEmptyLine(7);
      InsertFooterMentionOnPayment(7,112);
      InsertFooterPaymentTerms(7);
      InsertFooterDirectDebit(7);
      InsertFooterQuestions(7);


      // POSTED CREDIT MEMO == HEADER ==
      InsertHeaderInvoiceNoDocumentDate(8,114);
      InsertHeaderCustomerNoDueDateCreditMemo(8,114);
      InsertHeaderVatRegistrationNo(8,114);
      InsertHeaderPrincipalReference(8,114);
      InsertHeaderInvoiceTextEmptyLine(8);
      InsertHeaderInvoiceText(8,114);
      InsertHeaderPlantRentalPeriod(8,114);
      // POSTED CREDIT MEMO == BEFORE DETAIL ==
      InsertBeforeDetailProjectNoDescription(8,115);
      InsertBeforeDetailProjectExtensionContractNoDescription(8,115);
      InsertBeforeDetailServiceContractNoDescription(8,115);
      InsertBeforeDetailServiceContractEmptyLine(8);
      InsertBeforeDetailServiceOrderNoDescription(8,115);
      InsertBeforeDetailServiceOrderEmptyLine(8);
      InsertBeforeDetailRentalUnitNoDescription(8,115);
      InsertBeforeDetailRentalUnitEmptyLine(8);
      // POSTED CREDIT MEMO == AFTER DETAIL ==
      InsertAfterDetailProjectEmptyLine(8);
      InsertAfterDetailServiceContractEmptyLine(8);
      InsertAfterDetailServiceOrderEmptyLine(8);
      InsertAfterDetailRentalUnitEmptyLine(8);
      // POSTED CREDIT MEMO == FOOTER ==
      InsertFooterLaborPartInstallment(8,114);
      InsertFooterLaborPartCostPlus(8);
      InsertFooterBlockedAmount(8,114);
      InsertFooterReservedVatPeriod(8,114);
      InsertFooterBlockedAmountEmptyLine(8);
      InsertFooterVatClauseDescriptionsEmptyLine(8);
      InsertFooterVatClauseDescriptions(8);
      InsertFooterQuestions(8);
    END;

    PROCEDURE InsertGenericReport@1100525002(ID@1100525001 : Integer;CalledByReportID@1100525002 : Integer);
    VAR
      GenericReport@1100525000 : Record 11071914;
    BEGIN
      GenericReport.ID := ID;
      GenericReport."Called by Report ID" := CalledByReportID;
      IF GenericReport.INSERT THEN;
    END;

    PROCEDURE "//Header"@1100525005();
    BEGIN
    END;

    PROCEDURE InsertHeaderInvoiceNoDocumentDate@1100525003(DocumentType@1100525000 : Option;SalesHeaderTableNo@1100525001 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,0,'',101000,Text000,'InvoiceNo; DocumentDate',4,';');

      InsertSalesReportTextValue(DocumentType,0,'',101000,10000,SalesHeaderTableNo,3,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,0,'',101000,20000,SalesHeaderTableNo,99,'',0,'',2,FALSE, '', '');
    END;

    PROCEDURE InsertHeaderCustomerNoDueDateInvoice@1100525014(DocumentType@1100525000 : Option;SalesHeaderTableNo@1100525001 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,0,'',102000,Text001,'Customer; DueDate',4,';');

      InsertSalesReportTextValue(DocumentType,0,'',102000,10000,SalesHeaderTableNo,2,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,0,'',102000,20000,SalesHeaderTableNo,24,'',0,'',2,FALSE, '', '');
    END;

    PROCEDURE InsertHeaderCustomerNoDueDateCreditMemo@1100525011(DocumentType@1100525000 : Option;SalesHeaderTableNo@1100525001 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,0,'',102000,Text002,'Customer',4,';');

      InsertSalesReportTextValue(DocumentType,0,'',102000,10000,SalesHeaderTableNo,2,'',0,'',0,FALSE, '', '');
    END;

    PROCEDURE InsertHeaderVatRegistrationNo@1100525009(DocumentType@1100525000 : Option;SalesHeaderTableNo@1100525001 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,0,'',103000,Text003,'VatRegistrationNo.',2,';');

      InsertSalesReportTextCondition(DocumentType,0,'',103000,10000,70,'<>''''','',0,'');

      InsertSalesReportTextValue(DocumentType,0,'',103000,10000,SalesHeaderTableNo,70,'',0,'',0,FALSE, '', '');
    END;

    PROCEDURE InsertHeaderPrincipalReference@1100525035(DocumentType@1100525000 : Option;SalesHeaderTableNo@1100525001 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,0,'',104000,Text004,'PrincipalReference',2,';');

      InsertSalesReportTextCondition(DocumentType,0,'',104000,10000,11012810,'<>''''','',0,'');

      InsertSalesReportTextValue(DocumentType,0,'',104000,10000,SalesHeaderTableNo,11012810,'',0,'',0,FALSE, '', '');
    END;

    PROCEDURE InsertHeaderInvoiceTextEmptyLine@1100525053(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,0,'',105000,'','InvoiceText EmptyLine',2,';');

      InsertSalesReportTextCondition(DocumentType,0,'',105000,10000,11012020,'<>''''','',0,'');
    END;

    PROCEDURE InsertHeaderInvoiceText@1100525055(DocumentType@1100525000 : Option;SalesHeaderTableNo@1100525001 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,0,'',106000,Text005,'InvoiceText',1,';');

      InsertSalesReportTextCondition(DocumentType,0,'',106000,10000,11012020,'<>''''','',0,'');

      InsertSalesReportTextValue(DocumentType,0,'',106000,10000,SalesHeaderTableNo,11012020,'',0,'',0,FALSE, '', '');
    END;

    PROCEDURE InsertHeaderPlantRentalPeriod@1100525060(DocumentType@1100525000 : Option;SalesHeaderTableNo@1100525001 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,0,'',110000,Text006,'Plant RentalPeriod',2,';');

      InsertSalesReportTextCondition(DocumentType,0,'',110000,10000,11012551,'<>''''','',0,'');

      InsertSalesReportTextValue(DocumentType,0,'',110000,10000,SalesHeaderTableNo,11012551,'',0,'',2,FALSE, '', '');
    END;

    PROCEDURE "//BeforeDetail"@1100525067();
    BEGIN
    END;

    PROCEDURE InsertBeforeDetailProjectNoDescription@1100525001(DocumentType@1100525000 : Option;SalesLineTableNo@1100525003 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,1,'',201000,Text007,'Project NoDescription',1,';');

      InsertSalesReportTextCondition(DocumentType,1,'',201000,10000,0,'','',11012370,'FirstLineOfProject');
      InsertSalesReportTextCondition(DocumentType,1,'',201000,20000,45,'<>''''','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',201000,30000,11012550,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',201000,40000,11012570,'0','',0,'');

      InsertSalesReportTextValue(DocumentType,1,'',201000,10000,SalesLineTableNo,45,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,1,'',201000,20000,11072003,3,'',0,'',0,FALSE, '', '');

      InsertSalesReportTextTableLink(DocumentType,1,'',201000,20000,10000,0,45,'','');
    END;

    PROCEDURE InsertBeforeDetailProjectInstallmentTextLine@1100525084(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,1,'',201250,Text005,'Project InstallmentTextLine',1,';');

      InsertSalesReportTextCondition(DocumentType,1,'',201250,10000,0,'','',11012370,'FirstLineOfProject');
      InsertSalesReportTextCondition(DocumentType,1,'',201250,20000,45,'<>''''','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',201250,30000,11012550,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',201250,40000,11012570,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',201250,50000,11012010,'1','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',201250,60000,0,'','',11012370,'InvoiceContainsNoExtensionContracts');

      InsertSalesReportTextValue(DocumentType,1,'',201250,10000,11071878,100,'',0,'',0,TRUE, '', '');

      InsertSalesReportTextTableLink(DocumentType,1,'',201250,10000,10000,1,0,'0','');
      InsertSalesReportTextTableLink(DocumentType,1,'',201250,10000,20000,0,45,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',201250,10000,30000,0,2,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',201250,10000,40000,1,0,'''''','');
      InsertSalesReportTextTableLink(DocumentType,1,'',201250,10000,50000,1,0,'0','');
    END;

    PROCEDURE InsertBeforeDetailProjectCostPlusTextLine@1100525012(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,1,'',201375,Text005,'Project CostPlusTextLine',1,';');

      InsertSalesReportTextCondition(DocumentType,1,'',201375,10000,0,'','',11012370,'FirstLineOfProject');
      InsertSalesReportTextCondition(DocumentType,1,'',201375,20000,45,'<>''''','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',201375,30000,11012550,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',201375,40000,11012570,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',201375,50000,11012010,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',201375,60000,0,'','',11012370,'InvoiceContainsNoExtensionContracts');

      InsertSalesReportTextValue(DocumentType,1,'',201375,10000,11071878,100,'',0,'',0,TRUE, '', '');

      InsertSalesReportTextTableLink(DocumentType,1,'',201375,10000,10000,1,0,'0','');
      InsertSalesReportTextTableLink(DocumentType,1,'',201375,10000,20000,0,45,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',201375,10000,30000,0,2,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',201375,10000,40000,1,0,'''''','');
      InsertSalesReportTextTableLink(DocumentType,1,'',201375,10000,50000,1,0,'1','');
    END;

    PROCEDURE InsertBeforeDetailProjectEmptyLine@1100525019(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,1,'',201500,'','Project TextLine EmptyLine',1,';');

      InsertSalesReportTextCondition(DocumentType,1,'',201500,10000,0,'','',11012370,'FirstLineOfProject');
      InsertSalesReportTextCondition(DocumentType,1,'',201500,20000,45,'<>''''','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',201500,30000,11012550,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',201500,40000,11012570,'0','',0,'');
    END;

    PROCEDURE InsertBeforeDetailProjectExtensionContractNoDescription@1100525034(DocumentType@1100525000 : Option;SalesLineTableNo@1100525003 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,1,'',202000,Text008,'Project ExtensionContract NoDescription',1,';');

      InsertSalesReportTextCondition(DocumentType,1,'',202000,10000,0,'','',11012370,'FirstLineOfExtensionContract');
      InsertSalesReportTextCondition(DocumentType,1,'',202000,20000,45,'<>''''','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',202000,30000,11012550,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',202000,40000,11012570,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',202000,50000,11012080,'<>''''','',0,'');

      InsertSalesReportTextValue(DocumentType,1,'',202000,10000,SalesLineTableNo,11012080,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,1,'',202000,20000,11012004,30,'',0,'',0,FALSE, '', '');

      InsertSalesReportTextTableLink(DocumentType,1,'',202000,20000,10000,0,45,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',202000,20000,20000,0,11012080,'','');
    END;

    PROCEDURE InsertBeforeDetailProjectExtensionContractInstallmentTextLine@1100525045(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,1,'',202500,Text005,'Project ExtensionContract InstallmentTextLine',1,';');

      InsertSalesReportTextCondition(DocumentType,1,'',202500,10000,0,'','',11012370,'FirstLineOfExtensionContract');
      InsertSalesReportTextCondition(DocumentType,1,'',202500,20000,45,'<>''''','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',202500,30000,11012550,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',202500,40000,11012570,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',202500,50000,11012080,'<>''''','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',202500,60000,11012010,'1','',0,'');

      InsertSalesReportTextValue(DocumentType,1,'',202500,10000,11071878,100,'',0,'',0,TRUE, '', '');

      InsertSalesReportTextTableLink(DocumentType,1,'',202500,10000,10000,1,0,'1','');
      InsertSalesReportTextTableLink(DocumentType,1,'',202500,10000,20000,0,45,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',202500,10000,30000,0,11012080,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',202500,10000,40000,1,0,'''''','');
      InsertSalesReportTextTableLink(DocumentType,1,'',202500,10000,50000,1,0,'0','');
    END;

    PROCEDURE InsertBeforeDetailProjectExtensionContractCostPlusTextLine@1100525050(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,1,'',202750,Text005,'Project ExtensionContract CostPlusTextLine',1,';');

      InsertSalesReportTextCondition(DocumentType,1,'',202750,10000,0,'','',11012370,'FirstLineOfExtensionContract');
      InsertSalesReportTextCondition(DocumentType,1,'',202750,20000,45,'<>''''','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',202750,30000,11012550,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',202750,40000,11012570,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',202750,50000,11012080,'<>''''','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',202750,60000,11012010,'0','',0,'');

      InsertSalesReportTextValue(DocumentType,1,'',202750,10000,11071878,100,'',0,'',0,TRUE, '', '');

      InsertSalesReportTextTableLink(DocumentType,1,'',202750,10000,10000,1,0,'1','');
      InsertSalesReportTextTableLink(DocumentType,1,'',202750,10000,20000,0,45,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',202750,10000,30000,0,11012080,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',202750,10000,40000,1,0,'''''','');
      InsertSalesReportTextTableLink(DocumentType,1,'',202750,10000,50000,1,0,'1','');
    END;

    PROCEDURE InsertBeforeDetailProjectExtensionContractEmptyLine@1100525007(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,1,'',203000,'','Project ExtensionContract TextLine EmptyLine',1,';');

      InsertSalesReportTextCondition(DocumentType,1,'',203000,10000,0,'','',11012370,'FirstLineOfExtensionContract');
      InsertSalesReportTextCondition(DocumentType,1,'',203000,20000,45,'<>''''','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',203000,30000,11012550,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',203000,40000,11012570,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,1,'',203000,50000,11012080,'<>''''','',0,'');
    END;

    PROCEDURE InsertBeforeDetailServiceContractNoDescription@1100525020(DocumentType@1100525000 : Option;SalesLineTableNo@1100525003 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,1,'',204000,Text009,'ServiceContract NoDescription',1,';');

      InsertSalesReportTextCondition(DocumentType,1,'',204000,5000,0,'','',11012370,'FirstLineOfServiceContract');
      InsertSalesReportTextCondition(DocumentType,1,'',204000,10000,11012380,'<>''''','',0,'');

      InsertSalesReportTextValue(DocumentType,1,'',204000,10000,SalesLineTableNo,11012380,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,1,'',204000,20000,11012812,20,'',0,'',0,FALSE, '', '');

      InsertSalesReportTextTableLink(DocumentType,1,'',204000,20000,10000,0,11012380,'','');
    END;

    PROCEDURE InsertBeforeDetailServiceContractEmptyLine@1100525037(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,1,'',204500,'','ServiceContract EmptyLine',1,'');

      InsertSalesReportTextCondition(DocumentType,1,'',204500,5000,0,'','',11012370,'FirstLineOfServiceContract');
      InsertSalesReportTextCondition(DocumentType,1,'',204500,10000,11012380,'<>''''','',0,'');
    END;

    PROCEDURE InsertBeforeDetailServiceOrderNoDescription@1100525047(DocumentType@1100525000 : Option;SalesLineTableNo@1100525003 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,1,'',205000,Text010,'ServiceOrder NoDescription',1,';');

      InsertSalesReportTextCondition(DocumentType,1,'',205000,5000,0,'','',11012370,'FirstLineOfServiceOrder');
      InsertSalesReportTextCondition(DocumentType,1,'',205000,10000,11012390,'<>''''','',0,'');

      InsertSalesReportTextValue(DocumentType,1,'',205000,10000,SalesLineTableNo,11012390,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,1,'',205000,20000,11012823,15,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,1,'',205000,30000,11012823,23,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,1,'',205000,40000,11012823,26,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,1,'',205000,50000,11012823,25,'',0,'',0,FALSE, '', '');

      InsertSalesReportTextTableLink(DocumentType,1,'',205000,20000,10000,0,11012390,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',205000,30000,10000,0,11012390,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',205000,40000,10000,0,11012390,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',205000,50000,10000,0,11012390,'','');
    END;

    PROCEDURE InsertBeforeDetailServiceOrderEmptyLine@1100525068(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,1,'',206000,'','ServiceOrder EmptyLine',1,'');

      InsertSalesReportTextCondition(DocumentType,1,'',206000,10000,0,'','',11012370,'FirstLineOfServiceOrder');
      InsertSalesReportTextCondition(DocumentType,1,'',206000,20000,11012390,'<>''''','',0,'');
    END;

    PROCEDURE InsertBeforeDetailRentalUnitNoDescription@1100525070(DocumentType@1100525000 : Option;SalesLineTableNo@1100525003 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,1,'',207000,Text011,'RentalUnit NoDescription',1,';');

      InsertSalesReportTextCondition(DocumentType,1,'',207000,5000,0,'','',11012370,'FirstLineOfRentalUnit');
      InsertSalesReportTextCondition(DocumentType,1,'',207000,10000,11012569,'<>''''','',0,'');

      InsertSalesReportTextValue(DocumentType,1,'',207000,10000,SalesLineTableNo,45,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,1,'',207000,20000,SalesLineTableNo,11012569,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,1,'',207000,30000,11012940,30,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,1,'',207000,40000,11012940,40,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,1,'',207000,50000,11012940,50,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,1,'',207000,60000,11012940,60,'',0,'',0,FALSE, '', '');

      InsertSalesReportTextTableLink(DocumentType,1,'',207000,30000,5000,0,45,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',207000,30000,10000,0,11012569,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',207000,40000,10000,0,45,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',207000,40000,20000,0,11012569,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',207000,50000,10000,0,45,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',207000,50000,20000,0,11012569,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',207000,60000,10000,0,45,'','');
      InsertSalesReportTextTableLink(DocumentType,1,'',207000,60000,20000,0,11012569,'','');
    END;

    PROCEDURE InsertBeforeDetailRentalUnitEmptyLine@1100525079(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,1,'',217000,'','RentalUnit EmptyLine',1,'');

      InsertSalesReportTextCondition(DocumentType,1,'',217000,10000,0,'','',11012370,'FirstLineOfRentalUnit');
      InsertSalesReportTextCondition(DocumentType,1,'',217000,20000,11012569,'<>''''','',0,'');
    END;

    PROCEDURE "//AfterDetail"@1100525008();
    BEGIN
    END;

    PROCEDURE InsertAfterDetailProjectEmptyLine@1100525013(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,3,'',301000,'','Project EmptyLine',1,';');

      InsertSalesReportTextCondition(DocumentType,3,'',301000,10000,0,'','',11012370,'LastLineOfProject');
      InsertSalesReportTextCondition(DocumentType,3,'',301000,20000,45,'<>''''','',0,'');
      InsertSalesReportTextCondition(DocumentType,3,'',301000,30000,11012550,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,3,'',301000,40000,11012570,'0','',0,'');
    END;

    PROCEDURE InsertAfterDetailServiceContractEmptyLine@1100525022(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,3,'',304000,'','ServiceContract EmptyLine',1,';');

      InsertSalesReportTextCondition(DocumentType,3,'',304000,5000,0,'','',11012370,'LastLineOfServiceContract');
      InsertSalesReportTextCondition(DocumentType,3,'',304000,10000,11012380,'<>''''','',11012370,'');
    END;

    PROCEDURE InsertAfterDetailServiceOrderInvoiceTextLine@1100525015(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,3,'',304500,Text005,'ServiceOrder InvoiceTextLine',1,';');

      InsertSalesReportTextCondition(DocumentType,3,'',304500,5000,0,'','',11012370,'LastLineOfServiceOrder');
      InsertSalesReportTextCondition(DocumentType,3,'',304500,10000,11012390,'<>''''','',0,'');

      InsertSalesReportTextValue(DocumentType,3,'',304500,10000,11012882,6,'',0,'',0,TRUE, '', '');

      InsertSalesReportTextTableLink(DocumentType,3,'',304500,10000,10000,1,0,'3','');
      InsertSalesReportTextTableLink(DocumentType,3,'',304500,10000,20000,0,11012390,'','');
      InsertSalesReportTextTableLink(DocumentType,3,'',304500,10000,30000,1,0,'93','');
    END;

    PROCEDURE InsertAfterDetailServiceOrderEmptyLine@1100525017(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,3,'',305000,''     ,'ServiceOrder EmptyLine',1,';');

      InsertSalesReportTextCondition(DocumentType,3,'',305000,5000,0,'','',11012370,'LastLineOfServiceOrder');
      InsertSalesReportTextCondition(DocumentType,3,'',305000,10000,11012390,'<>''''','',0,'');
    END;

    PROCEDURE InsertAfterDetailRentalUnitEmptyLine@1100525023(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,3,'',307000,''     ,'RentalUnit EmptyLine',1,';');

      InsertSalesReportTextCondition(DocumentType,3,'',307000,5000,0,'','',11012370,'LastLineOfRentalUnit');
      InsertSalesReportTextCondition(DocumentType,3,'',307000,10000,11012569,'<>''''','',0,'');
    END;

    PROCEDURE "//Footer"@1100525041();
    BEGIN
    END;

    PROCEDURE InsertFooterProjectContractAmount@1100525046(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',902000,Text012,'Project ContractAmount',3,';');

      InsertSalesReportTextCondition(DocumentType,4,'',902000,10000,11012010,'1','',0,'');
      InsertSalesReportTextCondition(DocumentType,4,'',902000,15000,0,'','',11012370,'InvoiceContainsOneProject');
      InsertSalesReportTextCondition(DocumentType,4,'',902000,20000,0,'','',11012370,'ContractAmountHasValue');
      //InsertSalesReportTextCondition(DocumentType,4,'',902000,30000,0,'','',11012370,'InvoiceContainsNoExtensionContracts');
      InsertSalesReportTextCondition(DocumentType,4,'',902000,40000,0,'','',11012370,'InvoiceContainsNoPlots');

      InsertSalesReportTextValue(DocumentType,4,'',902000,10000,0,0,'',11012371,'GetContractAmount',3,TRUE, '1', ',');
    END;

    PROCEDURE InsertFooterProjectExtensionContractAmount@1100528200(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',902500,Text028,'Project Extension ContractAmount',3,';');

      InsertSalesReportTextCondition(DocumentType,4,'',902500,10000,11012010,'1','',0,'');
      InsertSalesReportTextCondition(DocumentType,4,'',902500,15000,0,'','',11012370,'InvoiceContainsOneProject');
      InsertSalesReportTextCondition(DocumentType,4,'',902500,20000,0,'','',11012370,'ExtensionContractAmountHasValue');
      //InsertSalesReportTextCondition(DocumentType,4,'',902500,30000,0,'','',11012370,'InvoiceContainsNoExtensionContracts');
      InsertSalesReportTextCondition(DocumentType,4,'',902500,40000,0,'','',11012370,'InvoiceContainsNoPlots');

      InsertSalesReportTextValue(DocumentType,4,'',902500,10000,0,0,'',11012371,'GetExtensionContractAmount',3,TRUE, '1', ',');
    END;

    PROCEDURE InsertFooterProjectInvoicedContractAmount@1100525052(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',903000,Text013,'Project InvoicedContractAmount',3,';');

      InsertSalesReportTextCondition(DocumentType,4,'',903000,10000,11012010,'1','',0,'');
      InsertSalesReportTextCondition(DocumentType,4,'',903000,15000,0,'','',11012370,'InvoiceContainsOneProject');
      InsertSalesReportTextCondition(DocumentType,4,'',903000,20000,0,'','',11012370,'TotalContractAmountHasValue');
      //InsertSalesReportTextCondition(DocumentType,4,'',903000,30000,0,'','',11012370,'InvoiceContainsNoExtensionContracts');
      InsertSalesReportTextCondition(DocumentType,4,'',903000,40000,0,'','',11012370,'InvoiceContainsNoPlots');

      InsertSalesReportTextValue(DocumentType,4,'',903000,10000,0,0,'',11012371,'GetInvoiced',3,TRUE, '1', ',');;
    END;

    PROCEDURE InsertFooterProjectThisInvoiceContractAmount@1100525056(DocumentType@1100525000 : Option;SalesHeaderTableNo@1100525001 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',904000,Text014,'Project ThisInvoiceContractAmount',3,';');

      InsertSalesReportTextCondition(DocumentType,4,'',904000,10000,11012010,'1','',0,'');
      InsertSalesReportTextCondition(DocumentType,4,'',904000,15000,0,'','',11012370,'InvoiceContainsOneProject');
      InsertSalesReportTextCondition(DocumentType,4,'',904000,20000,0,'','',11012370,'TotalContractAmountHasValue');
      //InsertSalesReportTextCondition(DocumentType,4,'',904000,30000,0,'','',11012370,'InvoiceContainsNoExtensionContracts');
      InsertSalesReportTextCondition(DocumentType,4,'',904000,40000,0,'','',11012370,'InvoiceContainsNoPlots');

      InsertSalesReportTextValue(DocumentType, 4, '', 904000, 10000, 0, 0, '', 11012371, 'GetNowInvoiced', 3, TRUE, '1', ',');
    END;

    PROCEDURE InsertFooterProjectContractAmountStillToInvoice@1100525054(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',905000,Text015,'Project ContractAmountStillToInvoice',3,';');

      InsertSalesReportTextCondition(DocumentType,4,'',905000,10000,11012010,'1','',0,'');
      InsertSalesReportTextCondition(DocumentType,4,'',905000,15000,0,'','',11012370,'InvoiceContainsOneProject');
      InsertSalesReportTextCondition(DocumentType,4,'',905000,20000,0,'','',11012370,'TotalContractAmountHasValue');
      //InsertSalesReportTextCondition(DocumentType,4,'',905000,30000,0,'','',11012370,'InvoiceContainsNoExtensionContracts');
      InsertSalesReportTextCondition(DocumentType,4,'',905000,40000,0,'','',11012370,'InvoiceContainsNoPlots');

      InsertSalesReportTextValue(DocumentType,4,'',905000,10000,0,0,'',11012371,'GetToBeInvoiced',3,TRUE, '1', ',');
    END;

    PROCEDURE InsertFooterProjectContractAmountEmptyLine@1100525072(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',906000,'','EmptyLine',0,';');

      InsertSalesReportTextCondition(DocumentType,4,'',906000,10000,11012010,'1','',0,'');
      InsertSalesReportTextCondition(DocumentType,4,'',906000,15000,0,'','',11012370,'InvoiceContainsOneProject');
      InsertSalesReportTextCondition(DocumentType,4,'',906000,20000,0,'','',11012370,'TotalContractAmountHasValue');
      //InsertSalesReportTextCondition(DocumentType,4,'',906000,30000,0,'','',11012370,'InvoiceContainsNoExtensionContracts');
      InsertSalesReportTextCondition(DocumentType,4,'',906000,40000,0,'','',11012370,'InvoiceContainsNoPlots');
    END;

    PROCEDURE InsertFooterLaborPartInstallment@1100525018(DocumentType@1100525000 : Option;SalesHeaderTableNo@1100525001 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',907000,Text016,'LaborPartInstallment',3,';');

      InsertSalesReportTextCondition(DocumentType,4,'',907000,10000,11012562,'1','',0,'');
      InsertSalesReportTextCondition(DocumentType,4,'',907000,20000,0,'','',11012370,'BlockedAmountSubcontractingHasValue');

      InsertSalesReportTextValue(DocumentType,4,'',907000,10000,SalesHeaderTableNo,11012567,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,4,'',907000,20000,0,0,'',11012371,'GetLaborAmountSubcontracting',3,FALSE, '', '');
    END;

    PROCEDURE InsertFooterLaborPartCostPlus@1100525036(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',908000,Text017,'LaborPartCostPlus',3,';');

      InsertSalesReportTextCondition(DocumentType,4,'',908000,10000,11012562,'0','',0,'');
      InsertSalesReportTextCondition(DocumentType,4,'',908000,20000,0,'','',11012370,'BlockedAmountSubcontractingHasValue');

      // OK ??
      InsertSalesReportTextValue(DocumentType,4,'',908000,20000,0,0,'',11012371,'GetLaborAmountSubcontracting',3,FALSE, '', '');
    END;

    PROCEDURE InsertFooterBlockedAmount@1100525039(DocumentType@1100525000 : Option;SalesHeaderTableNo@1100525001 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',909000,Text018,'BlockedAmount',3,';');

      InsertSalesReportTextCondition(DocumentType,4,'',909000,10000,0,'','',11012370,'BlockedAmountSubcontractingHasValue');

      InsertSalesReportTextValue(DocumentType,4,'',909000,10000,SalesHeaderTableNo,11012568,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,4,'',909000,20000,0,0,'',11012371,'GetBlockedAmountSubcontracting',3,FALSE, '', '');
    END;

    PROCEDURE InsertFooterReservedVatPeriod@1100525043(DocumentType@1100525000 : Option;SalesHeaderTableNo@1100525001 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',910000,Text019,'ReversedVATPeriod',1,';');

      InsertSalesReportTextCondition(DocumentType,4,'',910000,10000,0,'','',11012370,'BlockedAmountSubcontractingHasValue');
      InsertSalesReportTextCondition(DocumentType,4,'',910000,20000,11012570,'<>''''','',0,'');

      InsertSalesReportTextValue(DocumentType,4,'',910000,10000,SalesHeaderTableNo,11012570,'',0,'',0,FALSE, '', '');
    END;

    PROCEDURE InsertFooterBlockedAmountEmptyLine@1100525048(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',911000,'','EmptyLine',1,';');

      InsertSalesReportTextCondition(DocumentType,4,'',911000,10000,0,'','',11012370,'BlockedAmountSubcontractingHasValue');
    END;

    PROCEDURE InsertFooterBankAccountPayment@1100525059(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',912000,Text020,'BankAccountPayment',1,';');

      InsertSalesReportTextCondition(DocumentType,4,'',912000,10000,11000000,'''''','',0,'');

      InsertSalesReportTextValue(DocumentType,4,'',912000,10000,0,0,'',11012371,'GetCurrencyCode',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,4,'',912000,20000,0,0,'',11012371,'GetRestAmountSubcontracting',3,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,4,'',912000,30000,79,38,'',0,'',0,FALSE, '', '');
    END;

    PROCEDURE InsertFooterBlockedAccountPayment@1100525062(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',913000,Text021,'BlockedAccountPayment',1,';');

      InsertSalesReportTextCondition(DocumentType,4,'',913000,10000,0,'','',11012370,'BlockedAmountSubcontractingHasValue');
      InsertSalesReportTextCondition(DocumentType,4,'',913000,20000,11000000,'''''','',0,'');

      InsertSalesReportTextValue(DocumentType,4,'',913000,10000,0,0,'',11012371,'GetCurrencyCode',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,4,'',913000,20000,0,0,'',11012371,'GetBlockedAmountSubcontracting',3,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,4,'',913000,30000,79,11012075,'',0,'',0,FALSE, '', '');
    END;

    PROCEDURE InsertFooterNotaryBankAccountPayment@1100525066(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',914000,Text022,'NotaryBankAccountPayment',1,';');

      InsertSalesReportTextCondition(DocumentType,4,'',914000,10000,11012558,'>0','',0,'');
      InsertSalesReportTextCondition(DocumentType,4,'',914000,20000,11000000,'''''','',0,'');

      InsertSalesReportTextValue(DocumentType,4,'',914000,10000,0,0,'',11012371,'GetCurrencyCode',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,4,'',914000,20000,0,0,'',11012371,'GetWithholdAmount',3,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,4,'',914000,30000,0,0,'',11012371,'GetPublicNotaryBankAccountNo',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,4,'',914000,40000,18,2,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,4,'',914000,50000,18,7,'',0,'',0,FALSE, '', '');
    END;

    PROCEDURE InsertFooterNotaryCase@1100525074(DocumentType@1100525000 : Option;SalesHeaderTableNo@1100525001 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',915000,Text023,'NotaryCase',1,';');

      InsertSalesReportTextCondition(DocumentType,4,'',915000,10000,11012558,'>0','',0,'');
      InsertSalesReportTextCondition(DocumentType,4,'',915000,20000,11000000,'''''','',0,'');

      InsertSalesReportTextValue(DocumentType,4,'',915000,10000,SalesHeaderTableNo,11012561,'',0,'',0,FALSE, '', '');
    END;

    PROCEDURE InsertFooterNotaryWithhold@1100525078(DocumentType@1100525000 : Option;SalesHeaderTableNo@1100525001 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',916000,Text024,'NotaryWithhold',1,';');

      InsertSalesReportTextCondition(DocumentType,4,'',916000,10000,11012558,'>0','',0,'');
      InsertSalesReportTextCondition(DocumentType,4,'',916000,20000,11000000,'''''','',0,'');

      InsertSalesReportTextValue(DocumentType,4,'',916000,10000,SalesHeaderTableNo,11012558,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,4,'',916000,20000,0,0,'',11012371,'GetCurrencyCode',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,4,'',916000,30000,0,0,'',11012371,'GetLastInstallmentAmount',0,FALSE, '', '');
    END;

    PROCEDURE InsertFooterVatClauseDescriptionsEmptyLine@1100529207(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',916500,'','VATClauseDescriptionsEmptyLine',1,';');

      InsertSalesReportTextCondition(DocumentType,4,'',916500,10000,0,'','',11012370,'VATClauseDescriptionsHaveValue');
    END;

    PROCEDURE InsertFooterVatClauseDescriptions@1100529200(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',916750,Text005,'VATClauseDescriptions',1,';');

      InsertSalesReportTextCondition(DocumentType,4,'',916750,10000,0,'','',11012370,'VATClauseDescriptionsHaveValue');

      InsertSalesReportTextValue(DocumentType,4,'',916750,10000,0,0,'',11012371,'GetVATClauseDescriptions',0,FALSE, '', '');
    END;

    PROCEDURE InsertFooterEmptyLine@1100529204(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',917000,'','EmptyLine',1,';');
    END;

    PROCEDURE InsertFooterMentionOnPayment@1100525085(DocumentType@1100525000 : Option;SalesHeaderTableNo@1100525001 : Integer);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',918000,Text025,'MentionOnPayment',1,';');

      InsertSalesReportTextCondition(DocumentType,4,'',918000,10000,11000000,'''''','',0,'');

      InsertSalesReportTextValue(DocumentType,4,'',918000,10000,SalesHeaderTableNo,2,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextValue(DocumentType,4,'',918000,20000,SalesHeaderTableNo,3,'',0,'',0,FALSE, '', '');
    END;

    PROCEDURE InsertFooterPaymentTerms@1100525086(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',919000,Text026,'PaymentTerms',1,';');

      InsertSalesReportTextCondition(DocumentType,4,'',919000,10000,11000000,'''''','',0,'');

      InsertSalesReportTextValue(DocumentType,4,'',919000,10000,0,0,'',11012371,'GetTranslatedPaymentTermsDescription',0,FALSE, '', '');
    END;

    PROCEDURE InsertFooterDirectDebit@1100525087(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',919500,Text005,'DirectDebit',1,';');

      InsertSalesReportTextCondition(DocumentType,4,'',919500,10000,11000000,'<>''''','',0,'');

      InsertSalesReportTextValue(DocumentType,4,'',919500,10000,11000004,3,'',0,'',0,FALSE, '', '');
      InsertSalesReportTextTableLink(DocumentType,4,'',919500,10000,10000,1,0,'0','');
      InsertSalesReportTextTableLink(DocumentType,4,'',919500,10000,20000,0,11000000,'','');
    END;

    PROCEDURE InsertFooterQuestions@1100525088(DocumentType@1100525000 : Option);
    BEGIN
      InsertStdSalesReportTextLine(DocumentType,4,'',920000,Text027,'Questions',1,';');

      InsertSalesReportTextCondition(DocumentType,4,'',920000,10000,0,'','',11012370,'AllValuesAreFilled');

      InsertSalesReportTextValue(DocumentType,4,'',920000,10000,79,11012080,'',0,'',0,FALSE, '', '');
    END;

    PROCEDURE "//end"@1100525006();
    BEGIN
    END;

    PROCEDURE InsertStdSalesReportTextLine@1100525029(DocumentType@1100525001 : Option;TextLineType@1100525002 : Option;LanguageCode@1100525003 : Code[10];LineNo@1100525004 : Integer;Text@1100525008 : Text[250];Description@1100525005 : Text[50];NoOfColumns@1100525006 : Integer;ColumnSeparator@1100525007 : Text[10]);
    VAR
      StdSalesReportTextLine@1100525000 : Record 11071890;
    BEGIN
      StdSalesReportTextLine."Document Type" := DocumentType;
      StdSalesReportTextLine."Text Line Type" := TextLineType;
      StdSalesReportTextLine."Language Code" := LanguageCode;
      StdSalesReportTextLine."Line No." := LineNo;
      StdSalesReportTextLine.Text := Text;
      StdSalesReportTextLine.Description := Description;
      StdSalesReportTextLine."No. of Columns" := NoOfColumns;
      StdSalesReportTextLine."Column Separator" := ColumnSeparator;
      StdSalesReportTextLine.INSERT;
    END;

    PROCEDURE InsertSalesReportTextCondition@1100525030(DocumentType@1100525008 : Option;TextLineType@1100525007 : Option;LanguageCode@1100525006 : Code[10];TextLineNo@1100525009 : Integer;LineNo@1100525005 : Integer;FieldNo@1100525010 : Integer;FilterExpression@1100525004 : Text[250];Description@1100525003 : Text[50];CodeUnitNo@1100525001 : Integer;FunctionName@1100525002 : Text[128]);
    VAR
      SalesReportTextCondition@1100525000 : Record 11071891;
    BEGIN
      SalesReportTextCondition."Document Type" := DocumentType;
      SalesReportTextCondition."Text Line Type" := TextLineType;
      SalesReportTextCondition."Language Code" := LanguageCode;
      SalesReportTextCondition."Text Line No." := TextLineNo;
      SalesReportTextCondition."Line No." := LineNo;
      SalesReportTextCondition."Field No." := FieldNo;
      SalesReportTextCondition."Filter Expression" := FilterExpression;
      SalesReportTextCondition.Description := Description;
      SalesReportTextCondition."Codeunit No." := CodeUnitNo;
      SalesReportTextCondition."Function Name" := FunctionName;
      SalesReportTextCondition.INSERT;
    END;

    PROCEDURE InsertSalesReportTextValue@1100525031(DocumentType@1100525005 : Option;TextLineType@1100525004 : Option;LanguageCode@1100525003 : Code[10];TextLineNo@1100525002 : Integer;LineNo@1100525001 : Integer;RelatedTableNo@1100525009 : Integer;RelatedTableFieldNo@1100525010 : Integer;Description@1100525008 : Text[50];CodeUnitNo@1100525007 : Integer;FunctionName@1100525006 : Text[128];FormatOption@1100525011 : Option;MultiLine@1100525012 : Boolean;FunctionParameters@1100528200 : Text;ParameterSeparator@1100528201 : Text);
    VAR
      SalesReportTextValue@1100525000 : Record 11071911;
    BEGIN
      SalesReportTextValue."Document Type" := DocumentType;
      SalesReportTextValue."Text Line Type" := TextLineType;
      SalesReportTextValue."Language Code" := LanguageCode;
      SalesReportTextValue."Text Line No." := TextLineNo;
      SalesReportTextValue."Line No." := LineNo;
      SalesReportTextValue."Related Table No." := RelatedTableNo;
      SalesReportTextValue."Related Table Field No." := RelatedTableFieldNo;
      SalesReportTextValue.Description := Description;
      SalesReportTextValue."Codeunit No." := CodeUnitNo;
      SalesReportTextValue."Function Name" := FunctionName;
      SalesReportTextValue.Format := FormatOption;
      SalesReportTextValue."Multiple Lines" := MultiLine;
      SalesReportTextValue."Function Parameters" := FunctionParameters;
      SalesReportTextValue."Parameter Separator" := ParameterSeparator;
      SalesReportTextValue.INSERT;
    END;

    PROCEDURE InsertSalesReportTextTableLink@1100525004(DocumentType@1100525005 : Option;TextLineType@1100525004 : Option;LanguageCode@1100525003 : Code[10];TextLineNo@1100525002 : Integer;TextValueLineNo@1100525006 : Integer;LineNo@1100525001 : Integer;TypeOpt@1100525007 : Option;FieldNo@1100525008 : Integer;ValueTxt@1100525009 : Text[50];Description@1100525010 : Text[50]);
    VAR
      SalesReportTextTableLink@1100525000 : Record 11071913;
    BEGIN
      SalesReportTextTableLink."Document Type" := DocumentType;
      SalesReportTextTableLink."Text Line Type" := TextLineType;
      SalesReportTextTableLink."Language Code" := LanguageCode;
      SalesReportTextTableLink."Text Line No." := TextLineNo;
      SalesReportTextTableLink."Text Value Line No." := TextValueLineNo;
      SalesReportTextTableLink."Line No." := LineNo;
      SalesReportTextTableLink.Type := TypeOpt;
      SalesReportTextTableLink."Field No." := FieldNo;
      SalesReportTextTableLink.Value := ValueTxt;
      SalesReportTextTableLink.Description := Description;
      SalesReportTextTableLink.INSERT;
    END;

    BEGIN
    END.
  }
}

