OBJECT Table 11020553 Plant Rental Free Order Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);
             END;

    OnModify=BEGIN
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);
             END;

    OnRename=BEGIN
               GetOrderHeader;
               OrderRec.TESTFIELD(Posted,FALSE);
             END;

    CaptionML=[ENU=Plant Rent Free Order Line;
               NOR=Maskinordrerad for gratis leie;
               SVE=Maskinorderrad f”r gratis hyra];
  }
  FIELDS
  {
    { 10  ;   ;Rental Free Order No.;Code20       ;TableRelation="Plant Rental Free Order".No.;
                                                   CaptionML=[ENU=Rental Free Order No.;
                                                              NOR=Ordrenr. for Gratis Leie;
                                                              SVE=Ordernr f”r gratis hyra] }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 30  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   OnValidate=VAR
                                                                DefaultPlantNo@1100525000 : Code[10];
                                                              BEGIN
                                                                CALCFIELDS(Bulk, "Unit of Measure");
                                                                IF "Plant Type" = '' THEN
                                                                  EXIT;

                                                                IF "Plant Type" <> xRec."Plant Type" THEN BEGIN
                                                                  CheckInventoryPresent(FIELDNO("Plant Type"));
                                                                  DefaultPlantNo := '';
                                                                  IF Bulk THEN BEGIN
                                                                    PlantInventRec.SETRANGE("Plant No.", '0'); //* Same filters as in 'CheckInventoryPresent' for 'Plant Type' level,
                                                                    IF NOT PlantInventRec.ISEMPTY THEN         //* and extra filter on Plant Number
                                                                      DefaultPlantNo := '0';
                                                                  END;
                                                                  "Plant No." := '';
                                                                  "From Rate Code" := '';
                                                                  Description := '';
                                                                  "Description 2" := '';
                                                                  Quantity := 0;
                                                                  IF DefaultPlantNo <> '' THEN BEGIN
                                                                    "Plant No." := DefaultPlantNo;
                                                                    FillDefaultFromRateCode();
                                                                    FillDefaultToRateCode();
                                                                  END;
                                                                  GetPlantDescription();
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp] }
    { 40  ;   ;Plant No.           ;Code10        ;TableRelation=IF (Plant No.=FILTER(<>0)) "Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=VAR
                                                                OrderLineRec2@1100525000 : Record 11020553;
                                                              BEGIN
                                                                IF "Plant No." = '' THEN
                                                                  EXIT;

                                                                IF "Plant No." <> xRec."Plant No." THEN BEGIN
                                                                  CheckInventoryPresent(FIELDNO("Plant No."));
                                                                  CALCFIELDS(Bulk);
                                                                  IF Bulk THEN
                                                                    Quantity := 0
                                                                  ELSE BEGIN
                                                                    IF "Plant No." = '0' THEN
                                                                      FIELDERROR("Plant No.");
                                                                    OrderLineRec2.SETCURRENTKEY("Rental Free Order No.", "Plant Type", "Plant No.");
                                                                    OrderLineRec2.SETRANGE("Rental Free Order No.", "Rental Free Order No.");
                                                                    OrderLineRec2.SETRANGE("Plant Type", "Plant Type");
                                                                    OrderLineRec2.SETRANGE("Plant No.", "Plant No.");
                                                                    OrderLineRec2.SETFILTER("Line No.", '<>%1', "Line No.");
                                                                    IF OrderLineRec2.FINDFIRST THEN
                                                                      ERROR(Text006, FIELDCAPTION("Plant No."), "Plant Type", "Plant No.",
                                                                        TABLECAPTION, "Rental Free Order No.", OrderLineRec2."Line No.");
                                                                    IF Quantity <> 1 THEN
                                                                      Quantity := 1;
                                                                  END;
                                                                  GetPlantDescription();
                                                                  FillDefaultFromRateCode();
                                                                  FillDefaultToRateCode();
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr] }
    { 50  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 52  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 55  ;   ;Bulk                ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Bulk WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=[ENU=Bulk;
                                                              NOR=Bulk;
                                                              SVE=Bulk];
                                                   Editable=No }
    { 60  ;   ;From Rate Code      ;Code10        ;OnValidate=BEGIN
                                                                GetOrderHeader;
                                                                IF ("From Rate Code" <> '') OR (("From Rate Code" = '') AND (OrderRec.Type = OrderRec.Type::EndRentalFree)) THEN BEGIN
                                                                  CheckFromRateCode(OrderRec);
                                                                  CheckInventoryQuantity();  //* There first CheckInventoryPresent is done for 'Rate Code' level
                                                                END;
                                                                IF ("From Rate Code" <> xRec."From Rate Code") THEN
                                                                  FillDefaultElement();
                                                              END;

                                                   OnLookup=BEGIN
                                                              GetOrderHeader;
                                                              IF (OrderRec.Type = OrderRec.Type::EndRentalFree) THEN
                                                                PlantRateCodeRec.Code :=
                                                                  PlantRateCodeRec.LookupPlantRateWithPercFilter(OrderRec."Plant Location", "From Rate Code", TRUE, '', '=0')
                                                              ELSE
                                                                PlantRateCodeRec.Code :=
                                                                  PlantRateCodeRec.LookupPlantRateWithPercFilter(OrderRec."Plant Location", "From Rate Code", TRUE, '', '<>0');
                                                              IF (NOT OrderRec.Posted) AND (PlantRateCodeRec.Code <> "From Rate Code") THEN
                                                                VALIDATE("From Rate Code", PlantRateCodeRec.Code);
                                                            END;

                                                   CaptionML=[ENU=From Rate Code;
                                                              NOR=Fra-satskode;
                                                              SVE=Fr†n-avgiftskod] }
    { 70  ;   ;To Rate Code        ;Code10        ;OnValidate=BEGIN
                                                                IF "To Rate Code" <> '' THEN BEGIN
                                                                  GetOrderHeader;
                                                                  CheckToRateCode(OrderRec);
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupToRateCode(FALSE);
                                                            END;

                                                   CaptionML=[ENU=To Rate Code;
                                                              NOR=Til-satskode;
                                                              SVE=Till-avgiftskod] }
    { 80  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF Quantity <> 0 THEN BEGIN
                                                                  IF Quantity < 0 THEN
                                                                    FIELDERROR(Quantity);
                                                                  CALCFIELDS(Bulk);
                                                                  IF (NOT Bulk) AND (Quantity <> 0) THEN
                                                                    TESTFIELD(Quantity, 1);
                                                                  CheckInventoryQuantity();
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 85  ;   ;Total Quantity      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Plant Rental Free Order Line".Quantity WHERE (Rental Free Order No.=FIELD(Rental Free Order No.),
                                                                                                                  Plant Type=FIELD(Plant Type),
                                                                                                                  Plant No.=FIELD(Plant No.),
                                                                                                                  From Rate Code=FIELD(From Rate Code)));
                                                   CaptionML=[ENU=Total Quantity;
                                                              NOR=Totalt antall;
                                                              SVE=Totalt antal];
                                                   Editable=No }
    { 90  ;   ;Unit of Measure     ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type"."Unit of Measure" WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=M†leenhet;
                                                              SVE=Enhet];
                                                   Editable=No }
    { 100 ;   ;Element             ;Code20        ;OnValidate=BEGIN
                                                                IF Element = '' THEN
                                                                  EXIT;
                                                                GetOrderHeader();
                                                                PlantElementMgt.OnValidateElement(OrderRec."Plant Location", Element, '', FALSE);
                                                              END;

                                                   OnLookup=VAR
                                                              NewElement@1100525000 : Code[20];
                                                            BEGIN
                                                              GetOrderHeader();
                                                              NewElement := PlantElementMgt.OnLookupElement(OrderRec."Plant Location", Element, '', (NOT OrderRec.Posted));
                                                              IF (NewElement <> '') AND (NewElement <> Element) THEN
                                                                VALIDATE(Element, NewElement);
                                                            END;

                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
  }
  KEYS
  {
    {    ;Rental Free Order No.,Line No.          ;Clustered=Yes }
    {    ;Rental Free Order No.,Plant Type,Plant No.,From Rate Code;
                                                   SumIndexFields=Quantity }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100525003 : TextConst 'ENU=Rental Free;NOR=gratis leie;SVE=Gratis hyra';
      PlantSetupRec@11012001 : Record 11012550;
      OrderRec@11012002 : Record 11020552;
      PlantTypeRec@1100525004 : Record 11012551;
      PlantNoRec@11012005 : Record 11012552;
      PlantRateCodeRec@1100525002 : Record 11020502;
      PlantInventRec@1100525000 : Record 11012555;
      Text002@1100525008 : TextConst 'ENU=Rental;NOR=leie;SVE=uthyrning';
      Text003@1100525001 : TextConst 'ENU=''%1'' (%2%) must be ''%3'';NOR=%1'' (%2%) m† v‘re ''%3'';SVE=''%1'' (%2%) m†ste vara ''%3''';
      Text004@1100525005 : TextConst 'ENU=''%1'' is on %2 not present with %3 ''%4'';NOR=''%1'' er p† %2 finnes ikke med %3 ''%4'';SVE=''%1'' „r p† %2 finns inte med %3 ''%4''';
      Text005@1100525007 : TextConst 'ENU=(%1) is greater than present quantity (%2) on (%3) of %4 ''%5'', %6 ''%7'';NOR=(%1) er st›rre enn aktuelt antall (%2) p† (%3) av %4 ''%5'', %6 ''%7'';SVE=(%1) „r st”rre „n aktuellt antal (%2) p† (%3) av %4 ''%5'', %6 ''%7''';
      PlantElementMgt@1100525009 : Codeunit 11012582;
      OrderDate@1100525006 : Date;
      Text006@1100525010 : TextConst 'ENU=%1 ''%2-%3'' is already present on %4 ''%5 - %6''.;NOR=%1 ''%2-%3'' finnes allerede p† %4 ''%5 Í %6''.;SVE=%1 ''%2-%3'' finns redan p† %4 ''%5 Í %6''.';
      Text007@1100525011 : TextConst 'ENU=No lines selected;SVE=Inga rader valda';

    PROCEDURE GetOrderHeader@5();
    BEGIN
      TESTFIELD("Rental Free Order No.");
      OrderRec.GET("Rental Free Order No.");
      OrderRec.TESTFIELD("Plant Location");
      IF OrderRec.Type <> OrderRec.Type::EndRentalFree THEN BEGIN
        OrderRec.TESTFIELD("Starting Date Rental Free");
        OrderDate := OrderRec."Starting Date Rental Free"
      END ELSE BEGIN
        OrderRec.TESTFIELD("Ending Date Rental Free");
        OrderDate := OrderRec."Ending Date Rental Free";
      END;
    END;

    PROCEDURE GetPlantDescription@4();
    BEGIN
      PlantNoRec.GetPlantDescription("Plant Type", "Plant No.", Description);
    END;

    PROCEDURE FillRentalTypeText@1100525008(RentalTypeOfFrom@1100525000 : Boolean) : Text[30];
    BEGIN
      IF OrderRec.Type IN [OrderRec.Type::Modify, OrderRec.Type::PeriodModify] THEN  //C008369
        EXIT(Text002);
      IF OrderRec.Type = OrderRec.Type::EndRentalFree THEN BEGIN
        IF RentalTypeOfFrom THEN
          EXIT(Text001)
        ELSE
          EXIT(Text002);
      END ELSE BEGIN
        IF RentalTypeOfFrom THEN
          EXIT(Text002)
        ELSE
          EXIT(Text001);
      END;
    END;

    PROCEDURE FillDefaultFromRateCode@1100485004();
    BEGIN
      IF ("Plant Type" = '') OR ("Plant No." = '') THEN
        EXIT;

      GetOrderHeader;
      PlantInventRec.RESET;
      PlantInventRec.SETRANGE(Removed, FALSE);
      PlantInventRec.SETRANGE(Location, OrderRec."Plant Location");
      PlantInventRec.SETRANGE("Plant Type", "Plant Type");
      PlantInventRec.SETRANGE("Plant No.", "Plant No.");
      PlantInventRec.SETFILTER("Rate Code", FillFromRateCodeFilter());
      PlantInventRec.SETRANGE(Sold, FALSE);
      PlantInventRec.SETFILTER("Present from", '<=%1', OrderDate);
      PlantInventRec.SETFILTER(Quantity, '>%1', 0);
      IF "From Rate Code" <> '' THEN BEGIN
        PlantInventRec.FILTERGROUP(9);
        PlantInventRec.SETRANGE("Rate Code", "From Rate Code");
        PlantInventRec.FILTERGROUP(0);
        IF PlantInventRec.FINDFIRST THEN
          EXIT;
        PlantInventRec.FILTERGROUP(9);
        PlantInventRec.SETRANGE("Rate Code");  //* Reset filter
        PlantInventRec.FILTERGROUP(0);
        "From Rate Code" := '';
      END;
      IF PlantInventRec.FINDFIRST THEN BEGIN
        "From Rate Code" := PlantInventRec."Rate Code";
        IF PlantInventRec.NEXT <> 0 THEN
          "From Rate Code" := '';
        IF ("From Rate Code" <> '') THEN
          FillDefaultElement();
      END;
    END;

    PROCEDURE FillDefaultToRateCode@1100485006();
    VAR
      RemovedOnDate@1100525000 : Date;
      EndOfRepeat@1100525001 : Boolean;
      ToRateCode@1100525002 : Code[10];
    BEGIN
      IF "To Rate Code" <> '' THEN
        EXIT;

      PlantSetupRec.GET;
      GetOrderHeader;
      IF OrderRec.Type IN [OrderRec.Type::Modify, OrderRec.Type::PeriodModify] THEN  //C008369.n
        EXIT;
      IF OrderRec.Type <> OrderRec.Type::EndRentalFree THEN BEGIN
        IF PlantRateCodeRec.ReadPlantRateCode(OrderRec."Plant Location",PlantSetupRec."Default Rate Code",'') THEN BEGIN
          IF PlantRateCodeRec.Percentage = 0 THEN
            "To Rate Code" := PlantSetupRec."Default Rate Code";
        END;
      END ELSE BEGIN
        CALCFIELDS(Bulk);
        RemovedOnDate := 0D;
        EndOfRepeat := FALSE;
        PlantInventRec.RESET;
        PlantInventRec.SETRANGE(Removed, TRUE);
        PlantInventRec.SETRANGE(Location, OrderRec."Plant Location");
        PlantInventRec.SETRANGE("Plant Type", "Plant Type");
        PlantInventRec.SETRANGE("Plant No.", "Plant No.");
        PlantInventRec.SETFILTER("Rate Code", '<>%1', '');
        PlantInventRec.SETRANGE(Sold, FALSE);
        PlantInventRec.SETFILTER("Present from", '<%1', OrderDate);
        IF OrderDate <> 0D THEN
          PlantInventRec.SETRANGE("Removed on", OrderDate-365, OrderDate-1);
        PlantInventRec.SETFILTER(Quantity, '>%1', 0);
        IF PlantInventRec.FINDSET(FALSE,FALSE) THEN BEGIN
          REPEAT
            IF NOT Bulk THEN BEGIN  //* For unique last rental rate code
              IF PlantInventRec."Removed on" > RemovedOnDate THEN BEGIN
                IF PlantRateCodeRec.ReadPlantRateCode(OrderRec."Plant Location",PlantInventRec."Rate Code",'') THEN BEGIN
                  IF PlantRateCodeRec.Percentage > 0 THEN BEGIN
                    "To Rate Code" := PlantInventRec."Rate Code";
                    RemovedOnDate := PlantInventRec."Removed on";
                  END;
                END;
              END;
            END ELSE BEGIN  //* For bulk only if one rate code is found
              IF PlantRateCodeRec.ReadPlantRateCode(OrderRec."Plant Location",PlantInventRec."Rate Code",'') THEN BEGIN
                IF PlantRateCodeRec.Percentage > 0 THEN BEGIN
                  IF "To Rate Code" = '' THEN
                    "To Rate Code" := PlantInventRec."Rate Code"
                  ELSE BEGIN
                    IF PlantInventRec."Rate Code" <> "To Rate Code" THEN BEGIN
                      "To Rate Code" := '';
                      EndOfRepeat := TRUE;
                    END
                  END;
                END;
              END;
              PlantInventRec.SETFILTER("Rate Code", '>%1', PlantInventRec."Rate Code");  //* Next rate code
            END;
          UNTIL (PlantInventRec.NEXT = 0) OR EndOfRepeat;
          IF "To Rate Code" <> '' THEN
            EXIT;
        END;
        //DP00485.sn C009408
        ToRateCode := PlantRateCodeRec.GetDefaultRateCodeRental(OrderRec."Plant Location", FALSE, '');
        IF ToRateCode = '' THEN
          EXIT;
        //DP00485.en
        IF PlantRateCodeRec.ReadPlantRateCode(OrderRec."Plant Location",ToRateCode,'') THEN BEGIN  //DP00485.c
          IF PlantRateCodeRec.Percentage <> 0 THEN
            "To Rate Code" := ToRateCode;  //DP00485.c
        END;
      END;
    END;

    PROCEDURE CheckFromRateCode@1100525002(OrderRec2@1100525000 : Record 11020552);
    BEGIN
      IF "From Rate Code" = '' THEN
        PlantRateCodeRec.Percentage := 100   //* With Rate Code is empty on location then Rental (100%)
      ELSE BEGIN
        PlantRateCodeRec.CheckPlantRateCode(OrderRec2."Plant Location", "From Rate Code", TRUE, '', 0);
        PlantRateCodeRec.ReadPlantRateCode(OrderRec2."Plant Location", "From Rate Code", '');
      END;
      IF ((OrderRec2.Type = OrderRec2.Type::EndRentalFree) AND (PlantRateCodeRec.Percentage <> 0)) OR
         ((OrderRec2.Type <> OrderRec2.Type::EndRentalFree) AND (PlantRateCodeRec.Percentage = 0))
      THEN
        FIELDERROR("From Rate Code", STRSUBSTNO(Text003, "From Rate Code",PlantRateCodeRec.Percentage,FillRentalTypeText(TRUE)));
    END;

    PROCEDURE CheckToRateCode@1100525003(OrderRec2@1100525000 : Record 11020552);
    BEGIN
      PlantRateCodeRec.CheckPlantRateCode(OrderRec2."Plant Location", "To Rate Code", TRUE, '', 0);
      PlantRateCodeRec.ReadPlantRateCode(OrderRec2."Plant Location", "To Rate Code", '');
      IF OrderRec2.Type IN [OrderRec2.Type::Modify, OrderRec2.Type::PeriodModify] THEN BEGIN  //C008369
        IF PlantRateCodeRec.Percentage = 0 THEN
          FIELDERROR("To Rate Code", STRSUBSTNO(Text003, "To Rate Code",PlantRateCodeRec.Percentage,FillRentalTypeText(FALSE)));
        EXIT;
      END;
      IF ((OrderRec2.Type = OrderRec2.Type::EndRentalFree) AND (PlantRateCodeRec.Percentage = 0)) OR
         ((OrderRec2.Type <> OrderRec2.Type::EndRentalFree) AND (PlantRateCodeRec.Percentage <> 0))
      THEN
        FIELDERROR("To Rate Code", STRSUBSTNO(Text003, "To Rate Code",PlantRateCodeRec.Percentage,FillRentalTypeText(FALSE)));
    END;

    PROCEDURE CheckInventoryPresent@1100525001(CurrFieldNo@1100525000 : Integer);
    BEGIN
      GetOrderHeader;
      PlantInventRec.RESET;
      PlantInventRec.SETRANGE(Removed, FALSE);
      PlantInventRec.SETRANGE(Location, OrderRec."Plant Location");
      PlantInventRec.SETRANGE("Plant Type", "Plant Type");
      PlantInventRec.SETRANGE(Sold, FALSE);
      PlantInventRec.SETFILTER("Present from", '<=%1', OrderDate);
      PlantInventRec.SETFILTER(Quantity, '>%1', 0);
      CASE CurrFieldNo OF
        FIELDNO("Plant Type"):
          BEGIN
            PlantInventRec.SETFILTER("Rate Code", FillFromRateCodeFilter());
            IF PlantInventRec.ISEMPTY THEN
              FIELDERROR("Plant Type", STRSUBSTNO(Text004, "Plant Type", OrderDate,
                PlantInventRec.FIELDCAPTION("Rate Code"), FillRentalTypeText(TRUE)));
          END;
        FIELDNO("Plant No."):
          BEGIN
            PlantInventRec.SETRANGE("Plant No.", "Plant No.");
            PlantInventRec.SETFILTER("Rate Code", FillFromRateCodeFilter());
            IF PlantInventRec.ISEMPTY THEN
              FIELDERROR("Plant No.", STRSUBSTNO(Text004, "Plant Type"+'-'+"Plant No.", OrderDate,
                PlantInventRec.FIELDCAPTION("Rate Code"), FillRentalTypeText(TRUE)));
          END;
        ELSE
          BEGIN
            PlantInventRec.SETRANGE("Plant No.", "Plant No.");
            PlantInventRec.SETRANGE("Rate Code", "From Rate Code");
            IF NOT PlantInventRec.FINDFIRST THEN  //* 'NOT FINDFIRST', so do not use 'ISEMPTY' here
              FIELDERROR("Plant No.", STRSUBSTNO(Text004, "Plant Type"+'-'+"Plant No.", OrderDate,
                PlantInventRec.FIELDCAPTION("Rate Code"), "From Rate Code"));
         END;
      END;
    END;

    PROCEDURE CheckInventoryQuantity@1();
    VAR
      OrderLineRec2@1100525000 : Record 11020553;
    BEGIN
      CheckInventoryPresent(0);
      IF Quantity <> 0 THEN BEGIN
        //* Same filter/record as in read 'CheckInventoryPresent' for 'Rate Code' level, change key needed voor CALCSUM.
        PlantInventRec.SETCURRENTKEY(Removed, Location, "Plant Type", "Plant No.", "Rate Code", Sold, "Present from", Quantity);
        PlantInventRec.CALCSUMS(Quantity);
        IF Quantity > PlantInventRec.Quantity THEN
          FIELDERROR(Quantity, STRSUBSTNO(Text005, Quantity, PlantInventRec.Quantity, OrderDate,
            FIELDCAPTION("Plant No."), "Plant Type"+'-'+"Plant No.",
            PlantInventRec.FIELDCAPTION("Rate Code"), "From Rate Code"));

        CALCFIELDS("Total Quantity");
        "Total Quantity" := "Total Quantity" + Quantity;  //* Current (new) quantity not always updated yet
        IF "Line No." <> 0 THEN BEGIN
          IF OrderLineRec2.GET("Rental Free Order No.", "Line No.") THEN
            "Total Quantity" := "Total Quantity" - OrderLineRec2.Quantity;  //* Minus old quantity
        END;
        IF "Total Quantity" > PlantInventRec.Quantity THEN
          FIELDERROR("Total Quantity", STRSUBSTNO(Text005, "Total Quantity", PlantInventRec.Quantity, OrderDate,
            FIELDCAPTION("Plant No."), "Plant Type"+'-'+"Plant No.",
            PlantInventRec.FIELDCAPTION("Rate Code"), "From Rate Code"));
      END;
    END;

    PROCEDURE LookupPlantInventory@1100485000(FieldLevel@1100485003 : Integer);
    VAR
      PlantInventRec2@1100525000 : Record 11012555;
      PlantInventPag@1100485000 : Page 11012559;
      DetailsLevel@1100485002 : 'InventEntry,PlantType,PlantNo,RateCode';
    BEGIN
      //* Level: 1-Plant Type, 2-Plant No., 3-Rate Code
      GetOrderHeader;
      IF OrderRec.Posted THEN BEGIN
        CASE FieldLevel OF
          1:
            BEGIN
              PlantTypeRec.RESET;
              PlantTypeRec.Code := "Plant Type";
              PAGE.RUNMODAL(0, PlantTypeRec);
            END;
          2:
            BEGIN
              PlantNoRec.RESET;
              PlantNoRec.SETRANGE("Plant Type", "Plant Type");
              PlantNoRec."Plant Type" := "Plant Type";
              PlantNoRec."No." := "Plant No.";
              PAGE.RUNMODAL(0, PlantNoRec);
            END;
          3:
            PlantRateCodeRec.LookupPlantRateCode(OrderRec."Plant Location", "From Rate Code", FALSE, '', 0);
        END;
        EXIT;
      END;

      PlantInventRec.RESET;
      PlantInventRec.FILTERGROUP(9);
      PlantInventRec.SETRANGE(Removed, FALSE);
      PlantInventRec.SETRANGE(Location, OrderRec."Plant Location");
      IF (FieldLevel = 2) OR (FieldLevel = 3) THEN
        PlantInventRec.SETRANGE("Plant Type", "Plant Type");
      IF (FieldLevel = 3) AND ("Plant No." <>'')THEN
        PlantInventRec.SETRANGE("Plant No.", "Plant No.");
      PlantInventRec.SETFILTER("Rate Code", FillFromRateCodeFilter());
      PlantInventRec.COPYFILTER("Rate Code", PlantInventRec."Rate Code Filter");
      PlantInventRec.SETRANGE(Sold, FALSE);
      PlantInventRec.SETRANGE("Sold Filter", FALSE);
      PlantInventRec.SETFILTER("Present from", '<=%1', OrderDate);
      PlantInventRec.SETFILTER("Date Filter", '<=%1', OrderDate);
      PlantInventRec.SETFILTER(Quantity, '>%1', 0);
      PlantInventRec.SETFILTER("Quantity Filter", '>%1', 0);
      PlantInventRec.FILTERGROUP(0);
      PlantInventRec.Removed := FALSE;
      PlantInventRec.Location := OrderRec."Plant Location";
      PlantInventRec."Plant Type" := "Plant Type";
      PlantInventRec."Plant No." := "Plant No.";

      //* Options of DetailsLevel must be the same as global 'Details' in Page 11012559
      PlantSetupRec.GET;
      IF NOT PlantSetupRec."Rate Codes" THEN
        PlantInventPag.SetDetailSelection(DetailsLevel::PlantNo)
      ELSE BEGIN
        PlantInventRec."Rate Code" := "From Rate Code";
        PlantInventPag.SetDetailSelection(DetailsLevel::RateCode);
      END;
      PlantInventPag.SetInventoryLocationsSameProjectDisabled;
      PlantInventPag.SETTABLEVIEW(PlantInventRec);
      PlantInventPag.SETRECORD(PlantInventRec);
      PlantInventPag.LOOKUPMODE := TRUE;
      IF PlantInventPag.RUNMODAL = ACTION::LookupOK THEN BEGIN
        PlantInventPag.GETRECORD(PlantInventRec2);
        PlantInventPag.GetDetailSelection(DetailsLevel);
        IF FieldLevel = 1 THEN
          VALIDATE("Plant Type",PlantInventRec2."Plant Type");
        IF ((FieldLevel = 1) OR (FieldLevel = 2)) AND (DetailsLevel <> DetailsLevel::PlantType) THEN
          VALIDATE("Plant No.",PlantInventRec2."Plant No.");
        IF ((DetailsLevel = DetailsLevel::RateCode) OR (DetailsLevel = DetailsLevel::InventEntry)) THEN
          VALIDATE("From Rate Code",PlantInventRec2."Rate Code");
      END;
    END;

    PROCEDURE LookupToRateCode@1100525005(FromCollUpdate@1100525000 : Boolean) : Code[10];
    VAR
      CurrRateCode@1100525001 : Code[10];
    BEGIN
      GetOrderHeader;
      //IF (OrderRec.Type = OrderRec.Type::EndRentalFree) THEN //C008369.o
      IF NOT FromCollUpdate THEN
        CurrRateCode := "To Rate Code";
      IF (OrderRec.Type IN [OrderRec.Type::EndRentalFree,OrderRec.Type::Modify,OrderRec.Type::PeriodModify]) THEN //C008369.n
        PlantRateCodeRec.Code :=
          PlantRateCodeRec.LookupPlantRateWithPercFilter(OrderRec."Plant Location", CurrRateCode, TRUE, '', '<>0')
      ELSE
        PlantRateCodeRec.Code :=
          PlantRateCodeRec.LookupPlantRateWithPercFilter(OrderRec."Plant Location", CurrRateCode, TRUE, '', '=0');
      IF FromCollUpdate THEN
        EXIT(PlantRateCodeRec.Code);
      IF (NOT OrderRec.Posted) AND (PlantRateCodeRec.Code <> "To Rate Code") THEN
        VALIDATE("To Rate Code", PlantRateCodeRec.Code);
    END;

    PROCEDURE FillFromRateCodeFilter@1100525000() RateCodeFilter : Text[1024];
    VAR
      RateCodeRec@1100525001 : Record 11020502;
      LocRateCodeRec@1100525002 : Record 11020551;
      AndOrTxt@1100525004 : Text[1];
      UnequalTxt@1100525003 : Text[2];
    BEGIN
      //* Assumed that there are only a few (mostly 1) rate codes for 'Rental Free'.
      RateCodeFilter := '';
      GetOrderHeader;
      IF OrderRec.Type <> OrderRec.Type::EndRentalFree THEN BEGIN
        AndOrTxt := '&';
        UnequalTxt := '<>';
      END ELSE BEGIN
        AndOrTxt := '|';
        UnequalTxt := '';
      END;

      LocRateCodeRec.SETRANGE(Location, OrderRec."Plant Location");
      IF NOT LocRateCodeRec.ISEMPTY THEN BEGIN
        LocRateCodeRec.SETRANGE(Percentage, 0);
        IF LocRateCodeRec.FINDSET(FALSE,FALSE) THEN BEGIN
          REPEAT
            IF RateCodeFilter <> '' THEN
              RateCodeFilter := RateCodeFilter + AndOrTxt;
            RateCodeFilter := RateCodeFilter + UnequalTxt + LocRateCodeRec."Rate Code";
          UNTIL LocRateCodeRec.NEXT = 0;
        END;
      END ELSE BEGIN
        RateCodeRec.SETRANGE(Percentage, 0);
        IF RateCodeRec.FINDSET(FALSE,FALSE) THEN BEGIN
          REPEAT
            IF RateCodeFilter <> '' THEN
              RateCodeFilter := RateCodeFilter + AndOrTxt;
            RateCodeFilter := RateCodeFilter + UnequalTxt +RateCodeRec.Code;
          UNTIL RateCodeRec.NEXT = 0;
        END;
      END;
      IF (OrderRec.Type = OrderRec.Type::EndRentalFree) AND (RateCodeFilter = '') THEN  //* No rate codes 'Rental Free'
        RateCodeFilter := '1&2';  //* Impossible filter, so no records will be filtered
    END;

    PROCEDURE FillDefaultElement@1100525004();
    BEGIN
      IF ("Plant Type" = '') OR ("Plant No." = '') THEN
        EXIT;

      GetOrderHeader;
      PlantInventRec.RESET;
      PlantInventRec.SETRANGE(Removed, FALSE);
      PlantInventRec.SETRANGE(Location, OrderRec."Plant Location");
      PlantInventRec.SETRANGE("Plant Type", "Plant Type");
      PlantInventRec.SETRANGE("Plant No.", "Plant No.");
      PlantInventRec.SETFILTER("Rate Code", "From Rate Code");
      PlantInventRec.SETRANGE(Sold, FALSE);
      PlantInventRec.SETFILTER("Present from", '<=%1', OrderDate);
      PlantInventRec.SETFILTER(Quantity, '>%1', 0);
      PlantInventRec.SETFILTER(Element, '<>%1', '');
      IF NOT PlantInventRec.FINDFIRST THEN
        Element := ''
      ELSE BEGIN
        PlantInventRec.CALCFIELDS(Element);
        Element := PlantInventRec.Element;
      END;
    END;

    PROCEDURE CollectiveUpdateToRateCode@1100525006(VAR RentalFreeOrderLine@1100525002 : Record 11020553);
    VAR
      PlantRentalFreeOrderLine@1100525000 : Record 11020553;
      NewRateCode@1100525001 : Code[10];
    BEGIN
      //T003628
      WITH PlantRentalFreeOrderLine DO BEGIN
        COPY(RentalFreeOrderLine);
        IF NOT FINDFIRST THEN
          ERROR(Text007);
        NewRateCode := LookupToRateCode(TRUE);
        IF NewRateCode = '' THEN
          EXIT;
        FINDSET(TRUE, FALSE);
        REPEAT
          IF NewRateCode <> "To Rate Code" THEN BEGIN
            VALIDATE("To Rate Code", NewRateCode);
            MODIFY(TRUE)
          END;
        UNTIL NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

