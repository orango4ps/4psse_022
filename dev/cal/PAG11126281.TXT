OBJECT Page 11126281 Advice Order SF2
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Advice Order;
               NOR=Bestillingsunderlag;
               SVE=Best„llningsunderlag];
    SourceTable=Table11012055;
    DelayedInsert=Yes;
    PageType=List;
    AutoSplitKey=No;
    PromotedActionCategoriesML=ENU=New,Process,Report,Logistics,Approval;
    OnInit=BEGIN
             BinCodeProjectInventoryEditabl := TRUE;
             BinCodeEditable := TRUE;
             LocationCodeEditable := TRUE;
             AdditionalCostServiceEditable := TRUE;
             ReleasedAdvOrderEditable := TRUE;
             GlobalDim1Editable := TRUE;
           END;

    OnOpenPage=VAR
                 ServiceOrder@1100528600 : Record 11012823;
                 InstallationMng@1100525000 : Codeunit 11012268;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01

                 //when form used in Base Service Order form, the so no. must be visible
                 ServiceOrderVisible := (GETFILTER("Service Order No.") = '') AND (GETFILTER("Project No.") = '');
                 IF NOT ServiceOrder.GET(GETFILTER("Service Order No.")) THEN
                   SETRANGE("Service Order No.");

                 ProjSetup.GET;
                 PurchasesPayablesSetup.GET;
                 TableLinkedTradeItemInLicense := InstallationMng.LicensePermissionForTableData(DATABASE::"Linked Trade Item");
               END;

    OnClosePage=VAR
                  ServiceOrder@1100528600 : Record 11012823;
                BEGIN
                  IF GETFILTER("Service Order No.") <> '' THEN BEGIN
                    ServiceOrder.SETFILTER("No.", GETFILTER("Service Order No."));
                    IF ServiceOrder.FINDSET(TRUE) THEN
                      REPEAT
                        IF ServiceOrder.DetermineLimitBudgetExceeded THEN
                          ServiceOrder.MODIFY(TRUE);
                      UNTIL ServiceOrder.NEXT = 0;
                  END;
                END;

    OnAfterGetRecord=BEGIN
                       InventoryReservation("Item No.");
                       CALCFIELDS("Vendor Name (Trade Item)", "Vendor Name", "Manufacturer Name");
                       RefQuote := RouteRefMgtCU.GetQuoteOfReference("Purchase Route Reference");
                       RefPurchOrder := RouteRefMgtCU.GetPurchOrderOfReference("Purchase Route Reference");
                       GetItemSpecifications;
                       VendorPrice := GetVendorPrice(Vendor, "Price (LCY)", VendorCurrency);
                       StrategicPurchMgt.FindContractForAdviceOrder(Rec);
                       UpdateEditable;
                       SetControlAppearance;
                       CurrPage.PendingApprovalFactBox.PAGE.SetFilterOnRecordID(RECORDID);
                       CurrPage.ApprovalFactBox.PAGE.SetFilterOnRecordID(RECORDID);
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  InitRecord;
                  RefQuote := '';
                  RefPurchOrder := '';
                  VendorPrice := 0;
                  VendorCurrency := '';

                  LocInventoryQuan := 0;
                  InventoryQuan := 0;
                  ReservedQuan := 0;
                  InventoryUnit := '';

                  FILTERGROUP(4);
                  //when form used in Base Service Order form, fill so no.
                  IF (GETFILTER("Service Order No.") = '') AND (GETFILTER("Base Service Order No.") <> '') THEN
                    VALIDATE("Service Order No.", GETRANGEMIN("Base Service Order No."));
                  FILTERGROUP(0);

                  UpdateEditable;
                END;

    OnInsertRecord=BEGIN
                     "Quantity (Budget)" := 0;
                     "Quantity (Processed)" := 0;
                     "Process Status" := "Process Status"::Open;
                     VALIDATE(Processed, FALSE);  //C036184
                     VALIDATE("Line No.", 0);
                     IF TableLinkedTradeItemInLicense THEN
                       LinkedTradeItem.AddTradeItemsAdviceOrderLine(Rec, 0);  //C039661
                   END;

    OnModifyRecord=BEGIN
                     IF TableLinkedTradeItemInLicense THEN
                       LinkedTradeItem.AddTradeItemsAdviceOrderLine(Rec, 1);  //C039661
                   END;

    OnAfterGetCurrRecord=VAR
                           RecRef@1100529600 : RecordRef;
                         BEGIN
                           SetControlAppearance;
                           CurrPage.PendingApprovalFactBox.PAGE.SetFilterOnRecordID(RECORDID);
                           CurrPage.ApprovalFactBox.PAGE.SetFilterOnRecordID(RECORDID);

                           RecRef.GETTABLE(Rec);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
                           CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode("Global Dimension 1 Code");
                           CurrPage.ItemUnitsOfMeasureFB.PAGE.SetPrice("Price (LCY)");
                         END;

    ActionList=ACTIONS
    {
      { 1100528000;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100528001;1 ;ActionGroup;
                      CaptionML=[ENU=Advice order;
                                 NOR=Bestillingsunderlag;
                                 SVE=Best„llningsunderlag] }
      { 1100528003;2 ;Action    ;
                      CaptionML=[ENU=Documents;
                                 NOR=Dokument;
                                 SVE=Dokument];
                      Image=Documents;
                      OnAction=BEGIN
                                 ShowDocuments;
                               END;
                                }
      { 1100528401;2 ;Action    ;
                      CaptionML=[ENU=&Comment Lines (Advice Order Line);
                                 NOR=&Kommentarrader (bestillingsunderlagsrad);
                                 SVE=&Kommentarsrader (best„llningsunderlagsrad)];
                      Image=Comment;
                      OnAction=BEGIN
                                 EditCommentLines;
                               END;
                                }
      { 1210190047;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528211;1 ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 NOR=Godkjenning;
                                 SVE=Godk„nnande] }
      { 1100528210;2 ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 NOR=Godkjenn;
                                 SVE=Godk„nn];
                      Promoted=Yes;
                      Enabled=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID)
                               END;
                                }
      { 1100528209;2 ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 NOR=Avvis;
                                 SVE=Avvisa];
                      Promoted=Yes;
                      Enabled=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID)
                               END;
                                }
      { 1100528206;2 ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 NOR=Deleger;
                                 SVE=Delegera];
                      Promoted=Yes;
                      Enabled=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID)
                               END;
                                }
      { 1100528208;2 ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 NOR=Merknader;
                                 SVE=Kommentarer];
                      Promoted=Yes;
                      Enabled=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ApprovalsMgmt@1100528500 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 1210190045;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NOR=Fu&nksjon;
                                 SVE=F&unktion] }
      { 1210190068;2 ;Action    ;
                      CaptionML=[ENU=Select Budget Lines;
                                 NOR=Velg Budsjettrader;
                                 SVE=V„lj budgetrader];
                      Image=GetLines;
                      OnAction=BEGIN
                                 Budget;
                               END;
                                }
      { 1210190067;2 ;Action    ;
                      CaptionML=[ENU=Select Recipes;
                                 NOR=Velg Maler;
                                 SVE=V„lj mallar];
                      Image=SourceDocLine;
                      OnAction=BEGIN
                                 SelectRecipe;
                               END;
                                }
      { 1100528404;2 ;ActionGroup;
                      CaptionML=[ENU=Price;
                                 NOR=Pris;
                                 SVE=Pris];
                      Image=Price }
      { 1100525009;3 ;Action    ;
                      CaptionML=[ENU=Update Price;
                                 NOR=Aktualiser pris;
                                 SVE=F”rverkliga pris];
                      Image=Price;
                      OnAction=BEGIN
                                 UpdatePrice;
                               END;
                                }
      { 1210190059;3 ;Action    ;
                      CaptionML=[ENU=Divide Agreed Amount;
                                 NOR=Del avtalt bel›p;
                                 SVE=Dela avtalat belopp];
                      Image=ContractPayment;
                      OnAction=BEGIN
                                 FrmDivideAgreedAmount();
                               END;
                                }
      { 1100528402;3 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Find Lowest Price Trade Items;
                      Image=PriceAdjustment;
                      OnAction=VAR
                                 AdviceOrderLine@1100528400 : Record 11012055;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
                                 AdviceOrderLine.FindLowestPriceTradeItems;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1210190049;2 ;Action    ;
                      CaptionML=[ENU=Calculate availability;
                                 NOR=Beregn tilgjengelighet;
                                 SVE=Ber„kna tillg„nglighet];
                      Image=SalesShipment;
                      OnAction=BEGIN
                                 UpdateLines;
                               END;
                                }
      { 1210190005;2 ;Action    ;
                      CaptionML=[ENU=Modify Vendor Collectively;
                                 NOR=Endre leverand›r kollektivt;
                                 SVE=Žndra leverant”r kollektivt];
                      Image=Vendor;
                      OnAction=BEGIN
                                 UpdateVendor;
                               END;
                                }
      { 1100409002;2 ;Action    ;
                      CaptionML=ENU=Modi&fy Collectively;
                      Image=ChangeBatch;
                      OnAction=BEGIN
                                 ModifyRun;
                               END;
                                }
      { 1210190025;2 ;Action    ;
                      CaptionML=[ENU=Item &Journal;
                                 NOR=&Artikkeljournal;
                                 SVE=&Artikeljournal];
                      Image=Journals;
                      OnAction=VAR
                                 ProjSetup@1210190001 : Record 315;
                                 ItemJnlLine@1210190002 : Record 83;
                                 ItemJnlTemplate@1210190003 : Record 82;
                               BEGIN
                                 ProjSetup.GET;
                                 IF ItemJnlTemplate.GET(ProjSetup."Inventory Journal Template") THEN BEGIN
                                   ItemJnlLine.FILTERGROUP := 2;
                                   ItemJnlLine.SETRANGE("Journal Template Name",ItemJnlTemplate.Name);
                                   ItemJnlLine.FILTERGROUP := 0;
                                   ItemJnlLine.SETRANGE("Service Order No.", "Service Order No.");
                                   PAGE.RUN(ItemJnlTemplate."Page ID",ItemJnlLine);
                                 END ELSE BEGIN
                                   PAGE.RUN(PAGE::"Item Journal", ItemJnlLine);
                                 END;
                               END;
                                }
      { 1210190023;2 ;Action    ;
                      CaptionML=[ENU=Shipping &Details;
                                 NOR=Forsendelse&detaljer;
                                 SVE=Leverans&detaljer];
                      RunObject=Page 11012486;
                      RunPageView=SORTING(No.)
                                  WHERE(Source=CONST(AdviceOrder));
                      RunPageLink=Order No.=FIELD(Service Order No.),
                                  Source=CONST(AdviceOrder);
                      Visible=false;
                      Image=GetLines }
      { 1210190037;2 ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Generate &Inventory Orders;
                                 NOR=Generer &lagerordre;
                                 SVE=Generera &lagerorder];
                      Image=ItemInvoice;
                      OnAction=VAR
                                 ServiceOrder@1210190000 : Record 11012823;
                               BEGIN
                                 IF NOT ServiceOrder.GET("Service Order No.") THEN
                                   ServiceOrder.INIT;
                                 IF (ServiceOrder.Status > ServiceOrder.Status::"In Process") THEN
                                   ERROR(Text002, Text004, ServiceOrder.Status);

                                 ProcessInventory;
                               END;
                                }
      { 1210190035;2 ;Action    ;
                      CaptionML=[ENU=Generate &Shipping Details;
                                 NOR=Generer &Forsendelsedetaljer;
                                 SVE=Generera leverans&detaljer];
                      Visible=false;
                      Image=NewShipment;
                      OnAction=BEGIN
                                 ProcessShippingDetails;
                               END;
                                }
      { 1210190009;2 ;Action    ;
                      CaptionML=[ENU=Text;
                                 NOR=Tekst;
                                 SVE=Ben„mning];
                      Image=Text;
                      OnAction=BEGIN
                                 EditText;
                               END;
                                }
      { 1100525011;2 ;Action    ;
                      CaptionML=ENU=Select Material Inventory;
                      Visible=false;
                      Image=Delegate;
                      OnAction=BEGIN
                                 SelectMaterialInventory;
                               END;
                                }
      { 1100529600;2 ;Action    ;
                      CaptionML=ENU=Generate Warehouse App Order;
                      Visible=FALSE;
                      Image=Warehouse;
                      OnAction=VAR
                                 AdviceOrderLine@1100529600 : Record 11012055;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
                                 AdviceCu.CreateEmpolyWarehouseOrderFromAdviceOrderLine(AdviceOrderLine);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100525003;1 ;ActionGroup;
                      CaptionML=[ENU=Purchase order;
                                 NOR=Innkj›psordre;
                                 SVE=Ink”psorder];
                      Image=Document }
      { 1210190041;2 ;Action    ;
                      CaptionML=[ENU=Generate Purchase Quote;
                                 NOR=Generer innkj›pstilbud;
                                 SVE=Generera ink”psoffert];
                      Promoted=Yes;
                      Image=Quote;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ProcessGenQuote;
                               END;
                                }
      { 1210190039;2 ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Generate &Purchase Orders;
                                 NOR=Generer &kj›psordre;
                                 SVE=Generera &ink”psorder];
                      Promoted=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceOrder@1210190000 : Record 11012823;
                               BEGIN
                                 IF NOT ServiceOrder.GET("Service Order No.") THEN
                                   ServiceOrder.INIT;
                                 IF (ServiceOrder.Status > ServiceOrder.Status::"In Process") THEN
                                   ERROR(Text002, Text003, ServiceOrder.Status);
                                 IF ServiceOrder.DetermineLimitBudgetExceeded THEN
                                   ServiceOrder.MODIFY(TRUE);
                                 ProcessPurchase;
                               END;
                                }
      { 1210190031;2 ;Action    ;
                      CaptionML=[ENU=&Purchase Route References;
                                 NOR=&Referanser for innkj›psrute;
                                 SVE=&Referenser f”r ink”psf”ljd];
                      Image=ContactReference;
                      OnAction=BEGIN
                                 ShowPurchRouteRef;
                               END;
                                }
      { 1210190029;2 ;Action    ;
                      CaptionML=[ENU=Purchase &Order;
                                 NOR=Innkj›ps&ordre;
                                 SVE=Ink”ps&order];
                      Image=Document;
                      OnAction=VAR
                                 ServiceOrder@1100528400 : Record 11012823;
                               BEGIN
                                 IF "Service Order No." <> '' THEN
                                   IF ServiceOrder.GET("Service Order No.") THEN
                                     ServiceOrder.ShowPurchaseOrdersForServiceOrder;
                               END;
                                }
      { 1210190027;2 ;Action    ;
                      CaptionML=[ENU=Purchase &Line details;
                                 NOR=Innkj›ps&raddetaljer;
                                 SVE=Ink”ps&raddetaljer];
                      Image=ViewCheck;
                      OnAction=BEGIN
                                 IF EditLineDetails(FieldEditable) THEN
                                   CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1100529002;1 ;ActionGroup;
                      CaptionML=[ENU=Plant;
                                 NOR=Maskin;
                                 SVE=Maskin];
                      Image=Document }
      { 1100529001;2 ;Action    ;
                      CaptionML=[ENU=Generate Plant Requests;
                                 NOR=Generer maskinforesp›rsel;
                                 SVE=Generera Maskinsbeg„ran];
                      Image=Components;
                      OnAction=VAR
                                 AdviceOrderLine@1100529000 : Record 11012055;
                                 AdviceOrderMgt@1100529001 : Codeunit 11012041;
                               BEGIN
                                 AdviceOrderLine.COPY(Rec);
                                 CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
                                 AdviceOrderMgt.ProcessPlantRequest(AdviceOrderLine);
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100529701;2 ;Action    ;
                      CaptionML=ENU=Generate Plant Requests (preperation);
                      Visible=FALSE;
                      Image=Components;
                      OnAction=VAR
                                 AdviceOrderLine@1100529000 : Record 11012055;
                                 AdviceOrderMgt@1100529001 : Codeunit 11012041;
                               BEGIN
                                 AdviceOrderLine.COPY(Rec);
                                 CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
                                 AdviceOrderMgt.SetCreatePlantRequestSMF(TRUE);
                                 AdviceOrderMgt.ProcessPlantRequest(AdviceOrderLine);
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1100525001;1 ;ActionGroup;
                      CaptionML=[ENU=Advice order;
                                 NOR=Bestillingsunderlag;
                                 SVE=Best„llningsunderlag];
                      Image=OrderTracking }
      { 1210190011;2 ;Action    ;
                      CaptionML=[ENU=Advice Orders by &Item;
                                 NOR=Bestillingsunderlag etter &artikkel;
                                 SVE=Best„llningsunderlag efter &artikel];
                      RunObject=Page 11012122;
                      RunPageView=SORTING(Processed,Item No.,Manufacturer,Basic Item,Vendor (Trade Item),Trade Item,Project No.,Element,Extension Contract);
                      Image=OrderList }
      { 1100528403;2 ;ActionGroup;
                      CaptionML=[ENU=Lines;
                                 NOR=Rader;
                                 SVE=Rader];
                      Image=AllLines }
      { 1210190057;3 ;Action    ;
                      CaptionML=[ENU=Compress Advice Orders;
                                 NOR=Komprimer bestillingsunderlag;
                                 SVE=Komprimera best„llningsunderlag];
                      Image=Compress;
                      OnAction=BEGIN
                                 Compress;
                               END;
                                }
      { 1210190055;3 ;Action    ;
                      CaptionML=[ENU=Split Advice Orders;
                                 NOR=Del bestillingsunderlag;
                                 SVE=Dela best„llningsunderlag];
                      Image=Split;
                      OnAction=BEGIN
                                 Split;
                               END;
                                }
      { 1210190053;3 ;Action    ;
                      CaptionML=[ENU=&Divide Advice Orders;
                                 NOR=&Del bestillingsunderlag;
                                 SVE=&Dela best„llningsunderlag];
                      Image=Allocate;
                      OnAction=BEGIN
                                 Divide;
                               END;
                                }
      { 1210190051;2 ;Action    ;
                      CaptionML=[ENU=Release Advice Orders;
                                 NOR=Frigi bestillingsunderlag;
                                 SVE=Sl„pp best„llningsunderlag];
                      Promoted=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ApproveLines;
                               END;
                                }
      { 1210190001;2 ;Action    ;
                      CaptionML=[ENU=Advice Order Reports;
                                 NOR=Bestillingsunderlagrapporter;
                                 SVE=Best„llningsunderlag, rapporter];
                      Image=Report;
                      OnAction=BEGIN
                                 PrintServiceAdviceSelect;
                               END;
                                }
      { 1100528212;1 ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 NOR=Be om godkjenning;
                                 SVE=Beg„r godk„nnande];
                      Image=Action }
      { 1100528205;2 ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 NOR=&Send godkjenningsforesp›rsel;
                                 SVE=Skicka godk&„nnandebeg„ran];
                      ToolTipML=[ENU=Send an approval request.;
                                 NOR=Send en godkjenningsforesp›rsel.;
                                 SVE=Beg„r godk„nnande att „ndra posten.];
                      Enabled=NOT OpenApprovalEntriesExist;
                      Image=SendApprovalRequest;
                      OnAction=VAR
                                 ApprovalManagement4PSConstr@1000 : Codeunit 11125349;
                               BEGIN
                                 IF ApprovalManagement4PSConstr.CheckAdviceOrderLineApprovalsWorkflowEnabled(Rec) THEN
                                   ApprovalsBridge4PSConstruct.OnSendAdviceOrderLineForApproval(Rec);
                               END;
                                }
      { 1100528203;2 ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 NOR=&Annuller godkjenningsforesp›rsel;
                                 SVE=Annullera &godk„nnandebeg„ran];
                      ToolTipML=[ENU=Cancel the approval request.;
                                 NOR=Annuller godkjenningsforesp›rselen.;
                                 SVE=Annullera godk„nnandebeg„ran.];
                      Enabled=CanCancelApprovalForRecord;
                      Image=CancelApprovalRequest;
                      OnAction=BEGIN
                                 ApprovalsBridge4PSConstruct.OnCancelAdviceOrderLineApprovalRequest(Rec);
                               END;
                                }
      { 1100528601;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1100528602;1 ;Action    ;
                      CaptionML=ENU=Reports Advice Orders;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 AdviceOrderLine@1100528601 : Record 11012055;
                                 DocumentPrint@1100528600 : Codeunit 229;
                               BEGIN
                                 AdviceOrderLine.COPY(Rec);
                                 FILTERGROUP(4);
                                 IF GETFILTER("Service Order No.") <> '' THEN
                                   Rec.COPYFILTER("Service Order No.", AdviceOrderLine."Service Order No.");
                                 IF GETFILTER("Base Service Order No.") <> '' THEN
                                   Rec.COPYFILTER("Base Service Order No.", AdviceOrderLine."Base Service Order No.");
                                 FILTERGROUP(0);
                                 AdviceOrderLine.SETRANGE("Record Type", "Record Type"::ServOrder);
                                 DocumentPrint.PrintServAdvice(AdviceOrderLine);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1100528900;2;Field  ;
                SourceExpr="Record Type";
                Visible=FALSE;
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr="Project No.";
                Visible=FALSE;
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr=Element;
                Visible=FALSE;
                Editable=ElementEditable }

    { 1100525036;2;Field  ;
                SourceExpr="Description Element";
                Visible=FALSE }

    { 1210190004;2;Field  ;
                SourceExpr="Extension Contract";
                Visible=FALSE;
                Editable=ExtensionContractEditable }

    { 1100525038;2;Field  ;
                SourceExpr="Description Extension";
                Visible=FALSE }

    { 1100485030;2;Field  ;
                SourceExpr="Plot No.";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable }

    { 4   ;2   ;Field     ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Service Order No.";
                Visible=ServiceOrderVisible;
                Editable=FALSE }

    { 1100528507;2;Field  ;
                SourceExpr="Service Location No.";
                Visible=FALSE }

    { 1100528508;2;Field  ;
                SourceExpr="Service Location Description";
                Visible=FALSE }

    { 1100528506;2;Field  ;
                SourceExpr="Service Contract No.";
                Visible=FALSE }

    { 1100528509;2;Field  ;
                SourceExpr="Service Contract Description";
                Visible=FALSE }

    { 1100528901;2;Field  ;
                SourceExpr="G/L Account";
                Visible=FALSE;
                Editable=AccountEditable }

    { 1210190012;2;Field  ;
                SourceExpr="Recipe Group";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190018;2;Field  ;
                SourceExpr=Recipe;
                Visible=FALSE;
                Editable=FALSE }

    { 24  ;2   ;Field     ;
                SourceExpr="Cost Type";
                Editable=ReleasedAdvOrderEditable }

    { 22  ;2   ;Field     ;
                SourceExpr=Vendor;
                Enabled=ReleasedAdvOrderEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;

                OnAssistEdit=BEGIN
                               LookupItemVendor(ReleasedAdvOrderEditable);
                             END;
                              }

    { 8   ;2   ;Field     ;
                SourceExpr="Item No.";
                Editable=ReleasedAdvOrderEditable;
                OnValidate=BEGIN
                             CheckInventory;
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           IF ProjSetup."Released AdvOrder not editable" AND
                             ("Process Status" >= "Process Status"::Released) THEN EXIT;

                           HandleItemLookup(1);
                           CurrPage.UPDATE;
                         END;
                          }

    { 14  ;2   ;Field     ;
                SourceExpr="Vendor (Trade Item)";
                Editable=ReleasedAdvOrderEditable }

    { 16  ;2   ;Field     ;
                SourceExpr="Trade Item";
                Editable=ReleasedAdvOrderEditable;
                OnValidate=BEGIN
                             InventoryReservation("Item No.");
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           lvTempAdviceOrderLine@1100525002 : TEMPORARY Record 11012055;
                         BEGIN
                           IF ProjSetup."Released AdvOrder not editable" AND
                             ("Process Status" >= "Process Status"::Released) THEN EXIT;

                           IF "Item No." <> '' THEN BEGIN
                             lvTempAdviceOrderLine.COPY(Rec);
                             lvTempAdviceOrderLine.VALIDATE("Item No.","Item No.");
                             g_ItemCode := lvTempAdviceOrderLine."Trade Item";
                             g_Vendor := lvTempAdviceOrderLine."Vendor (Trade Item)";
                           END;

                           HandleItemLookup(3);
                         END;

                OnAssistEdit=BEGIN
                               HandleItemAssistEdit(3);
                             END;
                              }

    { 26  ;2   ;Field     ;
                SourceExpr="Cost Object";
                Editable=ReleasedAdvOrderEditable;
                LookupPageID=Cost Object List;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100485016;2;Field  ;
                SourceExpr="Cost Component";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable }

    { 1100529602;2;Field  ;
                SourceExpr="Global Dimension 1 Code";
                Visible=FALSE;
                Editable=GlobalDim1Editable }

    { 1210190056;2;Field  ;
                DrillDown=No;
                SourceExpr="Vendor Name";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190050;2;Field  ;
                SourceExpr="Item Category Code";
                Visible=FALSE }

    { 1100525044;2;Field  ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr=Manufacturer;
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable }

    { 12  ;2   ;Field     ;
                SourceExpr="Basic Item";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable;
                OnValidate=BEGIN
                             InventoryReservation("Item No.");
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           IF ProjSetup."Released AdvOrder not editable" AND
                             ("Process Status" >= "Process Status"::Released) THEN EXIT;

                           HandleItemLookup(2);
                         END;
                          }

    { 1210190054;2;Field  ;
                DrillDown=No;
                SourceExpr="Vendor Name (Trade Item)";
                Visible=FALSE;
                Editable=FALSE }

    { 1100485018;2;Field  ;
                SourceExpr="Item Brand";
                Visible=FALSE }

    { 1100485020;2;Field  ;
                SourceExpr="Item Type";
                Visible=FALSE }

    { 1100485022;2;Field  ;
                SourceExpr="Item Series";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Shelf No. (Item)";
                Visible=FALSE }

    { 1100525020;2;Field  ;
                SourceExpr="Shelf No. (SKU)";
                Visible=FALSE }

    { 1100525005;2;Field  ;
                SourceExpr="Subcontracting Activity";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525040;2;Field  ;
                SourceExpr="Order Address Code";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable }

    { 1100529000;2;Field  ;
                SourceExpr="Plant Company";
                Visible=FALSE;
                Editable=FieldEditable }

    { 1210190044;2;Field  ;
                SourceExpr="Plant Location";
                Visible=FALSE;
                Editable=FieldEditable;
                OnAssistEdit=BEGIN
                               LookupPlantLocationWithAssistEdit;
                             END;
                              }

    { 1210190046;2;Field  ;
                SourceExpr="Plant Type";
                Visible=FALSE;
                Editable=FieldEditable }

    { 28  ;2   ;Field     ;
                SourceExpr=Description;
                Editable=ReleasedAdvOrderEditable;
                Style=Strong;
                StyleExpr=("Source Type" = "Source Type"::"Bom Header") OR ("Source Type" = "Source Type"::"Recipe Header") }

    { 1100525002;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Attached to Line No.";
                Visible=FALSE;
                Style=Subordinate;
                StyleExpr="Attached to Line No."<>0 }

    { 30  ;2   ;Field     ;
                SourceExpr="Description 2";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable }

    { 1210190002;2;Field  ;
                SourceExpr="External Text Block";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              EditText;
                            END;
                             }

    { 1210190032;2;Field  ;
                SourceExpr="Price Agreement";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable }

    { 1100485014;2;Field  ;
                SourceExpr="Additional Cost (Service)";
                Visible=FALSE;
                Editable=AdditionalCostServiceEditable }

    { 32  ;2   ;Field     ;
                SourceExpr="Quantity (Budget)" }

    { 38  ;2   ;Field     ;
                SourceExpr="Quantity (Advice)";
                Editable=ReleasedAdvOrderEditable;
                OnValidate=BEGIN
                             CheckInventory;
                             CurrPage.UPDATE;
                           END;
                            }

    { 40  ;2   ;Field     ;
                SourceExpr="Quantity (Processed)";
                Editable=FALSE }

    { 1100485012;2;Field  ;
                CaptionML=[ENU=Quantity Received;
                           NOR=Mottatt antall;
                           SVE=Inlevererat antal];
                SourceExpr=ReceivedPurchaseQuantity('');
                Editable=FALSE }

    { 1100525034;2;Field  ;
                CaptionML=[ENU=Deliverable Quantity;
                           NOR=Leverbart antall;
                           SVE=Levererbart antal];
                SourceExpr=GetDeliverableQuantity }

    { 34  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Editable=UnitofMeasureEditable;
                OnValidate=BEGIN
                             UnitofMeasureOnAfterValidate;
                           END;
                            }

    { 42  ;2   ;Field     ;
                SourceExpr=Transaction;
                Editable=ReleasedAdvOrderEditable;
                OnValidate=BEGIN
                             CheckInventory;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210190010;2;Field  ;
                SourceExpr="Gross Price (LCY)";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable;
                OnValidate=BEGIN
                             UpdatePriceAgreement;  //C047131
                           END;
                            }

    { 1100528500;2;Field  ;
                SourceExpr="Gross Price (FCY)";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable;
                OnValidate=BEGIN
                             UpdatePriceAgreement;  //C047131
                           END;
                            }

    { 1210190034;2;Field  ;
                SourceExpr="Discount %";
                Editable=ReleasedAdvOrderEditable;
                OnValidate=BEGIN
                             UpdatePriceAgreement;  //C047131
                           END;
                            }

    { 36  ;2   ;Field     ;
                SourceExpr="Price (LCY)";
                Editable=ReleasedAdvOrderEditable;
                OnValidate=BEGIN
                             UpdatePriceAgreement;  //C047131
                           END;
                            }

    { 1100528501;2;Field  ;
                SourceExpr="Price (FCY)";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable;
                OnValidate=BEGIN
                             UpdatePriceAgreement;  //C047131
                           END;
                            }

    { 1100528503;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1100528502;2;Field  ;
                SourceExpr="Currency Agreement";
                Visible=FALSE }

    { 1100525004;2;Field  ;
                Name=VendorPrice;
                CaptionML=[ENU=Direct Unit Cost;
                           NOR=InnkjÂ›pspris;
                           SVE=Ink”pspris];
                SourceExpr=VendorPrice;
                Visible=FALSE;
                Editable=VendorPriceEditable;
                OnValidate=BEGIN
                             VALIDATE("Price (LCY)", ConvertVendorPrice(Vendor, VendorPrice));
                           END;
                            }

    { 1100525006;2;Field  ;
                Name=VendorCurrency;
                CaptionML=[ENU=Vendor Currency;
                           NOR=Leverand›rvaluta;
                           SVE=Leverant”rsvaluta];
                SourceExpr=VendorCurrency;
                Visible=FALSE;
                Editable=FALSE }

    { 1100485036;2;Field  ;
                SourceExpr="Amount (LCY)" }

    { 1100528504;2;Field  ;
                SourceExpr="Amount (FCY)";
                Visible=FALSE }

    { 1100525010;2;Field  ;
                SourceExpr="Sales Price (LCY)";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable }

    { 1100528505;2;Field  ;
                SourceExpr="Sales Price (FCY)";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable }

    { 1210190006;2;Field  ;
                SourceExpr="Process Status";
                Editable=ProcessStatusEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 44  ;2   ;Field     ;
                SourceExpr=Processed;
                Editable=FALSE }

    { 1100528300;2;Field  ;
                SourceExpr="Supplying Company Inventory";
                Visible=FALSE;
                Editable=SupplyingCompanyInventEditable;
                OnValidate=BEGIN
                             CheckInventory;
                             CurrPage.UPDATE;
                           END;
                            }

    { 46  ;2   ;Field     ;
                CaptionML=[ENU=Inventory;
                           NOR=Lager;
                           SVE=Lager];
                SourceExpr=InventoryQuan;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrillDownInventory(ShowLocations::All);
                            END;
                             }

    { 1100525008;2;Field  ;
                CaptionML=[ENU=Inventory pref. locations;
                           NOR=Foretrukket Lagerplassering;
                           SVE=F”rvalda lagerst„llen];
                SourceExpr=InventoryPrefLocations;
                Visible=FALSE;
                OnDrillDown=BEGIN
                              DrillDownInventory(ShowLocations::PrefLocations);
                            END;
                             }

    { 48  ;2   ;Field     ;
                CaptionML=[ENU=Reserved for Project;
                           NOR=Reservert for prosjekt;
                           SVE=Reserverat f”r projekt];
                SourceExpr=ReservedQuan;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=VAR
                              ItemJnlLineRec@1210190001 : Record 83;
                            BEGIN
                              IF ItemRec.GET("Item No.") THEN BEGIN
                                IF ("Supplying Company Inventory" <> '') THEN
                                  ItemJnlLineRec.CHANGECOMPANY("Supplying Company Inventory");

                                ItemJnlLineRec.SETRANGE("Item No.", ItemRec."No.");
                                ItemJnlLineRec."Job No." := "Project No.";
                                PAGE.RUN(0,ItemJnlLineRec);
                              END;
                            END;
                             }

    { 50  ;2   ;Field     ;
                CaptionML=[ENU=Base Unit of Measure;
                           NOR=Basem†leenhet;
                           SVE=Basenhet];
                SourceExpr=InventoryUnit;
                Visible=FALSE;
                Editable=FALSE }

    { 52  ;2   ;Field     ;
                SourceExpr="Order Date";
                Editable=ReleasedAdvOrderEditable }

    { 54  ;2   ;Field     ;
                SourceExpr="Delivery Period";
                Editable=ReleasedAdvOrderEditable }

    { 56  ;2   ;Field     ;
                SourceExpr="Receipt Date";
                Editable=ReleasedAdvOrderEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1100525007;2;Field  ;
                SourceExpr="Requested Receipt Date";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable }

    { 1210190048;2;Field  ;
                SourceExpr="Expected return on";
                Visible=FALSE }

    { 60  ;2   ;Field     ;
                SourceExpr="Location Code";
                Editable=LocationCodeEditable;
                OnValidate=BEGIN
                             InventoryReservation("Item No.");
                           END;
                            }

    { 1100526200;2;Field  ;
                SourceExpr="Bin Code";
                Visible=FALSE;
                Editable=BinCodeEditable }

    { 1210190008;2;Field  ;
                SourceExpr="Bin Code (Project Inventory)";
                Visible=FALSE;
                Editable=BinCodeProjectInventoryEditabl }

    { 1100485034;2;Field  ;
                CaptionML=[ENU=Location Inventory;
                           NOR=Lagerplassering;
                           SVE=Lagerst„lle];
                SourceExpr=LocInventoryQuan;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrillDownInventory(ShowLocations::Location);
                            END;
                             }

    { 58  ;2   ;Field     ;
                SourceExpr=Deliver;
                Editable=ReleasedAdvOrderEditable }

    { 62  ;2   ;Field     ;
                SourceExpr="Ship To Location";
                Editable=ReleasedAdvOrderEditable }

    { 64  ;2   ;Field     ;
                SourceExpr="Purchase Action";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable }

    { 66  ;2   ;Field     ;
                SourceExpr="Purchase Phase";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable }

    { 1210190022;2;Field  ;
                SourceExpr="Purchaser Code";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable }

    { 1210190000;2;Field  ;
                SourceExpr="Negotiation recommended";
                Visible=FALSE }

    { 1210190028;2;Field  ;
                SourceExpr="Ask for Quote";
                Visible=FALSE }

    { 1210190026;2;Field  ;
                CaptionML=[ENU=Quote No.;
                           NOR=Tilbudsnr;
                           SVE=Offertnr];
                SourceExpr=RefQuote;
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=VAR
                           lvPurchHeadRec@1210190000 : Record 38;
                         BEGIN
                           IF (RefQuote = '') THEN
                             EXIT;

                           IF (COPYSTR(RefQuote, 1, 1) = '<') THEN  // IF Quote No. is '<Nr.>', then more than one quote present
                             RouteRefMgtCU.ShowReferenceQuoteList("Purchase Route Reference")
                           ELSE BEGIN
                             lvPurchHeadRec.SETRANGE("Document Type", lvPurchHeadRec."Document Type"::Quote);
                             lvPurchHeadRec.SETRANGE("No.", RefQuote);
                             PAGE.RUNMODAL(PAGE::"Purchase Quote", lvPurchHeadRec);
                           END;
                         END;
                          }

    { 1210190030;2;Field  ;
                CaptionML=[ENU=Purchase Order;
                           NOR=Bestilling;
                           SVE=Ink”psorder];
                SourceExpr=RefPurchOrder;
                Editable=FALSE;
                OnLookup=VAR
                           lvPurchHeadRec@1210190000 : Record 38;
                         BEGIN
                           IF (RefPurchOrder = '') THEN
                             EXIT;

                           IF (COPYSTR(RefPurchOrder, 1, 1) = '<') THEN  // IF Order No. is '<Nr.>', then more than one order present
                             RouteRefMgtCU.ShowReferencePurchOrderList("Purchase Route Reference")
                           ELSE BEGIN
                             lvPurchHeadRec.SETRANGE("Document Type", lvPurchHeadRec."Document Type"::Order);
                             lvPurchHeadRec.SETRANGE("No.", RefPurchOrder);
                             PAGE.RUNMODAL(PAGE::"Purchase Order", lvPurchHeadRec);
                           END;
                         END;
                          }

    { 1210190024;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1100525042;2;Field  ;
                SourceExpr="ICK Order";
                Visible=FALSE }

    { 1210190036;2;Field  ;
                SourceExpr="Created by";
                Visible=FALSE }

    { 1100525032;2;Field  ;
                SourceExpr="Created by Employee No.";
                Visible=FALSE }

    { 1210190014;2;Field  ;
                SourceExpr="Date Created";
                Visible=FALSE }

    { 1210190016;2;Field  ;
                SourceExpr="Modified by";
                Visible=FALSE }

    { 1210190020;2;Field  ;
                SourceExpr="Last Date Modified";
                Visible=FALSE }

    { 1100485024;2;Field  ;
                SourceExpr="E-Plan Item";
                Visible=FALSE }

    { 1100485026;2;Field  ;
                SourceExpr="Scheme Code";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable }

    { 1100485028;2;Field  ;
                SourceExpr="Comments for Logistics";
                Visible=FALSE;
                Editable=ReleasedAdvOrderEditable }

    { 1100526000;2;Field  ;
                SourceExpr="Main Project No.";
                Visible=FALSE }

    { 1100526100;2;Field  ;
                SourceExpr="Yard No.";
                Visible=FALSE }

    { 1100525014;2;Field  ;
                SourceExpr="System No.";
                Visible=FALSE }

    { 1100525012;2;Field  ;
                SourceExpr="Entity Type";
                Visible=FALSE }

    { 1100525016;2;Field  ;
                SourceExpr="Entity No.";
                Visible=FALSE }

    { 1100525018;2;Field  ;
                SourceExpr="Cable Transit Pos.";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                CaptionML=ENU=Approval entries exist;
                SourceExpr=ApprovalEntriesExist();
                Visible=FALSE;
                Editable=FALSE }

    { 1100528400;2;Field  ;
                SourceExpr="Consented Date-Time";
                Visible=FALSE }

    { 1100525024;2;Field  ;
                SourceExpr="Contract Type";
                Visible=FALSE }

    { 1100525026;2;Field  ;
                CaptionML=[ENU=Blanket Order;
                           NOR=Rammebestilling;
                           SVE=Avropsorder];
                SourceExpr=StrategicPurchMgt.NumberOfBlOrdersAdviceOrder(Rec);
                Visible=FALSE;
                OnLookup=BEGIN
                           StrategicPurchMgt.LookupBlOrderAdviceOrder(Rec);
                         END;
                          }

    { 1100525030;2;Field  ;
                CaptionML=[ENU=Blanket Order Line;
                           NOR=Rammeordrerad;
                           SVE=Avropsorderrad];
                SourceExpr=StrategicPurchMgt.NumberOfBlOrderLinesAdvOrder(Rec);
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=BEGIN
                           StrategicPurchMgt.LookupBlOrderLinesAdviceOrder(Rec);
                         END;
                          }

    { 1100525028;2;Field  ;
                CaptionML=[ENU=Quantity in Blanket Orders;
                           NOR=Antall i rammeordre;
                           SVE=Antal i avropsorder];
                SourceExpr=StrategicPurchMgt.QtyInBlanketOrdersAdviceOrder(Rec);
                Visible=FALSE;
                OnLookup=BEGIN
                           StrategicPurchMgt.LookupBlOrderLinesAdviceOrder(Rec);
                         END;
                          }

    { 1210190038;2;Field  ;
                SourceExpr="Glazing Service Call No.";
                Visible=FALSE }

    { 1210190040;2;Field  ;
                SourceExpr="Glazing Service Call Line No.";
                Visible=FALSE }

    { 1210190042;2;Field  ;
                CaptionML=[ENU=Documents;
                           NOR=Dokument;
                           SVE=Dokument];
                SourceExpr=HasDocumentLinks;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ShowDocuments;
                            END;
                             }

    { 1210190052;2;Field  ;
                CaptionML=[ENU=Comment;
                           NOR=Kommentar;
                           SVE=Kommentar];
                SourceExpr=CommentLineExist();
                Visible=FALSE;
                Editable=FALSE;
                OnValidate=BEGIN
                             EditCommentLines();
                           END;
                            }

    { 1100528600;2;Field  ;
                SourceExpr="Price History 0 Exists";
                Visible=FALSE }

    { 1100409001;2;Field  ;
                SourceExpr="Vendor No. (Item Card)";
                Importance=Additional;
                Visible=FALSE }

    { 1100409000;2;Field  ;
                SourceExpr="Vendor Item No. (Item Card)";
                Importance=Additional;
                Visible=FALSE }

    { 1100529700;2;Field  ;
                SourceExpr="Plant Request No.";
                Visible=FALSE }

    { 1100528510;2;Field  ;
                SourceExpr="Original Vendor (Trade Item)";
                Visible=FALSE }

    { 1100527450;2;Field  ;
                CaptionML=ENU=Purchase Details;
                SourceExpr=PurchaseDetailDescription;
                Visible=FALSE }

    { 1100528204;0;Container;
                ContainerType=FactBoxArea }

    { 1100528202;1;Part   ;
                Name=PendingApprovalFactBox;
                ApplicationArea=#Suite;
                SubPageView=WHERE(Table ID=CONST(11012055));
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1100529601;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                PartType=Page }

    { 1100528201;1;Part   ;
                Name=ApprovalFactBox;
                SubPageView=WHERE(Table ID=CONST(11012055));
                PagePartID=Page9092;
                PartType=Page }

    { 1100528200;1;Part   ;
                Name=WorkflowStatus;
                ApplicationArea=#Suite;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1100528511;1;Part   ;
                Name=ItemUnitsOfMeasureFB;
                CaptionML=ENU=Item Units of Measure;
                SubPageLink=Item No.=FIELD(Item No.);
                PagePartID=Page11129723;
                PartType=Page }

    { 1100527451;1;Part   ;
                Name=PurchaseLineDetails;
                SubPageLink=Record Type=FIELD(Record Type),
                            Project No.=FIELD(Project No.),
                            Yard No.=FIELD(Yard No.),
                            System No.=FIELD(System No.),
                            Entity Type=FIELD(Entity Type),
                            Entity No.=FIELD(Entity No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page11129878;
                PartType=Page }

  }
  CODE
  {
    VAR
      ProjSetup@1100525006 : Record 315;
      ItemRec@1100525008 : Record 27;
      AdviceRec@1100485001 : Record 11012055;
      PrintDoc@1100485005 : Codeunit 229;
      AdviceCu@1210190012 : Codeunit 11012041;
      RouteRefMgtCU@1210190005 : Codeunit 11012045;
      InventoryQuan@11012010 : Decimal;
      ReservedQuan@11012011 : Decimal;
      LocInventoryQuan@1100485000 : Decimal;
      InventoryUnit@11012012 : Code[10];
      RefQuote@1210190004 : Code[20];
      RefPurchOrder@1210190018 : Code[20];
      Text000@1210190017 : TextConst 'ENU=Insufficient Stock present;NOR=Utilstrekkelig lagerbalanse;SVE=Otillr„cklig lagerbalans';
      VendorPrice@1100525000 : Decimal;
      VendorCurrency@1100525001 : Code[20];
      ShowLocations@1100525002 : 'All,PrefLocations,Location';
      g_ItemCode@1100525004 : Code[20];
      g_Vendor@1100525003 : Code[20];
      StrategicPurchMgt@1100525007 : Codeunit 11020211;
      DPA_IsHardFilter@1100000999 : Boolean;
      Text001@1210190001 : TextConst 'ENU=Logistic handling from this item is on Component Level. Via de button ''Explode BOM'' this item can be exploded.;NOR=Logistikkh†ndteringen fra denne artikkelen ligger p† komponentniv†. Denne artikkelen kan utfoldes med knappen ''Utfold stykkliste''.;SVE=LogistikhanterIngen fr†n den h„r artikeln ligger p† komponentniv†. Den h„r artikeln kan expanderas med knappen ''Expandera struktur''.';
      FieldEditable@1100529000 : Boolean INDATASET;
      AdditionalCostServiceEditable@19048170 : Boolean INDATASET;
      BinCodeProjectInventoryEditabl@19024719 : Boolean INDATASET;
      SupplyingCompanyInventEditable@1210190000 : Boolean INDATASET;
      ElementEditable@1210190002 : Boolean INDATASET;
      ExtensionContractEditable@1210190003 : Boolean INDATASET;
      ReleasedAdvOrderEditable@1210190006 : Boolean INDATASET;
      UnitofMeasureEditable@1210190007 : Boolean INDATASET;
      VendorPriceEditable@1210190008 : Boolean INDATASET;
      ProcessStatusEditable@1210190009 : Boolean INDATASET;
      LocationCodeEditable@1210190010 : Boolean INDATASET;
      BinCodeEditable@1210190011 : Boolean INDATASET;
      ServiceOrderVisible@1210190013 : Boolean INDATASET;
      AccountEditable@1100528900 : Boolean INDATASET;
      PurchasesPayablesSetup@1100528500 : Record 312;
      OpenApprovalEntriesExist@1100528205 : Boolean;
      CanCancelApprovalForRecord@1100528204 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1100528203 : Boolean;
      ApprovalsBridge4PSConstruct@1100528201 : Codeunit 11125348;
      ShowWorkflowStatus@1100528200 : Boolean;
      LinkedTradeItem@1100525010 : Record 11020466;
      TableLinkedTradeItemInLicense@1100525009 : Boolean;
      Text002@1100529600 : TextConst 'ENU=%1 can not be generated when service order status is %2.';
      Text003@1100529601 : TextConst 'ENU=Purchase Orders;NOR=Bestillinger;SVE=Ink”psorder';
      Text004@1100529602 : TextConst 'ENU=Inventory Orders;NOR=Lagerordre;SVE=Lagerorder';
      Text005@1100525005 : TextConst 'ENU=No service order for record.';
      GlobalDim1Editable@1100529603 : Boolean INDATASET;

    PROCEDURE Budget@8();
    BEGIN
      IF "Record Type" = "Record Type"::ServOrder THEN
        AdviceCu.SelectServiceBudget("Service Order No.");
      IF "Record Type" = "Record Type"::Project THEN
        AdviceCu.SelectProjectBudget("Project No.", '', '');
    END;

    PROCEDURE PurchaseAction@10();
    BEGIN
      AdviceCu.SelectPurchaseAction("Project No.");
    END;

    PROCEDURE ProcessGenQuote@1210190006();
    VAR
      AdviceOrderLine@1100525000 : Record 11012055;
    BEGIN
      AdviceOrderLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
      AdviceCu.ProcessGenQuote(AdviceOrderLine);
    END;

    PROCEDURE ProcessPurchase@2();
    VAR
      AdviceOrderLine@1100525000 : Record 11012055;
    BEGIN
      AdviceOrderLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
      AdviceCu.ProcessPurchase(AdviceOrderLine, FALSE, FALSE);  //PBRun= false, ItemRun=false
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ProcessInventory@3();
    VAR
      Text001@1100525000 : TextConst 'ENU=Do you want to recalculate the lines first?;NOR=Vil du rekalkulere radene f›rst?;SVE=Vill du omber„kna raderna f”rst?';
      AdviceOrderLine@1100525001 : Record 11012055;
      AdviceOrderLine2@1100525002 : Record 11012055;
      Counter@1100525003 : Integer;
      Text002@1100525004 : TextConst 'ENU=There are %1 inventory entries created in Item Journal.;NOR=%1 lagertransaksjoner er opprettet i artikkeljournalen.;SVE=%1 lagertransaktioner har skapats i artikeljournalen.';
    BEGIN
      AdviceOrderLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
      CLEAR(AdviceCu); //CALL C019988 newline
      ProjSetup.GET;
      IF (ProjSetup."Inventory Calc. Advice Order" = ProjSetup."Inventory Calc. Advice Order"::Availability) AND
        CONFIRM(Text001)
      THEN BEGIN
        AdviceCu.SetSkipMessage;
        IF NOT AdviceOrderLine.ISEMPTY THEN                              //CALL C019988 newline
          AdviceCu.PreSetToTypeAndBatch(AdviceOrderLine, FALSE, TRUE);   //CALL C019988 newline

        IF AdviceOrderLine.FINDSET(TRUE,TRUE) THEN
          REPEAT
            AdviceOrderLine2 := AdviceOrderLine;
            AdviceOrderLine2.SETRECFILTER;
            AdviceOrderLine2.GetDefaultTransaction;
            AdviceOrderLine2.MODIFY;
            AdviceOrderLine2.MARK(TRUE);
            Counter += AdviceCu.ProcessInventory(AdviceOrderLine2,FALSE,FALSE); //PBRun= false, ItemRun=false
          UNTIL AdviceOrderLine.NEXT = 0;
          MESSAGE(Text002,Counter);
      END ELSE
        AdviceCu.ProcessInventory(AdviceOrderLine, FALSE, FALSE);  //PBRun= false, ItemRun=false
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ProcessRun@1210190003();
    BEGIN
      AdviceCu.ProcessRun(FALSE);  //ItemRun=false
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE Compress@1();
    VAR
      AdviceOrderLine@1100525000 : Record 11012055;
    BEGIN
      AdviceOrderLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
      IF AdviceOrderLine.ISEMPTY THEN BEGIN
        AdviceOrderLine.RESET;
        AdviceOrderLine.COPY(Rec);
      END;
      AdviceCu.CompressLines(AdviceOrderLine);
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE Split@9();
    VAR
      AdviceOrderLine@1100525000 : Record 11012055;
    BEGIN
      CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
      IF AdviceOrderLine.FINDFIRST THEN; //mg, 22-01-2014: C010838
      AdviceCu.SplitLines(AdviceOrderLine);
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE Divide@1100525001();
    VAR
      AdviceOrderLine@1100525000 : Record 11012055;
    BEGIN
      //AdviceOrderLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
      IF AdviceOrderLine.FINDFIRST THEN; //mg, 22-01-2014: C010838
      AdviceCu.SplitLinesPrefLoc(AdviceOrderLine);
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE InventoryReservation@4(lItem@11012000 : Code[20]);
    BEGIN
      LocInventoryQuan := 0;
      InventoryQuan := 0;
      ReservedQuan := 0;
      InventoryUnit := '';

      IF ("Supplying Company Inventory" <> '') THEN
        ItemRec.CHANGECOMPANY("Supplying Company Inventory");

      IF ItemRec.GET(lItem) THEN BEGIN
        IF "Record Type" = "Record Type"::Project THEN
          ItemRec.SETRANGE("Project Filter","Project No.");
        ItemRec.CALCFIELDS(Inventory, "Qty. on Item Journal Project", "Qty. on Item Journal Service");
        LocInventoryQuan := GetInventory("Location Code",ItemRec,FALSE);
        InventoryQuan := GetInventory('',ItemRec,TRUE);
        ReservedQuan := ItemRec."Qty. on Item Journal Project" + ItemRec."Qty. on Item Journal Service";
        InventoryUnit := ItemRec."Base Unit of Measure";
      END;

      IF ("Supplying Company Inventory" <> '') THEN
        ItemRec.CHANGECOMPANY(COMPANYNAME);
    END;

    PROCEDURE EditText@1210190000();
    BEGIN
      AdviceCu.EditText(Rec);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE HandleItemLookup@1210190001(ZoomType@1210190000 : Integer);
    BEGIN
      LookupItemData(ZoomType,g_ItemCode,g_Vendor);
      IF ZoomType = -1 THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE HandleItemAssistEdit@1100528302(ZoomType@1210190000 : Integer);
    BEGIN
      AssistEditItemData(ZoomType);
      IF ZoomType = -1 THEN
        CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ApproveLines@1210190002();
    VAR
      AdviceOrderLine@1100525000 : Record 11012055;
    BEGIN
      CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
      AdviceCu.ApproveLines(AdviceOrderLine);
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ShowPurchRouteRef@1210190004();
    BEGIN
      RouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
    END;

    PROCEDURE UpdatePrice@1210190007();
    BEGIN
      IF "Record Type" = "Record Type"::Project THEN
        AdviceCu.UpdateActualPrice(0, "Project No.");
      IF "Record Type" = "Record Type"::ServOrder THEN
        AdviceCu.UpdateActualPrice(1, "Service Order No.");
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE PrintProjectAdviceSelect@1100485001();
    BEGIN
      AdviceRec.COPY(Rec);
      AdviceRec.SETRANGE("Record Type","Record Type"::Project);
      PrintDoc.PrintProjAdvice(AdviceRec);
    END;

    PROCEDURE PrintServiceAdviceSelect@1100485002();
    BEGIN
      AdviceRec.COPY(Rec);
      FILTERGROUP(4);
      IF GETFILTER("Service Order No.") <> '' THEN
        Rec.COPYFILTER("Service Order No.", AdviceRec."Service Order No.");
      IF GETFILTER("Base Service Order No.") <> '' THEN
        Rec.COPYFILTER("Base Service Order No.", AdviceRec."Base Service Order No.");
      FILTERGROUP(0);
      AdviceRec.SETRANGE("Record Type","Record Type"::ServOrder);
      PrintDoc.PrintServAdvice(AdviceRec);
    END;

    PROCEDURE ProcessShippingDetails@1100485003();
    VAR
      AdviceOrderLine@1100525000 : Record 11012055;
    BEGIN
      CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
      AdviceCu.ProcessShippingDetails(AdviceOrderLine);
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE UpdateVendor@1100485000();
    VAR
      AdviceOrderLine@1100525000 : Record 11012055;
      ModifyItemVendor@1100485000 : Page 11020420;
    BEGIN
      CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
      ModifyItemVendor.SetAdviceOrderRec(AdviceOrderLine);
      ModifyItemVendor.RUNMODAL;
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE UpdateFromSelectedQuote@1100485004();
    BEGIN
      AdviceCu.UpdateQuotePrice(Rec);
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE SelectRecipe@1100485005();
    BEGIN
      AdviceCu.SelectBaseRecipe(Rec); //DP00381
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE DrillDownInventory@1100525002(ShowLocations@1100525003 : 'All,PrefLocations,Location');
    BEGIN
      AdviceCu.DrillDownInventory(Rec, ShowLocations);
    END;

    PROCEDURE UpdateLines@1100525003();
    VAR
      AdviceOrderLine@1100525000 : Record 11012055;
    BEGIN
      CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
      AdviceCu.UpdateLines(AdviceOrderLine);
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE ShowItemAvailbyPeriod@1100525006();
    VAR
      Item@1100525000 : Record 27;
    BEGIN
      IF "Item No." = '' THEN EXIT;
      IF Item.GET("Item No.") THEN BEGIN
        // Item.SETFILTER("Project Filter",'=%1',"Project No.");
        PAGE.RUN(PAGE::"Item Availability by Periods",Item);
      END;
    END;

    PROCEDURE GenerateICKOrder@1100525009();
    VAR
      AdviceOrderLine@1100525000 : Record 11012055;
    BEGIN
      CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
      AdviceCu.GenerateICKOrder(AdviceOrderLine);
      CurrPage.UPDATE;
    END;

    PROCEDURE FrmDivideAgreedAmount@1100530000();
    VAR
      AdviceOrderLine@1100525000 : Record 11012055;
    BEGIN
      CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
      Rec.DivideAgreedAmount(AdviceOrderLine);
    END;

    PROCEDURE ShowDocuments@1210190005();
    VAR
      RecRef@1210190000 : RecordRef;
      DocumentFilters@1210190001 : Codeunit 11012432;
    BEGIN
      TESTFIELD("Line No.");
      RecRef.GETTABLE(Rec);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Global Dimension 1 Code", FALSE, TRUE);
    END;

    PROCEDURE ExplodeBOM@1210190010();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Advice Order Line-Explode BOM",Rec);
    END;

    PROCEDURE UpdateEditable@1100528300();
    VAR
      ServiceOrder@1210190000 : Record 11012823;
    BEGIN
      SupplyingCompanyInventEditable :=
        ("Cost Type" = "Cost Type"::Material) AND
        ("Item No." <> '') AND
        (Transaction = Transaction::Inventory) AND
        ("Process Status" < "Process Status"::Processed);

      BinCodeProjectInventoryEditabl := "Supplying Company Inventory" = '';

      IF NOT ServiceOrder.GET("Service Order No.") THEN
        ServiceOrder.INIT;
      IF ServiceOrder."Service Contract No." <> '' THEN
        AdditionalCostServiceEditable :=
          (ServiceOrder."Source Type" <> ServiceOrder."Source Type"::Direct) OR
          (ServiceOrder."Service Contract No." = '');

      FieldEditable := AdviceOrderFieldsEditable;
      ProcessStatusEditable := AdviceOrderProcessStatusEditable;
      AccountEditable := FieldEditable AND ("Record Type" = "Record Type"::"G/L Account");  //DP01378
      IF AccountEditable THEN ServiceOrderVisible := FALSE;  //DP01378
      ElementEditable := FieldEditable AND ("Record Type" = "Record Type"::Project);
      ExtensionContractEditable := FieldEditable AND ("Record Type" = "Record Type"::Project);
      ReleasedAdvOrderEditable := FieldEditable;
      UnitofMeasureEditable := FieldEditable AND ("Quantity (Processed)" = 0);
      VendorPriceEditable := FieldEditable AND (VendorCurrency <> '');
      LocationCodeEditable := FieldEditable AND FieldIsEditable(FIELDNO("Location Code")) AND ("Supplying Company Inventory" = '');
      BinCodeEditable := FieldEditable AND FieldIsEditable(FIELDNO("Bin Code")) AND ("Supplying Company Inventory" = '');
      GlobalDim1Editable := FieldEditable AND ("Project No." = '') AND ("Service Order No." = '');
    END;

    PROCEDURE ShowItemInventoryByCompany@1100528301();
    VAR
      AdviceOrderMgt@1100528300 : Codeunit 11012041;
    BEGIN
      AdviceOrderMgt.RunItemInventoryByCompany("Item No.");
    END;

    LOCAL PROCEDURE UnitofMeasureOnAfterValidate@19002161();
    BEGIN
      IF "Quantity (Processed)" = 0 THEN
        IF "Quantity (Budget)" <> 0 THEN
          "Quantity (Budget)" := "Quantity (Advice)";
    END;

    PROCEDURE ModifyRun@1100409000();
    VAR
      AdviceOrderLine@1100525000 : Record 11012055;
    BEGIN
      AdviceOrderLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(AdviceOrderLine);
      IF AdviceOrderLine.COUNT = 0 THEN BEGIN
        ERROR(Text001);
      END;
      AdviceCu.ModifyRun(AdviceOrderLine);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE CheckInventory@1100528900();
    VAR
      InvQuan@1100528900 : Decimal;
    BEGIN
      //db, 13-02-17: replace several generated functions for OnAfterValidate-section
      InventoryReservation("Item No.");
      IF InventoryQuan < LocInventoryQuan THEN
        InvQuan := LocInventoryQuan
      ELSE
        InvQuan := InventoryQuan;

      IF InvQuan < "Quantity (Advice)" THEN
        IF Transaction = Transaction::Inventory THEN
          MESSAGE(Text000);
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
      ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
    END;

    LOCAL PROCEDURE SelectMaterialInventory@1100525000();
    VAR
      StdObjectMaterialInvent@1100525000 : Page 11125181;
      ObjectMaterialInventory@1100525001 : Record 11071712;
      ServiceOrder@1100525002 : Record 11012823;
      ServiceOrderObject@1100525003 : Record 11071724;
      ServiceObjectFilter@1100525004 : Text;
    BEGIN
      IF ServiceOrder.GET("Service Order No.") THEN BEGIN
        ServiceOrderObject.SETRANGE("Service Order No.", ServiceOrder."No.");
        IF ServiceOrderObject.FINDSET THEN BEGIN
          REPEAT
            ServiceObjectFilter := ServiceObjectFilter + ServiceOrderObject."Object No." + '|';
          UNTIL ServiceOrderObject.NEXT = 0;
          ServiceObjectFilter := COPYSTR(ServiceObjectFilter, 1, STRLEN(ServiceObjectFilter) - 1);
        END;
        ObjectMaterialInventory.SETFILTER(Code, ServiceObjectFilter);
        StdObjectMaterialInvent.SETTABLEVIEW(ObjectMaterialInventory);
        StdObjectMaterialInvent.LOOKUPMODE(TRUE);
        IF StdObjectMaterialInvent.RUNMODAL = ACTION::LookupOK THEN BEGIN
          StdObjectMaterialInvent.GetSelectedLines(ObjectMaterialInventory);
          IF ObjectMaterialInventory.FINDSET THEN
            REPEAT
              InsertServiceOrderObjectMaterialInventoryItem(ServiceOrder."No.", ObjectMaterialInventory);
            UNTIL ObjectMaterialInventory.NEXT = 0;
        END;
      END ELSE
        MESSAGE(Text005);
    END;

    LOCAL PROCEDURE UpdatePriceAgreement@1100528501();
    BEGIN
      //C047131
      IF PurchasesPayablesSetup."Price Agreement" <> PurchasesPayablesSetup."Price Agreement"::" " THEN
        VALIDATE("Price Agreement", TRUE);

      CurrPage.UPDATE;  //refresh VendorPrice
    END;

    BEGIN
    END.
  }
}

