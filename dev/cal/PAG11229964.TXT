OBJECT Page 11229964 Plant Maint. Proposal Lines SF
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Werkzeugwartungsvorschlagszeilen;
               ENU=Plant Maintenance Proposal Lines;
               NLD=Materieelonderhoudsvoorstelregels];
    InsertAllowed=No;
    SourceTable=Table11126148;
    PageType=ListPart;
    OnInit=BEGIN
             LineEditable := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       UpdateEditable();
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&uncties] }
      { 1100525009;2 ;Action    ;
                      CaptionML=[DEU=Verschieben auf vorige Periode;
                                 ENU=Shift to Previous Period;
                                 NLD=Verschuif naar vorige periode];
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 AdjustNewMaintenanceDate('-', gPeriodType);
                               END;
                                }
      { 1100525010;2 ;Action    ;
                      CaptionML=[DEU=Verschieben auf nÑchste Periode;
                                 ENU=Shift to Next Period;
                                 NLD=Verschuif naar volgende periode];
                      Image=NextRecord;
                      OnAction=BEGIN
                                 AdjustNewMaintenanceDate('+', gPeriodType);
                               END;
                                }
      { 1100525012;2 ;Action    ;
                      CaptionML=[DEU=Neues Wartungsdatum eingeben;
                                 ENU=Enter New Maintenance Date;
                                 NLD=Nieuwe onderhoudsdatum invullen];
                      Image=ChangeDate;
                      OnAction=BEGIN
                                 AdjustNewMaintenanceDate('', -1);
                               END;
                                }
      { 1904332504;2 ;Action    ;
                      CaptionML=[DEU=Neues Wartungsdatum Åbernehmen;
                                 ENU=Copy New Maintenance Date;
                                 NLD=Nieuwe onderhoudsdatum overnemen];
                      Image=Copy;
                      OnAction=VAR
                                 PlantMaintProposalLine@1100529000 : Record 11126148;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(PlantMaintProposalLine);
                                 PlantMaintProposalLine.ReplaceMaintenanceDate(PlantMaintProposalLine);
                               END;
                                }
      { 1904332604;2 ;Action    ;
                      CaptionML=[DEU=Neues Wartungsdatum lîschen;
                                 ENU=Erase New Maintenance Date;
                                 NLD=Nieuwe onderhoudsdatum wissen];
                      Image=Delete;
                      OnAction=VAR
                                 PlantMaintProposalLine@1100529000 : Record 11126148;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(PlantMaintProposalLine);
                                 PlantMaintProposalLine.FILTERGROUP(11);
                                 PlantMaintProposalLine.SETRANGE("Service Order No.", '');
                                 PlantMaintProposalLine.FILTERGROUP(0);
                                 IF PlantMaintProposalLine.FINDSET(TRUE,FALSE) THEN BEGIN
                                   REPEAT
                                     IF (PlantMaintProposalLine."New Maintenance Date" <> 0D) OR (PlantMaintProposalLine."New Theoretical Maint. Date" <> 0D) THEN BEGIN
                                       PlantMaintProposalLine."New Maintenance Date" := 0D;
                                       PlantMaintProposalLine."New Theoretical Maint. Date" := 0D;
                                       PlantMaintProposalLine.MODIFY;
                                     END;
                                   UNTIL PlantMaintProposalLine.NEXT = 0;
                                 END;
                               END;
                                }
      { 1100529011;1 ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[DEU=AktivitÑten;
                                 ENU=Activities;
                                 NLD=Werkzaamheden];
                      Image=CalculateLines;
                      OnAction=VAR
                                 PlantMaintenanceScheme@1100529000 : Record 11072677;
                                 PlantMaintenanceSchemeVersionLine@1100529002 : TEMPORARY Record 11072675;
                                 TempPlantMaintenanceSchemeVersion@1100528802 : Page 11229870;
                               BEGIN
                                 TESTFIELD("Maintenance Scheme");
                                 TESTFIELD("Plant Type");
                                 TESTFIELD("Plant No.");
                                 TESTFIELD("Starting Date Maintenance");
                                 PlantMaintenanceScheme.GET("Plant Type", "Plant No.", "Maintenance Scheme");
                                 TempPlantMaintenanceSchemeVersion.SetSource(
                                   PlantMaintenanceSchemeVersionLine.Level::"Plant Number",
                                   "Plant Type", "Plant No.", "Maintenance Scheme", "Starting Date Maintenance", FALSE, FALSE, '');
                                 TempPlantMaintenanceSchemeVersion.RUNMODAL;
                               END;
                                }
      { 1100529010;1 ;Action    ;
                      ShortCutKey=Ctrl+F8;
                      CaptionML=[DEU=Inspektionen;
                                 ENU=Inspections;
                                 NLD=Inspecties];
                      Image=AllLines;
                      OnAction=VAR
                                 PlantMaintenanceScheme@1100529000 : Record 11072677;
                                 PlantMaintenanceSchemeVersionLine@1100529001 : TEMPORARY Record 11072675;
                                 TempPlantInspectionLines@1100528600 : Page 11229869;
                               BEGIN
                                 TESTFIELD("Maintenance Scheme");
                                 TESTFIELD("Plant Type");
                                 TESTFIELD("Plant No.");
                                 TESTFIELD("Starting Date Maintenance");
                                 PlantMaintenanceScheme.GET("Plant Type", "Plant No.", "Maintenance Scheme");
                                 PlantMaintenanceScheme.TESTFIELD("Base Inspection List");
                                 TempPlantInspectionLines.SetSource(
                                   PlantMaintenanceSchemeVersionLine.Level::"Plant Number", "Plant Type", "Plant No.",
                                   "Maintenance Scheme", PlantMaintenanceScheme."Base Inspection List", "Starting Date Maintenance", FALSE, FALSE, '');
                                 TempPlantInspectionLines.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525000;1;Group  ;
                GroupType=Repeater }

    { 1100525001;2;Field  ;
                SourceExpr="Plant Type" }

    { 1100525003;2;Field  ;
                SourceExpr="Plant No." }

    { 1100525008;2;Field  ;
                SourceExpr="Plant Description";
                Visible=FALSE }

    { 1100528629;2;Field  ;
                SourceExpr="Inspection No.";
                Visible=FALSE }

    { 1100525019;2;Field  ;
                SourceExpr="Maintenance Scheme" }

    { 1100526204;2;Field  ;
                SourceExpr="Maintenance Scheme Description";
                Visible=FALSE }

    { 1100529000;2;Field  ;
                SourceExpr="Inspection Type" }

    { 1100529001;2;Field  ;
                SourceExpr="Inspection Type Description";
                Visible=FALSE }

    { 1100529002;2;Field  ;
                SourceExpr="Interval Maintenance";
                Visible=FALSE }

    { 1100529003;2;Field  ;
                SourceExpr=Meter }

    { 1100529004;2;Field  ;
                SourceExpr="Meter Reading Type" }

    { 1100529005;2;Field  ;
                SourceExpr="Unit of Measure (Meter)";
                Visible=FALSE }

    { 1100529006;2;Field  ;
                SourceExpr="Interval Meter Reading";
                Visible=FALSE }

    { 1100529007;2;Field  ;
                SourceExpr="Specific Meter Reading";
                Visible=FALSE }

    { 1100529014;2;Field  ;
                SourceExpr="Total Meter Reading Maint." }

    { 1100525005;2;Field  ;
                SourceExpr="Starting Date Maintenance";
                Editable=LineEditable;
                OnValidate=BEGIN
                             IF "Firm Planned" THEN
                               IF NOT CONFIRM(Text003) THEN
                                 ERROR('');
                           END;
                            }

    { 1100528614;2;Field  ;
                SourceExpr="Starting Time Maintenance";
                Editable=LineEditable }

    { 1100528616;2;Field  ;
                SourceExpr="Ending Date Maintenance";
                Editable=LineEditable }

    { 1100528618;2;Field  ;
                SourceExpr="Ending Time Maintenance";
                Editable=LineEditable }

    { 1100525023;2;Field  ;
                SourceExpr="Execution Week";
                Visible=FALSE }

    { 1100525025;2;Field  ;
                SourceExpr="Execution Year";
                Visible=FALSE }

    { 1100526200;2;Field  ;
                SourceExpr="Execution Day";
                Visible=FALSE }

    { 1100526222;2;Field  ;
                SourceExpr="New Maintenance Date";
                Editable=LineEditable;
                OnValidate=BEGIN
                             IF "Firm Planned" THEN
                               IF NOT CONFIRM(Text003) THEN
                                 ERROR('');
                           END;
                            }

    { 1100526224;2;Field  ;
                SourceExpr="Theoretical Maintenance Date" }

    { 1100526226;2;Field  ;
                SourceExpr="New Theoretical Maint. Date" }

    { 1100526228;2;Field  ;
                DrillDown=No;
                SourceExpr="Maintenance Day";
                Visible=FALSE;
                Editable=LineEditable }

    { 1100526220;2;Field  ;
                SourceExpr="Firm Planned" }

    { 1100528617;2;Field  ;
                SourceExpr="Service Order Description";
                Editable=LineEditable }

    { 1100529009;2;Field  ;
                SourceExpr="Service Company" }

    { 1100529008;2;Field  ;
                SourceExpr="Resource Type";
                Editable=LineEditable }

    { 1100528620;2;Field  ;
                SourceExpr="Resource No.";
                Editable=LineEditable }

    { 1100528622;2;Field  ;
                SourceExpr="Resource Name" }

    { 1100528619;2;Field  ;
                SourceExpr="Order Kind";
                Editable=LineEditable }

    { 1100528621;2;Field  ;
                SourceExpr="Order Type";
                Editable=LineEditable }

    { 1100529012;2;Field  ;
                SourceExpr="Cost Component" }

    { 1100529013;2;Field  ;
                SourceExpr="Cost Component Description";
                Visible=FALSE }

    { 1100525033;2;Field  ;
                Lookup=No;
                SourceExpr="Service Order No.";
                OnDrillDown=BEGIN
                              DrillDownServiceOrder(FALSE);
                            END;
                             }

    { 1100528600;2;Field  ;
                SourceExpr=Cancelled }

    { 1100527450;2;Field  ;
                SourceExpr=Comment }

  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'DEU=Zuerst Zeilen wÑhlen.;ENU=First select lines.;NLD=Selecteer eerst regels.';
      Text001@1100529002 : TextConst 'DEU=FÅr alle ausgewÑhlten Zeilen wurde bereits ein Serviceauftrag erstellt oder die Zeile ist fÑllig;ENU=For all selected lines already a service order is created or lines are cancelled.;NLD=Voor alle geselecteerde regels is al een serviceorder aangemaakt of regel is vervallen';
      Text002@1100529001 : TextConst 'DEU=Es sind fest geplante Zeilen vorhanden. Diese Zeilen auch aktualisieren?;ENU=There are firm planned lines selected, update these also?;NLD=Er zijn vast geplande regels aanwezig. Deze regels ook bijwerken?';
      Text003@1100526201 : TextConst 'DEU=Zeile ist fest geplant. Mîchten Sie fortfahren?;ENU=Line is firm planned, continue?;NLD=Regel is vast gepland. Regel verschuiven?';
      LineEditable@19069908 : Boolean INDATASET;
      gPeriodType@1100529000 : 'Day,Week,Month,Quarter';
      Direction@1100525002 : 'Up,Down';
      gNewMaintenanceDate@1100525003 : Date;

    PROCEDURE SetSelectionPeriodType@1100525001(PeriodType2@1100525000 : 'Day,Week,Month,Quarter,Year');
    BEGIN
      gPeriodType := PeriodType2;
    END;

    PROCEDURE SetSelectionNewMaintenanceDate@1100525003(NewMaintenanceDate@1100525000 : Date);
    BEGIN
      gNewMaintenanceDate := NewMaintenanceDate;
    END;

    PROCEDURE UpdateEditable@1100526206();
    BEGIN
      LineEditable := ("Service Order No." = '');
    END;

    PROCEDURE AdjustNewMaintenanceDate@1100526203(Direction@1100526201 : Text[1];PeriodType@1100529001 : Option);
    VAR
      PlantMaintProposalLine@1100526202 : Record 11126148;
      ShiftDateFormula@1100526210 : DateFormula;
      NewMaintenanceDate@1100528600 : Date;
      NewTheoreticalMaintDate@1100528601 : Date;
      PeriodCode@1100529000 : Code[10];
    BEGIN
      CurrPage.SETSELECTIONFILTER(PlantMaintProposalLine);
      PlantMaintProposalLine.FILTERGROUP(11);
      PlantMaintProposalLine.SETRANGE("Service Order No.", '');
      PlantMaintProposalLine.SETRANGE("Firm Planned", TRUE);
      IF PlantMaintProposalLine.ISEMPTY THEN
        PlantMaintProposalLine.SETRANGE("Firm Planned", FALSE)
      ELSE BEGIN
        PlantMaintProposalLine.SETRANGE("Firm Planned", FALSE);
        IF CONFIRM(Text002, FALSE) THEN
          PlantMaintProposalLine.SETRANGE("Firm Planned");
      END;
      PlantMaintProposalLine.FILTERGROUP(0);
      IF PlantMaintProposalLine.FINDSET(TRUE,FALSE) THEN BEGIN
        PeriodCode := '';
        CASE PeriodType OF
          gPeriodType::Day:     PeriodCode := '1D';
          gPeriodType::Week:    PeriodCode := '1W';
          gPeriodType::Month:   PeriodCode := '1M';
          gPeriodType::Quarter: PeriodCode := '3M';
        END;
        IF PeriodCode <> '' THEN
          EVALUATE(ShiftDateFormula, STRSUBSTNO('<%1%2>', Direction, PeriodCode));
        REPEAT
          IF Direction = '' THEN
            NewTheoreticalMaintDate := gNewMaintenanceDate
          ELSE BEGIN
            NewTheoreticalMaintDate := PlantMaintProposalLine."New Theoretical Maint. Date";
            IF NewTheoreticalMaintDate = 0D THEN
              NewTheoreticalMaintDate := PlantMaintProposalLine."Theoretical Maintenance Date";
          END;
          PlantMaintProposalLine.CalcNewMaintenanceDates(NewTheoreticalMaintDate, NewMaintenanceDate, ShiftDateFormula, PlantMaintProposalLine."Maintenance Day");
          IF (NewTheoreticalMaintDate <> PlantMaintProposalLine."New Theoretical Maint. Date") OR
             (NewMaintenanceDate <> PlantMaintProposalLine."New Maintenance Date")
          THEN BEGIN
            PlantMaintProposalLine."New Theoretical Maint. Date" := NewTheoreticalMaintDate;
            PlantMaintProposalLine."New Maintenance Date" := NewMaintenanceDate;
            PlantMaintProposalLine.MODIFY;
          END;
        UNTIL PlantMaintProposalLine.NEXT = 0;
      END;
    END;

    PROCEDURE CreateServiceOrders@1100529000();
    VAR
      PlantMaintProposalLine@1100529000 : Record 11126148;
      CreateSOFromPlantMaintProposal@1100529001 : Page 11229989;
    BEGIN
      CurrPage.SETSELECTIONFILTER(PlantMaintProposalLine);
      IF PlantMaintProposalLine.ISEMPTY THEN
        ERROR(Text000);
      PlantMaintProposalLine.FILTERGROUP(11);
      PlantMaintProposalLine.SETRANGE("Service Order No.", '');
      PlantMaintProposalLine.SETRANGE(Cancelled, FALSE);
      PlantMaintProposalLine.FILTERGROUP(0);
      IF PlantMaintProposalLine.ISEMPTY THEN
        ERROR(Text001);

      CreateSOFromPlantMaintProposal.SetSelection(PlantMaintProposalLine);
      CreateSOFromPlantMaintProposal.RUNMODAL;
    END;

    BEGIN
    END.
  }
}

