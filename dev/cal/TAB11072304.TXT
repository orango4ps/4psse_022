OBJECT Table 11072304 Service Process Struct. Step
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ServiceProcessStructStep@1100528600 : Record 11072304;
             BEGIN
               ServiceProcessStructStep.SETRANGE(Type, Type);
               ServiceProcessStructStep.SETRANGE("Process Structure Code", "Process Structure Code");
               ServiceProcessStructStep.SETRANGE("Step Code", "Step Code");
               IF NOT ServiceProcessStructStep.ISEMPTY THEN
                 ERROR(Text000, "Step Code", "Process Structure Code");
             END;

    CaptionML=ENU=Service Process Structure Step;
    LookupPageID=Page11126789;
    DrillDownPageID=Page11126789;
  }
  FIELDS
  {
    { 5   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                "Visible at Plan" := Type = Type::"Service Order";
                                                                "Visible at Invoicing" := Type = Type::"Service Order";
                                                                "Visible at Preparation" := Type = Type::"Service Order";
                                                                "Visible at Review" := Type = Type::"Service Order";
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Type;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=ENU=Service Order,Service Call;
                                                   OptionString=Service Order,Service Call }
    { 10  ;   ;Process Structure Code;Code10      ;TableRelation="Service Process Structure".Code WHERE (Type=FIELD(Type));
                                                   CaptionML=ENU=Process Structure Code;
                                                   NotBlank=Yes }
    { 20  ;   ;Step Seq. No.       ;Code10        ;CaptionML=ENU=Step Seq. No.;
                                                   NotBlank=Yes }
    { 30  ;   ;Step Code           ;Code10        ;TableRelation="Service Process Step".Code WHERE (Type=FIELD(Type));
                                                   CaptionML=ENU=Step Code;
                                                   NotBlank=Yes }
    { 40  ;   ;Step Description    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Process Step".Description WHERE (Type=FIELD(Type),
                                                                                                                Code=FIELD(Step Code)));
                                                   CaptionML=ENU=Step Description;
                                                   Editable=No }
    { 50  ;   ;Source No. Filter   ;Code20        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Source No. Filter;
                                                              NOR=Serviceordrefilter;
                                                              SVE=Serviceorderfilter] }
    { 60  ;   ;Visible at Plan     ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Visible at Plan" THEN
                                                                  TESTFIELD(Type, Type::"Service Order");
                                                              END;

                                                   CaptionML=ENU=Visible at Plan }
    { 70  ;   ;Visible at Preparation;Boolean     ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Visible at Preparation" THEN
                                                                  TESTFIELD(Type, Type::"Service Order");
                                                              END;

                                                   CaptionML=ENU=Visible at Preparation }
    { 80  ;   ;Visible at Review   ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Visible at Review" THEN
                                                                  TESTFIELD(Type, Type::"Service Order");
                                                              END;

                                                   CaptionML=ENU=Visible at Review }
    { 90  ;   ;Visible at Invoicing;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Visible at Invoicing" THEN
                                                                  TESTFIELD(Type, Type::"Service Order");
                                                              END;

                                                   CaptionML=ENU=Visible at Invoicing }
    { 100 ;   ;Visible at Reference Point;Text100 ;TableRelation=IF (Type=CONST(Service Order)) "Reference Point" WHERE (Apply=CONST(ServOrder))
                                                                 ELSE IF (Type=CONST(Service Call)) "Reference Point" WHERE (Apply=CONST(ServCall));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Visible at Reference Point }
  }
  KEYS
  {
    {    ;Type,Process Structure Code,Step Seq. No.,Step Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528601 : TextConst 'ENU=Process Step %1 already exists within structure %2';

    PROCEDURE IsFinished@1100528600(VAR ONoOfChecks@1100528601 : Integer;VAR ONoOfPassedChecks@1100528602 : Integer) : Boolean;
    VAR
      ServiceProcessManagement@1100528600 : Codeunit 11012883;
    BEGIN
      EXIT(ServiceProcessManagement.IsProcessStepFinished(Type, GetSourceNo(), "Step Code", ONoOfChecks, ONoOfPassedChecks));
    END;

    PROCEDURE IsWithinReferencePeriodFilter@1100528602() : Boolean;
    VAR
      ServiceProcessManagement@1100528601 : Codeunit 11012883;
    BEGIN
      EXIT(ServiceProcessManagement.IsProcessStepWithinReferencePointFilter(Type, GetSourceNo(), Rec));
    END;

    PROCEDURE ShowChecks@1100528601();
    VAR
      ServiceProcessStepCheck@1100528600 : Record 11072305;
      ServiceProcessStepCheckLis@1100528601 : Page 11126792;
    BEGIN
      ServiceProcessStepCheck.SETRANGE(Type, Type);
      ServiceProcessStepCheck.SETRANGE("Step Code", "Step Code");
      ServiceProcessStepCheckLis.SetSourceNo(GetSourceNo());
      ServiceProcessStepCheckLis.SETTABLEVIEW(ServiceProcessStepCheck);
      ServiceProcessStepCheckLis.RUNMODAL;
    END;

    LOCAL PROCEDURE GetSourceNo@1100528603() SourceNo : Code[20];
    BEGIN
      FILTERGROUP(4);
      SourceNo := GETFILTER("Source No. Filter");
      FILTERGROUP(0);
    END;

    BEGIN
    END.
  }
}

