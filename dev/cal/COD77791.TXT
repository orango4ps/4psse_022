OBJECT Codeunit 77791 TTDotNetTranslationManagement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=TTool;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1100525000 : TextConst 'ENU="Source or Target Language Code cannot be empty.  "';
      Text001@1100525001 : TextConst 'ENU=Exclude empty source captions?';
      Window@1100525002 : Dialog;
      WindowLastUpdated@1100525008 : Time;
      PrefixTag@1100525010 : Code[10];
      PostfixTag@1100525011 : Code[10];
      Counter@1100525003 : Integer;
      MaxCounter@1100525004 : Integer;
      Text002@1100525013 : TextConst 'ENU=Line             #1###### of #2######\';
      Text003@1100525007 : TextConst 'ENU=Processing lines @3@@@@@@@@@@@@@';
      Text004@1100525009 : TextConst 'ENU=Tag Expression is: ''%1'', do you want to continue?';
      UseCurrentTag@1100525005 : Boolean;
      Text005@1100525006 : TextConst 'ENU=Overwrite non empty captions?';
      Text006@1100525012 : TextConst 'ENU=Are you sure you want to clear the selected captions?';
      Text007@1000 : TextConst 'ENU=Only one line should be selected.';

    PROCEDURE GetPossibleTranslations@1100525021(TgtNetCaption@1000 : Record 77793;TTNetProduct@1100525002 : Record 77791;VAR TTNetCaptionResultSet@1100525001 : Record 77793;WithinObject@1100525005 : Boolean);
    VAR
      TTNetCaption@1100525004 : Record 77793;
    BEGIN
      IF TgtNetCaption."Alt. Search Caption" = '' THEN
        EXIT;

      TTNetCaption.SETRANGE("Product Code", TTNetProduct.Code);
      TTNetCaption.SETRANGE("Language ID", TTNetProduct."Source Language ID");
      TTNetCaption.SETRANGE("Search Caption", TgtNetCaption."Alt. Search Caption");
      TTNetCaption.SETRANGE("Language Filter", TTNetProduct."Target Language ID");
      TTNetCaption.SETRANGE(Caption1, TgtNetCaption."Alt. Caption1");

      IF WithinObject THEN BEGIN
        TTNetCaption.SETRANGE("File Code", TgtNetCaption."File Code");
        TTNetCaption.SETRANGE("Data Name ID", TgtNetCaption."Data Name ID");
      END;

      IF NOT TTNetCaption.FINDSET THEN
        EXIT;

      TTNetCaptionResultSet."Language ID" := TTNetProduct."Target Language ID";
      TTNetCaptionResultSet."Product Code" := TTNetProduct.Code;
      REPEAT
        TTNetCaption.CALCFIELDS("Alt. Caption1");
        TTNetCaptionResultSet.SETFILTER(Caption1, '%1', TTNetCaption."Alt. Caption1");
        IF TTNetCaptionResultSet.FINDFIRST THEN BEGIN
          TTNetCaptionResultSet."No. of Occurrences" := TTNetCaptionResultSet."No. of Occurrences" + 1;
          TTNetCaptionResultSet.MODIFY;
        END ELSE BEGIN
          TTNetCaptionResultSet."File Code" := TTNetCaption."File Code";
          TTNetCaptionResultSet."Data Name ID" := TTNetCaption."Data Name ID";
          TTNetCaptionResultSet.Caption1 := TTNetCaption."Alt. Caption1";
          TTNetCaptionResultSet."No. of Occurrences" := 1;
          TTNetCaptionResultSet."Entry No." := NextEntryNo;
          TTNetCaptionResultSet.INSERT;
        END;
      UNTIL TTNetCaption.NEXT = 0;

      TTNetCaptionResultSet.SETRANGE(Caption1);
      TTNetCaptionResultSet.SETCURRENTKEY("No. of Occurrences");
      TTNetCaptionResultSet.ASCENDING(FALSE);
    END;

    PROCEDURE FindExactMatch@1100525022(TranslateMode@1100525003 : 'Translate,Calc. Probability,Calc. Prob. Consistency';VAR TgtNetCaption@1100525000 : Record 77793;TTNetProduct@1100525001 : Record 77791) : Boolean;
    VAR
      NetTranslation@1100525002 : Record 77793;
      NetTranslationText@1100525004 : Text[1024];
    BEGIN
      IF TranslateMode = TranslateMode::"Calc. Prob. Consistency" THEN
        EXIT;

      IF NOT NetTranslation.GET(TTNetProduct.Code, TTNetProduct."Source Language ID", TgtNetCaption."File Code", TgtNetCaption."Data Name ID") THEN
        EXIT;

      IF TgtNetCaption.GetAltCaption <> NetTranslation.GetCaption THEN
        EXIT;

      NetTranslation.SETRANGE("Language Filter", TTNetProduct."Target Language ID");
      NetTranslation.SETRANGE("Product Code", NetTranslation."Product Code");
      NetTranslationText := NetTranslation.GetAltCaption;
      IF NetTranslationText = '' THEN
        EXIT;

      IF TranslateMode = TranslateMode::Translate THEN BEGIN
        TgtNetCaption.SetCaption(NetTranslationText);
        TgtNetCaption.Status := TgtNetCaption.Status::"ID-based  AutoTrans";
      END;

      EXIT(TRUE);
    END;

    PROCEDURE FindMatch@1100525027(TranslateMode@1100525002 : 'Translate,Calc. Probability,Calc. Prob. Consistency';VAR TgtNetCaption@1100525000 : Record 77793;TTNetProduct@1100525001 : Record 77791;WithinObject@1100525006 : Boolean) : Boolean;
    VAR
      NetTranslationBuffer@1100525005 : TEMPORARY Record 77793;
      NetTranslation@1100525004 : Record 77793;
    BEGIN
      IF WithinObject AND (TranslateMode = TranslateMode::"Calc. Prob. Consistency") THEN
        EXIT;

      TgtNetCaption.CALCFIELDS("Alt. Search Caption", TgtNetCaption."Alt. Caption1");
      GetPossibleTranslations(TgtNetCaption, TTNetProduct, NetTranslationBuffer, WithinObject);

      NetTranslationBuffer.SETFILTER(Caption1, '<>%1', '');

      IF NOT NetTranslationBuffer.FINDFIRST THEN
        EXIT;

      NetTranslation.GET(
        NetTranslationBuffer."Product Code",
        NetTranslationBuffer."Language ID",
        NetTranslationBuffer."File Code",
        NetTranslationBuffer."Data Name ID");
      IF TranslateMode = TranslateMode::Translate THEN BEGIN
        TgtNetCaption.SetCaption(NetTranslation.GetCaption);
        IF WithinObject THEN
          TgtNetCaption.Status := TgtNetCaption.Status::"Obj.-based AutoTrans"
        ELSE
          TgtNetCaption.Status := TgtNetCaption.Status::"Caption based AutoTrans";
      END;

      EXIT(TRUE);
    END;

    PROCEDURE AutoTranslate@1100525017(TranslateMode@1100525002 : 'Translate,Calc. Probability,Calc. Prob. Consistency';VAR TgtNetCaption@1100525000 : Record 77793;TTNetProduct@1100525001 : Record 77791);
    VAR
      NetTranslationBuffer@1100525003 : TEMPORARY Record 77793;
      NetTranslation@1100525004 : Record 77793;
    BEGIN
      IF NOT TgtNetCaption.FINDSET(TRUE) THEN
        EXIT;

      MaxCounter := TgtNetCaption.COUNT;
      OpenWindow(Text003, MaxCounter);

      TgtNetCaption.SETRANGE("Product Code", TTNetProduct.Code);
      TgtNetCaption.SETRANGE("Language Filter", TTNetProduct."Source Language ID");
      REPEAT
        Counter := Counter + 1;
        UpdateWindow;
        CASE TRUE OF
          FindExactMatch(TranslateMode, TgtNetCaption, TTNetProduct),
          FindMatch(TranslateMode, TgtNetCaption, TTNetProduct, TRUE), //same Filecode and DataName
          FindMatch(TranslateMode, TgtNetCaption, TTNetProduct, FALSE): //all
            BEGIN
              TgtNetCaption.UpdateProperties;
              TgtNetCaption.MODIFY(TRUE);
            END;
        END;
      UNTIL TgtNetCaption.NEXT = 0;
      Window.CLOSE;
    END;

    PROCEDURE MarkUniqueEntries@1100525012(VAR TTNetCaption@1100525000 : Record 77793;TTNetProduct@1100525001 : Record 77791);
    VAR
      TempNetCaption@1100525003 : TEMPORARY Record 77793;
    BEGIN
      IF NOT TTNetCaption.FINDSET(TRUE) THEN
        EXIT;
      SetTagExpression('~%');

      MaxCounter := TTNetCaption.COUNT;
      OpenWindow(Text003,MaxCounter);

      TTNetCaption.SETRANGE("Language Filter",TTNetProduct."Source Language ID");
      REPEAT
        Counter := Counter + 1;
        UpdateWindow;
        TTNetCaption.CALCFIELDS(TTNetCaption."Alt. Caption1");
        TempNetCaption.SETFILTER(Caption1,'%1',TTNetCaption."Alt. Caption1");
        IF NOT TempNetCaption.FINDFIRST THEN BEGIN
          TempNetCaption."File Code" := TTNetCaption."File Code";
          TempNetCaption."Data Name ID" := TTNetCaption."Data Name ID";
          TempNetCaption.Caption1 := TTNetCaption."Alt. Caption1";
          TempNetCaption."Entry No." := NextEntryNo;
          TempNetCaption.INSERT;
          TTNetCaption.Tag2 := CalculateTag(TTNetCaption.Tag2);
          TTNetCaption.MODIFY;
        END;
      UNTIL TTNetCaption.NEXT = 0;
      Window.CLOSE;
    END;

    PROCEDURE TagSourceTranslationCaptionDiffs@1100525007(VAR TTNetCaption@1100525000 : Record 77793;TTNetProduct@1100525001 : Record 77791);
    VAR
      TempNetTranslation@1100525003 : TEMPORARY Record 77793;
      NetTranslation@1100525004 : Record 77793;
      SrcNoOfOptions@1100525005 : Integer;
      TgtNoOfOptions@1100525006 : Integer;
    BEGIN
      IF NOT TTNetCaption.FINDSET(TRUE) THEN
        EXIT;
      SetTagExpression(']%');

      MaxCounter := TTNetCaption.COUNT;
      OpenWindow(Text003,MaxCounter);

      TTNetCaption.SETRANGE("Product Code", TTNetProduct.Code);
      TTNetCaption.SETRANGE("Language Filter", TTNetProduct."Source Language ID");
      REPEAT
        Counter := Counter + 1;
        UpdateWindow;
        IF TTNetCaption.GetCaption <> TTNetCaption.GetAltCaption THEN BEGIN
          TTNetCaption.Tag2 := CalculateTag(TTNetCaption.Tag2);
          TTNetCaption.MODIFY;
        END ELSE
          IF TTNetCaption.Tag2 <> '' THEN BEGIN
            TTNetCaption.Tag2 := DELCHR(TTNetCaption.Tag2,'=',']');
            TTNetCaption.MODIFY;
          END;
      UNTIL TTNetCaption.NEXT = 0;
      Window.CLOSE;
    END;

    PROCEDURE TagSourceTranslationCaptionEqual@9(VAR TTNetCaption@1100525000 : Record 77793;TTNetProduct@1100525001 : Record 77791);
    VAR
      TempNetTranslation@1100525003 : TEMPORARY Record 77793;
      NetTranslation@1100525004 : Record 77793;
      SrcNoOfOptions@1100525005 : Integer;
      TgtNoOfOptions@1100525006 : Integer;
    BEGIN
      IF NOT TTNetCaption.FINDSET(TRUE) THEN
        EXIT;
      SetTagExpression('[%');

      MaxCounter := TTNetCaption.COUNT;
      OpenWindow(Text003,MaxCounter);

      TTNetCaption.SETRANGE("Product Code", TTNetProduct.Code);
      TTNetCaption.SETRANGE("Language Filter", TTNetProduct."Source Language ID");
      REPEAT
        Counter := Counter + 1;
        UpdateWindow;
        IF TTNetCaption.GetCaption = TTNetCaption.GetAltCaption THEN BEGIN
          TTNetCaption.Tag2 := CalculateTag(TTNetCaption.Tag2);
          TTNetCaption.MODIFY;
        END ELSE
          IF TTNetCaption.Tag2 <> '' THEN BEGIN
            TTNetCaption.Tag2 := DELCHR(TTNetCaption.Tag2,'=','[');
            TTNetCaption.MODIFY;
          END;
      UNTIL TTNetCaption.NEXT = 0;
      Window.CLOSE;
    END;

    PROCEDURE CopyTagToSrcLangCaption@1100525014(VAR TTCaption@1100525000 : Record 77786;TTProject@1100525001 : Record 77782);
    VAR
      SourceCaption@1100525004 : Record 77786;
    BEGIN
      IF NOT TTCaption.FINDSET(TRUE) THEN
        EXIT;

      MaxCounter := TTCaption.COUNT;
      OpenWindow(Text003,MaxCounter);
      REPEAT
        Counter := Counter + 1;
        UpdateWindow;
        IF SourceCaption.GET(TTProject.Code, TTProject."Source Language ID", TTCaption."Object ID") THEN BEGIN
          SourceCaption.Tag1 := TTCaption.Tag1;
          SourceCaption.Tag2 := TTCaption.Tag2;
          SourceCaption.MODIFY;
        END;
      UNTIL TTCaption.NEXT = 0;
      Window.CLOSE;
    END;

    PROCEDURE CopyCaptionToAltCaption@1100525018(VAR TTNetCaption@1100525000 : Record 77793;TTNetProduct@1100525001 : Record 77791);
    VAR
      SourceNetCaption@1100525004 : Record 77793;
    BEGIN
      IF NOT TTNetCaption.FINDSET(TRUE) THEN
        EXIT;

      MaxCounter := TTNetCaption.COUNT;
      OpenWindow(Text003,MaxCounter);
      REPEAT
        Counter := Counter + 1;
        UpdateWindow;
        IF SourceNetCaption.GET(TTNetCaption."Product Code",TTNetProduct."Source Language ID",TTNetCaption."File Code", TTNetCaption."Data Name ID") THEN BEGIN
          SourceNetCaption.Caption1 := TTNetCaption.Caption1;
          SourceNetCaption.Caption2 := TTNetCaption.Caption2;
          SourceNetCaption.Caption3 := TTNetCaption.Caption3;
          SourceNetCaption.Caption4 := TTNetCaption.Caption4;
          SourceNetCaption.Caption5 := TTNetCaption.Caption5;
          SourceNetCaption."Search Caption" := TTNetCaption."Search Caption";
          SourceNetCaption.Status := SourceNetCaption.Status::Generated;
          SourceNetCaption.UpdateProperties;
          SourceNetCaption.MODIFY(TRUE);
          END
        ELSE BEGIN
          SourceNetCaption := TTNetCaption;
          SourceNetCaption."Language ID" := TTNetProduct."Source Language ID";
          SourceNetCaption.Status := SourceNetCaption.Status::Generated;
          SourceNetCaption.UpdateProperties;
          SourceNetCaption."Entry No." := NextEntryNo;
          SourceNetCaption.INSERT(TRUE);
        END;
      UNTIL TTNetCaption.NEXT = 0;
      Window.CLOSE;
    END;

    PROCEDURE CopyAltCaptionToCaption@1100525000(VAR TTNetCaption@1100525000 : Record 77793;TTNetProduct@1100525001 : Record 77791);
    VAR
      SourceNetCaption@1100525004 : Record 77793;
      OverwriteValue@1100525002 : Boolean;
    BEGIN
      IF NOT TTNetCaption.FINDSET(TRUE) THEN
        EXIT;

      OverwriteValue := CONFIRM(Text005);

      MaxCounter := TTNetCaption.COUNT;
      OpenWindow(Text003,MaxCounter);
      REPEAT
        Counter := Counter + 1;
        UpdateWindow;
        IF (TTNetCaption.GetCaption = '') OR OverwriteValue THEN BEGIN
          TTNetCaption.SetCaption(TTNetCaption.GetAltCaption);
          TTNetCaption.Status := SourceNetCaption.Status::Generated;
          TTNetCaption.UpdateProperties;
          TTNetCaption.MODIFY(TRUE);
        END;
      UNTIL TTNetCaption.NEXT = 0;
      Window.CLOSE;
    END;

    PROCEDURE ClearTranslationCaption@1210190000(VAR TTNetCaption@1100525000 : Record 77793;TTNetProduct@1100525001 : Record 77791);
    VAR
      SourceNetCaption@1100525004 : Record 77793;
      OverwriteValue@1100525002 : Boolean;
    BEGIN
      IF NOT TTNetCaption.FINDSET(TRUE) THEN
        EXIT;

      OverwriteValue := CONFIRM(Text006);

      MaxCounter := TTNetCaption.COUNT;
      OpenWindow(Text003,MaxCounter);
      REPEAT
        Counter := Counter + 1;
        UpdateWindow;
        IF (TTNetCaption.GetCaption = '') OR OverwriteValue THEN BEGIN
          TTNetCaption.SetCaption('');
          TTNetCaption.Status := SourceNetCaption.Status::Modified;
          TTNetCaption.UpdateProperties;
          TTNetCaption.MODIFY(TRUE);
        END;
      UNTIL TTNetCaption.NEXT = 0;
      Window.CLOSE;
    END;

    PROCEDURE CountChar@1100525006(Char2@1100525000 : Text[1];Text2@1100525001 : Text[1024]) : Integer;
    VAR
      Pos@1100525004 : Integer;
      i@1100525003 : Integer;
      EndLoop@1100525002 : Boolean;
    BEGIN
      WHILE TRUE DO BEGIN
        Pos := STRPOS(Text2,Char2);
        IF (Pos = 0) THEN
          EXIT(i);
        i := i + 1;
        IF (Pos >= STRLEN(Text2)) THEN
          EXIT(i);
        Text2 := COPYSTR(Text2,Pos + 1);
      END;
    END;

    PROCEDURE CalculateTag@1100525010(VAR TagExpression2@1100525000 : Code[10]) : Code[10];
    VAR
      NewTag@1100525001 : Text[30];
    BEGIN
      NewTag := PrefixTag;

      IF UseCurrentTag THEN
        NewTag := NewTag + TagExpression2 + PostfixTag;

      EXIT(COPYSTR(NewTag,1,MAXSTRLEN(TagExpression2)));
    END;

    PROCEDURE SetTagExpression@1100525009(TagExpression2@1100525000 : Code[10]);
    VAR
      Pos@1100525001 : Integer;
    BEGIN
      IF NOT CONFIRM(Text004,TRUE,TagExpression2) THEN
        ERROR('');

      PrefixTag := TagExpression2;
      PostfixTag := '';
      UseCurrentTag := FALSE;

      Pos := STRPOS(TagExpression2,'%');
      IF Pos <> 0 THEN BEGIN
        UseCurrentTag := TRUE;
        PrefixTag := COPYSTR(TagExpression2,1,Pos - 1);
        IF  (Pos < STRLEN(TagExpression2)) THEN
          PostfixTag := COPYSTR(TagExpression2,Pos + 1,STRLEN(TagExpression2) - Pos);
      END;
    END;

    PROCEDURE OpenWindow@1100525002(Txt@1100525000 : Text[80];MaxCounter2@1100525001 : Integer);
    BEGIN
      Window.OPEN(Text002 + Txt);
      Counter := 0;
      Window.UPDATE(2,MaxCounter2);
      WindowLastUpdated := TIME;
    END;

    PROCEDURE UpdateWindow@1100525003();
    BEGIN
      IF TIME - WindowLastUpdated > 300 THEN BEGIN
        Window.UPDATE(1,Counter);
        Window.UPDATE(3,ROUND(Counter / MaxCounter * 10000,1));
        WindowLastUpdated := TIME;
      END;
    END;

    PROCEDURE NextEntryNo@1100525001() NextEntryNo : Integer;
    VAR
      TTNetCaption@1100525000 : Record 77793;
    BEGIN
      TTNetCaption.SETCURRENTKEY("Entry No.");
      IF TTNetCaption.FINDLAST THEN
        NextEntryNo := TTNetCaption."Entry No." + 1
      ELSE
        NextEntryNo := 1;
    END;

    PROCEDURE CreateMissingCaptions@1100525015(TTNetProduct@1100525000 : Record 77791);
    VAR
      TargetNetCaption@1100525003 : Record 77793;
      SourceNetCaption@1000 : Record 77793;
      LanguageID2@1100525004 : Code[10];
    BEGIN
      IF (TTNetProduct."Source Language ID" = '') OR (TTNetProduct."Target Language ID" = '')THEN
        ERROR(Text000);

      SourceNetCaption.SETCURRENTKEY("Entry No.");
      SourceNetCaption.SETFILTER("Language ID",TTNetProduct."Source Language ID");
      SourceNetCaption.SETFILTER("Language Filter",TTNetProduct."Target Language ID");
      SourceNetCaption.SETFILTER("Product Code", TTNetProduct.Code);

      IF CONFIRM(Text001) THEN
        SourceNetCaption.SETFILTER(SourceNetCaption.Caption1,'<>%1','');

      IF NOT SourceNetCaption.FINDSET(TRUE) THEN
        EXIT;

      MaxCounter := SourceNetCaption.COUNT;
      OpenWindow(Text003,MaxCounter);
      REPEAT
        Counter := Counter + 1;
        UpdateWindow;

        TargetNetCaption := SourceNetCaption;
        TargetNetCaption."Language ID" := TTNetProduct."Target Language ID";
        TargetNetCaption.SetCaption('');
        TargetNetCaption.Status := TargetNetCaption.Status::Generated;
        TargetNetCaption."Entry No." := NextEntryNo;
        IF TargetNetCaption.INSERT(TRUE) THEN;
      UNTIL SourceNetCaption.NEXT = 0;
      Window.CLOSE;
    END;

    PROCEDURE FindMatchOtherProduct@1(VAR TgtNetCaption@1100525000 : Record 77793;TTNetProduct@1100525001 : Record 77791;OtherNetProduct@1000 : Record 77791;WithinObject@1100525006 : Boolean) : Boolean;
    VAR
      NetTranslationBuffer@1100525005 : TEMPORARY Record 77793;
      NetTranslation@1100525004 : Record 77793;
    BEGIN
      TgtNetCaption.CALCFIELDS("Alt. Search Caption", TgtNetCaption."Alt. Caption1");
      GetPossibleTranslOtherProd(TgtNetCaption, TTNetProduct, OtherNetProduct, NetTranslationBuffer, WithinObject);

      NetTranslationBuffer.SETFILTER(Caption1, '<>%1', '');

      IF NOT NetTranslationBuffer.FINDFIRST THEN
        EXIT;

      NetTranslation.GET(
        NetTranslationBuffer."Product Code",
        NetTranslationBuffer."Language ID",
        NetTranslationBuffer."File Code",
        NetTranslationBuffer."Data Name ID");

      TgtNetCaption.SetCaption(NetTranslation.GetCaption);
      IF WithinObject THEN
        TgtNetCaption.Status := TgtNetCaption.Status::"Obj.-based AutoTrans"
      ELSE
        TgtNetCaption.Status := TgtNetCaption.Status::"Caption based AutoTrans";

      EXIT(TRUE);
    END;

    PROCEDURE GetPossibleTranslOtherProd@2(TgtNetCaption@1001 : Record 77793;TTNetProduct@1100525002 : Record 77791;OtherNetProduct@1000 : Record 77791;VAR TTNetCaptionResultSet@1100525001 : Record 77793;WithinObject@1100525005 : Boolean);
    VAR
      TTNetCaption@1100525004 : Record 77793;
    BEGIN
      IF TgtNetCaption."Alt. Search Caption" = '' THEN
        EXIT;

      TTNetCaption.SETRANGE("Product Code", OtherNetProduct.Code);
      TTNetCaption.SETRANGE("Language ID", TTNetProduct."Source Language ID");
      TTNetCaption.SETRANGE("Search Caption", TgtNetCaption."Alt. Search Caption");
      TTNetCaption.SETRANGE("Language Filter", TTNetProduct."Target Language ID");
      TTNetCaption.SETRANGE(Caption1, TgtNetCaption."Alt. Caption1");

      IF WithinObject THEN BEGIN
        TTNetCaption.SETRANGE("File Code", TgtNetCaption."File Code");
        TTNetCaption.SETRANGE("Data Name ID", TgtNetCaption."Data Name ID");
      END;

      IF NOT TTNetCaption.FINDSET THEN
        EXIT;

      TTNetCaptionResultSet."Language ID" := OtherNetProduct."Target Language ID";
      TTNetCaptionResultSet."Product Code" := OtherNetProduct.Code;
      REPEAT
        TTNetCaption.CALCFIELDS("Alt. Caption1");
        TTNetCaptionResultSet.SETFILTER(Caption1, '%1', TTNetCaption."Alt. Caption1");
        IF TTNetCaptionResultSet.FINDFIRST THEN BEGIN
          TTNetCaptionResultSet."No. of Occurrences" := TTNetCaptionResultSet."No. of Occurrences" + 1;
          TTNetCaptionResultSet.MODIFY;
        END ELSE BEGIN
          TTNetCaptionResultSet."File Code" := TTNetCaption."File Code";
          TTNetCaptionResultSet."Data Name ID" := TTNetCaption."Data Name ID";
          TTNetCaptionResultSet.Caption1 := TTNetCaption."Alt. Caption1";
          TTNetCaptionResultSet."No. of Occurrences" := 1;
          TTNetCaptionResultSet."Entry No." := NextEntryNo;
          TTNetCaptionResultSet.INSERT;
        END;
      UNTIL TTNetCaption.NEXT = 0;

      TTNetCaptionResultSet.SETRANGE(Caption1);
      TTNetCaptionResultSet.SETCURRENTKEY("No. of Occurrences");
      TTNetCaptionResultSet.ASCENDING(FALSE);
    END;

    PROCEDURE FindMatchNAVProject@3(VAR TgtNetCaption@1100525000 : Record 77793;TTNetProduct@1100525001 : Record 77791;NAVProject@1000 : Record 77782) : Boolean;
    VAR
      TranslationBuffer@1100525005 : TEMPORARY Record 77786;
      Translation@1100525004 : Record 77786;
    BEGIN
      TgtNetCaption.CALCFIELDS("Alt. Search Caption", TgtNetCaption."Alt. Caption1");
      GetPossibleTranslNAVProj(TgtNetCaption."Alt. Search Caption", TgtNetCaption."Alt. Caption1", TTNetProduct, NAVProject, TranslationBuffer);
      TranslationBuffer.SETFILTER(Caption1, '<>%1', '');

      IF NOT TranslationBuffer.FINDFIRST THEN
        EXIT;

      Translation.GET(
        TranslationBuffer."Project Code",
        TranslationBuffer."Language ID",
        TranslationBuffer."Object ID");

      TgtNetCaption.SetCaption(Translation.GetCaption);
      TgtNetCaption.Status := TgtNetCaption.Status::"Caption based AutoTrans";

      EXIT(TRUE);
    END;

    PROCEDURE GetPossibleTranslNAVProj@4(SearchCaption@1100525000 : Code[100];SourceCaption1@1210190000 : Text[250];TTNetProduct@1100525002 : Record 77791;NAVProject@1000 : Record 77782;VAR TTCaptionResultSet@1100525001 : Record 77786);
    VAR
      TTCaption@1100525004 : Record 77786;
    BEGIN
      IF SearchCaption = '' THEN
        EXIT;

      TTCaption.SETRANGE("Project Code",NAVProject.Code);
      TTCaption.SETRANGE("Language ID", TTNetProduct."Source Language ID");
      TTCaption.SETRANGE("Search Caption", SearchCaption);
      TTCaption.SETRANGE("Language Filter", TTNetProduct."Target Language ID");
      TTCaption.SETRANGE(Caption1, SourceCaption1);

      IF NOT TTCaption.FINDSET THEN
        EXIT;

      TTCaptionResultSet."Language ID" := NAVProject."Target Language ID";
      TTCaptionResultSet."Project Code" := NAVProject.Code;
      REPEAT
        TTCaption.CALCFIELDS("Alt. Caption1");
        TTCaptionResultSet.SETFILTER(Caption1, '%1', TTCaption."Alt. Caption1");
        IF TTCaptionResultSet.FINDFIRST THEN BEGIN
          TTCaptionResultSet."No. of Occurrences" := TTCaptionResultSet."No. of Occurrences" + 1;
          TTCaptionResultSet.MODIFY;
        END ELSE BEGIN
          TTCaptionResultSet."Object ID" := TTCaption."Object ID";
          TTCaptionResultSet.Caption1 := TTCaption."Alt. Caption1";
          TTCaptionResultSet."No. of Occurrences" := 1;
          TTCaptionResultSet."Entry No." := NextEntryNo;
          TTCaptionResultSet.INSERT;
        END;
      UNTIL TTCaption.NEXT = 0;

      TTCaptionResultSet.SETRANGE(Caption1);
      TTCaptionResultSet.SETCURRENTKEY("No. of Occurrences");
      TTCaptionResultSet.ASCENDING(FALSE);
    END;

    BEGIN
    END.
  }
}

