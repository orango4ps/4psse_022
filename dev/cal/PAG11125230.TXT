OBJECT Page 11125230 Service Collective-Lists
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Collective-Lists;
               NOR=Samlingsfakturaer;
               SVE=Samlingsfakturor];
    SourceTable=Table11071730;
    PageType=List;
    UsageCategory=Lists;
    CardPageID=Service Collective-List;
    OnInit=BEGIN
             CreateCollectiveListEnabled := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       CreateCollectiveListEnabled := GETFILTER("Customer No.") <> '';
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528620;1 ;Action    ;
                      CaptionML=[ENU=Create Collective List;
                                 NOR=Opprett samlingsfaktura;
                                 SVE=Skapa samlingsfaktura];
                      Promoted=Yes;
                      Enabled=CreateCollectiveListEnabled;
                      Image=AddAction;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Customer@1100528601 : Record 18;
                                 ServiceLocation@1100528600 : Record 11012801;
                                 ServiceCollectiveListMgt@1100528602 : Codeunit 11012850;
                                 CollectiveListNo@1100528603 : Code[20];
                                 CollectSOInvoicesBy@1100409001 : Option;
                               BEGIN
                                 IF NOT Customer.GET(GETRANGEMAX("Customer No.")) THEN
                                   Customer.INIT;
                                 CollectSOInvoicesBy := Customer."Collect SO Invoices By";
                                 IF (CollectSOInvoicesBy = Customer."Collect SO Invoices By"::"Service Contract") AND
                                    (ServiceOrder."Service Contract No." = '')
                                 THEN
                                   CollectSOInvoicesBy := Customer."Collect SO Invoices By"::Customer;

                                 IF Customer."No." <> '' THEN
                                   CASE CollectSOInvoicesBy OF
                                     Customer."Collect SO Invoices By"::"Service Contract":
                                       IF ServiceOrder."No." <> '' THEN
                                         ServiceOrder.TESTFIELD("Service Contract No.");
                                     Customer."Collect SO Invoices By"::Complex:
                                       IF ServiceOrder."No." <> '' THEN
                                         IF ServiceLocation.GET(ServiceOrder."Service Location No.") THEN
                                           IF ServiceLocation.GetComplexCode = '' THEN
                                             ServiceLocation.TESTFIELD("Complex Code");
                                     Customer."Collect SO Invoices By"::"Service Location":
                                       IF ServiceOrder."No." <> '' THEN
                                         ServiceOrder.TESTFIELD("Service Location No.");
                                     Customer."Collect SO Invoices By"::"Service Order":
                                       ServiceOrder.TESTFIELD("No.");
                                   END;
                                 CollectiveListNo :=
                                   ServiceCollectiveListMgt.CreateCollectiveList(GETRANGEMAX("Customer No."), GETRANGEMAX("Bill-to Customer No."),
                                     GETRANGEMAX("Bill-to Contact Person No."), GETRANGEMAX("Alternative Bill-to Address"), ServiceOrder."Service Location No.", ServiceOrder."Service Contract No.",
                                     ServiceOrder."No.", FALSE,'');

                                 GET(CollectiveListNo);
                               END;
                                }
      { 1100528612;1 ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Re&lease;
                                 NOR=&Frigi;
                                 SVE=&Sl„pp];
                      Promoted=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceCollectiveList@1100528601 : Record 11071730;
                                 ServiceCollectiveListMgt@1100528600 : Codeunit 11012850;
                                 Text000@1100528602 : TextConst 'ENU=Recalculate Collective Lists first?';
                                 DoRecalculate@1100528603 : Boolean;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ServiceCollectiveList);
                                 ServiceCollectiveList.SETRANGE(Status, ServiceCollectiveList.Status::Open);
                                 ServiceCollectiveList.FINDFIRST;
                                 DoRecalculate := FALSE;
                                 IF GUIALLOWED THEN
                                   DoRecalculate := CONFIRM(Text000);
                                 ServiceCollectiveListMgt.ReleaseServiceCollectiveLists(ServiceCollectiveList, DoRecalculate);
                               END;
                                }
      { 1100528614;1 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Invoices;
                                 NOR=Opprette fakturaer;
                                 SVE=Skapa fakturor];
                      Promoted=Yes;
                      Image=CreateJobSalesInvoice;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceCollectiveList@1100528602 : Record 11071730;
                                 ProcessCollectiveListREP@1100528600 : Report 11012859;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ServiceCollectiveList);
                                 ProcessCollectiveListREP.SETTABLEVIEW(ServiceCollectiveList);
                                 ProcessCollectiveListREP.RUNMODAL;
                                 CLEAR(ProcessCollectiveListREP);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100528600;1;Group  ;
                Name=tbCollectiveList;
                Editable=FALSE;
                GroupType=Repeater }

    { 1100528601;2;Field  ;
                SourceExpr="No." }

    { 1100528625;2;Field  ;
                SourceExpr=Description }

    { 1100528800;2;Field  ;
                SourceExpr="Bill-to Customer No." }

    { 1100528627;2;Field  ;
                SourceExpr="Bill-to Customer Name" }

    { 1100528629;2;Field  ;
                SourceExpr="Alternative Bill-to Address" }

    { 1100528603;2;Field  ;
                SourceExpr="Customer No." }

    { 1100528621;2;Field  ;
                SourceExpr="Customer Name" }

    { 1100528605;2;Field  ;
                SourceExpr="Service Contract No." }

    { 1100528602;2;Field  ;
                SourceExpr="Complex Code" }

    { 1100528607;2;Field  ;
                SourceExpr="Service Location No." }

    { 1210190000;2;Field  ;
                SourceExpr="Service Order No." }

    { 1100528609;2;Field  ;
                SourceExpr=Status }

    { 1100528611;2;Field  ;
                SourceExpr="Starting Date" }

    { 1100528613;2;Field  ;
                SourceExpr="Invoice Period" }

    { 1100525000;2;Field  ;
                SourceExpr="Ending Date" }

    { 1100528615;2;Field  ;
                SourceExpr="Minimal Invoice Amount" }

    { 1100528604;2;Field  ;
                SourceExpr="Invoice Layout Code" }

    { 1100528606;2;Field  ;
                SourceExpr="Customer Price Group" }

    { 1100528608;2;Field  ;
                SourceExpr="Collect SO Invoices By" }

    { 1100528610;2;Field  ;
                SourceExpr="Invoice Period (Coll. List)" }

    { 1100525001;2;Field  ;
                SourceExpr="Invoice Disc. Code" }

    { 1100525002;2;Field  ;
                SourceExpr="Created By" }

  }
  CODE
  {
    VAR
      ServiceOrder@1100528600 : Record 11012823;
      Text000@1100409000 : TextConst 'ENU=Service Order %1 is a Next Order. Collective List can only be created for Base Service Order %2.;NOR=Serviceordre %1 er en ''Neste ordre''. Samlingsfaktura kan kun opprettes for basisserviceordre %2.';
      CreateCollectiveListEnabled@1100525000 : Boolean INDATASET;

    PROCEDURE SetDefaults@1100528600(IServiceOrder@1100528600 : Record 11012823);
    BEGIN
      ServiceOrder := IServiceOrder;
    END;

    BEGIN
    END.
  }
}

