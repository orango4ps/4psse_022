OBJECT Page 11012067 Approve Invoices Subform
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               NOR=Rader;
               SVE=Rader];
    SaveValues=Yes;
    SourceTable=Table11012032;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             PurchaseVATEnabled := TRUE;
             TradeItemEnabled := TRUE;
             PlantEnabled := TRUE;
             InductionNoteEnabled := TRUE;
             InterestGranuleEnabled := TRUE;

             QuantityEditable := TRUE;
             CostTypeEditable := TRUE;
             ServiceOrderNoEditable := TRUE;
             ProjectNoEditable := TRUE;
             AccountNoEditable := TRUE;
             TypeEditable := TRUE;
             CostComponentEditable := TRUE;
             PlantTypeEditable := TRUE;
             CostComponentPlantEditable := TRUE;
             PlantNoEditable := TRUE;
             ReceivingCompanyEditable := TRUE;
             FAPostingTypeEditable := TRUE;
             FADataEditable := TRUE;
             ItemNoEditable := TRUE;
             TradeItemEditable := TRUE;
             LoanIsEditable := TRUE;
           END;

    OnOpenPage=VAR
                 lvInterestCalcMgtCU@1210190000 : Codeunit 11012049;
                 FPSLicenseManagement@1100527400 : Codeunit 11229289;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(ItemSetup) THEN
                   TradeItemEnabled := FALSE;

                 IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(PlantSetup) THEN BEGIN
                   PlantEnabled := FALSE;
                 END ELSE BEGIN
                   PlantSetup.GET;
                 END;

                 PurchSetup.GET;
                 IF NOT PurchSetup."Use Invoice Induction Note" THEN
                   InductionNoteEnabled := FALSE;

                 IF PurchSetup."VAT Indicator (Purchase)" = PurchSetup."VAT Indicator (Purchase)"::VAT THEN
                   PurchaseVATEnabled := FALSE;

                 IF NOT lvInterestCalcMgtCU.PermissionInterestGranule() THEN
                   InterestGranuleEnabled := FALSE;

                 IF JobsSetup.GET() THEN;
                 IF ServiceSetup.GET() THEN;

                 SetDimensionsVisibility;
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       ProjectDescrOtherCompany; //kkleermaker.n, 130902, C004024
                       CALCFIELDS(Balance);

                       IF gFromReference THEN BEGIN
                         gFromReference := FALSE;
                         SETRANGE("Line No.");
                       END;
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  //**4PS Generated Code. Do Not Change.sn02
                  DPA_SetDefaultDepartment;
                  //**4PS Generated Code.en02
                  CLEAR(ShortcutDimCode);
                  CALCFIELDS(Balance);
                  InitRecord;
                  GetVendorPreferenceAccountNo();
                  OnAfterGetCurrRecord;
                END;

    OnInsertRecord=BEGIN
                     TestStatusOpen;
                   END;

    OnModifyRecord=BEGIN
                     TestStatusOpen;
                   END;

    OnDeleteRecord=BEGIN
                     TestStatusOpen;
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 NOR=&Linje;
                                 SVE=Ra&d] }
      { 1907335104;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 NOR=Dimensjoner;
                                 SVE=Dimensioner];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1100529001;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 NOR=Artikkel&sporingsrader;
                                 SVE=&Artikelsp†rningsrader];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;  //C004829
                               END;
                                }
      { 1100529002;2 ;Action    ;
                      CaptionML=[ENU=Purchase Line Details;
                                 NOR=Bestillingslinje - detaljer;
                                 SVE=Ink”psradsdetaljer];
                      Image=ViewCheck;
                      OnAction=VAR
                                 PurchaseLineDetail@1100529000 : Record 11020660;
                               BEGIN
                                 //**4PS.n  //DP00749
                                 TESTFIELD("Receipt No.");
                                 PurchaseLineDetail.ShowDetailCardPurchInvLine("Receipt No.", "Receipt Line No.");
                               END;
                                }
      { 1905888704;2 ;Action    ;
                      CaptionML=[ENU=Purchase Route References;
                                 NOR=Referanser for innkj›psruter;
                                 SVE=Referenser f”r ink”psf”ljd];
                      Image=ContactReference;
                      OnAction=BEGIN
                                 //**4PS.n
                                 ShowPurchRouteRef;
                               END;
                                }
      { 1900772504;2 ;Action    ;
                      CaptionML=[ENU=Text Block;
                                 NOR=Tekstblokk;
                                 SVE=Textblock];
                      Image=Text;
                      OnAction=BEGIN
                                 EditText;
                               END;
                                }
      { 1100529601;2 ;Action    ;
                      Name=DeferralSchedule;
                      CaptionML=[ENU=Deferral Schedule;
                                 NOR=Tidsplan for periodisering;
                                 SVE=Periodiseringsschema];
                      ToolTipML=[ENU=View or edit the deferral schedule that governs how expenses incurred with this purchase document is deferred to different accounting periods when the document is posted.;
                                 NOR=Viser eller rediger tidsplanen for periodisering som styrer hvordan utgifter p†l›pte med dette salgsdokumentet, blir periodisert til ulike regnskapsperioder n†r dokumentet bokf›res.;
                                 SVE=Visa eller redigera periodiseringsschemat som styr hur utgifter som uppst†tt med det h„r ink”psdokumentet periodiseras till olika bokf”ringsperioder n„r dokumentet bokf”rs.];
                      ApplicationArea=#Suite;
                      Enabled="Deferral Code" <> '';
                      Image=PaymentPeriod;
                      OnAction=BEGIN
                                 ShowDeferrals;
                               END;
                                }
      { 1100528500;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NOR=Fu&nksjon;
                                 SVE=Fu&nktion];
                      Image=Action }
      { 1100528501;2 ;Action    ;
                      CaptionML=[ENU=Get Allo&cation;
                                 NOR=Hent Allo&kering;
                                 SVE=H„mta till&delning];
                      Description=4PS-Intern;
                      Image=Import;
                      OnAction=VAR
                                 PurchGetAllocation@1100527000 : Codeunit 11012048;
                               BEGIN
                                 //DP00951
                                 PurchGetAllocation.PurchaseApprovalLine(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1100528401;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100528200;2;Field  ;
                SourceExpr="Line Type";
                Visible=FALSE;
                OnValidate=BEGIN
                             StartFastDataEntryForm;
                           END;

                OnAssistEdit=BEGIN
                               StartFastDataEntryForm;
                             END;
                              }

    { 2   ;2   ;Field     ;
                SourceExpr="Receiving Company";
                Visible=FALSE;
                Editable=ReceivingCompanyEditable;
                OnValidate=BEGIN
                             ReceivingCompanyOnAfterValidat;
                           END;
                            }

    { 4   ;2   ;Field     ;
                SourceExpr="Project No.";
                Editable=ProjectNoEditable;
                OnValidate=BEGIN
                             IF "Project No." = '' THEN
                                "Account No." := '';
                               ProjectNoOnAfterValidate;
                             SetEditable;
                           END;

                OnLookup=BEGIN
                           LookupProjectNo();
                           SetEditable;
                         END;
                          }

    { 6   ;2   ;Field     ;
                DrillDown=No;
                SourceExpr="Project Description";
                Visible=FALSE }

    { 1210190036;2;Field  ;
                SourceExpr="Purchase Action";
                Visible=FALSE }

    { 1210190006;2;Field  ;
                SourceExpr="Induction Note No.";
                Enabled=InductionNoteEnabled }

    { 8   ;2   ;Field     ;
                SourceExpr="Extension Contract" }

    { 1100485010;2;Field  ;
                SourceExpr="Plot No.";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr=Element }

    { 1210190008;2;Field  ;
                SourceExpr="Service Order No.";
                Editable=ServiceOrderNoEditable;
                OnValidate=BEGIN
                             ServiceOrderNoOnAfterValidate;
                             SetEditable;
                           END;

                OnLookup=BEGIN
                           LookupServiceOrderNo();
                           CurrPage.UPDATE;
                         END;
                          }

    { 1100485012;2;Field  ;
                SourceExpr="Service Order Description";
                Visible=FALSE }

    { 1210190010;2;Field  ;
                SourceExpr="Service Contract No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190012;2;Field  ;
                SourceExpr="Service Location No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1100485004;2;Field  ;
                SourceExpr="Additional Cost (Service)";
                Visible=FALSE }

    { 1100485000;2;Field  ;
                SourceExpr="Rental Unit";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr="Cost Type";
                Editable=CostTypeEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 14  ;2   ;Field     ;
                SourceExpr="Item No.";
                Editable=ItemNoEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 16  ;2   ;Field     ;
                SourceExpr=Manufacturer;
                Visible=FALSE;
                Enabled=TradeItemenabled;
                Editable=TradeItemEditable }

    { 18  ;2   ;Field     ;
                SourceExpr="Basic Item";
                Visible=FALSE;
                Enabled=TradeItemenabled;
                Editable=TradeItemEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 20  ;2   ;Field     ;
                SourceExpr="Vendor (Trade Item)";
                Enabled=TradeItemenabled;
                Editable=TradeItemEditable }

    { 22  ;2   ;Field     ;
                SourceExpr="Trade Item";
                Enabled=TradeItemenabled;
                Editable=TradeItemEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100528400;2;Field  ;
                SourceExpr="Vendor Item No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190058;2;Field  ;
                SourceExpr="Tariff No.";
                Visible=FALSE }

    { 1100528800;2;Field  ;
                SourceExpr="Net Weight";
                Visible=FALSE }

    { 1210190018;2;Field  ;
                SourceExpr="Location Code";
                Visible=FALSE }

    { 1210190000;2;Field  ;
                SourceExpr="Plant Type";
                Enabled=PlantEnabled;
                Editable=PlantTypeEditable;
                OnValidate=BEGIN
                             PlantTypeOnAfterValidate;
                             SetEditable;
                           END;

                OnLookup=BEGIN
                           OnLookupPlantType(PlantTypeEditable);
                           SetEditable;
                         END;
                          }

    { 1210190002;2;Field  ;
                SourceExpr="Plant No.";
                Enabled=PlantEnabled;
                Editable=PlantNoEditable }

    { 1210190004;2;Field  ;
                SourceExpr="Cost Component Plant";
                Enabled=PlantEnabled;
                Editable=CostComponentPlantEditable }

    { 1100409001;2;Field  ;
                SourceExpr="Plant Location";
                Visible=FALSE }

    { 1100485090;2;Field  ;
                SourceExpr="Ext. Rented Plant Invoiced to";
                Enabled=PlantEnabled }

    { 1100485008;2;Field  ;
                CaptionML=[ENU=Prev. Ext.Rented Plant Inv. to;
                           NOR=Forrige Ekstern Utleid maskin, faktura til;
                           SVE=F”reg. Ext. uthyrd Maskin, faktura till];
                SourceExpr=Rec.PrevExtRentedPlantInvoicedTo();
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=DimVisible1;
                OnValidate=BEGIN
                             //**4PS Generated Code. Do Not Change.sn03
                             DPA_ChkDepartmentCodeAllowed(DPA_IsHardFilter);
                             //**4PS Generated Code.en03
                           END;

                OnLookup=VAR
                           LookupOK@1210190000 : Boolean;
                         BEGIN
                           // jhoek.300511
                           LookupOK := LookupShortcutDimension1Code(Text);
                           EXIT(LookupOK);
                         END;
                          }

    { 26  ;2   ;Field     ;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=DimVisible2;
                LookupPageID=Cost Object List;
                OnLookup=VAR
                           LookupOK@1210190000 : Boolean;
                         BEGIN
                           // jhoek.300511
                           LookupOK := LookupShortcutDimension2Code(Text);
                           EXIT(LookupOK);
                         END;
                          }

    { 1100485006;2;Field  ;
                SourceExpr="Cost Component";
                Editable=CostComponentEditable }

    { 1100529000;2;Field  ;
                SourceExpr="FSC Type Code";
                Visible=FALSE }

    { 1210190020;2;Field  ;
                SourceExpr=Type;
                Editable=TypeEditable;
                OnValidate=BEGIN
                             GetVendorPreferenceAccountNo();
                             SetEditable;
                           END;
                            }

    { 28  ;2   ;Field     ;
                SourceExpr="Account No.";
                Editable=AccountNoEditable }

    { 1210190038;2;Field  ;
                CaptionML=[ENU=Account Description;
                           NOR=Kontobeskrivelse;
                           SVE=Kontobeskrivning];
                SourceExpr=AccountDescription;
                Visible=FALSE;
                Editable=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr=Description }

    { 1210190040;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr="Text Block";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 36  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code" }

    { 38  ;2   ;Field     ;
                SourceExpr=Price;
                OnValidate=BEGIN
                             PriceOnAfterValidate;
                           END;
                            }

    { 40  ;2   ;Field     ;
                SourceExpr=Amount;
                OnValidate=BEGIN
                             AmountOnAfterValidate;
                           END;
                            }

    { 1100485014;2;Field  ;
                SourceExpr="Sales Price";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                SourceExpr="Posting Date" }

    { 1210190024;2;Field  ;
                SourceExpr="Insurance No.";
                Visible=FALSE;
                Editable=FADataEditable }

    { 1210190026;2;Field  ;
                SourceExpr="Budgeted FA No.";
                Visible=FALSE;
                Editable=FADataEditable }

    { 1210190028;2;Field  ;
                SourceExpr="FA Posting Type";
                Visible=FALSE;
                Editable=FAPostingTypeEditable }

    { 1210190030;2;Field  ;
                SourceExpr="Depreciation Book Code";
                Visible=FALSE;
                Editable=FADataEditable }

    { 1210190032;2;Field  ;
                SourceExpr="Depr. until FA Posting Date";
                Visible=FALSE }

    { 1210190034;2;Field  ;
                SourceExpr="Depr. Acquisition Cost";
                Visible=FALSE }

    { 1210190042;2;Field  ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                Visible=DimVisible3;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                         END;
                          }

    { 1210190044;2;Field  ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                Visible=DimVisible4;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                         END;
                          }

    { 1210190048;2;Field  ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                Visible=DimVisible5;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(5,ShortcutDimCode[5]);
                         END;
                          }

    { 1210190052;2;Field  ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                Visible=DimVisible6;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                         END;
                          }

    { 1210190050;2;Field  ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                Visible=DimVisible7;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                         END;
                          }

    { 1210190046;2;Field  ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                Visible=DimVisible8;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                         END;
                          }

    { 1210190056;2;Field  ;
                SourceExpr="Purchase Route Reference";
                Visible=FALSE }

    { 1210190054;2;Field  ;
                SourceExpr="Interest Date";
                Enabled=InterestGranuleEnabled }

    { 1100525004;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Enabled=PurchaseVATEnabled }

    { 1100525000;2;Field  ;
                SourceExpr="VAT Prod. Posting Group";
                Enabled=PurchaseVATEnabled }

    { 1100525002;2;Field  ;
                SourceExpr="Amount Including VAT";
                Enabled=PurchaseVATEnabled }

    { 1100525006;2;Field  ;
                SourceExpr="Entity Type";
                Visible=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="System No.";
                Visible=FALSE }

    { 1100525010;2;Field  ;
                SourceExpr="Entity No.";
                Visible=FALSE }

    { 1100525012;2;Field  ;
                SourceExpr="Gland Position";
                Visible=FALSE }

    { 1100528600;2;Field  ;
                SourceExpr="Expense Allowance Scheme";
                Visible=FALSE }

    { 1100529600;2;Field  ;
                SourceExpr="Deferral Code";
                Visible=FALSE }

    { 3   ;2   ;Field     ;
                SourceExpr="Periodic Template Code" }

    { 5   ;2   ;Field     ;
                SourceExpr="Periodic Starting Date" }

    { 1100528502;2;Field  ;
                SourceExpr="Loan Code";
                Visible=FALSE;
                Editable=LoanIsEditable;
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1100528503;2;Field  ;
                SourceExpr="Loan Type";
                Visible=FALSE;
                Editable=LoanIsEditable }

    { 1100528201;2;Field  ;
                SourceExpr="On Hold";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      JobsSetup@1100525004 : Record 315;
      ServiceSetup@1100525000 : Record 11012800;
      ItemSetup@1100525003 : Record 11012300;
      PlantSetup@1210190000 : Record 11012550;
      PurchSetup@1210190002 : Record 312;
      PurchInvHeader@1210190001 : Record 122;
      PurchCredMemoHeader@1210190003 : Record 124;
      RouteRefMgtCU@1210190008 : Codeunit 11012045;
      ShortcutDimCode@1210190007 : ARRAY [8] OF Code[20];
      AmountsOnly@1210190004 : Boolean;
      gFromReference@1210190009 : Boolean;
      BalanceDue@1210190006 : Decimal;
      Text11012001@1100485000 : TextConst 'ENU=Before editing text enter the line first;NOR=Velg rad f›r du redigerer tekst.;SVE=V„lj rad innan du redigerar text.';
      TradeItemEnabled@19042429 : Boolean INDATASET;
      PlantEnabled@19062317 : Boolean INDATASET;
      InductionNoteEnabled@19071384 : Boolean INDATASET;
      PurchaseVATEnabled@19037274 : Boolean INDATASET;
      InterestGranuleEnabled@19062137 : Boolean INDATASET;
      ReceivingCompanyEditable@1100525510 : Boolean INDATASET;
      QuantityEditable@1100525500 : Boolean INDATASET;
      CostTypeEditable@1100525501 : Boolean INDATASET;
      ServiceOrderNoEditable@1100525502 : Boolean INDATASET;
      ProjectNoEditable@1100525503 : Boolean INDATASET;
      AccountNoEditable@1100525504 : Boolean INDATASET;
      TypeEditable@1100525505 : Boolean INDATASET;
      CostComponentEditable@1100525506 : Boolean INDATASET;
      PlantTypeEditable@1100525508 : Boolean INDATASET;
      CostComponentPlantEditable@1100525507 : Boolean INDATASET;
      PlantNoEditable@1100525509 : Boolean INDATASET;
      FAPostingTypeEditable@1100525511 : Boolean INDATASET;
      ItemNoEditable@1100525512 : Boolean INDATASET;
      TradeItemEditable@1100525513 : Boolean INDATASET;
      FADataEditable@1100525514 : Boolean INDATASET;
      LoanIsEditable@1100528500 : Boolean INDATASET;
      DPA_IsHardFilter@1210190005 : Boolean;
      DimVisible1@1100525010 : Boolean;
      DimVisible2@1100525009 : Boolean;
      DimVisible3@1100525008 : Boolean;
      DimVisible4@1100525007 : Boolean;
      DimVisible5@1100525006 : Boolean;
      DimVisible6@1100525005 : Boolean;
      DimVisible7@1100525002 : Boolean;
      DimVisible8@1100525001 : Boolean;

    PROCEDURE GetReceipt@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Get Receipt Inv.Approv.",Rec);
    END;

    PROCEDURE Post@2(PrintBool@1210190001 : Boolean;BatchBool@1210190000 : Boolean);
    VAR
      lInvHeaderRec@1100485001 : Record 122;
      lCrMemoHeaderRec@1100485000 : Record 124;
      lvPostInvApprovalCU@1100525000 : Codeunit 11012027;
      rPurchaseInvoice@1100485002 : Report 11020213;
      rCreditMemo@1100485003 : Report 11020214;
    BEGIN
      IF BatchBool THEN BEGIN
        IF "Document Type" = "Document Type"::"Purchase Invoice" THEN BEGIN
          lInvHeaderRec.GET("Document No.");
          IF NOT lInvHeaderRec.PostingAllowedInDMSStatus THEN
            lInvHeaderRec.FIELDERROR("DMS Status");
          lInvHeaderRec.SETRANGE("Journal Template",lInvHeaderRec."Journal Template");
          lInvHeaderRec.SETRANGE("Invoice Approved",FALSE);
          rPurchaseInvoice.SetPrint(PrintBool);
          rPurchaseInvoice.SETTABLEVIEW(lInvHeaderRec);
          rPurchaseInvoice.RUNMODAL;
        END ELSE BEGIN
          lCrMemoHeaderRec.GET("Document No.");
          IF NOT lCrMemoHeaderRec.PostingAllowedInDMSStatus THEN
            lCrMemoHeaderRec.FIELDERROR("DMS Status");
          lCrMemoHeaderRec.SETRANGE("Journal Template",lCrMemoHeaderRec."Journal Template");
          lCrMemoHeaderRec.SETRANGE("Credit Memo Approved",FALSE);
          rCreditMemo.SetPrint(PrintBool);
          rCreditMemo.SETTABLEVIEW(lCrMemoHeaderRec);
          rCreditMemo.RUNMODAL;
        END;
      END ELSE BEGIN
        // jhoek.190511.begin
        CASE "Document Type" OF
          "Document Type"::"Purchase Invoice":
            BEGIN
              lInvHeaderRec.GET("Document No.");
              lInvHeaderRec.AddToDMSWorkFlow();
              IF NOT lInvHeaderRec.PostingAllowedInDMSStatus THEN
                lInvHeaderRec.FIELDERROR("DMS Status");
            END;
          "Document Type"::"Credit Memo":
            BEGIN
              lCrMemoHeaderRec.GET("Document No.");
              lCrMemoHeaderRec.AddToDMSWorkFlow();
              IF NOT lCrMemoHeaderRec.PostingAllowedInDMSStatus THEN
                lCrMemoHeaderRec.FIELDERROR("DMS Status");
            END;
        END;
        // jhoek.190511.end
        lvPostInvApprovalCU.Post(Rec,PrintBool);
      END;
    END;

    PROCEDURE ShowDimensions@10();
    BEGIN
      Rec.ShowDimensions;
    END;

    PROCEDURE GetHeader@1000000005();
    BEGIN
      IF "Document Type" = "Document Type"::"Purchase Invoice" THEN BEGIN
        PurchInvHeader.GET("Document No.");
        AmountsOnly := PurchInvHeader."Amounts only";
        PurchInvHeader.CALCFIELDS("Balance Due");
        BalanceDue := PurchInvHeader."Balance Due";
      END ELSE BEGIN
        PurchCredMemoHeader.GET("Document No.");
        AmountsOnly := PurchCredMemoHeader."Amounts only";
        PurchCredMemoHeader.CALCFIELDS("Balance Due");
        BalanceDue := PurchCredMemoHeader."Balance Due";
      END;
    END;

    PROCEDURE ShowPurchRouteRef@1210190004();
    BEGIN
      RouteRefMgtCU.ShowReferenceList("Purchase Route Reference");
    END;

    PROCEDURE InitSelectionFromReference@1210190008(IApprLineNo@1210190000 : Integer);
    BEGIN
      gFromReference := TRUE;
      SETRANGE("Line No.", IApprLineNo);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE EditText@1210190001();
    VAR
      TextFrm@11012001 : Page 11012120;
    BEGIN
      IF "Line No." = 0 THEN
        ERROR(Text11012001);

      TextFrm.SetSelection(DATABASE::"Invoice Approval Line","Journal Template Name","Document No.",
        '','','','',"Line No.","Document Type");

      TextFrm.RUNMODAL;
      CLEAR(TextFrm);
    END;

    LOCAL PROCEDURE ReceivingCompanyOnAfterValidat@19023184();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ProjectNoOnAfterValidate@19041008();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ServiceOrderNoOnAfterValidate@19042308();
    BEGIN
      CurrPage.UPDATE;  // Also needed for update dimensions in dimensions bij line
    END;

    LOCAL PROCEDURE PlantTypeOnAfterValidate@19013868();
    BEGIN
      IF ("Plant Type" <> '') AND ("Line No." = 0) THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PriceOnAfterValidate@19065147();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE AmountOnAfterValidate@19024931();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      IF "Document No." <> '' THEN
        GetHeader;
      SetEditable;
    END;

    PROCEDURE SetEditable@1100525011();
    BEGIN
      IF "Document No." <> '' THEN
        GetHeader;

      QuantityEditable := NOT AmountsOnly;

      CostTypeEditable := "Item No." + "Basic Item" + "Trade Item" = '';
      ServiceOrderNoEditable :=
        ("Plant Type" = '') AND
        (Type <> Type::"Fixed Asset") AND
        ("Loan Code" = '');

      ProjectNoEditable :=
        ("Plant Type" = '') AND
        ("Service Order No." = '') AND
        (Type <> Type::"Fixed Asset") AND
        ("Loan Code" = '');

      AccountNoEditable :=
        ("Plant Type" = '') AND
        ("Project No." = '') AND
        ("Service Order No." = '') AND
        ("Item No." ='')AND
        ("Loan Code" = '');

      TypeEditable :=
        ("Project No." = '') AND
        ("Service Order No." = '') AND
        ("Item No." = '') AND
        ("Plant Type" = '');

      CostComponentEditable :=
        (("Project No." <> '') AND JobsSetup."Cost Component Editable") OR
        (("Service Order No." <> '') AND ServiceSetup."Cost Component Editable") OR
        (("Project No." = '') AND ("Service Order No." = ''));

      PlantTypeEditable :=
        ("Project No." = '') AND
        ("Service Order No." = '')AND
        ("Loan Code" = '');

      LoanIsEditable :=
        ("Plant Type" = '') AND
        ("Service Order No." = '') AND
        ("Project No." = '');

      CostComponentPlantEditable := ("Plant Type" <> '') AND PlantTypeEditable;
      PlantNoEditable := ("Plant Type" <> '') AND PlantTypeEditable;

      ReceivingCompanyEditable := (Type <> Type::"Fixed Asset");

      FAPostingTypeEditable := ("Plant Type" = '') AND (Type = Type::"Fixed Asset");
      FADataEditable := (Type = Type::"Fixed Asset");

      ItemNoEditable :=
        (("Cost Type" = "Cost Type"::Material) OR ("Cost Type" = "Cost Type"::" ")) AND
        (Type <> Type::"Fixed Asset");

      TradeItemEditable := ("Cost Type" = "Cost Type"::Material) OR ("Cost Type" = "Cost Type"::" ");
    END;

    PROCEDURE OpenItemTrackingLines@6500();
    BEGIN
      //*C004829
      Rec.OpenItemTrackingLines;
    END;

    PROCEDURE StartFastDataEntryForm@1100528800();
    VAR
      InvoiceApprovalLine@1100525000 : Record 11012032;
      FastDataEntryPage@1100525002 : Page 11126495;
    BEGIN
      IF "Line Type" ='' THEN
        EXIT;

      CurrPage.SAVERECORD;
      COMMIT;

      InvoiceApprovalLine := Rec;
      InvoiceApprovalLine.SETRECFILTER;
      InvoiceApprovalLine.SETRANGE("Line Type", "Line Type");
      FastDataEntryPage.SETTABLEVIEW(InvoiceApprovalLine);
      FastDataEntryPage.LOOKUPMODE := FALSE;
      FastDataEntryPage.SETRECORD(InvoiceApprovalLine);
      FastDataEntryPage.RUNMODAL;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetDimensionsVisibility@1100525000();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimVisible1 := FALSE;
      DimVisible2 := FALSE;
      DimVisible3 := FALSE;
      DimVisible4 := FALSE;
      DimVisible5 := FALSE;
      DimVisible6 := FALSE;
      DimVisible7 := FALSE;
      DimVisible8 := FALSE;

      DimMgt.UseShortcutDims(
        DimVisible1,DimVisible2,DimVisible3,DimVisible4,DimVisible5,DimVisible6,DimVisible7,DimVisible8);
    END;

    BEGIN
    END.
  }
}

