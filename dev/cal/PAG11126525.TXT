OBJECT Page 11126525 Project Forecast Rev Matrix
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Project Forecast;
               NOR=Prosjektprognose;
               SVE=Projektprognos];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11020630;
    DataCaptionExpr=GetDataCaption;
    PageType=ListPlus;
    OnOpenPage=BEGIN
                 MATRIX_MaximumSetLength := 12;
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                 UpdateMatrixSubForm;
               END;

    ActionList=ACTIONS
    {
      { 1100528701;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528707;1 ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 NOR=Forrige sett;
                                 SVE=FîregÜende uppsÑttning];
                      ToolTipML=[ENU=Previous Set;
                                 NOR=Forrige sett;
                                 SVE=FîregÜende uppsÑttning];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Previous);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528706;1 ;Action    ;
                      CaptionML=[ENU=Previous Column;
                                 NOR=Forrige kolonne;
                                 SVE=FîregÜende kolumn];
                      ToolTipML=[ENU=Previous Column;
                                 NOR=Forrige kolonne;
                                 SVE=FîregÜende kolumn];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::PreviousColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528705;1 ;Action    ;
                      CaptionML=[ENU=Next Column;
                                 NOR=Neste kolonne;
                                 SVE=NÑsta kolumn];
                      ToolTipML=[ENU=Next Column;
                                 NOR=Neste kolonne;
                                 SVE=NÑsta kolumn];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::NextColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1100528704;1 ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 NOR=Neste Sett;
                                 SVE=NÑsta uppsÑttning];
                      ToolTipML=[ENU=Next Set;
                                 NOR=Neste Sett;
                                 SVE=NÑsta uppsÑttning];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Next);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 1000000001;1 ;Action    ;
                      Name=FillFromLastprognosis;
                      CaptionML=[ENU=Get latest prognosis;
                                 SVE=HÑmta senast prognos fîrdelad.];
                      Promoted=Yes;
                      Image=PlanningWorksheet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ProjectForecastinPeriod@1101285000 : Record 11020632;
                                 Text001@1101285001 : TextConst 'ENU=Copy previous forecast?;SVE=Vill du kopiera senast prognos fîrdelad per mÜnad?';
                                 ProjectForecastinPeriod2@1101285002 : Record 11020632;
                                 ProjectForecastLine@1101285003 : Record 11020631;
                                 ProjectForecastHeader2@1000000000 : Record 11020630;
                                 datFirstDayOfMonth@1000000001 : Date;
                                 PreviousMonth@1000000002 : Date;
                               BEGIN
                                 //>>4PSSE 190328
                                 IF NOT CONFIRM(Text001, TRUE) THEN
                                   EXIT;

                                 datFirstDayOfMonth := DMY2DATE(1,DATE2DMY(Rec."Forecast Date",2),DATE2DMY(Rec."Forecast Date",3));
                                 PreviousMonth := CALCDATE('<-1M>', datFirstDayOfMonth);

                                 ProjectForecastLine.SETRANGE("Project No.", Rec."Project No.");
                                 ProjectForecastLine.SETRANGE("Forecast Date", Rec."Forecast Date");
                                 IF ProjectForecastLine.FINDSET(TRUE) THEN BEGIN
                                   ProjectForecastinPeriod.SETRANGE("Project No.", ProjectForecastLine."Project No.");
                                   ProjectForecastinPeriod.SETRANGE("Forecast Date", ProjectForecastLine."Forecast Date");
                                   ProjectForecastinPeriod.SETRANGE("Cost Type", ProjectForecastinPeriod."Cost Type"::Revenue);
                                   ProjectForecastinPeriod.SETRANGE(Source, ProjectForecastinPeriod.Source::Forecast);
                                   ProjectForecastinPeriod.DELETEALL(TRUE);
                                   REPEAT
                                     ProjectForecastHeader2.SETRANGE("Project No.", Rec."Project No.");
                                     ProjectForecastHeader2.SETFILTER("Forecast Date", '<%1', Rec."Forecast Date");
                                     IF ProjectForecastHeader2.FINDLAST THEN BEGIN
                                       ProjectForecastinPeriod2.SETRANGE("Cost Type", ProjectForecastinPeriod2."Cost Type"::Revenue);
                                       ProjectForecastinPeriod2.SETRANGE("Project No.", ProjectForecastHeader2."Project No.");
                                       ProjectForecastinPeriod2.SETRANGE("Forecast Date", ProjectForecastHeader2."Forecast Date");
                                       ProjectForecastinPeriod2.SETFILTER(Date, '>%1', PreviousMonth);
                                       IF ProjectForecastinPeriod2.FINDSET THEN REPEAT
                                         ProjectForecastinPeriod."Line No." := ProjectForecastinPeriod2."Line No.";
                                         ProjectForecastinPeriod.Element := ProjectForecastinPeriod2.Element;
                                         ProjectForecastinPeriod."Currency Code" := ProjectForecastinPeriod2."Currency Code";
                                         ProjectForecastinPeriod."Project No." := ProjectForecastinPeriod2."Project No.";
                                         ProjectForecastinPeriod."Forecast Date" := Rec."Forecast Date";
                                         ProjectForecastinPeriod."Cost Type" := ProjectForecastinPeriod2."Cost Type";
                                         ProjectForecastinPeriod."Cost Object" := ProjectForecastinPeriod2."Cost Object";
                                         ProjectForecastinPeriod.Date := ProjectForecastinPeriod2.Date;
                                         ProjectForecastinPeriod.Quantity := ProjectForecastinPeriod2.Quantity;
                                         ProjectForecastinPeriod.Price := ProjectForecastinPeriod2.Price;
                                         ProjectForecastinPeriod.Amount := ProjectForecastinPeriod2.Amount;
                                        IF NOT ProjectForecastinPeriod.INSERT THEN
                                           ProjectForecastinPeriod.MODIFY;
                                       UNTIL ProjectForecastinPeriod2.NEXT = 0;
                                     END;
                                  UNTIL ProjectForecastLine.NEXT = 0;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528703;;Container;
                ContainerType=ContentArea }

    { 1100528729;1;Group  ;
                CaptionML=[ENU=Matrix Options;
                           NOR=Matrisealternativer;
                           SVE=Matrisalternativ];
                GroupType=Group }

    { 1100528727;2;Field  ;
                CaptionML=[ENU=View by;
                           NOR=Vis per;
                           SVE=Visa per];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 NOR=Dag,Uke,MÜned,Kvartal,èr,bokfõringsperiode;
                                 SVE=Dag,Vecka,MÜnad,Kvartal,èr,Bokfîringsperiod];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                             UpdateMatrixSubForm;
                           END;
                            }

    { 1100528700;1;Part   ;
                Name=MATRIX;
                SubPageLink=Project No.=FIELD(Project No.),
                            Forecast Date=FIELD(Forecast Date),
                            Cost Type=FIELD(Cost Type Filter);
                PagePartID=Page11124948;
                PartType=Page }

    { 1100529401;0;Container;
                ContainerType=FactBoxArea }

    { 1100529400;1;Part   ;
                SubPageLink=Project No.=FIELD(Project No.),
                            Forecast Date=FIELD(Forecast Date),
                            Cost Type=FIELD(Cost Type),
                            Cost Object=FIELD(Cost Object),
                            Element=FIELD(Element),
                            Currency Code=FIELD(Currency Code);
                PagePartID=Page11126663;
                ProviderID=1100528700;
                PartType=Page }

  }
  CODE
  {
    VAR
      MATRIX_MatrixRecords@1100528707 : ARRAY [32] OF Record 2000000007;
      MATRIX_MaximumSetLength@1100528706 : Integer;
      MATRIX_PrimKeyRecInCurrSet@1100528705 : Text[1024];
      MATRIX_CaptionSet@1100528704 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1100528703 : Text[250];
      MATRIX_CurrSetLength@1100528702 : Integer;
      MATRIX_Step@1100528701 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn,,,,,FirstRec,LastRec';
      PeriodType@1100528709 : 'Day,Week,Month,Quarter,Year,Accounting Period';

    LOCAL PROCEDURE MATRIX_GenerateColumnCaptions@1152(MATRIX_SetWanted@1000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn');
    VAR
      MatrixManagement@1002 : Codeunit 9200;
      DateFilter@1100525000 : Text;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MATRIX_MatrixRecords);

      // Do not work since rollup 10
      //IF "Forecast Date" <> 0D THEN
      //  DateFilter := STRSUBSTNO('%1..', GetPeriodStartDate("Forecast Date", PeriodType));
      DateFilter := GetDateFilterMatrix("Forecast Date",PeriodType);

      MatrixManagement.GeneratePeriodMatrixData(
        MATRIX_SetWanted,
        MATRIX_MaximumSetLength,
        FALSE, // UseNameForCaption
        PeriodType,
        DateFilter, // DateFilter
        MATRIX_PrimKeyRecInCurrSet,
        MATRIX_CaptionSet,
        MATRIX_CaptionRange,
        MATRIX_CurrSetLength,
        MATRIX_MatrixRecords);
    END;

    LOCAL PROCEDURE UpdateMatrixSubForm@7();
    BEGIN
      CurrPage.MATRIX.PAGE.Load(
        MATRIX_CaptionSet,
        MATRIX_MatrixRecords,
        MATRIX_CurrSetLength,
        PeriodType
      );

      CurrPage.MATRIX.PAGE.SetCurrencyCodeEditable("Forecast by Currency"); //**4PS.n BI042 KD 28-12-16

      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetPeriodType@1100528702(Value@1100528700 : Option);
    BEGIN
      PeriodType := Value;
    END;

    PROCEDURE GetDataCaption@1100528701() : Text;
    BEGIN
      EXIT(GETFILTER("Cost Type Filter"));
    END;

    BEGIN
    {
      4PS 26-08-16 UKR-C26352 KD: Foreign currency in the forecast (BI042) - added FactBoxArea
      4PSSE 190328 Get latest forecast to help fill in deviation
    }
    END.
  }
}

