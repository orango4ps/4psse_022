OBJECT Table 11126149 External Plant Rent Invoice
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               PlantSetup.GET;
               PlantSetup.TESTFIELD("Ext. Plant Rental Invoicing", TRUE);
             END;

    OnModify=BEGIN
               TESTFIELD(Status, Status::Open);
             END;

    OnDelete=VAR
               ExtPlantRentInvoiceLine@1100529000 : Record 11126150;
             BEGIN
               IF Status <> Status::Processed THEN
                 TESTFIELD(Status, Status::Open);
               ExtPlantRentInvoiceLine.SETRANGE("Vendor No.", "Vendor No.");
               ExtPlantRentInvoiceLine.SETRANGE("External Invoice No.", "External Invoice No.");
               ExtPlantRentInvoiceLine.DELETEALL(Status <> Status::Processed);
             END;

    CaptionML=ENU=External Plant Rent Invoice;
  }
  FIELDS
  {
    { 10  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Vendor Name");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Vendor No.;
                                                              SVE=Leverant”rsnr];
                                                   Editable=No }
    { 11  ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              SVE=Leverant”rsnamn];
                                                   Editable=No }
    { 20  ;   ;External Invoice No.;Code20        ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=External Invoice No.;
                                                   Editable=No }
    { 30  ;   ;Invoice Date        ;Date          ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Invoice Date;
                                                              SVE=Fakturadatum] }
    { 40  ;   ;Status              ;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[ENU=Open,Released,Processed;
                                                                    SVE=™ppen,Sl„ppt,Behandlad];
                                                   OptionString=Open,Released,Processed;
                                                   Editable=No }
    { 50  ;   ;No. of Lines        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Ext. Plant Rent Invoice Line" WHERE (Vendor No.=FIELD(Vendor No.),
                                                                                                           External Invoice No.=FIELD(External Invoice No.)));
                                                   CaptionML=[ENU=No. of Lines;
                                                              SVE=Antal rader];
                                                   Editable=No }
    { 60  ;   ;No. of Lines - Not Invoiced;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("Ext. Plant Rent Invoice Line" WHERE (Vendor No.=FIELD(Vendor No.),
                                                                                                           External Invoice No.=FIELD(External Invoice No.),
                                                                                                           Invoiced (Sales)=CONST(No)));
                                                   CaptionML=ENU=No. of Lines - Not Invoiced;
                                                   Editable=No }
    { 61  ;   ;No. of Lines - Inv. Proposal;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Ext. Plant Rent Invoice Line" WHERE (Vendor No.=FIELD(Vendor No.),
                                                                                                           External Invoice No.=FIELD(External Invoice No.),
                                                                                                           Invoiced (Sales)=CONST(Yes),
                                                                                                           Sales Invoice Status=CONST(Proposal)));
                                                   CaptionML=ENU=No. of Lines - Inv. Proposal;
                                                   Editable=No }
    { 62  ;   ;No. of Lines - Invoice;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Ext. Plant Rent Invoice Line" WHERE (Vendor No.=FIELD(Vendor No.),
                                                                                                           External Invoice No.=FIELD(External Invoice No.),
                                                                                                           Invoiced (Sales)=CONST(Yes),
                                                                                                           Sales Invoice Status=CONST(Temporary)));
                                                   CaptionML=ENU=No. of Lines - Invoice;
                                                   Editable=No }
    { 63  ;   ;No. of Lines - Posted Invoice;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Ext. Plant Rent Invoice Line" WHERE (Vendor No.=FIELD(Vendor No.),
                                                                                                           External Invoice No.=FIELD(External Invoice No.),
                                                                                                           Invoiced (Sales)=CONST(Yes),
                                                                                                           Sales Invoice Status=CONST(Posted)));
                                                   CaptionML=ENU=No. of Lines - Posted Invoice;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Vendor No.,External Invoice No.         ;Clustered=Yes }
    {    ;Status                                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PlantSetup@1100529000 : Record 11012550;
      Text001@1100529001 : TextConst 'ENU=All existing lines are already definitively invoiced, status is set to ''%1''';
      Text002@1100529002 : TextConst 'ENU=Reopen not allowed, all lines are already invoiced';

    PROCEDURE ReleaseExtRentInvoice@1100529000(ExternalPlantRentInvoice2@1100529000 : Record 11126149);
    VAR
      ExternalPlantRentInvoice@1100529001 : Record 11126149;
      ExtPlantRentInvoiceLine@1100529002 : Record 11126150;
    BEGIN
      ExternalPlantRentInvoice.COPY(ExternalPlantRentInvoice2);
      ExternalPlantRentInvoice.TESTFIELD(Status, Status::Open);
      ExternalPlantRentInvoice.TESTFIELD("Vendor No.");
      ExternalPlantRentInvoice.TESTFIELD("Invoice Date");

      ExtPlantRentInvoiceLine.SETRANGE("Vendor No.", ExternalPlantRentInvoice."Vendor No.");
      ExtPlantRentInvoiceLine.SETRANGE("External Invoice No.", ExternalPlantRentInvoice."External Invoice No.");
      ExtPlantRentInvoiceLine.FINDSET;  // Must be line(s)

      IF ExtPlantRentInvoiceCompletelyProcessed(ExternalPlantRentInvoice."Vendor No.", ExternalPlantRentInvoice."External Invoice No.") THEN BEGIN
        ExternalPlantRentInvoice.GET(ExternalPlantRentInvoice."Vendor No.", ExternalPlantRentInvoice."External Invoice No.");
        MESSAGE(Text001, ExternalPlantRentInvoice2.Status);
        EXIT;
      END;

      ExtPlantRentInvoiceLine.RESET;
      ExtPlantRentInvoiceLine.SETRANGE("Vendor No.", ExternalPlantRentInvoice."Vendor No.");
      ExtPlantRentInvoiceLine.SETRANGE("External Invoice No.", ExternalPlantRentInvoice."External Invoice No.");
      ExtPlantRentInvoiceLine.SETRANGE("Invoiced (Sales)", FALSE);
      IF ExtPlantRentInvoiceLine.FINDSET THEN BEGIN
        REPEAT
          CheckLineOnRelease(ExtPlantRentInvoiceLine);
        UNTIL ExtPlantRentInvoiceLine.NEXT = 0;
      END;
      ExternalPlantRentInvoice.Status := Status::Released;
      ExternalPlantRentInvoice.MODIFY(FALSE);
    END;

    LOCAL PROCEDURE CheckLineOnRelease@1100529002(ExtPlantRentInvoiceLine@1100529000 : Record 11126150);
    VAR
      PlantType@1100529005 : Record 11012551;
      PlantNumber@1100529004 : Record 11012552;
      PlantLocation@1100529003 : Record 11012554;
      Project@1100529002 : Record 11072003;
      UnitOfMeasure@1100529006 : Record 204;
      PlantElementMgt@1100529001 : Codeunit 11012582;
    BEGIN
      ExtPlantRentInvoiceLine.TESTFIELD("Plant Type");
      ExtPlantRentInvoiceLine.TESTFIELD("Plant No.");
      ExtPlantRentInvoiceLine.TESTFIELD("From Date");
      ExtPlantRentInvoiceLine.TESTFIELD("Until Date");
      ExtPlantRentInvoiceLine.TESTFIELD("Plant Location");
      ExtPlantRentInvoiceLine.TESTFIELD(Amount);
      ExtPlantRentInvoiceLine.TESTFIELD("Time Unit");

      PlantType.GET(ExtPlantRentInvoiceLine."Plant Type");
      PlantType.TESTFIELD("Ext. Plant Rental Invoicing", TRUE);
      PlantNumber.GET(ExtPlantRentInvoiceLine."Plant Type", ExtPlantRentInvoiceLine."Plant No.");
      PlantNumber.TESTFIELD(External, TRUE);
      PlantNumber.TESTFIELD(Vendor, "Vendor No.");
      IF ExtPlantRentInvoiceLine."Purchase Order No." <> '' THEN
        PlantNumber.TESTFIELD("Purchase Order No.", ExtPlantRentInvoiceLine."Purchase Order No.");
      PlantLocation.GET(ExtPlantRentInvoiceLine."Plant Location");
      PlantLocation.TESTFIELD(Depot, FALSE);
      PlantLocation.CheckBlock(1, TRUE, FALSE);
      IF PlantLocation."Project No." <> '' THEN BEGIN
        IF ExtPlantRentInvoiceLine.Element <> '' THEN
          PlantElementMgt.OnValidateElement(ExtPlantRentInvoiceLine."Plant Location", ExtPlantRentInvoiceLine.Element, '', FALSE)
        ELSE BEGIN
          PlantSetup.GET;
          IF PlantSetup."Plant - Element Mandatory" THEN BEGIN
            IF PlantLocation."Company Name" <> '' THEN
              Project.CHANGECOMPANY(PlantLocation."Company Name");
            IF Project.GET(PlantLocation."Project No.") THEN BEGIN
              IF Project."Posting Element Mandatory" THEN
                ExtPlantRentInvoiceLine.TESTFIELD(Element);
            END;
          END;
        END;
      END;
      UnitOfMeasure.GET(ExtPlantRentInvoiceLine."Time Unit");
    END;

    PROCEDURE ReopenExtRentInvoice@1100529001(Rec1@1100529000 : Record 11126149);
    VAR
      ExternalPlantRentInvoice@1100529001 : Record 11126149;
      ExtPlantRentInvoiceLine@1100529002 : Record 11126150;
    BEGIN
      ExternalPlantRentInvoice.COPY(Rec);
      ExternalPlantRentInvoice.TESTFIELD(Status, Status::Released);

      ExtPlantRentInvoiceLine.SETRANGE("Vendor No.", ExternalPlantRentInvoice."Vendor No.");
      ExtPlantRentInvoiceLine.SETRANGE("External Invoice No.", ExternalPlantRentInvoice."External Invoice No.");
      IF NOT ExtPlantRentInvoiceLine.ISEMPTY THEN BEGIN
        ExtPlantRentInvoiceLine.SETRANGE("Invoiced (Sales)", FALSE);
        IF ExtPlantRentInvoiceLine.ISEMPTY THEN
          ERROR(Text002);
      END;
      ExternalPlantRentInvoice.Status := Status::Open;
      ExternalPlantRentInvoice.MODIFY(FALSE);
    END;

    PROCEDURE ExtPlantRentInvoiceCompletelyProcessed@1100529005(VendorNo@1100529000 : Code[20];ExternalInvoiceNo@1100529003 : Code[20]) : Boolean;
    VAR
      ExternalPlantRentInvoice@1100529001 : Record 11126149;
      ExtPlantRentInvoiceLine@1100529002 : Record 11126150;
    BEGIN
      ExtPlantRentInvoiceLine.SETRANGE("Vendor No.", VendorNo);
      ExtPlantRentInvoiceLine.SETRANGE("External Invoice No.", ExternalInvoiceNo);
      ExtPlantRentInvoiceLine.SETFILTER("Sales Invoice Status", '<>%1', ExtPlantRentInvoiceLine."Sales Invoice Status"::Posted);
      IF ExtPlantRentInvoiceLine.ISEMPTY THEN BEGIN
        ExternalPlantRentInvoice.GET(VendorNo, ExternalInvoiceNo);
        ExternalPlantRentInvoice.Status := ExternalPlantRentInvoice.Status::Processed;
        ExternalPlantRentInvoice.MODIFY(FALSE);
        EXIT(TRUE);
      END;
      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

