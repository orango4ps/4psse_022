OBJECT Page 5784 Filters to Get Source Docs.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Filters to Get Source Docs.;
               NOR=Filtre for henting av kildedok;
               SVE=Filter att h„mta ursprungsdok.];
    SourceTable=Table5771;
    PageType=Worksheet;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 DataCaption := CurrPage.CAPTION;
                 FILTERGROUP := 2;
                 IF GETFILTER(Type) <> '' THEN
                   DataCaption := DataCaption + ' - ' + GETFILTER(Type);
                 FILTERGROUP := 0;
                 CurrPage.CAPTION(DataCaption);
               END;

    OnAfterGetCurrRecord=BEGIN
                           ShowRequestForm := "Show Filter Request";
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 6       ;1   ;Action    ;
                      Name=Run;
                      CaptionML=[ENU=&Run;
                                 NOR=&Kj›r;
                                 SVE=&K”r];
                      ToolTipML=[ENU=Get the specified source documents.;
                                 NOR=Hent de angitte kildedokumentene.;
                                 SVE=H„mta angivna k„lldokument.];
                      ApplicationArea=#Warehouse;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GetSourceBatch@1001 : Report 5753;
                               BEGIN
                                 CASE RequestType OF
                                   RequestType::Receive:
                                     BEGIN
                                       GetSourceBatch.SetOneCreatedReceiptHeader(WhseReceiptHeader);
                                       SetFilters(GetSourceBatch,WhseReceiptHeader."Location Code");
                                     END;
                                   RequestType::Ship:
                                     BEGIN
                                       GetSourceBatch.SetOneCreatedShptHeader(WhseShptHeader);
                                       SetFilters(GetSourceBatch,WhseShptHeader."Location Code");
                                       GetSourceBatch.SetSkipBlocked(TRUE);
                                     END;
                                 END;

                                 GetSourceBatch.SetSkipBlockedItem(TRUE);
                                 GetSourceBatch.USEREQUESTPAGE(ShowRequestForm);
                                 GetSourceBatch.RUNMODAL;
                                 IF GetSourceBatch.NotCancelled THEN
                                   CurrPage.CLOSE;
                               END;
                                }
      { 8       ;1   ;Action    ;
                      Name=Modify;
                      CaptionML=[ENU=&Modify;
                                 NOR=&Endre;
                                 SVE=&Žndra];
                      ToolTipML=[ENU=Change the type of source documents that the function looks in.;
                                 NOR=Endre typen kildedokumenter som funksjonen s›ker i.;
                                 SVE=Žndra typen av k„lldokument som funktionen s”ker i.];
                      ApplicationArea=#Warehouse;
                      Promoted=Yes;
                      Image=EditFilter;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SourceDocFilterCard@1001 : Page 5786;
                               BEGIN
                                 TESTFIELD(Code);
                                 CASE RequestType OF
                                   RequestType::Receive:
                                     SourceDocFilterCard.SetOneCreatedReceiptHeader(WhseReceiptHeader);
                                   RequestType::Ship:
                                     SourceDocFilterCard.SetOneCreatedShptHeader(WhseShptHeader);
                                 END;
                                 SourceDocFilterCard.SETRECORD(Rec);
                                 SourceDocFilterCard.SETTABLEVIEW(Rec);
                                 SourceDocFilterCard.RUNMODAL;
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 5   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=Allm„nt] }

    { 22  ;2   ;Field     ;
                CaptionML=[ENU=Show Filter Request;
                           NOR=Vis filterforesp›rsel;
                           SVE=Visa filterkrav];
                ToolTipML=[ENU=Specifies if the Filters to Get Source Docs. window appears when you choose Use Filters to Get Source Docs on a warehouse shipment or warehouse receipt document.;
                           NOR=Angir om vinduet Filtre for henting av kildedok vises n†r du velger Bruk filtre til † hente k.dok i dokumentet for lagerlevering eller -mottak.;
                           SVE=Anger om f”nstret Filter att h„mta ursprungsdok. visas n„r du v„ljer Filter f”r att h„mta urspr.dok. i ett dokument f”r distributionslagerutleverans eller distributionslagerinleverans.];
                ApplicationArea=#Warehouse;
                SourceExpr=ShowRequestForm }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that inventory quantities are assigned when you get outbound source document lines for shipment.;
                           NOR=Angir at lagerantallene blir tilordnet n†r du henter utg†ende kildedokumentlinjer for levering.;
                           SVE=Anger att lagersaldon tilldelas n„r du h„mtar avg†ende k„lldokumentrader f”r utleverans.];
                ApplicationArea=#Warehouse;
                SourceExpr="Do Not Fill Qty. to Handle" }

    { 1   ;1   ;Group     ;
                Editable=TRUE;
                GroupType=Repeater }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code that identifies the filter record.;
                           NOR=Angir koden som identifiserer filterposten.;
                           SVE=Anger koden som anv„nds f”r att identifiera den post som ska filtreras.];
                ApplicationArea=#Warehouse;
                SourceExpr=Code }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the description of filter combinations in the Source Document Filter Card window to retrieve lines from source documents.;
                           NOR=Angir beskrivelsen av filterkombinasjoner i vinduet Filterkort for kildedokumenter for † hente linjer fra kildedokumenter.;
                           SVE=Anger en beskrivning av filterkombinationer i f”nstret Ursprungsdok. filterkort som ska anv„ndas f”r att h„mta rader fr†n k„lldokument.];
                ApplicationArea=#Warehouse;
                SourceExpr=Description }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      WhseShptHeader@1000 : Record 7320;
      WhseReceiptHeader@1001 : Record 7316;
      DataCaption@1002 : Text[250];
      ShowRequestForm@1003 : Boolean;
      RequestType@1004 : 'Receive,Ship';

    [External]
    PROCEDURE SetOneCreatedShptHeader@1(WhseShptHeader2@1000 : Record 7320);
    BEGIN
      RequestType := RequestType::Ship;
      WhseShptHeader := WhseShptHeader2;
    END;

    [External]
    PROCEDURE SetOneCreatedReceiptHeader@2(WhseReceiptHeader2@1000 : Record 7316);
    BEGIN
      RequestType := RequestType::Receive;
      WhseReceiptHeader := WhseReceiptHeader2;
    END;

    BEGIN
    END.
  }
}

