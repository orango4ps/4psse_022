OBJECT Table 1877 VAT Setup Posting Groups
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=VAT Setup Posting Groups;
               NOR=Bokfõringsgrupper for mva-oppsett];
  }
  FIELDS
  {
    { 2   ;   ;VAT Prod. Posting Group;Code20     ;CaptionML=[ENU=VAT Prod. Posting Group;
                                                              NOR=Mva-bokfõringsgruppe - vare;
                                                              SVE=Moms produktbokfîringsmall];
                                                   NotBlank=Yes }
    { 4   ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              NOR=Mva-%;
                                                              SVE=Momssats %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 7   ;   ;Sales VAT Account   ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Sales VAT Account;
                                                              NOR=UtgÜende mva-konto;
                                                              SVE=UtgÜende moms] }
    { 9   ;   ;Purchase VAT Account;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Purchase VAT Account;
                                                              NOR=InngÜende mva-konto;
                                                              SVE=Konto fîr ingÜende moms] }
    { 11  ;   ;Reverse Chrg. VAT Acc.;Code20      ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Reverse Chrg. VAT Acc.;
                                                              NOR=Snudd avregning-konto;
                                                              SVE=OmvÑnd EG-moms] }
    { 18  ;   ;VAT Prod. Posting Grp Desc.;Text100;CaptionML=[ENU=VAT Prod. Posting Grp Desc.;
                                                              NOR=Beskr. for mva-bokf.gruppe - vare] }
    { 19  ;   ;VAT Clause Desc     ;Text250       ;CaptionML=[ENU=VAT Clause Desc;
                                                              NOR=Beskr. for mva-setning] }
    { 22  ;   ;Selected            ;Boolean       ;FieldClass=Normal;
                                                   CaptionML=[ENU=Selected;
                                                              NOR=Valgt;
                                                              SVE=Vald] }
    { 23  ;   ;Application Type    ;Option        ;CaptionML=[ENU=Application Type;
                                                              NOR=Utligningstype;
                                                              SVE=Avdragstyp];
                                                   OptionCaptionML=[ENU=,Items,Services;
                                                                    NOR=,Varer,Tjenester];
                                                   OptionString=,Items,Services }
    { 24  ;   ;Default             ;Boolean       ;CaptionML=[ENU=Default;
                                                              NOR=Standard;
                                                              SVE=Standard] }
  }
  KEYS
  {
    {    ;VAT Prod. Posting Group,Default         ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      FULLNORMTok@1601 : TextConst '@@@=the same as values in Product posting group;ENU=FULL NORM;NOR=FULL NORM';
      FULLREDTok@1602 : TextConst '@@@=the same as values in Product posting group;ENU=FULL RED;NOR=FULL RùD';
      REDUCEDTok@1603 : TextConst '@@@=the same as values in Product posting group;ENU=REDUCED;NOR=REDUSERT';
      SERVNORMTok@1604 : TextConst '@@@=the same as values in Product posting group;ENU=SERV NORM;NOR=SERV NORM';
      SERVREDTok@1605 : TextConst '@@@=the same as values in Product posting group;ENU=SERV RED;NOR=SERV RùD';
      STANDARDTok@1606 : TextConst '@@@=the same as values in Product posting group;ENU=STANDARD;NOR=STANDARD;SVE=STANDARD';
      ZEROTok@1607 : TextConst '@@@=the same as values in Product posting group;ENU=ZERO;NOR=NULL';
      FULLNORMTxt@1608 : TextConst 'ENU=VAT Only Invoices 25%;NOR=Bare fakturaer med 25 % mva';
      FULLREDTxt@1609 : TextConst 'ENU=VAT Only Invoices 10%;NOR=Bare fakturaer med 10 % mva';
      REDUCEDTxt@1610 : TextConst 'ENU=Reduced VAT (10%);NOR=Redusert mva (10 %)';
      SERVNORMTxt@1611 : TextConst 'ENU=Miscellaneous 25 VAT;NOR=Diverse med 25 % mva';
      SERVREDTxt@1612 : TextConst 'ENU=Miscellaneous 10 VAT;NOR=Diverse med 10 % mva';
      STANDARDTxt@1613 : TextConst 'ENU=Standard VAT (25%);NOR=Standard mva (25 %)';
      ZEROTxt@1614 : TextConst 'ENU=No VAT;NOR=Ingen mva;SVE=Ingen moms';
      InvalidGLAccountsTxt@1000 : TextConst '@@@=%1 is placeholder for the invalid gl account code;ENU=%1 is not valid G/L Account.;NOR=%1 er ikke en gyldig finanskonto.';
      VATAssistedAccountsMsg@1001 : TextConst 'ENU=You have not assigned general ledger accounts for sales and purchases for all VAT amounts. You won''t be able to calculate and post VAT for the missing accounts. If you''re skipping this step on purpose, you can manually assign accounts later in the VAT Posting Setup page.;NOR=Du har ikke tilordnet finanskonti for salg og kjõp for alle mva-belõp. Du kan ikke beregne og bokfõre mva for de manglende kontoene. Hvis du utelater dette trinnet med hensikt, kan du manuelt tilordne kontoer senere pÜ siden Bokfõringsoppsett.';

    [External]
    PROCEDURE ValidateVATRates@1() : Boolean;
    VAR
      VATSetupPostingGroups@1000 : Record 1877;
    BEGIN
      VATSetupPostingGroups.RESET;
      VATSetupPostingGroups.SETRANGE(Selected,TRUE);
      VATSetupPostingGroups.SETRANGE(Default,FALSE);
      EXIT(NOT VATSetupPostingGroups.ISEMPTY);
    END;

    [External]
    PROCEDURE PopulateVATProdGroups@37();
    VAR
      VATSetupPostingGroups@1000 : Record 1877;
    BEGIN
      SETRANGE(Default,FALSE);
      DELETEALL;

      SETRANGE(Default,TRUE);
      IF NOT FINDSET THEN BEGIN
        InitWithStandardValues;
        FINDSET;
      END;

      REPEAT
        VATSetupPostingGroups.TRANSFERFIELDS(Rec);
        VATSetupPostingGroups.Default := FALSE;
        VATSetupPostingGroups.INSERT;
      UNTIL NEXT = 0;
    END;

    [External]
    PROCEDURE AddOrUpdateProdPostingGrp@2(ProdGrpCode@1001 : Code[20];GrpDesc@1002 : Text[100];VatRate@1003 : Decimal;SalesAccount@1004 : Code[20];PurchAccount@1005 : Code[20];IsService@1006 : Boolean;IsDefault@1007 : Boolean) : Boolean;
    VAR
      GLAccount@1000 : Record 15;
    BEGIN
      IF NOT GET(ProdGrpCode,IsDefault) THEN BEGIN
        INIT;
        "VAT Prod. Posting Group" := ProdGrpCode;
        Default := IsDefault;
        INSERT;
      END;

      "VAT Prod. Posting Grp Desc." := GrpDesc;
      IF VatRate <> 0 THEN
        "VAT %" := VatRate;
      IF GLAccount.GET(SalesAccount) THEN
        "Sales VAT Account" := SalesAccount;
      IF GLAccount.GET(PurchAccount) THEN
        "Purchase VAT Account" := PurchAccount;
      "Application Type" := "Application Type"::Items;
      IF IsService THEN
        "Application Type" := "Application Type"::Services;
      Selected := TRUE;
      EXIT(MODIFY);
    END;

    [External]
    PROCEDURE CheckExistingItemAndServiceWithVAT@20(VATProdPostingGroupCode@1002 : Code[20];IsService@1001 : Boolean) : Boolean;
    VAR
      Item@1003 : Record 27;
      ServiceLine@1000 : Record 5902;
    BEGIN
      IF IsService THEN BEGIN
        ServiceLine.SETRANGE("VAT Prod. Posting Group",VATProdPostingGroupCode);
        EXIT(NOT ServiceLine.ISEMPTY);
      END;
      Item.SETRANGE("VAT Prod. Posting Group",VATProdPostingGroupCode);
      EXIT(NOT Item.ISEMPTY);
    END;

    [External]
    PROCEDURE ValidateGLAccountsExist@3(VAR ErrorMessage@1000 : Text) : Boolean;
    VAR
      VATSetupPostingGroups@1001 : Record 1877;
      GLAccount@1002 : Record 15;
    BEGIN
      IF ValidateVATRates = FALSE THEN
        EXIT(FALSE);
      VATSetupPostingGroups.SETRANGE(Selected,TRUE);
      IF NOT VATSetupPostingGroups.FINDSET THEN
        EXIT;

      REPEAT
        IF
           (DELCHR(VATSetupPostingGroups."Sales VAT Account",'<>') = '') OR
           (DELCHR(VATSetupPostingGroups."Purchase VAT Account",'<>') = '')
        THEN BEGIN
          ErrorMessage := VATAssistedAccountsMsg;
          EXIT(FALSE);
        END;

        IF NOT GLAccount.GET(VATSetupPostingGroups."Sales VAT Account") THEN BEGIN
          ErrorMessage := STRSUBSTNO(InvalidGLAccountsTxt,VATSetupPostingGroups."Sales VAT Account");
          EXIT(FALSE);
        END;
        IF NOT GLAccount.GET(VATSetupPostingGroups."Purchase VAT Account") THEN BEGIN
          ErrorMessage := STRSUBSTNO(InvalidGLAccountsTxt,VATSetupPostingGroups."Purchase VAT Account");
          EXIT(FALSE);
        END;
      UNTIL VATSetupPostingGroups.NEXT = 0;
      ErrorMessage := '';
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE InitWithStandardValues@4();
    BEGIN
      AddOrUpdateProdPostingGrp(FULLNORMTok,FULLNORMTxt,100,'','',FALSE,TRUE);
      AddOrUpdateProdPostingGrp(FULLREDTok,FULLREDTxt,100,'','',FALSE,TRUE);
      AddOrUpdateProdPostingGrp(REDUCEDTok,REDUCEDTxt,10,'5611','5631',FALSE,TRUE);
      AddOrUpdateProdPostingGrp(SERVNORMTok,SERVNORMTxt,25,'5611','5631',TRUE,TRUE);
      AddOrUpdateProdPostingGrp(SERVREDTok,SERVREDTxt,10,'5611','5631',TRUE,TRUE);
      AddOrUpdateProdPostingGrp(STANDARDTok,STANDARDTxt,25,'5610','5630',FALSE,TRUE);
      AddOrUpdateProdPostingGrp(ZEROTok,ZEROTxt,0,'5610','5630',FALSE,TRUE);
    END;

    BEGIN
    END.
  }
}

