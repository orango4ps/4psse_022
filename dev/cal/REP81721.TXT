OBJECT Report 81721 Import Proj/ Emp Cost AGDA
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 1100285000;;DataItem;                  ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 ORDER(Ascending)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IEA.DELETEALL();
                               SeSetup.GET(SeSetup."Line type"::Setup,'FILEPATH','IMPORTPCOS');
                               SeSetup4.GET(SeSetup."Line type"::Setup,'FILENAME','IMPORTPCOS');
                               // JobSetup.GET();
                             END;

               OnAfterGetRecord=BEGIN
                                  File_Rec.SETRANGE(Path,SeSetup."Value (txt)");
                                  IF File_Rec.FINDFIRST THEN BEGIN
                                    REPEAT
                                      IF File_Rec."Is a file" = TRUE THEN BEGIN
                                        andelse :=  COPYSTR(File_Rec.Name,STRPOS(File_Rec.Name,'.')+1);
                                        andelse2 :=  COPYSTR(SeSetup4."Value (txt)",STRPOS(SeSetup4."Value (txt)",'.')+1);
                                        IF andelse = andelse2 THEN BEGIN
                                          Filen.TEXTMODE(TRUE);
                                          IF NOT Filen.OPEN(File_Rec.Path+File_Rec.Name) THEN
                                            CurrReport.QUIT;

                                          Filen.CREATEINSTREAM(Strangen);

                                          WHILE NOT Strangen.EOS DO
                                          BEGIN
                                            Strangen.READTEXT(txt);
                                            IF txt <> '' THEN BEGIN
                                              "FtgNo." := COPYSTR(txt,1,STRPOS(txt,';')-1);
                                              txt := COPYSTR(txt,STRPOS(txt,';')+1);
                                              Proj := COPYSTR(txt,1,STRPOS(txt,';')-1);
                                              txt := COPYSTR(txt,STRPOS(txt,';')+1);
                                              Branch := COPYSTR(txt,1,STRPOS(txt,';')-1);
                                              Branch := COPYSTR(Branch,1,10);
                                              txt := COPYSTR(txt,STRPOS(txt,';')+1);
                                              Loneart := COPYSTR(txt,1,STRPOS(txt,';')-1);
                                              txt := COPYSTR(txt,STRPOS(txt,';')+1);
                                              Priset := COPYSTR(txt,1,STRPOS(txt,';')-1);
                                              txt := COPYSTR(txt,STRPOS(txt,';')+1);
                                              Datum := txt;

                                              IF Datum <> '' THEN BEGIN
                                                EVALUATE(StartDate,Datum);
                                              END ELSE BEGIN
                                                StartDate := 0D;
                                              END;
                                              Emp.SETRANGE("Salary No.","EmpNo.");
                                              IF Emp.FIND('-') THEN BEGIN
                                                IF NOT IEA.GET("FtgNo.",'',Loneart,Proj) THEN BEGIN
                                                  IEA.INIT;
                                                  IEA."CompanyNo." := "FtgNo.";
                                                  IEA."Project No." := Proj;
                                                  IEA.Kostpris := Priset;
                                                  IEA.Loneart := Loneart;
                                                  IEA."Kostpris giltlig from" := Datum;
                                                  IEA.Branchorganisation := Branch;
                                                  IEA.INSERT
                                                END ELSE BEGIN
                                                  IEA.Kostpris := Priset;
                                                  IEA.Loneart := Loneart;
                                                  IEA."Kostpris giltlig from" := Datum;
                                                  IEA.MODIFY;
                                                END;
                                              END;
                                            END;
                                          END;
                                          Filen.CLOSE;
                                        END;
                                        //Spara undan filen
                                        CLEAR(SeSetup3);
                                        IF NOT SeSetup3.GET(SeSetup3."Line type"::Setup,'ARCHIVE','IMPORTPCOS') THEN
                                          ERROR(Text001);

                                        EVALUATE(Tiden,FORMAT(TIME));
                                        EVALUATE(Datumet,FORMAT(WORKDATE));
                                        Tiden := DELCHR(Tiden,'=',':');
                                        Datumet := DELCHR(Datumet,'=','-');

                                        IF FILE.EXISTS(SeSetup."Value (txt)"+File_Rec.Name) THEN BEGIN
                                          FILE.COPY(SeSetup."Value (txt)"+ File_Rec.Name, SeSetup3."Value (txt)"+FORMAT(Datumet)+'_'+ FORMAT(Tiden)+File_Rec.Name);
                                          FILE.ERASE(SeSetup."Value (txt)"+File_Rec.Name);
                                        END;
                                      END;

                                    UNTIL File_Rec.NEXT=0;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                // JobSetup.GET();
                                HumanResourcesSetup.GET;
                                CLEAR(IEA);
                                IEA.SETRANGE("CompanyNo.",HumanResourcesSetup."Delivering Company (SCAB)");
                                IEA.SETFILTER("Project No.",'<>%1','');
                                IEA.SETFILTER(Branchorganisation,'<>%1','');
                                IEA.SETFILTER(Kostpris,'<>%1','0');
                                IF IEA.FIND('-') THEN BEGIN
                                  REPEAT
                                    IF "FtgNo." = HumanResourcesSetup."Delivering Company (SCAB)" THEN BEGIN
                                      IF IEA."Kostpris giltlig from" <> '' THEN BEGIN
                                        EVALUATE(StartDate,IEA."Kostpris giltlig from");
                                      END ELSE BEGIN
                                        StartDate := 0D;
                                      END;
                                      IF NOT ProjCostPrice.GET(IEA."Project No.",IEA.Branchorganisation,IEA.Loneart,StartDate) THEN BEGIN
                                        ProjCostPrice.INIT;
                                        ProjCostPrice.VALIDATE("Project No.",IEA."Project No.");
                                        EVALUATE(ProjCostPrice."Starting Date",FORMAT(StartDate));
                                        ProjCostPrice.VALIDATE("Trade Association" ,IEA.Branchorganisation);
                                        ProjCostPrice.VALIDATE("Wage Component",IEA.Loneart);
                                        EVALUATE(Price,IEA.Kostpris);
                                        ProjCostPrice.VALIDATE("Cost Price", Price);
                                        ProjCostPrice.INSERT;
                                      END ELSE BEGIN
                                        EVALUATE(Price,IEA.Kostpris);
                                        ProjCostPrice.VALIDATE("Cost Price", Price);
                                        ProjCostPrice.MODIFY;
                                      END;

                                      //Uppdatera f”reg†ende EmpCostPrice om s†dan finns med Startdatum - 1D
                                      CLEAR(ProjCostPriceOLD);
                                      ProjCostPriceOLD.SETRANGE("Project No.",IEA."Project No.");
                                      ProjCostPriceOLD.SETRANGE("Trade Association",IEA.Branchorganisation);
                                      ProjCostPriceOLD.SETRANGE("Wage Component",IEA.Loneart);
                                      ProjCostPriceOLD.SETFILTER("Starting Date",'<%1',StartDate);
                                      IF ProjCostPriceOLD.FIND('-') THEN BEGIN
                                        REPEAT
                                          IF (ProjCostPriceOLD."Ending Date" = 0D) OR (ProjCostPriceOLD."Ending Date" >= StartDate) THEN BEGIN
                                            ProjCostPriceOLD."Ending Date" := CALCDATE('-1D',StartDate);
                                            ProjCostPriceOLD.MODIFY;
                                          END;
                                        UNTIL ProjCostPriceOLD.NEXT = 0;
                                      END;
                                      IF ProjCostPriceOLD.FIND('-') THEN BEGIN
                                        ProjCostPriceOLD."Ending Date" := CALCDATE('-1D',StartDate);
                                        ProjCostPriceOLD.MODIFY;
                                      END;

                                      //L„s Koppling l”neprogram..
                                      CLEAR(Lonkoppl);
                                      Lonkoppl.SETRANGE("Wage Component Additional Line",IEA.Loneart);
                                      IF Lonkoppl.FIND('-') THEN BEGIN
                                        REPEAT
                                          IF NOT ProjCostPrice.GET(IEA."Project No.",IEA.Branchorganisation,Lonkoppl."Wage Component",StartDate) THEN BEGIN
                                            ProjCostPrice.INIT;
                                            ProjCostPrice.VALIDATE("Project No.",IEA."Project No.");
                                            EVALUATE(ProjCostPrice."Starting Date",FORMAT(StartDate));
                                            ProjCostPrice.VALIDATE("Trade Association" ,IEA.Branchorganisation);
                                            ProjCostPrice.VALIDATE("Wage Component",Lonkoppl."Wage Component");
                                            EVALUATE(Price,IEA.Kostpris);
                                            ProjCostPrice.VALIDATE("Cost Price", Price);
                                            ProjCostPrice.INSERT;
                                          END ELSE BEGIN
                                            EVALUATE(Price,IEA.Kostpris);
                                            ProjCostPrice.VALIDATE("Cost Price", Price);
                                            ProjCostPrice.MODIFY;
                                          END;
                                          //Uppdatera f”reg†ende EmpCostPrice om s†dan finns med Startdatum - 1D
                                          CLEAR(ProjCostPriceOLD);
                                          ProjCostPriceOLD.SETRANGE("Project No.",IEA."Project No.");
                                          ProjCostPriceOLD.SETRANGE("Trade Association",IEA.Branchorganisation);
                                          ProjCostPriceOLD.SETRANGE("Wage Component",Lonkoppl."Wage Component");
                                          ProjCostPriceOLD.SETFILTER("Starting Date",'<%1',StartDate);
                                          IF ProjCostPriceOLD.FIND('-') THEN BEGIN
                                            REPEAT
                                              IF (ProjCostPriceOLD."Ending Date" = 0D) OR (ProjCostPriceOLD."Ending Date" >= StartDate) THEN BEGIN
                                                ProjCostPriceOLD."Ending Date" := CALCDATE('-1D',StartDate);
                                                ProjCostPriceOLD.MODIFY;
                                              END;
                                            UNTIL ProjCostPriceOLD.NEXT = 0;
                                          END;
                                        UNTIL Lonkoppl.NEXT = 0;
                                      END;
                                    END;
                                  UNTIL IEA.NEXT = 0;
                                END;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ProjCostPrice@1100285000 : Record 11020362;
      ProjCostPriceOLD@1000000009 : Record 11020362;
      SeSetup@1100285001 : Record 11128004;
      Filen@1100285004 : File;
      Strangen@1100285003 : InStream;
      txt@1100285005 : Text[250];
      "FtgNo."@1100285007 : Text;
      "EmpNo."@1100285008 : Text;
      StartDate@1100285009 : Date;
      Price@1100285010 : Decimal;
      Priset@1100285006 : Text;
      Datum@1100285011 : Text;
      Proj@1100285012 : Text;
      Branch@1000000000 : Text[20];
      Loneart@1000000001 : Text;
      SeSetup2@1000000002 : Record 11128004;
      Branchen@1000000003 : Text[10];
      Lonkoppl@1000000004 : Record 11128109;
      SeSetup3@1000000005 : Record 11128004;
      IEA@1000000006 : Record 81642;
      Emp@1000000007 : Record 5200;
      Text001@1000000008 : TextConst 'SVE=SE Setup - inst„llninga saknas f”r "ARCHIVE", "IMPORTPCOS"';
      SeSetup4@1000000012 : Record 11128004;
      Tiden@1000000011 : Text;
      Datumet@1000000010 : Text;
      File_Rec@1000000015 : Record 2000000022;
      andelse@1000000014 : Text;
      andelse2@1000000013 : Text;
      HumanResourcesSetup@1100285100 : Record 5218;

    BEGIN
    {
      Nyckel projpriser: Project No.,Trade Association,Wage Component,Starting Date
    }
    END.
  }
  RDLDATA
  {
  }
}

