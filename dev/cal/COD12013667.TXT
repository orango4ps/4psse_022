OBJECT Codeunit 12013667 Vendor ID Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF510000;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            IF CONFIRM(EXF006,FALSE) THEN
              UpdateAllFieldIDsAllComp;
          END;

  }
  CODE
  {
    VAR
      EXF001@1100285000 : TextConst 'ENU=Vendor ID %1 which is connected to Vendor %2 already exists for Vendor %3. Do you want to replace the existing one?;SVE=Leverantîrs ID %1 som hÜller pÜ att kopplas mot leverantîr %2 finns redan fîr annan leverantîr: (%3). Vill du ersÑtta det befintliga?';
      EXF002@1100285001 : TextConst 'ENU=Do you want to connect the Vendor ID %1 to Vendor No %2?;SVE=Vill du koppla Leverantîrs ID:t %1 mot leverantîrern %2?';
      EXF003@1100285002 : TextConst 'ENU=Do you want to synchronize all VendorIDs?;SVE=Vill du synkronisera samtliga leverantîrsIDn?';
      EXF004@1100285003 : TextConst 'ENU=Do you want to Auto accept all error message for duplicate Vendor ID''s?;SVE=Vill ni auto acceptera alla felmeddelande angÜende leverantîrsid-dubletter?';
      EXF005@1100285004 : TextConst 'ENU=Updating Vendor ID for Vendor #1##################;SVE=Uppdaterar leverantîrsid fîr leverantîr #1##################';
      CompName@1100285005 : Text[50];
      EXF006@1100285006 : TextConst 'ENU=Do you want you update vendor ID''s for all companies?;SVE=Vill du uppdatera leverantîrsidn fîr alla bolag?';
      EXF007@1100285007 : TextConst 'ENU=Updating Vendor ID for: Company #1################## Vendor #2##################;SVE=Uppdaterar leverantîrsid fîr: Fîretag #1################## Leverantîr #2##################';
      BatchMode@1100285009 : Boolean;
      EXF010@1100285010 : TextConst 'ENU=You cannot enter into this account directly!;SVE=Kontot fÜr inte direktbokfîras!';

    PROCEDURE UpdateVendorIDFromVend@1100285000(Vendor@1100285000 : Record 23;SilentMode@1100285005 : Boolean);
    VAR
      VendorIDFields@1100285001 : Record 12013668;
      VendorID@1100285002 : Record 12013667;
      ExfAppSetup@1100285004 : Record 12013601;
      VendorBankAccount@1100285003 : Record 288;
      xVendor@1100285008 : Record 23;
      Field@1100285013 : Record 2000000041;
      RecRef@1100285006 : RecordRef;
      xRecRef@1100285007 : RecordRef;
      FldRef@1100285010 : FieldRef;
      xFldRef@1100285011 : FieldRef;
      ValueChanged@1100285009 : Boolean;
      ID@1100285012 : Code[100];
    BEGIN
      IF CompName = '' THEN
        CompName := COMPANYNAME;

      ExfAppSetup.CHANGECOMPANY(CompName);
      IF NOT ExfAppSetup.FINDFIRST THEN
        EXIT;

      UpdateVendorUsedNames(Vendor);

      IF NOT ExfAppSetup."Activate VendorID sync." THEN
        EXIT;

      IF NOT SilentMode AND NOT BatchMode THEN BEGIN
        xVendor.GET(Vendor."No.");
        RecRef.GETTABLE(Vendor);
        xRecRef.GETTABLE(xVendor);

        VendorIDFields.RESET;
        IF COMPANYNAME <> CompName THEN
          VendorIDFields.CHANGECOMPANY(CompName);

        VendorIDFields.SETRANGE("Table No.", DATABASE::Vendor);
        IF NOT VendorIDFields.FINDSET THEN
          EXIT;

        ValueChanged := FALSE;
        REPEAT
          IF Field.GET(DATABASE::Vendor,VendorIDFields."Field No.") THEN BEGIN
            FldRef := RecRef.FIELD(VendorIDFields."Field No.");
            xFldRef := xRecRef.FIELD(VendorIDFields."Field No.");
            IF FORMAT(FldRef.VALUE) <> FORMAT(xFldRef.VALUE) THEN
              ValueChanged := TRUE;
          END;
        UNTIL (VendorIDFields.NEXT = 0) OR ValueChanged;

        IF NOT ValueChanged THEN
          EXIT;
      END;

      IF (Vendor.Blocked <> 0) AND (ExfAppSetup."Do Not Search Blocked Vendors") THEN BEGIN
        VendorID.SETCURRENTKEY("Vendor No.",Type,"Field No.");
        IF COMPANYNAME <> CompName THEN
          VendorID.CHANGECOMPANY(CompName);
        VendorID.SETRANGE("Vendor No.",Vendor."No.");
        VendorID.SETRANGE(Type,VendorID.Type::Field);
        VendorID.DELETEALL;
      END ELSE BEGIN
        VendorIDFields.RESET;
        IF COMPANYNAME <> CompName THEN
          VendorIDFields.CHANGECOMPANY(CompName);
        VendorIDFields.SETRANGE("Table No.", DATABASE::Vendor);
        IF VendorIDFields.FINDSET THEN
          REPEAT
            CLEAR(VendorBankAccount);
            GetVendID(Vendor, VendorBankAccount, VendorIDFields."Table No.", VendorIDFields."Field No.", ID);
            InsertID(Vendor, VendorID, '',VendorIDFields, ID, SilentMode);
          UNTIL VendorIDFields.NEXT = 0;
      END;
    END;

    PROCEDURE UpdateVendorIDFromVendBank@1100285007(VendBankAcc@1100285000 : Record 288;SilentMode@1100285005 : Boolean);
    VAR
      xVendBankAcc@1100285002 : Record 288;
      Vendor@1100285001 : Record 23;
      VendorID@1100285003 : Record 12013667;
      VendorIDFields@1100285020 : Record 12013668;
      ExfAppSetup@1100285019 : Record 12013601;
      Field@1100285006 : Record 2000000041;
      RecRef@1100285018 : RecordRef;
      xRecRef@1100285017 : RecordRef;
      FldRef@1100285015 : FieldRef;
      xFldRef@1100285014 : FieldRef;
      ValueChanged@1100285012 : Boolean;
      ID@1100285004 : Code[100];
    BEGIN
      IF CompName = '' THEN
        CompName := COMPANYNAME;

      ExfAppSetup.CHANGECOMPANY(CompName);
      IF NOT ExfAppSetup.FINDFIRST THEN
        EXIT;

      IF NOT ExfAppSetup."Activate VendorID sync." THEN
        EXIT;

      IF NOT SilentMode AND NOT BatchMode THEN BEGIN
        xVendBankAcc.GET(VendBankAcc."Vendor No.",VendBankAcc.Code);
        RecRef.GETTABLE(VendBankAcc);
        xRecRef.GETTABLE(xVendBankAcc);

        VendorIDFields.RESET;
        IF COMPANYNAME <> CompName THEN
          VendorIDFields.CHANGECOMPANY(CompName);

        VendorIDFields.SETRANGE("Table No.", DATABASE::"Vendor Bank Account");
        IF NOT VendorIDFields.FINDSET THEN
          EXIT;

        ValueChanged := FALSE;
        REPEAT
          IF Field.GET(DATABASE::"Vendor Bank Account",VendorIDFields."Field No.") THEN BEGIN
            FldRef := RecRef.FIELD(VendorIDFields."Field No.");
            xFldRef := xRecRef.FIELD(VendorIDFields."Field No.");
            IF FORMAT(FldRef.VALUE) <> FORMAT(xFldRef.VALUE) THEN
              ValueChanged := TRUE;
          END;
        UNTIL (VendorIDFields.NEXT = 0) OR ValueChanged;

        IF NOT ValueChanged THEN
          EXIT;
      END;

      Vendor.GET(VendBankAcc."Vendor No.");
      IF (Vendor.Blocked <> 0) AND (ExfAppSetup."Do Not Search Blocked Vendors") THEN BEGIN
        VendorID.SETCURRENTKEY("Vendor No.",Type,"Field No.");
        IF COMPANYNAME <> CompName THEN
          VendorID.CHANGECOMPANY(CompName);
        VendorID.SETRANGE("Vendor No.",Vendor."No.");
        VendorID.SETRANGE(Type,VendorID.Type::Field);
        VendorID.DELETEALL;
      END ELSE BEGIN
        VendorIDFields.RESET;
        IF COMPANYNAME <> CompName THEN
          VendorIDFields.CHANGECOMPANY(CompName);
        VendorIDFields.SETRANGE("Table No.", DATABASE::"Vendor Bank Account");
        IF VendorIDFields.FINDSET THEN
          REPEAT
            GetVendID(Vendor, VendBankAcc, VendorIDFields."Table No.", VendorIDFields."Field No.", ID);
            InsertID(Vendor, VendorID, VendBankAcc.Code,VendorIDFields, ID, SilentMode);
          UNTIL VendorIDFields.NEXT = 0;
      END;
    END;

    PROCEDURE GetVendID@1100285001(Vendor@1100285003 : Record 23;VendorBankAccount@1100285005 : Record 288;TableNo@1100285006 : Integer;FieldNo@1100285000 : Integer;VAR VendID@1100285004 : Code[100]);
    VAR
      Field@1100285007 : Record 2000000041;
      RecRef@1100285001 : RecordRef;
      FieldRef@1100285002 : FieldRef;
    BEGIN
      CASE TableNo OF
        DATABASE::Vendor:
          BEGIN
            IF Field.GET(DATABASE::Vendor,FieldNo) THEN BEGIN
              RecRef.GETTABLE(Vendor);
              FieldRef := RecRef.FIELD(FieldNo);
              VendID := FieldRef.VALUE;
              RecRef.CLOSE;
              RemoveSpecChars(VendID);
            END;
          END;
        DATABASE::"Vendor Bank Account":
          BEGIN
            IF Field.GET(DATABASE::"Vendor Bank Account",FieldNo) THEN BEGIN
              RecRef.GETTABLE(VendorBankAccount);
              FieldRef := RecRef.FIELD(FieldNo);
              VendID := FieldRef.VALUE;
              RecRef.CLOSE;
              RemoveSpecChars(VendID);
            END;
          END;
      END;
    END;

    PROCEDURE RemoveSpecChars@1100285002(VAR VendID@1100285000 : Code[100]);
    BEGIN
      VendID := DELCHR(VendID,'=',DELCHR(VendID,'=','ABCDEFGHIJKLMNOPQRSTUVWXYZèéô0123456789'));
    END;

    PROCEDURE UpdateAllFieldIDs@1100285003(SilentMode@1100285002 : Boolean);
    VAR
      Vendor@1100285000 : Record 23;
      VendorBankAcc@1100285005 : Record 288;
      UpdateRec@1100285001 : Boolean;
      Window@1100285003 : Dialog;
      ExfAppSetup@1100285004 : Record 12013601;
    BEGIN
      IF NOT SilentMode THEN BEGIN
        ExfAppSetup.GET;
        ExfAppSetup.TESTFIELD("Activate VendorID sync.",TRUE);

        IF CONFIRM(EXF003,TRUE) THEN BEGIN
          SilentMode := CONFIRM(EXF004);
          BatchMode := TRUE;
          UpdateRec := TRUE;
        END;
      END ELSE
        UpdateRec := TRUE;

      IF UpdateRec THEN BEGIN
        IF GUIALLOWED THEN
          Window.OPEN(EXF005);

        IF Vendor.FINDSET THEN
          REPEAT
            IF GUIALLOWED THEN
              Window.UPDATE(1, Vendor."No.");

            CompName := COMPANYNAME;
            UpdateVendorIDFromVend(Vendor,SilentMode);

            VendorBankAcc.SETRANGE("Vendor No.", Vendor."No.");
            IF VendorBankAcc.FINDSET THEN
              REPEAT
                UpdateVendorIDFromVendBank(VendorBankAcc,SilentMode);
              UNTIL VendorBankAcc.NEXT = 0;
          UNTIL Vendor.NEXT = 0;
      END;
    END;

    PROCEDURE DeleteID@1100285010(ID@1100285001 : Code[100]);
    VAR
      VendorID@1100285000 : Record 12013667;
    BEGIN
      IF CompName <> COMPANYNAME THEN
        VendorID.CHANGECOMPANY(CompName);

      VendorID.GET(ID);
      VendorID.DELETE;
    END;

    PROCEDURE InsertOK@1100285008(ID@1100285000 : Code[100];CurrVendNo@1100285001 : Code[20];SilentMode@1100285002 : Boolean) : Boolean;
    VAR
      VendorID@1100285004 : Record 12013667;
    BEGIN
      IF CompName <> COMPANYNAME THEN
        VendorID.CHANGECOMPANY(CompName);

      IF NOT VendorID.GET(ID) THEN // New Unique ID
        EXIT(TRUE);

      IF VendorID."Vendor No." = CurrVendNo THEN BEGIN   // If current Vendor replace
        DeleteID(ID);
        EXIT(TRUE);
      END;

      IF SilentMode THEN BEGIN
        DeleteID(ID);
        EXIT(TRUE);
      END ELSE
       IF CONFIRM(EXF001,TRUE,ID,CurrVendNo, VendorID."Vendor No.") THEN BEGIN // If exists for other Vendor ask
          DeleteID(ID);
          EXIT(TRUE);
        END ELSE
          EXIT(FALSE);
    END;

    PROCEDURE AddFromImportForm@1100285009(ID@1100285002 : Code[100];NewVendorNo@1100285003 : Code[20]);
    VAR
      VendorID@1100285001 : Record 12013667;
      ExAppSetup@1100285000 : Record 12013601;
      CreateVendorID@1100285004 : Boolean;
    BEGIN
      ExAppSetup.GET;
      IF ExAppSetup."Auto Create Vendor ID" = ExAppSetup."Auto Create Vendor ID"::Never THEN
        EXIT;

      ExAppSetup.TESTFIELD("Activate VendorID sync.",TRUE);

      RemoveSpecChars(ID);

      IF VendorID.GET(ID) THEN
        IF VendorID."Vendor No." = NewVendorNo THEN
          EXIT;

      IF ExAppSetup."Auto Create Vendor ID" = ExAppSetup."Auto Create Vendor ID"::Ask THEN
        CreateVendorID := CONFIRM(EXF002,TRUE,ID,NewVendorNo)
      ELSE
        CreateVendorID := ExAppSetup."Auto Create Vendor ID" = ExAppSetup."Auto Create Vendor ID"::Always;

      IF CreateVendorID THEN
        IF InsertOK(ID,NewVendorNo,FALSE) THEN BEGIN
          VendorID.INIT;
          VendorID.ID := ID;
          VendorID.Type := VendorID.Type::Userdef;
          VendorID."Field No." := 0;
          VendorID."Vendor No." := NewVendorNo;
          VendorID.INSERT;
        END;
    END;

    PROCEDURE FindVendor@1100285005(VendId@1100285000 : Code[100]) : Code[20];
    VAR
      ExFlowSetup@1100285001 : Record 12013601;
      VendIDs@1100285002 : Record 12013667;
      Vend@1100285003 : Record 23;
    BEGIN
      IF VendId = '' THEN
        EXIT('');

      ExFlowSetup.GET;
      IF VendIDs.GET(VendId) THEN BEGIN
        Vend.SETRANGE("No.",VendIDs."Vendor No.");

        IF ExFlowSetup."Do Not Search Blocked Vendors" THEN
          Vend.SETRANGE(Blocked, 0);

        IF Vend.FINDFIRST THEN
          EXIT(Vend."No.");
      END;
    END;

    PROCEDURE UpdateAllFieldIDsAllComp@1100285004();
    VAR
      Vendor@1100285001 : Record 23;
      VendorBankAcc@1100285004 : Record 288;
      Company@1100285002 : Record 2000000006;
      SilentMode@1100285000 : Boolean;
      Window@1100285003 : Dialog;
    BEGIN
      SilentMode := TRUE;

      IF GUIALLOWED THEN
        Window.OPEN(EXF007);

      Company.RESET;
      IF Company.FINDSET THEN BEGIN
        REPEAT
          Window.UPDATE(1, Company.Name);

          Vendor.CHANGECOMPANY(Company.Name);
          IF Vendor.FINDSET THEN
            REPEAT
              IF GUIALLOWED THEN
                Window.UPDATE(2, Vendor."No.");

              CompName := Company.Name;
              UpdateVendorIDFromVend(Vendor,SilentMode);

              VendorBankAcc.CHANGECOMPANY(Company.Name);
              VendorBankAcc.SETRANGE("Vendor No.", Vendor."No.");
              IF VendorBankAcc.FINDSET THEN
                REPEAT
                  UpdateVendorIDFromVendBank(VendorBankAcc,SilentMode);
                UNTIL VendorBankAcc.NEXT = 0;
            UNTIL Vendor.NEXT = 0;
        UNTIL Company.NEXT = 0;
      END;
    END;

    PROCEDURE InsertID@1100285006(Vendor@1100285000 : Record 23;VAR VendorID@1100285001 : Record 12013667;BankCode@1100285005 : Code[20];VendorIDFields@1100285003 : Record 12013668;ID@1100285002 : Code[100];SilentMode@1100285004 : Boolean);
    BEGIN
      IF ID = '' THEN BEGIN
        VendorID.RESET;
        VendorID.SETCURRENTKEY("Vendor No.",Type,"Field No.");
        IF COMPANYNAME <> CompName THEN
          VendorID.CHANGECOMPANY(CompName);
        VendorID.SETRANGE("Vendor No.",Vendor."No.");
        VendorID.SETRANGE(Type,VendorID.Type::Field);
        VendorID.SETRANGE("Table No.", VendorIDFields."Table No.");
        VendorID.SETRANGE(VendorID."Field No.", VendorIDFields."Field No.");
        IF VendorIDFields."Table No." = DATABASE::"Vendor Bank Account" THEN
          VendorID.SETRANGE("Bank Code",BankCode);
        IF VendorID.FINDFIRST THEN
          VendorID.DELETE;
      END ELSE BEGIN
        IF InsertOK(ID,Vendor."No.",SilentMode) THEN BEGIN
          VendorID.RESET;
          VendorID.SETCURRENTKEY("Vendor No.",Type,"Field No.");
          IF COMPANYNAME <> CompName THEN
            VendorID.CHANGECOMPANY(CompName);
          VendorID.SETRANGE("Vendor No.",Vendor."No.");
          VendorID.SETRANGE(Type,VendorID.Type::Field);
          VendorID.SETRANGE("Table No.", VendorIDFields."Table No.");
          VendorID.SETRANGE(VendorID."Field No.", VendorIDFields."Field No.");
          IF VendorIDFields."Table No." = DATABASE::"Vendor Bank Account" THEN
            VendorID.SETRANGE("Bank Code",BankCode);
          IF VendorID.FINDFIRST THEN
            VendorID.DELETE;

          VendorID.INIT;
          VendorID.ID := ID;
          VendorID.Type := VendorID.Type::Field;
          VendorID."Field No." := VendorIDFields."Field No.";
          VendorID."Vendor No." :=  Vendor."No.";
          VendorID."Table No." := VendorIDFields."Table No.";
          IF VendorIDFields."Table No." = DATABASE::"Vendor Bank Account" THEN
            VendorID."Bank Code" := BankCode;
          VendorID.INSERT;
        END;
      END;
    END;

    PROCEDURE VendorPreDefCheck@1100285012(VAR Vendor@1100285000 : Record 23);
    VAR
      t_Account@1100285001 : Record 15;
    BEGIN
      IF Vendor."Predefined Account" <> '' THEN BEGIN
        t_Account.GET(Vendor."Predefined Account");
        IF NOT t_Account."Direct Posting" THEN
          ERROR(EXF010);

        Vendor."Predefined Purch. Code" := '';
      END;
    END;

    LOCAL PROCEDURE UpdateVendorUsedNames@1100285013(Vendor@1100285000 : Record 23);
    VAR
      WebUsedVendors@1100285001 : Record 12013631;
    BEGIN
      IF NOT WebUsedVendors.GET(Vendor."No.",COMPANYNAME) THEN
        EXIT;

      IF WebUsedVendors."Vendor Name" = Vendor.Name THEN
        EXIT;

      WebUsedVendors."Vendor Name" := Vendor.Name;
      WebUsedVendors.MODIFY;
    END;

    BEGIN
    END.
  }
}

