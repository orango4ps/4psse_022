OBJECT Page 11012168 Estimate Rate List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Kalkulationstarif šbersicht;
               ENU=Estimate Rate  List;
               NLD=Calculatietarief overzicht;
               NOR=Liste over kalkylesatser;
               SVE=Kalkyl Í avgiftslista];
    SourceTable=Table11012160;
    DelayedInsert=Yes;
    DataCaptionFields=Estimate No.;
    PageType=List;
    OnInit=BEGIN
             IF Estimate.GET(GETFILTER("Estimate No.")) THEN
               RefDate := Estimate."Reference Date (Rate)";
           END;

    OnOpenPage=BEGIN
                 IF Estimate.GET(GETFILTER("Estimate No.")) THEN
                   RefDate := Estimate."Reference Date (Rate)";

                 EstimateSetup.GET;
                 IF EstimateSetup."Rates Based On" <> EstimateSetup."Rates Based On"::"Rate Group" THEN BEGIN  //db, 02-06-14: C012973
                   RateByDate := FALSE;
                   ChangeRateGroup := FALSE;
                 END ELSE BEGIN
                   RateByDate := TRUE;
                   ChangeRateGroup := TRUE;
                 END;
                 SalesRateEditable := TRUE;
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190000;1 ;Action    ;
                      Name=RateByDate;
                      CaptionML=[DEU=&Tarife pro Datum;
                                 ENU=&Rates by Date;
                                 NLD=T&arieven per datum;
                                 NOR=&Avgifter etter dato;
                                 SVE=&Avgifter efter datum];
                      RunObject=Page 11012255;
                      RunPageLink=Record Type=CONST(Estimate),
                                  Estimate No.=FIELD(Estimate No.);
                      Enabled=RateByDate;
                      Image=ReverseLines;
                      PromotedCategory=Process }
      { 15      ;1   ;Action    ;
                      Name=ChangeRateGroup;
                      CaptionML=[DEU=Erzetzen T&arifsatz;
                                 ENU=Substitute &Rate Group;
                                 NLD=Vervangen t&arievenset;
                                 NOR=Erstatt &Kostgruppe;
                                 SVE=Ers„tt &Kostnadsgrupp];
                      Enabled=ChangeRateGroup;
                      Image=ReverseLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 RateGroup@1100528500 : Record 11012161;
                               BEGIN
                                 IF PAGE.RUNMODAL(PAGE::"Rate Group List", RateGroup) = ACTION::LookupOK THEN BEGIN
                                   Estimate.GET("Estimate No.");
                                   Estimate."Rate Group" := RateGroup."No.";  //C050562
                                   Estimate.MODIFY;
                                   Estimate.GetRateByRateGroup;  //C050858
                                   ValidateRefDate;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190002;1;Group  ;
                CaptionML=[DEU=Stichtag;
                           ENU=Reference Date;
                           NLD=Peildatum;
                           NOR=Referansedato;
                           SVE=Referensdatum];
                GroupType=Group }

    { 1210190001;2;Field  ;
                CaptionML=[DEU=Stichtag;
                           ENU=Reference Date;
                           NLD=Peildatum;
                           NOR=Referansedato;
                           SVE=Referensdatum];
                SourceExpr=RefDate;
                OnValidate=BEGIN
                             ValidateRefDate;
                             CurrPage.UPDATE(FALSE);  //C050858
                           END;
                            }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr="Rate Code" }

    { 4   ;2   ;Field     ;
                SourceExpr=Description }

    { 1100528600;2;Field  ;
                SourceExpr="Currency Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             VALIDATE("Cost Rate");
                             VALIDATE("Sales Rate");
                           END;
                            }

    { 6   ;2   ;Field     ;
                SourceExpr="Cost Rate";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             UpdateEstimateLines("Estimate No.");  //C050562
                           END;
                            }

    { 1100528601;2;Field  ;
                SourceExpr="Cost Rate (FCY)";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             UpdateEstimateLines("Estimate No.");  //C050562
                           END;
                            }

    { 1100528900;2;Field  ;
                SourceExpr="Sales Rate";
                Editable=SalesRateEditable;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             UpdateEstimateLines("Estimate No.");  //C050562
                           END;
                            }

    { 1100528602;2;Field  ;
                SourceExpr="Sales Rate (FCY)";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             UpdateEstimateLines("Estimate No.");  //C050562
                           END;
                            }

    { 1100528603;2;Field  ;
                SourceExpr="Sales Rate Fixed";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Rate Type";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             UpdateEstimateLines("Estimate No.");  //C050562
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Team Size";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             UpdateEstimateLines("Estimate No.");  //C050562
                           END;
                            }

    { 1100485000;2;Field  ;
                SourceExpr="Cost Object";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      EstimateSetup@1100525000 : Record 11012150;
      Estimate@1210190000 : Record 11012151;
      RefDate@1210190003 : Date;
      RateByDate@1100528900 : Boolean INDATASET;
      ChangeRateGroup@1100528901 : Boolean INDATASET;
      SalesRateEditable@1100528902 : Boolean INDATASET;

    PROCEDURE ValidateRefDate@1100485001();
    VAR
      EstimateRate@1100485000 : Record 11012160;
    BEGIN
      //DP00883
      Estimate.GET("Estimate No.");
      Estimate.VALIDATE("Reference Date (Rate)", RefDate);
      Estimate.MODIFY(TRUE);

      EstimateSetup.GET;
      IF EstimateSetup."Rates Based On" = EstimateSetup."Rates Based On"::"Rate Group" THEN BEGIN  //C050562
        //Estimate.GetRateByRateGroup;  //C050858 (execute only when changing Rate Group, not on validate RefDate)
      END ELSE BEGIN
        Estimate.GetCostRate;
        Estimate.GetSalesRate;
      END;

      EstimateRate.SETRANGE("Estimate No.", "Estimate No.");
      IF EstimateRate.FIND('-') THEN BEGIN
        REPEAT
          EstimateRate.VALIDATE("Currency Code", Estimate."Currency Code");  //incl. get Rate FCY
          EstimateRate.MODIFY;
        UNTIL EstimateRate.NEXT = 0;
      END;

      UpdateEstimateLines("Estimate No.");  //C050562
    END;

    PROCEDURE UpdateEstimateLines@1100525002(EstimateNo@1100528500 : Code[20]);
    VAR
      EstimateLine@1100528501 : Record 11072072;
      EstimateRecipeLine@1100528502 : Record 11072075;
      EstimateRate@1100528503 : Record 11012160;
    BEGIN
      //C050562: redesign
      Estimate.GET(EstimateNo);
      //
      EstimateLine.SETFILTER("Estimate No.", Estimate."No.");
      EstimateLine.SETFILTER(Recipe, '%1', '');
      IF EstimateLine.FINDSET THEN BEGIN
        REPEAT
          IF EstimateLine."Rate Code" <> '' THEN BEGIN
            IF EstimateRate.GET(EstimateLine."Estimate No.", EstimateLine."Rate Code") THEN BEGIN
              EstimateLine."Cost Rate":= EstimateRate."Cost Rate";
              EstimateLine."Sales Rate":= EstimateRate."Sales Rate";
            END;
          END;
          EstimateLine."Currency Code" := Estimate."Currency Code";
          EstimateLine."Cost Rate (FCY)" := EstimateLine.ExchangeAmtLCYToFCY(EstimateLine."Cost Rate", FALSE, TRUE, FALSE);
          EstimateLine."Sales Rate (FCY)" := EstimateLine.ExchangeAmtLCYToFCY(EstimateLine."Sales Rate", FALSE, TRUE, FALSE);
          EstimateLine."Gross Price (FCY)" := EstimateLine.ExchangeAmtLCYToFCY(EstimateLine."Gross Price", FALSE, TRUE, FALSE);
          EstimateLine."Net Cost Price (FCY)" := EstimateLine.ExchangeAmtLCYToFCY(EstimateLine."Net Cost Price", FALSE, TRUE, FALSE);
          EstimateLine."Net Sales Price (FCY)" := EstimateLine.ExchangeAmtLCYToFCY(EstimateLine."Net Sales Price", FALSE, TRUE, FALSE);
          //
          EstimateLine.CalculateTotals;
          EstimateLine.MODIFY;
        UNTIL EstimateLine.NEXT = 0;
      END;

      EstimateRecipeLine.SETFILTER("Estimate No.", Estimate."No.");
      IF EstimateRecipeLine.FINDSET THEN BEGIN
        REPEAT
          IF EstimateRecipeLine."Rate Code" <> '' THEN BEGIN
            IF EstimateRate.GET(EstimateRecipeLine."Estimate No.", EstimateRecipeLine."Rate Code") THEN BEGIN
              EstimateRecipeLine."Cost Rate":= EstimateRate."Cost Rate";
              EstimateRecipeLine."Sales Rate":= EstimateRate."Sales Rate";
            END;
          END;
          EstimateRecipeLine."Currency Code" := Estimate."Currency Code";
          EstimateRecipeLine."Cost Rate (FCY)" := EstimateRecipeLine.ExchangeAmtLCYToFCY(EstimateRecipeLine."Cost Rate", FALSE, TRUE, FALSE);
          EstimateRecipeLine."Sales Rate (FCY)" := EstimateRecipeLine.ExchangeAmtLCYToFCY(EstimateRecipeLine."Sales Rate", FALSE, TRUE, FALSE);
          EstimateRecipeLine."Gross Price (FCY)" := EstimateRecipeLine.ExchangeAmtLCYToFCY(EstimateRecipeLine."Gross Price", FALSE, TRUE, FALSE);
          EstimateRecipeLine."Net Cost Price (FCY)" := EstimateRecipeLine.ExchangeAmtLCYToFCY(EstimateRecipeLine."Net Cost Price", FALSE, TRUE, FALSE);
          EstimateRecipeLine."Net Sales Price (FCY)" := EstimateRecipeLine.ExchangeAmtLCYToFCY(EstimateRecipeLine."Net Sales Price", FALSE, TRUE, FALSE);
          //
          EstimateRecipeLine.CalculateTotals;
          EstimateRecipeLine.MODIFY;
        UNTIL EstimateRecipeLine.NEXT = 0;
      END;

      Estimate.UpdateLogbook("Estimate No.");  //C058251
    END;

    BEGIN
    END.
  }
}

