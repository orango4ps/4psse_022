OBJECT Codeunit 9650 Edit MS Word Report Layout
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    TableNo=9650;
    OnRun=BEGIN
            EditReportLayout(Rec);
          END;

  }
  CODE
  {
    VAR
      LoadDocQst@1000 : TextConst 'ENU=The report layout document has been edited in Word.\\Do you want to import the changes?;NOR=Rapportoppsettdokumentet er redigert i Word.\\Vil du importere endringene?;SVE=Rapportlayoutdokumentet har redigerats i Word.\\Vill du importera „ndringarna?';
      WordNotFoundErr@1003 : TextConst 'ENU=You cannot edit the report layout because Microsoft Word is not available on your computer. To edit the report layout, you must install a supported version of Word.;NOR=Du kan ikke redigere rapportoppsettet fordi Microsoft Word ikke er tilgjengelig p† datamaskinen. Hvis du vil redigere rapportoppsettet, m† du installere en Word-versjon som st›ttes.;SVE=Du kan inte redigera rapportlayouten eftersom Microsoft Word inte „r tillg„ngligt p† din dator. Du m†ste installera en version av Word som st”ds f”r att kunna redigera rapportlayouten.';
      WaitMsg@1001 : TextConst 'ENU=Please wait while the report layout opens in Word.\After the report layout opens in Word, make changes to the layout,\and then close the Word document to continue.;NOR=Vent litt mens rapportoppsettet †pnes i Word.\N†r rapportoppsettet er †pnet i Word, endrer du oppsettet\og lukker deretter Word-dokumentet for † fortsette.;SVE=V„nta medan rapportlayouten ”ppnas i Word.\N„r rapportlayouten har ”ppnats i Word g”r du „ndringar i layouten och st„nger sedan Word-dokumentet f”r att forts„tta.';
      Window@1002 : Dialog;

    LOCAL PROCEDURE EditReportLayout@4(VAR CustomReportLayout@1015 : Record 9650);
    VAR
      TempBlob@1009 : Record 99008535;
      FileMgt@1005 : Codeunit 419;
      WordManagement@1010 : Codeunit 11072023;
      WordApplicationHandler@1011 : Codeunit 5068;
      WordApplication@1001 : DotNet "'Microsoft.Office.Interop.Word, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Word.ApplicationClass" RUNONCLIENT;
      WordDocument@1000 : DotNet "'Microsoft.Office.Interop.Word, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Word.Document" RUNONCLIENT;
      WdWindowState@1006 : DotNet "'Microsoft.Office.Interop.Word, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Word.WdWindowState" RUNONCLIENT;
      WordHelper@1016 : DotNet "'Microsoft.Dynamics.Nav.Integration.Office, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Integration.Office.Word.WordHelper" RUNONCLIENT;
      WordHandler@1007 : DotNet "'Microsoft.Dynamics.Nav.Integration.Office, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Integration.Office.Word.WordHandler" RUNONCLIENT;
      FileName@1003 : Text;
      NewFileName@1008 : Text;
      LoadModifiedDoc@1002 : Boolean;
    BEGIN
      CustomReportLayout.TestLayout;

      WordManagement.Activate(WordApplicationHandler,9650);
      IF NOT WordManagement.TryGetWord(WordApplication) THEN BEGIN
        WordManagement.Deactivate(9650);
        ERROR(WordNotFoundErr);
      END;

      Window.OPEN(WaitMsg);

      CustomReportLayout.GetLayoutBlob(TempBlob);
      FileName := FileMgt.BLOBExport(TempBlob,FileName,FALSE);

      // Open word and wait for the document to be closed
      WordHandler := WordHandler.WordHandler;
      WordDocument := WordHelper.CallOpen(WordApplication,FileName,FALSE,FALSE);
      WordDocument.ActiveWindow.Caption := CustomReportLayout."Report Name" + ' ' + CustomReportLayout.Description;
      WordDocument.Application.Visible := TRUE; // Visible before WindowState KB176866 - http://support.microsoft.com/kb/176866
      WordDocument.ActiveWindow.WindowState := WdWindowState.wdWindowStateNormal;

      // Push the word app to foreground
      WordApplication.WindowState := WdWindowState.wdWindowStateMinimize;
      WordApplication.Visible := TRUE;
      WordApplication.Activate;
      WordApplication.WindowState := WdWindowState.wdWindowStateNormal;

      WordDocument.Saved := TRUE;
      WordDocument.Application.Activate;

      NewFileName := WordHandler.WaitForDocument(WordDocument);
      Window.CLOSE;
      WordManagement.Deactivate(9650);

      LoadModifiedDoc := CONFIRM(LoadDocQst);

      IF LoadModifiedDoc THEN BEGIN
        FileMgt.BLOBImport(TempBlob,NewFileName);
        CustomReportLayout.ImportLayoutBlob(TempBlob,'');
      END;

      FileMgt.DeleteClientFile(FileName);
      IF FileName <> NewFileName THEN
        FileMgt.DeleteClientFile(NewFileName);
    END;

    BEGIN
    END.
  }
}

