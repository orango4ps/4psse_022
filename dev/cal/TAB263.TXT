OBJECT Table 263 Intrastat Jnl. Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03,4PS14.00,NAVSE.FI;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IntraJnlTemplate.GET("Journal Template Name");
               IntrastatJnlBatch.GET("Journal Template Name","Journal Batch Name");
             END;

    OnModify=BEGIN
               IntrastatJnlBatch.GET("Journal Template Name","Journal Batch Name");
               IntrastatJnlBatch.TESTFIELD(Reported,FALSE);
             END;

    OnDelete=VAR
               ErrorMessage@1000 : Record 700;
               IntrastatJnlBatch@1001 : Record 262;
             BEGIN
               IntrastatJnlBatch.GET("Journal Template Name","Journal Batch Name");
               ErrorMessage.SetContext(IntrastatJnlBatch);
               ErrorMessage.ClearLogRec(Rec);
             END;

    OnRename=BEGIN
               IntrastatJnlBatch.GET(xRec."Journal Template Name",xRec."Journal Batch Name");
               IntrastatJnlBatch.TESTFIELD(Reported,FALSE);
             END;

    CaptionML=[ENU=Intrastat Jnl. Line;
               NOR=Intrastatkladdelinje;
               SVE=Intrastatjournalrad];
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="Intrastat Jnl. Template";
                                                   CaptionML=[ENU=Journal Template Name;
                                                              NOR=Kladdemalnavn;
                                                              SVE=Mallnamn f”r journal] }
    { 2   ;   ;Journal Batch Name  ;Code10        ;TableRelation="Intrastat Jnl. Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Name));
                                                   CaptionML=[ENU=Journal Batch Name;
                                                              NOR=Kladdenavn;
                                                              SVE=Journalnamn] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 4   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=Receipt,Shipment;
                                                                    NOR=Mottak,Levering;
                                                                    SVE=Inleverans,Utleverans];
                                                   OptionString=Receipt,Shipment }
    { 5   ;   ;Date                ;Date          ;CaptionML=[ENU=Date;
                                                              NOR=Dato;
                                                              SVE=Datum] }
    { 6   ;   ;Tariff No.          ;Code20        ;TableRelation="Tariff Number";
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Trade Item",''); //**4PS02.n

                                                                GetItemDescription;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Tariff No.;
                                                              NOR=Tariffnr.;
                                                              SVE=EU tull statistiknr];
                                                   NotBlank=Yes }
    { 7   ;   ;Item Description    ;Text100       ;CaptionML=[ENU=Item Description;
                                                              NOR=Varebeskrivelse;
                                                              SVE=Artikelbeskrivning] }
    { 8   ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              NOR=Lands-/omr†dekode;
                                                              SVE=Lands-/regionkod] }
    { 9   ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              NOR=Transaksjonsart;
                                                              SVE=EU transaktionstyp] }
    { 10  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              NOR=Transportm†te;
                                                              SVE=Transports„tt] }
    { 11  ;   ;Source Type         ;Option        ;CaptionML=[ENU=Source Type;
                                                              NOR=Kildetype;
                                                              SVE=Ursprungstyp];
                                                   OptionCaptionML=[ENU=,Item Entry,Job Entry,,,,Service Entry;
                                                                    NOR=,Varepost,Prosjektpost;
                                                                    SVE=,Artikeltrans.,Projekttrans.,,,,Servicetrans.];
                                                   OptionString=,Item Entry,Job Entry,,,,Service Entry;
                                                   BlankZero=Yes }
    { 12  ;   ;Source Entry No.    ;Integer       ;TableRelation=IF (Source Type=CONST(Item Entry)) "Item Ledger Entry"
                                                                 ELSE IF (Source Type=CONST(Job Entry)) "Job Ledger Entry"
                                                                 ELSE IF (Source Type=CONST(Service Entry)) "Service-Ledger Entry";
                                                   CaptionML=[ENU=Source Entry No.;
                                                              NOR=Kildel›penr.;
                                                              SVE=Ursprungligt l”pnr];
                                                   Editable=No }
    { 13  ;   ;Net Weight          ;Decimal       ;OnValidate=BEGIN
                                                                IF Quantity <> 0 THEN
                                                                  "Total Weight" := ROUND("Net Weight" * Quantity,0.00001)
                                                                ELSE
                                                                  "Total Weight" := 0;
                                                              END;

                                                   CaptionML=[ENU=Net Weight;
                                                              NOR=Nettovekt;
                                                              SVE=Nettovikt];
                                                   DecimalPlaces=2:5 }
    { 14  ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                IF "Cost Regulation %" <> 0 THEN
                                                                  VALIDATE("Cost Regulation %")
                                                                ELSE
                                                                  "Statistical Value" := Amount + "Indirect Cost";
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   DecimalPlaces=0:0 }
    { 15  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                IF (Quantity <> 0) AND Item.GET("Item No.") THEN
                                                                  VALIDATE("Net Weight",Item."Net Weight")
                                                                ELSE
                                                                  VALIDATE("Net Weight",0);
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5 }
    { 16  ;   ;Cost Regulation %   ;Decimal       ;OnValidate=BEGIN
                                                                "Indirect Cost" := ROUND(Amount * "Cost Regulation %" / 100,1);
                                                                "Statistical Value" := ROUND(Amount + "Indirect Cost",1);
                                                              END;

                                                   CaptionML=[ENU=Cost Regulation %;
                                                              NOR=Kostregulerings-%;
                                                              SVE=Omkostnad reglering %];
                                                   DecimalPlaces=2:2;
                                                   MinValue=-100;
                                                   MaxValue=100 }
    { 17  ;   ;Indirect Cost       ;Decimal       ;OnValidate=BEGIN
                                                                "Cost Regulation %" := 0;
                                                                "Statistical Value" := Amount + "Indirect Cost";
                                                              END;

                                                   CaptionML=[ENU=Indirect Cost;
                                                              NOR=Indirekte kost;
                                                              SVE=Indirekt kostnad];
                                                   DecimalPlaces=0:0 }
    { 18  ;   ;Statistical Value   ;Decimal       ;CaptionML=[ENU=Statistical Value;
                                                              NOR=Statistisk verdi;
                                                              SVE=Statistiskt v„rde];
                                                   DecimalPlaces=0:0;
                                                   Editable=No }
    { 19  ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              NOR=Bilagsnr.;
                                                              SVE=Dokumentnr] }
    { 20  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo <> 0 THEN //**4PS.n
                                                                  TESTFIELD("Source Type",0);

                                                                IF "Item No." = '' THEN
                                                                  CLEAR(Item)
                                                                ELSE
                                                                  Item.GET("Item No.");

                                                                Name := Item.Description;
                                                                "Tariff No." := Item."Tariff No.";
                                                                "Country/Region of Origin Code" := Item."Country/Region of Origin Code";
                                                                GetItemDescription;
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Varenr.;
                                                              SVE=Artikelnr] }
    { 21  ;   ;Name                ;Text100       ;CaptionML=[ENU=Name;
                                                              NOR=Navn;
                                                              SVE=Namn] }
    { 22  ;   ;Total Weight        ;Decimal       ;CaptionML=[ENU=Total Weight;
                                                              NOR=Totalvekt;
                                                              SVE=Totalvikt];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 23  ;   ;Supplementary Units ;Boolean       ;CaptionML=[ENU=Supplementary Units;
                                                              NOR=Supplerende enheter;
                                                              SVE=Kompletterande enhet kr„vs];
                                                   Editable=No }
    { 24  ;   ;Internal Ref. No.   ;Text10        ;CaptionML=[ENU=Internal Ref. No.;
                                                              NOR=Internt ref.nr.;
                                                              SVE=Intern referens till radnr];
                                                   Editable=No }
    { 25  ;   ;Country/Region of Origin Code;Code10;
                                                   TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region of Origin Code;
                                                              NOR=Opprinnelsesland/-omr†de - kode;
                                                              SVE=Kod f”r tillverkningsland/-region] }
    { 26  ;   ;Entry/Exit Point    ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Entry/Exit Point;
                                                              NOR=Inn/Utpunkt;
                                                              SVE=In-/utf”rselplats] }
    { 27  ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              NOR=Omr†de;
                                                              SVE=Omr†de] }
    { 28  ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              NOR=Transaksjonsspesifikasjon;
                                                              SVE=EU transaktionsspecifikation] }
    { 29  ;   ;Shpt. Method Code   ;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shpt. Method Code;
                                                              NOR=Leveringsm†tekode] }
    { 13400;  ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   CaptionML=[ENU=Unit of Measure;
                                                              SVE=Enhet];
                                                   Description=NAVFI (13400) }
    { 13401;  ;Quantity 2          ;Decimal       ;CaptionML=[ENU=Quantity 2;
                                                              SVE=Kvantitet 2];
                                                   Description=NAVFI (13401) }
    { 11012000;;Country of Origin/Destination;Code10;
                                                   TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country of Origin/Destination;
                                                              NOR=Opprinnelsesland/Destinasjonsland;
                                                              SVE=Ursprungsland/destinationsland] }
    { 11012010;;Vendor (Trade Item);Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=[ENU=Vendor (Trade Item);
                                                              NOR=Leverand›r (katalogartikkel);
                                                              SVE=Leverant”r (skaffningsartikel)];
                                                   Editable=No }
    { 11012020;;Trade Item         ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   OnValidate=VAR
                                                                lvTradeItemRec@1100525000 : Record 11012317;
                                                                lvServLedgerRec@1100525002 : Record 11012819;
                                                                lvJobLedgerRec@1100525003 : Record 11072005;
                                                                lvUnitOfMeasure@1100525001 : Code[10];
                                                              BEGIN
                                                                //**4PS02.n
                                                                lvTradeItemRec.GET("Vendor (Trade Item)","Trade Item");
                                                                "Tariff No." := lvTradeItemRec."CBS Code";
                                                                IF "Source Type" = "Source Type"::"Job Entry" THEN BEGIN
                                                                  IF lvJobLedgerRec.GET("Source Entry No.") THEN
                                                                    lvUnitOfMeasure := lvJobLedgerRec."Unit of Measure Code";
                                                                END;
                                                                IF "Source Type" = "Source Type"::"Service Entry" THEN BEGIN
                                                                  IF lvServLedgerRec.GET("Source Entry No.") THEN
                                                                    lvUnitOfMeasure := lvServLedgerRec."Unit of Measure Code";
                                                                END;
                                                                VALIDATE("Net Weight", lvTradeItemRec.GetNetWeight(lvUnitOfMeasure));
                                                                Name := lvTradeItemRec."Item Description";
                                                                IF TariffNumber.GET("Tariff No.") THEN
                                                                  GetItemDescription; //probably the tariff number of the gabi trade item doesn't exist in the tariff number table
                                                              END;

                                                   CaptionML=[ENU=Trade Item;
                                                              NOR=Katalogartikkel;
                                                              SVE=Anskaffningsartikel];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Journal Template Name,Journal Batch Name,Line No.;
                                                   Clustered=Yes }
    {    ;Source Type,Source Entry No.             }
    {    ;Type,Country/Region Code,Tariff No.,Transaction Type,Transport Method }
    {    ;Internal Ref. No.                        }
    {    ;Journal Template Name,Journal Batch Name,Type;
                                                   SumIndexFields=Total Weight,Amount,Statistical Value }
    {    ;Document No.                             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      IntraJnlTemplate@1000 : Record 261;
      IntrastatJnlBatch@1001 : Record 262;
      Item@1002 : Record 27;
      TariffNumber@1003 : Record 260;

    LOCAL PROCEDURE GetItemDescription@1();
    BEGIN
      IF "Tariff No." <> '' THEN BEGIN
        TariffNumber.GET("Tariff No.");
        "Item Description" := TariffNumber.Description;
        "Supplementary Units" := TariffNumber."Supplementary Units";
      END ELSE
        "Item Description" := '';
    END;

    LOCAL PROCEDURE CalculateTotalWeight@1070000();
    BEGIN
      //NAVSE
      IF ("Total Weight" > 0) AND ("Total Weight" < 0.5) THEN
        "Total Weight" := 1;
    END;

    [External]
    PROCEDURE IsOpenedFromBatch@42() : Boolean;
    VAR
      IntrastatJnlBatch@1002 : Record 262;
      TemplateFilter@1001 : Text;
      BatchFilter@1000 : Text;
    BEGIN
      BatchFilter := GETFILTER("Journal Batch Name");
      IF BatchFilter <> '' THEN BEGIN
        TemplateFilter := GETFILTER("Journal Template Name");
        IF TemplateFilter <> '' THEN
          IntrastatJnlBatch.SETFILTER("Journal Template Name",TemplateFilter);
        IntrastatJnlBatch.SETFILTER(Name,BatchFilter);
        IntrastatJnlBatch.FINDFIRST;
      END;

      EXIT((("Journal Batch Name" <> '') AND ("Journal Template Name" = '')) OR (BatchFilter <> ''));
    END;

    BEGIN
    {
      4PS01 JD 29-10-2008 Key "Journal Template Name,Journal Batch Name,Type" added, this was a bug in the standard that has been solved
                          in a later version (5.0).
      4PS02 JD 29-10-2008, Improvements for intrastat
    }
    END.
  }
}

