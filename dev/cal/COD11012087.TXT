OBJECT Codeunit 11012087 Document Portal Web Services
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ALIVE@1100525001 : TextConst 'ENU=Yes, I am alive!;SVE=JA, jag lever!';
      OK@1100525002 : TextConst 'ENU=Ok;NOR=OK;SVE=OK';
      DPT041@1100525006 : TextConst 'ENU=Error DPT41: Email Address %1 not found.';
      Text000@1100525000 : TextConst 'DEU=Beleg kann nicht eingegeben werden (%1 muss ausgefÅllt sein).;ENU=Document cannot be inserted (%1 must be filled).;NLD=Doocument kan niet toegevoegd worden (DocNo moet gevuld zijn).';
      Text001@1100528300 : TextConst 'DEU=In SharePoint geÑndert.;ENU=Modified in SharePoint.;NLD=Aangepast in Sharepoint.;SVE=éndrad i SharePoint.';
      Text002@1100528301 : TextConst 'ENU=%1 %2;NOR=%1 %2;SVE=%1 %2';
      Text003@1100525003 : TextConst 'ENU=Document not found.;SVE=Dokumentet hittas ej.';
      Text004@1100525004 : TextConst 'ENU=No vendors found and no mails send.;SVE=Inga leverantîrer funna och inga mail sÑnda.';
      Text005@1100528500 : TextConst 'DEU=%1 ''%2'' nicht gefunden.;ENU=%1 ''%2'' not found.;NLD=%1 ''%2'' niet gevonden.;SVE=%1 ''%2'' ej funnen.';
      SHAREPOINTSPLITSTRING@1100525005 : TextConst 'ENU=";#";SVE=";#"';

    [External]
    PROCEDURE IamAlive@1100528302() : Text[30];
    BEGIN
      EXIT(ALIVE);
    END;

    [External]
    PROCEDURE UpdateDocumentWebLink@1100528300(DocumentNo@1100528303 : Code[20];DocumentURL@1100528302 : Text[250];PrivateToPublic@1100409000 : Boolean) : Text[30];
    VAR
      DocumentProperties@1100409001 : Record 11012746;
    BEGIN
      DocumentProperties.GET(DocumentNo);
      IF (DocumentURL <> '') THEN
        DocumentProperties.VALIDATE(File, '');
      DocumentProperties."Web link" := DocumentURL;
      IF (PrivateToPublic) THEN
        DocumentProperties."Private Company Document" := FALSE;
      DocumentProperties.MODIFY;
      EXIT(OK);
    END;

    [External]
    PROCEDURE UpdateDocumentFileLocation@1100528303(DocumentNo@1100528301 : Code[20];DocumentFileLocation@1100528302 : Text[250]) : Text[30];
    VAR
      DocumentProperties@1100528300 : Record 11012746;
    BEGIN
      IF (NOT DocumentProperties.GET(DocumentNo)) THEN
        EXIT(Text003);

      IF (DocumentFileLocation <> '') THEN BEGIN
        DocumentProperties.VALIDATE("Web link", '');
        DocumentProperties.File := DocumentFileLocation;
        DocumentProperties.MODIFY;
      END;
      EXIT(OK);
    END;

    [External]
    PROCEDURE GetNewDocumentNo@1100525002() : Code[20];
    VAR
      DocumentMgtSetup@1100525001 : Record 11071831;
      NoSeriesMgt@1100525002 : Codeunit 396;
      NewDocumentNo@1100525003 : Code[20];
    BEGIN
      DocumentMgtSetup.GET;
      DocumentMgtSetup.TESTFIELD("External Document Nos.");
      NewDocumentNo := NoSeriesMgt.GetNextNo(DocumentMgtSetup."External Document Nos.", TODAY, TRUE);
      EXIT(NewDocumentNo);
    END;

    [External]
    PROCEDURE AddDocument@1100528301(DocNo@1100525000 : Code[20];DocDescription@1100528301 : Text[50];DocSite@1100528303 : Code[20];DocType@1100528302 : Code[50];DocCompanyId@1100528304 : Text[50];Version@1100525002 : Text[10];DocWebLink@1100528307 : Text[250];ProjectNo@1100528305 : Code[20];ProjectElement@1100528315 : Code[20];ContactNo@1100528320 : Code[20];ContactPersonNo@1100528314 : Code[20];UserId@1100528316 : Code[50];UserInternalExternal@1100525001 : Text[10];CreatedBy@1100528313 : Text[132];CreatedOn@1100528312 : Text[20];DocumentDate@1100528309 : Text[10];ModificationDate@1100528311 : Text[10];DocumentNo@1100528318 : Code[20];Status@1100528319 : Integer;PlotNo@1100525003 : Text) : Code[20];
    VAR
      DocumentProperties@1100528306 : Record 11012746;
      Job@1100528300 : Record 11072003;
      XMLFormat4PS@1100528310 : Codeunit 11020221;
    BEGIN
      IF (ProjectNo = '') THEN
        ERROR(Text000, 'ProjectNo');

      IF (NOT DocumentProperties.GET(DocNo)) THEN BEGIN
        DocumentProperties.INIT;
        DocumentProperties."No." := DocNo;
        DocumentProperties.INSERT(TRUE);
        IF (Job.GET(ProjectNo)) THEN BEGIN
          DocumentProperties.CreateDocumentLink(Job.RECORDID);
        END ELSE
          ERROR(Text005, Job.TABLECAPTION, ProjectNo);
      END;

      CreatePlotDocumentLinks(DocumentProperties,PlotNo,ProjectNo);

      DocumentProperties.Description := DocDescription;
      DocumentProperties."Project Portal Subsite" := DocSite;
      DocumentProperties."Document Type" := GetDocumentTypeFromGuid(DocType);
      DocumentProperties."Web link" := DocWebLink;
      DocumentProperties."External Document" := TRUE;
      DocumentProperties."Project Element" := ProjectElement;
      DocumentProperties."Private Company Document" := (DocCompanyId <> '');
      XMLFormat4PS.EvaluateDate(DocumentDate, DocumentProperties."Document Date");
      IF (ModificationDate <> '') THEN
        SetDocumentModificationDate(DocumentProperties, ModificationDate);
      DocumentProperties."Document No." := DocumentNo;
      DocumentProperties.Status := Status;
      SetDocumentUser(DocumentProperties, UserId, UserInternalExternal);
      DocumentProperties."Contact No." := ContactNo;
      IF (DocCompanyId <> '') THEN
        DocumentProperties."Contact No." := GetContactNoFromGuid(DocCompanyId);
      DocumentProperties."Contact Person No." := ContactPersonNo;
      IF (STRLEN(CreatedOn) = 19) THEN
        XMLFormat4PS.EvaluateDateAndTime(CreatedOn, DocumentProperties."Creation Date",
          DocumentProperties."Creation Time");
      DocumentProperties."File Extension" := COPYSTR(DocumentProperties."Web link" ,STRLEN(DocumentProperties."Web link" ) - 2,3);
      DocumentProperties.MODIFY;

      IF (Version <> '') THEN
        UpdateDocumentVersion(ProjectNo, DocumentProperties."No.", Version, FALSE, '');
      EXIT(DocumentProperties."No.");
    END;

    [External]
    PROCEDURE DeleteDocument@1100528308(DocumentNo@1100528300 : Code[20]) : Text[30];
    VAR
      DocumentProperties@1100528301 : Record 11012746;
      DocumentLink@1100528302 : Record 11012747;
    BEGIN
      IF (DocumentProperties.GET(DocumentNo)) THEN BEGIN
        DocumentLink.SETRANGE("Document No.", DocumentNo);
        DocumentLink.DELETEALL;
        DocumentProperties.DELETE(TRUE);
      END;
      EXIT(OK);
    END;

    LOCAL PROCEDURE UpdateDocumentVersion@1100525003(ProjectNo@1100525003 : Code[20];DocumentNo@1100525000 : Code[20];Version@1100525001 : Text[10];Published@1100525002 : Boolean;WebLink@1100525004 : Text[250]);
    VAR
      DocumentVersionsPPT@1100525005 : Record 11229809;
    BEGIN
      IF (NOT DocumentVersionsPPT.GET(ProjectNo, DocumentNo, Version)) THEN BEGIN
        DocumentVersionsPPT.INIT;
        DocumentVersionsPPT."Project No." := ProjectNo;
        DocumentVersionsPPT."Document No." := DocumentNo;
        DocumentVersionsPPT.Version := Version;
        DocumentVersionsPPT.INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE DeleteDocumentVersion@1100409000(ProjectNo@1100525003 : Code[20];DocumentNo@1100525000 : Code[20];Version@1100525001 : Text[10]);
    VAR
      DocumentVersionsPPT@1100525005 : Record 11229809;
    BEGIN
      IF (DocumentVersionsPPT.GET(ProjectNo, DocumentNo, Version)) THEN
        DocumentVersionsPPT.DELETE(TRUE);
    END;

    [External]
    PROCEDURE SetDocumentMembers@1100528305(DocumentNo@1100528300 : Code[20];ProjectNo@1100525001 : Code[20];VAR DocumentMembersWSPPT@1100525002 : XMLport 11229162);
    VAR
      Job@1100528301 : Record 11072003;
      DocumentProperties@1100528303 : Record 11012746;
      DocumentLink@1100525000 : Record 11012747;
      RecRef@1100525003 : RecordRef;
    BEGIN
      Job.GET(ProjectNo);
      DocumentProperties.GET(DocumentNo);
      RecRef.GETTABLE(Job);
      DocumentLink.SETCURRENTKEY("Record ID");
      DocumentLink.SETRANGE("Record ID", RecRef.RECORDID);
      DocumentLink.SETRANGE("Table No.", DATABASE::Job);
      DocumentLink.SETRANGE("Internal Company", COMPANYNAME);
      DocumentLink.FINDSET;

      DocumentMembersWSPPT.SetProjectNo(ProjectNo);
      DocumentProperties.SETRANGE("No.", DocumentNo);
      DocumentMembersWSPPT.SETTABLEVIEW(DocumentProperties);
      DocumentMembersWSPPT.EXPORT;
    END;

    [External]
    PROCEDURE AddQuoteDocument@1100528312(ProjectNo@1100528304 : Code[20];QuoteNo@1100528300 : Code[20];DocumentNo@1100528301 : Code[20];DocumentURL@1100528303 : Text[250]) : Text[30];
    VAR
      PurchaseHeader@1100528302 : Record 38;
      DocumentProperties@1100528305 : Record 11012746;
      Job@1100528306 : Record 11072003;
      ProjectPurchaseAction@1100528308 : Record 11012026;
      Contact@1100528313 : Record 5050;
      ContactBusinessRelation@1100528314 : Record 5054;
      Vendor@1100528311 : Record 23;
      SubsiteDocTypePPT@1100528312 : Record 11229811;
      DocumentLinkMgt@1100528309 : Codeunit 11012401;
      RecRef@1100528307 : RecordRef;
      RID@1100528310 : ARRAY [5] OF RecordID;
    BEGIN
      PurchaseHeader.GET(PurchaseHeader."Document Type"::Quote, QuoteNo);
      RecRef.GETTABLE(PurchaseHeader);
      RID[1] := RecRef.RECORDID;

      SubsiteDocTypePPT.SETRANGE("Default Quote Subsite", TRUE);
      SubsiteDocTypePPT.FINDFIRST;

      IF (NOT DocumentProperties.GET(DocumentNo)) THEN BEGIN
        DocumentProperties.INIT;
        DocumentProperties."No." := DocumentNo;
        DocumentProperties.INSERT(TRUE);
      END;
      ContactBusinessRelation.SETRANGE("Link to Table", ContactBusinessRelation."Link to Table"::Vendor);
      ContactBusinessRelation.SETRANGE("No.", PurchaseHeader."Buy-from Vendor No.");
      IF (NOT ContactBusinessRelation.FINDFIRST) THEN
          ContactBusinessRelation.INIT;
      IF (NOT Contact.GET(ContactBusinessRelation."Contact No.")) THEN
        Contact.INIT;

      IF (DocumentProperties."Project Portal Publish Date" = 0DT) THEN BEGIN
        ModifyQuoteDocumentProperties(DocumentProperties, PurchaseHeader, Contact, DocumentURL,
          SubsiteDocTypePPT."Project Portal Subsite", SubsiteDocTypePPT."Document Type");
        Job.GET(ProjectNo);
        RecRef.GETTABLE(Job);
        RID[2] := RecRef.RECORDID;
        ProjectPurchaseAction.GET(ProjectNo, PurchaseHeader."Purchase Action");
        RecRef.GETTABLE(ProjectPurchaseAction);
        RID[3] := RecRef.RECORDID;
        IF (Vendor.GET(PurchaseHeader."Buy-from Vendor No.")) THEN BEGIN
          RecRef.GETTABLE(Vendor);
          RID[4] := RecRef.RECORDID;
        END;
        DocumentLinkMgt.CreateDocumentLink(DocumentProperties, RID);
      END;

      PurchaseHeader."Quote Status" := PurchaseHeader."Quote Status"::Received;
      PurchaseHeader."Quote Receipt Date" := TODAY;
      PurchaseHeader.MODIFY;
      EXIT(Contact."E-Mail 2");
    END;

    [External]
    PROCEDURE TrackingReminderMail@1100528313(ProjectNo@1100528300 : Code[20];RequestNo@1100528301 : Code[20];ContactEmail@1100528308 : Text[80]) : Text[30];
    VAR
      Job@1100528304 : Record 11072003;
      ProjectPurchaseAction@1100528302 : Record 11012026;
      VendorsByPurchaseAction@1100528305 : Record 11012068;
      Contact@1100528306 : Record 5050;
      Employee@1100528307 : Record 5200;
      ProjectPortalAccessEmail@1100528303 : Codeunit 11012204;
      DocumentPortalManagement@1100529900 : Codeunit 11012203;
    BEGIN
      Job.GET(ProjectNo);
      Job.TESTFIELD("Project Manager");
      Employee.GET(Job."Project Manager");
      Employee.TESTFIELD("Company E-Mail");
      ProjectPurchaseAction.GET(ProjectNo, RequestNo);

      VendorsByPurchaseAction.SETRANGE(Source, VendorsByPurchaseAction.Source::Project);
      VendorsByPurchaseAction.SETRANGE("Estimate No.", '');
      VendorsByPurchaseAction.SETRANGE("Project No.", ProjectNo);
      VendorsByPurchaseAction.SETRANGE("Purchase Action", RequestNo);
      IF (NOT VendorsByPurchaseAction.FINDSET) THEN
        ERROR(Text004);

      REPEAT
        DocumentPortalManagement.GetContactFromVendorsByPurchaseAction(VendorsByPurchaseAction, Contact);
      UNTIL (VendorsByPurchaseAction.NEXT = 0) OR (Contact."E-Mail 2" = ContactEmail);
      IF (Contact."E-Mail 2" = '') THEN
        ERROR(DPT041, ContactEmail);

      ProjectPortalAccessEmail.SetEmailToAddress(Contact."E-Mail 2");
      ProjectPortalAccessEmail.SetProjectPurchaseActionRec(VendorsByPurchaseAction."Project No.", VendorsByPurchaseAction."Purchase Action");
      ProjectPortalAccessEmail.SetType(4); //Qoute Reminder E-mail
      ProjectPortalAccessEmail.RUN;
      EXIT(OK);
    END;

    LOCAL PROCEDURE SetDocumentUser@1100525000(VAR DocumentProperties@1100525002 : Record 11012746;UserId@1100525001 : Code[50];InternalExternal@1100525000 : Text[10]);
    VAR
      Employee@1100525003 : Record 5200;
      UserSetup@1100525004 : Record 91;
      Contact@1100525005 : Record 5050;
    BEGIN
      CASE InternalExternal OF
        'Intern': BEGIN
          IF (Employee.GET(UserId)) THEN BEGIN
            UserSetup.SETRANGE("Employee No.", UserId);
            IF (NOT UserSetup.FINDFIRST) THEN
              UserSetup."User ID" := UserId;
            DocumentProperties."User ID" := UserSetup."User ID";
            DocumentProperties.Editor := Employee."No.";
          END;
        END;
        'Extern': BEGIN
          IF (Contact.GET(GetContactNoFromGuid(UserId))) THEN BEGIN
            DocumentProperties.Sender := Contact."No.";
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE GetContactNoFromGuid@1100528304(ProjectPortalGuid@1100528300 : Code[50]) : Code[20];
    VAR
      Contact@1100528301 : Record 5050;
    BEGIN
      EXIT(Contact.GetContactNoFromGuid(ProjectPortalGuid));
    END;

    LOCAL PROCEDURE GetDocumentTypeFromGuid@1100528309(ProjectPortalGuid@1100528300 : Code[50]) : Code[20];
    VAR
      DocumentType@1100528301 : Record 11012405;
    BEGIN
      EXIT(DocumentType.GetDocumentTypeFromGuid(ProjectPortalGuid));
    END;

    LOCAL PROCEDURE GetCompanyNameFromGuid@1100528311(ProjectPortalGuid@1100528300 : Code[50]) : Text[30];
    VAR
      CompanyData@1100528301 : Record 11020674;
    BEGIN
      EXIT(CompanyData.GetCompanyNameFromGuid(ProjectPortalGuid));
    END;

    [External]
    PROCEDURE GetDocumentCommentLines@1100528306(DocNo@1100528301 : Code[20];VAR CommentLinePPT@1100528300 : XMLport 11229163);
    VAR
      CommentLine@1100528302 : Record 97;
    BEGIN
      CommentLine.SETRANGE("Table Name", CommentLine."Table Name"::"Document Properties");
      CommentLine.SETRANGE("No.", DocNo);
      CommentLinePPT.SETTABLEVIEW(CommentLine);
      CommentLinePPT.EXPORT;
    END;

    [External]
    PROCEDURE SetDocumentCommentLines@1100528310(CommentLinePPT@1100528300 : XMLport 11229163);
    BEGIN
      CommentLinePPT.IMPORT;
    END;

    [External]
    PROCEDURE SetDocumentVersions@1100528318(DocumentVersionsPPT@1100528300 : XMLport 11229164);
    BEGIN
      DocumentVersionsPPT.IMPORT;
    END;

    LOCAL PROCEDURE SetDocumentModificationDate@1100528314(DocumentProperties@1100528300 : Record 11012746;ModificationDate@1100528301 : Text[10]);
    VAR
      DocumentModificationDate@1100528303 : Record 11012406;
      XMLFormat4PS@1100528302 : Codeunit 11020221;
      LastLineNo@1100528304 : Integer;
      DocModificationDate@1100528305 : Date;
    BEGIN
      XMLFormat4PS.EvaluateDate(ModificationDate, DocModificationDate);

      DocumentModificationDate.SETRANGE("Document No.", DocumentProperties."No.");
      IF (DocumentModificationDate.FINDLAST) THEN
        LastLineNo := DocumentModificationDate."Line No."
      ELSE
        DocumentModificationDate.INIT;

      IF (DocumentModificationDate.Date <> DocModificationDate) THEN BEGIN
        LastLineNo += 10000;
        DocumentModificationDate.INIT;
        DocumentModificationDate."Document No." := DocumentProperties."No.";
        DocumentModificationDate."Line No." := LastLineNo;
        DocumentModificationDate.Date := DocModificationDate;
        DocumentModificationDate.Comment := STRSUBSTNO(Text001);
        DocumentModificationDate.INSERT;
      END;
    END;

    LOCAL PROCEDURE GetContactFromVendor@1100528315(VendorNo@1100528300 : Code[20];VAR Contact@1100528301 : Record 5050);
    VAR
      ContactBusinessRelation@1100528302 : Record 5054;
    BEGIN
      ContactBusinessRelation.SETCURRENTKEY("Link to Table", "No.");
      ContactBusinessRelation.SETRANGE("Link to Table", ContactBusinessRelation."Link to Table"::Vendor);
      ContactBusinessRelation.SETRANGE("No.", VendorNo);
      IF (ContactBusinessRelation.FINDFIRST) THEN
        Contact.GET(ContactBusinessRelation."Contact No.")
      ELSE
        Contact.INIT;
    END;

    LOCAL PROCEDURE ModifyQuoteDocumentProperties@1100528317(VAR DocumentProperties@1100528300 : Record 11012746;PurchaseHeader@1100528301 : Record 38;Contact@1100528306 : Record 5050;DocumentURL@1100528302 : Text[250];SubSite@1100528304 : Code[20];DocType@1100528305 : Code[20]);
    BEGIN
      DocumentProperties."Contact No." := Contact."No.";
      DocumentProperties.Description := STRSUBSTNO(Text002, PurchaseHeader."Document Type", PurchaseHeader."No.");
      //DocumentProperties."Internal Company" := COMPANYNAME;
      DocumentProperties."External Document" := TRUE;
      DocumentProperties.Status := DocumentProperties.Status::Definite;
      DocumentProperties."Web link" := DocumentURL;
      DocumentProperties."Project Portal Subsite" := SubSite;
      DocumentProperties."Document Type" := DocType;
      DocumentProperties."Private Company Document" := TRUE;
      DocumentProperties."Project Portal Publish Date" := CURRENTDATETIME;

      DocumentProperties.MODIFY; //(TRUE);
    END;

    LOCAL PROCEDURE DococumentPropertiesMustBeUpdated@1100528316(NewDocumentProperties@1100528300 : Record 11012746) : Boolean;
    VAR
      DocumentProperties@1100528301 : Record 11012746;
    BEGIN
      DocumentProperties.GET(NewDocumentProperties."No.");
      IF (FORMAT(NewDocumentProperties) <> FORMAT(DocumentProperties)) THEN
        EXIT(TRUE);
      EXIT(FALSE);
    END;

    [External]
    PROCEDURE GetCompanyNoFBAUser@1100528319(ProjectNo@1100528300 : Code[20];LoginCode@1100528301 : Text[100]) : Text[50];
    VAR
      ProjectAuthority@1100528302 : Record 11020216;
      Contact@1100528303 : Record 5050;
    BEGIN
      ProjectAuthority.SETRANGE("Project No.", ProjectNo);
      IF (NOT ProjectAuthority.FINDSET) THEN
        EXIT('');
      REPEAT
        IF (ProjectAuthority."Contact Person No." <> '') THEN
          Contact.GET(ProjectAuthority."Contact Person No.")
        ELSE
          Contact.GET(ProjectAuthority."Contact No.");
        IF (Contact."E-Mail 2" = LoginCode) THEN BEGIN
          IF (Contact."Company No." <> '') THEN
            EXIT(Contact."Company No.") //Company or CP
          ELSE
            EXIT(Contact."No."); //Stand alone Person
        END;
      UNTIL (ProjectAuthority.NEXT = 0);
      EXIT('');
    END;

    [External]
    PROCEDURE GetWebLink@1100409001(DocumentNo@1100409000 : Code[20]) : Text;
    VAR
      DocumentProperties@1100409001 : Record 11012746;
    BEGIN
      IF (DocumentProperties.GET(DocumentNo)) THEN
        EXIT(DocumentProperties."Web link");
      EXIT('');
    END;

    [External]
    PROCEDURE GetContactPersonStringFromPurchaseAction@1100525001(ProjectNo@1100525001 : Code[20];PurchaseActionCode@1100525002 : Code[10];LoginName@1100525000 : Text) : Text;
    VAR
      Job@1100525003 : Record 11072003;
      ProjectPurchaseAction@1100525004 : Record 11012026;
      VendorsbyPurchaseAction@1100525005 : Record 11012068;
      Contact@1100525006 : Record 5050;
      Contact2@1100525008 : Record 5050;
      DocumentPortalManagement@1100525007 : Codeunit 11012203;
    BEGIN
      VendorsbyPurchaseAction.SETRANGE(Source, VendorsbyPurchaseAction.Source::Project);
      VendorsbyPurchaseAction.SETRANGE("Estimate No.", '');
      VendorsbyPurchaseAction.SETRANGE("Project No.", ProjectNo);
      IF (NOT VendorsbyPurchaseAction.FINDSET) THEN
        EXIT('');

      REPEAT
        Contact.RESET;
        DocumentPortalManagement.GetContactFromVendorsByPurchaseAction(VendorsbyPurchaseAction, Contact);
        IF (Contact."Company No." <> '') THEN BEGIN
          Contact2.SETFILTER("No.", '<>%1', Contact."Company No.");
          Contact2.SETRANGE("Company No.", Contact."Company No.");
          IF (Contact2.FINDSET) THEN BEGIN
            REPEAT
              IF (Contact2."E-Mail 2" = LoginName) THEN BEGIN
                Contact.GET(Contact2."Company No.");
                EXIT(STRSUBSTNO('%1: %2; %3: %4', Contact."No.", Contact.Name, Contact2."No.", Contact2.Name));
              END;
            UNTIL (Contact2.NEXT = 0);
          END;
        END;
      UNTIL (VendorsbyPurchaseAction.NEXT = 0);
      EXIT('');
    END;

    LOCAL PROCEDURE CreatePlotDocumentLinks@1100525006(VAR DocumentProperties@1100525000 : Record 11012746;VAR PlotNumbers@1100525001 : Text;ProjectNo@1100525005 : Code[20]);
    VAR
      Plots@1100525003 : ARRAY [100] OF Text;
      StringFunctions@1100525002 : Codeunit 11012273;
      i@1100525004 : Integer;
      Plot@1100525006 : Record 11012500;
      DocumentLink@1100525007 : Record 11012747;
    BEGIN

      StringFunctions.SplitString(PlotNumbers,SHAREPOINTSPLITSTRING,Plots);

      DocumentLink.SETRANGE("Document No.",DocumentProperties."No.");
      DocumentLink.SETRANGE("Table No.",DATABASE::Plot);
      DocumentLink.DELETEALL;

      FOR i:= 1 TO ARRAYLEN(Plots) DO BEGIN
          IF (Plot.GET(ProjectNo,Plots[i])) THEN BEGIN
            DocumentProperties.CreateDocumentLink(Plot.RECORDID);
          END;
      END;
    END;

    BEGIN
    {
      This codeunit is used in the 4PS Project Portal
    }
    END.
  }
}

