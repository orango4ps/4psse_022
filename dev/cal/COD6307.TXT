OBJECT Codeunit 6307 PBI Aged Inventory Calc.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TempBusinessChartBuffer@1006 : TEMPORARY Record 485;
      AgedInventoryChartMgt@1000 : Codeunit 1317;

    PROCEDURE GetValues@1(VAR TempPowerBIChartBuffer@1000 : TEMPORARY Record 6305);
    VAR
      SelectedChartDefinition@1002 : Record 1310;
      ChartManagement@1003 : Codeunit 1315;
      i@1001 : Integer;
      DummyInvtValue@1007 : ARRAY [5] OF Decimal;
      PeriodStartDate@1006 : ARRAY [6] OF Date;
    BEGIN
      FOR i := 0 TO 4 DO BEGIN
        CLEAR(DummyInvtValue);
        ChartManagement.SetPeriodLength(SelectedChartDefinition,TempBusinessChartBuffer,i,FALSE);
        CalcPeriodStartDates(PeriodStartDate,AgedInventoryChartMgt.GetPeriodLengthInDays(TempBusinessChartBuffer));
        AgedInventoryChartMgt.CalcInventoryValuePerAge(DummyInvtValue,PeriodStartDate);
        InsertToBuffer(TempPowerBIChartBuffer,DummyInvtValue);
      END;
    END;

    LOCAL PROCEDURE CalcPeriodStartDates@4047(VAR PeriodStartDate@4047 : ARRAY [6] OF Date;PeriodLength@4049 : Integer);
    VAR
      LogInManagement@1000 : Codeunit 40;
      I@4048 : Integer;
    BEGIN
      PeriodStartDate[6] := LogInManagement.GetDefaultWorkDate;
      PeriodStartDate[1] := 0D;
      FOR I := 2 TO 5 DO
        PeriodStartDate[I] := CALCDATE('<-' + FORMAT((6 - I) * PeriodLength) + 'D>',PeriodStartDate[6]);
    END;

    LOCAL PROCEDURE InsertToBuffer@10(VAR TempPowerBIChartBuffer@1002 : TEMPORARY Record 6305;pInvtValue@1001 : ARRAY [5] OF Decimal);
    VAR
      i@1000 : Integer;
    BEGIN
      WITH TempPowerBIChartBuffer DO
        FOR i := 1 TO 5 DO BEGIN
          IF FINDLAST THEN
            ID += 1
          ELSE
            ID := 1;
          Value := pInvtValue[i];
          "Period Type" := TempBusinessChartBuffer."Period Length";
          Date := AddChartColumns(TempBusinessChartBuffer,-i);
          "Period Type Sorting" := "Period Type";
          INSERT;
        END
    END;

    LOCAL PROCEDURE AddChartColumns@4051(VAR BusChartBuf@4047 : Record 485;I@1002 : Integer) : Text[30];
    VAR
      AgedInventoryChartMgt@1003 : Codeunit 1317;
      PeriodLengthOnXAxis@4049 : Integer;
      XAxisValueTxt@1000 : Text[30];
      LastXAxisValueTxt@1001 : Text[30];
      J@1004 : Integer;
      Value1@1005 : Integer;
      Value2@1006 : Integer;
    BEGIN
      I := I + 5;

      WITH BusChartBuf DO BEGIN
        PeriodLengthOnXAxis := AgedInventoryChartMgt.GetPeriodLengthInDays(BusChartBuf);
        IF PeriodLengthOnXAxis = 365 THEN BEGIN
          PeriodLengthOnXAxis := 1;
          XAxisValueTxt := AgedInventoryChartMgt.FromToYearsTxt;
          LastXAxisValueTxt := AgedInventoryChartMgt.OverYearsTxt;
        END ELSE BEGIN
          XAxisValueTxt := AgedInventoryChartMgt.FromToDaysTxt;
          LastXAxisValueTxt := AgedInventoryChartMgt.OverDaysTxt;
        END;
        IF I < 4 THEN BEGIN
          J := I + 1;
          Value1 := I * PeriodLengthOnXAxis;
          Value2 := J * PeriodLengthOnXAxis;
          EXIT(STRSUBSTNO(XAxisValueTxt,Value1,Value2));  // X-Axis value
        END;
      END;
      EXIT(STRSUBSTNO(LastXAxisValueTxt,FORMAT(4 * PeriodLengthOnXAxis)));  // X-Axis value
    END;

    BEGIN
    END.
  }
}

