OBJECT Table 11012193 Estimate Composition for Quote
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Estimate Composition for Quote;
               NOR=Kalkylesammensetning for tilbud;
               SVE=Ackordkalkyl f”r offert];
  }
  FIELDS
  {
    { 10  ;   ;Estimate No.        ;Code20        ;TableRelation=Estimate.No.;
                                                   CaptionML=[ENU=Estimate No.;
                                                              NOR=Kalkylenr;
                                                              SVE=Kalkylnr];
                                                   Editable=No }
    { 20  ;   ;Sub-Estimate No.    ;Code20        ;TableRelation=Sub-Estimate."Sub-Estimate No." WHERE (Estimate No.=FIELD(Estimate No.));
                                                   CaptionML=[ENU=Sub-Estimate No.;
                                                              NOR=Delkalkylenummer;
                                                              SVE=Delkalkylnr] }
    { 25  ;   ;Part Group          ;Code10        ;TableRelation="Estimate Part"."Part Group" WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                     Sub-Estimate No.=FIELD(Sub-Estimate No.));
                                                   CaptionML=[ENU=Part Group;
                                                              NOR=Del gruppe;
                                                              SVE=Delgrupp] }
    { 30  ;   ;Part                ;Code20        ;TableRelation="Estimate Part".Part WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                             Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                                                                             Part Group=FIELD(Part Group));
                                                   CaptionML=[ENU=Part;
                                                              NOR=Del;
                                                              SVE=Del] }
    { 40  ;   ;Estimate Line       ;Integer       ;TableRelation="Estimate Line"."Line No." WHERE (Estimate No.=FIELD(Estimate No.),
                                                                                                   Sub-Estimate No.=FIELD(Sub-Estimate No.),
                                                                                                   Part Group=FIELD(Part Group),
                                                                                                   Part=FIELD(Part));
                                                   CaptionML=[ENU=Estimate Line;
                                                              NOR=Kalkylerad;
                                                              SVE=Uppskattningsrad] }
    { 50  ;   ;Recipe Line         ;Integer       ;CaptionML=[ENU=Recipe Line;
                                                              NOR=Malrad;
                                                              SVE=Mallrad] }
    { 51  ;   ;Recipe              ;Code20        ;TableRelation="Base Recipe".No. WHERE (Recipe Group=FIELD(Recipe Group));
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Recipe;
                                                              NOR=Mal;
                                                              SVE=Mall] }
    { 52  ;   ;Recipe Group        ;Code10        ;TableRelation="Recipe Group".No.;
                                                   CaptionML=[ENU=Recipe Group;
                                                              NOR=Maltype;
                                                              SVE=Malltyp] }
    { 55  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 60  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning];
                                                   Editable=No }
    { 65  ;   ;Cost Type           ;Option        ;CaptionML=[ENU=Cost Type;
                                                              NOR=Kostnadstype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=" ,Material,Subcontracting,Plant,Sundry";
                                                                    SVE=" ,Material,Underentreprenad,Maskin,Diverse"];
                                                   OptionString=[ ,Material,Subcontracting,Plant,Sundry];
                                                   Description=DP00381;
                                                   Editable=No }
    { 70  ;   ;Cost Object         ;Code20        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   Editable=No;
                                                   CaptionClass='1,1,2' }
    { 72  ;   ;Cost Object Material;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Material),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Cost Object Material;
                                                              NOR=Kostnadsobjekt, Materiale;
                                                              SVE=Kostnadsobjekt, material];
                                                   Editable=No }
    { 73  ;   ;Cost Object Subcontracting;Code20  ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Subcontracting),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Cost Object Subcontracting;
                                                              NOR=Kostnadsobjekt, Underleverand›r;
                                                              SVE=Kostnadsobjekt, underentreprenad];
                                                   Editable=No }
    { 74  ;   ;Cost Object Plant   ;Code20        ;TableRelation="Dimension Value".Code WHERE (Cost Type=CONST(Plant),
                                                                                               Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Cost Object Plant;
                                                              NOR=Kostnadsobjekt, maskin;
                                                              SVE=Kostnadsobjekt, Maskin];
                                                   Editable=No }
    { 75  ;   ;Compressed          ;Boolean       ;CaptionML=[ENU=Compressed;
                                                              NOR=Komprimert;
                                                              SVE=Komprimerad] }
    { 80  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 90  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=Enhet;
                                                              SVE=M†ttenhet];
                                                   Editable=No }
    { 100 ;   ;Norm                ;Decimal       ;CaptionML=[ENU=Norm;
                                                              NOR=Norm;
                                                              SVE=Norm];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 110 ;   ;Material Price      ;Decimal       ;CaptionML=[ENU=Material Price;
                                                              NOR=Materialepris;
                                                              SVE=Materialpris];
                                                   AutoFormatType=2 }
    { 115 ;   ;Discount %          ;Decimal       ;CaptionML=[ENU=Discount %;
                                                              NOR=Rabatt-%;
                                                              SVE=Rabatt %];
                                                   DecimalPlaces=0:5 }
    { 120 ;   ;Gross Price         ;Decimal       ;CaptionML=[ENU=Gross Price;
                                                              NOR=Bruttopris;
                                                              SVE=Bruttopris];
                                                   AutoFormatType=2 }
    { 130 ;   ;Subcontracting Price;Decimal       ;CaptionML=[ENU=Subcontracting Price;
                                                              NOR=Underentrepen›rpris;
                                                              SVE=Underentreprenadspris];
                                                   AutoFormatType=2 }
    { 140 ;   ;Plant Price         ;Decimal       ;CaptionML=[ENU=Plant Price;
                                                              NOR=Maskinpris;
                                                              SVE=Maskinpris];
                                                   AutoFormatType=2 }
    { 150 ;   ;Rate Code           ;Code10        ;TableRelation="Estimate Rate"."Rate Code" WHERE (Estimate No.=FIELD(Estimate No.));
                                                   CaptionML=[ENU=Rate Code;
                                                              NOR=Avgiftskode;
                                                              SVE=Avgiftskod];
                                                   Editable=No }
    { 151 ;   ;Rate                ;Decimal       ;CaptionML=[ENU=Rate;
                                                              NOR=Avgift;
                                                              SVE=Avgift];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 152 ;   ;Rate Type           ;Option        ;CaptionML=[ENU=Rate Type;
                                                              NOR=Avgiftstype;
                                                              SVE=Avgiftstyp];
                                                   OptionCaptionML=[ENU=Hours,Minuts;
                                                                    NOR=Timer,Minutter;
                                                                    SVE=Timmar,Minuter];
                                                   OptionString=Hours,Minuts;
                                                   Editable=No }
    { 153 ;   ;Team Size           ;Decimal       ;CaptionML=[ENU=Team Size;
                                                              NOR=Teamst›rrelse;
                                                              SVE=Teamstorlek];
                                                   Editable=No }
    { 160 ;   ;Text Composition    ;Code140       ;CaptionML=[ENU=Text Composition;
                                                              NOR=Tekstsammensettning;
                                                              SVE=Textsammans„ttning];
                                                   Editable=No }
    { 170 ;   ;Purchase Route Reference;Code20    ;CaptionML=[ENU=Purchase Route Reference;
                                                              NOR=Referanse for Innkj›psrute;
                                                              SVE=Referens f”r ink”psf”ljd];
                                                   Editable=No }
    { 180 ;   ;Subcontracting Activity;Code10     ;TableRelation="Subcontracting Activity".Code;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Subcontracting Activity;
                                                   Description=DP01492-2 }
    { 200 ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Varenr.;
                                                              SVE=Artikelnr] }
    { 210 ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   CaptionML=[ENU=Basic Item;
                                                              NOR=Fabrikantartikkel;
                                                              SVE=Basartikel] }
    { 220 ;   ;Trade Item          ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   CaptionML=[ENU=Trade Item;
                                                              NOR=Katalogartikkel;
                                                              SVE=Anskaffningsartikel] }
    { 240 ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=[ENU=Vendor (Trade Item);
                                                              NOR=Leverand›r (katalogartikkel);
                                                              SVE=Leverant”r (skaffningsartikel)] }
    { 250 ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=[ENU=Manufacturer;
                                                              NOR=Produsent;
                                                              SVE=Tillverkare] }
    { 260 ;   ;Purchaser Code      ;Code20        ;TableRelation=Salesperson/Purchaser;
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Purchaser Name");
                                                              END;

                                                   CaptionML=[ENU=Purchaser Code;
                                                              NOR=Innkj›perkode;
                                                              SVE=Ink”parkod];
                                                   Editable=No }
    { 271 ;   ;Purchaser Name      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Salesperson/Purchaser.Name WHERE (Code=FIELD(Purchaser Code)));
                                                   CaptionML=[ENU=Purchaser Name;
                                                              NOR=Innkj›perens navn;
                                                              SVE=Ink”parens namn];
                                                   Editable=No }
    { 280 ;   ;Vendor              ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor;
                                                              NOR=Leverand›r;
                                                              SVE=Leverant”r] }
    { 290 ;   ;Purchase Action     ;Code10        ;TableRelation="Estimate Purchase Action".Code WHERE (Estimate No.=FIELD(Estimate No.));
                                                   CaptionML=[ENU=Purchase Action;
                                                              NOR=Innkj›pshandling;
                                                              SVE=Ink”ps†tg„rd] }
    { 295 ;   ;Purchase Phase      ;Code10        ;CaptionML=[ENU=Purchase Phase;
                                                              NOR=Innkj›psfase;
                                                              SVE=Ink”psfas];
                                                   Numeric=Yes }
    { 300 ;   ;Tender Paragraph No.;Code6         ;TableRelation="Estimate Paragraph RAW"."Tender Paragraph No." WHERE (Estimate No.=FIELD(Estimate No.));
                                                   CaptionML=[ENU=Tender Paragraph;
                                                              NOR=Elementnr. (RAW);
                                                              SVE=Elementnr (RAW)];
                                                   Description=DP01676 }
  }
  KEYS
  {
    {    ;Estimate No.,Sub-Estimate No.,Part Group,Part,Tender Paragraph No.,Estimate Line,Recipe Line;
                                                   Clustered=Yes }
    {    ;Estimate No.,Line No.,Compressed         }
    {    ;Estimate No.,Cost Type,Text Composition  }
    {    ;Estimate No.,Cost Type,Description       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CompRec@1210190002 : Record 11012193;
      EstRec@1210190003 : Record 11012151;
      RawSetup@1100525000 : Record 11125673;
      LastEstNo@1210190004 : Code[20];

    PROCEDURE GetSelectionNEW@1100528900(VAR EstLineRec@1100525001 : Record 11072072;VAR RcpLineRec@1100525000 : Record 11072075);
    VAR
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //DP00381
      CompRec.LOCKTABLE;
      CompRec.RESET;
      CompRec.DELETEALL;

      IF FPSLicenseManagement.LicenseAndReadPermissionForTable(RawSetup) THEN
        FillBufferWithRawEstimateLines();
      FillBufferWithEstimateLinesNEW(EstLineRec);
      FillBufferWithRecipeLinesNEW(RcpLineRec);
      UpdateCompLineAndCompressed();

      COMMIT;
      CompRec.LOCKTABLE;
    END;

    PROCEDURE FillBufferWithEstimateLinesNEW@1100528901(VAR EstLineRec@1100525000 : Record 11072072);
    BEGIN
      EstLineRec.SETFILTER(Recipe, '%1', '');
      IF EstLineRec.FINDSET THEN BEGIN
        LastEstNo := '';
        REPEAT
          IF (EstLineRec."Estimate No." <> LastEstNo) THEN BEGIN
            LastEstNo := EstLineRec."Estimate No.";
            IF NOT EstRec.GET(LastEstNo) THEN
              EstRec.INIT;
          END;
          CompRec.INIT;
          CompRec."Estimate No." := EstLineRec."Estimate No.";
          CompRec."Sub-Estimate No." := EstLineRec."Sub-Estimate No.";
          CompRec."Part Group" := EstLineRec."Part Group";
          CompRec.Part := EstLineRec.Part;
          CompRec."Estimate Line" := EstLineRec."Line No.";
          CompRec."Recipe Group" := EstLineRec."Recipe Group";
          CompRec.Recipe := EstLineRec.Recipe;
          CompRec.Description := EstLineRec.Description;
          CompRec.Quantity := EstLineRec.Quantity * EstLineRec."Part Quantity";
          CompRec."Unit of Measure" := EstLineRec."Unit of Measure";
          CompRec.Norm := EstLineRec.Norm;
          CompRec.Rate := EstLineRec."Cost Rate";
          CompRec."Rate Code" := EstLineRec."Rate Code";
          CompRec."Rate Type" := EstLineRec."Rate Type";
          CompRec."Team Size" := EstLineRec."Team Size";
          CompRec."Cost Type" := EstLineRec."Cost Type (Price)";
          CompRec."Cost Object" := EstLineRec."Cost Object Price";
          IF EstLineRec."Cost Type (Price)" = EstLineRec."Cost Type (Price)"::Material THEN BEGIN
            CompRec."Material Price" := EstLineRec."Net Cost Price";
            CompRec."Cost Object Material" := EstLineRec."Cost Object Price";
          END;
          IF EstLineRec."Cost Type (Price)" = EstLineRec."Cost Type (Price)"::Subcontracting THEN BEGIN
            CompRec."Subcontracting Price" := EstLineRec."Net Cost Price";
            CompRec."Cost Object Subcontracting" := EstLineRec."Cost Object Price";
          END;
          IF EstLineRec."Cost Type (Price)" = EstLineRec."Cost Type (Price)"::Plant THEN BEGIN
            CompRec."Plant Price" := EstLineRec."Net Cost Price";
            CompRec."Cost Object Plant" := EstLineRec."Cost Object Price";
          END;
          CompRec."Discount %" := EstLineRec."Purchase Discount %";
          CompRec."Gross Price" := EstLineRec."Gross Price";
          CompRec."Item No." := EstLineRec."Item No.";
          CompRec."Basic Item" := EstLineRec."Basic Item";
          CompRec."Trade Item" := EstLineRec."Trade Item";
          CompRec."Vendor (Trade Item)" := EstLineRec."Vendor (Trade Item)";
          CompRec.Manufacturer := EstLineRec.Manufacturer;
          CompRec."Text Composition" := ComposeText(CompRec);
          CompRec."Purchaser Code" := EstRec."Purchaser Code";
          CompRec.Vendor := EstLineRec.Vendor;
          CompRec."Subcontracting Activity" := EstLineRec."Subcontracting Activity";  //DP01958a
          //DP01676.sn
          CompRec."Purchase Action" := EstLineRec."Purchase Action";
          CompRec."Purchase Phase" := EstLineRec."Purchase Phase";
          //DP01676.en
          CompRec."Purchase Route Reference" := EstLineRec."Purchase Route Reference";  //db, 09-12-10: M18179
          IF CheckInsertCompTable() THEN
            CompRec.INSERT;
        UNTIL EstLineRec.NEXT = 0;
      END;
    END;

    PROCEDURE FillBufferWithRecipeLinesNEW@1100528902(VAR RcpLineRec@1100525000 : Record 11072075);
    VAR
      EstLineRec@1100528900 : Record 11072072;
    BEGIN
      IF RcpLineRec.FINDSET THEN BEGIN
        LastEstNo := '';
        REPEAT
          IF (RcpLineRec."Estimate No." <> LastEstNo) THEN BEGIN
            LastEstNo := RcpLineRec."Estimate No.";
            IF NOT EstRec.GET(LastEstNo) THEN
              EstRec.INIT;
          END;
          CompRec.INIT;
          CompRec."Estimate No." := RcpLineRec."Estimate No.";
          CompRec."Sub-Estimate No." := RcpLineRec."Sub-Estimate No.";
          CompRec."Part Group" := RcpLineRec."Part Group";
          CompRec.Part := RcpLineRec.Part;
          CompRec."Estimate Line" := RcpLineRec."Estimate Line";
          CompRec."Recipe Line" := RcpLineRec."Line No.";
          CompRec."Recipe Group" := RcpLineRec."Recipe Group";
          CompRec.Recipe := RcpLineRec.Recipe;
          CompRec.Description := RcpLineRec.Description;
          EstLineRec.GET(RcpLineRec."Estimate No.", RcpLineRec."Sub-Estimate No.", RcpLineRec."Part Group",
            RcpLineRec.Part, RcpLineRec."Estimate Line");
          CompRec.Quantity := RcpLineRec.Quantity * EstLineRec.Quantity * EstLineRec."Part Quantity";
          CompRec."Unit of Measure" := RcpLineRec."Unit of Measure";
          CompRec.Norm := RcpLineRec.Norm;
          CompRec.Rate := RcpLineRec."Cost Rate";
          CompRec."Rate Code" := RcpLineRec."Rate Code";
          CompRec."Rate Type" := RcpLineRec."Rate Type";
          CompRec."Team Size" := RcpLineRec."Team Size";
          CompRec."Cost Type" := RcpLineRec."Cost Type (Price)";
          CompRec."Cost Object" := RcpLineRec."Cost Object Price";
          IF RcpLineRec."Cost Type (Price)" = RcpLineRec."Cost Type (Price)"::Material THEN BEGIN
            CompRec."Material Price" := RcpLineRec."Net Cost Price";
            CompRec."Cost Object Material" := RcpLineRec."Cost Object Price";
          END;
          IF RcpLineRec."Cost Type (Price)" = RcpLineRec."Cost Type (Price)"::Subcontracting THEN BEGIN
            CompRec."Subcontracting Price" := RcpLineRec."Net Cost Price";
            CompRec."Cost Object Subcontracting" := RcpLineRec."Cost Object Price";
          END;
          IF RcpLineRec."Cost Type (Price)" = RcpLineRec."Cost Type (Price)"::Plant THEN BEGIN
            CompRec."Plant Price" := RcpLineRec."Net Cost Price";
            CompRec."Cost Object Plant" := RcpLineRec."Cost Object Price";
          END;
          CompRec."Discount %" := RcpLineRec."Purchase Discount %";
          CompRec."Gross Price" := RcpLineRec."Gross Price";
          CompRec."Item No." := RcpLineRec."Item No.";
          CompRec."Basic Item" := RcpLineRec."Basic Item";
          CompRec."Trade Item" := RcpLineRec."Trade Item";
          CompRec."Vendor (Trade Item)" := RcpLineRec."Vendor (Trade Item)";
          CompRec.Manufacturer := RcpLineRec.Manufacturer;
          CompRec.Vendor := RcpLineRec.Vendor;
          CompRec."Subcontracting Activity" := RcpLineRec."Subcontracting Activity";  //DP01958a
          CompRec."Text Composition" := ComposeText(CompRec);
          CompRec."Purchaser Code" := EstRec."Purchaser Code";
          //DP01676.sn
          CompRec."Purchase Action" := EstLineRec."Purchase Action";
          CompRec."Purchase Phase" := EstLineRec."Purchase Phase";
          //DP01676.en
          CompRec."Purchase Route Reference" := RcpLineRec."Purchase Route Reference";  //db, 09-12-10: M18179
          IF CheckInsertCompTable() THEN
            CompRec.INSERT;
        UNTIL RcpLineRec.NEXT = 0;
      END;
    END;

    PROCEDURE FillBufferWithRawEstimateLines@1100525000();
    VAR
      EstlineRec@1100525000 : Record 11125698;
    BEGIN
      EstlineRec.RESET;
      EstlineRec.SETCURRENTKEY("Purchase Route Reference", "Ask for Quote");
      EstlineRec.SETRANGE("Purchase Route Reference", '');
      EstlineRec.SETRANGE("Ask for Quote", TRUE);

      IF EstlineRec.FINDSET THEN BEGIN
        LastEstNo := '';
        REPEAT
          IF (EstlineRec."Estimate No." <> LastEstNo) THEN BEGIN
            LastEstNo := EstlineRec."Estimate No.";
            IF NOT EstRec.GET(LastEstNo) THEN
              EstRec.INIT;
          END;
          CompRec.INIT;
          CompRec."Estimate No." := EstlineRec."Estimate No.";
          CompRec."Tender Paragraph No." := EstlineRec."Tender Paragraph No.";
          CompRec."Estimate Line" := EstlineRec."Line No.";
          CompRec.Description := EstlineRec.Description;
          //DP01676.sn
          CompRec."Cost Type" := EstlineRec."Cost Type" - 1;
          CompRec."Cost Object" := EstlineRec."Cost Object";
          IF EstlineRec."Cost Type" = EstlineRec."Cost Type"::Material THEN BEGIN
            CompRec."Material Price" := EstlineRec."Net Cost Price";
            CompRec."Cost Object Material" := EstlineRec."Cost Object";
          END;
          IF EstlineRec."Cost Type" = EstlineRec."Cost Type"::Subcontracting THEN BEGIN
            CompRec."Subcontracting Price" := EstlineRec."Net Cost Price";
            CompRec."Cost Object Subcontracting" := EstlineRec."Cost Object";
          END;
          IF EstlineRec."Cost Type" = EstlineRec."Cost Type"::Plant THEN BEGIN
            CompRec."Plant Price" := EstlineRec."Net Cost Price";
            CompRec."Cost Object Plant" := EstlineRec."Cost Object";
          END;
          //DP01676.en
          CompRec.Quantity := EstlineRec.Quantity * EstlineRec."Part Quantity";
          CompRec."Unit of Measure" := EstlineRec."Unit of Measure";
          CompRec.Norm := EstlineRec.Norm;
          CompRec.Rate := EstlineRec.Rate;
          CompRec."Rate Code" := EstlineRec."Rate Code";
          CompRec."Rate Type" := EstlineRec."Rate Type";
          CompRec."Team Size" := EstlineRec."Team Size";
          CompRec."Discount %" := EstlineRec."Purchase Discount %";  //DP01676
          CompRec."Gross Price" := EstlineRec."Gross Price";
          CompRec."Item No." := EstlineRec."Item No.";
          CompRec."Basic Item" := EstlineRec."Basic Item";
          CompRec."Trade Item" := EstlineRec."Trade Item";
          CompRec."Vendor (Trade Item)" := EstlineRec."Vendor (Trade Item)";
          CompRec.Manufacturer := EstlineRec.Manufacturer;
          CompRec."Text Composition" := ComposeText(CompRec);
          CompRec."Purchaser Code" := EstRec."Purchaser Code";
          CompRec.Vendor := EstlineRec.Vendor;
          CompRec."Subcontracting Activity" := EstlineRec."Subcontracting Activity";  //DP01958a
          //DP01676.sn
          CompRec."Purchase Action" := EstlineRec."Purchase Action";
          CompRec."Purchase Phase" := EstlineRec."Purchase Phase";
          //DP01676.en
          CompRec."Purchase Route Reference" := EstlineRec."Purchase Route Reference";  //db, 09-12-10: M18179
          IF CheckInsertCompTable() THEN
            CompRec.INSERT;
        UNTIL EstlineRec.NEXT = 0;
      END;
    END;

    PROCEDURE CheckInsertCompTable@1210190001() : Boolean;
    BEGIN
      IF (CompRec.Quantity = 0) THEN
        EXIT(FALSE);

      IF ((CompRec."Material Price" = 0) AND (CompRec."Cost Object Material" = '')) AND
         ((CompRec."Subcontracting Price" = 0) AND (CompRec."Cost Object Subcontracting" = '')) AND
         ((CompRec."Plant Price" = 0) AND (CompRec."Cost Object Plant" = ''))
      THEN
        EXIT(FALSE);  // Skip Labor

      EXIT(TRUE);
    END;

    PROCEDURE UpdateCompLineAndCompressed@1210190005();
    VAR
      LastLino@1210190006 : Integer;
      LastText@1210190004 : Text[250];
      LastEstm@1210190007 : Code[50];
      LastCtyp@1210190000 : Option;
    BEGIN
      CompRec.RESET;
      CompRec.SETCURRENTKEY("Estimate No.","Cost Type","Text Composition");

      LastLino := 0;
      LastText := '~';
      LastEstm := '~';
      CLEAR(LastCtyp);
      IF CompRec.FINDSET(TRUE, FALSE) THEN BEGIN
        REPEAT
          CompRec."Line No." := LastLino + 1;
          LastLino := CompRec."Line No.";
          IF (LastEstm <> CompRec."Estimate No.") OR
             (LastCtyp <> CompRec."Cost Type") OR
             (LastText <> CompRec."Text Composition")
          THEN BEGIN
            CompRec.Compressed := TRUE;
            LastEstm := CompRec."Estimate No.";
            LastCtyp := CompRec."Cost Type";
            LastText := CompRec."Text Composition";
          END;
          CompRec.MODIFY;
        UNTIL CompRec.NEXT = 0;
      END;
    END;

    PROCEDURE CalculateTotalQuantity@1210190009() : Decimal;
    VAR
      lvTotalQuantity@1210190000 : Decimal;
    BEGIN
      lvTotalQuantity := 0;

      CompRec.RESET;
      CompRec.SETCURRENTKEY(
        "Estimate No.", "Cost Type", "Text Composition");
      CompRec.SETRANGE("Estimate No.", "Estimate No.");
      CompRec.SETRANGE("Cost Type", "Cost Type");
      CompRec.SETRANGE("Text Composition", "Text Composition");
      IF CompRec.FINDSET THEN BEGIN
        REPEAT
          lvTotalQuantity := lvTotalQuantity + CompRec.Quantity;
        UNTIL CompRec.NEXT = 0;
      END;

      EXIT(lvTotalQuantity);
    END;

    PROCEDURE ComposeText@1210190016(MainRec@1210190000 : Record 11012193) TextComp : Code[250];
    VAR
      sep@1100485000 : Text[30];
    BEGIN
      sep := '~';
      TextComp := '';

      TextComp := TextComp + MainRec.Description + sep;
      TextComp := TextComp + MainRec."Unit of Measure" + sep;
      TextComp := TextComp + MainRec."Rate Code" + sep;
      IF MainRec."Trade Item" <> '' THEN
        TextComp := TextComp + MainRec."Trade Item" + sep
      ELSE
        IF MainRec."Basic Item" <> '' THEN
          TextComp := TextComp + MainRec."Basic Item" + sep
        ELSE
          IF MainRec."Item No." <> '' THEN
            TextComp := TextComp + MainRec."Item No." + sep
          ELSE
            TextComp := TextComp + MainRec."Cost Object" + sep;

      TextComp := COPYSTR(TextComp, 1, MAXSTRLEN(MainRec."Text Composition"));  //100+10+10+20
      EXIT(TextComp);
    END;

    PROCEDURE GetElementText@1100525001() ElementText : Text[60];
    VAR
      Estimate@1100525000 : Record 11012151;
      ElementLine@1100525001 : Record 11125670;
    BEGIN
      ElementText:='';
      Estimate.RESET;
      Estimate.GET("Estimate No.");
      IF Estimate."Construction Spec. No."<>'' THEN BEGIN
        ElementLine.RESET;
        ElementLine.SETRANGE("Specification No.",Estimate."Construction Spec. No.");
        ElementLine.SETRANGE("Tender Paragraph No.","Tender Paragraph No.");
        ElementLine.SETRANGE(Type,ElementLine.Type::"Commitment Description (Sub Line)");
        ElementLine.SETRANGE(Title,FALSE);

        IF ElementLine.FINDFIRST THEN
          ElementText:=ElementLine.Text;
      END;
      EXIT(ElementText);
    END;

    BEGIN
    END.
  }
}

