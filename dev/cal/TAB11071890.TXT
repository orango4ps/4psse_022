OBJECT Table 11071890 Std. Sales Report Text Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Document Type,Text Line Type,Language Code,Line No.;
    OnDelete=VAR
               SalesReportTextCondition@1100525000 : Record 11071891;
               SalesReportTextValue@1100525001 : Record 11071911;
             BEGIN
               SalesReportTextCondition.SETRANGE("Document Type", "Document Type");
               SalesReportTextCondition.SETRANGE("Text Line Type", "Text Line Type");
               SalesReportTextCondition.SETRANGE("Language Code", "Language Code");
               SalesReportTextCondition.SETRANGE("Text Line No.", "Line No.");
               SalesReportTextCondition.DELETEALL(TRUE);

               SalesReportTextValue.SETRANGE("Document Type", "Document Type");
               SalesReportTextValue.SETRANGE("Text Line Type", "Text Line Type");
               SalesReportTextValue.SETRANGE("Language Code", "Language Code");
               SalesReportTextValue.SETRANGE("Text Line No.", "Line No.");
               SalesReportTextValue.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Std. Sales Report Text Line;
               NOR=Tekstrad for Std. Salgsrapport;
               SVE=Std. F”rs„ljningsrapport textrad];
  }
  FIELDS
  {
    { 10  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              NOR=Bilagstype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=[ENU=,,Pro Forma Invoice,Pro Forma Credit Memo,,,,Posted Invoice,Posted Credit Memo;
                                                                    NOR=,,Pro Forma-faktura,Pro Forma-kreditnota,,,,Bokf›rt faktura,Bokf›rt kreditnota;
                                                                    SVE=,,Proformafaktura,Proformakredit,,,,Bokf”rd faktura,Bokf”rd kreditnota];
                                                   OptionString=,,Pro Forma Invoice,Pro Forma Credit Memo,,,,Posted Invoice,Posted Credit Memo }
    { 40  ;   ;Text Line Type      ;Option        ;CaptionML=[ENU=Text Line Type;
                                                              NOR=Tekstradstype;
                                                              SVE=Textradstyp];
                                                   OptionCaptionML=[ENU=Header,Before Detail,Detail,After Detail,Footer;
                                                                    NOR=Tittel,F›r detalj,Detalj,Etter detalj,Fotnote;
                                                                    SVE=Huvud,F”re Detalj,Detalj,Efter Detalj,Sidfot];
                                                   OptionString=Header,Before Detail,Detail,After Detail,Footer }
    { 50  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              NOR=Spr†kkode;
                                                              SVE=Spr†kkod] }
    { 60  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 70  ;   ;Text                ;Text250       ;CaptionML=[ENU=Text;
                                                              NOR=Tekst;
                                                              SVE=Ben„mning] }
    { 80  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 90  ;   ;No. of Columns      ;Integer       ;CaptionML=[ENU=No. of Columns;
                                                              NOR=Antall kolonner;
                                                              SVE=Ant. kolumner];
                                                   MinValue=0 }
    { 100 ;   ;Column Separator    ;Text10        ;CaptionML=[ENU=Column Separator;
                                                              NOR=Kolonneskilletegn;
                                                              SVE=Kolumnavgr„nsare] }
    { 110 ;   ;Multiple Lines      ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Sales Report Text Value" WHERE (Document Type=FIELD(Document Type),
                                                                                                      Text Line Type=FIELD(Text Line Type),
                                                                                                      Language Code=FIELD(Language Code),
                                                                                                      Text Line No.=FIELD(Line No.),
                                                                                                      Multiple Lines=CONST(Yes)));
                                                   CaptionML=[ENU=Multiple Lines;
                                                              NOR=Flere linjer;
                                                              SVE=Flera rader];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Document Type,Text Line Type,Language Code,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetTableCaption@1100525002() : Text;
    VAR
      SalesReportTextManagement@1100525000 : Codeunit 11012369;
    BEGIN
      EXIT(SalesReportTextManagement.GetTableCaption("Document Type", "Text Line Type"));
    END;

    PROCEDURE GetColumnSeparator@1100525001() : Text[10];
    BEGIN
      IF "Column Separator" <> '' THEN
        EXIT("Column Separator");

      EXIT(GetDefaultColumnSeparator);
    END;

    PROCEDURE GetDefaultColumnSeparator@1100528400() : Text[10];
    BEGIN
      EXIT(';');
    END;

    PROCEDURE GetDataCaptionTxt@1100525000() : Text;
    BEGIN
      EXIT(STRSUBSTNO('%1 %2 %3', "Document Type", "Text Line Type", "Language Code"));
    END;

    PROCEDURE RunPageConditions@1100525005();
    VAR
      SalesReportTextCondition@1100525001 : Record 11071891;
      SalesReportTextConditions@1100525000 : Page 11124824;
    BEGIN
      SalesReportTextCondition.SETRANGE("Document Type", "Document Type");
      SalesReportTextCondition.SETRANGE("Text Line Type", "Text Line Type");
      SalesReportTextCondition.SETRANGE("Language Code", "Language Code");
      SalesReportTextCondition.SETRANGE("Text Line No.", "Line No.");
      SalesReportTextConditions.SETTABLEVIEW(SalesReportTextCondition);
      SalesReportTextConditions.RUNMODAL;
    END;

    PROCEDURE RunPageValues@1100528401();
    VAR
      SalesReportTextValue@1100528401 : Record 11071911;
      SalesReportTextValues@1100528400 : Page 11124825;
    BEGIN
      SalesReportTextValue.SETRANGE("Document Type", "Document Type");
      SalesReportTextValue.SETRANGE("Text Line Type", "Text Line Type");
      SalesReportTextValue.SETRANGE("Language Code", "Language Code");
      SalesReportTextValue.SETRANGE("Text Line No.", "Line No.");
      SalesReportTextValues.SETTABLEVIEW(SalesReportTextValue);
      SalesReportTextValues.RUNMODAL;
    END;

    PROCEDURE RunPageMoveLine@1100528402();
    VAR
      MoveStdSalesRepTextLine@1100528400 : Page 11126587;
    BEGIN
      MoveStdSalesRepTextLine.SetStdSalesReportTextLine(Rec);
      MoveStdSalesRepTextLine.StdDialogRunModal;
    END;

    PROCEDURE RunPageCopyLine@1100528403();
    VAR
      CopyStdSalesRepTextLine@1100528400 : Page 11126588;
    BEGIN
      CopyStdSalesRepTextLine.SetStdSalesReportTextLine(Rec);
      CopyStdSalesRepTextLine.StdDialogRunModal;
    END;

    PROCEDURE RunPageCopyLines@1100528405();
    VAR
      CopyStdSalesRpTextLines@1100528400 : Page 11126589;
    BEGIN
      CopyStdSalesRpTextLines.SetStdSalesReportTextLine(Rec);
      CopyStdSalesRpTextLines.StdDialogRunModal;
    END;

    PROCEDURE CopyLine@1100528404(DocumentTypeTo@1100528401 : ',,Pro Forma Invoice,Pro Forma Credit Memo,,,,Posted Invoice,Posted Credit Memo';LanguageCodeTo@1100528403 : Code[10];LineNoTo@1100528400 : Integer);
    VAR
      StdSalesReportTextLineTo@1100528402 : Record 11071890;
    BEGIN
      StdSalesReportTextLineTo := Rec;
      StdSalesReportTextLineTo."Document Type" := DocumentTypeTo;
      StdSalesReportTextLineTo."Language Code" := LanguageCodeTo;
      StdSalesReportTextLineTo."Line No." := LineNoTo;
      StdSalesReportTextLineTo.INSERT;
      CopyConditions(DocumentTypeTo, LanguageCodeTo, LineNoTo);
      CopyValues(DocumentTypeTo, LanguageCodeTo, LineNoTo);
      CopyTableLinks(DocumentTypeTo, LanguageCodeTo, LineNoTo);
    END;

    LOCAL PROCEDURE CopyConditions@1100528406(DocumentTypeTo@1100528401 : ',,Pro Forma Invoice,Pro Forma Credit Memo,,,,Posted Invoice,Posted Credit Memo';LanguageCodeTo@1100528404 : Code[10];LineNoTo@1100528400 : Integer);
    VAR
      SalesReportTextConditionFrom@1100528402 : Record 11071891;
      SalesReportTextConditionTo@1100528403 : Record 11071891;
    BEGIN
      SalesReportTextConditionFrom.SETRANGE("Document Type", "Document Type");
      SalesReportTextConditionFrom.SETRANGE("Text Line Type", "Text Line Type");
      SalesReportTextConditionFrom.SETRANGE("Language Code", "Language Code");
      SalesReportTextConditionFrom.SETRANGE("Text Line No.", "Line No.");
      IF SalesReportTextConditionFrom.FINDSET THEN
        REPEAT
          SalesReportTextConditionTo := SalesReportTextConditionFrom;
          SalesReportTextConditionTo."Document Type" := DocumentTypeTo;
          SalesReportTextConditionTo."Language Code" := LanguageCodeTo;
          SalesReportTextConditionTo."Text Line No." := LineNoTo;
          SalesReportTextConditionTo.VALIDATE("Field No.");
          SalesReportTextConditionTo.INSERT;
        UNTIL SalesReportTextConditionFrom.NEXT = 0;
    END;

    LOCAL PROCEDURE CopyValues@1100528407(DocumentTypeTo@1100528401 : ',,Pro Forma Invoice,Pro Forma Credit Memo,,,,Posted Invoice,Posted Credit Memo';LanguageCodeTo@1100528405 : Code[10];LineNoTo@1100528400 : Integer);
    VAR
      SalesReportTextValueFrom@1100528402 : Record 11071911;
      SalesReportTextValueTo@1100528403 : Record 11071911;
      SalesReportTextManagement@1100528404 : Codeunit 11012369;
    BEGIN
      SalesReportTextValueFrom.SETRANGE("Document Type", "Document Type");
      SalesReportTextValueFrom.SETRANGE("Text Line Type", "Text Line Type");
      SalesReportTextValueFrom.SETRANGE("Language Code", "Language Code");
      SalesReportTextValueFrom.SETRANGE("Text Line No.", "Line No.");
      IF SalesReportTextValueFrom.FINDSET THEN
        REPEAT
          SalesReportTextValueTo := SalesReportTextValueFrom;
          SalesReportTextValueTo."Document Type" := DocumentTypeTo;
          SalesReportTextValueTo."Language Code" := LanguageCodeTo;
          SalesReportTextValueTo."Text Line No." := LineNoTo;
          IF SalesReportTextValueFrom."Related Table No." = SalesReportTextManagement.GetTableNo(
            SalesReportTextValueFrom."Document Type",
            SalesReportTextValueFrom."Text Line Type")
          THEN
            SalesReportTextValueTo."Related Table No." := SalesReportTextManagement.GetTableNo(
              SalesReportTextValueTo."Document Type",
              SalesReportTextValueTo."Text Line Type");
          SalesReportTextValueTo.VALIDATE("Related Table Field No.");
          SalesReportTextValueTo.INSERT;
        UNTIL SalesReportTextValueFrom.NEXT = 0;
    END;

    LOCAL PROCEDURE CopyTableLinks@1100528408(DocumentTypeTo@1100528401 : ',,Pro Forma Invoice,Pro Forma Credit Memo,,,,Posted Invoice,Posted Credit Memo';LanguageCodeTo@1100528404 : Code[10];LineNoTo@1100528400 : Integer);
    VAR
      SalesReportTextTableLinkFrom@1100528402 : Record 11071913;
      SalesReportTextTableLinkTo@1100528403 : Record 11071913;
    BEGIN
      SalesReportTextTableLinkFrom.SETRANGE("Document Type", "Document Type");
      SalesReportTextTableLinkFrom.SETRANGE("Text Line Type", "Text Line Type");
      SalesReportTextTableLinkFrom.SETRANGE("Language Code", "Language Code");
      SalesReportTextTableLinkFrom.SETRANGE("Text Line No.", "Line No.");
      IF SalesReportTextTableLinkFrom.FINDSET THEN
        REPEAT
          SalesReportTextTableLinkTo := SalesReportTextTableLinkFrom;
          SalesReportTextTableLinkTo."Document Type" := DocumentTypeTo;
          SalesReportTextTableLinkTo."Language Code" := LanguageCodeTo;
          SalesReportTextTableLinkTo."Text Line No." := LineNoTo;
          SalesReportTextTableLinkTo.VALIDATE("Field No.");
          SalesReportTextTableLinkTo.INSERT;
        UNTIL SalesReportTextTableLinkFrom.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

