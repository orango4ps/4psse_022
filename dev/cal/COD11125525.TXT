OBJECT Codeunit 11125525 Run Forms Mgt. (SMF)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SiteManFormSetup@1210190000 : Record 11125525;
      ClientTypeManagement@1100525000 : Codeunit 4;
      Text000@1100525001 : TextConst 'DEU=RatenÅbersicht nicht verfÅgbar fÅr ein Projekt, das nicht RAW betrifft.;ENU=Installment Overview not available for a non-RAW project.;NLD=Termijnstaat niet beschikbaar voor een project welke geen RAW betreft.;SVE=%1 pÜ formulÑr %2 ska ha ett datum som kommer efter eller Ñr lika med %3.';

    LOCAL PROCEDURE GetHourAccountingProjectDS@1100525025(IProjectNo@1100525001 : Code[20];VAR OHourAccountingProject@1100525002 : Record 11020224);
    BEGIN
      OHourAccountingProject.FILTERGROUP(2);
      //filtergroup 2 for defaults at new record in page
      OHourAccountingProject.SETCURRENTKEY("Project No.");
      OHourAccountingProject.SETRANGE("Project No.", IProjectNo);
      OHourAccountingProject.SETFILTER("Called From Site Mgt Form", '%1', TRUE);
      OHourAccountingProject.FILTERGROUP(0);
    END;

    PROCEDURE GetNoOfHourAccountingProjects@1100525029(IProjectNo@1100525000 : Code[20]) : Integer;
    VAR
      HourAccountingProject@1100525001 : Record 11020224;
    BEGIN
      GetHourAccountingProjectDS(IProjectNo, HourAccountingProject);
      EXIT(HourAccountingProject.COUNT);
    END;

    LOCAL PROCEDURE GetSiteMngmntProjHoursHeaderDS@1100525027(IProjectNo@1100525001 : Code[20];IYear@1100525002 : Integer;IWeek@1100528600 : Integer;VAR OSiteMngmntProjHoursHeader@1100525000 : Record 11012362);
    BEGIN
      OSiteMngmntProjHoursHeader.FILTERGROUP(2);
      //filtergroup 2 for defaults at new record in page
      OSiteMngmntProjHoursHeader.SETCURRENTKEY("Receiving Company", "Project No.");
      OSiteMngmntProjHoursHeader.SETRANGE("Receiving Company", COMPANYNAME);
      OSiteMngmntProjHoursHeader.SETRANGE("Project No.", IProjectNo);
      //OSiteMngmntProjHoursHeader.SETFILTER("Work Date Filter", '%1', IDate);
      OSiteMngmntProjHoursHeader.SETFILTER("Called From Site Mgt Form", '%1', TRUE);
      OSiteMngmntProjHoursHeader.SETRANGE(Year, IYear);
      OSiteMngmntProjHoursHeader.SETRANGE(Week, IWeek);
      OSiteMngmntProjHoursHeader.SETRANGE(Generated, FALSE);
      OSiteMngmntProjHoursHeader.FILTERGROUP(0);
    END;

    PROCEDURE GetNoOfSiteMngmntProjHoursHeaders@1100525031(IProjectNo@1100525002 : Code[20];IYear@1100525001 : Integer;IWeek@1100528600 : Integer) : Integer;
    VAR
      SiteMngmntProjHoursHeader@1100525000 : Record 11012362;
    BEGIN
      GetSiteMngmntProjHoursHeaderDS(IProjectNo, IYear, IWeek, SiteMngmntProjHoursHeader);
      EXIT(SiteMngmntProjHoursHeader.COUNT);
    END;

    PROCEDURE RunSiteMgtProjlHours@1100525000(IProjectNo@1100525004 : Code[20];IYear@1210190000 : Integer;IWeek@1100528600 : Integer;IShiftCode@1210190001 : Code[10]);
    VAR
      lvSiteMgtProjObjRec@1100525005 : Record 11012359;
      lvSiteMgtProjHrsHeadRec@1100525001 : Record 11012362;
      HourAccountingProject@1210190003 : Record 11020224;
      ProjShift@1210190004 : Record 11125538;
      lvText001@1100525006 : TextConst 'DEU=Projekt ''%1'' vom Unternehmen ''%2'' ist nicht in ''%3'' erstellt worden. Es ist nicht mîglich Stunden fÅr dieses Projekt einzugeben.;ENU=Project ''%1'' of Company ''%2'' is not created in ''%3'', it is not possible to enter hours for this project.;NLD=Project ''%1'' van bedrijf ''%2'' is niet aangemaakt in ''%3'', het is niet mogelijk om uren voor dit project in te voeren.;NOR=Prosjektet ''%1'' for bedriften ''%2'' er ikke opprettet i ''%3''. Kan ikke angi timer for dette prosjektet.;SVE=Projektet ''%1'' fîr fîretaget ''%2'' har inte skapats i ''%3''. Det gÜr inte att ange timmar fîr det hÑr projektet.';
      lvText002@1210190005 : TextConst 'DEU=WÑhlen Sie zuerst einen %1 aus.;ENU=First select a %1.;NLD=Selecteer eerst een %1.;SVE=Du mÜste vÑlja en %1.';
      HourAccountingProjectList@1100525000 : Page 11020246;
      SiteMngmntProjHoursList@1100525007 : Page 11072127;
    BEGIN
      SiteManFormSetup.GET;
      CASE SiteManFormSetup."Hour Accounting Form" OF
        SiteManFormSetup."Hour Accounting Form"::SiteManHrAccByProj:
          BEGIN
            IF NOT lvSiteMgtProjObjRec.GET(COMPANYNAME, lvSiteMgtProjObjRec.Type::Project, IProjectNo) THEN
              ERROR(lvText001, IProjectNo, COMPANYNAME, lvSiteMgtProjObjRec.TABLECAPTION);
            IF IShiftCode = '' THEN BEGIN  //*DP00033
              ProjShift.SETRANGE("Project No.", IProjectNo);
              ProjShift.SETFILTER("Shift Code", '<>%1', '');
              IF NOT ProjShift.ISEMPTY THEN
                ERROR(lvText002, ProjShift.FIELDCAPTION("Shift Code"));
            END;
            GetSiteMngmntProjHoursHeaderDS(IProjectNo, IYear, IWeek, lvSiteMgtProjHrsHeadRec);
            lvSiteMgtProjHrsHeadRec.FILTERGROUP(2);
            //filtergroup 2 for defaults at new record in page
            lvSiteMgtProjHrsHeadRec.SETRANGE(Year, IYear);
            lvSiteMgtProjHrsHeadRec.SETRANGE(Week, IWeek);
            lvSiteMgtProjHrsHeadRec.SETRANGE("Receiving Company", COMPANYNAME);
            lvSiteMgtProjHrsHeadRec.SETRANGE("Project No.", IProjectNo);
            lvSiteMgtProjHrsHeadRec.SETFILTER("Called From Site Mgt Form", '%1', TRUE);
            lvSiteMgtProjHrsHeadRec.SETFILTER("Shift Code Filter", '%1', IShiftCode);
            //lvSiteMgtProjHrsHeadRec.SETFILTER("Work Date Filter", '%1', IDate);
            lvSiteMgtProjHrsHeadRec.FILTERGROUP(0);

            IF NOT lvSiteMgtProjHrsHeadRec.FINDFIRST THEN BEGIN
              lvSiteMgtProjHrsHeadRec.VALIDATE(Year, IYear);
              lvSiteMgtProjHrsHeadRec.VALIDATE(Week, IWeek);
              lvSiteMgtProjHrsHeadRec.VALIDATE("Receiving Company", COMPANYNAME);
              lvSiteMgtProjHrsHeadRec.VALIDATE("Project No.", IProjectNo);
              lvSiteMgtProjHrsHeadRec.INSERT(TRUE);
              COMMIT;
            END;
            PAGE.RUNMODAL(PAGE::"Site Mngmnt. Project Hour Acc.", lvSiteMgtProjHrsHeadRec);
          END;
        SiteManFormSetup."Hour Accounting Form"::"Project Hour Accounting":
          BEGIN
            GetHourAccountingProjectDS(IProjectNo, HourAccountingProject);
            IF NOT ClientTypeManagement.IsCommonWebClientType THEN BEGIN
              HourAccountingProject.FILTERGROUP(2);
              //filtergroup 2 for defaults at new record in page
              HourAccountingProject.SETRANGE(Year, IYear);
              HourAccountingProject.SETRANGE(Week, IWeek);
              HourAccountingProject.SETRANGE("Project No.", IProjectNo);
              HourAccountingProject.SETFILTER("Called From Site Mgt Form", '%1', TRUE);
              HourAccountingProject.FILTERGROUP(0);
            END;
            HourAccountingProjectList.SETTABLEVIEW(HourAccountingProject);
            HourAccountingProjectList.RUNMODAL;
          END;
      END;
    END;

    LOCAL PROCEDURE GetReceiptDS@1100525012(IProjectNo@1100525001 : Code[20];VAR OTmpPurchaseHeader@1100525000 : TEMPORARY Record 38);
    VAR
      PurchaseLine@1100525003 : Record 39;
      PurchaseHeader@1100525002 : Record 38;
    BEGIN
      PurchaseLine.SETCURRENTKEY("Document Type", "Job No.");
      PurchaseLine.SETRANGE("Document Type", PurchaseLine."Document Type"::Order);
      PurchaseLine.SETFILTER("Document No.", '<>%1', '');
      PurchaseLine.SETRANGE("Job No.", IProjectNo);
      IF PurchaseLine.FINDSET THEN
        REPEAT
          IF NOT OTmpPurchaseHeader.GET(PurchaseLine."Document Type", PurchaseLine."Document No.") THEN BEGIN
            IF PurchaseHeader.GET(PurchaseLine."Document Type", PurchaseLine."Document No.") THEN BEGIN
              OTmpPurchaseHeader := PurchaseHeader;
              OTmpPurchaseHeader.INSERT;
            END;
          END;
        UNTIL PurchaseLine.NEXT = 0;
    END;

    PROCEDURE GetNoOfReceipts@1100525015(IProjectNo@1100525000 : Code[20]) : Integer;
    VAR
      TmpPurchaseHeader@1100525001 : TEMPORARY Record 38;
    BEGIN
      GetReceiptDS(IProjectNo, TmpPurchaseHeader);
      EXIT(TmpPurchaseHeader.COUNT);
    END;

    PROCEDURE RunReceipts@1100525001(IProjectNo@1100525000 : Code[20];IDate@1100525004 : Date);
    VAR
      TmpPurchaseHeader@1100525002 : TEMPORARY Record 38;
    BEGIN
      GetReceiptDS(IProjectNo, TmpPurchaseHeader);
      TmpPurchaseHeader."Document Type" := TmpPurchaseHeader."Document Type"::Order;
      TmpPurchaseHeader."No." := '';
      TmpPurchaseHeader."Buy-from Vendor Name" := '[RUN_RECEIPTS_TMP]';  //* Procesinfo
      TmpPurchaseHeader."Job No." := IProjectNo;
      TmpPurchaseHeader."Posting Date" := IDate;
      TmpPurchaseHeader.INSERT;

      PAGE.RUNMODAL(PAGE::"Purch. Orders by Project (SMF)", TmpPurchaseHeader);
    END;

    LOCAL PROCEDURE GetInstallmentMotivationDS@1100525019(IProjectNo@1100525001 : Code[20];IPrincipal@1100525003 : Code[20];VAR OInstallmentMotivation@1100525000 : Record 11012471);
    BEGIN
      OInstallmentMotivation.FILTERGROUP(9);
      OInstallmentMotivation.SETRANGE("Project No.", IProjectNo);
      OInstallmentMotivation.SETRANGE(Principal, IPrincipal);
      OInstallmentMotivation.FILTERGROUP(2);
      OInstallmentMotivation.SETRANGE("Project No.", IProjectNo);
      OInstallmentMotivation.SETRANGE(Principal, IPrincipal);
      OInstallmentMotivation.FILTERGROUP(0);
    END;

    PROCEDURE GetNoOfInstallmentMotivations@1100525020(IProjectNo@1100525001 : Code[20];IPrincipal@1100525002 : Code[20]) : Integer;
    VAR
      InstallmentMotivation@1100525000 : Record 11012471;
    BEGIN
      GetInstallmentMotivationDS(IProjectNo, IPrincipal, InstallmentMotivation);
      EXIT(InstallmentMotivation.COUNT);
    END;

    PROCEDURE RunInstallmentMotivation@1100525002(IProjectNo@1100525000 : Code[20];IPrincipal@1100525004 : Code[20];IDate@1100525001 : Date);
    VAR
      lvProjPrinRec@1100525002 : Record 11012005;
      lvInstallMotivRec@1100525003 : Record 11012471;
      lvInstallMotivPage@1210190000 : Page 11012474;
    BEGIN
      GetInstallmentMotivationDS(IProjectNo, IPrincipal, lvInstallMotivRec);
      IF IPrincipal = '' THEN BEGIN
          lvInstallMotivRec.FILTERGROUP(9);
          lvInstallMotivRec.SETRANGE(Principal);
          lvInstallMotivRec.FILTERGROUP(2);
          lvInstallMotivRec.SETRANGE(Principal);
          lvInstallMotivRec.FILTERGROUP(0);
      END;
      lvInstallMotivPage.SETTABLEVIEW(lvInstallMotivRec);
      lvInstallMotivPage.SetFromSiteMgtForm(IDate);
      lvInstallMotivPage.RUNMODAL;
    END;

    LOCAL PROCEDURE GetInstallmentDS@1100525022(IProjectNo@1100525001 : Code[20];IPrincipal@1100525000 : Code[20];VAR OProjectInstallment@1100525002 : Record 11012018);
    BEGIN
      OProjectInstallment.FILTERGROUP(2);
      OProjectInstallment.SETRANGE("Project No.", IProjectNo);
      IF IPrincipal <> '' THEN
        OProjectInstallment.SETRANGE(Principal, IPrincipal);
      OProjectInstallment.FILTERGROUP(0);
    END;

    PROCEDURE GetNoOfInstallments@1100525023(IProjectNo@1100525001 : Code[20];IPrincipal@1100525000 : Code[20]) : Integer;
    VAR
      ProjectInstallment@1100525002 : Record 11012018;
    BEGIN
      GetInstallmentDS(IProjectNo, IPrincipal, ProjectInstallment);
      EXIT(ProjectInstallment.COUNT);
    END;

    PROCEDURE RunInstallments@1100525021(IProjectNo@1100525000 : Code[20];IPrincipal@1100525001 : Code[20]);
    VAR
      ProjectInstallment@1100525002 : Record 11012018;
    BEGIN
      GetInstallmentDS(IProjectNo, IPrincipal, ProjectInstallment);
      PAGE.RUNMODAL(PAGE::"Project Installments SMF", ProjectInstallment);
    END;

    LOCAL PROCEDURE GetProgressLevelPTPDS@1100525017(IProjectNo@1100525002 : Code[20];VAR OProgressLevelPTP@1100525000 : Record 11012267);
    BEGIN
      OProgressLevelPTP.FILTERGROUP(9);
      OProgressLevelPTP.SETRANGE("Project No.", IProjectNo);
      OProgressLevelPTP.FILTERGROUP(2);
      OProgressLevelPTP.SETRANGE("Project No.", IProjectNo);
      OProgressLevelPTP.FILTERGROUP(0);
    END;

    LOCAL PROCEDURE GetProgresslevelDS@1100525018(IProjectNo@1100525000 : Code[20];VAR OProgressLevel@1100525001 : Record 11012036);
    BEGIN
      OProgressLevel.FILTERGROUP(9);
      OProgressLevel.SETRANGE("Project No.", IProjectNo);
      OProgressLevel.FILTERGROUP(2);
      OProgressLevel.SETRANGE("Project No.", IProjectNo);
      OProgressLevel.FILTERGROUP(0);
    END;

    PROCEDURE GetNoOfProgressLines@1100525016(IProjectNo@1100525000 : Code[20]) : Integer;
    VAR
      Job@1100525001 : Record 11072003;
      ProgressLevelPTP@1100525002 : Record 11012267;
      ProgressLevel@1100525003 : Record 11012036;
    BEGIN
      Job.GET(IProjectNo);
      IF Job."Progress on base of Tender" THEN BEGIN
        GetProgressLevelPTPDS(IProjectNo, ProgressLevelPTP);
        EXIT(ProgressLevelPTP.COUNT);
      END ELSE BEGIN
        GetProgresslevelDS(IProjectNo, ProgressLevel);
        EXIT(ProgressLevel.COUNT);
      END;
    END;

    PROCEDURE RunProgress@1100525003(IProjectNo@1100525000 : Code[20];IDate@1100525001 : Date);
    VAR
      Job@1100525004 : Record 11072003;
      lvProgressRec@1100525002 : Record 11012036;
      lvProgressPTERec@1100525003 : Record 11012267;
      lvProgressListPage@1210190000 : Page 11012079;
      lvProgressPTEListPage@1210190001 : Page 11020561;
    BEGIN
      Job.GET(IProjectNo);
      IF Job."Progress on base of Tender" THEN BEGIN
        GetProgressLevelPTPDS(IProjectNo, lvProgressPTERec);
        lvProgressPTEListPage.SETTABLEVIEW(lvProgressPTERec);
        lvProgressPTEListPage.SetFromSiteMgtForm(IProjectNo, IDate);
        lvProgressPTEListPage.RUNMODAL;
      END ELSE BEGIN
        GetProgresslevelDS(IProjectNo, lvProgressRec);
        lvProgressListPage.SETTABLEVIEW(lvProgressRec);
        lvProgressListPage.SetFromSiteMgtForm(IProjectNo, IDate);
        lvProgressListPage.RUNMODAL;
      END;
    END;

    LOCAL PROCEDURE GetComplaintsByProjectDS@1100525035(IProjectNo@1100525001 : Code[20];VAR OComplaint@1100525000 : Record 11012450);
    BEGIN
      OComplaint.RESET;
      OComplaint.FILTERGROUP(2);
      OComplaint.SETRANGE("Project No.", IProjectNo);
      OComplaint.FILTERGROUP(0);
    END;

    PROCEDURE GetNoOfComplaintsByProject@1100525037(IProjectNo@1100525001 : Code[20]) : Integer;
    VAR
      Complaint@1100525000 : Record 11012450;
    BEGIN
      GetComplaintsByProjectDS(IProjectNo, Complaint);
      EXIT(Complaint.COUNT);
    END;

    PROCEDURE RunComplaintsByProject@1100525004(IProjectNo@1100525004 : Code[20];IDate@1100525002 : Date);
    VAR
      lvProjRec@1100525001 : Record 11072003;
      lvProjComplaintsPage@1100525000 : Page 11012465;
    BEGIN
      lvProjRec.FILTERGROUP(2);
      lvProjRec.SETRANGE("No.", IProjectNo);
      lvProjRec.FILTERGROUP(0);

      lvProjComplaintsPage.SETTABLEVIEW(lvProjRec);
      lvProjComplaintsPage.RUNMODAL;
    END;

    LOCAL PROCEDURE GetExtensionContractDS@1100525013(IProjectNo@1100525001 : Code[20];VAR OExtensionContract@1100525000 : Record 11012004);
    BEGIN
      OExtensionContract.RESET;
      OExtensionContract.FILTERGROUP(2);
      OExtensionContract.SETRANGE("Project No.", IProjectNo);
      OExtensionContract.FILTERGROUP(0);
    END;

    PROCEDURE GetNoOfExtensionContracts@1100525014(IProjectNo@1100525001 : Code[20]) : Integer;
    VAR
      ExtensionContract@1100525000 : Record 11012004;
    BEGIN
      GetExtensionContractDS(IProjectNo, ExtensionContract);
      EXIT(ExtensionContract.COUNT);
    END;

    PROCEDURE RunExtensionContract@1100525005(IProjectNo@1100525004 : Code[20];IDate@1100525002 : Date);
    VAR
      ExtensionContract@1100525001 : Record 11012004;
    BEGIN
      GetExtensionContractDS(IProjectNo, ExtensionContract);
      PAGE.RUNMODAL(PAGE::"Site Manager Ext. Contracts", ExtensionContract);
    END;

    LOCAL PROCEDURE GetGetOrderDS@1100525038(IProjectNo@1100525001 : Code[20];VAR OGetOrderSMF@1100525000 : Record 11125531);
    BEGIN
      OGetOrderSMF.RESET;
      OGetOrderSMF.FILTERGROUP(2);
      OGetOrderSMF.SETRANGE("Project No.", IProjectNo);
      OGetOrderSMF.SETRANGE("Purchase Order No.", '');
      OGetOrderSMF.FILTERGROUP(0);
    END;

    PROCEDURE GetNoOfGetOrders@1100525039(IProjectNo@1100525001 : Code[20]) : Integer;
    VAR
      GetOrderSMF@1100525000 : Record 11125531;
    BEGIN
      GetGetOrderDS(IProjectNo, GetOrderSMF);
      EXIT(GetOrderSMF.COUNT);
    END;

    PROCEDURE RunGetOrder@1100525007(IProjectNo@1100525004 : Code[20]);
    VAR
      GetOrderSMF@1100528000 : Record 11125531;
    BEGIN
      GetGetOrderDS(IProjectNo, GetOrderSMF);
      PAGE.RUNMODAL(PAGE::"Get Order List (SMF)", GetOrderSMF);
    END;

    LOCAL PROCEDURE GetPlantRequestByProjectDS@1100525032(IProjectNo@1100525000 : Code[20];VAR OPlantRequestSMF@1100525001 : Record 11125529);
    BEGIN
      OPlantRequestSMF.FILTERGROUP(2);
      OPlantRequestSMF.SETRANGE("Source Type", OPlantRequestSMF."Source Type"::Project);
      OPlantRequestSMF.SETRANGE("Source No.", IProjectNo);
      OPlantRequestSMF.FILTERGROUP(0);
    END;

    PROCEDURE GetNoOfPlantRequestsByProject@1100525033(IProjectNo@1100525001 : Code[20]) : Integer;
    VAR
      PlantRequestSMF@1100525000 : Record 11125529;
    BEGIN
      GetPlantRequestByProjectDS(IProjectNo, PlantRequestSMF);
      EXIT(PlantRequestSMF.COUNT);
    END;

    PROCEDURE RunPlantRequestByProject@1100525006(IProjectNo@1100525004 : Code[20]);
    VAR
      PlantRequestSMF@1100528000 : Record 11125529;
    BEGIN
      GetPlantRequestByProjectDS(IProjectNo, PlantRequestSMF);
      PAGE.RUNMODAL(PAGE::"Plant Request List (SMF)", PlantRequestSMF);
    END;

    PROCEDURE GetNoOfPlantNeedLocations@1100525034(IProjectNo@1100525000 : Code[20]) NoOfPlantNeedLocations : Integer;
    VAR
      PlantManagementCompany@1100525001 : Record 11020586;
      TmpPlantManagementCompany@1100525003 : TEMPORARY Record 11020586;
      PlantLocation@1100525004 : Record 11012554;
      PlantNeed@1100525005 : Record 11012579;
      PlantCompanyName@1100525006 : Text[30];
      NoOfPlantComps@1100525002 : Integer;
    BEGIN
      IF PlantManagementCompany.GetPlantCompaniesForProject(IProjectNo, TmpPlantManagementCompany, '', FALSE) = 0 THEN BEGIN
        IF PlantManagementCompany.FINDSET THEN
          REPEAT
            TmpPlantManagementCompany := PlantManagementCompany;
            TmpPlantManagementCompany.INSERT;
          UNTIL PlantManagementCompany.NEXT = 0;
      END;

      IF TmpPlantManagementCompany.FINDSET THEN
        REPEAT
          PlantCompanyName := TmpPlantManagementCompany."Plant Company";
          IF PlantCompanyName = COMPANYNAME THEN
            PlantCompanyName := '';
          PlantLocation.CHANGECOMPANY(TmpPlantManagementCompany."Plant Company");
          PlantLocation.SETCURRENTKEY("Company Name", "Project No.", "Service Order No.", "Employee No.");
          PlantLocation.SETRANGE("Company Name", PlantCompanyName);
          PlantLocation.SETRANGE("Project No.", IProjectNo);
          PlantLocation.SETRANGE(Depot, FALSE);
          IF PlantLocation.FINDSET THEN
            REPEAT
              PlantNeed.CHANGECOMPANY(TmpPlantManagementCompany."Plant Company");
              PlantNeed.SETRANGE(Location, PlantLocation.Code);
              PlantNeed.SETRANGE("Document No.", ''); //Skip Plant Need from granule 'Sales Rental Contract' (not allowed on Request)
              IF NOT PlantNeed.ISEMPTY THEN
                NoOfPlantNeedLocations += 1;
            UNTIL PlantLocation.NEXT = 0;
        UNTIL TmpPlantManagementCompany.NEXT = 0;
    END;

    PROCEDURE RunPlantNeedByProject@1100409000(IProjectNo@1100525004 : Code[20]);
    VAR
      SiteMgtPlantNeedPage@1100525000 : Page 11125549;
    BEGIN
      SiteMgtPlantNeedPage.SetProject(IProjectNo);  //* Set filter on on 'Project No."
      SiteMgtPlantNeedPage.RUNMODAL;
    END;

    LOCAL PROCEDURE GetPlantInventoryDS@1100525036(IProjectNo@1100525002 : Code[20];VAR OPlantInventory@1100525000 : Record 11012555) : Boolean;
    VAR
      PlantManagementCompany@1100525003 : Record 11020586;
      PlantCompany@1100525004 : Text[30];
      PlantLocationFilter@1100525001 : Text;
    BEGIN
      IF NOT PlantManagementCompany.PlantLocationFilterOfProject(IProjectNo, PlantLocationFilter, PlantCompany) THEN
        EXIT(FALSE);
      OPlantInventory.FILTERGROUP(9);
      OPlantInventory.SETFILTER(Location, PlantLocationFilter);
      OPlantInventory.FILTERGROUP(0);
      EXIT(TRUE);
    END;

    PROCEDURE GetNoOfPlantinventories@1100525041(IProjectNo@1100525000 : Code[20]) NoOfPlantInventories : Integer;
    VAR
      PlantManagementCompany@1100525002 : Record 11020586;
      TmpPlantManagementCompany@1100525003 : TEMPORARY Record 11020586;
      PlantInventory@1100525001 : Record 11012555;
      PlantLocation@1100525004 : Record 11012554;
      PlantLocationFilter@1100525005 : Text;
    BEGIN
      IF PlantManagementCompany.FINDSET THEN BEGIN
        IF PlantManagementCompany.GetPlantCompaniesForProject(IProjectNo, TmpPlantManagementCompany, '', FALSE) = 0 THEN
          REPEAT
            TmpPlantManagementCompany := PlantManagementCompany;
            TmpPlantManagementCompany.INSERT;
          UNTIL PlantManagementCompany.NEXT = 0;
      END ELSE
        EXIT(0);

      IF TmpPlantManagementCompany.FINDSET THEN
        REPEAT
          PlantLocationFilter := '';
          PlantLocation.CHANGECOMPANY(TmpPlantManagementCompany."Plant Company");
          PlantLocation.SETCURRENTKEY("Company Name", "Project No.", "Service Order No.", "Employee No.");
          IF TmpPlantManagementCompany."Plant Company" <> COMPANYNAME THEN
            PlantLocation.SETRANGE("Company Name", TmpPlantManagementCompany."Plant Company")
          ELSE
            PlantLocation.SETRANGE("Company Name", '');
          PlantLocation.SETRANGE("Project No.", IProjectNo);
          IF PlantLocation.FINDSET THEN
            REPEAT
              IF PlantLocationFilter <> '' THEN
                PlantLocationFilter := PlantLocationFilter + '|';
              PlantLocationFilter := PlantLocationFilter + PlantLocation.Code;
            UNTIL PlantLocation.NEXT = 0;
          IF PlantLocationFilter <> '' THEN BEGIN
            PlantInventory.SETFILTER(Location, PlantLocationFilter);
            NoOfPlantInventories += PlantInventory.COUNT;
          END;
        UNTIL TmpPlantManagementCompany.NEXT = 0;
    END;

    PROCEDURE RunPlantInventory@1100525009(IProjectNo@1100525004 : Code[20];IDate@1100525001 : Date);
    VAR
      PlantInventory@1100525000 : Record 11012555;
      PlantMgtComp@1100409000 : Record 11020586;
      PlantInventoryPage@1100525002 : Page 11012559;
      PlantCompany@1100525003 : Text[30];
      PlantLocationFilter@1100409001 : Text;
    BEGIN
      IF NOT PlantMgtComp.PlantLocationFilterOfProject(IProjectNo, PlantLocationFilter, PlantCompany) THEN
        EXIT;
      PlantInventory.FILTERGROUP(9);
      PlantInventory.SETFILTER(Location, PlantLocationFilter);
      PlantInventory.FILTERGROUP(0);
      PlantInventoryPage.SETTABLEVIEW(PlantInventory);
      PlantInventoryPage.SetCompany(PlantCompany);
      PlantInventoryPage.RUNMODAL;
    END;

    PROCEDURE RunPlantInventHistory@1100525011(IProjectNo@1100525004 : Code[20];IDate@1100525001 : Date);
    VAR
      PlantInventory@1100525000 : Record 11012555;
      PlantMgtComp@1100409000 : Record 11020586;
      PlantInventHistPage@1100525002 : Page 11012560;
      PlantCompany@1100525003 : Text[30];
      PlantLocationFilter@1100409001 : Text[250];
    BEGIN
      IF NOT PlantMgtComp.PlantLocationFilterOfProject(IProjectNo, PlantLocationFilter, PlantCompany) THEN
        EXIT;
      PlantInventory.FILTERGROUP(9);
      PlantInventory.SETFILTER(Location, PlantLocationFilter);
      PlantInventory.FILTERGROUP(0);
      PlantInventHistPage.SETTABLEVIEW(PlantInventory);
      PlantInventHistPage.SetCompany(PlantCompany);
      PlantInventHistPage.RUNMODAL;
    END;

    PROCEDURE RunQADeviationCard@1100525010(ProjectNo@1100525000 : Code[20];QADeviationNo@1100525001 : Code[20]);
    VAR
      QADeviation@1100528400 : Record 11125986;
      QADeviationCardPage@1100525005 : Page 11125986;
    BEGIN
      QADeviationCardPage.SetProjectFilter(ProjectNo);
      IF QADeviation.GET(QADeviationNo) THEN
        QADeviationCardPage.SETRECORD(QADeviation);
      QADeviationCardPage.SetSourceNonEditable(TRUE);
      QADeviationCardPage.RUNMODAL;
    END;

    PROCEDURE RunAccidentCardQA@1100525008(ProjectNo@1100525000 : Code[20];AccidentNo@1100525001 : Code[20]);
    VAR
      Accident@1100525004 : Record 11126005;
      AccidentCardPage@1100525006 : Page 11126005;
    BEGIN
      AccidentCardPage.SetProject(ProjectNo, TRUE);
      IF Accident.GET(AccidentNo) THEN
        AccidentCardPage.SETRECORD(Accident);
      AccidentCardPage.RUNMODAL;
    END;

    LOCAL PROCEDURE GetSiBDispatchNoteDS@1100525044(IProjectNo@1100525001 : Code[20];IApproved@1100525000 : Boolean;VAR ODispatchNoteSiB@1100525002 : Record 11072651);
    BEGIN
      ODispatchNoteSiB.RESET;
      ODispatchNoteSiB.FILTERGROUP(2);
      ODispatchNoteSiB.SETRANGE("Project No.", IProjectNo);
      ODispatchNoteSiB.SETRANGE(Approved, IApproved);
      ODispatchNoteSiB.FILTERGROUP(0);
    END;

    PROCEDURE GetNoOfSiBDispatchNotes@1100525045(IProjectNo@1100525001 : Code[20];IApproved@1100525002 : Boolean) : Integer;
    VAR
      DispatchNoteSiB@1100525000 : Record 11072651;
    BEGIN
      GetSiBDispatchNoteDS(IProjectNo, IApproved, DispatchNoteSiB);
      EXIT(DispatchNoteSiB.COUNT);
    END;

    LOCAL PROCEDURE GetSiBInvoiceDS@1100525047(IProjectNo@1100525003 : Code[20];IApproved@1100525000 : Boolean;VAR OInvoiceSiB@1100525002 : Record 11072653);
    BEGIN
      OInvoiceSiB.RESET;
      OInvoiceSiB.FILTERGROUP(2);
      OInvoiceSiB.SETRANGE("Project No.", IProjectNo);
      OInvoiceSiB.SETRANGE(Approved, IApproved);
      OInvoiceSiB.FILTERGROUP(0);
    END;

    PROCEDURE GetNoOfSiBInvoices@1100525046(IProjectNo@1100525001 : Code[20];IApproved@1100525000 : Boolean) : Integer;
    VAR
      InvoiceSiB@1100525002 : Record 11072653;
    BEGIN
      GetSiBInvoiceDS(IProjectNo, IApproved, InvoiceSiB);
      EXIT(InvoiceSiB.COUNT);
    END;

    PROCEDURE RunSiB@1100528900(IProjectNo@1100528900 : Code[20];IAction@1100528901 : Integer);
    VAR
      lvDispatchNoteRec@1100528902 : Record 11072651;
      lvInvoiceRec@1100528903 : Record 11072653;
    BEGIN
      //DP00065
      IF (IAction = 1) OR (IAction = 2) THEN BEGIN
        GetSiBDispatchNoteDS(IProjectNo, IAction = 2, lvDispatchNoteRec);
        IF (IAction = 1) THEN
          PAGE.RUNMODAL(PAGE::"Dispatch Note List (SiB)", lvDispatchNoteRec)
        ELSE
          PAGE.RUNMODAL(PAGE::"Approved Disp Note List (SiB)", lvDispatchNoteRec);
      END;

      IF (IAction = 3) OR (IAction = 4) THEN BEGIN
        GetSiBInvoiceDS(IProjectNo, IAction = 4, lvInvoiceRec);
        PAGE.RUNMODAL(PAGE::"Invoice List (SiB)", lvInvoiceRec)
      END
    END;

    LOCAL PROCEDURE GetPrognosisDS@1100525028(IProjectNo@1100525000 : Code[20];VAR OPrognosis@1100525001 : Record 11012034);
    BEGIN
      OPrognosis.RESET;
      OPrognosis.FILTERGROUP(2);
      OPrognosis.SETRANGE("Project No.", IProjectNo);
      OPrognosis.FILTERGROUP(0);
    END;

    PROCEDURE GetNoOfPrognosis@1100525030(IProjectNo@1100525000 : Code[20]) : Integer;
    VAR
      Prognosis@1100525001 : Record 11012034;
    BEGIN
      GetPrognosisDS(IProjectNo, Prognosis);
      EXIT(Prognosis.COUNT);
    END;

    PROCEDURE RunPrognosis@1100528700(ProjectNo@1100528700 : Code[20]);
    VAR
      Job@1100525000 : Record 11072003;
      PrognosisList@1100528703 : Page 11012087;
    BEGIN
      Job.GET(ProjectNo);
      PrognosisList.SetProject(ProjectNo);
      PrognosisList.RUNMODAL;
    END;

    PROCEDURE RunProjectInstallments@1100528701(ProjectNo@1100528702 : Code[20]);
    VAR
      ProjectInstallments@1100528700 : Page 11012025;
    BEGIN
      ProjectInstallments.SetProject(ProjectNo);
      ProjectInstallments.RUNMODAL;
    END;

    PROCEDURE RunDocuments@1100528702(ProjectNo@1100528700 : Code[20]);
    VAR
      Job@1100528701 : Record 11072003;
      RecRef@1100528702 : RecordRef;
      DocumentFilters@1100528703 : Codeunit 11012432;
    BEGIN
      Job.GET(ProjectNo);
      RecRef.GETTABLE(Job);
      // ByCompany changed to FALSE, otherwise documents are not showed in the archive company
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, Job."Global Dimension 1 Code", FALSE, FALSE);
    END;

    LOCAL PROCEDURE GetJobLedgerEntryDS@1100525024(IProjectNo@1100525001 : Code[20];VAR OJobLedgerEntry@1100525000 : Record 11072005);
    BEGIN
      OJobLedgerEntry.FILTERGROUP(2);
      OJobLedgerEntry.SETRANGE("Job No.", IProjectNo);
      OJobLedgerEntry.FILTERGROUP(0);
    END;

    PROCEDURE GetNoOfJobLedgerEntries@1100525026(IProjectNo@1100525001 : Code[20]) : Integer;
    VAR
      JobLedgerEntry@1100525000 : Record 11072005;
    BEGIN
      GetJobLedgerEntryDS(IProjectNo, JobLedgerEntry);
      EXIT(JobLedgerEntry.COUNT);
    END;

    PROCEDURE RunJobLedgerEntry@1100529700(IProjectNo@1100525004 : Code[20]);
    VAR
      JobLedgerEntry@1100525001 : Record 11072005;
      JobLedgerEntriesPage@1100529700 : Page 11072005;
    BEGIN
      GetJobLedgerEntryDS(IProjectNo, JobLedgerEntry);

      JobLedgerEntriesPage.SETTABLEVIEW(JobLedgerEntry);
      JobLedgerEntriesPage.EDITABLE(FALSE);
      JobLedgerEntriesPage.RUNMODAL;
    END;

    LOCAL PROCEDURE GetInstallmentOverviewDS@1100525043(IProjectNo@1100525000 : Code[20];IPrincipal@1100525002 : Code[20];VAR OInstallmentOverview@1100525001 : Record 11012265);
    BEGIN
      OInstallmentOverview.RESET;
      OInstallmentOverview.FILTERGROUP(2);
      OInstallmentOverview.SETRANGE("Project No.", IProjectNo);
      OInstallmentOverview.SETRANGE(Principal, IPrincipal);
      OInstallmentOverview.FILTERGROUP(0);
    END;

    PROCEDURE GetNoOfInstallmentOverviews@1100525042(IProjectNo@1100525002 : Code[20];IPrincipal@1100525001 : Code[20]) : Integer;
    VAR
      InstallmentOverview@1100525000 : Record 11012265;
    BEGIN
      GetInstallmentOverviewDS(IProjectNo, IPrincipal, InstallmentOverview);
      EXIT(InstallmentOverview.COUNT);
    END;

    PROCEDURE RunInstallmentOverview@1100525040(IProjectNo@1100525000 : Code[20];IPrincipal@1100525004 : Code[20]);
    VAR
      Job@1100525001 : Record 11072003;
      InstallmentOverview@1100525002 : Record 11012265;
      InstallmentOverviewList@1100525003 : Page 11020557;
    BEGIN
      IF Job.GET(IProjectNo) THEN
        IF NOT Job.RAW THEN
          ERROR(Text000);

      GetInstallmentOverviewDS(IProjectNo, IPrincipal, InstallmentOverview);
      IF InstallmentOverview.FINDLAST THEN;
      InstallmentOverviewList.SETTABLEVIEW(InstallmentOverview);
      InstallmentOverviewList.RUN;
    END;

    PROCEDURE RunPurchaseRequisitions@1100529800(ProjectNo@1100529800 : Code[20]);
    VAR
      PurchaseRequisition@1100529801 : Record 11229330;
      PurchaseRequisitionList@1100529802 : Page 11126652;
    BEGIN
      PurchaseRequisition.FILTERGROUP(2);
      PurchaseRequisition.SETRANGE("Project No.", ProjectNo);
      PurchaseRequisition.FILTERGROUP(0);

      PurchaseRequisitionList.SETTABLEVIEW(PurchaseRequisition);
      PurchaseRequisitionList.RUNMODAL;
    END;

    PROCEDURE RunTextLines@1100527400(ProjectNo@1100527400 : Code[20];Type2@1100527403 : Option);
    VAR
      TextLineSMF@1100527401 : Record 11125526;
      SiteManagerFormText@1100527402 : Page 11125527;
    BEGIN
      IF ProjectNo = '' THEN
        EXIT;
      TextLineSMF.FILTERGROUP(2);
      TextLineSMF.SETRANGE("Project No.", ProjectNo);
      TextLineSMF.SETRANGE(Type, Type2);
      TextLineSMF.FILTERGROUP(0);

      SiteManagerFormText.SETTABLEVIEW(TextLineSMF);
      SiteManagerFormText.RUNMODAL;
    END;

    BEGIN
    END.
  }
}

