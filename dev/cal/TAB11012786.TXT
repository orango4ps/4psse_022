OBJECT Table 11012786 Sales Offer Amount
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ValidateAlternative();
             END;

    OnDelete=BEGIN
               DistributeOfferAmounts(xRec."Document Type", xRec."Document No.", 0, TRUE, xRec."Alternative No.");
             END;

    CaptionML=[ENU=Sales Offer Amount;
               NOR=Salgstilbudsbel›p;
               SVE=F”rs„ljningsanbudsbelopp];
  }
  FIELDS
  {
    { 5   ;   ;Document Type       ;Option        ;OnValidate=BEGIN
                                                                IF ("Document Type" = "Document Type"::Order) THEN
                                                                  "Alternative No." := 0;
                                                              END;

                                                   CaptionML=[ENU=Document Type;
                                                              NOR=Dokumenttype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Invoice Proposal,,,,,Posted Invoice,Posted Credit Memo;
                                                                    NOR=Tilbud,Ordre,Faktura,Kreditnota,Rammeordre,Returordre,Fakturaforslag,,,,,Bokf›rt Faktura,Bokf›rt kreditnota;
                                                                    SVE=Offert,Order,Faktura,Kreditnota,Avropsorder,Returorder,Fakturaf”rslag,,,,,Bokf”rd faktura,Bokf”rd kreditnota];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Invoice Proposal,,,,,Posted Invoice,Posted Credit Memo;
                                                   Description=Should be correspond to that of the Sales Line, only options 'Quote', 'Order' and 'Invoice' are used. 'Posted Invoice' and 'Posted Credit Memo' added. }
    { 10  ;   ;Document No.        ;Code20        ;TableRelation="Sales Header".No. WHERE (Document Type=FIELD(Document Type));
                                                   CaptionML=[ENU=Document No.;
                                                              NOR=Dokumentnr.;
                                                              SVE=Dokumentnr] }
    { 20  ;   ;Alternative No.     ;Integer       ;OnValidate=BEGIN
                                                                ValidateAlternative();
                                                              END;

                                                   CaptionML=[ENU=Alternative No.;
                                                              NOR=Alternativnr.;
                                                              SVE=Alternativnr];
                                                   MinValue=0 }
    { 30  ;   ;Offer Amount        ;Decimal       ;CaptionML=[ENU=Offer Amount;
                                                              NOR=Tilbudsbel›p;
                                                              SVE=Anbudsbelopp] }
  }
  KEYS
  {
    {    ;Document Type,Document No.,Alternative No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100485000 : TextConst 'ENU=not allowed for Sales Orders, only Alternitve No. ''0'' allowed;NOR=Ikke tillatt for salgsordre, kun alternativet ''0'' er tillatt;SVE=Inte till†tet f”r f”rs„ljningsorder, endast alternativet ''0'' „r till†tet';

    PROCEDURE ValidateAlternative@1100485002();
    BEGIN
      IF ("Document Type" = "Document Type"::Order) AND ("Alternative No." <> 0) THEN
        FIELDERROR("Alternative No.", Text001);
    END;

    PROCEDURE GetSalesAmount@1100485001() : Decimal;
    VAR
      lvSalesLineRec@1100485000 : Record 37;
      lvTotalAmt@1100485001 : Decimal;
    BEGIN
      lvSalesLineRec.SETRANGE("Document Type", "Document Type");
      lvSalesLineRec.SETRANGE("Document No.", "Document No.");
      lvSalesLineRec.SETFILTER(Type, '<>0');
      IF "Document Type" = "Document Type"::Quote THEN BEGIN
        lvSalesLineRec.SETRANGE("Alternative No.", "Alternative No.");
        lvSalesLineRec.SETRANGE(Optional, FALSE);
      END;
      IF lvSalesLineRec.FINDSET(FALSE, FALSE) THEN BEGIN
        REPEAT
          lvTotalAmt := lvTotalAmt + lvSalesLineRec."Line Amount";
        UNTIL lvSalesLineRec.NEXT = 0;
      END;
      EXIT(lvTotalAmt);
    END;

    PROCEDURE DistributeOfferAmounts@1100485000(IDocType@1100485007 : Option;IDocNo@1100485008 : Code[20];ISkipLineNo@1100485010 : Integer;IAlternativeDeleted@1100485012 : Boolean;IDeletedAlternativeNo@1100485011 : Integer);
    VAR
      lvOffAmtRec@1100485000 : Record 11012786;
      lvSalesLineRec@1100485001 : Record 37;
      lvLastLineNo@1100485003 : Integer;
      lvTotalAmt@1100485002 : Decimal;
      lvSubAmtOld@1100485004 : Decimal;
      lvSubAmtNew@1100485005 : Decimal;
      lvText11012001@1100485006 : TextConst 'ENU=Total amount of alternative ''%1'' is zero, distribute offer amount not possible for this alternative.;NOR=Totalt antall for alternativ ''%1'' er Null, Distribuere tilbudsbel›pet er ikke mulig for dette alternativet.;SVE=Totalt antal alternativ ''%1'' „r noll, distribuera anbudsbeloppet „r inte m”jligt f”r detta alternativ.';
      lvText11012002@1100485009 : TextConst 'ENU=Total amount is zero, distribute offer amount not possible.;NOR=Totalt bel›p er Null, distribuere tilbudsbel›pet er ikke mulig.;SVE=Totalt belopp „r noll, distribuera anbudsbeloppet „r inte m”jligt.';
    BEGIN
      //**4PS
      IF (IDocNo = '') THEN
        EXIT;

      lvOffAmtRec.SETRANGE("Document Type", IDocType);
      lvOffAmtRec.SETRANGE("Document No.", IDocNo);
      IF IAlternativeDeleted THEN BEGIN
        lvOffAmtRec.SETRANGE("Alternative No.", IDeletedAlternativeNo);
        lvOffAmtRec."Alternative No." := IDeletedAlternativeNo;
        lvOffAmtRec."Offer Amount" := 0;
      END ELSE BEGIN
        IF lvOffAmtRec."Document Type" <> lvOffAmtRec."Document Type"::Quote THEN
          lvOffAmtRec.SETRANGE("Alternative No.", 0);
        IF NOT lvOffAmtRec.FINDSET(FALSE, FALSE) THEN
          EXIT;
      END;

      REPEAT
        lvTotalAmt := 0;
        lvSalesLineRec.RESET;
        lvSalesLineRec.SETRANGE("Document Type", IDocType);
        lvSalesLineRec.SETRANGE("Document No.", IDocNo);
        lvSalesLineRec.SETFILTER(Type, '<>0');
        lvSalesLineRec.SETFILTER("Line Amount", '<>0');
        IF lvOffAmtRec."Document Type" = lvOffAmtRec."Document Type"::Quote THEN BEGIN
          lvSalesLineRec.SETRANGE("Alternative No.", lvOffAmtRec."Alternative No.");
          lvSalesLineRec.SETRANGE(Optional, FALSE);
        END;
        IF lvSalesLineRec.FINDSET THEN BEGIN
          REPEAT
            lvLastLineNo := lvSalesLineRec."Line No.";
            lvTotalAmt := lvTotalAmt + lvSalesLineRec."Line Amount";
          UNTIL lvSalesLineRec.NEXT = 0;
          IF lvTotalAmt <> lvOffAmtRec."Offer Amount" THEN BEGIN
            lvSalesLineRec.SETFILTER(Quantity, '<>0');
            IF ISkipLineNo > 0 THEN
              lvSalesLineRec.SETFILTER("Line No.", '<>%1', ISkipLineNo); // To Prevent SQL error message
            IF lvSalesLineRec.FINDSET(TRUE, FALSE) THEN BEGIN
              IF lvTotalAmt = 0 THEN BEGIN
                IF lvOffAmtRec."Document Type" = lvOffAmtRec."Document Type"::Quote THEN
                  MESSAGE(lvText11012001, lvOffAmtRec."Alternative No.")
                ELSE
                  MESSAGE(lvText11012002);
              END ELSE BEGIN
                lvSubAmtOld := 0;
                lvSubAmtNew := 0;
                REPEAT
                  lvSubAmtOld := lvSubAmtOld + lvSalesLineRec."Line Amount";
                  IF lvOffAmtRec."Offer Amount" <> 0 THEN BEGIN
                    IF lvSalesLineRec."Line No." = lvLastLineNo THEN
                      lvSalesLineRec.VALIDATE("Line Amount", lvOffAmtRec."Offer Amount" - lvSubAmtNew)
                    ELSE
                      lvSalesLineRec.VALIDATE("Line Amount", ((lvSubAmtOld / lvTotalAmt) * lvOffAmtRec."Offer Amount") - lvSubAmtNew);
                  END ELSE
                    IF lvSalesLineRec."Line Discount %" <> 0 THEN
                      lvSalesLineRec.VALIDATE("Line Discount %", 0);
                  lvSalesLineRec.MODIFY;
                  lvSubAmtNew := lvSubAmtNew + lvSalesLineRec."Line Amount";
                UNTIL lvSalesLineRec.NEXT = 0;
              END;
            END;
          END;
        END;
      UNTIL IAlternativeDeleted OR (lvOffAmtRec.NEXT = 0);
    END;

    BEGIN
    END.
  }
}

