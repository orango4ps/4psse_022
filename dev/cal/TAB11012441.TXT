OBJECT Table 11012441 Site Mngmnt. Overtime Rules
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=BEGIN
               CheckEndingTimeNotInNextDay();
             END;

    OnModify=BEGIN
               CheckEndingTimeNotInNextDay();
             END;

    CaptionML=[ENU=Overtime Rules;
               NOR=Overtidsregler;
               SVE=™vertidsregler];
  }
  FIELDS
  {
    { 10  ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=CAO,Employee;
                                                                    NOR=Adm.dir,Ansatt;
                                                                    SVE=KA,Anst„lld];
                                                   OptionString=CAO,Employee;
                                                   Description=Only option CAO is used. }
    { 20  ;   ;Code                ;Code20        ;TableRelation=IF (Type=CONST(CAO)) "Site Mngmnt. CAO".Code
                                                                 ELSE IF (Type=CONST(Employee)) Employee.No.;
                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod] }
    { 30  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 40  ;   ;Day                 ;Option        ;CaptionML=[ENU=Day;
                                                              NOR=Dag;
                                                              SVE=Dag];
                                                   OptionCaptionML=[ENU=Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday;
                                                                    NOR=Mandag,Tirsdag,Onsdag,Torsdag,Fredag,L›rdag,S›ndag;
                                                                    SVE=M†ndag,Tisdag,Onsdag,Torsdag,Fredag,L”rdag,S”ndag];
                                                   OptionString=Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday }
    { 50  ;   ;Hours               ;Decimal       ;CaptionML=[ENU=Hours;
                                                              NOR="Timer ";
                                                              SVE=Timmar];
                                                   MinValue=0 }
    { 60  ;   ;Wage Component      ;Code20        ;TableRelation="Wage Component".Code WHERE (Component Type=CONST(Hours));
                                                   CaptionML=[ENU=Wage Component;
                                                              NOR=L›nnsart;
                                                              SVE=L”neart] }
    { 110 ;   ;Starting Time       ;Time          ;OnValidate=BEGIN
                                                                IF "Starting Time" <> 0T THEN BEGIN
                                                                  IF NOT CheckSiteMgtBRWTimeBased('') THEN
                                                                    TESTFIELD("Starting Time", 0T);
                                                                  IF "Ending Time" <> 0T THEN
                                                                    CheckEndingTimeNotInNextDay();
                                                                END ELSE BEGIN
                                                                  IF "Ending Time" <> 0T THEN
                                                                    "Ending Time" := 0T;
                                                                END;
                                                                RoundTimeOnMinutes("Starting Time");
                                                              END;

                                                   CaptionML=[ENU=Starting Time;
                                                              NOR=Starttidspunkt;
                                                              SVE=Starttid] }
    { 120 ;   ;Ending Time         ;Time          ;OnValidate=BEGIN
                                                                IF "Ending Time" <> 0T THEN BEGIN
                                                                  IF NOT CheckSiteMgtBRWTimeBased('') THEN
                                                                    TESTFIELD("Ending Time", 0T);
                                                                END;
                                                                RoundTimeOnMinutes("Ending Time");
                                                              END;

                                                   CaptionML=[ENU=Ending Time;
                                                              NOR=Sluttidspunkt;
                                                              SVE=Sluttid] }
  }
  KEYS
  {
    {    ;Type,Code,Line No.                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE RoundTimeOnMinutes@1100525000(VAR VarTime@1100525000 : Time);
    VAR
      lvDateTime@1100525001 : DateTime;
    BEGIN
      IF VarTime = 0T THEN
        EXIT;
      lvDateTime := CREATEDATETIME(TODAY, VarTime);
      lvDateTime := ROUNDDATETIME(lvDateTime, 60000);
      VarTime := DT2TIME(lvDateTime);
    END;

    PROCEDURE CheckSiteMgtBRWTimeBased@1100525001(ICompany@1100525002 : Text[30]) : Boolean;
    VAR
      lvSiteMgtHoursSetupRec@1100525000 : Record 11012355;
    BEGIN
      IF ICompany <> '' THEN
        lvSiteMgtHoursSetupRec.CHANGECOMPANY(ICompany);
      lvSiteMgtHoursSetupRec.GET;
      IF lvSiteMgtHoursSetupRec."Overtime Rules Based on Times" THEN
        EXIT(TRUE);
      EXIT(FALSE);
    END;

    PROCEDURE CheckEndingTimeNotInNextDay@1100525002();
    BEGIN
      //* Do not allow fi 22::00 to 6:00 (next day), must be 22:00 to 00:00. Otherwise it is not possible to set filters
      //* on working hours (starting/ending time) in CU11012178.
      IF ("Starting Time" <> 0T) AND ("Ending Time" < "Starting Time") THEN
        EVALUATE("Ending Time", '0');
    END;

    BEGIN
    END.
  }
}

