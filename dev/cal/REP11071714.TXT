OBJECT Report 11071714 MMR Copy Recording Qty.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Aufnahmemenge von Kalt-Aufnahmemenge kopieren;
               ENU=Copy Recording Quantity from Cold Recording Quantity;
               NLD=Copieer opname aantal van koude opname];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   ProjSetup.GET;
                 END;

    OnPreReport=BEGIN
                  Window.OPEN(Text000 + Text001);
                  IF ProjCde = '' THEN
                    ProjCde := Job.GETFILTER("No.");
                END;

    OnPostReport=BEGIN
                   Window.CLOSE;
                   IF CounterTotal = 0 THEN
                     MESSAGE(Text007)
                   ELSE
                     MESSAGE(Text008,CounterTotal);
                 END;

  }
  DATASET
  {
    { 8019;    ;DataItem;                    ;
               DataItemTable=Table11072003;
               DataItemTableView=SORTING(No.)
                                 WHERE(No.=FILTER(<>''),
                                       Maintenance And Renovation=CONST(Yes));
               OnAfterGetRecord=BEGIN
                                  IF ("No." = '') THEN
                                    CurrReport.SKIP;
                                  ProjCde := "No.";
                                END;

               ReqFilterFields=No. }

    { 1100528205;1;DataItem;                 ;
               DataItemTable=Table11072251;
               DataItemTableView=SORTING(Project No.,Plot No.,Phase,Recording Date,Seq. No.)
                                 ORDER(Descending)
                                 WHERE(Phase=CONST(Cold Recording),
                                       Plot No.=FILTER(''));
               MaxIteration=1;
               OnPreDataItem=BEGIN
                               IF NOT Job."Maintenance And Renovation" THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  PlotSQRecording.SETRANGE("Project No.", "Plot SQ Recording"."Project No.");
                                  PlotSQRecording.SETRANGE("Plot No.", "Plot SQ Recording"."Plot No.");
                                  PlotSQRecording.SETRANGE(Phase, PlotSQRecording.Phase::"Warm Recording",PlotSQRecording.Phase::Production);
                                  IF PlotSQRecording.COUNT > 1 THEN
                                    ERROR(Text002);
                                END;

               DataItemLink=Project No.=FIELD(No.) }

    { 1100528204;2;DataItem;PlotDataItem     ;
               DataItemTable=Table11012500;
               DataItemTableView=SORTING(Project No.,Plot No.)
                                 WHERE(MMR Status=CONST(Open),
                                       MMR Generate Invoice=CONST(No),
                                       MMR Phase=CONST(Recording));
               OnPreDataItem=BEGIN
                               IF Job."No." <> '' THEN; //For Debugging this line added.
                             END;

               OnAfterGetRecord=BEGIN
                                  IF PlotDataItem."Project No." = Job."No." THEN; //For Debugging this line added.
                                END;

               ReqFilterFields=Plot No.;
               DataItemLink=Project No.=FIELD(Project No.) }

    { 1100528203;3;DataItem;SettlementQuantityCrosslist;
               DataItemTable=Table11072253;
               DataItemTableView=SORTING(Project No.,House Model,Unit,Type,Main Group,Group,Sub Group,Code,Line No.)
                                 ORDER(Ascending);
               OnAfterGetRecord=VAR
                                  PlotSQRecordingLine@1100528200 : Record 11072252;
                                  ShowRecordingType@1100528201 : 'Cold Recording,Warm Recording,Production';
                                BEGIN
                                  PlotSQRecordingLine.SETRANGE("Project No.", SettlementQuantityCrosslist."Project No.");
                                  PlotSQRecordingLine.SETRANGE("Plot No.", PlotDataItem."Plot No.");
                                  PlotSQRecordingLine.SETRANGE("House Model", SettlementQuantityCrosslist."House Model");
                                  PlotSQRecordingLine.SETRANGE(Unit, SettlementQuantityCrosslist.Unit);
                                  PlotSQRecordingLine.SETRANGE("Line No.", SettlementQuantityCrosslist."Line No.");
                                  IF PlotSQRecordingLine.FINDLAST THEN BEGIN
                                    PlotSQRecordingLine.CALCFIELDS("Cold Recording Quantity", "Production Recording Quantity");
                                    SettlementQuantityManagement.Recording_UpdateQuantity(SettlementQuantityCrosslist,PlotDataItem."Plot No.",gvDateFilter,ShowRecordingType::"Warm Recording",PlotSQRecordingLine."Cold Recording Quantity");
                                    CounterTotal := CounterTotal + 1;
                                  END;
                                END;

               DataItemLink=Project No.=FIELD(Project No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF gvSelection = FALSE THEN BEGIN
                     ProjCde := Job.GETFILTER("No.");
                     CustCde := '';
                   END ELSE BEGIN  //db, 18-07-08
                     CustCde := gvCust;
                   END;
                 END;

    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@11012011 : TextConst 'DEU=Aufnahmen werden erstellt... \\;ENU=Creating Recordings....\\;NLD=Opnames worden aangemaakt...\\';
      Text001@11012012 : TextConst 'DEU=Prozentsatz fertig     @1@@@@@@@@@@@@@\;ENU=Percentage Finished  @1@@@@@@@@@@@@@\;NLD=Percentage gereed  @1@@@@@@@@@@@@@\;NOR=Prosent ferdig  @1@@@@@@@@@@@@@\;SVE=Procent f„rdigt  @1@@@@@@@@@@@@@\';
      Text002@1100528204 : TextConst 'DEU=Nach der Voraufnahmephase wurde mehr als eine Aufnahme gefunden;ENU=More than one Recordings found after the Pre-Recording Phase.;NLD=Er zijn al meerdere opnames aanwezig na de koude opname.';
      Text007@11012018 : TextConst 'DEU=Es wurden keine Aufnahmezeilen erstellt.;ENU=There are no Recording Lines created.;NLD=Er zijn geen opnameregels aangemaakt.';
      Text008@11012019 : TextConst 'DEU=%1 Aufnahmezeilen wurden erstellt.;ENU=%1 Recording Lines have been created.;NLD=%1 Opnameregels zijn aangemaakt.';
      ProjSetup@1210190004 : Record 315;
      SettlementQuantityManagement@1100485013 : Codeunit 11071690;
      PlotSQRecording@1100528203 : Record 11072251;
      Window@1210190013 : Dialog;
      CounterTotal@1210190009 : Integer;
      CustCde@1210190008 : Code[20];
      ProjCde@1210190002 : Code[20];
      gvSelection@1100485016 : Boolean;
      gvCust@1100485019 : Code[20];
      gvDateFilter@1100528202 : Date;

    PROCEDURE SetSelection@1100485000(lvProj@1210190000 : Code[20];lvDateFilter@1100528200 : Date);
    BEGIN
      ProjCde := lvProj;
      gvDateFilter := lvDateFilter;
      gvSelection := TRUE;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

