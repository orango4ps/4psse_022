OBJECT Codeunit 6086304 Shortcut Field Functions
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.3.00.07,4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 8=r,
                TableData 6086300=r,
                TableData 6086320=r,
                TableData 6086338=r,
                TableData 6086339=r,
                TableData 6086345=r,
                TableData 6086352=r,
                TableData 6086360=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SpecifyParentFieldErr@6086300 : TextConst 'DEU=Sie mÅssen zuerst einen Wert fÅr %1 angeben.;ENU=You must first specify a value for %1.;NLD=U dient eerst een waarde op te geven voor %1.';

    PROCEDURE GetShortcutFieldCode@1160040000(TableID@1160040001 : Integer;FieldNumber@1160040000 : Integer) : Text[250];
    VAR
      ExpSetupShortcutFieldCode@1160040003 : ARRAY [10] OF Code[20];
    BEGIN
      GetShortcutFieldCodesArray(ExpSetupShortcutFieldCode,TableID);
      EXIT(ExpSetupShortcutFieldCode[FieldNumber]);
    END;

    PROCEDURE GetShortcutFieldCaption@1160040007(TableID@1160040001 : Integer;FieldNumber@1160040000 : Integer) : Text[250];
    VAR
      ShortcutFieldCaptions@1160040002 : ARRAY [10] OF Text[250];
    BEGIN
      GetShortcutFieldCaptionsArray(ShortcutFieldCaptions,TableID);
      EXIT(ShortcutFieldCaptions[FieldNumber]);
    END;

    LOCAL PROCEDURE GetShortcutFieldCodesArray@1160040008(VAR ExpSetupShortcutFieldCode@1160040002 : ARRAY [10] OF Code[20];TableID@1160040001 : Integer);
    VAR
      EMSetup@1160040000 : Record 6086300;
    BEGIN
      EMSetup.GET;
      CASE TableID OF
        DATABASE::"Expense Allocation":
          BEGIN
            ExpSetupShortcutFieldCode[1] := EMSetup."Shortcut Field 1 Code (Exp.)";
            ExpSetupShortcutFieldCode[2] := EMSetup."Shortcut Field 2 Code (Exp.)";
            ExpSetupShortcutFieldCode[3] := EMSetup."Shortcut Field 3 Code (Exp.)";
            ExpSetupShortcutFieldCode[4] := EMSetup."Shortcut Field 4 Code (Exp.)";
            ExpSetupShortcutFieldCode[5] := EMSetup."Shortcut Field 5 Code (Exp.)";
            ExpSetupShortcutFieldCode[6] := EMSetup."Shortcut Field 6 Code (Exp.)";
            ExpSetupShortcutFieldCode[7] := EMSetup."Shortcut Field 7 Code (Exp.)";
            ExpSetupShortcutFieldCode[8] := EMSetup."Shortcut Field 8 Code (Exp.)";
            ExpSetupShortcutFieldCode[9] := EMSetup."Shortcut Field 9 Code (Exp.)";
            ExpSetupShortcutFieldCode[10] := EMSetup."Shortcut Field 10 Code (Exp.)";
          END;
        DATABASE::Expense:
          BEGIN
            ExpSetupShortcutFieldCode[1] := EMSetup."Shortcut Field 1 Code (Exp.)";
            ExpSetupShortcutFieldCode[2] := EMSetup."Shortcut Field 2 Code (Exp.)";
            ExpSetupShortcutFieldCode[3] := EMSetup."Shortcut Field 3 Code (Exp.)";
            ExpSetupShortcutFieldCode[4] := EMSetup."Shortcut Field 4 Code (Exp.)";
            ExpSetupShortcutFieldCode[5] := EMSetup."Shortcut Field 5 Code (Exp.)";
            ExpSetupShortcutFieldCode[6] := EMSetup."Shortcut Field 6 Code (Exp.)";
            ExpSetupShortcutFieldCode[7] := EMSetup."Shortcut Field 7 Code (Exp.)";
            ExpSetupShortcutFieldCode[8] := EMSetup."Shortcut Field 8 Code (Exp.)";
            ExpSetupShortcutFieldCode[9] := EMSetup."Shortcut Field 9 Code (Exp.)";
            ExpSetupShortcutFieldCode[10] := EMSetup."Shortcut Field 10 Code (Exp.)";
          END;

        DATABASE::Mileage:
          BEGIN
            ExpSetupShortcutFieldCode[1] := EMSetup."Shortcut Field 1 Code (Mil.)";
            ExpSetupShortcutFieldCode[2] := EMSetup."Shortcut Field 2 Code (Mil.)";
            ExpSetupShortcutFieldCode[3] := EMSetup."Shortcut Field 3 Code (Mil.)";
            ExpSetupShortcutFieldCode[4] := EMSetup."Shortcut Field 4 Code (Mil.)";
            ExpSetupShortcutFieldCode[5] := EMSetup."Shortcut Field 5 Code (Mil.)";
            ExpSetupShortcutFieldCode[6] := EMSetup."Shortcut Field 6 Code (Mil.)";
            ExpSetupShortcutFieldCode[7] := EMSetup."Shortcut Field 7 Code (Mil.)";
            ExpSetupShortcutFieldCode[8] := EMSetup."Shortcut Field 8 Code (Mil.)";
            ExpSetupShortcutFieldCode[9] := EMSetup."Shortcut Field 9 Code (Mil.)";
            ExpSetupShortcutFieldCode[10] := EMSetup."Shortcut Field 10 Code (Mil.)";
          END;

        DATABASE::"Expense Header":
          BEGIN
            ExpSetupShortcutFieldCode[1] := EMSetup."Shortcut Field 1 Code (Sttl.)";
            ExpSetupShortcutFieldCode[2] := EMSetup."Shortcut Field 2 Code (Sttl.)";
            ExpSetupShortcutFieldCode[3] := EMSetup."Shortcut Field 3 Code (Sttl.)";
            ExpSetupShortcutFieldCode[4] := EMSetup."Shortcut Field 4 Code (Sttl.)";
            ExpSetupShortcutFieldCode[5] := EMSetup."Shortcut Field 5 Code (Sttl.)";
            ExpSetupShortcutFieldCode[6] := EMSetup."Shortcut Field 6 Code (Sttl.)";
            ExpSetupShortcutFieldCode[7] := EMSetup."Shortcut Field 7 Code (Sttl.)";
            ExpSetupShortcutFieldCode[8] := EMSetup."Shortcut Field 8 Code (Sttl.)";
            ExpSetupShortcutFieldCode[9] := EMSetup."Shortcut Field 9 Code (Sttl.)";
            ExpSetupShortcutFieldCode[10] := EMSetup."Shortcut Field 10 Code (Sttl.)";
          END;

      END;
    END;

    PROCEDURE GetShortcutApprovalCode@1160040001(FieldNumber@1160040001 : Integer) : Text[250];
    VAR
      ExpSetupShortcutApprovalCode@1160040002 : ARRAY [10] OF Code[20];
    BEGIN
      GetShortcutApprovalCodesArray(ExpSetupShortcutApprovalCode);
      EXIT(ExpSetupShortcutApprovalCode[FieldNumber]);
    END;

    LOCAL PROCEDURE GetShortcutApprovalCodesArray@1160040030(VAR ExpSetupShortcutApprovalCode@1160040000 : ARRAY [10] OF Code[20]);
    VAR
      EMSetup@1160040001 : Record 6086300;
    BEGIN
      EMSetup.GET;
      ExpSetupShortcutApprovalCode[1] := EMSetup."Shortcut Field 1 Code (App.)";
      ExpSetupShortcutApprovalCode[2] := EMSetup."Shortcut Field 2 Code (App.)";
      ExpSetupShortcutApprovalCode[3] := EMSetup."Shortcut Field 3 Code (App.)";
      ExpSetupShortcutApprovalCode[4] := EMSetup."Shortcut Field 4 Code (App.)";
      ExpSetupShortcutApprovalCode[5] := EMSetup."Shortcut Field 5 Code (App.)";
      ExpSetupShortcutApprovalCode[6] := EMSetup."Shortcut Field 6 Code (App.)";
      ExpSetupShortcutApprovalCode[7] := EMSetup."Shortcut Field 7 Code (App.)";
      ExpSetupShortcutApprovalCode[8] := EMSetup."Shortcut Field 8 Code (App.)";
      ExpSetupShortcutApprovalCode[9] := EMSetup."Shortcut Field 9 Code (App.)";
      ExpSetupShortcutApprovalCode[10] := EMSetup."Shortcut Field 10 Code (App.)";
    END;

    PROCEDURE GetShortcutFieldCaptionsArray@1160040012(VAR ShortcutFieldCaptions@1160040000 : ARRAY [10] OF Text[250];TableID@1160040004 : Integer);
    VAR
      Language@1160040005 : Record 8;
      FieldType@1160040001 : Record 6086345;
      FieldTranslation@1160040006 : Record 6086352;
      ExpSetupShortcutFieldCode@1160040003 : ARRAY [10] OF Code[20];
      I@1160040002 : Integer;
    BEGIN
      CLEAR(ShortcutFieldCaptions);

      GetShortcutFieldCodesArray(ExpSetupShortcutFieldCode,TableID);
      FOR I := 1 TO 10 DO BEGIN
        ShortcutFieldCaptions[I] := '';
        IF ExpSetupShortcutFieldCode[I] <> '' THEN
          IF FieldType.GET(ExpSetupShortcutFieldCode[I]) THEN
            IF FieldTranslation.GET(FieldType.Code,Language.GetUserLanguage) THEN
              ShortcutFieldCaptions[I] := FieldTranslation.Translation
            ELSE
              ShortcutFieldCaptions[I] := FieldType.Description;
      END;
    END;

    PROCEDURE GetShortcutAppCaptionsArray@1160040031(VAR ShortcutApprovalCaptions@1160040000 : ARRAY [10] OF Text[250]);
    VAR
      Language@1160040004 : Record 8;
      FieldType@1160040001 : Record 6086345;
      FieldTranslation@1160040005 : Record 6086352;
      ExpSetupShortcutApprovalCode@1160040003 : ARRAY [10] OF Code[20];
      I@1160040002 : Integer;
    BEGIN
      CLEAR(ShortcutApprovalCaptions);

      GetShortcutApprovalCodesArray(ExpSetupShortcutApprovalCode);
      FOR I := 1 TO 10 DO BEGIN
        ShortcutApprovalCaptions[I] := '';
        IF ExpSetupShortcutApprovalCode[I] <> '' THEN
          IF FieldType.GET(ExpSetupShortcutApprovalCode[I]) THEN
            IF FieldTranslation.GET(FieldType.Code,Language.GetUserLanguage) THEN
              ShortcutApprovalCaptions[I] := FieldTranslation.Translation
            ELSE
              ShortcutApprovalCaptions[I] := FieldType.Description;
      END;
    END;

    PROCEDURE ShowShortcutFieldValues@1160040011(VAR ShortcutFieldValues@1160040000 : ARRAY [10] OF Text[250];TableID@1160040006 : Integer;DocumentType@1160040008 : Integer;DocumentNo@1160040009 : Code[20];DocRefNo@1160040007 : Integer);
    VAR
      FieldType@1160040003 : Record 6086345;
      EmAllocDim@1160040010 : Record 6086357;
      EMDim@1160040001 : Record 6086360;
      DimCode@1160040004 : Code[20];
      ExpSetupShortcutFieldCode@1160040005 : ARRAY [10] OF Code[20];
      I@1160040002 : Integer;
    BEGIN
      CLEAR(ShortcutFieldValues);
      IF (DocRefNo = 0) AND (DocumentNo = '') THEN
        EXIT;

      GetShortcutFieldCodesArray(ExpSetupShortcutFieldCode,TableID);
      CASE TableID OF
        DATABASE::"Expense Allocation" :
          FOR I := 1 TO 10 DO BEGIN
            ShortcutFieldValues[I] := '';
            IF ExpSetupShortcutFieldCode[I] <> '' THEN
              IF EmAllocDim.GET(DocRefNo,'',ExpSetupShortcutFieldCode[I]) THEN
                ShortcutFieldValues[I] := EmAllocDim."Field Value"
              ELSE BEGIN
                IF FieldType.GET(ExpSetupShortcutFieldCode[I]) THEN
                  DimCode := FieldType.GetDimCode;
                IF DimCode <> '' THEN
                  ExpSetupShortcutFieldCode[I] := DimCode;
                IF EmAllocDim.GET(DocRefNo,ExpSetupShortcutFieldCode[I],'') THEN
                  ShortcutFieldValues[I] := EmAllocDim."Dimension Value Code";
              END;
          END;
        ELSE
          FOR I := 1 TO 10 DO BEGIN
            ShortcutFieldValues[I] := '';
            IF ExpSetupShortcutFieldCode[I] <> '' THEN
              IF EMDim.GET(TableID,DocumentType,DocumentNo,DocRefNo,'',ExpSetupShortcutFieldCode[I]) THEN
                ShortcutFieldValues[I] := EMDim."Field Value"
              ELSE BEGIN
                IF FieldType.GET(ExpSetupShortcutFieldCode[I]) THEN
                  DimCode := FieldType.GetDimCode;
                IF DimCode <> '' THEN
                  ExpSetupShortcutFieldCode[I] := DimCode;
                IF EMDim.GET(TableID,DocumentType,DocumentNo,DocRefNo,ExpSetupShortcutFieldCode[I],'') THEN
                  ShortcutFieldValues[I] := EMDim."Dimension Value Code";
              END;
          END;
      END;
    END;

    PROCEDURE ShowShortcutApprovalValues@1160040028(VAR ShortcutApprovalValues@1160040000 : ARRAY [10] OF Text[250];TableID@1160040007 : Integer;DocumentType@1160040009 : Integer;DocumentNo@1160040008 : Code[20];DocRefNo@1160040006 : Integer);
    VAR
      FieldType@1160040002 : Record 6086345;
      EmAllocDim@1160040010 : Record 6086357;
      EMDim@1160040004 : Record 6086360;
      DimCode@1160040001 : Code[20];
      ExpSetupShortcutApprovalCode@1160040005 : ARRAY [10] OF Code[20];
      I@1160040003 : Integer;
    BEGIN
      CLEAR(ShortcutApprovalValues);
      IF (DocRefNo = 0) AND (DocumentNo = '') THEN
        EXIT;

      GetShortcutApprovalCodesArray(ExpSetupShortcutApprovalCode);
      FOR I := 1 TO 10 DO BEGIN
        ShortcutApprovalValues[I] := '';
        IF ExpSetupShortcutApprovalCode[I] <> '' THEN
          CASE TableID OF
            DATABASE::"Expense Allocation" :
              IF EmAllocDim.GET(DocRefNo,'',ExpSetupShortcutApprovalCode[I]) THEN
                ShortcutApprovalValues[I] := EmAllocDim."Field Value"
              ELSE BEGIN
                IF FieldType.GET(ExpSetupShortcutApprovalCode[I]) THEN
                  DimCode := FieldType.GetDimCode;
                IF DimCode <> '' THEN
                  ExpSetupShortcutApprovalCode[I] := DimCode;
                IF EmAllocDim.GET(DocRefNo,ExpSetupShortcutApprovalCode[I]) THEN
                  ShortcutApprovalValues[I] := EmAllocDim."Dimension Value Code";
              END;

            ELSE
              IF EMDim.GET(TableID,DocumentType,DocumentNo,DocRefNo,'',ExpSetupShortcutApprovalCode[I]) THEN
                ShortcutApprovalValues[I] := EMDim."Field Value"
              ELSE BEGIN
                IF FieldType.GET(ExpSetupShortcutApprovalCode[I]) THEN
                  DimCode := FieldType.GetDimCode;
                IF DimCode <> '' THEN
                  ExpSetupShortcutApprovalCode[I] := DimCode;
                IF EMDim.GET(TableID,DocumentType,DocumentNo,DocRefNo,ExpSetupShortcutApprovalCode[I],'') THEN
                  ShortcutApprovalValues[I] := EMDim."Dimension Value Code";
              END;
          END;
      END;
    END;

    PROCEDURE ValidateShortcutFieldValue@1160040014(FieldNumber@1160040001 : Integer;TableID@1160040008 : Integer;DocumentType@1160040003 : Integer;DocumentNo@1160040010 : Code[20];DocRefNo@1160040009 : Integer;VAR ShortcutFieldValue@1160040000 : Text[250]);
    VAR
      DimCode@6086301 : Code[20];
      ExpSetupShortcutFieldCode@1160040007 : ARRAY [10] OF Code[20];
      FieldCode@6086300 : Code[20];
    BEGIN
      GetShortcutFieldCodesArray(ExpSetupShortcutFieldCode,TableID);
      GetShFieldOrDimensionCode(ExpSetupShortcutFieldCode,FieldNumber,DimCode,FieldCode);
      SetFldValueOnEMDimension(TableID,DocumentType,DocumentNo,DocRefNo,DimCode,FieldCode,ShortcutFieldValue);
    END;

    LOCAL PROCEDURE GetRecordFromPK@1160040003(TableID@1160040003 : Integer;DocumentType@1160040005 : Integer;DocumentNo@1160040006 : Code[20];DocRefNo@1160040002 : Integer;VAR Expense@1160040000 : Record 6086320;VAR Mileage@1160040001 : Record 6086338;VAR ExpHeader@1160040004 : Record 6086339);
    BEGIN
      CASE TableID OF
        DATABASE::Expense:
          Expense.GET(DocRefNo);

        DATABASE::Mileage:
          Mileage.GET(DocRefNo);

        DATABASE::"Expense Header":
          ExpHeader.GET(DocumentType,DocumentNo);
      END;
    END;

    PROCEDURE ReValidateRecord@1160040002(TableID@1160040001 : Integer;DocumentType@1160040008 : Integer;DocumentNo@1160040007 : Code[20];DocRefNo@1160040000 : Integer);
    VAR
      Expense@1160040005 : Record 6086320;
      Mileage@1160040004 : Record 6086338;
      ExpHeader@1160040009 : Record 6086339;
    BEGIN
      GetRecordFromPK(TableID,DocumentType,DocumentNo,DocRefNo,Expense,Mileage,ExpHeader);

      CASE TableID OF
        DATABASE::Expense:
          CODEUNIT.RUN(CODEUNIT::"Expense-Validate",Expense);
        DATABASE::Mileage:
          CODEUNIT.RUN(CODEUNIT::"Mileage-Validate",Mileage);
        DATABASE::"Expense Header":
          CODEUNIT.RUN(CODEUNIT::"Exp. Header - Validate",ExpHeader);
      END;
    END;

    PROCEDURE LookupShortcutFieldValue@1160040006(FieldNumber@1160040001 : Integer;TableID@1160040007 : Integer;DocumentType@1160040009 : Integer;DocumentNo@1160040008 : Code[20];DocRefNo@1160040006 : Integer;IsApprovalField@6086300 : Boolean;VAR Text@1160040000 : Text[250]) : Boolean;
    VAR
      FieldType@1160040002 : Record 6086345;
      LookupValue@1160040003 : Record 6086347;
      EMDim@1160040004 : Record 6086360;
      EMDimAlloc@1160040011 : Record 6086357;
      ExpSetupShortcutFieldCode@1160040005 : ARRAY [10] OF Code[20];
      ParentFieldCode@1160040010 : Code[20];
      FieldValue@1160040012 : Text[250];
    BEGIN
      IF IsApprovalField THEN
        GetShortcutApprovalCodesArray(ExpSetupShortcutFieldCode)
      ELSE
        GetShortcutFieldCodesArray(ExpSetupShortcutFieldCode,TableID);

      FieldType.GET(ExpSetupShortcutFieldCode[FieldNumber]);
      IF (FieldType."Source Table No." = 0) AND (NOT FieldType."Manual Lookup Values") THEN
        EXIT;

      LookupValue.SETRANGE("Field Type Code",FieldType.Code);
      ParentFieldCode := FieldType.GetParentFieldTypeCode;
      IF ParentFieldCode <> '' THEN BEGIN
        IF TableID = DATABASE::"Expense Allocation Dimension" THEN BEGIN
          IF EMDimAlloc.GET(DocRefNo,'',FieldType.GetParentFieldTypeCode) THEN
            FieldValue := EMDimAlloc."Field Value";
        END ELSE
          IF EMDim.GET(TableID,DocumentType,DocumentNo,DocRefNo,'',FieldType.GetParentFieldTypeCode) THEN
            FieldValue := EMDim."Field Value";

        IF FieldValue = '' THEN
          ERROR(SpecifyParentFieldErr,ParentFieldCode);

        LookupValue.SETRANGE("Parent Field Type Code",FieldValue);
      END;

      IF PAGE.RUNMODAL(0,LookupValue) = ACTION::LookupOK THEN BEGIN
        Text := LookupValue.Code;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE GetMergedScFieldCodesArray@1160040005(VAR ExpSetupShortcutFieldCode@1160040002 : ARRAY [10] OF Code[20]);
    VAR
      EMSetup@1160040000 : Record 6086300;
      MilSetupShortcutFieldCode@1160040003 : ARRAY [10] OF Code[20];
      i@1160040004 : Integer;
      j@1160040005 : Integer;
      k@1160040006 : Integer;
      CodeAlreadyFound@1160040007 : Boolean;
    BEGIN
      EMSetup.GET;

      GetShortcutFieldCodesArray(ExpSetupShortcutFieldCode,DATABASE::Expense);
      GetShortcutFieldCodesArray(MilSetupShortcutFieldCode,DATABASE::Mileage);

      FOR i := 1 TO 10 DO
        IF ExpSetupShortcutFieldCode[i] = '' THEN
          FOR j := 1 TO 10 DO BEGIN
            CodeAlreadyFound := FALSE;

            //CAN I FIND THE SAME FIELDS TWICE
            FOR k := 1 TO 10 DO
              IF MilSetupShortcutFieldCode[j] = ExpSetupShortcutFieldCode[k] THEN
                CodeAlreadyFound := TRUE;

            IF NOT CodeAlreadyFound THEN
              ExpSetupShortcutFieldCode[i] := MilSetupShortcutFieldCode[j];
          END;
    END;

    PROCEDURE ShowMergedShortcutFieldValues@1160040009(TableID@1160040005 : Integer;DocumentType@1160040004 : Integer;DocumentNo@1160040003 : Code[20];DocRefNo@1160040002 : Integer;VAR ShortcutFieldValues@1160040000 : ARRAY [10] OF Text[250]);
    VAR
      Expense@1160040009 : Record 6086320;
      Mileage@1160040008 : Record 6086338;
      ShortcutFieldValuesExp@1160040006 : ARRAY [10] OF Text[250];
      ShortcutFieldValuesMil@1160040007 : ARRAY [10] OF Text[250];
      ShortcutFieldCodes@1160040001 : ARRAY [10] OF Code[20];
      FldNo@1160040011 : Integer;
      i@1160040010 : Integer;
    BEGIN
      GetMergedScFieldCodesArray(ShortcutFieldCodes);

      CASE TableID OF
        DATABASE::Expense:
          BEGIN
            Expense.GET(DocRefNo);
            ShowShortcutFieldValues(ShortcutFieldValuesExp,DATABASE::Expense,0,'',Expense."Entry No.");
            FOR i := 1 TO 10 DO BEGIN
              FldNo := GetFieldNoFromCode(DATABASE::Expense,ShortcutFieldCodes[i]);
              IF FldNo <> 0 THEN
                ShortcutFieldValues[i] := ShortcutFieldValuesExp[FldNo];
            END;
          END;

        DATABASE::Mileage:
          BEGIN
            Mileage.GET(DocRefNo);
            ShowShortcutFieldValues(ShortcutFieldValuesMil,DATABASE::Mileage,0,'',Mileage."Entry No.");
            FOR i := 1 TO 10 DO BEGIN
              FldNo := GetFieldNoFromCode(DATABASE::Mileage,ShortcutFieldCodes[i]);
              IF FldNo <> 0 THEN
                ShortcutFieldValues[i] := ShortcutFieldValuesMil[FldNo];
            END;

          END;
      END;
    END;

    PROCEDURE GetMergedScFieldCaptionArray@1160040013(VAR MergedShortcutFieldCaptions@1160040000 : ARRAY [10] OF Text[250]) : Text[250];
    VAR
      ShortcutFieldCaptionsExp@1160040001 : ARRAY [10] OF Text[250];
      ShortcutFieldCaptionsMil@1160040002 : ARRAY [10] OF Text[250];
      ShortcutFieldCodes@1160040004 : ARRAY [10] OF Code[20];
      FldNo@1160040006 : Integer;
      i@1160040005 : Integer;
    BEGIN
      GetMergedScFieldCodesArray(ShortcutFieldCodes);

      GetShortcutFieldCaptionsArray(ShortcutFieldCaptionsExp,DATABASE::Expense);
      GetShortcutFieldCaptionsArray(ShortcutFieldCaptionsMil,DATABASE::Mileage);

      FOR i := 1 TO 10 DO BEGIN
        FldNo := GetFieldNoFromCode(DATABASE::Expense,ShortcutFieldCodes[i]);
        IF FldNo <> 0 THEN
          MergedShortcutFieldCaptions[i] := ShortcutFieldCaptionsExp[FldNo];

        FldNo := GetFieldNoFromCode(DATABASE::Mileage,ShortcutFieldCodes[i]);
        IF FldNo <> 0 THEN
          MergedShortcutFieldCaptions[i] := ShortcutFieldCaptionsMil[FldNo];
      END;
    END;

    LOCAL PROCEDURE GetFieldNoFromCode@1160040010(TableID@1160040000 : Integer;FieldCode@1160040001 : Code[20]) : Integer;
    VAR
      ExpSetupShortcutFieldCode@1160040002 : ARRAY [10] OF Code[20];
      i@1160040003 : Integer;
    BEGIN
      IF FieldCode = '' THEN
        EXIT;

      CASE TableID OF
        DATABASE::Expense:
          GetShortcutFieldCodesArray(ExpSetupShortcutFieldCode,DATABASE::Expense);

        DATABASE::Mileage:
          GetShortcutFieldCodesArray(ExpSetupShortcutFieldCode,DATABASE::Mileage);
      END;

      FOR i := 1 TO 10 DO
        IF ExpSetupShortcutFieldCode[i] = FieldCode THEN
          EXIT(i);
    END;

    PROCEDURE JobNoVisible@1160040015(TableID@1160040000 : Integer) : Boolean;
    VAR
      FieldType@1160040001 : Record 6086345;
      ConfiguredField@1160040002 : Record 6086346;
      ExpSetupShortcutFieldCode@1160040005 : ARRAY [10] OF Code[20];
      i@1160040004 : Integer;
    BEGIN
      //IF IS NOT A FIELD TYPE, THEN IT CANNOT BE CONFIGURED. THE SYSTEM IS NOT INTERESTED IN THIS VALUE.
      FieldType.SETRANGE("Source Table No.",DATABASE::Job);
      FieldType.SETRANGE("Source Field No.",1);
      IF NOT FieldType.FINDFIRST THEN
        EXIT(FALSE);

      //IF IT IS NOT CONFIGURED. THE SYSTEM IS NOT INTERESTED IN THIS VALUE.
      IF NOT ConfiguredField.IsConfiguredFieldForTable(TableID,FieldType.Code) THEN
        EXIT(FALSE);

      //IF IT IS A SHORTCUT FIELD THEN WE DON'T WANT TO SHOW THE FIELD TWICE
      GetShortcutFieldCodesArray(ExpSetupShortcutFieldCode,TableID);
      FOR i := 1 TO 10 DO
        IF ExpSetupShortcutFieldCode[i] = FieldType.Code THEN
          EXIT(FALSE);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE SetFldValueOnEMDimension@6086301(TableID@6086304 : Integer;DocumentType@6086303 : Integer;DocumentNo@6086302 : Code[20];DocRefNo@6086301 : Integer;DimCode@6086309 : Code[20];FieldCode@6086307 : Code[20];VAR ShortcutFieldValue@6086300 : Text[250]);
    VAR
      EmAllocDim@6086306 : Record 6086357;
      EMDim@6086310 : Record 6086360;
    BEGIN
      CASE TableID OF
        DATABASE::"Expense Allocation" :
          IF ShortcutFieldValue = '' THEN BEGIN
            IF EmAllocDim.GET(DocRefNo,DimCode,FieldCode) THEN
              EmAllocDim.DELETE;
          END ELSE
            IF NOT EmAllocDim.GET(DocRefNo,DimCode,FieldCode) THEN BEGIN
              EmAllocDim."Expense Allocation Entry No." := DocRefNo;
              EmAllocDim."Dimension Code" := DimCode;
              EmAllocDim."Field Code" := FieldCode;
              IF DimCode <> '' THEN
                EmAllocDim.VALIDATE("Dimension Value Code",ShortcutFieldValue)
              ELSE
                EmAllocDim.VALIDATE("Field Value",ShortcutFieldValue);
              EmAllocDim.INSERT;
            END ELSE BEGIN
              IF DimCode <> '' THEN
                EmAllocDim.VALIDATE("Dimension Value Code",ShortcutFieldValue)
              ELSE
                EmAllocDim.VALIDATE("Field Value",ShortcutFieldValue);
              EmAllocDim.MODIFY;
            END
        ELSE
          IF ShortcutFieldValue = '' THEN BEGIN
            IF EMDim.GET(TableID,DocumentType,DocumentNo,DocRefNo,DimCode,FieldCode) THEN
              EMDim.DELETE;
          END ELSE
            IF NOT EMDim.GET(TableID,DocumentType,DocumentNo,DocRefNo,DimCode,FieldCode) THEN BEGIN
              EMDim."Table ID" := TableID;
              EMDim."Document Type" := DocumentType;
              EMDim."Document No." := DocumentNo;
              EMDim."Doc. Ref. No." := DocRefNo;
              EMDim."Dimension Code" := DimCode;
              EMDim."Field Code" := FieldCode;
              IF DimCode <> '' THEN
                EMDim.VALIDATE("Dimension Value Code",ShortcutFieldValue)
              ELSE
                EMDim.VALIDATE("Field Value",ShortcutFieldValue);
              EMDim.INSERT;
            END ELSE BEGIN
              IF DimCode <> '' THEN
                EMDim.VALIDATE("Dimension Value Code",ShortcutFieldValue)
              ELSE
                EMDim.VALIDATE("Field Value",ShortcutFieldValue);
              EMDim.MODIFY;
            END;
      END;

      ReValidateRecord(TableID,DocumentType,DocumentNo,DocRefNo);
    END;

    PROCEDURE ValidateAppShortcutFieldValue@6086300(FieldNumber@1160040001 : Integer;TableID@1160040008 : Integer;DocumentType@1160040003 : Integer;DocumentNo@1160040010 : Code[20];DocRefNo@1160040009 : Integer;VAR ShortcutFieldValue@1160040000 : Text[250]);
    VAR
      DimCode@6086301 : Code[20];
      ExpSetupShortcutApprovalCode@1160040007 : ARRAY [10] OF Code[20];
      FieldCode@6086300 : Code[20];
    BEGIN
      GetShortcutApprovalCodesArray(ExpSetupShortcutApprovalCode);
      GetShFieldOrDimensionCode(ExpSetupShortcutApprovalCode,FieldNumber,DimCode,FieldCode);
      SetFldValueOnEMDimension(TableID,DocumentType,DocumentNo,DocRefNo,DimCode,FieldCode,ShortcutFieldValue);
    END;

    LOCAL PROCEDURE GetShFieldOrDimensionCode@6086307(ExpSetupShortcutFieldCode@6086304 : ARRAY [10] OF Code[20];FieldNumber@6086302 : Integer;VAR DimCode@6086301 : Code[20];VAR FieldCode@6086300 : Code[20]);
    VAR
      FieldType@6086303 : Record 6086345;
    BEGIN
      FieldType.GET(ExpSetupShortcutFieldCode[FieldNumber]);
      IF FieldType.GetDimCode <> '' THEN
        DimCode := FieldType.GetDimCode
      ELSE
        FieldCode := ExpSetupShortcutFieldCode[FieldNumber];
    END;

    BEGIN
    {
      4PS, Objects renumbered
    }
    END.
  }
}

