OBJECT Page 11126531 Filtered Document List (DC)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=Belege šbersicht;
               ENU=Document List;
               NLD=Documentlijst;
               NOR=Dokumentliste;
               SVE=Dokumentlista];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table6085590;
    PageType=List;
    UsageCategory=Lists;
    CardPageID=Document Card;
    OnOpenPage=BEGIN
                 IF NOT FindPosition('=><') THEN BEGIN
                   JobFilter := '';
                   VendorFilter := '';
                   ApproverFilter :=  '';
                   VendorDocNoFilter :=  '';
                   DocTypeFilter := 0;
                   DocFilter :=  '';
                 END;
               END;

    OnFindRecord=VAR
                   Found@1100409000 : Boolean;
                 BEGIN
                   Found := FindPosition(Which);
                   EXIT(Found);
                 END;

    OnNextRecord=VAR
                   lDocument@1100409000 : Record 6085590;
                   NextStep@1100409001 : Integer;
                 BEGIN
                   lDocument.COPY(Rec);
                   NextStep := NextPosition(lDocument,Steps);
                   IF NextStep <> 0 THEN Rec.COPY(lDocument);
                   EXIT(NextStep);
                 END;

    ActionList=ACTIONS
    {
      { 1000000026;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000025;1 ;ActionGroup;
                      CaptionML=[DEU=B&eleg;
                                 ENU=&Document;
                                 NLD=&Document;
                                 NOR=&Dokument;
                                 SVE=&Dokument] }
      { 1000000024;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[DEU=R&echnung;
                                 ENU=&Invoice;
                                 NLD=&Factuur;
                                 NOR=Fa&ktura;
                                 SVE=Fa&ktura];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Invoice;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 OpenInvoice;
                               END;
                                }
      { 1000000019;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000018;1 ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&uncties;
                                 NOR=Fu&nksjon;
                                 SVE=F&unktion] }
      { 1000000014;2 ;Action    ;
                      CaptionML=[DEU=&Datei anzeigen;
                                 ENU=&Show File;
                                 NLD=&Toon PDF bestand];
                      Promoted=Yes;
                      Image=View;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 OpenPdfFile;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;0;Container;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1000000003;2;Field  ;
                SourceExpr="Document Category Code" }

    { 1000000002;2;Field  ;
                SourceExpr="No." }

    { 1000000008;2;Field  ;
                SourceExpr=Status }

    { 1100528200;2;Field  ;
                SourceExpr="Document On Hold Code" }

    { 1000000005;2;Field  ;
                CaptionML=[DEU=Herkunfts-ID;
                           ENU=Source ID;
                           NLD=Bron-ID;
                           NOR=Kilde-ID;
                           SVE=Ursprungs-ID];
                SourceExpr=GetSourceID;
                CaptionClass='3,' + GetSourceNoCaption }

    { 1000000010;2;Field  ;
                CaptionML=[DEU=Name;
                           ENU=Name;
                           NLD=Naam;
                           NOR=Navn;
                           SVE=Namn];
                SourceExpr=GetSourceName;
                CaptionClass='3,' + GetSourceNameCaption }

    { 1100409029;2;Field  ;
                CaptionML=[DEU=Kred.-Rechnungsnr.;
                           ENU=Vendor Invoice No.;
                           NLD=Factuurnr. leveranc;
                           NOR=Leverand›rens fakturanr;
                           SVE=Leverant”rens fakturanr];
                SourceExpr=GetInvoiceExternDocument(Rec) }

    { 1000000012;2;Field  ;
                SourceExpr=Description }

    { 1100528003;2;Field  ;
                CaptionML=[DEU=Beschreibung (Dokumentenkopf);
                           ENU=Description (Document Header );
                           NLD=Omschrijving (documentkop)];
                SourceExpr=GetHeaderDescription;
                Visible=FALSE;
                Editable=FALSE }

    { 1100409009;2;Field  ;
                CaptionML=[DEU=Projekt;
                           ENU=Job;
                           NLD=Project;
                           NOR=Prosjekt;
                           SVE=Projekt];
                SourceExpr=GetProject(Rec) }

    { 1100409010;2;Field  ;
                CaptionML=[DEU=Projektbeschreibung;
                           ENU=Job Description;
                           NLD=Projectomschrijving;
                           NOR=Prosjektbeskrivelse;
                           SVE=Projektbeskrivning];
                SourceExpr=GetProjectDescription(Rec) }

    { 1100409015;2;Field  ;
                CaptionML=[DEU=Fremdarbeit;
                           ENU=Subcontracting;
                           NLD=Onderaanneming;
                           NOR=Underentrepen›r;
                           SVE=Underentreprenad];
                SourceExpr=GetSubcontracting }

    { 1100409017;2;Field  ;
                CaptionML=[DEU=Rechnungsnr.;
                           ENU=Invoice No.;
                           NLD=Factuurnr.;
                           NOR=Fakturanr.;
                           SVE=Fakturanr];
                SourceExpr=GetInvoiceNo(Rec,1) }

    { 1100528000;2;Field  ;
                CaptionML=[DEU=Registrierte Rechnungsnr.;
                           ENU=Registered Invoice No.;
                           NLD=Geregistreerde factuurnr.];
                SourceExpr=GetInvoiceNo(Rec,2) }

    { 1100528001;2;Field  ;
                CaptionML=[DEU=Gebuchte Rechnungsnr.;
                           ENU=Posted Invoice No.;
                           NLD=Geboekte factuurnr.];
                SourceExpr=GetInvoiceNo(Rec,3) }

    { 1100409016;2;Field  ;
                CaptionML=[DEU=Abwarten;
                           ENU=On Hold;
                           NLD=Afwachten;
                           NOR=P† vent;
                           SVE=Stoppad];
                SourceExpr=GetInvoiceOnHold }

    { 1100409023;2;Field  ;
                CaptionML=[DEU=Anzahl Belege;
                           ENU=No. of Documents;
                           NLD=Aantal documenten;
                           NOR=Antall dokumenter;
                           SVE=Antal dokument];
                BlankZero=Yes;
                SourceExpr=GetInvoiceNoOfDocs;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //DocMgt.LookupDocsForDoc(DATABASE::"Purchase Header","Document Type","No.",0)
                            END;
                             }

    { 1100409018;2;Field  ;
                CaptionML=[DEU=Genehmigung durch;
                           ENU=Approval by;
                           NLD=Goedkeuring door;
                           NOR=Godkjennelse av;
                           SVE=Godk„nnande av];
                SourceExpr=GetNextInvoiceApprover(Rec) }

    { 1100409022;2;Field  ;
                CaptionML=[DEU=Genehmigt vom;
                           ENU=Approved by;
                           NLD=Goedgekeurd door;
                           NOR=Godkjent av;
                           SVE=Godk„nt av];
                SourceExpr=GetInvoiceLastApprover }

    { 1100409019;2;Field  ;
                CaptionML=[DEU=Genehmigungsposten;
                           ENU=Approval Entries;
                           NLD=Goedkeuringsposten;
                           NOR=Godkjenningstransaksjoner;
                           SVE=Godk„nnandetransaktioner];
                BlankZero=Yes;
                SourceExpr=GetInvoiceApprovalEntries;
                OnDrillDown=BEGIN
                              GetRelatedDocument(Rec);

                              IF PurchHeader."No." <> '' THEN
                                ApprovalManagement4PSConstr.DrillDownApprovalEntriesDocument(PurchHeader."Document Type",PurchHeader."No.");

                              IF PurchInvHeader."No." <> '' THEN
                                ApprovalManagement4PSConstr.DrillDownApprovalEntriesDocument(2,PurchInvHeader."No.");

                              IF PurchCrMemoHdr."No." <> '' THEN
                                ApprovalManagement4PSConstr.DrillDownApprovalEntriesDocument(3,PurchCrMemoHdr."No.");
                            END;
                             }

    { 1100409024;2;Field  ;
                CaptionML=[DEU=Genehmigungskommentare;
                           ENU=Approval Comments;
                           NLD=Goedkeuringsopmerkingen;
                           NOR=Godkjenningsmerknader;
                           SVE=Godk„nnandekommentarer];
                BlankZero=Yes;
                SourceExpr=GetInvoiceApprovalComments;
                OnDrillDown=BEGIN
                              GetRelatedDocument(Rec);

                              IF PurchHeader."No." <> '' THEN
                                ApprovalManagement4PSConstr.DrillDownApprovalCommentsDocument(PurchHeader."Document Type",PurchHeader."No.");

                              IF PurchInvHeader."No." <> '' THEN
                                ApprovalManagement4PSConstr.DrillDownApprovalCommentsDocument(2,PurchInvHeader."No.");

                              IF PurchCrMemoHdr."No." <> '' THEN
                                ApprovalManagement4PSConstr.DrillDownApprovalCommentsDocument(3,PurchCrMemoHdr."No.");
                            END;
                             }

    { 1100409025;2;Field  ;
                CaptionML=[DEU=Gebuchte Genehmigungseintr„ge;
                           ENU=Posted Approval Entries;
                           NLD=Geboekte goedkeuringsposten;
                           NOR=Bokf›rte godkjenningsposter;
                           SVE=Bokf”rda godk„nnandetransaktioner];
                BlankZero=Yes;
                SourceExpr=GetInvoicePostedApprovalEntries;
                OnDrillDown=BEGIN
                              GetRelatedDocument(Rec);

                              IF PurchHeader."No." <> '' THEN
                                ApprovalManagement4PSConstr.DrillDownPosApprovalEntriesDocument(1, PurchHeader."No.");

                              IF PurchInvHeader."No." <> '' THEN
                                ApprovalManagement4PSConstr.DrillDownPosApprovalEntriesDocument(2,PurchInvHeader."No.");

                              IF PurchCrMemoHdr."No." <> '' THEN
                                ApprovalManagement4PSConstr.DrillDownPosApprovalEntriesDocument(3,PurchCrMemoHdr."No.");
                            END;
                             }

    { 1100409026;2;Field  ;
                CaptionML=[DEU=Gebuchte Genehmigungskommentare;
                           ENU=Posted Approval Comments;
                           NLD=Geboekte goedkeuringsopmerkingen;
                           NOR=Bokf›rte godkjenningsmerknader;
                           SVE=Bokf”rda godk„nnandekommentarer];
                BlankZero=Yes;
                SourceExpr=GetInvoicePoApprovalComments;
                OnDrillDown=BEGIN
                              GetRelatedDocument(Rec);

                              IF PurchHeader."No." <> '' THEN
                                ApprovalManagement4PSConstr.DrillDownPosApprovalCommentsDocument(1,PurchHeader."No.");

                              IF PurchInvHeader."No." <> '' THEN
                                ApprovalManagement4PSConstr.DrillDownPosApprovalCommentsDocument(2,PurchInvHeader."No.");

                              IF PurchCrMemoHdr."No." <> '' THEN
                                ApprovalManagement4PSConstr.DrillDownPosApprovalCommentsDocument(3,PurchCrMemoHdr."No.");
                            END;
                             }

    { 1100409011;2;Field  ;
                SourceExpr="Amount Excl. VAT" }

    { 1100409012;2;Field  ;
                SourceExpr="Amount Incl. VAT" }

    { 1100409030;2;Field  ;
                SourceExpr="From E-Mail Address" }

    { 1100409013;2;Field  ;
                SourceExpr="E-Mail Date" }

    { 1100409014;2;Field  ;
                CaptionML=[DEU=Belegdatum;
                           ENU=Document Date;
                           NLD=Documentdatum;
                           NOR=Dokumentdato;
                           SVE=Dokumentdatum];
                SourceExpr=GetInvoiceDate }

    { 1100409020;2;Field  ;
                CaptionML=[DEU=Buchungsdatum;
                           ENU=Posting Date;
                           NLD=Boekdatum;
                           NOR=Bokf›ringsdato;
                           SVE=Bokf”ringsdatum];
                SourceExpr=GetPostingDate }

    { 1100409021;2;Field  ;
                CaptionML=[DEU=F„lligkeitsdatum;
                           ENU=Due Date;
                           NLD=Vervaldatum;
                           NOR=Forfallsdato;
                           SVE=F”rfallodatum];
                SourceExpr=GetDueDate }

    { 1100409028;2;Field  ;
                CaptionML=[DEU=Zahlungsdatum;
                           ENU=Pay Date;
                           NLD=Betaaldatum];
                SourceExpr=GetPayDate }

    { 1100525005;1;Group  ;
                CaptionML=[DEU=Filter;
                           ENU=Filters;
                           NLD=Filters;
                           NOR=Filtre;
                           SVE=Filter] }

    { 1100525002;2;Field  ;
                CaptionML=[DEU=Projektfilter;
                           ENU=Job Filter;
                           NLD=Projectfilter;
                           NOR=Jobbfilter;
                           SVE=Projektfilter];
                SourceExpr=JobFilter;
                Importance=Promoted;
                Editable=FALSE;
                OnLookup=BEGIN
                           FilterSetup;
                         END;
                          }

    { 1100525003;2;Field  ;
                CaptionML=[DEU=Kreditorenfilter;
                           ENU=Vendor Filter;
                           NLD=Leveranciersfilter;
                           NOR=Leverand›r filter;
                           SVE=Leverant”rsfilter];
                SourceExpr=VendorFilter;
                Importance=Promoted;
                Editable=FALSE;
                OnLookup=BEGIN
                           FilterSetup;
                         END;
                          }

    { 1100525000;2;Field  ;
                CaptionML=[DEU=Genehmiger;
                           ENU=Approver;
                           NLD=Goedkeuring door;
                           NOR=Godkjenner;
                           SVE=Godk„nnare];
                SourceExpr=ApproverFilter;
                Importance=Promoted;
                Editable=FALSE;
                OnLookup=BEGIN
                           FilterSetup;
                         END;
                          }

    { 1100525001;2;Field  ;
                CaptionML=[DEU=Lieferantendokumentnr.;
                           ENU=Vendor Document No.;
                           NLD=Factuurnummer leverancier;
                           SVE=Leverant”rens dokumentnr.];
                SourceExpr=VendorDocNoFilter;
                Importance=Promoted;
                Editable=FALSE;
                OnLookup=BEGIN
                           FilterSetup;
                         END;
                          }

    { 1100525004;2;Field  ;
                Lookup=Yes;
                CaptionML=[DEU=Belegart;
                           ENU=Document Type;
                           NLD=Documentsoort;
                           NOR=Dokumenttype;
                           SVE=Dokumenttyp];
                OptionCaptionML=[DEU=" ,Dokumentnr.,Registrierte Dokumentnr.,Gebuchte Dokumentnr.";
                                 ENU=" ,Document No.,Registered Document No.,Posted Document No.";
                                 NLD=" ,Factuur,Geregistreerde factuur,Geboekte factuur"];
                SourceExpr=DocTypeFilter;
                Editable=FALSE;
                OnLookup=BEGIN
                           FilterSetup;
                         END;
                          }

    { 1100525006;2;Field  ;
                Lookup=Yes;
                CaptionML=[DEU=Dokumentnr.-Filter;
                           ENU=Document No Filter.;
                           NLD=Factuurnr. filter];
                SourceExpr=DocFilter;
                Editable=FALSE;
                OnLookup=BEGIN
                           FilterSetup;
                         END;
                          }

  }
  CODE
  {
    VAR
      Job@1100409011 : Record 11072003;
      Vendor@1100409010 : Record 23;
      DCSetup@1100409009 : Record 6085573;
      PurchHeader@1100409016 : Record 38;
      PurchInvHeader@1100409015 : Record 122;
      PurchCrMemoHdr@1100409014 : Record 124;
      VendorLedgerEntry@1100409020 : Record 25;
      ApprovalManagement4PSConstr@1100409018 : Codeunit 11125349;
      DocMgt@1100409019 : Codeunit 6085578;
      PurchDocMgt@1100528000 : Codeunit 6085709;
      GotSetup@1100409008 : Boolean;
      JobFilter@1100409005 : Text[50];
      VendorFilter@1100409004 : Text[50];
      ApproverFilter@1100409002 : Text[50];
      VendorDocNoFilter@1100409000 : Text[50];
      gvCreatedDocType@1100409012 : Integer;
      gvCreatedDocSubType@1100409017 : Integer;
      gvCreatedDocId@1100409013 : Code[20];
      DocTypeFilter@1100525000 : ' ,Document No.,Registered Document No.,Posted Document No.';
      DocFilter@1100525001 : Text[50];

    PROCEDURE GetRelatedDocument@1100409021(lDocument@1100409000 : Record 6085590);
    BEGIN
      IF (gvCreatedDocType = lDocument."Created Doc. Type") AND
         (gvCreatedDocSubType = lDocument."Created Doc. Subtype") AND
         (gvCreatedDocId = lDocument."Created Doc. ID") THEN
        EXIT;

      gvCreatedDocType := lDocument."Created Doc. Type";
      gvCreatedDocSubType := lDocument."Created Doc. Subtype";
      gvCreatedDocId := lDocument."Created Doc. ID";

      PurchHeader.INIT;
      PurchHeader."No." := '';
      PurchInvHeader.INIT;
      PurchInvHeader."No." := '';
      PurchCrMemoHdr.INIT;
      PurchCrMemoHdr."No." := '';

      IF lDocument."Created Doc. Type" IN [38,122,124] THEN BEGIN
        IF lDocument."Created Doc. Type" = DATABASE::"Purchase Header" THEN BEGIN
          IF PurchHeader.GET(lDocument."Created Doc. Subtype", lDocument."Created Doc. ID") THEN
            EXIT;
        END;

        IF (lDocument."Created Doc. Subtype" = 2) OR (lDocument."Created Doc. Type" = DATABASE::"Purch. Inv. Header") THEN BEGIN
          IF PurchInvHeader.GET(lDocument."Created Doc. ID") THEN;
          EXIT;
        END;

        IF (lDocument."Created Doc. Subtype" = 3) OR (lDocument."Created Doc. Type" = DATABASE::"Purch. Cr. Memo Hdr.") THEN BEGIN
          IF PurchCrMemoHdr.GET(lDocument."Created Doc. ID") THEN
          EXIT;
        END;
      END;
      EXIT;
    END;

    PROCEDURE OpenInvoice@1100409040();
    BEGIN
      GetRelatedDocument(Rec);

      IF PurchHeader."No." <> '' THEN BEGIN
        PurchHeader.FILTERGROUP(4);
        PurchHeader.SETRANGE("No.", PurchHeader."No.");
        PurchHeader.SETRANGE("Document Type", PurchHeader."Document Type");
        IF PurchHeader."Document Type" = PurchHeader."Document Type"::Invoice THEN
          PAGE.RUNMODAL(PAGE::"Purchase Invoice",PurchHeader);
        IF PurchHeader."Document Type" = PurchHeader."Document Type"::"Credit Memo" THEN
          PAGE.RUNMODAL(PAGE::"Purchase Credit Memo",PurchHeader);
        PurchHeader.SETRANGE("No.");
        PurchHeader.SETRANGE("Document Type");
        PurchHeader.FILTERGROUP(0);
      END;

      IF PurchInvHeader."No." <> '' THEN BEGIN
        PurchInvHeader.FILTERGROUP(4);
        PurchInvHeader.SETRANGE("No.", PurchInvHeader."No.");
        IF PurchInvHeader.FINDFIRST THEN
          IF PurchInvHeader."Invoice Approved" THEN
            PAGE.RUNMODAL(PAGE::"Posted Purchase Invoice",PurchInvHeader)
          ELSE
            PAGE.RUNMODAL(PAGE::"Approve Purchase Invoices",PurchInvHeader);
        PurchInvHeader.SETRANGE("No.");
        PurchInvHeader.FILTERGROUP(0);
      END;

      IF PurchCrMemoHdr."No." <> '' THEN BEGIN
        PurchCrMemoHdr.FILTERGROUP(4);
        PurchCrMemoHdr.SETRANGE("No.", PurchCrMemoHdr."No.");
        IF PurchCrMemoHdr.FINDFIRST THEN
          IF PurchCrMemoHdr."Credit Memo Approved" THEN
            PAGE.RUNMODAL(PAGE::"Posted Purchase Credit Memo",PurchCrMemoHdr)
          ELSE
            PAGE.RUNMODAL(PAGE::"Approve Credit Memos",PurchCrMemoHdr);
        PurchCrMemoHdr.SETRANGE("No.");
        PurchCrMemoHdr.FILTERGROUP(0);
      END;
    END;

    PROCEDURE GetInvoiceDate@1100409007() InvoiceDate : Date;
    BEGIN
      IF Status = Status::Registered THEN
        InvoiceDate := GetRelatedDocumentInvoiceDate
      ELSE
        InvoiceDate := 0D;
    END;

    PROCEDURE GetRelatedDocumentInvoiceDate@1100409008() : Date;
    BEGIN
      GetRelatedDocument(Rec);

      IF PurchHeader."No." <> '' THEN
        EXIT(PurchHeader."Document Date");

      IF PurchInvHeader."No." <> '' THEN
        EXIT(PurchInvHeader."Document Date");

      IF PurchCrMemoHdr."No." <> '' THEN
        EXIT(PurchCrMemoHdr."Document Date");

      EXIT(0D);
    END;

    PROCEDURE GetPostingDate@1100409020() PostingDate : Date;
    BEGIN
      IF Status = Status::Registered THEN
        PostingDate := GetRelatedDocumentPostingDate
      ELSE
        PostingDate := 0D;
    END;

    PROCEDURE GetRelatedDocumentPostingDate@1100409019() : Date;
    BEGIN
      GetRelatedDocument(Rec);

      IF PurchHeader."No." <> '' THEN
        EXIT(PurchHeader."Posting Date");

      IF PurchInvHeader."No." <> '' THEN
        EXIT(PurchInvHeader."Posting Date");

      IF PurchCrMemoHdr."No." <> '' THEN
        EXIT(PurchCrMemoHdr."Posting Date");

      EXIT(0D);
    END;

    PROCEDURE GetDueDate@1100409023() DueDate : Date;
    BEGIN
      IF Status = Status::Registered THEN
        DueDate := GetRelatedDocumentDueDate
      ELSE
        DueDate := 0D;
    END;

    PROCEDURE GetRelatedDocumentDueDate@1100409022() : Date;
    BEGIN
      GetRelatedDocument(Rec);

      IF PurchHeader."No." <> '' THEN
        EXIT(PurchHeader."Due Date");

      IF PurchInvHeader."No." <> '' THEN
        EXIT(PurchInvHeader."Due Date");

      IF PurchCrMemoHdr."No." <> '' THEN
        EXIT(PurchCrMemoHdr."Due Date");

      EXIT(0D);
    END;

    PROCEDURE GetPayDate@1100409033() PayDate : Date;
    BEGIN
      IF Status = Status::Registered THEN
        PayDate := GetRelatedDocumentPayDate
      ELSE
        PayDate := 0D;
    END;

    PROCEDURE GetRelatedDocumentPayDate@1100409032() : Date;
    BEGIN
      GetRelatedDocument(Rec);

      IF PurchHeader."No." <> '' THEN
        EXIT(0D);

      IF PurchInvHeader."No." <> '' THEN BEGIN
        VendorLedgerEntry.RESET;
        VendorLedgerEntry.SETCURRENTKEY("Document No.");
        VendorLedgerEntry.SETRANGE("Document Type", VendorLedgerEntry."Document Type"::Invoice);
        VendorLedgerEntry.SETRANGE("Document No.", PurchInvHeader."No.");
        IF VendorLedgerEntry.FINDFIRST THEN;
        EXIT(VendorLedgerEntry."Closed at Date");

      END;

      IF PurchCrMemoHdr."No." <> '' THEN
        EXIT(0D);

      EXIT(0D);
    END;

    PROCEDURE GetSubcontracting@1100409011() Subcontracting : Boolean;
    BEGIN
      IF Status = Status::Registered THEN
        Subcontracting := GetRelatedDocumentSubcontracting
      ELSE
        Subcontracting := FALSE;
    END;

    PROCEDURE GetRelatedDocumentSubcontracting@1100409010() : Boolean;
    BEGIN
      GetRelatedDocument(Rec);

      IF PurchHeader."No." <> '' THEN
        EXIT(PurchHeader."Subcontracting Invoice");

      IF PurchInvHeader."No." <> '' THEN
        EXIT(PurchInvHeader."Subcontracting Invoice");

      IF PurchCrMemoHdr."No." <> '' THEN
        EXIT(PurchCrMemoHdr."Subcontractor Credit Memo");

      EXIT(FALSE);
    END;

    PROCEDURE GetInvoiceNo@1100409012(lDocument@1100525000 : Record 6085590;Step@1100528000 : Integer) InvoiceNo : Code[20];
    BEGIN
      IF Status = Status::Registered THEN
        InvoiceNo := GetRelatedDocumentInvoiceNo(lDocument, Step)
      ELSE
        InvoiceNo := '';
    END;

    PROCEDURE GetRelatedDocumentInvoiceNo@1100409009(lDocument@1100525000 : Record 6085590;Step@1100528000 : Integer) : Code[20];
    BEGIN
      GetRelatedDocument(lDocument);
      CASE Step OF
      1: BEGIN
           IF PurchHeader."No." <> '' THEN
             EXIT(PurchHeader."No.");
           EXIT('');
         END;
      2: BEGIN
           IF (PurchInvHeader."No." <> '') AND (NOT PurchInvHeader."Invoice Approved") THEN
             EXIT(PurchInvHeader."No.");
           IF (PurchCrMemoHdr."No." <> '') AND (NOT PurchCrMemoHdr."Credit Memo Approved") THEN
             EXIT(PurchCrMemoHdr."No.");
           EXIT('');
         END;
      3: BEGIN
           IF (PurchInvHeader."No." <> '') AND (PurchInvHeader."Invoice Approved") THEN
             EXIT(PurchInvHeader."No.");
           IF (PurchCrMemoHdr."No." <> '') AND (PurchCrMemoHdr."Credit Memo Approved") THEN
             EXIT(PurchCrMemoHdr."No.");
           EXIT('');
         END;
      END;
      EXIT('');
    END;

    PROCEDURE GetInvoiceOnHold@1100409015() InvoiceOnHold : Code[20];
    BEGIN
      IF Status = Status::Registered THEN
        InvoiceOnHold := GetRelatedDocumentInvoiceOnHold
      ELSE
        InvoiceOnHold := '';
    END;

    PROCEDURE GetRelatedDocumentInvoiceOnHold@1100409014() : Code[20];
    BEGIN
      GetRelatedDocument(Rec);

      IF PurchHeader."No." <> '' THEN
        EXIT(PurchHeader."On Hold");

      IF PurchInvHeader."No." <> '' THEN
        EXIT(PurchInvHeader."On Hold");

      IF PurchCrMemoHdr."No." <> '' THEN
        EXIT(PurchCrMemoHdr."On Hold");

      EXIT('');
    END;

    PROCEDURE GetInvoiceExternDocument@1100409039(lDocument@1100409000 : Record 6085590) InvoiceExternDocument : Text[50];
    VAR
      PurchDocManagement@1100528000 : Codeunit 6085709;
    BEGIN
      IF lDocument.Status = lDocument.Status::Registered THEN
        InvoiceExternDocument := GetRelatedDocumentInvoiceExternDocument(lDocument)
      ELSE
        InvoiceExternDocument := COPYSTR(PurchDocManagement.GetDocumentNo(lDocument), 1, 20); //CALL C020931
    END;

    PROCEDURE GetRelatedDocumentInvoiceExternDocument@1100409037(lDocument@1100409000 : Record 6085590) : Code[35];
    BEGIN
      GetRelatedDocument(lDocument);

      IF PurchHeader."No." <> '' THEN BEGIN
        IF PurchHeader."Document Type" = PurchHeader."Document Type"::"Credit Memo" THEN
          EXIT(COPYSTR(PurchHeader."Vendor Cr. Memo No.", 1, 35))
        ELSE
          EXIT(COPYSTR(PurchHeader."Vendor Invoice No.", 1, 35))
      END;

      IF PurchInvHeader."No." <> '' THEN
        EXIT(COPYSTR(PurchInvHeader."Vendor Invoice No.", 1, 35));

      IF PurchCrMemoHdr."No." <> '' THEN
        EXIT(COPYSTR(PurchCrMemoHdr."Vendor Cr. Memo No.", 1, 35));

      EXIT('');
    END;

    PROCEDURE GetNextInvoiceApprover@1100409016(lDocument@1100409000 : Record 6085590) InvoiceApprover : Code[50];
    BEGIN
      IF lDocument.Status = lDocument.Status::Registered THEN
        InvoiceApprover := GetRelatedDocumentNextInvoiceApprover(lDocument)
      ELSE
        InvoiceApprover:= '';
    END;

    PROCEDURE GetRelatedDocumentNextInvoiceApprover@1100409013(lDocument@1100409000 : Record 6085590) : Code[50];
    BEGIN
      GetRelatedDocument(lDocument);

      IF PurchHeader."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetNextApprover(PurchHeader.RECORDID, 0));

      IF PurchInvHeader."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetNextApproverDocument(2,PurchInvHeader."No."));

      IF PurchCrMemoHdr."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetNextApproverDocument(3, PurchCrMemoHdr."No."));

      EXIT('');
    END;

    PROCEDURE GetInvoiceLastApprover@1100409025() InvoiceApprover : Code[50];
    BEGIN
      IF Status = Status::Registered THEN
        InvoiceApprover := GetRelatedDocumentLastInvoiceApprover
      ELSE
        InvoiceApprover:= '';
    END;

    PROCEDURE GetRelatedDocumentLastInvoiceApprover@1100409024() : Code[50];
    BEGIN
      GetRelatedDocument(Rec);

      IF PurchHeader."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetLastApprover(PurchHeader));

      IF PurchInvHeader."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetLastApproverDocument(2,PurchInvHeader."No."));

      IF PurchCrMemoHdr."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetLastApproverDocument(3, PurchCrMemoHdr."No." ));

      EXIT('');
    END;

    PROCEDURE GetInvoiceApprovalEntries@1100409018() InvoiceApprovalEntries : Integer;
    BEGIN
      IF Status = Status::Registered THEN
        InvoiceApprovalEntries := GetRelatedDocumentInvoiceApprovalEntries
      ELSE
        InvoiceApprovalEntries := 0;
    END;

    PROCEDURE GetRelatedDocumentInvoiceApprovalEntries@1100409017() : Integer;
    BEGIN
      GetRelatedDocument(Rec);

      IF PurchHeader."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetNoOfApprovalEntriesDocument(PurchHeader."Document Type", PurchHeader."No."));

      IF PurchInvHeader."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetNoOfApprovalEntriesDocument(2,PurchInvHeader."No." ));

      IF PurchCrMemoHdr."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetNoOfApprovalEntriesDocument(3, PurchInvHeader."No." ));

      EXIT(0);
    END;

    PROCEDURE GetInvoiceNoOfDocs@1100409027() InvoiceNoOfDocs : Integer;
    BEGIN
      IF Status = Status::Registered THEN
        InvoiceNoOfDocs := GetRelatedDocumentInvoiceNoOfDocs
      ELSE
        InvoiceNoOfDocs := 0;
    END;

    PROCEDURE GetRelatedDocumentInvoiceNoOfDocs@1100409026() : Integer;
    BEGIN
      GetRelatedDocument(Rec);

      IF PurchHeader."No." <> '' THEN
        EXIT(DocMgt.GetNoOfDocForDoc(DATABASE::"Purchase Header", PurchHeader."Document Type", PurchHeader."No.",0) );

      IF PurchInvHeader."No." <> '' THEN
        EXIT(DocMgt.GetNoOfDocForDoc(DATABASE::"Purchase Header", 2, PurchInvHeader."No.",0) );

      IF PurchCrMemoHdr."No." <> '' THEN
        EXIT(DocMgt.GetNoOfDocForDoc(DATABASE::"Purchase Header", 3, PurchCrMemoHdr."No.",0) );


      EXIT(0);
    END;

    PROCEDURE GetInvoiceApprovalComments@1100409029() InvoiceApprovalComments : Integer;
    BEGIN
      IF Status = Status::Registered THEN
        InvoiceApprovalComments := GetRelatedDocumentInvoiceApprovalComments
      ELSE
        InvoiceApprovalComments := 0;
    END;

    PROCEDURE GetRelatedDocumentInvoiceApprovalComments@1100409028() : Integer;
    BEGIN
      GetRelatedDocument(Rec);

      IF PurchHeader."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetNoOfApprovalCommentsDocument(PurchHeader."Document Type", PurchHeader."No."));

      IF PurchInvHeader."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetNoOfApprovalCommentsDocument(2,PurchInvHeader."No." ));

      IF PurchCrMemoHdr."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetNoOfApprovalCommentsDocument(3, PurchCrMemoHdr."No."));

      EXIT(0);
    END;

    PROCEDURE GetInvoicePostedApprovalEntries@1100409031() InvoicePoApprovalEntries : Integer;
    BEGIN
      IF Status = Status::Registered THEN
        InvoicePoApprovalEntries := GetRelatedDocumentInvoicePoApprovalEntries
      ELSE
        InvoicePoApprovalEntries := 0;
    END;

    PROCEDURE GetRelatedDocumentInvoicePoApprovalEntries@1100409030() : Integer;
    BEGIN
      GetRelatedDocument(Rec);

      IF PurchHeader."No." <> '' THEN
        EXIT(0);

      IF PurchInvHeader."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetNoOfPostApprovalEntriesDocument(2,"Created Doc. ID"));


      IF PurchCrMemoHdr."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetNoOfPostApprovalEntriesDocument(3, "Created Doc. ID"));

      EXIT(0);
    END;

    PROCEDURE GetInvoicePoApprovalComments@1100409035() InvoicePoApprovalComments : Integer;
    BEGIN
      IF Status = Status::Registered THEN
        InvoicePoApprovalComments := GetRelatedDocumentInvoicePoApprovalComments
      ELSE
        InvoicePoApprovalComments := 0;
    END;

    PROCEDURE GetRelatedDocumentInvoicePoApprovalComments@1100409034() : Integer;
    BEGIN
      GetRelatedDocument(Rec);

      IF PurchHeader."No." <> '' THEN
        EXIT(0);

      IF PurchInvHeader."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetNoOfPostApprovalCommentsDocument(2,"Created Doc. ID"));

      IF PurchCrMemoHdr."No." <> '' THEN
        EXIT(ApprovalManagement4PSConstr.GetNoOfPostApprovalCommentsDocument(3, "Created Doc. ID"));

      EXIT(0);
    END;

    PROCEDURE GetHeaderDescription@1100525003() : Text[50];
    BEGIN
      //**4PS
      EXIT(PurchDocMgt.GetHeaderDescription(Rec));
    END;

    PROCEDURE GetProject@1100525001(lDocument@1100409000 : Record 6085590) JobNo : Code[20];
    BEGIN
      IF Status = Status::Registered THEN
        JobNo := GetRelatedDocumentProject(lDocument)
      ELSE
        JobNo := GetDCDocumentProject(lDocument);

      IF JobNo <> '' THEN BEGIN
        IF NOT Job.GET(JobNo) THEN BEGIN
          JobNo := '';
          Job.INIT;
          Job."No." := '';
        END;
      END ELSE BEGIN
        Job.INIT;
        Job."No." := '';
      END;
    END;

    PROCEDURE GetRelatedDocumentProject@1100528202(lDocument@1100409001 : Record 6085590) : Code[20];
    VAR
      PurchLine@1100528204 : Record 39;
      PurchInvLine@1100528206 : Record 123;
      PurchCrMemoLine@1100528207 : Record 125;
      InvoiceApprovalLine@1100528208 : Record 11012032;
    BEGIN
      GetRelatedDocument(lDocument);

      IF PurchHeader."No." <> '' THEN BEGIN
        IF PurchHeader."Job No." <> '' THEN
          EXIT(PurchHeader."Job No.");

        PurchLine.SETRANGE("Document Type", lDocument."Created Doc. Subtype");
        PurchLine.SETRANGE("Document No.", PurchHeader."No.");
        PurchLine.SETFILTER("Job No.", '<>%1', '');
        IF PurchLine.FINDFIRST THEN
           EXIT(PurchLine."Job No.");
      END;

      IF PurchInvHeader."No." <> '' THEN BEGIN
        IF PurchInvHeader."Job No." <> '' THEN
          EXIT(PurchInvHeader."Job No.");

        IF PurchInvHeader."Invoice Approved" THEN BEGIN
          PurchInvLine.SETRANGE("Document No.", PurchInvHeader."No.");
          PurchInvLine.SETFILTER("Job No.", '<>%1', '');
          IF PurchInvLine.FINDFIRST THEN
            EXIT(PurchInvLine."Job No.");
        END ELSE BEGIN
          InvoiceApprovalLine.SETRANGE("Document Type", InvoiceApprovalLine."Document Type"::"Purchase Invoice");
          InvoiceApprovalLine.SETRANGE("Document No.", PurchInvHeader."No.");
          InvoiceApprovalLine.SETFILTER("Project No.", '<>%1', '');
          IF InvoiceApprovalLine.FINDFIRST THEN
            EXIT(InvoiceApprovalLine."Project No.");
        END;

      END;

      IF PurchCrMemoHdr."No." <> '' THEN BEGIN
        IF PurchCrMemoHdr."Job No." <> '' THEN
          EXIT(PurchCrMemoHdr."Job No.");

        IF PurchCrMemoHdr."Credit Memo Approved" THEN BEGIN
          PurchCrMemoLine.SETRANGE("Document No.", PurchCrMemoHdr."No.");
          PurchCrMemoLine.SETFILTER("Job No.", '<>%1', '');
          IF PurchCrMemoLine.FINDFIRST THEN
            EXIT(PurchCrMemoLine."Job No.");
        END ELSE BEGIN
          InvoiceApprovalLine.SETRANGE("Document Type", InvoiceApprovalLine."Document Type"::"Credit Memo");
          InvoiceApprovalLine.SETRANGE("Document No.", PurchCrMemoHdr."No.");
          InvoiceApprovalLine.SETFILTER("Project No.", '<>%1', '');
          IF InvoiceApprovalLine.FINDFIRST THEN
            EXIT(InvoiceApprovalLine."Project No.")
        END;
      END;

      EXIT('');
    END;

    PROCEDURE GetDCDocumentProject@1100409006(lDocument@1100409000 : Record 6085590) : Code[20];
    BEGIN
      EXIT(PurchDocMgt.GetJobNoHeader(Rec));
    END;

    PROCEDURE GetProjectDescription@1100409041(lDocument@1100409000 : Record 6085590) JobDescription : Text[100];
    VAR
      JobNo@1100409001 : Code[20];
    BEGIN
      IF Status = Status::Registered THEN
        JobNo := GetRelatedDocumentProject(lDocument)
      ELSE
        JobNo := GetDCDocumentProject(lDocument);

      IF JobNo <> '' THEN BEGIN
        IF NOT Job.GET(JobNo) THEN BEGIN
          Job.INIT;
          Job."No." := '';
        END;
      END ELSE BEGIN
        Job.INIT;
        Job."No." := '';
      END;

      JobDescription := Job.Description;
    END;

    PROCEDURE SetStatusFilter@1000000001();
    BEGIN
      IF FINDFIRST THEN;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE GetSetup@161024012();
    BEGIN
      IF GotSetup THEN
        EXIT;

      DCSetup.GET;
      GotSetup := TRUE;
    END;

    PROCEDURE FilterSetup@1100409000();
    VAR
      SetFilterDCDocument@1100409003 : Page 11126532;
      lJobFilter@1100409002 : Text[50];
      lVendorFilter@1100409001 : Text[50];
      lApproverFilter@1100409006 : Text[50];
      lVendorDocNoFilter@1100409004 : Text[50];
      lDocTypeFilter@1100525001 : ' ,Document No.,Registered Document No.,Posted Document No.';
      lDocFilter@1100525000 : Text[50];
    BEGIN
      CLEAR(SetFilterDCDocument);
      SetFilterDCDocument.FillDefaults(JobFilter,VendorFilter,
        ApproverFilter, VendorDocNoFilter,DocTypeFilter,DocFilter);

      SetFilterDCDocument.RUNMODAL;
      lJobFilter := JobFilter;
      lVendorFilter := VendorFilter;
      lApproverFilter := ApproverFilter;
      lVendorDocNoFilter := VendorDocNoFilter;
      lDocTypeFilter := DocTypeFilter;
      lDocFilter := DocFilter;

      IF SetFilterDCDocument.GetDefaults(lJobFilter,lVendorFilter,
        lApproverFilter, lVendorDocNoFilter,lDocTypeFilter,lDocFilter) THEN
      BEGIN
        JobFilter := lJobFilter;
        VendorFilter := lVendorFilter;
        ApproverFilter := lApproverFilter;
        VendorDocNoFilter := lVendorDocNoFilter;
        DocTypeFilter := lDocTypeFilter;
        DocFilter := lDocFilter;

        CurrPage.UPDATE(FALSE);
        SetStatusFilter;
      END;
      CLEAR(SetFilterDCDocument);
    END;

    PROCEDURE ShowThisRecord@1100409001(lDocument@1100409000 : Record 6085590) : Boolean;
    BEGIN
      IF VendorFilter <> '' THEN
        IF NOT CheckVendorFilter(lDocument) THEN
         EXIT(FALSE);

      IF JobFilter <> '' THEN
        IF NOT CheckJobFilter(lDocument) THEN
         EXIT(FALSE);

      IF ApproverFilter <> '' THEN
        IF NOT CheckApproverFilter(lDocument) THEN
         EXIT(FALSE);

      IF VendorDocNoFilter <> '' THEN
        IF NOT CheckVendorDocNoFilter(lDocument) THEN
         EXIT(FALSE);

      IF DocFilter <> '' THEN
        IF NOT CheckDocFilter(lDocument) THEN
         EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE FindPosition@1100409003(Which@1100409001 : Text) : Boolean;
    VAR
      lDocument@1100409000 : Record 6085590;
      i@1100409002 : Integer;
    BEGIN
      lDocument.COPY(Rec);
      IF Which = '' THEN Which := '=';
      FOR i := 1 TO STRLEN(Which) DO
      CASE Which[i] OF
        '-': BEGIN
          IF Rec.FIND('-') THEN REPEAT
            IF ShowThisRecord(Rec) THEN EXIT(TRUE);
          UNTIL Rec.NEXT = 0;
        END;
        '+': BEGIN
          IF Rec.FIND('+') THEN REPEAT
            IF ShowThisRecord(Rec) THEN EXIT(TRUE);
          UNTIL Rec.NEXT(-1) = 0;
        END;
        '=': BEGIN
          IF Rec.FIND THEN
            IF ShowThisRecord(Rec) THEN EXIT(TRUE);
        END;
        '>': BEGIN
          IF NextPosition(Rec, 1) <> 0 THEN
            EXIT(TRUE);
        END;
        '<': BEGIN
          IF NextPosition(Rec, -1) <> 0 THEN
            EXIT(TRUE);
        END;
      END;
      Rec.COPY(lDocument);
      EXIT(FALSE);
    END;

    PROCEDURE NextPosition@1100409004(VAR lDocument@1100409000 : Record 6085590;Steps@1100409001 : Integer) StepsCount : Integer;
    VAR
      RecRef2@1100409003 : Record 6085590;
      RecRef3@1100409004 : Record 6085590;
      Direction@1100409002 : Integer;
    BEGIN
      IF Steps = 0 THEN EXIT;
      IF Steps > 0 THEN
        Direction := 1
      ELSE
        Direction := -1;
      RecRef2.COPY(lDocument);
      RecRef3.COPY(lDocument);
      REPEAT
        IF lDocument.NEXT(Direction) = 0 THEN BEGIN
          lDocument.COPY(RecRef3);
          EXIT;
        END;
        IF ShowThisRecord(lDocument) THEN BEGIN
          RecRef3.COPY(lDocument);
          StepsCount += Direction;
        END;
      UNTIL ABS(StepsCount) >= ABS(Steps);
      IF StepsCount = 0 THEN
        lDocument.COPY(RecRef2)
      ELSE
        lDocument.COPY(RecRef3);
    END;

    PROCEDURE CheckVendorFilter@1100409005(lDocument@1100409000 : Record 6085590) : Boolean;
    VAR
      lTempVendor@1100525001 : TEMPORARY Record 23;
      lCode@1100525000 : Code[20];
    BEGIN
      lCode := COPYSTR(lDocument.GetSourceID, 1, 20);

      IF lCode = VendorFilter  THEN
        EXIT(TRUE);

      //Using Temp Table because Code can be '' And Filter may be on '' Code
      lTempVendor."No." := lCode;
      lTempVendor.INSERT;
      lTempVendor.RESET;
      lTempVendor.FILTERGROUP(2);
      lTempVendor.SETRANGE("No.", lCode);
      lTempVendor.FILTERGROUP(0);
      lTempVendor.SETFILTER("No.", VendorFilter);
      EXIT(lTempVendor.FINDFIRST);
    END;

    PROCEDURE CheckJobFilter@1100409036(lDocument@1100409000 : Record 6085590) : Boolean;
    VAR
      lTempJob@1100525001 : TEMPORARY Record 11072003;
      lCode@1100525000 : Code[20];
    BEGIN
      lCode := COPYSTR(GetProject(lDocument), 1, 20);

      IF lCode = JobFilter  THEN
        EXIT(TRUE);

      //Using Temp Table because Code can be '' And Filter may be on '' Code
      lTempJob."No." := lCode;
      lTempJob.INSERT;
      lTempJob.RESET;
      lTempJob.FILTERGROUP(2);
      lTempJob.SETRANGE("No.", lCode);
      lTempJob.FILTERGROUP(0);
      lTempJob.SETFILTER("No.", JobFilter);
      EXIT(lTempJob.FINDFIRST);
    END;

    PROCEDURE CheckApproverFilter@1100409038(lDocument@1100409000 : Record 6085590) : Boolean;
    VAR
      lTempUser@1100525001 : TEMPORARY Record 2000000120;
      lCode@1100525000 : Text;
    BEGIN
      lCode := COPYSTR(GetNextInvoiceApprover(lDocument), 1, 50);

      IF lCode = ApproverFilter  THEN
        EXIT(TRUE);

      //Using Temp Table because Code can be '' And Filter may be on '' Code
      lTempUser."User Name" := lCode;
      lTempUser.INSERT;
      lTempUser.RESET;
      lTempUser.SETCURRENTKEY("User Name");
      lTempUser.FILTERGROUP(2);
      lTempUser.SETRANGE("User Name", lCode);
      lTempUser.FILTERGROUP(0);
      lTempUser.SETFILTER("User Name", ApproverFilter);
      EXIT(lTempUser.FINDFIRST);
    END;

    PROCEDURE CheckVendorDocNoFilter@1100409043(lDocument@1100409000 : Record 6085590) : Boolean;
    VAR
      lTempPurchaseHeader@1100525001 : TEMPORARY Record 38;
      lCode@1100525000 : Code[35];
    BEGIN
      lCode := COPYSTR(GetInvoiceExternDocument(lDocument), 1, 35);

      IF lCode = VendorDocNoFilter  THEN
        EXIT(TRUE);

      //Using Temp Table because Code can be '' And Filter may be on '' Code
      lTempPurchaseHeader."Vendor Invoice No." := lCode;
      lTempPurchaseHeader.INSERT;
      lTempPurchaseHeader.RESET;
      lTempPurchaseHeader.SETCURRENTKEY("Vendor Invoice No.");
      lTempPurchaseHeader.FILTERGROUP(2);
      lTempPurchaseHeader.SETRANGE("Vendor Invoice No.", lCode);
      lTempPurchaseHeader.FILTERGROUP(0);
      lTempPurchaseHeader.SETFILTER("Vendor Invoice No.", VendorDocNoFilter);
      EXIT(lTempPurchaseHeader.FINDFIRST);
    END;

    PROCEDURE CheckDocFilter@1100525023(lDocument@1100409000 : Record 6085590) : Boolean;
    VAR
      lTempPurchaseHeader@1100525001 : TEMPORARY Record 38;
      lCode@1100525000 : Code[20];
    BEGIN
      CASE DocTypeFilter OF
        DocTypeFilter::"Document No.":
          BEGIN
            lCode := COPYSTR(GetInvoiceNo(lDocument,1), 1, 20);
          END;
        DocTypeFilter::"Registered Document No.":
          BEGIN
            lCode := COPYSTR(GetInvoiceNo(lDocument,2), 1, 20);
          END;
        DocTypeFilter::"Posted Document No.":
          BEGIN
            lCode := COPYSTR(GetInvoiceNo(lDocument,3), 1, 20);
          END;
      ELSE
        BEGIN
          //It's one only of these 3
          lCode := COPYSTR(GetInvoiceNo(lDocument,1), 1, 20);
          IF lCode = '' THEN
            lCode := COPYSTR(GetInvoiceNo(lDocument,2), 1, 20);
          IF lCode = '' THEN
            lCode := COPYSTR(GetInvoiceNo(lDocument,3), 1, 20);
        END;
      END;

      IF lCode = DocFilter THEN
        EXIT(TRUE);

      //Using Temp Table because Code can be '' And Filter may be on '' Code
      lTempPurchaseHeader."No." := lCode;
      lTempPurchaseHeader.INSERT;
      lTempPurchaseHeader.RESET;
      lTempPurchaseHeader.FILTERGROUP(2);
      lTempPurchaseHeader.SETRANGE("No.", lCode);
      lTempPurchaseHeader.FILTERGROUP(0);
      lTempPurchaseHeader.SETFILTER("No.", DocFilter);
      EXIT(lTempPurchaseHeader.FINDFIRST);
    END;

    BEGIN
    END.
  }
}

