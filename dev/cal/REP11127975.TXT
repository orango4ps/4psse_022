OBJECT Report 11127975 Export Projects to Symbrio
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=IME-357;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Export Projects to Symbrio;
               NOR=Exporter prosjekter till Symbrio;
               SVE=Exportera projekt till Symbrio];
    ProcessingOnly=Yes;
    OnPostReport=BEGIN
                   // If projects and/or extension contracts has been marked for export
                   IF (gvProjectCounter < 1) THEN
                     MESSAGE(Text004)
                   ELSE
                     MESSAGE(Text002, gvProjectCounter);
                 END;

  }
  DATASET
  {
    { 1100285000;;DataItem;                  ;
               DataItemTable=Table11072003;
               OnPreDataItem=BEGIN
                               IF gvCostCenter <> '' THEN
                                 Job.SETFILTER( "Global Dimension 1 Code", gvCostCenter);
                               IF gvProjectManager <> '' THEN
                                 Job.SETFILTER( "Project Manager", gvProjectManager);

                               gvProjectCounter := 0;
                             END;

               OnAfterGetRecord=VAR
                                  lvOkToSend@1100285000 : Boolean;
                                BEGIN

                                  IF gvCostCenter = '' THEN
                                    lvOkToSend := CheckProjectCostCenterAuth(Job."Global Dimension 1 Code")
                                  ELSE
                                    lvOkToSend := TRUE;

                                  IF lvOkToSend THEN BEGIN
                                    IF (ExportToSymbrio.JobIsReadyForExport(Job)) OR (ExportToSymbrio.JobIsReadyForExportAndClosing(Job)) THEN BEGIN
                                      JobToRecRef := Job;
                                      JobToRecRef.SETRECFILTER;
                                      RecRef.GETTABLE(JobToRecRef);
                                      IF (Job."Single/Main/Sub Project" = Job."Single/Main/Sub Project"::"Main Project" ) AND (ExportToSymbrio.JobIsReadyForExportAndClosing(Job)) THEN
                                        SymbrioFunctions.SetSpecialExport(opSpecialExport::"Inactivate Main Job");
                                      IF (Job."Single/Main/Sub Project" <> Job."Single/Main/Sub Project"::"Main Project" ) AND (ExportToSymbrio.JobIsReadyForExportAndClosing(Job)) THEN
                                        SymbrioFunctions.SetSpecialExport(opSpecialExport::"Inactivate Single Job");
                                      SymbrioFunctions.AddToSymbrioExportQueue(DATABASE::Job,RecRef,Job."No.",'',Job."Project Status");
                                      gvProjectCounter := gvProjectCounter + 1;
                                    END;

                                  END;
                                END;
                                 }

    { 1100285001;1;Column;No                 ;
               SourceExpr="No." }

    { 1100285002;1;Column;Description        ;
               SourceExpr=Description }

    { 1100285003;1;Column;CostObject         ;
               SourceExpr="Global Dimension 2 Code" }

    { 1100285004;1;Column;ProjectManager     ;
               SourceExpr="Project Manager" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnQueryClosePage=BEGIN
                         IF CloseAction = ACTION::OK THEN BEGIN
                           IF (gvCostCenter = '') AND (gvProjectManager = '') THEN
                             ERROR(Text001);
                           IF (gvCostCenter <> '') THEN BEGIN
                             IF NOT CheckCostCenterAuthorization THEN
                               ERROR(Text003);
                           END;
                         END;
                       END;

    }
    CONTROLS
    {
      { 1100285000;;Container;
                  Name=MainArea;
                  CaptionML=[ENU=Filter;
                             NOR=Filter;
                             SVE=Urval];
                  Description=Filter;
                  ContainerType=ContentArea }

      { 1100285003;1;Group  ;
                  Name=MandatoryFilterGroup;
                  CaptionML=[ENU=Mandatory filter;
                             NOR=Obligatorisk filter;
                             SVE=Obligatoriskt urval];
                  GroupType=Group;
                  InstructionalTextML=[ENU=You must enter a cost center and/or a project manager.;
                                       NOR=Du m† angi et kostnadssted og/eller prosjektleder.;
                                       SVE=Du m†ste ange kostnadsst„lle och/eller platschef.] }

      { 1100285001;2;Field  ;
                  CaptionML=[ENU=Cost Center;
                             NOR=Kostnadssted;
                             SVE=Kostnadsst„lle];
                  SourceExpr=gvCostCenter;
                  TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1)) }

      { 1100285002;2;Field  ;
                  CaptionML=[ENU=Project manager;
                             NOR=Projsektleder;
                             SVE=Platschef];
                  SourceExpr=gvProjectManager;
                  TableRelation=Employee }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      gvCostCenter@1100285000 : Code[20];
      gvProjectManager@1100285001 : Code[20];
      SymbrioFunctions@1100285002 : Codeunit 11127975;
      ExportToSymbrio@1100285005 : Codeunit 11127979;
      JobToRecRef@1100285004 : Record 11072003;
      RecRef@1100285006 : RecordRef;
      ExtensionContract@1100285007 : Record 11012004;
      ExtContractToRecRef@1100285009 : Record 11012004;
      gvOK@1100285010 : Boolean;
      Text001@1100285011 : TextConst 'ENU=You must apply a filter;NOR=Du m† angi et filter;SVE=Du m†ste ange ett urval';
      Text002@1100285012 : TextConst 'ENU=The update is finished. Result: %1 Projects will be exported.;NOR=Oppdateringen er fullf›rt. Resultat: %1 prosjekt vil bli eksportert.;SVE=Uppdateringen „r klar. Resultat: %1 projekt kommer att exporteras.';
      gvDepAuthMgt@1100285013 : Codeunit 11012783;
      gvDepAuthFilterText@1100285014 : Text[250];
      gvDimensionValueRec@1100285015 : Record 349;
      gvDimensionValueRec2@1100285016 : Record 349;
      Text003@1100285017 : TextConst 'ENU=You have not access to selected cost centers;NOR=Du har ikke tilgang til utvalgte costcenters;SVE=Du saknar beh”righet till valda kostnadsst„llen';
      gvProjectCounter@1100285003 : Integer;
      Text004@1100285019 : TextConst 'ENU=Could not find any projects or extension contracts within selected filter;NOR=Kunne ikke finne noen prosjekter eller ŽTA innen valgt filter;SVE=Det fanns inga projekt eller ŽTA inom angivet urval';
      opSpecialExport@1100285008 : ' ,Inactivate Main Job,Inactivate Single Job,Delete Main,Delete Single';

    PROCEDURE CheckCostCenterAuthorization@1100285053() : Boolean;
    VAR
      lvSuccess@1100285000 : Boolean;
    BEGIN
      // This function checks if Current User has access to the cost centers selected in the Request Page
      // If Cost center is left blank in the Request page, this function will not be called
      gvDimensionValueRec.SETRANGE("Global Dimension No.", 1);
      gvDimensionValueRec.SETFILTER(Code, gvCostCenter);

      IF gvDepAuthMgt.AuthorizationActive THEN
        gvDepAuthFilterText := gvDepAuthMgt.GetUserDepartmentFilter()
      ELSE
        gvDepAuthFilterText := '';

      gvDimensionValueRec2.SETRANGE("Global Dimension No.", 1);
      gvDimensionValueRec2.SETFILTER(Code, gvDepAuthFilterText);


      IF gvDimensionValueRec.FINDSET(FALSE) THEN BEGIN

        REPEAT
          lvSuccess := FALSE;

          IF gvDimensionValueRec2.FINDSET(FALSE) THEN BEGIN
            REPEAT
              IF gvDimensionValueRec2.Code = gvDimensionValueRec.Code THEN
                lvSuccess := TRUE;
            UNTIL (gvDimensionValueRec2.NEXT = 0) OR lvSuccess;
          END;

          IF NOT lvSuccess THEN
            EXIT(FALSE);

        UNTIL (gvDimensionValueRec.NEXT = 0);

      END;

      EXIT(TRUE);
    END;

    PROCEDURE CheckProjectCostCenterAuth@1100285067(pCostCenter@1100285000 : Code[20]) : Boolean;
    VAR
      lvSuccess@1100285001 : Boolean;
    BEGIN
      // This function will be called if the Cost Center field is left blank in the request page
      // In that case at least one projects manager must have been entered and the function will be called for each project to
      // check in the current user has access to current Cost Center.

      IF gvDepAuthMgt.AuthorizationActive THEN
        gvDepAuthFilterText := gvDepAuthMgt.GetUserDepartmentFilter()
      ELSE
        gvDepAuthFilterText := '';

      gvDimensionValueRec2.SETRANGE("Global Dimension No.", 1);
      gvDimensionValueRec2.SETFILTER(Code, gvDepAuthFilterText);

      IF gvDimensionValueRec2.FINDSET(FALSE) THEN BEGIN
        REPEAT
          IF gvDimensionValueRec2.Code = pCostCenter THEN
            lvSuccess := TRUE;
        UNTIL (gvDimensionValueRec2.NEXT = 0) OR lvSuccess;
      END;

      IF NOT lvSuccess THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    BEGIN
    {
      150925 ITERO.AC IME357 (Actually a RFC but has an IME number)
      Report (Processing only) used to fire Symbrio Export trigger for selected projects
      User will be promted in the request page to enter Cost Center(s) and/or Project Manager for projects and extension contracts that should be re-sent to Symbrio
      This report only marks projects and extension contracts for export, the actual export is processed in the ordinary job queue entry.

      160216 ITERO.AC Fix compile error due to changes in SymbrioFunctions.AddToSymbrioExportQueue
      160311 ITERO.DL renumbered report from id 81669
    }
    END.
  }
  RDLDATA
  {
  }
}

