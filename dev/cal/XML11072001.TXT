OBJECT XMLport 11072001 Import Trade Items - CSV (SiB)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Import Trade Items - CSV (SiB);
    Direction=Import;
    DefaultFieldsValidation=No;
    PreserveWhiteSpace=Yes;
    TextEncoding=WINDOWS;
    OnPreXMLport=BEGIN
                   FirstLine := TRUE;
                   GLNVendor := '';

                   //db.sn, 15-06-15: C023991
                   SiBSetup.GET;
                   IF FileName <> '' THEN BEGIN
                     currXMLport.FILENAME := SiBSetup."Folder Trade Items" + FileName;
                   END ELSE BEGIN
                     currXMLport.FILENAME := FileRec.Path + FileRec.Name;
                   END;
                   //db.en, 15-06-15: C023991

                   //DP00065.sn
                   ImportSetup.GET;
                   ImportSetup."Import Date-Time" := ImportSetup.Datetime(TODAY, TIME);
                   ImportSetup.MODIFY;

                   IF ImportTradeItemRec.FINDLAST THEN
                     Lastline := ImportTradeItemRec."Line No.";

                   ExchangeMgtCU.StartLog;  //db, 11-03-13: C006329
                   //DP00065.en
                 END;

    OnPostXMLport=BEGIN
                    ExchangeMgtCU.EndLog(LinesRead, LinesProcessed);   //db, 11-03-13: C006329
                  END;

    Format=Variable Text;
    FieldDelimiter=<None>;
    FieldSeparator=[;];
    UseRequestPage=No;
  }
  ELEMENTS
  {
    { [{ACC76485-E4C9-45D8-960D-517F94A7510A}];  ;Root                ;Element ;Text     }

    { [{BB2DA5FF-2B92-4F4F-A3B4-86FFEC8FB83D}];1 ;TradeItem           ;Element ;Table   ;
                                                  SourceTable=Table11012333;
                                                  SourceTableView=SORTING(Field40,Field30);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              "Import Trade Item".INIT;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 lvI@1100525000 : Integer;
                                                                               BEGIN
                                                                                 WITH "Import Trade Item" DO BEGIN
                                                                                   IF FirstLine THEN BEGIN
                                                                                     //* Point of departure: All lines have the same Vendor (is a file of a Vendor for a specific Customer)
                                                                                     FirstLine := FALSE;
                                                                                     GLNVendor := Vendor;
                                                                                   END ELSE BEGIN
                                                                                     LinesRead := LinesRead + 1;  //DP00065
                                                                                   END;

                                                                                   Vendor := ExchangeMgtCU.CheckMakeEmpty_GLN_GTIN(Vendor);
                                                                                   "GTIN Code (Item)" := ExchangeMgtCU.CheckMakeEmpty_GLN_GTIN("GTIN Code (Item)");

                                                                                   //*C-018789.sn
                                                                                   IF ("Item Code" = '') AND ("GTIN Code (Item)" <> '') AND SiBSetup."Fill Item No. With GTIN Item" THEN
                                                                                     "Item Code" := "GTIN Code (Item)";
                                                                                   //*C-018789.en

                                                                                   //* Fill fields that are not in the CSV-file
                                                                                   "Minimum Order Quantity" := "Lot Size Quantity";  //* Min. Qty. not in CSV, so fill with lot size
                                                                                   IF TradeItemRec.GET(Vendor, "Item Code") THEN BEGIN
                                                                                     "Delivery Time ID" := TradeItemRec."Delivery Time ID";
                                                                                     "Starting Date Item" := TradeItemRec."Starting Date Item";
                                                                                   END;

                                                                                   //DP00065.sn
                                                                                   "Item Description" := COPYSTR(ItemDescription, 1, MAXSTRLEN("Item Description"));
                                                                                   "Item Description 2" := COPYSTR(ItemDescription, MAXSTRLEN("Item Description")+1, MAXSTRLEN("Item Description 2"));
                                                                                   "Import Date-Time" := ImportSetup."Import Date-Time";

                                                                                   "Source Type" := ImportTradeItemRec."Source Type"::sib;

                                                                                   IF ("Status Code" = '91E') OR ("Status Code" = '92E') THEN
                                                                                     Expired := TRUE;
                                                                                   ItemMgt.CheckAlternativeVendor(Vendor, "Alternative Vendor");
                                                                                   "Line No." := Lastline + 1;
                                                                                   Lastline := "Line No.";
                                                                                   //DP00065.en

                                                                                   INSERT(TRUE);

                                                                                   IF (Vendor <> '') AND ("Item Code" <> '') THEN BEGIN
                                                                                     FOR lvI := 1 TO 5 DO BEGIN
                                                                                       IF DiscCodeArray[lvI] <> '' THEN BEGIN
                                                                                         ImportTradeItemChargeRec.INIT;
                                                                                         ImportTradeItemChargeRec.Vendor := Vendor;
                                                                                         ImportTradeItemChargeRec."Item Code" := "Item Code";
                                                                                         ImportTradeItemChargeRec."Starting Date" := "Starting Date Price";
                                                                                         ImportTradeItemChargeRec."Discount/Charge Code" := DiscCodeArray[lvI];
                                                                                         ImportTradeItemChargeRec."Lower Limit Order Quantity" := DiscMinQuanArray[lvI];
                                                                                         ImportTradeItemChargeRec.Description := DiscDescrArray[lvI];
                                                                                         ImportTradeItemChargeRec."Discount/Charge Type" := COPYSTR(DiscCodeArray[lvI],1,1);
                                                                                         ImportTradeItemChargeRec.Percentage := DiscPercArray[lvI];
                                                                                         ImportTradeItemChargeRec.Amount := DiscAmtArray[lvI];
                                                                                         IF ImportTradeItemChargeRec.INSERT THEN;  //* Use 'IF'!
                                                                                       END;
                                                                                     END;
                                                                                   END;
                                                                                 END;

                                                                                 currXMLport.SKIP;   //db, 15-06-15: C023991
                                                                               END;
                                                                                }

    { [{2D286CD4-2E22-40AE-B62F-5A5197527788}];2 ;Vendor              ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Import Trade Item::Vendor;
                                                  MinOccurs=Zero;
                                                  Width=20 }

    { [{06A8681C-726D-4C81-AA76-814CA00F7775}];2 ;Filler1             ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{3AE2112C-C802-48AD-ABBE-1F507C9BF8DC}];2 ;Filler2             ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{E7CC821A-2E82-4D40-9575-1255BB527213}];2 ;Filler3             ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{E3EC741F-096D-49A5-A503-F42568673808}];2 ;GTINCodeItem        ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Import Trade Item::GTIN Code (Item);
                                                  MinOccurs=Zero }

    { [{B3216E43-427F-4D08-B9B2-955D0B0DAB8C}];2 ;ItemCode            ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Import Trade Item::Item Code;
                                                  MinOccurs=Zero }

    { [{5046E297-CC8E-40EB-8662-9B10AC0F2157}];2 ;DeliveryGroupCode   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  //* Can also contain a desription, so check length
                                                                                  CheckMaxStringLength(DeliveryGroupCode, MAXSTRLEN(DeliveryGroupCode));
                                                                                  "Import Trade Item"."Delivery Group Code" := DeliveryGroupCode;
                                                                                END;
                                                                                 }

    { [{7071E4E5-2C08-4D4F-B639-CED7640312C7}];2 ;ItemDescription     ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{4D91C8E6-FECA-41AF-8DBF-CE6B8D13EFC8}];2 ;StatusCode          ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Import Trade Item::Status Code;
                                                  MinOccurs=Zero }

    { [{5764F72C-398A-4333-9518-312C252A4E2A}];2 ;StartingDatePrice   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  //YearTxt := COPYSTR(Text,1,4);
                                                                                  //Monthtxt := COPYSTR(Text,5,2);
                                                                                  //DayTxt := COPYSTR(Text,7,2);
                                                                                  //Text := DayTxt + Monthtxt + YearTxt;
                                                                                END;
                                                                                 }

    { [{6A7013C5-D982-4395-A84C-364510C59BA1}];2 ;DummyDeepLink       ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{AEE78BD4-870E-43F8-926B-AB2EE63699F9}];2 ;LotSizeQuantity     ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(LotSizeQuantity);
                                                                                  EVALUATE("Import Trade Item"."Lot Size Quantity", LotSizeQuantity);
                                                                                END;
                                                                                 }

    { [{94ADE232-0A4C-453D-B051-9E8484278B64}];2 ;DeliveryPeriod      ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DeliveryPeriod);
                                                                                  EVALUATE("Import Trade Item"."Delivery Period", DeliveryPeriod);
                                                                                END;
                                                                                 }

    { [{D3185D2E-6F8C-4343-A476-2CDE9290A97C}];2 ;OrderID             ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Import Trade Item::Order ID;
                                                  MinOccurs=Zero }

    { [{08A70324-7C7E-428E-9C74-5437F829F4DA}];2 ;ApplicationUnitQuantity;Element;Text  ;
                                                  DataType=Decimal;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(ApplicationUnitQuantity);
                                                                                  EVALUATE("Import Trade Item"."Application Unit Quantity", ApplicationUnitQuantity);
                                                                                END;
                                                                                 }

    { [{EE0F344F-69D2-4405-90D2-0E95C767FCD9}];2 ;ApplicationID       ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Import Trade Item::Application ID;
                                                  MinOccurs=Zero }

    { [{7D326686-45E3-4C47-A0BC-4F4085F02C8A}];2 ;DummyUnitDescr      ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{96982CA8-CE41-455B-8CDA-15ADB1A2CBE2}];2 ;DumEnclosedGTINItem ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DumEnclosedGTINItem);
                                                                                END;
                                                                                 }

    { [{83798464-7049-4F35-B987-502A84CD17AD}];2 ;DumEnclosedItemQuan ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DumEnclosedItemQuan);
                                                                                END;
                                                                                 }

    { [{3D2CF66D-3E4B-463A-B1D0-C657FD44A67C}];2 ;PackagingCode       ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Import Trade Item::Packaging Code;
                                                  MinOccurs=Zero }

    { [{81234DC9-11D5-43C2-BFA1-192C3C140641}];2 ;Length              ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(Length);
                                                                                  EVALUATE("Import Trade Item".Length, Length);
                                                                                END;
                                                                                 }

    { [{DA14B369-021D-4D72-9611-50DDB74D207D}];2 ;Width               ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(Width);
                                                                                  EVALUATE("Import Trade Item".Width, Width);
                                                                                END;
                                                                                 }

    { [{971A0E8A-23E5-49F9-8AB0-20A42E33F88F}];2 ;Height              ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(Height);
                                                                                  EVALUATE("Import Trade Item".Height, Height);
                                                                                END;
                                                                                 }

    { [{CE94F426-DAB7-44C4-92E6-9B2C6C8EEC8B}];2 ;SizeID              ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Import Trade Item::Size ID;
                                                  MinOccurs=Zero }

    { [{C41D9EBC-2D0A-4931-922E-99924BD1221C}];2 ;GrossWeight         ;Element ;Field   ;
                                                  DataType=Decimal;
                                                  SourceField=Import Trade Item::Gross Weight;
                                                  MinOccurs=Zero }

    { [{0F795745-28E7-491B-940E-2CD2979FDC2C}];2 ;WeightID            ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Import Trade Item::Weight ID;
                                                  MinOccurs=Zero }

    { [{4AC47D4E-9E38-4FB3-893D-4010101763A0}];2 ;CurrencyCode        ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Import Trade Item::Currency Code;
                                                  MinOccurs=Zero }

    { [{8B77F913-6829-4C9B-A08C-CBD7A106D469}];2 ;NetPrice            ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(NetPrice);
                                                                                  EVALUATE("Import Trade Item"."Net Price", NetPrice);
                                                                                END;
                                                                                 }

    { [{E7BB0FEC-781E-40EA-BD16-2EB4DAF002A9}];2 ;GrossPrice          ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(GrossPrice);
                                                                                  EVALUATE("Import Trade Item"."Gross Price", GrossPrice);
                                                                                END;
                                                                                 }

    { [{EDE34EC4-1C0A-4B7F-8157-36CFA832DA8B}];2 ;GrossPriceOperationSurch;Element;Text ;
                                                  DataType=Decimal;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(GrossPriceOperationSurch);
                                                                                  EVALUATE("Import Trade Item"."Gross Price Operation Surch.", GrossPriceOperationSurch);
                                                                                END;
                                                                                 }

    { [{92CF57ED-13DB-4DF6-8103-5B8CB12C8F35}];2 ;QuantityPerPrice    ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(QuantityPerPrice);
                                                                                  EVALUATE("Import Trade Item"."Quantity Per Price", QuantityPerPrice);
                                                                                END;
                                                                                 }

    { [{BFB97BAE-63AF-469D-82F3-4FD406CEE945}];2 ;PriceID             ;Element ;Text    ;
                                                  DataType=Code;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(PriceID);
                                                                                  EVALUATE("Import Trade Item"."Quantity Per Price", QuantityPerPrice);
                                                                                END;
                                                                                 }

    { [{2E8E4A7D-FC73-434B-A2D0-0F11F787FC78}];2 ;FactorPrice-PurchaseUnit;Element;Text ;
                                                  DataType=Decimal;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar("FactorPrice-PurchaseUnit");
                                                                                  EVALUATE("Import Trade Item"."Factor Price-Purchase Unit", LotSizeQuantity);
                                                                                END;
                                                                                 }

    { [{7AA5E1F8-265A-4936-B38D-43CD832D8A41}];2 ;VatCode             ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Import Trade Item::VAT Code;
                                                  MinOccurs=Zero }

    { [{EDD73C19-63DA-4A04-BF0D-EAF6642450E8}];2 ;VATPct              ;Element ;Text    ;
                                                  DataType=Decimal;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(VATPct);
                                                                                  EVALUATE("Import Trade Item"."VAT %", VATPct);
                                                                                END;
                                                                                 }

    { [{8961975C-5907-46DD-A534-75B29F98E6FC}];2 ;DiscTypeArray1      ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A962FE38-FB22-4254-80B6-3A658AF0F068}];2 ;DiscDescrArray1     ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{8FF07840-A921-49EC-9806-FDA22F34F4D7}];2 ;DiscCodeArray1      ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{F164B1EB-DF6D-4417-AFB7-6807BC0FDE49}];2 ;DiscPercArray1      ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscPercArray1);
                                                                                  EVALUATE(DiscPercArray[1], DiscPercArray1);
                                                                                END;
                                                                                 }

    { [{0FB60C7F-D7AC-43F3-B730-F04B47316D52}];2 ;DiscAmtArray1       ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscAmtArray1);
                                                                                  EVALUATE(DiscAmtArray[1], DiscAmtArray1);
                                                                                END;
                                                                                 }

    { [{0B043D98-A747-4689-B480-156CC8E78663}];2 ;DiscMinQuanArray1   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscMinQuanArray1);
                                                                                  EVALUATE(DiscMinQuanArray[1], DiscMinQuanArray1);
                                                                                END;
                                                                                 }

    { [{DC0590B2-AA4E-40C8-B262-CA1AE34DA124}];2 ;DiscTypeArray2      ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{FB495FC7-C7BD-409A-B6C9-31824F6C4330}];2 ;DiscDescrArray2     ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{76FE5123-A4E0-4ABB-81AD-640A11D8FD28}];2 ;DiscCodeArray2      ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{6A573B77-EB96-40F5-B532-52BE35C33127}];2 ;DiscPercArray2      ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscPercArray2);
                                                                                  EVALUATE(DiscPercArray[2], DiscPercArray2);
                                                                                END;
                                                                                 }

    { [{27585DCE-6F88-4245-ACDA-295D9CB87FD9}];2 ;DiscAmtArray2       ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscAmtArray2);
                                                                                  EVALUATE(DiscAmtArray[2], DiscAmtArray2);
                                                                                END;
                                                                                 }

    { [{9CE5E94B-BAC4-441D-A8D1-80EB49A99F04}];2 ;DiscMinQuanArray2   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscMinQuanArray2);
                                                                                  EVALUATE(DiscMinQuanArray[2], DiscMinQuanArray2);
                                                                                END;
                                                                                 }

    { [{9FAC8801-6514-45EE-BF63-501B71F2278D}];2 ;DiscTypeArray3      ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{99935BA4-CD82-42E5-8B66-083673A68C11}];2 ;DiscDescrArray3     ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{E0A8A822-7518-4B6E-B41C-0D675B058ADC}];2 ;DiscCodeArray3      ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{BCDC16F4-6F00-4D58-85D2-B70FB5B200E9}];2 ;DiscPercArray3      ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscPercArray3);
                                                                                  EVALUATE(DiscPercArray[3], DiscPercArray3);
                                                                                END;
                                                                                 }

    { [{93066080-1666-493A-A8DB-3ACB5924086C}];2 ;DiscAmtArray3       ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscAmtArray3);
                                                                                  EVALUATE(DiscAmtArray[3], DiscAmtArray3);
                                                                                END;
                                                                                 }

    { [{ED4AB104-0242-4597-B5DD-C6DC4BED9F2E}];2 ;DiscMinQuanArray3   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscMinQuanArray3);
                                                                                  EVALUATE(DiscMinQuanArray[3], DiscMinQuanArray3);
                                                                                END;
                                                                                 }

    { [{D6AB880A-5439-4165-9A4A-5E7219C18ECE}];2 ;DiscTypeArray4      ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{AF3B1719-3B9B-478F-A558-58E9DC4EDE8E}];2 ;DiscDescrArray4     ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{E3E5600C-9682-4E1D-9D17-E28E333C9B75}];2 ;DiscCodeArray4      ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{FE27C0A5-A2DA-4499-9A01-2D769E32D21F}];2 ;DiscPercArray4      ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscPercArray4);
                                                                                  EVALUATE(DiscPercArray[4], DiscPercArray4);
                                                                                END;
                                                                                 }

    { [{CE5CDD6E-D5EE-484C-9BFB-06CB23ADF926}];2 ;DiscAmtArray4       ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscAmtArray4);
                                                                                  EVALUATE(DiscAmtArray[4], DiscAmtArray4);
                                                                                END;
                                                                                 }

    { [{4C667DE9-AB22-48BB-B384-CEE2C34FE5E5}];2 ;DiscMinQuanArray4   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscMinQuanArray4);
                                                                                  EVALUATE(DiscMinQuanArray[4], DiscMinQuanArray4);
                                                                                END;
                                                                                 }

    { [{817B7EE5-477C-4863-A417-AE0807AD0AF2}];2 ;DiscTypeArray5      ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{C72153AC-AC9D-4D54-A3EE-D67802C90D5F}];2 ;DiscDescrArray5     ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{C2AAB0FD-1E80-463B-A5E3-8F91EDD0EB89}];2 ;DiscCodeArray5      ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{B31247A3-67A3-474F-8919-9AA2ACDCFEC0}];2 ;DiscPercArray5      ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscPercArray5);
                                                                                  EVALUATE(DiscPercArray[5], DiscPercArray5);
                                                                                END;
                                                                                 }

    { [{BB50C42B-63E5-4966-B77B-5E33DB350E71}];2 ;DiscAmtArray5       ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscAmtArray5);
                                                                                  EVALUATE(DiscAmtArray[5], DiscAmtArray5);
                                                                                END;
                                                                                 }

    { [{3976C04A-BAA2-4A3A-BAA3-338CA40FB228}];2 ;DiscMinQuanArray5   ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  CheckConvertDecimalPointChar(DiscMinQuanArray5);
                                                                                  EVALUATE(DiscMinQuanArray[5], DiscMinQuanArray5);
                                                                                END;
                                                                                 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      SiBSetup@1100528925 : Record 11072650;
      ImportSetup@1100528924 : Record 11012301;
      FileRec@1100528923 : Record 2000000022;
      TradeItemRec@1100528922 : Record 11012317;
      ImportTradeItemRec@1100528921 : Record 11012333;
      ImportTradeItemChargeRec@1100528920 : Record 11012740;
      ExchangeMgtCU@1100528919 : Codeunit 11072076;
      FirstLine@1100528918 : Boolean;
      DiscPercArray@1100528917 : ARRAY [5] OF Decimal;
      DiscAmtArray@1100528916 : ARRAY [5] OF Decimal;
      DiscMinQuanArray@1100528915 : ARRAY [5] OF Decimal;
      GLNVendor@1100528913 : Code[20];
      DiscCodeArray@1100528911 : ARRAY [5] OF Code[10];
      DiscDescrArray@1100528907 : ARRAY [5] OF Text[50];
      Lastline@1100528904 : Integer;
      LinesRead@1100528902 : Integer;
      LinesProcessed@1100528901 : Integer;
      ItemMgt@1100528900 : Codeunit 11012300;
      FileName@1100525000 : Text[250];

    PROCEDURE SetFileNameOld@1100525000(iFileRec@1100525000 : Record 2000000022);
    BEGIN
      FileRec := iFileRec;
    END;

    PROCEDURE SetFileNameNew@1100525003(iFileName@1100525000 : Text[250]);
    BEGIN
      //db, 15-06-15: C023991
      FileName := iFileName;
    END;

    PROCEDURE GetGLNVendor@1100525001() : Code[20];
    BEGIN
      EXIT(GLNVendor);
    END;

    PROCEDURE CheckConvertDecimalPointChar@1100525002(VAR lvText@1100525000 : Text[1024]);
    BEGIN
      //* Decimals should be in the file with a decimal point and whithout a thousand sign.
      //* If the decimal character is ',' then the '.' must be converted in a ','.
      IF COPYSTR(FORMAT(1.2), 2, 1) = ',' THEN
        lvText := CONVERTSTR(lvText, '.', ',');
    END;

    PROCEDURE CheckMaxStringLength@1100528901(VAR lvText@1100525000 : Text[1024];lvMaxLen@1100525001 : Integer);
    BEGIN
      IF STRLEN(lvText) > lvMaxLen THEN
        lvText := COPYSTR(lvText, 1, lvMaxLen);
    END;

    BEGIN
    END.
  }
}

