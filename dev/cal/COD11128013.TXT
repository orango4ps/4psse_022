OBJECT Codeunit 11128013 Inward Reg.-Reverse
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVSE7.10 (11203);
  }
  PROPERTIES
  {
    TableNo=11128010;
    OnRun=BEGIN
            InwHeader.COPY(Rec);
            WITH InwHeader DO BEGIN
              IF Status <> Status::Posted THEN
                ERROR(Text001);

              IF GenJnlCheckLine.DateNotAllowed("Posting Date") THEN
                FIELDERROR("Posting Date",Text005);

              SourceCodeSetup.GET;
              PurchSetup.GET;

              VendPostingGr.GET("Vendor Posting Group");
              VendPostingGr.TESTFIELD("Inward Reg. Bridging Debt");

              TotAmountInclVATReverse := 0;
              NextLineNo := 10000;
              FirstTime := TRUE;
              DimensionsOnTotalTrans := TRUE;

              MakeInwRegEntriesReverse;
              MakeGenJnlLineTotalReverse;

              Status := Status::Reversed;
              MODIFY;
            END;

            Rec := InwHeader;
          END;

  }
  CODE
  {
    VAR
      PostedEntry@1070000 : Record 11128012;
      InwRegEntry@1070001 : Record 11128012;
      NextEntryNo@1070002 : Integer;
      FirstEntryNo@1070003 : Integer;
      GenJnlLine@1070004 : Record 81;
      InwHeader@1070005 : Record 11128010;
      NextLineNo@1070006 : Integer;
      GenPostingSetup@1070007 : Record 252;
      SourceCodeSetup@1070008 : Record 242;
      PurchSetup@1070009 : Record 312;
      TotAmountInclVATReverse@1070010 : Decimal;
      VendPostingGr@1070011 : Record 93;
      GenJnlPostLine@1070012 : Codeunit 12;
      CurrencyDate@1070013 : Date;
      Text001@1070014 : TextConst 'ENU=In order to reverse, the status has to be Posted.;NOR=For † reversere m† status v‘re Bokf›rt.;SVE=F”r att †terf”ra m†ste status vara bokf”rd.';
      Text002@1070015 : TextConst 'ENU=There is nothing to reverse.;NOR=Det finnes ingenting † returnere.;SVE=Det finns inget att †terf”ra.';
      Text003@1070016 : TextConst 'ENU=%1 %2 %3 does not exist.;NOR=%1 %2 %3 finnes ikke.;SVE=%1 %2 %3 finns inte.';
      Text004@1070017 : TextConst 'ENU=%1 does not exist.;NOR=%1 finnes ikke.;SVE=%1 finns inte.';
      FirstTime@1070020 : Boolean;
      PreviousDim1Code@1070021 : Code[20];
      PreviousDim2Code@1070022 : Code[20];
      DimensionsOnTotalTrans@1070023 : Boolean;
      GenJnlCheckLine@1070024 : Codeunit 11;
      Text005@1070025 : TextConst 'ENU=is not within your range of allowed posting dates;NOR=er ikke i ditt tillatte intervall for bokf›ringsdatoer;SVE=„r inte i ditt till†tna intervall f”r bokf”ringsdatum';
      PostingDate@1070018 : Date;

    PROCEDURE MakeInwRegEntriesReverse@1070000();
    BEGIN
      // MakeInwRegEntriesReverse
      IF InwRegEntry.FIND('+') THEN
        NextEntryNo := InwRegEntry."Entry No." + 1
      ELSE
        NextEntryNo := 1;

      FirstEntryNo := NextEntryNo - 1;

      WITH PostedEntry DO BEGIN
        SETCURRENTKEY("Document No.","Entry No.");
        SETRANGE("Document No.",InwHeader."No.");
        SETRANGE("Entry No.",1,FirstEntryNo);

        IF FIND('-') THEN BEGIN
          CurrencyDate := "Posting Date";
          REPEAT
            MakeInwRegEntryReverse;
            "Applies-to Entry" := InwRegEntry."Entry No.";
            Open := FALSE;
            MODIFY;
            MakeGenJnlLine;
          UNTIL NEXT = 0;
        END ELSE
          ERROR(Text002);
      END;
    END;

    PROCEDURE MakeInwRegEntryReverse@1070001();
    BEGIN
      // MakeInwRegEntryReverse
      WITH PostedEntry DO BEGIN
        InwRegEntry.INIT;
        InwRegEntry."Entry No." := NextEntryNo;
        InwRegEntry."Applies-to Entry" := "Entry No.";
        InwRegEntry.Open := FALSE;
        InwRegEntry."Source Type" := "Source Type";
        InwRegEntry."Source No." := "Source No.";
        IF PostingDate <> 0D THEN
          InwRegEntry."Posting Date" := PostingDate
        ELSE
          InwRegEntry."Posting Date" := InwHeader."Posting Date";
        InwRegEntry."Vendor Posting Group" := "Vendor Posting Group";
        InwRegEntry."Gen. Bus. Posting Group" := "Gen. Bus. Posting Group";
        InwRegEntry."Vendor No." := "Vendor No.";
        InwRegEntry."Document No." := "Document No.";
        InwRegEntry."Line No." := "Line No.";
        InwRegEntry."VAT Prod. Posting Group" := "VAT Prod. Posting Group";
        InwRegEntry."VAT Bus. Posting Group" := "VAT Bus. Posting Group";
        InwRegEntry."VAT Calculation Type" := "VAT Calculation Type";
        InwRegEntry."VAT %" := "VAT %";
        InwRegEntry."Gen. Prod. Posting Group" := "Gen. Prod. Posting Group";
        InwRegEntry.Amount := -Amount;
        InwRegEntry."Amount (LCY)" := -"Amount (LCY)" ;
        InwRegEntry."VAT Amount" := -"VAT Amount" ;
        InwRegEntry."Amount Including VAT (LCY)" := -"Amount Including VAT (LCY)" ;
        InwRegEntry."Ledger VAT Amount" := -"Ledger VAT Amount";
        InwRegEntry."Ledger VAT Amount (LCY)" := -"Ledger VAT Amount (LCY)";
        InwRegEntry."Ledger Debit Amount" := -"Ledger Debit Amount";
        InwRegEntry."Ledger Credit Amount" := "Ledger Credit Amount";
        InwRegEntry."Currency Date" := CurrencyDate;
        InwRegEntry."Vendor Invoice No." := "Vendor Invoice No.";
        InwRegEntry."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
        InwRegEntry."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
        InwRegEntry."Dimension Set ID" := "Dimension Set ID";
        InwRegEntry."Currency Code" := "Currency Code";
        InwRegEntry.INSERT(TRUE);
        NextEntryNo := NextEntryNo + 1;
      END;
    END;

    PROCEDURE MakeGenJnlLine@1070002();
    BEGIN
      // MakeGenJnlLine
      GenPostingSetup.SETCURRENTKEY("Gen. Bus. Posting Group","Gen. Prod. Posting Group");
      GenPostingSetup.SETRANGE("Gen. Bus. Posting Group",InwRegEntry."Gen. Bus. Posting Group");
      GenPostingSetup.SETRANGE("Gen. Prod. Posting Group",InwRegEntry."Gen. Prod. Posting Group");

      IF NOT GenPostingSetup.FIND('-') THEN
        ERROR(Text003,GenPostingSetup.TABLECAPTION,InwRegEntry.FIELDCAPTION("Gen. Bus. Posting Group"),InwRegEntry.
          FIELDCAPTION("Gen. Prod. Posting Group"));

      IF GenPostingSetup."Inward Reg. Bridging Account" = '' THEN
        ERROR(Text004,GenPostingSetup.FIELDCAPTION("Inward Reg. Bridging Account"));

      GenJnlLine.INIT;
      GenJnlLine."Line No." := NextLineNo;
      GenJnlLine."Account Type" := GenJnlLine."Account Type"::"G/L Account";
      GenJnlLine."Source Code" := SourceCodeSetup."Inward Registration";
      GenJnlLine.Description := PurchSetup."Reverse Posting Description";
      GenJnlLine."Account No." := GenPostingSetup."Inward Reg. Bridging Account";
      GenJnlLine."Posting Date" := InwRegEntry."Posting Date";
      GenJnlLine."Document No." := InwRegEntry."Document No.";
      GenJnlLine."Document Type" := GenJnlLine."Document Type"::Invoice;
      GenJnlLine."External Document No." := InwRegEntry."Document No.";
      GenJnlLine."Source No." := InwRegEntry."Vendor No.";
      GenJnlLine."Gen. Posting Type" := GenJnlLine."Gen. Posting Type"::Purchase;
      GenJnlLine."Gen. Bus. Posting Group" := InwRegEntry."Gen. Bus. Posting Group";
      GenJnlLine."Gen. Prod. Posting Group" := InwRegEntry."Gen. Prod. Posting Group";
      GenJnlLine."Shortcut Dimension 1 Code" := InwRegEntry."Shortcut Dimension 1 Code";
      GenJnlLine."Shortcut Dimension 2 Code" := InwRegEntry."Shortcut Dimension 2 Code";
      IF FirstTime THEN BEGIN
        PreviousDim1Code := InwRegEntry."Shortcut Dimension 1 Code";
        PreviousDim2Code := InwRegEntry."Shortcut Dimension 2 Code";
        FirstTime := FALSE;
      END
      ELSE
        IF (GenJnlLine."Shortcut Dimension 1 Code" <> PreviousDim1Code) OR
           (GenJnlLine."Shortcut Dimension 2 Code" <> PreviousDim2Code)
        THEN
          DimensionsOnTotalTrans := FALSE;

      GenJnlLine.Quantity := 1;
      GenJnlLine."VAT Bus. Posting Group" := InwRegEntry."VAT Bus. Posting Group";
      GenJnlLine."VAT Prod. Posting Group" := InwRegEntry."VAT Prod. Posting Group";
      GenJnlLine."VAT Calculation Type" := InwRegEntry."VAT Calculation Type";
      GenJnlLine."VAT %" := InwRegEntry."VAT %";
      GenJnlLine.Amount := InwRegEntry."Amount (LCY)";
      GenJnlLine."VAT Amount" := InwRegEntry."Ledger VAT Amount";
      GenJnlLine."VAT Base Amount" := InwRegEntry."Amount (LCY)" ;
      GenJnlLine."Debit Amount" := InwRegEntry."Ledger Debit Amount";
      GenJnlLine."Credit Amount" := InwRegEntry."Ledger Credit Amount";
      GenJnlLine."VAT Amount (LCY)" := InwRegEntry."Ledger VAT Amount (LCY)";
      GenJnlLine."VAT Posting" := GenJnlLine."VAT Posting"::"Manual VAT Entry";
      GenJnlLine.Correction := TRUE;
      GenJnlLine."System-Created Entry" := TRUE;
      GenJnlLine."Source Posting Date" := InwRegEntry."Currency Date";
      GenJnlLine."Dimension Set ID" := InwRegEntry."Dimension Set ID";
      TotAmountInclVATReverse := TotAmountInclVATReverse + InwRegEntry."Amount Including VAT (LCY)";
      NextLineNo := NextLineNo + 10000;

      GenJnlPostLine.RunWithoutCheck(GenJnlLine);
    END;

    PROCEDURE MakeGenJnlLineTotalReverse@1070003();
    BEGIN
      // MakeGenJnlLineTotalReverse
      GenJnlLine.INIT;
      GenJnlLine."Account Type" := GenJnlLine."Account Type"::"G/L Account";
      GenJnlLine."Source Code" := SourceCodeSetup."Inward Registration";
      GenJnlLine.Description := PurchSetup."Reverse Posting Description";
      GenJnlLine."Account No." := VendPostingGr."Inward Reg. Bridging Debt";
      GenJnlLine."Posting Date" := InwRegEntry."Posting Date";
      GenJnlLine."Document No." := InwRegEntry."Document No.";
      GenJnlLine."Document Type" := GenJnlLine."Document Type"::Invoice;
      GenJnlLine."External Document No." := InwRegEntry."Document No.";
      GenJnlLine."Source No." := InwRegEntry."Vendor No.";
      GenJnlLine."Gen. Posting Type" := 0;
      GenJnlLine."Gen. Bus. Posting Group" := '';
      GenJnlLine."Gen. Prod. Posting Group" := '';
      GenJnlLine."VAT Bus. Posting Group" := '';
      GenJnlLine."VAT Prod. Posting Group" := '';
      IF DimensionsOnTotalTrans THEN BEGIN
        GenJnlLine."Shortcut Dimension 1 Code" := InwRegEntry."Shortcut Dimension 1 Code";
        GenJnlLine."Shortcut Dimension 2 Code" := InwRegEntry."Shortcut Dimension 2 Code";
      END;

      GenJnlLine."VAT %" := 0;
      GenJnlLine.Quantity := 0;
      GenJnlLine.VALIDATE(Amount,-TotAmountInclVATReverse);
      GenJnlLine.Correction := TRUE;
      GenJnlLine."System-Created Entry" := TRUE;
      GenJnlLine."Source Posting Date" := InwRegEntry."Currency Date";
      GenJnlLine."Dimension Set ID" := InwRegEntry."Dimension Set ID";

      GenJnlPostLine.RunWithoutCheck(GenJnlLine);
    END;

    PROCEDURE SetPostingDate@1070004(PurchHeaderPostingDate@1070001 : Date);
    BEGIN
      PostingDate := PurchHeaderPostingDate;
    END;

    BEGIN
    END.
  }
}

