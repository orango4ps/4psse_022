OBJECT XMLport 11012138 Imp. Service Order
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Imp. Service Order;
               SVE=Imp. serviceorder];
    DefaultFieldsValidation=No;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    XmlPortID := 11012138;
                    MainTableID := 11012823;
                    MainTableLookupPageID := 11012830;
                    XMLPortRequestPageID := 11230048;
                  END;

    OnPreXMLport=VAR
                   ConversionXMLPort4PS@1100527700 : Record 11020640;
                 BEGIN
                   IF NOT currXMLport.IMPORTFILE THEN BEGIN
                     AddConversionFileFormatLine;
                     ConversionXMLPort4PS.UpdateFromXMLPort(XmlPortID,MainTableID,MainTableLookupPageID,XMLPortRequestPageID,FALSE,0);
                     COMMIT;
                     ERROR('');
                   END;

                   ConvMgt.CheckComCde(CreateNewNosBln,MainTableID,CommentCde);
                   ConvMgt.CheckComCde(UseOldCustNoBln,18,CustCommentCde);
                   ConvMgt.CheckComCde(UseOldLocNoBln,11012801,LocCommentCde);

                   ConvMgt.DeleteConComment(XmlPortID);
                   ConvMgt.CreateConComment(XmlPortID,STRSUBSTNO('Import File: %1.',currXMLport.FILENAME));
                   ConvMgt.CreateConComment(XmlPortID,'Start');
                 END;

    OnPostXMLport=BEGIN
                    ConvMgt.CreateConComment(XmlPortID,'Stop');
                    ConvMgt.CreateConComment(XmlPortID,ConvMgt.CreateNoOfLinesCommentTxt(MainTableID,ImpLineCounter));
                  END;

    Format=Variable Text;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{755F5B7F-F062-4834-8364-DC4CD51C5A62}];  ;Root                ;Element ;Text     }

    { [{A7DBD164-8D3E-4F8D-B3A0-89F91BC12205}];1 ;ServiceOrder        ;Element ;Table   ;
                                                  SourceTable=Table11012823;
                                                  SourceTableView=SORTING(Field10);
                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 StripData;
                                                                                 ImpLineCounter := ImpLineCounter + 1;
                                                                                 CLEAR("Service Order");

                                                                                 WITH "Service Order" DO BEGIN
                                                                                   LocCde := ConvMgt.DetermineNewCode(UseOldLocNoBln,CommentRec."Table Name"::"Service Location",LocCommentCde,B);
                                                                                   CustCde := ConvMgt.DetermineNewCode(UseOldCustNoBln,CommentRec."Table Name"::Customer,CustCommentCde,C);

                                                                                   IF CreateNewNosBln THEN
                                                                                     "No." := ''
                                                                                   ELSE
                                                                                     "No." := A;

                                                                                   INSERT(TRUE);
                                                                                   IF CreateNewNosBln THEN
                                                                                     ConvMgt.FillComment(CommentRec."Table Name"::"Service Order","No.",CommentCde,A);

                                                                                   IF ConvMgt.IsServiceLocationPresent(LocCde) THEN
                                                                                     VALIDATE("Service Location No.",LocCde)
                                                                                   ELSE
                                                                                     ConvMgt.CreateConComment(XmlPortID,ConvMgt.CreateFieldNotFilledCommentTxt(
                                                                                       11012801,
                                                                                       B,
                                                                                       FIELDCAPTION("Service Location No."),
                                                                                       MainTableID,
                                                                                       "No."));

                                                                                   IF ("Customer No." = '') THEN
                                                                                     IF ConvMgt.IsCustomerPresent(CustCde) THEN
                                                                                       VALIDATE("Customer No.",CustCde)
                                                                                     ELSE
                                                                                       ConvMgt.CreateConComment(XmlPortID,ConvMgt.CreateFieldNotFilledCommentTxt(
                                                                                         18,
                                                                                         C,
                                                                                         FIELDCAPTION("Customer No."),
                                                                                         MainTableID,
                                                                                         "No."));

                                                                                   VALIDATE(Description,D);
                                                                                   VALIDATE("Contact Name", E);
                                                                                   VALIDATE("Phone No.",F);
                                                                                   VALIDATE("Your Reference",G);
                                                                                   VALIDATE(Status, Status::"In Process");
                                                                                   MODIFY(TRUE);

                                                                                 END;
                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{5C900A9C-2240-4551-8D3B-A67A2D629F53}];2 ;A                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{5E5EE9AF-296C-4B48-B3A4-71FD1D3BDBB8}];2 ;B                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{81EF86E1-A401-49BA-998E-C96326459340}];2 ;C                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A4D141C2-7800-4941-8428-EBDFE695445E}];2 ;D                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A94DDF8B-AF48-4B38-93FE-471C5E7FDE8B}];2 ;E                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{7009774A-5D5B-4893-B574-E0BA7086A95E}];2 ;F                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{61A54020-5A22-4777-8499-A876D2E08C7F}];2 ;G                   ;Element ;Text    ;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=[ENU=Imp. Contract Object;
                 SVE=Imp. kontraktsobjekt];
      OnOpenPage=BEGIN
                   RunIsImportRunBln := TRUE;
                   CreateNewNosBln := TRUE;
                   CommentCde := '';
                   UseOldCustNoBln := TRUE;
                   UseOldLocNoBln := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1100409010;;Container;
                  Name=Imp. Service Order OBJ;
                  CaptionML=ENU=Imp. Service Order OBJ;
                  ContainerType=ContentArea }

      { 1100409009;1;Group  ;
                  CaptionML=[ENU=Options;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525000;2;Field  ;
                  CaptionML=ENU=Create new Service Order Nos;
                  SourceExpr=CreateNewNosBln;
                  OnValidate=BEGIN
                               IF NOT CreateNewNosBln THEN
                                 CommentCde := '';
                             END;
                              }

      { 1100525001;2;Field  ;
                  Name=ComCde;
                  CaptionML=[ENU=Comment Code for storing old Service Order No.;
                             SVE=Kommentarskod f”r lagring av gammalt serviceordernr];
                  SourceExpr=CommentCde;
                  TableRelation="Comment Code" }

      { 1100525002;2;Field  ;
                  CaptionML=[ENU=Lookup new Customer No. based on old Customer No.;
                             SVE=Val av nytt kundnr baserat p† gammalt kundnr];
                  SourceExpr=UseOldCustNoBln;
                  OnValidate=BEGIN
                               IF NOT UseOldCustNoBln THEN
                                 CustCommentCde := '';
                             END;
                              }

      { 1100525003;2;Field  ;
                  Name=CustComCde;
                  CaptionML=[ENU=Comment Code for searching Customer No.;
                             SVE=Kommentarskod f”r s”kning efter kundnr];
                  SourceExpr=CustCommentCde;
                  TableRelation="Comment Code" }

      { 1100525004;2;Field  ;
                  CaptionML=[ENU=Lookup new Service Location No. based on old Location No.;
                             SVE=Val av nytt serviceplatsnr baserat p† gammalt lagerst„llenr];
                  SourceExpr=UseOldLocNoBln;
                  OnValidate=BEGIN
                               IF NOT UseOldLocNoBln THEN
                                 LocCommentCde := '';
                             END;
                              }

      { 1100525005;2;Field  ;
                  Name=LocComCde;
                  CaptionML=[ENU=Comment Code for searching Service Location No.;
                             SVE=Kommentarskod f”r s”kning efter serviceplatsnr];
                  SourceExpr=LocCommentCde;
                  TableRelation="Comment Code" }

    }
  }
  CODE
  {
    VAR
      CommentRec@1100525026 : Record 97;
      ConvMgt@1100525025 : Codeunit 11020212;
      XmlPortID@1100525022 : Integer;
      MainTableID@1100525021 : Integer;
      MainTableLookupPageID@1100527701 : Integer;
      XMLPortRequestPageID@1100527700 : Integer;
      CreateNewNosBln@1100525020 : Boolean;
      ImpLineCounter@1100525019 : Integer;
      CommentCde@1100525018 : Code[10];
      ConversionFileFormat@1100525017 : Record 11020691;
      RunIsImportRunBln@1100525016 : Boolean;
      UseOldCustNoBln@1100525013 : Boolean;
      UseOldLocNoBln@1100525012 : Boolean;
      CustCommentCde@1100525011 : Code[20];
      LocCommentCde@1100525010 : Code[20];
      CustCde@1100525009 : Code[20];
      LocCde@1100525008 : Code[20];

    PROCEDURE StripData@1100485001();
    BEGIN
      A := DELCHR(A,'<>',' ');
      B := DELCHR(B,'<>',' ');
      C := DELCHR(C,'<>',' ');
      D := DELCHR(D,'<>',' ');
      E := DELCHR(E,'<>',' ');
      F := DELCHR(F,'<>',' ');
      G := DELCHR(G,'<>',' ');
    END;

    PROCEDURE AddConversionFileFormatLine@1100529901();
    BEGIN
      // This function stores the file format into table [Conversion File Format].
      // There is no other standard documentation; so please maintain this function in case of customization.
      //
      // Parameters: 1: [Dataport No.],
      //             2: [csv-Column],
      //             3: [NAV Table ID],
      //             4: [NAV Field Name],
      //             5: [Data Type of dataport field],
      //             6: [extra Comment].
      //
      WITH ConversionFileFormat DO BEGIN
        ConversionFileFormat.DeleteColumnLines(XmlPortID);
        InsertColumnLine(XmlPortID,'A',MainTableID,"Service Order".FIELDNAME("No."),'Code20','OldOrNewTxt');
        InsertColumnLine(XmlPortID,'B',MainTableID,"Service Order".FIELDNAME("Service Location No."),'Code20','OldTxt');
        InsertColumnLine(XmlPortID,'C',MainTableID,"Service Order".FIELDNAME("Customer No."),'Code20','OldTxt');
        InsertColumnLine(XmlPortID,'D',MainTableID,"Service Order".FIELDNAME(Description),'Text50','');
        InsertColumnLine(XmlPortID,'E',MainTableID,"Service Order".FIELDNAME("Contact Name"),'Text50','');
        InsertColumnLine(XmlPortID,'F',MainTableID,"Service Order".FIELDNAME("Phone No."),'Text30','');
        InsertColumnLine(XmlPortID,'G',MainTableID,"Service Order".FIELDNAME("Your Reference"),'Text50','');
      END;
    END;

    PROCEDURE InitXMLport@1100529500(iCreateNewNosBln@1100529505 : Boolean;iCommentCde@1100529504 : Code[10];iUseOldCustNoBln@1100529503 : Boolean;iUseOldLocNoBln@1100529502 : Boolean;iCustCommentCde@1100529501 : Code[20];iLocCommentCde@1100529500 : Code[20]);
    BEGIN
      CreateNewNosBln := iCreateNewNosBln;
      CommentCde := iCommentCde;
      UseOldCustNoBln := iUseOldCustNoBln;
      UseOldLocNoBln := iUseOldLocNoBln;
      CustCommentCde := iCustCommentCde;
      LocCommentCde := iLocCommentCde;
    END;

    BEGIN
    {
      // Old No.'s are stored in Comment Table (97), marked with [CommentCde].
      // Object No is stored in [XmlPortID]. In case of customisation (copy of dataport) change in OnInitDataport;
      //
      // Please use [AddConversionFileFormatLine] in case Import file format is changed.
    }
    END.
  }
}

