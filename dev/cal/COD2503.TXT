OBJECT Codeunit 2503 NavExtensionOperationMgmt
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      DotNet_ALAppOperationInvoker@1001 : Codeunit 3018;
      OperationInvokerHasBeenCreated@1000 : Boolean;

    PROCEDURE DeployNavExtension@1(AppId@1001 : GUID;Lcid@1000 : Integer);
    BEGIN
      OperationInvokerIsInitialized;
      DotNet_ALAppOperationInvoker.DeployTarget(AppId,FORMAT(Lcid));
    END;

    PROCEDURE UploadNavExtension@12(PackageStream@1001 : InStream;DotNet_ALPacDeploymentSchedule@1002 : Codeunit 3019;Lcid@1000 : Integer);
    BEGIN
      OperationInvokerIsInitialized;
      DotNet_ALAppOperationInvoker.UploadPackage(PackageStream,DotNet_ALPacDeploymentSchedule,FORMAT(Lcid));
    END;

    PROCEDURE RefreshStatus@4(OperationID@1000 : GUID);
    BEGIN
      OperationInvokerIsInitialized;
      DotNet_ALAppOperationInvoker.RefreshOperationStatus(OperationID);
    END;

    LOCAL PROCEDURE OperationInvokerIsInitialized@6();
    BEGIN
      IF NOT OperationInvokerHasBeenCreated THEN BEGIN
        DotNet_ALAppOperationInvoker.ALNavAppOperationInvoker;
        OperationInvokerHasBeenCreated := TRUE;
      END;
    END;

    PROCEDURE GetDeploymentDetailedStatusMessageAsStream@2(OperationId@1000 : GUID;OutStream@1001 : OutStream);
    BEGIN
      OperationInvokerIsInitialized;
      DotNet_ALAppOperationInvoker.GetOperationDetailedStatusMessageAsStream(OperationId,OutStream);
    END;

    PROCEDURE GetDeploymentDetailedStatusMessage@5(OperationId@1000 : GUID) : Text;
    BEGIN
      OperationInvokerIsInitialized;
      EXIT(DotNet_ALAppOperationInvoker.GetOperationDetailedStatusMessage(OperationId));
    END;

    PROCEDURE GetDeployOperationAppName@3(OperationId@1000 : GUID) : Text;
    BEGIN
      OperationInvokerIsInitialized;
      EXIT(DotNet_ALAppOperationInvoker.GetDeployOperationAppName(OperationId));
    END;

    PROCEDURE GetDeployOperationAppPublisher@8(OperationId@1000 : GUID) : Text;
    BEGIN
      OperationInvokerIsInitialized;
      EXIT(DotNet_ALAppOperationInvoker.GetDeployOperationAppPublisher(OperationId));
    END;

    PROCEDURE GetDeployOperationAppVersion@9(OperationId@1000 : GUID) : Text;
    BEGIN
      OperationInvokerIsInitialized;
      EXIT(DotNet_ALAppOperationInvoker.GetDeployOperationAppVersion(OperationId));
    END;

    PROCEDURE GetDeployOperationSchedule@11(OperationId@1000 : GUID) : Text;
    BEGIN
      OperationInvokerIsInitialized;
      EXIT(DotNet_ALAppOperationInvoker.GetDeployOperationSchedule(OperationId));
    END;

    PROCEDURE GetDeployOperationJobId@13(OperationId@1000 : GUID) : Text;
    BEGIN
      OperationInvokerIsInitialized;
      EXIT(DotNet_ALAppOperationInvoker.GetDeployOperationJobId(OperationId));
    END;

    BEGIN
    END.
  }
}

