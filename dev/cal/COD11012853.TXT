OBJECT Codeunit 11012853 Complex and Building Mgt
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'DEU=%1 Servicestandorte aktualisiert;ENU=%1 Service Locations updated;NLD=%1 Servicelocaties bijgewerkt';

    PROCEDURE GetNoOfBuildings@1100528301(ComplexCode@1100528300 : Code[20]) : Integer;
    VAR
      Building@1100528301 : Record 11071819;
    BEGIN
      IF ComplexCode = '' THEN EXIT(0);  //C026680

      Building.SETCURRENTKEY("Complex Code");
      Building.SETRANGE("Complex Code", ComplexCode);
      EXIT(Building.COUNT);
    END;

    PROCEDURE GetNoOfServiceLocations@1100528302(BuildingCode@1100528300 : Code[20]) : Integer;
    VAR
      ServiceLocation@1100528301 : Record 11012801;
    BEGIN
      IF BuildingCode = '' THEN EXIT(0);  //C026680

      ServiceLocation.SETCURRENTKEY("Building Code");
      ServiceLocation.SETRANGE("Building Code", BuildingCode);
      EXIT(ServiceLocation.COUNT);
    END;

    PROCEDURE GetNoOfServiceLocationsByComplex@1100528600(IComplexCode@1100528300 : Code[20]) : Integer;
    VAR
      ServiceLocation@1100528301 : Record 11012801;
    BEGIN
      IF IComplexCode = '' THEN EXIT(0);  //C026680

      ServiceLocation.SETCURRENTKEY("Complex Code");
      ServiceLocation.SETRANGE("Complex Code", IComplexCode);
      EXIT(ServiceLocation.COUNT);
    END;

    PROCEDURE GetNoOfServiceObjects@1100528308(BuildingCode@1100528300 : Code[20]) : Integer;
    VAR
      BuildingObjectRelation@1100528301 : Record 11071820;
    BEGIN
      IF BuildingCode = '' THEN EXIT(0);  //C026680

      BuildingObjectRelation.SETRANGE("Building Code", BuildingCode);
      EXIT(BuildingObjectRelation.COUNT);
    END;

    PROCEDURE GetNoOfComplexDocuments@1100528300(Complex@1100528300 : Record 11071816) : Integer;
    VAR
      DocumentLinkMgt@1100528303 : Codeunit 11012401;
      RecRef@1100528302 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Complex);
      EXIT(DocumentLinkMgt.GetInfo(RecRef));
    END;

    PROCEDURE GetNoOfBuildingDocuments@1100528304(Building@1100528300 : Record 11071819) : Integer;
    VAR
      DocumentLinkMgt@1100528302 : Codeunit 11012401;
      RecRef@1100528301 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Building);
      EXIT(DocumentLinkMgt.GetInfo(RecRef));
    END;

    PROCEDURE ShowBuilding@1100528303(ComplexCode@1100528300 : Code[20]);
    VAR
      Building@1100528301 : Record 11071819;
    BEGIN
      Building.SETCURRENTKEY("Complex Code");
      //Building.FILTERGROUP(9);
      Building.SETRANGE("Complex Code", ComplexCode);
      //Building.FILTERGROUP(0);
      PAGE.RUNMODAL(0, Building);
    END;

    PROCEDURE ShowServiceLocations@1100528307(BuildingCode@1100528300 : Code[20]);
    VAR
      ServiceLocation@1100528301 : Record 11012801;
    BEGIN
      ServiceLocation.SETCURRENTKEY("Building Code");
      //ServiceLocation.FILTERGROUP(9);
      ServiceLocation.SETRANGE("Building Code", BuildingCode);
      //ServiceLocation.FILTERGROUP(0);
      PAGE.RUNMODAL(0, ServiceLocation);
    END;

    PROCEDURE ShowServiceLocationsByComplex@1100528602(IComplexCode@1100528300 : Code[20]);
    VAR
      ServiceLocation@1100528301 : Record 11012801;
    BEGIN
      ServiceLocation.SETCURRENTKEY("Complex Code");
      ServiceLocation.SETRANGE("Complex Code", IComplexCode);
      PAGE.RUNMODAL(0, ServiceLocation);
    END;

    PROCEDURE ShowServiceObjects@1100528309(BuildingCode@1100528300 : Code[20]);
    VAR
      BuildingObjectRelation@1100528302 : Record 11071820;
      ServiceObject@1100528301 : Record 11071691;
    BEGIN
      BuildingObjectRelation.SETRANGE("Building Code", BuildingCode);
      IF (NOT BuildingObjectRelation.FINDFIRST) THEN
        EXIT;

      REPEAT
        IF (ServiceObject.GET(BuildingObjectRelation."Object No.")) THEN
          ServiceObject.MARK(TRUE);
      UNTIL (BuildingObjectRelation.NEXT = 0);

      ServiceObject.FILTERGROUP(9);
      ServiceObject.MARKEDONLY(TRUE);
      ServiceObject.FILTERGROUP(0);
      PAGE.RUNMODAL(0, ServiceObject);
    END;

    PROCEDURE ShowComplexDocuments@1100528305(Complex@1100528300 : Record 11071816);
    VAR
      DocumentLinkMgt@1100528301 : Codeunit 11012401;
      RecRef@1100528302 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Complex);
      DocumentLinkMgt.OpenDocumentPropertiesLookup(RecRef, '');
    END;

    PROCEDURE ShowBuildingDocuments@1100528306(Building@1100528300 : Record 11071819);
    VAR
      DocumentLinkMgt@1100528302 : Codeunit 11012401;
      RecRef@1100528301 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Building);
      DocumentLinkMgt.OpenDocumentPropertiesLookup(RecRef, '');
    END;

    PROCEDURE SyncServiceLocationsByComplex@1100528601(IComplexCode@1100528601 : Code[20]);
    VAR
      Complex@1100528602 : Record 11071816;
      ServiceLocation@1100528600 : Record 11012801;
    BEGIN
      Complex.GET(IComplexCode);
      ServiceLocation.SETCURRENTKEY("Complex Code");
      ServiceLocation.SETRANGE("Complex Code", Complex.Code);
      IF ServiceLocation.FINDSET(TRUE) THEN BEGIN
        REPEAT
          IF (ServiceLocation."Customer No." <> Complex."Customer No.") OR
             (ServiceLocation."Location Manager" <> Complex."Location Manager")
          THEN BEGIN
            //mg.sc, 12-06-2015: C023856
            ServiceLocation."Customer No." := Complex."Customer No.";
            ServiceLocation."Bill-to Customer No." := Complex."Customer No.";
            ServiceLocation.DetermineTravelCostCode;
            //mg.ec, 12-06-2015: C023856
            ServiceLocation.VALIDATE("Location Manager", Complex."Location Manager");
            ServiceLocation.MODIFY(TRUE);
          END;
        UNTIL ServiceLocation.NEXT = 0;
        MESSAGE(Text000, ServiceLocation.COUNT);
      END;
    END;

    BEGIN
    END.
  }
}

