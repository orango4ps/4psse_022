OBJECT Table 11071770 SUP Internal Budget Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Quantity (Result Obligation)" := 0;  //DP01676
               "Apply Obligation" := FALSE;  //DP01676
               InheritFromProjSetup;  //C053751
             END;

    OnRename=BEGIN
               ERROR(Text006);
             END;

    CaptionML=[ENU=SUP Internal Budget Line;
               SVE=Enhetsprisbudget, internt];
    LookupPageID=Page11125289;
    DrillDownPageID=Page11125289;
  }
  FIELDS
  {
    { 10  ;   ;Price Book Type     ;Option        ;CaptionML=[ENU=Price Book Type;
                                                              SVE=Enhetspristyp];
                                                   OptionCaptionML=[ENU=,Internal,Customer;
                                                                    NOR=,Internt,Kunde;
                                                                    SVE=,Intern,Kund];
                                                   OptionString=,Internal,Customer;
                                                   NotBlank=Yes }
    { 20  ;   ;Price Book Code     ;Code20        ;TableRelation="Service Price Book".Code;
                                                   OnValidate=VAR
                                                                ServicePriceBook@1100528600 : Record 11071768;
                                                              BEGIN
                                                                IF "Price Book Code" <> '' THEN
                                                                  IF ServicePriceBook.GET("Price Book Code", "Index Date") THEN
                                                                    "Price Book Type" := ServicePriceBook.Type;
                                                              END;

                                                   OnLookup=VAR
                                                              ServicePriceBook@1100528600 : Record 11071768;
                                                              ServicePriceBookList@1100528601 : Page 11125269;
                                                            BEGIN
                                                              ServicePriceBookList.LOOKUPMODE(TRUE);
                                                              ServicePriceBookList.SETTABLEVIEW(ServicePriceBook);
                                                              IF ServicePriceBookList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                ServicePriceBookList.GETRECORD(ServicePriceBook);
                                                                "Price Book Code" := ServicePriceBook.Code;
                                                                "Index Date" := ServicePriceBook."Index Date";
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Price Book Code;
                                                              SVE=Enhetspriskod];
                                                   NotBlank=Yes }
    { 30  ;   ;Index Date          ;Date          ;OnValidate=BEGIN
                                                                CASE "Cost Type" OF
                                                                  "Cost Type"::Labor:
                                                                    VALIDATE("Rate Code");
                                                                  "Cost Type"::Material:
                                                                    BEGIN
                                                                      IF "Trade Item" <> '' THEN
                                                                        UpdateItemPrice(ItemTypeOpt::"Trade Item")
                                                                      ELSE
                                                                        IF "Basic Item" <> '' THEN
                                                                          UpdateItemPrice(ItemTypeOpt::"Basic Item")
                                                                        ELSE
                                                                          IF "Item No." <> '' THEN
                                                                            UpdateItemPrice(ItemTypeOpt::Item);
                                                                    END;
                                                                END;

                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Index Date;
                                                              NOR=Indeksdato;
                                                              SVE=Indexdatum];
                                                   NotBlank=Yes }
    { 40  ;   ;Unit Price Code     ;Code20        ;TableRelation="Service Unit Price".Code WHERE (Price Book Type=FIELD(Price Book Type),
                                                                                                  Price Book Code=FIELD(Price Book Code),
                                                                                                  Index Date=FIELD(Index Date));
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Unit Price Code;
                                                              NOR=Enhetspriskode;
                                                              SVE=Enhetspriskod];
                                                   NotBlank=Yes }
    { 50  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr];
                                                   Editable=No }
    { 60  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 70  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 80  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Unit of Measure") THEN BEGIN
                                                                  IF ("Cost Type" = "Cost Type"::Material) THEN
                                                                    IF "Unit of Measure" <>  xRec."Unit of Measure" THEN
                                                                      CheckItemUnitConversion(Rec, xRec);
                                                                  CalcTotals;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=M†leenhet;
                                                              SVE=Enhet] }
    { 90  ;   ;Norm                ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Cost Type" = "Cost Type"::Labor) OR ("Cost Type" = "Cost Type"::Subcontracting) OR ("Cost Type" = "Cost Type"::Plant) THEN  //DP01676
                                                                  CalcTotals
                                                                ELSE BEGIN
                                                                  MESSAGE(Text002, FIELDCAPTION("Cost Type"), "Cost Type", FIELDCAPTION(Norm));
                                                                  Norm := 0;
                                                                END;

                                                                IF CurrFieldNo <> FIELDNO("Production Rate") THEN BEGIN
                                                                  IF "Apply Obligation" THEN BEGIN  //DP01676
                                                                    IF "Production Rate" <> 0 THEN
                                                                      Norm := 1
                                                                    ELSE
                                                                      Norm := 0;
                                                                  END ELSE BEGIN
                                                                    IF Norm <> 0 THEN
                                                                      "Production Rate" := 1 / Norm
                                                                    ELSE
                                                                      "Production Rate" := 0;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Norm;
                                                              NOR=Norm;
                                                              SVE=Norm];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 100 ;   ;Rate Code           ;Code10        ;TableRelation="Budget Rate";
                                                   OnValidate=VAR
                                                                BudgetRate@1100485003 : Record 11012000;
                                                                lvDate@1100528600 : Date;
                                                              BEGIN
                                                                IF ("Cost Type" = "Cost Type"::Labor) OR ("Cost Type" = "Cost Type"::Subcontracting) THEN BEGIN
                                                                  IF "Index Date" = 0D THEN
                                                                    lvDate := TODAY
                                                                  ELSE
                                                                    lvDate := "Index Date";
                                                                  Rate := 0;
                                                                  BudgetRate.SETRANGE(Code,"Rate Code");
                                                                  BudgetRate.SETRANGE("Starting Date", 0D, lvDate);
                                                                  IF BudgetRate.FINDLAST THEN
                                                                    Rate := BudgetRate.Rate;
                                                                  IF ("Cost Type" = "Cost Type"::Subcontracting) THEN BEGIN
                                                                    "Cost Price" := Norm * Rate;
                                                                    Rate := 0;
                                                                  END;
                                                                  CalcTotals;
                                                                END ELSE BEGIN
                                                                  MESSAGE(Text002, FIELDCAPTION("Cost Type"), "Cost Type", FIELDCAPTION("Rate Code"));
                                                                  "Rate Code" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Rate Code;
                                                              NOR=Avgiftskode;
                                                              SVE=Avgiftskod] }
    { 110 ;   ;Rate                ;Decimal       ;OnValidate=BEGIN
                                                                //kzwerver, 140212, c, #C011301
                                                                IF ("Cost Type" = "Cost Type"::Labor) OR ("Cost Type" = "Cost Type"::Subcontracting) THEN BEGIN
                                                                  CalcTotals;
                                                                END ELSE BEGIN
                                                                  MESSAGE(Text002, FIELDCAPTION("Cost Type"), "Cost Type", FIELDCAPTION(Rate));
                                                                  Rate := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Rate;
                                                              NOR=Avgift;
                                                              SVE=Avgift];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 120 ;   ;Cost Price          ;Decimal       ;OnValidate=BEGIN
                                                                IF ("Cost Type" = "Cost Type"::Labor) THEN BEGIN
                                                                  MESSAGE(Text002, FIELDCAPTION("Cost Type"), "Cost Type", FIELDCAPTION("Cost Price"));
                                                                  "Cost Price" := 0;
                                                                END ELSE BEGIN
                                                                  CalcDiscount;
                                                                  CalcTotals;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              NOR=Pris;
                                                              SVE=Pris];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 130 ;   ;Gross Price         ;Decimal       ;OnValidate=BEGIN
                                                                CalculateNetPrice;
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Gross Price;
                                                              NOR=Bruttopris;
                                                              SVE=Bruttopris];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 140 ;   ;Purchase Discount % ;Decimal       ;OnValidate=BEGIN
                                                                CalculateNetPrice;
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Purchase Discount %;
                                                              NOR=Innkj›psrabattprosent;
                                                              SVE=Ink”psrabattprocent];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 150 ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 160 ;   ;Hours               ;Decimal       ;CaptionML=[ENU=Hours;
                                                              NOR="Timer ";
                                                              SVE=Timmar];
                                                   Editable=No }
    { 170 ;   ;Cost Type           ;Option        ;OnValidate=BEGIN
                                                                IF "Cost Object" <> '' THEN BEGIN
                                                                  IF "Cost Type" <> xRec."Cost Type" THEN
                                                                    IF CONFIRM(Text004,TRUE) THEN BEGIN
                                                                      "Cost Object" := '';
                                                                      "Item No." := '';
                                                                      "Basic Item" := '';
                                                                      "Trade Item" := '';
                                                                      Manufacturer := '';
                                                                      "Vendor (Trade Item)" := '';
                                                                    END ELSE BEGIN
                                                                      "Cost Type" := xRec."Cost Type";
                                                                      EXIT;
                                                                    END;
                                                                END;
                                                                IF ("Cost Type" = "Cost Type"::Labor) THEN BEGIN
                                                                  "Cost Price" := 0;
                                                                END ELSE BEGIN
                                                                  "Rate Code" := '';
                                                                  Rate := 0;
                                                                  IF ("Plant Rates in Hours" = FALSE) AND ("Subcontracting in Hours" = FALSE) THEN  //C053751
                                                                    InitNormRelatedFields(0);
                                                                END;
                                                                IF ("Cost Type" <> "Cost Type"::Plant) THEN
                                                                  "Plant Rates in Hours" := FALSE;  //DP02115
                                                                IF ("Cost Type" <> "Cost Type"::Subcontracting) THEN
                                                                  "Subcontracting in Hours" := FALSE;  //SCH
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Cost Type;
                                                              NOR=Kosttype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=Labor,Material,Subcontracting,Plant,Sundry;
                                                                    NOR=Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse;
                                                                    SVE=Arbetskraft,Material,Underentreprenad,Maskin,Diverse];
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry }
    { 180 ;   ;Cost Object         ;Code20        ;TableRelation=IF (Cost Type=CONST(Labor)) "Dimension Value".Code WHERE (Cost Type=FILTER(Labor),
                                                                                                                           Global Dimension No.=CONST(2))
                                                                                                                           ELSE IF (Cost Type=CONST(Material)) "Dimension Value".Code WHERE (Cost Type=FILTER(Material),
                                                                                                                                                                                             Global Dimension No.=CONST(2))
                                                                                                                                                                                             ELSE IF (Cost Type=CONST(Plant)) "Dimension Value".Code WHERE (Cost Type=FILTER(Plant),
                                                                                                                                                                                                                                                            Global Dimension No.=CONST(2))
                                                                                                                                                                                                                                                            ELSE IF (Cost Type=CONST(Subcontracting)) "Dimension Value".Code WHERE (Cost Type=FILTER(Subcontracting),
                                                                                                                                                                                                                                                                                                                                    Global Dimension No.=CONST(2))
                                                                                                                                                                                                                                                                                                                                    ELSE IF (Cost Type=CONST(Sundry)) "Dimension Value".Code WHERE (Cost Type=FILTER(Sundry),
                                                                                                                                                                                                                                                                                                                                                                                                    Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                IF ("Cost Object" <> '') AND ("Item No." + "Trade Item" + "Basic Item" = '') THEN
                                                                  IF xRec."Cost Object" = '' THEN
                                                                    GetDefaultsCostObject()
                                                                  ELSE
                                                                    IF "Cost Object" <> xRec."Cost Object" THEN
                                                                      IF CONFIRM(
                                                                        Text000 +
                                                                        Text001)
                                                                      THEN
                                                                        GetDefaultsCostObject();
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 190 ;   ;Cost Component      ;Code20        ;TableRelation="Cost Component".Code;
                                                   CaptionML=[ENU=Cost Component;
                                                              NOR=Kostnadskomponent;
                                                              SVE=Kostnadsdel] }
    { 200 ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF ("Item No." <> xRec."Item No.") AND ("Item No." <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::Item);
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Artikkelnr;
                                                              SVE=Artikelnr] }
    { 210 ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   OnValidate=BEGIN
                                                                IF ("Basic Item" <> xRec."Basic Item") AND ("Basic Item" <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::"Basic Item");
                                                              END;

                                                   CaptionML=[ENU=Basic Item;
                                                              NOR=Fabrikantartikkel;
                                                              SVE=Basartikel] }
    { 220 ;   ;Trade Item          ;Code20        ;TableRelation="Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"));
                                                   OnValidate=BEGIN
                                                                IF ("Trade Item" <> xRec."Trade Item") AND ("Trade Item" <> '') THEN
                                                                  ValidateItem(ItemTypeOpt::"Trade Item");
                                                              END;

                                                   CaptionML=[ENU=Trade Item;
                                                              NOR=Katalogartikkel;
                                                              SVE=Anskaffningsartikel] }
    { 230 ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   OnValidate=VAR
                                                                TradeItemRec@1100525000 : Record 11012317;
                                                                lvExecValidate@1100485000 : Boolean;
                                                              BEGIN
                                                                IF ("Vendor (Trade Item)" <> xRec."Vendor (Trade Item)") AND ("Vendor (Trade Item)" <> '') THEN BEGIN
                                                                  IF "Basic Item" <> '' THEN BEGIN
                                                                    "Trade Item" := '';
                                                                    lvExecValidate := TRUE;
                                                                  END;
                                                                  IF "Trade Item" <> '' THEN BEGIN
                                                                    VALIDATE("Trade Item");
                                                                    lvExecValidate := TRUE;
                                                                  END;
                                                                  IF lvExecValidate THEN BEGIN
                                                                    IF TradeItemRec.CheckReplaceVendor(
                                                                      xRec."Vendor (Trade Item)", xRec."Trade Item",
                                                                      "Vendor (Trade Item)", "Trade Item") THEN
                                                                      ValidateItem(ItemTypeOpt::"Trade Item")
                                                                    ELSE
                                                                      ValidateItem(ItemTypeOpt::"Trade Vendor");
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Vendor (Trade Item);
                                                              NOR=Leverand›r (katalogartikkel);
                                                              SVE=Leverant”r (skaffningsartikel)] }
    { 240 ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=[ENU=Manufacturer;
                                                              NOR=Produsent;
                                                              SVE=Tillverkare] }
    { 250 ;   ;Labor               ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Amount WHERE (Cost Type=CONST(Labor),
                                                                                                            Price Book Code=FIELD(Price Book Code),
                                                                                                            Index Date=FIELD(Index Date),
                                                                                                            Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=[ENU=Labor;
                                                              NOR=Arbeidskraft;
                                                              SVE=Arbete];
                                                   Editable=No }
    { 260 ;   ;Material            ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Amount WHERE (Cost Type=CONST(Material),
                                                                                                            Price Book Code=FIELD(Price Book Code),
                                                                                                            Index Date=FIELD(Index Date),
                                                                                                            Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=[ENU=Material;
                                                              NOR=Materialee;
                                                              SVE=Material];
                                                   Editable=No }
    { 270 ;   ;Subcontracting      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Amount WHERE (Cost Type=CONST(Subcontracting),
                                                                                                            Price Book Code=FIELD(Price Book Code),
                                                                                                            Index Date=FIELD(Index Date),
                                                                                                            Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=[ENU=Subcontracting;
                                                              NOR=Underentrepen›r;
                                                              SVE=Underentreprenad];
                                                   Editable=No }
    { 280 ;   ;Plant               ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Amount WHERE (Cost Type=CONST(Plant),
                                                                                                            Price Book Code=FIELD(Price Book Code),
                                                                                                            Index Date=FIELD(Index Date),
                                                                                                            Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=[ENU=Plant;
                                                              NOR=Maskin;
                                                              SVE=Maskin];
                                                   Editable=No }
    { 290 ;   ;Sundry              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Amount WHERE (Cost Type=CONST(Sundry),
                                                                                                            Price Book Code=FIELD(Price Book Code),
                                                                                                            Index Date=FIELD(Index Date),
                                                                                                            Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=[ENU=Sundry;
                                                              NOR=Diverse;
                                                              SVE=Diverse];
                                                   Editable=No }
    { 300 ;   ;Total               ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Amount WHERE (Price Book Code=FIELD(Price Book Code),
                                                                                                            Index Date=FIELD(Index Date),
                                                                                                            Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=[ENU=Total;
                                                              NOR=Totalt;
                                                              SVE=Totalt];
                                                   Editable=No }
    { 310 ;   ;Total Hours         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Hours WHERE (Cost Type=CONST(Labor),
                                                                                                           Price Book Code=FIELD(Price Book Code),
                                                                                                           Index Date=FIELD(Index Date),
                                                                                                           Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=[ENU=Total Hours;
                                                              NOR=Timer totalt;
                                                              SVE=Totalt timmar];
                                                   Editable=No }
    { 311 ;   ;Total Hours Plant   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("SUP Internal Budget Line".Hours WHERE (Cost Type=CONST(Plant),
                                                                                                           Price Book Code=FIELD(Price Book Code),
                                                                                                           Index Date=FIELD(Index Date),
                                                                                                           Unit Price Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Total Hours Plant;
                                                   Editable=No }
    { 320 ;   ;VAT Prod. Posting Group;Code20     ;TableRelation="VAT Product Posting Group".Code;
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              NOR=Mva-bokf›ringsgruppe - vare;
                                                              SVE=Moms produktbokf”ringsmall] }
    { 330 ;   ;Subcontracting Activity;Code10     ;TableRelation="Subcontracting Activity".Code;
                                                   OnValidate=BEGIN
                                                                GetSubcontractorActivity(FIELDNO("Subcontracting Activity"));
                                                              END;

                                                   CaptionML=ENU=Subcontracting Activity }
    { 335 ;   ;Subcontracting in Hours;Boolean    ;OnValidate=BEGIN
                                                                IF "Cost Type" = "Cost Type"::Subcontracting THEN BEGIN
                                                                  IF NOT "Subcontracting in Hours" THEN BEGIN
                                                                    Quantity := Hours;
                                                                    InitNormRelatedFields(0);
                                                                  END ELSE BEGIN
                                                                    InitNormRelatedFields(1);
                                                                  END;
                                                                END;
                                                                CalcTotals;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Subcontracting in Hours }
    { 340 ;   ;Subcontractor       ;Code20        ;TableRelation=IF (Subcontracting Activity=FILTER(=''),
                                                                     Cost Type=CONST(Material)) Vendor.No. WHERE (Subcontractor Type=CONST(" "))
                                                                     ELSE IF (Subcontracting Activity=FILTER(=''),
                                                                              Cost Type=CONST(Subcontracting)) Vendor.No. WHERE (Subcontractor Type=FILTER(Subcontractor|Self Employed|Employment Agency))
                                                                              ELSE IF (Subcontracting Activity=FILTER(<>'')) "Subcontracting Activity Price"."Subcontractor No." WHERE (Subcontracting Activity=FIELD(Subcontracting Activity));
                                                   OnValidate=BEGIN
                                                                GetSubcontractorActivity(FIELDNO(Subcontractor));
                                                              END;

                                                   CaptionML=[ENU=Subcontractor;
                                                              NOR=Underentrepren›r;
                                                              SVE=Underentrepren”r] }
    { 345 ;   ;Subcontractor Name  ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Subcontractor)));
                                                   CaptionML=[ENU=Subcontractor Name;
                                                              NOR=Underentrepren›rens navn;
                                                              SVE=Underentrepren”rens namn];
                                                   Editable=No }
    { 350 ;   ;Plant Company       ;Text30        ;TableRelation="Plant Management Company"."Plant Company";
                                                   OnValidate=BEGIN
                                                                IF "Plant Company" = COMPANYNAME THEN
                                                                  "Plant Company" := '';
                                                                IF "Plant Company" <> '' THEN
                                                                  TESTFIELD("Cost Type", "Cost Type"::Plant);
                                                                IF "Plant Company" <> xRec."Plant Company" THEN
                                                                  "Plant Type" := '';
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupPlantCompany;
                                                            END;

                                                   CaptionML=[ENU=Plant Company;
                                                              NOR=Maskinselskap;
                                                              SVE=Maskinf”retag] }
    { 360 ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   OnValidate=VAR
                                                                PlantType@1100528600 : Record 11012551;
                                                              BEGIN
                                                                IF "Plant Type" <> '' THEN BEGIN
                                                                  TESTFIELD("Cost Type", "Cost Type"::Plant);
                                                                  IF ("Plant Company" <> '') AND ("Plant Company" <> COMPANYNAME) THEN
                                                                    PlantType.CHANGECOMPANY("Plant Company");
                                                                  //**4PS.sn DPA Plant
                                                                  PlantType.Code := "Plant Type";
                                                                  PlantType.DPA_FindRecWithDPAFilterAppld;
                                                                  //**4PS.en DPA Plant
                                                                  IF ("Plant Type" <> xRec."Plant Type") OR (Description = '') THEN BEGIN
                                                                    PlantType.GET("Plant Type");
                                                                    Description := PlantType.Description;
                                                                    "Unit of Measure" := PlantType."Unit of Measure";
                                                                    "Cost Object" := PlantType."Cost Object";
                                                                  END;
                                                                  DeterminePlantPrice;  //DP02115
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp] }
    { 361 ;   ;Plant Price Type    ;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Plant Price Type;
                                                              SVE=Maskin pristyp];
                                                   OptionCaptionML=[ENU=" ,Day,Week,,Month,,,,,Hour";
                                                                    SVE=" ,Dag,Vecka,,M†nad,,,,,Timme"];
                                                   OptionString=[ ,Day,Week,,Month,,,,,Hour];
                                                   Editable=No }
    { 365 ;   ;Plant Rates in Hours;Boolean       ;OnValidate=BEGIN
                                                                IF "Cost Type" = "Cost Type"::Plant THEN BEGIN
                                                                  IF NOT "Plant Rates in Hours" THEN BEGIN
                                                                    Quantity := Hours;
                                                                    InitNormRelatedFields(0);
                                                                  END ELSE BEGIN
                                                                    InitNormRelatedFields(1);
                                                                  END;
                                                                END;
                                                                DeterminePlantPrice;
                                                                CalcTotals;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Plant Rates in Hours;
                                                              SVE=Maskinavgifter i timmar] }
    { 370 ;   ;Unit Price Description;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Unit Price".Description WHERE (Price Book Code=FIELD(Price Book Code),
                                                                                                              Index Date=FIELD(Index Date),
                                                                                                              Code=FIELD(Unit Price Code)));
                                                   CaptionML=[ENU=Unit Price Description;
                                                              SVE=Beskrivning av enhetspris];
                                                   Editable=No }
    { 380 ;   ;Unit Price Description 2;Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Unit Price"."Description 2" WHERE (Price Book Code=FIELD(Price Book Code),
                                                                                                                  Index Date=FIELD(Index Date),
                                                                                                                  Code=FIELD(Unit Price Code)));
                                                   CaptionML=[ENU=Unit Price Description 2;
                                                              SVE=Beskrivning 2 av enhetspris];
                                                   Editable=No }
    { 390 ;   ;Unit Price Description 3;Text50    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Service Unit Price"."Description 3" WHERE (Price Book Code=FIELD(Price Book Code),
                                                                                                                  Index Date=FIELD(Index Date),
                                                                                                                  Code=FIELD(Unit Price Code)));
                                                   CaptionML=ENU=Unit Price Description 3;
                                                   Editable=No }
    { 420 ;   ;Production Rate     ;Decimal       ;OnValidate=BEGIN
                                                                IF "Apply Obligation" THEN BEGIN
                                                                  IF "Production Rate" <> 0 THEN BEGIN
                                                                    Norm := 1;
                                                                    VALIDATE(Quantity, "Quantity (Result Obligation)" / "Production Rate")
                                                                  END ELSE BEGIN
                                                                    Norm := 0;
                                                                    VALIDATE(Quantity, 0);
                                                                  END;
                                                                END ELSE BEGIN
                                                                  IF "Production Rate" <> 0 THEN
                                                                    VALIDATE(Norm, 1 / "Production Rate")
                                                                  ELSE
                                                                    VALIDATE(Norm, 0);
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Production Rate;
                                                              SVE=Produktionstakt];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 425 ;   ;Quantity (Result Obligation);Decimal;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Quantity  (Result Obligation);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 426 ;   ;Apply Obligation    ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Apply Obligation;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Price Book Code,Index Date,Unit Price Code,Line No.;
                                                   SumIndexFields=Amount;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Cost Type                               ;SumIndexFields=Amount,Hours }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ItemTypeOpt@1100528600 : 'Item,Basic Item,Trade Item,Trade Vendor';
      Text000@1100528606 : TextConst 'ENU=Copy Data from new Cost Object?\\;NOR=Kopier data fra nytt Kostnadsobjekt?\\;SVE=Kopiera data fr†n nytt kostnadsobjekt?\\';
      Text001@1100528605 : TextConst 'ENU=Empty fields only will be updated. Existing data will not be overruled.;NOR=Kun tomme felt vil oppdateres. Eksisterende data vil ikke bli overstyrt.;SVE=Endast tomma f„lt kommer att uppdateras. Befintliga data kommer inte att †sidos„ttas.';
      Text002@1100528604 : TextConst 'ENU=%1 of Line is %2, input of %3 not allowed;NOR=%1 for rad er %2, innmating av %3 er ikke tillatt;SVE=%1 av rad „r %2, indata av %3 „r inte till†tet';
      Text004@1100528602 : TextConst 'ENU=Change Cost Type ?;NOR=Endre kostnadstype?;SVE=Žndra kostnadstyp?';
      Text006@1100528607 : TextConst 'ENU=Rename is not allowed.;NOR=Gi nytt navn ikke tillatt;SVE=Att ge nytt namn „r inte till†tet.';

    PROCEDURE ValidateItem@31(LTypeArtOpt@11012000 : 'Item,Basic Item,Trade Item');
    VAR
      DummyDat@11012001 : Date;
      lvRefDate@1100485003 : Date;
      lvDiscRef1@1100485002 : Code[20];
      lvDiscRef2@1100485001 : Code[20];
      Description2@1100528600 : Text[50];
      ValidateCu@1100528601 : Codeunit 11012033;
    BEGIN
      ValidateCu.ValidateItem(
        LTypeArtOpt,"Trade Item","Item No.",Manufacturer,"Vendor (Trade Item)",
        "Basic Item","Cost Object",Description,"Unit of Measure","Cost Price",
        "Purchase Discount %",DummyDat,"Gross Price",Description2,"Cost Component",
        lvDiscRef1, lvDiscRef2, lvRefDate, '');

      VALIDATE("Cost Component");
    END;

    PROCEDURE UnitPriceLineLookup@1100528602();
    VAR
      ServiceUnitPrice@1100528600 : Record 11071769;
    BEGIN
      IF "Price Book Code" <> '' THEN
        ServiceUnitPrice.SETRANGE("Price Book Code", "Price Book Code");
      IF "Index Date" <> 0D THEN
        ServiceUnitPrice.SETRANGE("Index Date", "Index Date");
      PAGE.RUNMODAL(0, ServiceUnitPrice);
    END;

    PROCEDURE CalcTotals@1();
    BEGIN
      CASE "Cost Type" OF
        "Cost Type"::Labor:
          BEGIN
            Hours := ROUND(Quantity * Norm);
            IF Rate = 0 THEN
              Amount := ROUND(Quantity * "Cost Price")
            ELSE
              Amount := ROUND(Quantity * Norm * Rate);
          END;
        "Cost Type"::Subcontracting,
        "Cost Type"::Plant:
          BEGIN
            CASE Norm = 0 OF
              TRUE:
                BEGIN
                  Hours := 0;
                  Amount := ROUND(Quantity * "Cost Price");
                END;
              FALSE: // GWW
                BEGIN
                  Hours := ROUND(Quantity * Norm);
                  Amount := ROUND(Quantity * Norm * "Cost Price");
                END;
            END;
          END;
        ELSE
          BEGIN
            Hours := 0;
            Amount := ROUND(Quantity * "Cost Price");
          END;
      END;

      CALCFIELDS(Labor, Material, Subcontracting, Plant, Sundry, Total, "Total Hours");
    END;

    PROCEDURE CalcDiscount@1100485004();
    BEGIN
      IF "Gross Price" <> 0 THEN BEGIN
        "Purchase Discount %" := (("Gross Price" - "Cost Price") / "Gross Price") * 100;
      END;
    END;

    PROCEDURE GetDefaultsCostObject@3();
    VAR
      DimValRec@1100525000 : Record 349;
      DimMgt@1100525001 : Codeunit 408;
    BEGIN
      DimMgt.GetDimValueRec(2, "Cost Object", DimValRec, TRUE,'');

      IF Description = '' THEN
        Description := DimValRec.Name;
      IF "Unit of Measure" = '' THEN
        "Unit of Measure" := DimValRec."Unit of Measure";
      IF "Cost Component" = '' THEN
        "Cost Component" := DimValRec."Cost Component";

      "Cost Type" := DimValRec."Cost Type";
      CASE "Cost Type" OF
        "Cost Type"::Labor:
          BEGIN
            IF Norm = 0 THEN
              Norm := DimValRec.Norm;
            IF ("Rate Code" = '') AND (Rate = 0) THEN
              VALIDATE("Rate Code", DimValRec."Rate Code");
          END;
        ELSE
          IF "Cost Price" = 0 THEN
            "Cost Price" := DimValRec.Price;
      END;
      CalcTotals;
    END;

    PROCEDURE CheckItemUnitConversion@1210190010(VAR MainNewRec@1210190006 : Record 11071770;MainOldRec@1210190007 : Record 11071770);
    VAR
      ItemRec@1210190004 : Record 27;
      UnitFactor@1210190005 : Decimal;
      UnitFactorOld@1210190003 : Decimal;
      UnitFactorNew@1210190002 : Decimal;
      UnitControl@1210190001 : Codeunit 5402;
      ValidateCu@1100528600 : Codeunit 11012033;
    BEGIN
      WITH MainNewRec DO BEGIN
        UnitFactorOld := 1;
        UnitFactorNew := 1;
        IF "Trade Item" <> '' THEN BEGIN
          ValidateCu.ValidateUnit(ItemTypeOpt::"Trade Item",
            "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
            Quantity,"Unit of Measure",UnitFactorNew);
        END ELSE BEGIN
          IF "Basic Item" <> '' THEN BEGIN
            ValidateCu.ValidateUnit(ItemTypeOpt::"Basic Item",
              "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
              Quantity,"Unit of Measure",UnitFactorNew);
          END ELSE BEGIN  //db, 07-04-08: M10070
            IF "Item No." <> '' THEN BEGIN
              ItemRec.GET("Item No.");
              UnitFactorOld := UnitControl.GetQtyPerUnitOfMeasure(ItemRec, MainOldRec."Unit of Measure");
              UnitFactorNew := UnitControl.GetQtyPerUnitOfMeasure(ItemRec, "Unit of Measure");
              UnitFactor := UnitFactorOld;
              ValidateCu.ValidateUnit(ItemTypeOpt::Item,
                "Item No.","Basic Item","Trade Item",Manufacturer,"Vendor (Trade Item)",
                Quantity,"Unit of Measure",UnitFactor);
            END;
          END;
        END;
        IF (UnitFactorNew * UnitFactorOld) <> 0 THEN BEGIN
          IF "Gross Price" <> 0 THEN
            VALIDATE("Gross Price", ("Gross Price" * UnitFactorNew / UnitFactorOld))
          ELSE
            VALIDATE("Cost Price", ("Cost Price" * UnitFactorNew / UnitFactorOld));
        END;
      END;
    END;

    PROCEDURE CalculateNetPrice@1210190005();
    BEGIN
      IF "Gross Price" <> 0 THEN BEGIN
        "Cost Price" := "Gross Price" - (("Gross Price"/100) * "Purchase Discount %");
      END;
    END;

    PROCEDURE CalculateGrossPrice@1100485007();
    BEGIN
      IF "Purchase Discount %" <> 100 THEN
        "Gross Price" := "Cost Price" * 100 / (100 - "Purchase Discount %");
    END;

    PROCEDURE UpdateItemPrice@1100525006(LTypeArtOpt@1100525000 : 'Item,Basic Item,Trade Item');
    VAR
      ValidateItems@1100528600 : Codeunit 11012033;
      DummyDat@1100525003 : Date;
      Desc1Txt@1100525002 : Text[50];
      Desc2Txt@1100525001 : Text[50];
      lvDiscRef1@1100525005 : Code[20];
      lvDiscRef2@1100525004 : Code[20];
    BEGIN
      //db, 12-10-10
      ValidateItems.ValidateItem(
        LTypeArtOpt,"Trade Item","Item No.",Manufacturer,"Vendor (Trade Item)",
        "Basic Item","Cost Object",Desc1Txt,"Unit of Measure","Cost Price",
        "Purchase Discount %",DummyDat,"Gross Price",Desc2Txt,"Cost Component",
        lvDiscRef1,lvDiscRef2,"Index Date",'');
    END;

    LOCAL PROCEDURE GetSubcontractorActivity@1100529900(CalledBy@1100528900 : Integer);
    VAR
      SubcontractingActivityPrice@1100529900 : Record 11229373;
    BEGIN
      TESTFIELD("Cost Type", "Cost Type"::Subcontracting);
      SubcontractingActivityPrice.SETRANGE("Subcontracting Activity", "Subcontracting Activity");
      IF CalledBy = FIELDNO("Subcontracting Activity") THEN  //DP01958a
        SubcontractingActivityPrice.SETRANGE("Preferred Subcontractor", TRUE)
      ELSE
        SubcontractingActivityPrice.SETRANGE("Subcontractor No.", Subcontractor);
      IF SubcontractingActivityPrice.FINDFIRST THEN BEGIN
        VALIDATE("Cost Price", SubcontractingActivityPrice.GetPrice("Index Date"));  //DP01958a
        IF CalledBy = FIELDNO("Subcontracting Activity") THEN BEGIN  //DP01958a
          SubcontractingActivityPrice.CALCFIELDS("Activity Description");
          Description := SubcontractingActivityPrice."Activity Description";
        END;
        "Unit of Measure" := SubcontractingActivityPrice."Unit of Measure";
        "Cost Object" := SubcontractingActivityPrice."Cost Object";
        Subcontractor := SubcontractingActivityPrice."Subcontractor No.";
      END;
      IF "Subcontracting in Hours" THEN BEGIN
        "Rate Code" := '';
        InitRateRelatedFields;
      END;
    END;

    LOCAL PROCEDURE LookupPlantCompany@1100529603();
    VAR
      PlantMgtCompany@1100529600 : Record 11020586;
      TmpPlantMgtCompany@1100529601 : TEMPORARY Record 11020586;
      NoOfPlantCompanies@1100528600 : Integer;
    BEGIN
      IF "Cost Type" <> "Cost Type"::Plant THEN
        EXIT;

      PlantMgtCompany.GetPlantCompany(TRUE, NoOfPlantCompanies, '');

      IF NoOfPlantCompanies = 0 THEN BEGIN
        PlantMgtCompany."Plant Company" := "Plant Company";
        IF PlantMgtCompany."Plant Company" = '' THEN
          PlantMgtCompany."Plant Company" := COMPANYNAME;
        PAGE.RUNMODAL(0, PlantMgtCompany);
      END ELSE BEGIN
        TmpPlantMgtCompany."Plant Company" := "Plant Company";
        IF TmpPlantMgtCompany."Plant Company" = '' THEN
          TmpPlantMgtCompany."Plant Company" := COMPANYNAME;
        IF PAGE.RUNMODAL(0, TmpPlantMgtCompany) = ACTION::LookupOK THEN
          IF TmpPlantMgtCompany."Plant Company" <> "Plant Company" THEN
            VALIDATE("Plant Company", TmpPlantMgtCompany."Plant Company");
      END;
    END;

    LOCAL PROCEDURE LookupPlantType@1100529605();
    VAR
      PlantType@1100529600 : Record 11012551;
    BEGIN
      IF "Cost Type" <> "Cost Type"::Plant THEN
        EXIT;

      IF ("Plant Company" <> '') AND ("Plant Company" <> COMPANYNAME) THEN
        PlantType.CHANGECOMPANY("Plant Company");
      PlantType.Code := "Plant Type";
      IF PAGE.RUNMODAL(0, PlantType) = ACTION::LookupOK THEN
        IF PlantType.Code <> "Plant Type" THEN
          VALIDATE("Plant Type", PlantType.Code);
    END;

    PROCEDURE DeterminePlantPrice@1100485011();
    VAR
      SearchRateCu@1100485000 : Codeunit 11012567;
      RefDate@1100485001 : Date;
      RentalType@1100525007 : 'Rental,Sales,,PlantHours';
      DummyPlantPriceType@1100525006 : Option;
      DummyRentalType@1100525005 : Option;
      PlantDiscount@1100525004 : Decimal;
      SalesPrice@1100525003 : Decimal;
      BuyBackPrice@1100525002 : Decimal;
      PlantTypeRec@1100525001 : Record 11012551;
    BEGIN
      IF ("Plant Type" = '') THEN
        EXIT;

      "Gross Price" := 0;
      "Purchase Discount %" := 0;

      IF "Index Date" <> 0D THEN
        RefDate := "Index Date"
      ELSE
        RefDate := TODAY;

      RentalType := -1;  //0=rental, 1=sales, 2=buy-back, 3= hours
      IF "Plant Company" <> '' THEN
        PlantTypeRec.CHANGECOMPANY("Plant Company");
      PlantTypeRec.GET("Plant Type");
      IF "Plant Rates in Hours" THEN BEGIN
        "Rate Code" := '';
        InitRateRelatedFields;
        IF (PlantTypeRec."Rental Type" <> PlantTypeRec."Rental Type"::"Sales/Buy Back") THEN
          RentalType := 3;
      END;

      VALIDATE("Cost Price", SearchRateCu.CostRateFromEstimate("Plant Type",'','',RefDate,"Plant Company",RentalType,"Plant Price Type"));
      VALIDATE("Gross Price","Cost Price");
    END;

    PROCEDURE InitRateRelatedFields@1100525033();
    BEGIN
      Rate := 0;
      //"Wage Component" := '';
    END;

    PROCEDURE InitNormRelatedFields@1100525032(iValue@1100528900 : Decimal);
    BEGIN
      Norm := iValue;
      "Production Rate" := iValue;
    END;

    LOCAL PROCEDURE InheritFromProjSetup@1100528900();
    VAR
      ProjSetup@1100528900 : Record 315;
    BEGIN
      ProjSetup. GET;
      "Subcontracting in Hours" := ProjSetup."Subcontracting in Hours";
      "Plant Rates in Hours" := ProjSetup."Plant Rates in Hours";
    END;

    BEGIN
    END.
  }
}

