OBJECT Report 11125616 Calc. Prod. Forecast per Item
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Berechnen Prognosen nach Artikel;
               ENU=Calc. Prod. Forecast per Item;
               NLD=Bereken prognoses per artikel;
               NOR=Beregning av produksjonsprognose per artikkel;
               SVE=Ber„kn. av prod.prognos per artikel];
    ProcessingOnly=Yes;
    OnPostReport=BEGIN
                   IF ToProdForecastEntry."Entry No." <> LastEntryNo THEN
                     MESSAGE(CreatedMessage)
                   ELSE
                     MESSAGE(NotCreatedMessage);
                 END;

  }
  DATASET
  {
    { 7867;    ;DataItem;                    ;
               DataItemTable=Table11125618;
               DataItemTableView=SORTING(Production Forecast Name,Generic Item No.,Forecast Date,Location Code);
               OnPreDataItem=BEGIN
                               ProdForecastEntry.LOCKTABLE;
                               IF ProdForecastEntry.FINDLAST THEN
                                 LastEntryNo := ProdForecastEntry."Entry No.";

                               NextEntryNo := LastEntryNo + 1;
                             END;

               OnAfterGetRecord=BEGIN
                                  GenericItem.GET("Generic Item No.");
                                  GenericItem.TESTFIELD(Status,GenericItem.Status::Certified);

                                  //delete existing entries
                                  IF (PreviousGenItemForecastEntry."Production Forecast Name" <> "Production Forecast Name") OR
                                    (PreviousGenItemForecastEntry."Generic Item No." <> "Generic Item No.") OR
                                    (PreviousGenItemForecastEntry."Forecast Date" <> "Forecast Date") OR
                                    (PreviousGenItemForecastEntry."Location Code" <> "Location Code")
                                  THEN BEGIN
                                    ExistingProdForecastEntry.SETRANGE("Production Forecast Name","Production Forecast Name");
                                    ExistingProdForecastEntry.SETRANGE("Generic Item No.","Generic Item No.");
                                    ExistingProdForecastEntry.SETRANGE("Forecast Date","Forecast Date");
                                    ExistingProdForecastEntry.SETRANGE("Location Code","Location Code");
                                    ExistingProdForecastEntry.DELETEALL;
                                  END;
                                  PreviousGenItemForecastEntry := "Gen. Item Forecast Entry";
                                END;

               ReqFilterFields=Production Forecast Name,Generic Item No.,Generic Item Status }

    { 6098;1   ;DataItem;                    ;
               DataItemTable=Table11125616;
               DataItemTableView=SORTING(Generic Item No.,Line No.);
               OnAfterGetRecord=VAR
                                  Item@1100525000 : Record 27;
                                BEGIN
                                  ToProdForecastEntry."Entry No." := NextEntryNo;
                                  ToProdForecastEntry."Production Forecast Name" := "Gen. Item Forecast Entry"."Production Forecast Name";
                                  ToProdForecastEntry."Item No." := "Item No.";
                                  IF FORMAT("Time Shift") <> '' THEN
                                    ToProdForecastEntry."Forecast Date" := CALCDATE(STRSUBSTNO('-%1',"Time Shift"),"Gen. Item Forecast Entry"."Forecast Date")
                                  ELSE
                                    ToProdForecastEntry."Forecast Date" := "Gen. Item Forecast Entry"."Forecast Date";
                                  ToProdForecastEntry.VALIDATE("Unit of Measure Code","Unit of Measure Code");
                                  Item.GET("Item No.");
                                  IF Item."Rounding Precision" <= 0 THEN
                                    Item."Rounding Precision" := 0.00001;
                                  ToProdForecastEntry.VALIDATE("Forecast Quantity",
                                    ROUND("Gen. Item Forecast Entry"."Forecast Quantity (Base)" * "Generic BOM Line".Quantity * (Percentage / 100),
                                    Item."Rounding Precision"));

                                  ToProdForecastEntry."Location Code" := "Gen. Item Forecast Entry"."Location Code";
                                  ToProdForecastEntry.Description := Description;
                                  ToProdForecastEntry."Generic Item No." := "Generic BOM Line"."Generic Item No.";

                                  ToProdForecastEntry.INSERT;
                                  NextEntryNo +=1;
                                END;

               DataItemLink=Generic Item No.=FIELD(Generic Item No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ToProdForecastEntry@1001 : Record 99000852;
      ProdForecastEntry@1002 : Record 99000852;
      LastEntryNo@1005 : Integer;
      NextEntryNo@1006 : Integer;
      GenericItem@1100525000 : Record 11125615;
      ExistingProdForecastEntry@1100525001 : Record 99000852;
      PreviousGenItemForecastEntry@1100525002 : Record 11125618;
      CreatedMessage@1100525003 : TextConst 'DEU=Produktionsprognosezeilen erstellt.;ENU=Production Forcast Lines created.;NLD=Productiepronoseregels aangemaakt.;NOR=Rader for Produksjonsprognose er opprettet.;SVE=Rader f”r produktionsprognos har skapats.';
      NotCreatedMessage@1100525004 : TextConst 'DEU=Keine Produktionsprognosezeilen erstellt!;ENU=No Production Forcast Lines created!;NLD=Geen productiepronoseregels aangemaakt!;NOR=Ingen rader for Produksjonsprognose er Opprettet!;SVE=Inga rader f”r produktionsprognos har skapats!';

    BEGIN
    {
      prognosisquantity generic item * quantity in the generic Bill of Materials line * percentage in the generic Bill of Materials line/100
    }
    END.
  }
  RDLDATA
  {
  }
}

