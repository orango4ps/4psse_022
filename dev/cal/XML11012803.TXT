OBJECT XMLport 11012803 Import Unit Price Budget
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Unit Price Budget;
               NOR=Importer enhetsprisbudsjett;
               SVE=Importera budget f”r enhetspris];
    Direction=Import;
    DefaultFieldsValidation=No;
    PreserveWhiteSpace=Yes;
    TextEncoding=WINDOWS;
    OnPreXMLport=BEGIN
                   IF (CustomerNo = '') AND (UnitPriceType = UnitPriceType::Customer) THEN
                     ERROR(Text001);
                   IF (IndexDate = 0D) THEN
                     ERROR(Text002);
                   //IF (LineCode = '') THEN
                   //  ERROR(Text003);
                 END;

    OnPostXMLport=BEGIN
                    XMLportStatusDialogMgt.CloseStatus;
                    IF (LinesToPrint) THEN BEGIN
                      COMMIT;
                      ImportUPBudgetCustomer.RUNMODAL;
                    END;
                  END;

    Format=Variable Text;
    FieldDelimiter=<None>;
    FieldSeparator=[;];
  }
  ELEMENTS
  {
    { [{F9958E10-81EE-46BF-A8CC-CF595F74790E}];  ;Root                ;Element ;Text     }

    { [{DC16AE3E-0041-4DBE-B060-953D09938818}];1 ;UnitPriceBudgetCustomer;Element;Table ;
                                                  SourceTable=Table11071771;
                                                  SourceTableView=SORTING(Field10,Field20,Field30,Field40);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              CLEAR(NEN2767);
                                                                              CLEAR(STABU);
                                                                              CLEAR(Stuurcode);
                                                                              CLEAR(Omschrijving);
                                                                              CLEAR(Eenheid);
                                                                              CLEAR(HoeveelheidTxt);
                                                                              CLEAR(MUperEenheidTxt);
                                                                              CLEAR(UurloonTxt);
                                                                              CLEAR(BTWmanuren);
                                                                              CLEAR(BrutoPrijsTxt);
                                                                              CLEAR(BTWmateriaal);
                                                                              CLEAR(Onderdeel);
                                                                              //>> 200108 ORANGO.SB SRFC-1009/#26898
                                                                              CLEAR(PaymentCode);
                                                                              //<<
                                                                            END;

                                                  Import::OnBeforeInsertRecord=BEGIN
                                                                                 IF (NEN2767 = '') AND
                                                                                    (STABU = '') AND
                                                                                    (Stuurcode = '')
                                                                                 THEN
                                                                                   currXMLport.SKIP;

                                                                                 IF (NEN2767 <> '') THEN
                                                                                   LineCode := NEN2767;
                                                                                 IF (LineCode = '') THEN
                                                                                   ERROR(Text003);

                                                                                 WITH "SUP Customer Budget Line" DO BEGIN

                                                                                 CASE Stuurcode OF
                                                                                   '5','6','8','9',' ','':
                                                                                     currXMLport.SKIP;
                                                                                 END;

                                                                                 INIT;
                                                                                 FillBudgetKeyFields;

                                                                                 IF (ProcessUPLineForFirstTime("Price Book Code", "Index Date", "Unit Price Code")) THEN BEGIN
                                                                                   DeleteAllExistingLines;
                                                                                   AddUnitPriceIfNotPresent;
                                                                                   AddUnitPriceLineIfNotPresent;
                                                                                   CopyPreviousBudgetInternal;
                                                                                 END;

                                                                                 IF (Stuurcode = '4') THEN BEGIN
                                                                                   UpdateUnitPriceLine;
                                                                                   currXMLport.SKIP;
                                                                                 END;

                                                                                 IF (Stuurcode = '7') THEN BEGIN
                                                                                   AddUnitPriceLineText;
                                                                                   currXMLport.SKIP;
                                                                                 END;

                                                                                 "Line No." := GetLastLineNo;
                                                                                 "STABU Code" := STABU;
                                                                                 "Record Code" := Stuurcode;
                                                                                 Description := COPYSTR(Omschrijving, 1, 50);
                                                                                 IF (STRLEN(Omschrijving) > 50) THEN
                                                                                   "Description 2" := COPYSTR(Omschrijving, 51, 50);
                                                                                 IF (STRLEN(Omschrijving) > 100) THEN
                                                                                   "Description 3" := COPYSTR(Omschrijving, 101, 50);

                                                                                 CASE Stuurcode OF
                                                                                   '2': BEGIN
                                                                                     Quantity := Hoeveelheid;
                                                                                     "Unit of Measure" := GetUoM;
                                                                                   END;
                                                                                   '3': BEGIN
                                                                                     Quantity := Hoeveelheid;
                                                                                     "Unit of Measure" := GetUoM;
                                                                                     VALIDATE(Norm, MUperEenheid);
                                                                                     "VAT Code Men Hours Customer" := BTWmanuren;
                                                                                     "VAT Code Men Hours" := GetVATCodeRelation(BTWmanuren);
                                                                                     VALIDATE("Hour Rate", Uurloon);
                                                                                     "VAT Code Material Customer" := BTWmateriaal;
                                                                                     "VAT Code Material" := GetVATCodeRelation(BTWmateriaal);
                                                                                     VALIDATE("Gross Price", BrutoPrijs);
                                                                                   END;
                                                                                 END;

                                                                                 RecRef.GETTABLE("SUP Customer Budget Line");
                                                                                 XMLportStatusDialogMgt.ShowImportStatus(RecRef);

                                                                                 INSERT;

                                                                                 currXMLport.SKIP;

                                                                                 END; //Belongs to With statement.
                                                                               END;
                                                                                }

    { [{51D03848-334A-447C-ACDA-DCD18897073C}];2 ;NEN2767             ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{9C8484FA-179E-49F8-AD00-E8B87C738459}];2 ;STABU               ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{905DD400-642E-4851-BD47-51390CC6B471}];2 ;Stuurcode           ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{7E5A495A-AF85-434B-916C-0E452FFEA6B6}];2 ;Omschrijving        ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{7995A6A7-1099-44EF-AC7F-E0C605E8FE11}];2 ;Eenheid             ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{13D2C141-B371-425A-9DD4-2659A3B664E2}];2 ;HoeveelheidTxt      ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  FillEmptyTextWithZero(HoeveelheidTxt);
                                                                                  EVALUATE(Hoeveelheid, HoeveelheidTxt);
                                                                                END;
                                                                                 }

    { [{1FD19BCF-5838-456B-8907-0513572F9F5D}];2 ;MUperEenheidTxt     ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  FillEmptyTextWithZero(MUperEenheidTxt);
                                                                                  EVALUATE(MUperEenheid, MUperEenheidTxt);
                                                                                END;
                                                                                 }

    { [{0AE233B6-EF25-4C59-88F7-085A1226ACBD}];2 ;UurloonTxt          ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  FillEmptyTextWithZero(UurloonTxt);
                                                                                  EVALUATE(Uurloon, UurloonTxt);
                                                                                END;
                                                                                 }

    { [{A5A9CDDF-2EF3-4C45-83ED-249AC5E526CC}];2 ;BTWmanuren          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{3CADE919-DBE3-440E-B60D-B34D0B6935C5}];2 ;Onderdeel           ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{452FAA6F-BF8A-4A60-BAF5-055B31AF12A9}];2 ;BrutoPrijsTxt       ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  FillEmptyTextWithZero(BrutoPrijsTxt);
                                                                                  EVALUATE(BrutoPrijs, BrutoPrijsTxt);
                                                                                END;
                                                                                 }

    { [{32D1BB93-BB42-4D43-BAC6-5B5FAA671866}];2 ;PaymentCode         ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A39A8DB3-28B1-499D-B0EB-6AD15BFE14BF}];2 ;Dummy3              ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{B651D3DF-83C8-47AB-8872-04B7B8DB4A04}];2 ;BTWmateriaal        ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{A736590E-7047-4681-964C-C3C71B5B7F2E}];2 ;Dummy4              ;Element ;Text    ;
                                                  MinOccurs=Zero }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      GenericTempTable@1100525018 : TEMPORARY Record 11020579;
      RecRef@1100525010 : RecordRef;
      XMLportStatusDialogMgt@1100525011 : Codeunit 11130006;
      ImportUPBudgetCustomer@1100525017 : Report 11012897;
      LinesToPrint@1100525016 : Boolean;
      UnitPriceType@1100525015 : ',Internal,Customer';
      CustomerNo@1100525014 : Code[20];
      IndexDate@1100525013 : Date;
      LineCode@1100525012 : Code[20];
      Hoeveelheid@1100525006 : Decimal;
      MUperEenheid@1100525005 : Decimal;
      Uurloon@1100525004 : Decimal;
      BrutoPrijs@1100525002 : Decimal;
      Text001@1100525008 : TextConst 'ENU=Customer Number must be filled.;SVE=Kundnummer m†ste fyllas i.';
      Text002@1100525007 : TextConst 'ENU=Index Date must be filled.;SVE=Indexdatum m†ste fyllas i.';
      Text003@1100525003 : TextConst 'ENU=Line Code must be filled.;SVE=Radkod m†ste fyllas i.';
      Text004@1100525001 : TextConst 'ENU="Auto generated on %1 "';
      Text005@1100525000 : TextConst 'ENU=%1 ''%2'' is not present.;SVE=%1 ''%2'' finns inte.';

    PROCEDURE SetGlobalVarsCustomer@1210190001(CustNo@1210190000 : Code[20];IDate@1210190001 : Date;LCode@1210190002 : Code[20]);
    BEGIN
      UnitPriceType := UnitPriceType::Customer;
      CustomerNo := CustNo;
      IndexDate := IDate;
      LineCode := LCode;
    END;

    LOCAL PROCEDURE FillBudgetKeyFields@1210190000();
    BEGIN
      "SUP Customer Budget Line"."Price Book Code" := CustomerNo;
      "SUP Customer Budget Line"."Index Date" := IndexDate;
      "SUP Customer Budget Line"."Unit Price Code" := LineCode;
      IF (NEN2767 <> '') THEN BEGIN
        "SUP Customer Budget Line"."Unit Price Code" := NEN2767;
      END;
    END;

    PROCEDURE ProcessUPLineForFirstTime@1100528301(UnitPriceCode@1100528300 : Code[20];IndexDate@1100528301 : Date;UnitPriceLineCode@1100528302 : Code[20]) : Boolean;
    BEGIN
      IF (GenericTempTable.GET(UnitPriceCode, FORMAT(IndexDate), UnitPriceLineCode, '', '', '')) THEN
        EXIT(FALSE);

      GenericTempTable.INIT;
      GenericTempTable."Key Code1" := UnitPriceCode;
      GenericTempTable."Key Code2" := FORMAT(IndexDate);
      GenericTempTable."Key Code3" := UnitPriceLineCode;
      GenericTempTable."Key Code4" := '';
      GenericTempTable."Key Code5" := '';
      GenericTempTable."Key Code6" := '';
      GenericTempTable.INSERT;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE DeleteAllExistingLines@1210190005();
    VAR
      ServiceUnitPriceLine@1210190000 : Record 11071769;
    BEGIN
      ServiceUnitPriceLine.SETRANGE("Price Book Type", UnitPriceType);
      ServiceUnitPriceLine.SETRANGE("Price Book Code", "SUP Customer Budget Line"."Price Book Code");
      ServiceUnitPriceLine.SETRANGE("Index Date", "SUP Customer Budget Line"."Index Date");
      ServiceUnitPriceLine.SETRANGE(Code, "SUP Customer Budget Line"."Unit Price Code");
      ServiceUnitPriceLine.DELETEALL(TRUE);
    END;

    LOCAL PROCEDURE AddUnitPriceIfNotPresent@1100528307();
    VAR
      ServiceUnitPrice@1210190000 : Record 11071768;
    BEGIN
      IF (NOT ServiceUnitPrice.GET(
          "SUP Customer Budget Line"."Price Book Code",
          "SUP Customer Budget Line"."Index Date"))
      THEN BEGIN
        ServiceUnitPrice.Type := UnitPriceType;
        ServiceUnitPrice.Code := "SUP Customer Budget Line"."Price Book Code";
        ServiceUnitPrice."Index Date" := "SUP Customer Budget Line"."Index Date";
        ServiceUnitPrice.Description := STRSUBSTNO(Text004, TODAY);
        ServiceUnitPrice."File Location" := currXMLport.FILENAME;
        ServiceUnitPrice.INSERT;
      END;
    END;

    LOCAL PROCEDURE AddUnitPriceLineIfNotPresent@1210190008();
    VAR
      ServiceUnitPriceLine@1210190000 : Record 11071769;
    BEGIN
      IF (NOT ServiceUnitPriceLine.GET(
          "SUP Customer Budget Line"."Price Book Code",
          "SUP Customer Budget Line"."Index Date",
          "SUP Customer Budget Line"."Unit Price Code"))
      THEN BEGIN
        //>> 200108 ORANGO.SB SRFC-1009/#26898
        ServiceUnitPriceLine."Price Book Type" := UnitPriceType;//ServiceUnitPriceLine."Price Book Type"::Customer;
        //<<
        ServiceUnitPriceLine."Price Book Code" := "SUP Customer Budget Line"."Price Book Code";
        ServiceUnitPriceLine."Index Date" := "SUP Customer Budget Line"."Index Date";
        ServiceUnitPriceLine.Code := "SUP Customer Budget Line"."Unit Price Code";
        ServiceUnitPriceLine.Description := COPYSTR(Omschrijving, 1, 50);
        IF (STRLEN(Omschrijving) > 50) THEN
          ServiceUnitPriceLine."Description 2" := COPYSTR(Omschrijving, 51, 50);
        IF (STRLEN(Omschrijving) > 100) THEN
          ServiceUnitPriceLine."Description 3" := COPYSTR(Omschrijving, 101, 50);
        IF (ServiceUnitPriceLine.Description = '') THEN
          ServiceUnitPriceLine.Description := STRSUBSTNO(Text004, TODAY);
        ServiceUnitPriceLine.INSERT;
      END;
    END;

    LOCAL PROCEDURE UpdateUnitPriceLine@1210190009();
    VAR
      ServiceUnitPriceLine@1210190000 : Record 11071769;
    BEGIN
      ServiceUnitPriceLine.GET(
          "SUP Customer Budget Line"."Price Book Code",
          "SUP Customer Budget Line"."Index Date",
          "SUP Customer Budget Line"."Unit Price Code");

      ServiceUnitPriceLine.Description := COPYSTR(Omschrijving, 1, 50);
      IF (STRLEN(Omschrijving) > 50) THEN
        ServiceUnitPriceLine."Description 2" := COPYSTR(Omschrijving, 51, 50)
      ELSE
        ServiceUnitPriceLine."Description 2" := '';
      IF (STRLEN(Omschrijving) > 100) THEN
        ServiceUnitPriceLine."Description 3" := COPYSTR(Omschrijving, 101, 50)
      ELSE
        ServiceUnitPriceLine."Description 3" := '';
      ServiceUnitPriceLine.Quantity := Hoeveelheid;
      ServiceUnitPriceLine."Unit of Measure" := Eenheid;
      ServiceUnitPriceLine."Unit Price" := BrutoPrijs;
      ServiceUnitPriceLine.Part := COPYSTR(Onderdeel, 1, 20);
      //>> 200108 ORANGO.SB SRFC-1009/#26898
      ServiceUnitPriceLine.VALIDATE("Payment Code",PaymentCode);
      //<<
      ServiceUnitPriceLine.MODIFY;
    END;

    PROCEDURE CopyPreviousBudgetInternal@1100528304();
    VAR
      UnitPriceBudgetInternal@1100528300 : Record 11071770;
      UnitPriceBudgetInternal2@1100528302 : Record 11071770;
    BEGIN
      UnitPriceBudgetInternal.SETRANGE("Price Book Type", UnitPriceType);
      UnitPriceBudgetInternal.SETRANGE("Price Book Code", "SUP Customer Budget Line"."Price Book Code");
      UnitPriceBudgetInternal.SETFILTER("Index Date", '<%1', "SUP Customer Budget Line"."Index Date");
      UnitPriceBudgetInternal.SETRANGE("Unit Price Code", "SUP Customer Budget Line"."Unit Price Code");
      IF (UnitPriceBudgetInternal.FINDLAST) THEN BEGIN
        UnitPriceBudgetInternal.SETRANGE("Index Date", UnitPriceBudgetInternal."Index Date");
        IF (UnitPriceBudgetInternal.FINDSET) THEN BEGIN
          REPEAT
            UnitPriceBudgetInternal2.COPY(UnitPriceBudgetInternal);
            UnitPriceBudgetInternal2."Index Date" := "SUP Customer Budget Line"."Index Date";
            UnitPriceBudgetInternal2.INSERT;
          UNTIL(UnitPriceBudgetInternal.NEXT = 0);
        END
      END;
    END;

    LOCAL PROCEDURE GetUoM@1210190015() : Code[10];
    VAR
      UnitOfMeasure@1210190000 : Record 204;
    BEGIN
      IF (NOT UnitOfMeasure.GET(Eenheid)) THEN BEGIN
        AddMessage(Eenheid, STRSUBSTNO(Text005, UnitOfMeasure.TABLECAPTION, Eenheid));
        EXIT('');
      END;
      EXIT(UnitOfMeasure.Code);
    END;

    PROCEDURE GetVATCodeRelation@1100528306(VATCode@1100528301 : Code[20]) : Code[10];
    VAR
      UnitPriceVATCodeRelation@1100528300 : Record 11071785;
    BEGIN
      UnitPriceVATCodeRelation.SETRANGE("VAT Code Customer", VATCode);
      UnitPriceVATCodeRelation.SETFILTER("Index Date", '<=%1', "SUP Customer Budget Line"."Index Date");
      IF (NOT UnitPriceVATCodeRelation.FINDLAST) THEN BEGIN
        AddMessage(VATCode, STRSUBSTNO(Text005, UnitPriceVATCodeRelation.TABLECAPTION, VATCode));
        EXIT('');
      END;
      EXIT(UnitPriceVATCodeRelation."VAT Code");
    END;

    LOCAL PROCEDURE AddMessage@1210190017(Code@1100528300 : Code[10];Message@1210190000 : Text[80]);
    BEGIN
      ImportUPBudgetCustomer.AddMessage(Code, Message);
      LinesToPrint := TRUE;
    END;

    PROCEDURE GetLastLineNo@1100528300() : Integer;
    VAR
      UnitPriceBudgetCustomer@1100528300 : Record 11071771;
    BEGIN
      UnitPriceBudgetCustomer.SETRANGE("Price Book Code", "SUP Customer Budget Line"."Price Book Code");
      UnitPriceBudgetCustomer.SETRANGE("Index Date", "SUP Customer Budget Line"."Index Date");
      UnitPriceBudgetCustomer.SETRANGE("Unit Price Code", "SUP Customer Budget Line"."Unit Price Code");
      IF (UnitPriceBudgetCustomer.FINDLAST) THEN
        EXIT(UnitPriceBudgetCustomer."Line No." + 10000);
      EXIT(10000);
    END;

    PROCEDURE FillEmptyTextWithZero@1100525013(VAR Text@1100525000 : Text[1024]);
    BEGIN
      IF DELCHR(Text,'<>=',' ') = '' THEN
        Text := '0';
    END;

    PROCEDURE AddUnitPriceLineText@1100525000();
    VAR
      ServiceUnitPriceLineText@1100525000 : Record 11071957;
      LastLineNo@1100525001 : Integer;
    BEGIN
      ServiceUnitPriceLineText.SETRANGE("Unit Price Type", UnitPriceType);
      ServiceUnitPriceLineText.SETRANGE("Unit Price Code", CustomerNo);
      ServiceUnitPriceLineText.SETRANGE("Index Date", IndexDate);
      ServiceUnitPriceLineText.SETRANGE(Code, LineCode);
      IF (ServiceUnitPriceLineText.FINDLAST) THEN
        LastLineNo := ServiceUnitPriceLineText."Line No.";
      LastLineNo += 10000;

      ServiceUnitPriceLineText.INIT;
      ServiceUnitPriceLineText."Unit Price Type" := UnitPriceType;
      ServiceUnitPriceLineText."Unit Price Code" := CustomerNo;
      ServiceUnitPriceLineText."Index Date" := IndexDate;
      ServiceUnitPriceLineText.Code := LineCode;
      ServiceUnitPriceLineText."Line No." := LastLineNo;
      ServiceUnitPriceLineText.Comment := COPYSTR(Omschrijving, 1,
        MAXSTRLEN(ServiceUnitPriceLineText.Comment));
      ServiceUnitPriceLineText."Line Break" := TRUE;

      ServiceUnitPriceLineText.INSERT(TRUE);
    END;

    PROCEDURE SetGlobalVarsInternal@1210190006(CustNo@1000000000 : Code[20];IDate@1210190001 : Date;LCode@1210190002 : Code[20]);
    BEGIN
      //>> 200108 ORANGO.SB SRFC-1009/#26898
      UnitPriceType := UnitPriceType::Internal;
      CustomerNo := CustNo;
      IndexDate := IDate;
      LineCode := LCode;
      //<<
    END;

    BEGIN
    {
      CC: Dataport 11012803
      200108 ORANGO.SB SRFC-1009/#26898 Handle price type internal + Added PaymentCode in Dummy2-field
    }
    END.
  }
}

