OBJECT Report 1201 Post Direct Debit Collection
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Lastschrift buchen;
               ENU=Post Direct Debit Collection;
               NLD=Incasso-opdracht boeken;
               NOR=Bokfõr Direct Debit-oppkreving];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  GenJnlBatch.GET(GeneralJournalTemplateName,GeneralJournalBatchName);
                  GenJnlLine.SETRANGE("Journal Template Name",GeneralJournalTemplateName);
                  GenJnlLine.SETRANGE("Journal Batch Name",GeneralJournalBatchName);
                  IF GenJnlLine.FINDLAST THEN;
                  LastLineNo := GenJnlLine."Line No.";
                END;

    OnPostReport=BEGIN
                   Window.CLOSE;
                   IF CreateJnlOnly THEN
                     MESSAGE(JnlCreatedMsg,TotalCount - SkippedCount,SkippedCount)
                   ELSE
                     MESSAGE(PostedMsg,TotalCount - SkippedCount,SkippedCount);

                   IF SkippedCount = 0 THEN BEGIN
                     DirectDebitCollection.GET(DirectDebitCollectionNo);
                     DirectDebitCollection.Status := DirectDebitCollection.Status::Posted;
                     DirectDebitCollection.MODIFY;
                   END;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table1208;
               DataItemTableView=SORTING(Direct Debit Collection No.,Entry No.);
               OnPreDataItem=BEGIN
                               SETRANGE("Direct Debit Collection No.",DirectDebitCollectionNo);
                               SETRANGE(Status,Status::"File Created");
                               TotalCount := COUNT;
                               Window.OPEN(ProgressMsg);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrCount += 1;
                                  Window.UPDATE(1,CurrCount * 10000 DIV TotalCount);
                                  IF CreateJnlLine("Direct Debit Collection Entry") THEN BEGIN
                                    Status := Status::Posted;
                                    MODIFY;
                                  END ELSE
                                    SkippedCount += 1;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF DirectDebitCollectionNo <> 0 THEN
                     IF DirectDebitCollection.GET(DirectDebitCollectionNo) THEN;
                 END;

    }
    CONTROLS
    {
      { 1   ;    ;Container ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  ContainerType=ContentArea }

      { 3   ;1   ;Field     ;
                  CaptionML=[DEU=Lastschriftnr.;
                             ENU=Direct Debit Collection No.;
                             NLD=Incasso-opdrachtnr.;
                             NOR=Direct Debit-oppkrevingsnr.;
                             SVE=Autogirosamlingsnr.];
                  ToolTipML=[DEU=Gibt den Lastschrifteinzug an, fÅr den Sie den Zahlungseingang buchen mîchten.;
                             ENU=Specifies the direct debit collection that you want to post payment receipt for.;
                             NLD=Hiermee wordt de incasso-opdracht opgegeven waarvoor u een betalingsontvangst wilt boeken.;
                             NOR=Angir Direct Debit-oppkrevingen du vil bokfõre kvittering for.];
                  ApplicationArea=#Suite;
                  SourceExpr=DirectDebitCollectionNo;
                  TableRelation="Direct Debit Collection";
                  OnValidate=BEGIN
                               DirectDebitCollection.GET(DirectDebitCollectionNo);
                               DirectDebitCollection.TESTFIELD(Status,DirectDebitCollection.Status::"File Created");
                             END;

                  OnLookup=VAR
                             DirectDebitCollections@1000 : Page 1207;
                           BEGIN
                             DirectDebitCollection.SETRANGE(Status,DirectDebitCollection.Status::"File Created");
                             IF DirectDebitCollectionNo = 0 THEN
                               DirectDebitCollection.FINDLAST
                             ELSE
                               IF DirectDebitCollection.GET(DirectDebitCollectionNo) THEN;
                             DirectDebitCollections.LOOKUPMODE := TRUE;
                             DirectDebitCollections.SETRECORD(DirectDebitCollection);
                             DirectDebitCollections.SETTABLEVIEW(DirectDebitCollection);
                             IF DirectDebitCollections.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               DirectDebitCollections.GETRECORD(DirectDebitCollection);
                               DirectDebitCollectionNo := DirectDebitCollection."No.";
                             END;
                           END;
                            }

      { 5   ;1   ;Field     ;
                  CaptionML=[DEU=Bezeichner;
                             ENU=Identifier;
                             NLD=Identificatie;
                             NOR=ID;
                             SVE=Identifierare];
                  ToolTipML=[DEU=Gibt die Sammlung an.;
                             ENU=Specifies the collection.;
                             NLD=Hiermee wordt de incasso opgegeven.;
                             NOR=Angir oppkrevingen.];
                  ApplicationArea=#Suite;
                  SourceExpr=DirectDebitCollection.Identifier;
                  Editable=FALSE }

      { 6   ;1   ;Field     ;
                  CaptionML=[DEU=Status;
                             ENU=Status;
                             NLD=Status;
                             NOR=Status;
                             SVE=Status];
                  ToolTipML=[DEU=Gibt den Status der Sammlung an.;
                             ENU=Specifies the status of the collection.;
                             NLD=Hiermee wordt de status van de incasso opgegeven.;
                             NOR=Angir statusen til oppkrevingen.];
                  ApplicationArea=#Suite;
                  SourceExpr=DirectDebitCollection.Status;
                  Editable=FALSE }

      { 7   ;1   ;Field     ;
                  CaptionML=[DEU=Bankkontonummer;
                             ENU=Bank Account No.;
                             NLD=Bankrekeningnr.;
                             NOR=Bankkontonr.;
                             SVE=Bankkontonr];
                  ToolTipML=[DEU=Gibt an, auf welches der Bankkonten Ihres Unternehmens die Eingangszahlung vom Bankkonto des Debitors Åberwiesen werden soll.;
                             ENU=Specifies which of your company's bank accounts the collected payment will be transferred to from the customer's bank account.;
                             NLD=Hiermee wordt opgegeven naar welke bankrekeningen van uw bedrijf de verzamelde betaling wordt overgeboekt van de bankrekening van de klant.;
                             NOR=Angir hvilken av selskapets bankkonti som den samlede betalingen blir overfõrt til, fra kundens bankkonto.];
                  ApplicationArea=#Suite;
                  SourceExpr=DirectDebitCollection."To Bank Account No.";
                  Editable=FALSE }

      { 4   ;1   ;Field     ;
                  CaptionML=[DEU=Fibu Buch.-Blattvorlage;
                             ENU=General Journal Template;
                             NLD=Algemeen dagboeksjabloon;
                             NOR=Finanskladdemal;
                             SVE=Redovisningsjournalmall];
                  ToolTipML=[DEU=Legt die Fibu Buch.-Blattvorlage fest, in der die Posten platziert werden.;
                             ENU=Specifies the general journal template that the entries are placed in.;
                             NLD=Hiermee wordt de sjabloon opgegeven van het dagboek waarin de posten worden geplaatst.;
                             NOR=Angir finansmalen som postene er plassert i.];
                  ApplicationArea=#Suite;
                  SourceExpr=GeneralJournalTemplateName;
                  TableRelation="Gen. Journal Template";
                  OnValidate=VAR
                               GenJournalTemplate@1001 : Record 80;
                             BEGIN
                               IF GeneralJournalTemplateName = '' THEN BEGIN
                                 GeneralJournalBatchName := '';
                                 EXIT;
                               END;
                               GenJournalTemplate.GET(GeneralJournalTemplateName);
                               IF NOT (GenJournalTemplate.Type IN
                                       [GenJournalTemplate.Type::General,GenJournalTemplate.Type::Purchases,GenJournalTemplate.Type::Payments,
                                        GenJournalTemplate.Type::Sales,GenJournalTemplate.Type::"Cash Receipts"])
                               THEN
                                 ERROR(
                                   TemplateTypeErr,
                                   GenJournalTemplate.Type::General,GenJournalTemplate.Type::Purchases,GenJournalTemplate.Type::Payments,
                                   GenJournalTemplate.Type::Sales,GenJournalTemplate.Type::"Cash Receipts");

                               GenJournalTemplate.TESTFIELD("No. Series");
                             END;
                              }

      { 2   ;1   ;Field     ;
                  CaptionML=[DEU=Fibu Buch.-Blattname;
                             ENU=General Journal Batch;
                             NLD=Batch van algemeen dagboek;
                             NOR=Finanskladd];
                  ToolTipML=[DEU=Legt den Fibu Buch.-Blattnamen fest, in dem die Posten platziert werden.;
                             ENU=Specifies the general journal batch that the entries are placed in.;
                             NLD=Hiermee wordt de batchverwerking opgegeven van het dagboek waarin de posten worden geplaatst.;
                             NOR=Angir finanskladden som postene er plassert i.];
                  ApplicationArea=#Suite;
                  SourceExpr=GeneralJournalBatchName;
                  TableRelation="Gen. Journal Batch";
                  OnValidate=VAR
                               GenJournalBatch@1000 : Record 232;
                             BEGIN
                               GenJournalBatch.GET(GeneralJournalTemplateName,GeneralJournalBatchName);
                               GenJournalBatch.TESTFIELD(Recurring,FALSE);
                               GenJournalBatch.TESTFIELD("No. Series");
                             END;

                  OnLookup=VAR
                             GenJournalBatch@1000 : Record 232;
                             GeneralJournalBatches@1001 : Page 251;
                           BEGIN
                             GenJournalBatch.SETRANGE("Journal Template Name",GeneralJournalTemplateName);
                             GeneralJournalBatches.SETTABLEVIEW(GenJournalBatch);
                             IF GeneralJournalBatches.RUNMODAL = ACTION::OK THEN BEGIN
                               GeneralJournalBatches.GETRECORD(GenJournalBatch);
                               GeneralJournalBatchName := GenJournalBatch.Name;
                             END;
                           END;
                            }

      { 8   ;1   ;Field     ;
                  CaptionML=[DEU=Nur Erfassung erstellen;
                             ENU=Create Journal Only;
                             NLD=Alleen dagboek aanmaken;
                             NOR=Opprett bare kladd];
                  ToolTipML=[DEU=Legt fest, ob der Zahlungseingang gebucht werden soll, wenn Sie auf die SchaltflÑche "OK" klicken. Der Zahlungseingang wird im angegebenen Buch.-Blatt vorbereitet und erst gebucht, wenn jemand die besagten Buch.-Blattzeilen bucht.;
                             ENU=Specifies if you want to post the payment receipt when you choose the OK button. The payment receipt will be prepared in the specified journal and will not be posted until someone posts the journal lines in question.;
                             NLD=Hiermee wordt opgegeven of u wilt dat de betalingsontvangst wordt geboekt wanneer u op OK klikt. De betalingsontvangst in het opgegeven dagboek wordt voorbereid en wordt niet geboekt totdat iemand de dagboekregels in kwestie boekt.;
                             NOR=Angir om du vil bokfõre betalingsmottaket nÜr du velger knappen OK. Betalingsmottaket blir klargjort i den angitte kladden, og blir ikke bokfõrt fõr noen bokfõrer de aktuelle kladdelinjene.];
                  ApplicationArea=#Suite;
                  SourceExpr=CreateJnlOnly }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      TemplateTypeErr@1000 : TextConst '@@@="%1..5 lists Type=General,Purchases,Payments,Sales,Cash Receipts";DEU=Nur Fibu Buch.-Blatt-Vorlagen vom Typ %1, %2, %3, %4 oder %5 sind zulÑssig.;ENU=Only General Journal templates of type %1, %2, %3, %4, or %5 are allowed.;NLD=Uitsluitend financieel-dagboeksjablonen van het type %1, %2, %3, %4 of %5 zijn toegestaan.;NOR=Bare finanskladdemaler av typen %1, %2, %3, %4 eller %5 er tillatt.;SVE=Endast redovisningsjournalmallar av typen %1, %2, %3, %4 eller %5 tillÜts.';
      DirectDebitCollection@1004 : Record 1207;
      GenJnlLine@1006 : Record 81;
      GenJnlBatch@1017 : Record 232;
      GenJnlPostLine@1018 : Codeunit 12;
      DimMgt@1009 : Codeunit 408;
      Window@1013 : Dialog;
      DirectDebitCollectionNo@1003 : Integer;
      GeneralJournalTemplateName@1001 : Code[10];
      GeneralJournalBatchName@1002 : Code[10];
      LastLineNo@1005 : Integer;
      PostingTxt@1007 : TextConst '@@@="%1=Doc. type, %2=Doc. No. E.g. Invoice 234 Direct Debit";DEU=%1 %2 Lastschrift;ENU=%1 %2 Direct Debit;NLD=%1 %2 Incasso;NOR=Direct Debit for %1 %2';
      CreateJnlOnly@1008 : Boolean;
      TotalCount@1010 : Integer;
      CurrCount@1011 : Integer;
      ProgressMsg@1012 : TextConst 'DEU=#1##################;ENU=#1##################;NLD=#1##################;NOR=#1##################';
      JnlCreatedMsg@1014 : TextConst '@@@=%1 and %2 are both numbers / count.;DEU=%1 Buch.-Blattzeilen wurden erstellt. %2 Zeilen wurden Åbersprungen.;ENU=%1 journal lines were created. %2 lines were skipped.;NLD=%1 dagboekregels zijn aangemaakt. %2 regels werden overgeslagen.;NOR=%1 kladdelinjer er opprettet. %2 linjer er hoppet over.';
      PostedMsg@1015 : TextConst '@@@=%1 and %2 are both numbers / count.;DEU=%1 Zahlungen wurden gebucht. %2 Zeilen wurden Åbersprungen.;ENU=%1 payments were posted. %2 lines were skipped.;NLD=%1 betalingen zijn geboekt. %2 regels werden overgeslagen.;NOR=%1 betalinger er bokfõrt. %2 linjer er hoppet over.';
      SkippedCount@1016 : Integer;

    [External]
    PROCEDURE SetCollectionEntry@4(NewCollectionEntry@1000 : Integer);
    BEGIN
      DirectDebitCollectionNo := NewCollectionEntry;
      DirectDebitCollection.GET(DirectDebitCollectionNo);
    END;

    [External]
    PROCEDURE SetJnlBatch@1(NewGenJnlTemplateName@1000 : Code[10];NewGenJnlBachName@1001 : Code[10]);
    BEGIN
      GeneralJournalTemplateName := NewGenJnlTemplateName;
      GeneralJournalBatchName := NewGenJnlBachName;
      CurrReport.USEREQUESTPAGE := FALSE;
    END;

    [External]
    PROCEDURE SetCreateJnlOnly@2(NewCreateJnlOnly@1000 : Boolean);
    BEGIN
      CreateJnlOnly := NewCreateJnlOnly;
    END;

    LOCAL PROCEDURE CreateJnlLine@3(VAR DirectDebitCollectionEntry@1000 : Record 1208) : Boolean;
    VAR
      CustLedgEntry@1001 : Record 21;
      GenJournalTemplate@1004 : Record 80;
      NoSeriesMgt@1003 : Codeunit 396;
      DimensionSetIDArr@1002 : ARRAY [10] OF Integer;
    BEGIN
      CustLedgEntry.GET(DirectDebitCollectionEntry."Applies-to Entry No.");
      CustLedgEntry.CALCFIELDS("Remaining Amount");
      IF NOT CustLedgEntry.Open OR (CustLedgEntry."Remaining Amount" < DirectDebitCollectionEntry."Transfer Amount") THEN
        EXIT(FALSE);

      LastLineNo += 10000;
      GenJnlLine."Journal Template Name" := GeneralJournalTemplateName;
      GenJnlLine."Journal Batch Name" := GeneralJournalBatchName;
      GenJnlLine."Line No." := LastLineNo;
      IF GenJnlBatch."No. Series" <> '' THEN
        IF CreateJnlOnly THEN
          GenJnlLine.SetUpNewLine(GenJnlLine,GenJnlLine."Balance (LCY)",TRUE)
        ELSE BEGIN
          GenJnlLine."Document No." := NoSeriesMgt.GetNextNo(GenJnlBatch."No. Series",GenJnlLine."Posting Date",TRUE);
          GenJournalTemplate.GET(GeneralJournalTemplateName);
          GenJnlLine."Source Code" := GenJournalTemplate."Source Code";
        END;

      GenJnlLine.VALIDATE("Document Type",GenJnlLine."Document Type"::Payment);
      GenJnlLine.VALIDATE("Account Type",GenJnlLine."Account Type"::Customer);
      GenJnlLine.VALIDATE("Account No.",DirectDebitCollectionEntry."Customer No.");
      GenJnlLine.VALIDATE("Bal. Account Type",GenJnlLine."Bal. Account Type"::"Bank Account");
      GenJnlLine.VALIDATE("Bal. Account No.",DirectDebitCollection."To Bank Account No.");
      DimensionSetIDArr[1] := GenJnlLine."Dimension Set ID";
      DimensionSetIDArr[2] := CustLedgEntry."Dimension Set ID";
      GenJnlLine."Dimension Set ID" :=
        DimMgt.GetCombinedDimensionSetID(
          DimensionSetIDArr,GenJnlLine."Shortcut Dimension 1 Code",GenJnlLine."Shortcut Dimension 2 Code");

      GenJnlLine.VALIDATE("Posting Date",DirectDebitCollectionEntry."Transfer Date");
      GenJnlLine.Description :=
        COPYSTR(
          STRSUBSTNO(
            PostingTxt,CustLedgEntry."Document Type",CustLedgEntry."Document No."),1,MAXSTRLEN(GenJnlLine.Description));
      GenJnlLine.VALIDATE("Currency Code",CustLedgEntry."Currency Code");
      GenJnlLine.VALIDATE(Amount,-DirectDebitCollectionEntry."Transfer Amount");
      GenJnlLine."Applies-to Doc. Type" := CustLedgEntry."Document Type";
      GenJnlLine.VALIDATE("Applies-to Doc. No.",CustLedgEntry."Document No.");

      OnAfterCreateJnlLine(GenJnlLine,DirectDebitCollectionEntry);

      IF CreateJnlOnly THEN
        GenJnlLine.INSERT(TRUE)
      ELSE
        GenJnlPostLine.RunWithCheck(GenJnlLine);
      EXIT(TRUE);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCreateJnlLine@5(VAR GenJournalLine@1000 : Record 81;DirectDebitCollectionEntry@1001 : Record 1208);
    BEGIN
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

