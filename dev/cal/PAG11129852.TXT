OBJECT Page 11129852 Projects by External PM
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=Projekte pro externe Projekt-Manager;
               ENU=Projects by External Project Manager;
               NLD=Projecten per externe projectleider];
    SourceTable=Table11072003;
    PageType=List;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             BuyerManagementEnable := TRUE;
           END;

    OnOpenPage=VAR
                 Project@1100529601 : Record 11072003;
                 ProjectRespPerson@1100529600 : Record 11012040;
               BEGIN
                 //**4PS Generated Code. Do Not Change.sn01
                 DPA_IsHardFilter := DPA_SetFilters(CurrPage.OBJECTID(FALSE));
                 //**4PS Generated Code.en01
                 IF UserSetup.GET(USERID) THEN
                   UserSetup.TESTFIELD("Employee No.")
                 ELSE
                   ERROR(STRSUBSTNO(Text000, UserSetup.TABLECAPTION, USERID));

                 ProjectSetup.GET;

                 ProjectRespPerson.SETCURRENTKEY("Employee No.");
                 ProjectRespPerson.SETRANGE("Employee No.", UserSetup."Employee No.");
                 IF ProjectRespPerson.FINDSET THEN
                   REPEAT
                     IF NOT GET(ProjectRespPerson."Project No.") THEN BEGIN
                       Project.GET(ProjectRespPerson."Project No.");
                       Rec := Project;
                       INSERT;
                     END;
                   UNTIL ProjectRespPerson.NEXT = 0;

                 IF FINDFIRST THEN;

                 EnableBuyerManagement;

                 SETFILTER("Project Status", '%1|%2|%3|%4|%5', "Project Status"::Estimation, "Project Status"::Preparation,
                   "Project Status"::Production, "Project Status"::"Technical Finished", "Project Status"::"Administrative Finished");
               END;

    OnAfterGetRecord=BEGIN
                       EnableBuyerManagement;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100485058;1 ;ActionGroup;
                      CaptionML=[DEU=Stunden;
                                 ENU=&Hours;
                                 NLD=&Uren] }
      { 1100485061;2 ;Action    ;
                      Name=HourAccountingProject;
                      AccessByPermission=Page 11020241=X;
                      CaptionML=[DEU=Stundenerfassung Projekt;
                                 ENU=Hours Accounting Project;
                                 NLD=Urenverantwoording project];
                      Image=CalculateWIP;
                      OnAction=BEGIN
                                 RunHourAccountingProject;
                               END;
                                }
      { 1100525004;2 ;Action    ;
                      Name=SiteMgtProjlHours;
                      AccessByPermission=Page 11072217=X;
                      CaptionML=[DEU=Stundenerfassung BaufÅhrer pro Projekt;
                                 ENU=Site Management Hour Accounting by Project;
                                 NLD=Urenverant&woording uitvoerder per project];
                      Image=CalculateWIP;
                      OnAction=BEGIN
                                 RunSiteMgtProjlHours("No.");
                               END;
                                }
      { 1100485036;1 ;ActionGroup;
                      CaptionML=[DEU=&Einkauf;
                                 ENU=&Purchase;
                                 NLD=&Inkoop] }
      { 1100525111;2 ;Action    ;
                      Name=AdviceOrders;
                      AccessByPermission=Page 11012102=X;
                      CaptionML=[DEU=VorschlagsauftrÑge;
                                 ENU=Advice Orders;
                                 NLD=Adviesorders];
                      Image=OrderTracking;
                      OnAction=BEGIN
                                 RunProjectAdviceOrders;
                               END;
                                }
      { 1100485039;2 ;Action    ;
                      Name=PurchaseActions;
                      AccessByPermission=Page 11012034=X;
                      CaptionML=[DEU=Einkaufsmarkierungen;
                                 ENU=Purchase Actions;
                                 NLD=Inkoopacties];
                      Image=OrderTracking;
                      OnAction=BEGIN
                                 RunProjectPurchaseActions;
                               END;
                                }
      { 1100525120;2 ;Action    ;
                      Name=PurchaseOrders;
                      AccessByPermission=Page 11012071=X;
                      CaptionML=[DEU=Bestellungen;
                                 ENU=Purchase Orders;
                                 NLD=Inkooporders];
                      Image=Document;
                      OnAction=BEGIN
                                 RunPurchaseOrders;
                               END;
                                }
      { 1100525016;1 ;ActionGroup;
                      CaptionML=[DEU=Werkzeug;
                                 ENU=Plant;
                                 NLD=Materieel] }
      { 1100525027;2 ;Action    ;
                      Name=PlantInventory;
                      AccessByPermission=Page 11012559=X;
                      CaptionML=[DEU=Aktueller Werkzeugbestand;
                                 ENU=Current Plant Inventory;
                                 NLD=Huidige materieelvoorraad];
                      Image=ResourcePlanning;
                      OnAction=BEGIN
                                 RunPlantInventory;
                               END;
                                }
      { 1100525025;2 ;Action    ;
                      Name=PlantInventoryCourse;
                      AccessByPermission=Page 11012560=X;
                      CaptionML=[DEU=Werkzeuglagerungverlauf;
                                 ENU=Plant Inventory Course;
                                 NLD=Materieelvoorraadverloop];
                      Image=ResourcePlanning;
                      OnAction=BEGIN
                                 RunPlantInventoryCourse;
                               END;
                                }
      { 1100525127;1 ;ActionGroup;
                      CaptionML=[DEU=&Verkauf;
                                 ENU=&Sales;
                                 NLD=&Verkoop] }
      { 1100525218;2 ;Action    ;
                      Name=Installment;
                      AccessByPermission=Page 11012025=X;
                      CaptionML=[DEU=Raten;
                                 ENU=&Installments;
                                 NLD=Termijnen];
                      Image=AmountByPeriod;
                      OnAction=BEGIN
                                 RunProjectInstallment;
                               END;
                                }
      { 1100525219;2 ;Action    ;
                      Name=CostPlusEntries;
                      AccessByPermission=Page 11012043=X;
                      CaptionML=[DEU=RegieeintrÑge;
                                 ENU=&Cost Plus Entries;
                                 NLD=Regiemutaties];
                      Image=AdjustEntries;
                      OnAction=BEGIN
                                 RunCostPlusEntries;
                               END;
                                }
      { 1100525130;2 ;Action    ;
                      Name=SettlementSheets;
                      AccessByPermission=Page 11012047=X;
                      CaptionML=[DEU=Verrechnungsblatt;
                                 ENU=Settlement Sheet;
                                 NLD=Verrekenstaat];
                      Image=ApplyEntries;
                      OnAction=BEGIN
                                 RunSettlementSheets;
                               END;
                                }
      { 1100525220;2 ;Action    ;
                      Name=SalesInvoices;
                      AccessByPermission=Page 143=X;
                      CaptionML=[DEU=Rechnungen;
                                 ENU=In&voices;
                                 NLD=Facturen];
                      Image=Invoice;
                      OnAction=BEGIN
                                 RunSalesInvoices;
                               END;
                                }
      { 1100525221;2 ;Action    ;
                      Name=SalesCrMemos;
                      AccessByPermission=Page 144=X;
                      CaptionML=[DEU=Gutschriften;
                                 ENU=Credit &Memos;
                                 NLD=Creditnota's];
                      Image=CreditMemo;
                      OnAction=BEGIN
                                 RunSalesCrMemos;
                               END;
                                }
      { 1100485033;1 ;ActionGroup;
                      CaptionML=[DEU=&öberwachung;
                                 ENU=&Control;
                                 NLD=&Bewaking] }
      { 1100525122;2 ;Action    ;
                      Name=LedgerEntries;
                      AccessByPermission=Page 11072005=X;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[DEU=&Posten;
                                 ENU=Ledger E&ntries;
                                 NLD=Poste&n];
                      Image=GLRegisters;
                      OnAction=BEGIN
                                 RunProjectLedgerEntries;
                               END;
                                }
      { 1100525017;2 ;Action    ;
                      Name=Snapshot;
                      AccessByPermission=Page 11124895=X;
                      CaptionML=[DEU=Schnappschuss;
                                 ENU=Snapshot;
                                 NLD=Snapshot];
                      Image=SuggestCapacity;
                      OnAction=BEGIN
                                 RunProjectSnapshot;
                               END;
                                }
      { 1100525007;2 ;Action    ;
                      Name=Recording;
                      AccessByPermission=Page 11072436=X;
                      CaptionML=[DEU=Projektaufnahme;
                                 ENU=Project recording;
                                 NLD=Projectopname];
                      Image=GeneralPostingSetup;
                      OnAction=BEGIN
                                 RunProjectRecording;
                               END;
                                }
      { 1100485035;2 ;Action    ;
                      Name=PrognosisList;
                      AccessByPermission=Page 11012087=X;
                      CaptionML=[DEU=Prognose;
                                 ENU=Prognosis;
                                 NLD=Prognose];
                      Image=CalculateRemainingUsage;
                      OnAction=BEGIN
                                 RunPrognosisList;
                               END;
                                }
      { 1100528800;2 ;Action    ;
                      Name=GeneratePrognosis;
                      AccessByPermission=TableData 11012034=I;
                      CaptionML=[DEU=Prognosen zu aktuellen Projekten erstellen;
                                 ENU=Generate Prognosis current Projects;
                                 NLD=Genereer prognoses lopende projecten];
                      Image=CreateDocument;
                      OnAction=BEGIN
                                 ProcessPrognosis;
                               END;
                                }
      { 1100525128;1 ;ActionGroup;
                      Name=BuyerManagement;
                      CaptionML=[DEU=&KÑuferverwaltung;
                                 ENU=&Buyer management;
                                 NLD=&Koperbeheer];
                      Enabled=BuyerManagementEnable }
      { 1100525197;2 ;Action    ;
                      Name=Plots;
                      AccessByPermission=Page 11012506=X;
                      CaptionML=[DEU=&Baunummer;
                                 ENU=Plots;
                                 NLD=&Bouwnummers];
                      Image=AddToHome;
                      OnAction=BEGIN
                                 RunProjectPlots;
                               END;
                                }
      { 1100525198;2 ;Action    ;
                      Name=OptionQuotes;
                      AccessByPermission=Page 11012546=X;
                      CaptionML=[DEU=&Sonderleistungsangebote;
                                 ENU=Option &Quotes;
                                 NLD=&Meerwerkoffertes];
                      Image=Quote;
                      OnAction=BEGIN
                                 RunProjectOptionQuotes;
                               END;
                                }
      { 1100525199;2 ;Action    ;
                      Name=OptionBudget;
                      AccessByPermission=Page 11012510=X;
                      CaptionML=[DEU=Optionsbudget;
                                 ENU=Option Budget;
                                 NLD=&Optiebegroting];
                      Image=Job;
                      OnAction=BEGIN
                                 RunOptionBudget;
                               END;
                                }
      { 1100485022;1 ;ActionGroup;
                      CaptionML=[DEU=Projekte&inteilung;
                                 ENU=&Job Setup;
                                 NLD=&Projectindeling] }
      { 1100485025;2 ;Action    ;
                      Name=ProjectBudget;
                      AccessByPermission=Page 11012003=X;
                      CaptionML=[DEU=Budget;
                                 ENU=Project Budget;
                                 NLD=Werkbegroting];
                      Image=LedgerBudget;
                      OnAction=BEGIN
                                 RunProjectBudget;
                               END;
                                }
      { 1100525112;2 ;Action    ;
                      Name=BudgetAdjustments;
                      AccessByPermission=Page 11012012=X;
                      CaptionML=[DEU=Budgetkorrekturen;
                                 ENU=Budget &Adjustments;
                                 NLD=Werkbegrotingcorrectie&s];
                      Image=Balance;
                      OnAction=BEGIN
                                 RunBudgetAdjustments;
                               END;
                                }
      { 1100485028;2 ;Action    ;
                      Name=Extensions;
                      AccessByPermission=Page 11012014=X;
                      CaptionML=[DEU=SonderleistungsvertrÑge;
                                 ENU=Extensions;
                                 NLD=Meerwerkcontracten];
                      Image=TransferFunds;
                      OnAction=BEGIN
                                 RunProjectExtensions;
                               END;
                                }
      { 1100525125;2 ;Action    ;
                      Name=Principals;
                      AccessByPermission=Page 11012016=X;
                      CaptionML=[DEU=Auftraggeber;
                                 ENU=Principals;
                                 NLD=Opdrachtgevers];
                      Image=TeamSales;
                      OnAction=BEGIN
                                 RunProjectPrincipals;
                               END;
                                }
      { 1100525126;1 ;ActionGroup;
                      CaptionML=[DEU=Belege;
                                 ENU=Documents;
                                 NLD=Documenten] }
      { 1100525019;2 ;Action    ;
                      Name=Documents;
                      CaptionML=[DEU=Belege;
                                 ENU=Doc&uments;
                                 NLD=Doc&umenten];
                      Image=Documents;
                      OnAction=BEGIN
                                 ShowDocuments;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100485000;1;Group  ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1100485001;2;Field  ;
                Lookup=No;
                SourceExpr="No." }

    { 1100485003;2;Field  ;
                SourceExpr=Description }

    { 1100485009;2;Field  ;
                SourceExpr=Address;
                Visible=FALSE }

    { 1100485011;2;Field  ;
                SourceExpr="Address 2";
                Visible=FALSE }

    { 1100485013;2;Field  ;
                Lookup=No;
                SourceExpr="Post Code";
                Visible=FALSE }

    { 1100485015;2;Field  ;
                Lookup=No;
                SourceExpr=City;
                Visible=FALSE }

    { 1100525011;2;Field  ;
                DrillDown=No;
                SourceExpr="Name Project Manager" }

    { 1100525013;2;Field  ;
                DrillDown=No;
                SourceExpr="Name Project Engineer" }

    { 1100525015;2;Field  ;
                DrillDown=No;
                SourceExpr="Name Site Manager" }

    { 1100485017;2;Field  ;
                ExtendedDatatype=None;
                SourceExpr="Phone No.";
                Visible=FALSE }

    { 1100485029;2;Field  ;
                SourceExpr="Fax No.";
                Visible=FALSE }

    { 1100485044;2;Field  ;
                Lookup=No;
                SourceExpr="Bill-to Customer No." }

    { 1100485042;2;Field  ;
                DrillDown=No;
                SourceExpr="Principal Name" }

    { 1100525000;2;Field  ;
                Lookup=No;
                SourceExpr="Project Administrator" }

    { 1100525006;2;Field  ;
                DrillDown=No;
                SourceExpr="Name Project Administrator" }

    { 1100485046;2;Field  ;
                Lookup=No;
                SourceExpr="Project Type" }

    { 1100485048;2;Field  ;
                Lookup=No;
                SourceExpr=Type }

    { 1100485052;2;Field  ;
                SourceExpr="Search Description" }

    { 1100485050;2;Field  ;
                SourceExpr="Project Status" }

    { 1100485054;2;Field  ;
                SourceExpr="Small Project Status";
                Visible=FALSE }

    { 1100485056;2;Field  ;
                SourceExpr="Small Project";
                Visible=FALSE }

    { 1100485005;2;Field  ;
                SourceExpr="Starting Date";
                Visible=FALSE }

    { 1100485007;2;Field  ;
                SourceExpr="Ending Date";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                Name=NoOfDispatchNotes;
                CaptionML=[DEU=Anzahl Packzettel (SiB);
                           ENU=No. of Dispatch Notes (SiB);
                           NLD=Aantal pakbonnen (SiB)];
                BlankZero=Yes;
                SourceExpr=NoOfDispatchNotes;
                Visible=FALSE }

    { 1100525024;2;Field  ;
                DrillDown=No;
                SourceExpr="Contract Amount";
                Visible=FALSE }

    { 1100525026;2;Field  ;
                DrillDown=No;
                SourceExpr="Invoiced Price";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      Text000@1100485001 : TextConst 'DEU=Geben Sie %1 fÅr Anmeldecode %2 ein;ENU=Enter %1 for login code %2;NLD=Voer %1 voor inlogcode %2';
      ProjectSetup@1100529601 : Record 315;
      UserSetup@1100485002 : Record 91;
      BuyerManagementEnable@19020635 : Boolean INDATASET;
      DPA_IsHardFilter@1100000999 : Boolean;
      Text001@1100529600 : TextConst 'DEU=Projekt ''%1'' von Mandant ''%2'' ist  noch nicht in ''%3'' erstellt worden. Es ist nicht mîglich, die Stunden fÅr dieses Projekt einzugeben.;ENU="Project ''%1'' of Company ''%2'' is not created in ''%3'', it is not possible to enter hours for this project. ";NLD="Project ''%1'' van bedrijf ''%2'' is niet aangemaakt in ''%3'', het is niet mogelijk om uren voor dit project in te voeren. "';

    LOCAL PROCEDURE NoOfDispatchNotes@1100525001() : Integer;
    VAR
      DispatchNote@1100525000 : Record 11072651;
    BEGIN
      IF DispatchNote.READPERMISSION THEN BEGIN
        DispatchNote.SETRANGE(Approved, FALSE);
        DispatchNote.SETRANGE("Project No.", "No.");
        EXIT(DispatchNote.COUNT);
      END;
      EXIT(0);
    END;

    LOCAL PROCEDURE EnableBuyerManagement@1100525006();
    BEGIN
      IF "No." = '' THEN
        BuyerManagementEnable := FALSE
      ELSE
        BuyerManagementEnable := "Housebuilding Project";
    END;

    LOCAL PROCEDURE RunHourAccountingProject@1100529601();
    VAR
      HourAccountingProjectPage@1100529600 : Page 11020241;
    BEGIN
      HourAccountingProjectPage.Setfilter("No.");
      HourAccountingProjectPage.RUN;
    END;

    LOCAL PROCEDURE RunSiteMgtProjlHours@1100525002(ProjectNo@1100525004 : Code[20]);
    VAR
      SiteMgtHoursObjects@1100525005 : Record 11012359;
      SiteMgtProjHoursHeader@1100525001 : Record 11012362;
      SiteMgtProjectHourAccPage@1100525000 : Page 11072217;
    BEGIN
      TESTFIELD("No.");
      IF NOT SiteMgtHoursObjects.GET(COMPANYNAME, SiteMgtHoursObjects.Type::Project, ProjectNo) THEN
        ERROR(Text001, ProjectNo, COMPANYNAME, SiteMgtHoursObjects.TABLECAPTION);

      SiteMgtProjHoursHeader.SETCURRENTKEY("Receiving Company", "Project No.", Year, Week);
      SiteMgtProjHoursHeader.SETRANGE("Receiving Company", COMPANYNAME);
      SiteMgtProjHoursHeader.SETRANGE("Project No.", ProjectNo);

      SiteMgtProjectHourAccPage.SETTABLEVIEW(SiteMgtProjHoursHeader);
      SiteMgtProjectHourAccPage.SetOnlyForCurrentProject;
      SiteMgtProjectHourAccPage.RUN;
    END;

    LOCAL PROCEDURE RunProjectAdviceOrders@1100529206();
    VAR
      AdviceOrderLine@1100529201 : Record 11012055;
      AdviceOrdersbyProject@1100529200 : Page 11012102;
    BEGIN
      AdviceOrderLine.FILTERGROUP(9);
      AdviceOrderLine.SETRANGE("Record Type", AdviceOrderLine."Record Type"::Project);
      AdviceOrderLine.SETRANGE("Project No.", "No.");
      AdviceOrderLine.FILTERGROUP(0);
      AdviceOrderLine.SETRANGE(Processed, FALSE);
      AdviceOrdersbyProject.SETTABLEVIEW(AdviceOrderLine);
      AdviceOrdersbyProject.RUNMODAL;
    END;

    LOCAL PROCEDURE RunProjectPurchaseActions@1100529201();
    VAR
      ProjectPurchaseAction@1100529201 : Record 11012026;
      ProjectPurchaseActionList@1100529200 : Page 11129853;
    BEGIN
      ProjectPurchaseAction.FILTERGROUP(9);
      ProjectPurchaseAction.SETRANGE("Project No.","No.");
      ProjectPurchaseAction.FILTERGROUP(0);
      ProjectPurchaseAction.SETRANGE("Project No.","No.");
      ProjectPurchaseActionList.SETTABLEVIEW(ProjectPurchaseAction);
      ProjectPurchaseActionList.RUNMODAL;
    END;

    LOCAL PROCEDURE RunPurchaseOrders@1100528401();
    VAR
      PurchaseOrder@1100485000 : Record 38;
      ProjectPurchaseOrderList@1100525000 : Page 11129854;
    BEGIN
      PurchaseOrder.MarkPurchaseOrdersOfProject("No.");
      PurchaseOrder.MARKEDONLY(TRUE);
      ProjectPurchaseOrderList.SETTABLEVIEW(PurchaseOrder);
      ProjectPurchaseOrderList.SetProject("No.");
      ProjectPurchaseOrderList.RUNMODAL;
    END;

    LOCAL PROCEDURE RunPlantInventory@1100529608();
    VAR
      PlantInventory@1100529604 : Record 11012555;
      PlantMgtComp@1100529603 : Record 11020586;
      PlantInventoryList@1100529602 : Page 11012559;
      PlantCompany@1100529601 : Text[30];
      PlantLocationFilter@1100529600 : Text[250];
    BEGIN
      TESTFIELD("No.");
      IF NOT PlantMgtComp.PlantLocationFilterOfProject("No.", PlantLocationFilter, PlantCompany) THEN
        EXIT;
      PlantInventory.FILTERGROUP(9);
      PlantInventory.SETFILTER(Location, PlantLocationFilter);
      PlantInventory.FILTERGROUP(0);
      PlantInventoryList.SETTABLEVIEW(PlantInventory);
      PlantInventoryList.SetCompany(PlantCompany);
      PlantInventoryList.RUNMODAL;
    END;

    LOCAL PROCEDURE RunPlantInventoryCourse@1100529611();
    VAR
      PlantInventory@1100529604 : Record 11012555;
      PlantMgtComp@1100529603 : Record 11020586;
      PlantInventoryCourseList@1100529602 : Page 11012560;
      PlantCompany@1100529601 : Text[30];
      PlantLocationFilter@1100529600 : Text[250];
    BEGIN
      TESTFIELD("No.");
      IF NOT PlantMgtComp.PlantLocationFilterOfProject("No.", PlantLocationFilter, PlantCompany) THEN
        EXIT;
      PlantInventory.FILTERGROUP(9);
      PlantInventory.SETFILTER(Location, PlantLocationFilter);
      PlantInventory.FILTERGROUP(0);
      PlantInventoryCourseList.SETTABLEVIEW(PlantInventory);
      PlantInventoryCourseList.SetCompany(PlantCompany);
      PlantInventoryCourseList.RUNMODAL;
    END;

    LOCAL PROCEDURE RunProjectInstallment@1100529613();
    VAR
      ProjectInstallment@1100529601 : Record 11012018;
      ProjectInstallPage@1100529600 : Page 11127400;
    BEGIN
      ProjectInstallment.FILTERGROUP(4);
      ProjectInstallment.SETRANGE("Project No.", "No.");
      ProjectInstallment.FILTERGROUP(0);

      ProjectInstallPage.SETTABLEVIEW(ProjectInstallment);
      ProjectInstallPage.SetProjectFilterGroup(4);
      ProjectInstallPage.RUN;
    END;

    LOCAL PROCEDURE RunCostPlusEntries@1100529615();
    VAR
      ProjectCostPlusEntry@1100529600 : Record 11012019;
    BEGIN
      ProjectCostPlusEntry.FILTERGROUP(4);
      ProjectCostPlusEntry.SETRANGE("Project No.", "No.");
      ProjectCostPlusEntry.FILTERGROUP(0);
      ProjectCostPlusEntry.SETRANGE("Project No.", "No.");
      PAGE.RUN(PAGE::"Pr. Cost Plus Entries Ext. PM", ProjectCostPlusEntry);
    END;

    LOCAL PROCEDURE RunSettlementSheets@1100529600();
    VAR
      SettlementSheet@1100485001 : Record 11012021;
      SettlementSheetCard@1100485002 : Page 11129855;
      SettlementSheetList@1100485003 : Page 11129856;
    BEGIN
      SettlementSheet.FILTERGROUP(4);
      SettlementSheet.SETRANGE("Project No.", "No.");
      SettlementSheet.FILTERGROUP(0);
      CASE SettlementSheet.COUNT OF
        0:
          BEGIN
            SettlementSheet.SETRANGE(Principal, "Bill-to Customer No.");
            SettlementSheetList.SETTABLEVIEW(SettlementSheet);
            SettlementSheetList.RUNMODAL;
          END;
        1:
          BEGIN
            SettlementSheet.FINDFIRST;
            SettlementSheet.SETRANGE(Principal, SettlementSheet.Principal);
            SettlementSheet.SETRANGE("Commission No.", SettlementSheet."Commission No.");
            SettlementSheetCard.SETTABLEVIEW(SettlementSheet);
            SettlementSheetCard.SETRECORD(SettlementSheet);
            SettlementSheetCard.RUNMODAL;
          END;
        ELSE BEGIN
          SettlementSheetList.SETTABLEVIEW(SettlementSheet);
          SettlementSheetList.RUNMODAL;
        END;
      END;
    END;

    LOCAL PROCEDURE RunSalesInvoices@1100529619();
    VAR
      SalesInvHeader@1100529602 : Record 112;
      TmpSalesInvHeader@1100529601 : TEMPORARY Record 112;
      SalesInvLine@1100529600 : Record 113;
    BEGIN
      SalesInvLine.SETCURRENTKEY("Job No.", "Project Invoice", "Installment Invoice", "Sell-to Customer No.");
      SalesInvLine.SETRANGE("Job No.", "No.");
      IF SalesInvLine.FINDSET THEN
        REPEAT
          IF SalesInvHeader.GET(SalesInvLine."Document No.") THEN
            IF NOT TmpSalesInvHeader.GET(SalesInvLine."Document No.") THEN BEGIN
              TmpSalesInvHeader := SalesInvHeader;
              TmpSalesInvHeader.INSERT;
            END;
        UNTIL SalesInvLine.NEXT = 0;
      PAGE.RUN(PAGE::"Posted Sales Invoices Ext. PM", TmpSalesInvHeader);
    END;

    LOCAL PROCEDURE RunSalesCrMemos@1100529621();
    VAR
      SalesCrMemoHeader@1100529601 : Record 114;
      SalesCrMemoLine@1100529600 : Record 115;
    BEGIN
      SalesCrMemoHeader.CLEARMARKS;
      SalesCrMemoLine.SETRANGE("Job No.","No.");
      IF SalesCrMemoLine.FINDSET THEN
        REPEAT
          IF SalesCrMemoHeader.GET(SalesCrMemoLine."Document No.") THEN
            SalesCrMemoHeader.MARK(TRUE);
        UNTIL SalesCrMemoLine.NEXT = 0;

      SalesCrMemoHeader.MARKEDONLY(TRUE);

      PAGE.RUN(PAGE::"Posted Sal. Cr. Memos Ext. PM", SalesCrMemoHeader);
    END;

    LOCAL PROCEDURE RunProjectLedgerEntries@1100529234();
    VAR
      JobLedgerEntry@1100529201 : Record 11072005;
      JobLedgerEntries@1100529200 : Page 11129859;
    BEGIN
      JobLedgerEntry.FILTERGROUP(9);
      JobLedgerEntry.SETRANGE("Job No.","No.");
      JobLedgerEntry.FILTERGROUP(0);
      JobLedgerEntries.SETTABLEVIEW(JobLedgerEntry);
      JobLedgerEntries.RUNMODAL;
    END;

    LOCAL PROCEDURE RunProjectSnapshot@1100529624();
    VAR
      ControlProjectSnapshot@1100529600 : Record 11020609;
    BEGIN
      ControlProjectSnapshot.FILTERGROUP(9);
      ControlProjectSnapshot.SETRANGE("Project No.", "No.");
      ControlProjectSnapshot.FILTERGROUP(0);
      ControlProjectSnapshot.SETCURRENTKEY("Project No.");
      PAGE.RUN(0, ControlProjectSnapshot);
    END;

    LOCAL PROCEDURE RunProjectRecording@1100525004();
    VAR
      ProjectRecordingList@1100525000 : Page 11072436;
      ProjectRecording@1100525001 : Record 11072020;
    BEGIN
      ProjectRecording.RESET;
      ProjectRecording.FILTERGROUP(2);
      ProjectRecording.SETRANGE("Project Manager", UserSetup."Employee No.");
      ProjectRecording.FILTERGROUP(0);
      CLEAR(ProjectRecordingList);
      ProjectRecordingList.SETTABLEVIEW(ProjectRecording);
      ProjectRecordingList.RUN;
    END;

    LOCAL PROCEDURE RunPrognosisList@1100525020();
    VAR
      PrognosisList@1100525001 : Page 11012087;
    BEGIN
      TESTFIELD("No.");
      PrognosisList.SetProject("No.");
      PrognosisList.RUNMODAL;
    END;

    LOCAL PROCEDURE ProcessPrognosis@1100528800();
    VAR
      Prognosis@1100525000 : Record 11012034;
      Project@1100529600 : Record 11072003;
      ProjectRespPerson@1100529603 : Record 11012040;
      PrognosisManagement@1100529602 : Codeunit 11020217;
      AutomaticGeneratePrognosis@1100529601 : Report 11012668;
      PrognosisDate@1100529606 : Date;
      CostTypes@1100529604 : 'Cost,Revenue,Both';
      CopyPrognosisAmounts@1100529605 : 'No,CopyEndResult,CopyPrognosisTotal';
    BEGIN
      AutomaticGeneratePrognosis.RUNMODAL;
      AutomaticGeneratePrognosis.GetPrognosisDate(PrognosisDate);

      ProjectSetup.GET;
      ProjectRespPerson.SETCURRENTKEY("Employee No.");
      ProjectRespPerson.SETRANGE("Employee No.", UserSetup."Employee No.");
      ProjectRespPerson.SETRANGE(Responsibility, ProjectSetup."Responsibility Site Manager");
      IF ProjectRespPerson.FINDSET THEN
        REPEAT
          IF NOT Prognosis.GET(ProjectRespPerson."Project No.", PrognosisDate) THEN BEGIN
            Prognosis.INIT;
            Prognosis."Project No." := ProjectRespPerson."Project No.";
            Prognosis.VALIDATE("Prognosis Date",PrognosisDate);
            Prognosis.INSERT(TRUE);
          END;

          Prognosis.SetupDetailedPrognosisOptions;

          Project.GET(ProjectRespPerson."Project No.");
          IF (NOT Prognosis.Fixed) AND (Project."Project Status" < Project."Project Status"::Finished) THEN BEGIN

            PrognosisManagement.CreatePrognosis(Prognosis, CostTypes::Both);

            IF Prognosis."Copy Prev. Cost Prognosis" THEN
              PrognosisManagement.CopyPrevPrognosis(Prognosis, CopyPrognosisAmounts::No, CostTypes::Cost);
            IF Prognosis."Copy Prev. Progn. End Result" THEN
              PrognosisManagement.CopyPrevPrognosis(Prognosis, CopyPrognosisAmounts::CopyEndResult, CostTypes::Cost);
            IF Prognosis."Copy Prev. Progn. Total Cost" THEN
              PrognosisManagement.CopyPrevPrognosis(Prognosis, CopyPrognosisAmounts::CopyPrognosisTotal, CostTypes::Cost);
            IF Prognosis."Copy Prev. Revenue Prognosis" THEN
              PrognosisManagement.CopyPrevPrognosis(Prognosis, CopyPrognosisAmounts::No, CostTypes::Revenue);
            IF Prognosis."Copy Prev. Progn. Tot. Revenue" THEN
              PrognosisManagement.CopyPrevPrognosis(Prognosis, CopyPrognosisAmounts::CopyPrognosisTotal, CostTypes::Revenue);
            IF Prognosis."Copy Comments Prev. Prognosis" THEN
              Prognosis.CopyPreviousComments;

            IF Prognosis."Fill Progn. with Avail. Cost" THEN
              PrognosisManagement.FillPrognosisWithAvailable(Prognosis);
            IF Prognosis."Fill Progn. with extr. Costs" THEN
              PrognosisManagement.FillPrognosisWithXtraPolCost(Prognosis);

            IF Prognosis."Fill Prognosis Revenues" THEN
              PrognosisManagement.FillPrognRevenues(Prognosis);
            IF Prognosis."Calculate Surcharges" THEN BEGIN
              IF "Prognosis Level" = "Prognosis Level"::Detailed THEN BEGIN
                Prognosis."Ovh. Surcharges Calculated" := TRUE;
                Prognosis."Altered After Calculation" := FALSE;
                Prognosis.MODIFY;

                PrognosisManagement.RemoveSurcharges(Prognosis);
                PrognosisManagement.CalculateSurcharges(Prognosis);
              END;
            END;

            IF Prognosis."Calculate Risc Coverage" THEN
              IF "Prognosis Level" = "Prognosis Level"::Detailed THEN
                PrognosisManagement.CalculateRiscCoverage(Prognosis);
          END;
        UNTIL ProjectRespPerson.NEXT = 0;
    END;

    LOCAL PROCEDURE RunProjectPlots@1100529274();
    VAR
      Plot@1100529201 : Record 11012500;
      PlotNumberList@1100529200 : Page 11130303;
    BEGIN
      Plot.FILTERGROUP(9);
      Plot.SETRANGE("Project No.","No.");
      Plot.FILTERGROUP(0);
      PlotNumberList.SETTABLEVIEW(Plot);
      PlotNumberList.RUNMODAL;
    END;

    LOCAL PROCEDURE RunProjectOptionQuotes@1100529298();
    VAR
      OptionQuoteHeader@1100529201 : Record 11012513;
    BEGIN
      OptionQuoteHeader.SETCURRENTKEY("Project No.");
      OptionQuoteHeader.FILTERGROUP(4);
      OptionQuoteHeader.SETRANGE("Project No.", "No.");
      OptionQuoteHeader.FILTERGROUP(0);
      OptionQuoteHeader.SETRANGE("Project No.", "No.");
      PAGE.RUNMODAL(PAGE::"Option Quote List", OptionQuoteHeader);
    END;

    LOCAL PROCEDURE RunOptionBudget@1210190006();
    VAR
      Option@1210190000 : Record 11012502;
    BEGIN
      Option.FILTERGROUP(9);
      Option.SETRANGE("Project No.", "No.");
      Option.FILTERGROUP(0);
      Option.SETRANGE("Plot No.", '');

      PAGE.RUN(PAGE::"Project Option List Ext. PM", Option);
    END;

    LOCAL PROCEDURE RunProjectBudget@1100529632();
    VAR
      ProjectBudget@1100529600 : Page 11129866;
    BEGIN
      ProjectBudget.SetFilter("No.");
      ProjectBudget.RUN;
    END;

    LOCAL PROCEDURE RunBudgetAdjustments@1100529214();
    VAR
      BudgetAdjustment@1100529201 : Record 11012003;
      BudgetAdjustmentList@1100529200 : Page 11129863;
    BEGIN
      BudgetAdjustment.FILTERGROUP(9);
      BudgetAdjustment.SETRANGE("Project No.","No.");
      BudgetAdjustment.FILTERGROUP(0);
      BudgetAdjustmentList.SETTABLEVIEW(BudgetAdjustment);
      BudgetAdjustmentList.RUNMODAL;
    END;

    LOCAL PROCEDURE RunProjectExtensions@1100529384();
    VAR
      ExtensionContract@1100529201 : Record 11012004;
      ExtensionList@1100529200 : Page 11129861;
    BEGIN
      ExtensionContract.FILTERGROUP(9);
      ExtensionContract.SETRANGE("Project No.","No.");
      ExtensionContract.FILTERGROUP(0);
      ExtensionList.SETTABLEVIEW(ExtensionContract);
      ExtensionList.RUNMODAL;
    END;

    LOCAL PROCEDURE RunProjectPrincipals@1100529604();
    VAR
      ProjectPrincipal@1100529600 : Record 11012005;
    BEGIN
      ProjectPrincipal.RESET;
      ProjectPrincipal.FILTERGROUP(4);
      ProjectPrincipal.SETRANGE("Project No.", "No.");
      ProjectPrincipal.FILTERGROUP(0);
      ProjectPrincipal.SETRANGE("Project No.", "No.");
      IF "Bill-to Customer No." <> '' THEN
        IF NOT ProjectPrincipal.GET("No.", "Bill-to Customer No.") THEN
          ProjectPrincipal.SETRANGE(Principal, "Bill-to Customer No.");
      PAGE.RUN(PAGE::"Project Principal List Ext. PM", ProjectPrincipal);
    END;

    LOCAL PROCEDURE ShowDocuments@1100529606();
    VAR
      Project@1100529602 : Record 11072003;
      RecRef@1100529601 : RecordRef;
      DocumentFilters@1100529600 : Codeunit 11012432;
    BEGIN
      IF NOT Project.GET("No.") THEN
        EXIT;
      RecRef.GETTABLE(Project);
      DocumentFilters.CreateTempFilterAndExecute1(RecRef, "Global Dimension 1 Code", FALSE, TRUE);
    END;

    BEGIN
    {
      4PS 24-02-17 UKR-C30065 TTA: Function ProcessPrognosis modified
    }
    END.
  }
}

