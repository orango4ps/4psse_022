OBJECT Page 773 Users in User Groups Chart
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Users in User Groups;
               NOR=Brukere i brukergrupper;
               SVE=Anv„ndare i anv„ndargrupper];
    SourceTable=Table485;
    PageType=CardPart;
    OnFindRecord=BEGIN
                   UpdateChart;
                   IsChartDataReady := TRUE;
                 END;

  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=container;
                ContainerType=ContentArea }

    { 12  ;1   ;Field     ;
                CaptionML=[ENU=Status Text;
                           NOR=Statustekst;
                           SVE=Statustext];
                ToolTipML=[ENU=Specifies the status of the chart.;
                           NOR=Angir statusen til diagrammet.;
                           SVE=Anger diagrammets status.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=StatusText;
                ShowCaption=No }

    { 5   ;1   ;Field     ;
                Name=BusinessChart;
                CaptionML=[ENU=Business Chart;
                           NOR=Organisasjonskart;
                           SVE=Verksamhetsdiagram];
                ToolTipML=[ENU=Specifies if the chart is of type Business Chart.;
                           NOR=Angir om diagrammet er av typen Forretningsdiagram.;
                           SVE=Anger om diagrammet „r av typen Verksamhetsdiagram.];
                ApplicationArea=#Basic,#Suite;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35] }

  }
  CODE
  {
    VAR
      StatusText@1003 : Text[250];
      IsChartDataReady@1020 : Boolean;
      UsersTxt@1000 : TextConst 'ENU=Users;NOR=Brukere;SVE=Anv„ndare';
      UserGroupTxt@1001 : TextConst 'ENU=User Group;NOR=Brukergruppe;SVE=Anv„ndargrupp';

    LOCAL PROCEDURE UpdateChart@6();
    BEGIN
      UpdateData;
      Update(CurrPage.BusinessChart);
    END;

    LOCAL PROCEDURE UpdateData@1();
    VAR
      UsersInUserGroups@1000 : Query 773;
      ColumnNumber@1001 : Integer;
    BEGIN
      Initialize; // Initialize .NET variables for the chart

      // Define Y-Axis
      AddMeasure(UsersTxt,1,"Data Type"::Integer,"Chart Type"::Column);

      // Define X-Axis
      SetXAxis(UserGroupTxt,"Data Type"::String);

      IF NOT UsersInUserGroups.OPEN THEN
        EXIT;

      WHILE UsersInUserGroups.READ DO BEGIN
        // Add data to the chart
        AddColumn(FORMAT(UsersInUserGroups.UserGroupCode)); // X-Axis data
        SetValue(UsersTxt,ColumnNumber,UsersInUserGroups.NumberOfUsers); // Y-Axis data
        ColumnNumber += 1;
      END;
      IsChartDataReady := TRUE;
    END;

    EVENT BusinessChart@-5::DataPointClicked@12(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    VAR
      UserGroupMember@1001 : Record 9001;
    BEGIN
      UserGroupMember.SETRANGE("User Group Code",point.XValueString);
      IF NOT UserGroupMember.FINDFIRST THEN
        EXIT;
      PAGE.RUNMODAL(PAGE::"User Group Members",UserGroupMember);
      CurrPage.UPDATE; // refresh the charts with the eventual changes
    END;

    EVENT BusinessChart@-5::DataPointDoubleClicked@13(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT BusinessChart@-5::AddInReady@14();
    BEGIN
      IF IsChartDataReady THEN
        UpdateChart;
    END;

    EVENT BusinessChart@-5::Refresh@15();
    BEGIN
      IF IsChartDataReady THEN
        UpdateChart;
    END;

    BEGIN
    END.
  }
}

