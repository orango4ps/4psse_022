OBJECT Table 11229450 Mail Template
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Type,Description;
    OnInsert=BEGIN
               CheckName;
               CheckRecord;
             END;

    OnModify=BEGIN
               CheckName;
             END;

    OnDelete=VAR
               MailTemplateAttachment@1100528302 : Record 11229452;
               MailTemplateLayout@1100528300 : Record 11229451;
               MailTemplateTable@1100528301 : Record 11229453;
             BEGIN
               CheckRecord;

               MailTemplateAttachment.SETRANGE("Mail Template No.", "No.");
               MailTemplateAttachment.SETRANGE("Shortcut Dimension 1 Code", "Shortcut Dimension 1 Code");
               MailTemplateAttachment.DELETEALL(TRUE);

               IF (Type = Type::Custom) THEN BEGIN
                 MailTemplateLayout.SETRANGE("Mail Template No.", "No.");
                 MailTemplateLayout.DELETEALL(TRUE);

                 MailTemplateTable.SETRANGE("Mail Template No.", "No.");
                 MailTemplateTable.SETFILTER(Level, '>%1', 1);
                 MailTemplateTable.DELETEALL(TRUE);

                 MailTemplateTable.SETRANGE("Mail Template No.", "No.");
                 MailTemplateTable.SETRANGE(Level, 1);
                 IF (MailTemplateTable.FINDSET(TRUE, TRUE)) THEN BEGIN
                   REPEAT
                     MailTemplateTable.DeleteDetails;
                     MailTemplateTable.DELETE;
                   UNTIL (MailTemplateTable.NEXT = 0);
                 END;
               END;
             END;

    OnRename=BEGIN
               CheckRecord;
             END;

    CaptionML=ENU=Mail Template;
    LookupPageID=Page11129760;
    DrillDownPageID=Page11129760;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Integer       ;OnValidate=BEGIN
                                                                IF (Type = 0) THEN
                                                                  Type := Type::Custom;
                                                                CheckRecord;
                                                                IF ("No." = 0) THEN
                                                                  "No." :=  GetLastCustomNo + 1;
                                                                IF (Type = Type::Custom) AND ("No." < GetFirstCustomNo) THEN
                                                                  FIELDERROR("No.");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=No.;
                                                              SVE=Nr];
                                                   MinValue=1;
                                                   NotBlank=Yes }
    { 20  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              SVE=Genv„g dimension 1 kod];
                                                   Editable=No;
                                                   CaptionClass='1,2,1' }
    { 21  ;   ;Shortcut Dimension 1 Descr;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Dimension Value".Name WHERE (Code=FIELD(Shortcut Dimension 1 Code),
                                                                                                    Global Dimension No.=CONST(1)));
                                                   CaptionML=ENU=Department Description;
                                                   Editable=No }
    { 22  ;   ;Tables              ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Mail Template Table" WHERE (Mail Template No.=FIELD(No.)));
                                                   CaptionML=[ENU=Tables;
                                                              SVE=Tabeller];
                                                   Editable=No }
    { 23  ;   ;Layouts             ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Mail Template Layout" WHERE (Mail Template No.=FIELD(No.)));
                                                   CaptionML=ENU=Layouts;
                                                   Editable=No }
    { 24  ;   ;Attachments         ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Mail Template Attachment" WHERE (Mail Template No.=FIELD(No.)));
                                                   CaptionML=[ENU=Attachments;
                                                              SVE=Bilagor];
                                                   Editable=No }
    { 100 ;   ;Name                ;Text100       ;OnValidate=BEGIN
                                                                Name := DELCHR(Name, '<=>', ' -.,()%&');
                                                                CheckName;
                                                                CheckRecord;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Name;
                                                              SVE=Namn] }
    { 110 ;   ;Source Table No.    ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(TableData));
                                                   OnValidate=VAR
                                                                MailBodyTable@1100528300 : Record 11229453;
                                                              BEGIN
                                                                CheckRecord;
                                                                UpdateBaseTable;
                                                                CALCFIELDS("Source Table Caption", "Source Table Name");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Source Table No. }
    { 111 ;   ;Source Table Name   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Name" WHERE (Object Type=CONST(TableData),
                                                                                                             Object ID=FIELD(Source Table No.)));
                                                   OnValidate=BEGIN
                                                                CheckRecord;
                                                                CALCFIELDS("Source Table Caption", "Source Table Name");
                                                              END;

                                                   CaptionML=ENU=Source Table Name;
                                                   Editable=No }
    { 112 ;   ;Source Table Caption;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(TableData),
                                                                                                                Object ID=FIELD(Source Table No.)));
                                                   CaptionML=ENU=Source Table Caption;
                                                   Editable=No }
    { 120 ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                CheckRecord;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Type;
                                                              SVE=Typ];
                                                   OptionCaptionML=ENU=" ,Project,Service,Plant,Purchase,Sales,Financial,Reminder,Employee/Contact,KAM,Portals,Apps,,,,,,,,,,Other,Custom";
                                                   OptionString=[ ,Project,Service,Plant,Purchase,Sales,Financial,Reminder,Employee,KAM,Portals,Apps,,,,,,,,,,Other,Custom];
                                                   Editable=No }
    { 130 ;   ;Use Mail Template Subject Text;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Use Mail Template Subject Text }
    { 140 ;   ;Description         ;Text100       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Description;
                                                              SVE=Beskrivning] }
    { 230 ;   ;From                ;Text80        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=From;
                                                              SVE=Fr†n] }
    { 240 ;   ;Cc                  ;Text80        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Cc;
                                                              SVE=Kopia] }
    { 250 ;   ;Bcc                 ;Text80        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Bcc;
                                                              SVE=Dold kopia] }
    { 260 ;   ;Pdf Background File Name;Text250   ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=PDF Background File Name }
    { 270 ;   ;Pdf Bckg. File Name First Page;Text250;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=PDF Bckg. File Name First Page }
    { 280 ;   ;Edit in Outlook     ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Edit in Outlook;
                                                              SVE=Redigera i Outlook] }
    { 290 ;   ;Print Pdf without Background;Boolean;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Print PDF without Background }
    { 300 ;   ;From Name           ;Text50        ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=From Name;
                                                              SVE=Fr†n namn] }
    { 310 ;   ;Mail is Html        ;Boolean       ;InitValue=Yes;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Mail is HTML based }
    { 320 ;   ;Active              ;Boolean       ;InitValue=Yes;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Active;
                                                              SVE=Aktiv] }
  }
  KEYS
  {
    {    ;No.,Shortcut Dimension 1 Code           ;Clustered=Yes }
    {    ;Type,Name,Shortcut Dimension 1 Code      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      AllObjWithCaptionManagement@1100528300 : Codeunit 11125358;
      AlreadyExistsTxt@1100528301 : TextConst 'ENU=''%1'' already exists';

    PROCEDURE CopyToDepartment@1100528303();
    VAR
      DimensionValue@1100528300 : Record 349;
      MailTemplateTo@1100528301 : Record 11229450;
      MailTemplateAttachmentFrom@1100528302 : Record 11229452;
      MailTemplateAttachmentTo@1100528303 : Record 11229452;
    BEGIN
      DimensionValue.SETFILTER(Code, '<>%1', "Shortcut Dimension 1 Code");
      DimensionValue.SETRANGE("Global Dimension No.", 1);
      IF (PAGE.RUNMODAL(0, DimensionValue) = ACTION::LookupOK) THEN BEGIN
        MailTemplateTo.COPY(Rec);
        MailTemplateTo."Shortcut Dimension 1 Code" := DimensionValue.Code;
        MailTemplateTo.INSERT;

        MailTemplateAttachmentFrom.SETRANGE("Mail Template No.", "No.");
        MailTemplateAttachmentFrom.SETRANGE("Shortcut Dimension 1 Code", "Shortcut Dimension 1 Code");
        IF (MailTemplateAttachmentFrom.FINDSET) THEN BEGIN
          REPEAT
            MailTemplateAttachmentTo.COPY(MailTemplateAttachmentFrom);
            MailTemplateAttachmentTo."Shortcut Dimension 1 Code" := MailTemplateTo."Shortcut Dimension 1 Code";
            MailTemplateAttachmentTo.INSERT;
          UNTIL (MailTemplateAttachmentFrom.NEXT = 0);
        END;
      END;
    END;

    PROCEDURE ToggleActive@1100528307(MailTemplate@1100528301 : Record 11229450;NewValue@1100528300 : Boolean);
    BEGIN
      IF (NOT MailTemplate.FINDSET(TRUE)) THEN
        EXIT;
      REPEAT
        MailTemplate.Active := NewValue;
        MailTemplate.MODIFY;
      UNTIL (MailTemplate.NEXT = 0);
    END;

    PROCEDURE UpdateBaseTable@1100528302();
    VAR
      MailTemplateTable@1100528300 : Record 11229453;
    BEGIN
      IF (NOT MailTemplateTable.GET("No.", 1, "Source Table No.", 0)) THEN BEGIN
        MailTemplateTable.INIT;
        MailTemplateTable.VALIDATE("Mail Template No.", "No.");
        MailTemplateTable.VALIDATE(Level, 1);
        MailTemplateTable.VALIDATE("Table No.", "Source Table No.");
        MailTemplateTable.VALIDATE("Seq. No.", 0);
        MailTemplateTable.INSERT(TRUE);
      END;
      MailTemplateTable.CALCFIELDS("Table Caption", "Table Name");
      MailTemplateTable.VALIDATE("Element Prefix", MailTemplateTable."Table Caption");
      MailTemplateTable."Parent Table No." := "Source Table No.";
      MailTemplateTable."Parent Level" := 1;
      MailTemplateTable.MODIFY(TRUE);

      MailTemplateTable.SETRANGE("Mail Template No.", "No.");
      MailTemplateTable.SETRANGE(Level, 1);
      MailTemplateTable.SETFILTER("Table No.", '<>%1', "Source Table No.");
      MailTemplateTable.SETRANGE("Seq. No.", 0);
      MailTemplateTable.MODIFYALL("Parent Table No.", 0);
    END;

    LOCAL PROCEDURE "---Locals---"@1100528301();
    BEGIN
    END;

    LOCAL PROCEDURE CheckName@1100528305();
    VAR
      MailTemplate@1100528300 : Record 11229450;
    BEGIN
      MailTemplate.SETFILTER("No.", '<>%1', "No.");
      MailTemplate.SETRANGE(Type, Type);
      MailTemplate.SETFILTER(Name, '@'+Name);
      IF (NOT MailTemplate.ISEMPTY) THEN
        FIELDERROR(Name, STRSUBSTNO(AlreadyExistsTxt, Name));
    END;

    LOCAL PROCEDURE CheckRecord@1100528300();
    VAR
      MailTemplate@1100528300 : Record 11229450;
    BEGIN
      CASE TRUE OF
        (Type = Type::Custom): BEGIN
          IF ("Source Table No." = 0) AND ("Shortcut Dimension 1 Code" <> '') THEN
            FIELDERROR("Source Table No.");
        END;
        ("Shortcut Dimension 1 Code" = ''): BEGIN
          TESTFIELD(Type, Type::Custom);
          IF ("Source Table No." <> xRec."Source Table No.") THEN BEGIN
            MailTemplate.SETRANGE("No.", "No.");
            MailTemplate.SETFILTER("Shortcut Dimension 1 Code", '<>%1', "Shortcut Dimension 1 Code");
            IF (NOT MailTemplate.ISEMPTY) THEN
              FIELDERROR("Source Table No.");
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE GetFirstCustomNo@1100528306() : Integer;
    BEGIN
      EXIT(10000);
    END;

    LOCAL PROCEDURE GetLastCustomNo@1100528304() : Integer;
    VAR
      MailTemplate@1100528300 : Record 11229450;
    BEGIN
      IF (Type <> Type::Custom) THEN
        EXIT("No.");
      MailTemplate.SETFILTER("No.", '>=%1', GetFirstCustomNo);
      IF (MailTemplate.FINDLAST) THEN BEGIN
        EXIT(MailTemplate."No.");
      END;
      EXIT(GetFirstCustomNo - 1);
    END;

    BEGIN
    END.
  }
}

