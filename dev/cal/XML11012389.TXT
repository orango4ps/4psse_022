OBJECT XMLport 11012389 Import Employees Paymaster
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Employees Paymaster;
               SVE=Importera anst„llda, Paymaster];
    Direction=Import;
    DefaultFieldsValidation=No;
    PreserveWhiteSpace=Yes;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    HumanResourcesSetup.GET;
                    HumanResourcesSetup.TESTFIELD("Salary Application",HumanResourcesSetup."Salary Application"::Paymaster);
                    HumanResourcesSetup.TESTFIELD("Exchange Salary Application");
                    HumanResourcesSetup.TESTFIELD("Pathname Files from Salary");

                    currXMLport.FILENAME(HumanResourcesSetup."Pathname Files from Salary");

                    IF GUIALLOWED THEN
                      IF CONFIRM(Text004, TRUE) THEN
                        SkipLine := TRUE;
                  END;

    OnPostXMLport=BEGIN
                    OldFile := currXMLport.FILENAME;
                    NewFile := HumanResourcesSetup.DetermineBackupFile(OldFile);
                    IF NewFile <> OldFile THEN
                      FileMgt.RenameClientFile(OldFile, NewFile, TRUE);
                  END;

    Format=Variable Text;
    FieldDelimiter=<None>;
    FieldSeparator=[;];
    UseRequestPage=No;
  }
  ELEMENTS
  {
    { [{71885F4B-FDC2-4AC7-81D0-B30B4FC89660}];  ;Root                ;Element ;Text     }

    { [{E0D389D6-7808-4061-B40B-3661AFF87A55}];1 ;Employee            ;Element ;Table   ;
                                                  SourceTable=Table5200;
                                                  SourceTableView=SORTING(Field1);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              IF SkipLine THEN BEGIN
                                                                                SkipLine := FALSE;
                                                                                currXMLport.SKIP;
                                                                              END;

                                                                              Employee.INIT;
                                                                              CLEAR(gvEmployee);
                                                                              CLEAR(gvInitials);
                                                                              CLEAR(gvMiddleName);
                                                                              CLEAR(gvLastName);
                                                                              CLEAR(gvFirstName);
                                                                              CLEAR(gvAddress);
                                                                              CLEAR(gvCity);
                                                                              CLEAR(gvPostCode);
                                                                              CLEAR(gvPhone);
                                                                              CLEAR(gvMobilePhone);
                                                                              CLEAR(gvExtension);
                                                                              CLEAR(gvEmail);
                                                                              CLEAR(gvGenderText);
                                                                              CLEAR(gvSocialSecurityNo);
                                                                              CLEAR(gvBirthDateText);
                                                                              CLEAR(gvEmployer);
                                                                              CLEAR(gvDimension1);
                                                                              CLEAR(gvTradeAssText);
                                                                              CLEAR(gvSalaryText);
                                                                              CLEAR(gvNormHoursTxt);
                                                                              CLEAR(gvNormDaysTxt);
                                                                              CLEAR(gvEmploymentDateText);
                                                                              CLEAR(gvTerminationDateText);
                                                                              CLEAR(gvUTA);
                                                                              CLEAR(gvCAO);
                                                                              CLEAR(gvJobTitle);
                                                                              CLEAR(gvCalcWageCosts);
                                                                              CLEAR(gvAccHours);
                                                                              CLEAR(gvPhoneNoCompany);
                                                                              CLEAR(gvMobilePhoneCompany);
                                                                              CLEAR(gvEmailCompany);
                                                                              PhoneCompanyAdded := FALSE;
                                                                              MobilePhoneCompanyAdded := FALSE;
                                                                              EmailCompanyAdded := FALSE;
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 OldEmplRec@1100528400 : Record 5200;
                                                                                 RecRef@1100528401 : RecordRef;
                                                                               BEGIN
                                                                                 IF (gvEmployee = '') AND
                                                                                    (gvInitials = '') AND
                                                                                    (gvMiddleName = '') AND
                                                                                    (gvLastName = '') AND
                                                                                    (gvFirstName = '')
                                                                                 THEN
                                                                                   currXMLport.SKIP;

                                                                                 IF EmplRec.GET(gvEmployee) THEN BEGIN
                                                                                   OldEmplRec := EmplRec;
                                                                                   FillFields;
                                                                                   EmplRec.OnModifyRelation(EmplRec, OldEmplRec);
                                                                                 END ELSE BEGIN
                                                                                   EmplRec.INIT;
                                                                                   EmplRec."No." := gvEmployee;
                                                                                   EmplRec.INSERT(TRUE);
                                                                                   FillFields;
                                                                                 END;
                                                                                 RecRef.GETTABLE(EmplRec);
                                                                                 XMLportStatusDialogMgt.ShowImportStatus(RecRef);
                                                                                 EmplRec.MODIFY(TRUE);
                                                                                 CLEARALL;

                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{9E09B3D7-F947-45C2-BF14-9436A1FBF4CF}];2 ;gvEmployee          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{F21FFCF1-DE1E-4ED6-A58E-30976D685E38}];2 ;gvInitials          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{97466E79-2C2B-42F3-B775-0198A5B4B13B}];2 ;gvMiddleName        ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{57940499-8CE7-413C-BDB0-97AE4475EA5A}];2 ;gvLastName          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{E841C4D8-ACFB-4B4F-AED7-61ACF6DA7A7A}];2 ;gvFirstName         ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  gvFirstName := COPYSTR(gvFirstName, 1, 30);
                                                                                END;
                                                                                 }

    { [{7621C331-9A26-47DB-B0B9-CEF32C5A0749}];2 ;gvAddress           ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{752C6420-DDBB-428C-9097-452725963B83}];2 ;gvCity              ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{C165EC33-C4B0-4B35-BE2A-4D5F7AC6E027}];2 ;gvPostCode          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{CD17D786-2BDC-4928-8536-B0085C8BF2EC}];2 ;gvPhone             ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{4375511D-3BF9-4565-9A5B-4C8C228A7C99}];2 ;gvMobilePhone       ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{C7B7DDC9-8430-40F2-B02C-5A4B24DD1C82}];2 ;gvExtension         ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{6DE0BEBA-0C83-4D66-A1E7-92470F48ED2E}];2 ;gvEmail             ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{088D625E-E140-4EF7-AB21-4DCFD32E696D}];2 ;gvGenderText        ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{B1A0A4A7-0106-48DD-9B86-5691E6FDA51F}];2 ;gvSocialSecurityNo  ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{9AD79882-BEB7-4F72-965E-0DD262BB7997}];2 ;gvBirthDateText     ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{E2ED6D51-512C-4A61-8D78-6D125AC1BC2F}];2 ;gvEmployer          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{895B59E5-EE61-40D3-B4CE-F11344A3D3D8}];2 ;gvDimension1        ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{1C016000-4AA7-4229-911B-FABA771C3CC3}];2 ;gvTradeAssText      ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{C73B5611-B54A-4236-A12B-AADBC2A1CE80}];2 ;gvSalaryText        ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{8DBDCD9C-4A76-456E-A45D-93994F100664}];2 ;gvNormHoursTxt      ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  FillEmptyTextWithZero(gvNormHoursTxt);
                                                                                  gvNormHoursTxt := CONVERTSTR(gvNormHoursTxt, '.', ',');
                                                                                  EVALUATE(gvNormHours, gvNormHoursTxt);
                                                                                END;
                                                                                 }

    { [{2D6FCF5F-5633-4F82-9930-8E1685F28A5E}];2 ;gvNormDaysTxt       ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  FillEmptyTextWithZero(gvNormDaysTxt);
                                                                                  gvNormDaysTxt := CONVERTSTR(gvNormDaysTxt, '.', ',');
                                                                                  EVALUATE(gvNormDays, gvNormDaysTxt);
                                                                                END;
                                                                                 }

    { [{C7A45905-E389-4CF6-843C-963580B0AFA9}];2 ;gvEmploymentDateText;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{509E90C2-B2E5-4D5A-8685-F90EE32C922A}];2 ;gvTerminationDateText;Element;Text    ;
                                                  MinOccurs=Zero }

    { [{F35C58D3-E08F-44ED-BB54-B5B48819A8B9}];2 ;gvUTA               ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{B4A7484B-BEC6-4F36-82A4-987BE27301AF}];2 ;gvCAO               ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{96214CBA-6FC0-4FF6-8385-86119A0E762A}];2 ;gvJobTitle          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{95AE08CD-5CB7-45C0-B0E5-B6188F871E36}];2 ;gvCalcWageCosts     ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{91F1206B-DB5D-452C-8EBE-FE1BB4773AFB}];2 ;gvAccHours          ;Element ;Text    ;
                                                  MinOccurs=Zero }

    { [{875FF350-46AA-4201-9659-EBE4E392D368}];2 ;gvPhoneNoCompany    ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  PhoneCompanyAdded := TRUE;
                                                                                END;
                                                                                 }

    { [{F9B400A1-7507-4C6D-BEF1-37570C41CBA8}];2 ;gvMobilePhoneCompany;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  MobilePhoneCompanyAdded := TRUE;
                                                                                END;
                                                                                 }

    { [{18CBDFF1-11CE-4D8C-9F38-FB2BCCB5B4C1}];2 ;gvEmailCompany      ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  EmailCompanyAdded := TRUE;
                                                                                END;
                                                                                 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      HumanResourcesSetup@1100528431 : Record 5218;
      EmplRec@1100528430 : Record 5200;
      FileMgt@1100528403 : Codeunit 419;
      XMLportStatusDialogMgt@1100528404 : Codeunit 11130006;
      OldFile@1100528429 : Text[250];
      NewFile@1100528428 : Text[250];
      gvNormHours@1100485002 : Decimal;
      gvNormDays@1100485001 : Integer;
      PhoneCompanyAdded@1100525000 : Boolean;
      MobilePhoneCompanyAdded@1100525001 : Boolean;
      EmailCompanyAdded@1100525002 : Boolean;
      SkipLine@1100525003 : Boolean;
      Text004@1100525004 : TextConst 'ENU=File contains a header line?';

    PROCEDURE ConvDate@1210190000(HelpDateText@1210190000 : Text[30]) : Date;
    VAR
      HelpYear@1210190001 : Integer;
      HelpMonth@1210190002 : Integer;
      HelpDay@1210190003 : Integer;
    BEGIN
      HelpDateText := DELCHR(HelpDateText, '=', '-/\');
      EVALUATE(HelpYear,COPYSTR(HelpDateText,5,4));
      EVALUATE(HelpMonth,COPYSTR(HelpDateText,3,2));
      EVALUATE(HelpDay,COPYSTR(HelpDateText,1,2));
      EXIT(DMY2DATE(HelpDay,HelpMonth,HelpYear));
    END;

    PROCEDURE FillFields@1210190009();
    BEGIN
      WITH EmplRec DO BEGIN
        "First Name" := gvFirstName;
        "Middle Name" := gvMiddleName;
        "Last Name" := gvLastName;
        Initials := gvInitials;
        Address := gvAddress;
        City := gvCity;
        "Post Code" := gvPostCode;
        "Phone No." := gvPhone;
        "Mobile Phone No." := gvMobilePhone;
        Extension := gvExtension;
        "E-Mail" := gvEmail;
        "Social Security No." := gvSocialSecurityNo;
        Employer := gvEmployer;
        VALIDATE("Global Dimension 1 Code", gvDimension1);
        "Norm Hours" := gvNormHours;
        "Norm Days" := gvNormDays;
        VALIDATE(CAO, gvCAO);
        "Job Title":= gvJobTitle;
        IF PhoneCompanyAdded THEN
          VALIDATE("Company Phone No.", gvPhoneNoCompany);
        IF MobilePhoneCompanyAdded THEN
          VALIDATE("Company Mobile Phone No.", gvMobilePhoneCompany);
        IF EmailCompanyAdded THEN
          VALIDATE("Company E-Mail", gvEmailCompany);
        UTA := (gvUTA = 'True');

        CASE gvCalcWageCosts OF
          'F':
            "Calculate Wage Costs" := "Calculate Wage Costs"::"Fixed Rate";
          'A':
            "Calculate Wage Costs" := "Calculate Wage Costs"::"Actual Rate";
        END;

        CASE gvGenderText OF
          'M':
            Gender := Gender::Male;
          'V':
            Gender := Gender::Female;
          ELSE
            Gender := Gender::" ";
        END;

        IF gvTradeAssText <> '' THEN
          "Trade Association" := gvTradeAssText;
        IF (gvBirthDateText <> '') AND (gvBirthDateText <> '0') THEN
          "Birth Date" := ConvDate(gvBirthDateText);
        IF (gvEmploymentDateText <> '') AND (gvEmploymentDateText <> '0') THEN
          "Employment Date" := ConvDate(gvEmploymentDateText)
        ELSE
          "Employment Date" := 0D;

        CASE gvAccHours OF
          'R':
            "Account Hours" := "Account Hours"::"Required according to Norm";
          'O':
            BEGIN
              "Account Hours" := "Account Hours"::Optional;
              "Norm Hours" := 0;
              "Norm Days" := 0;
            END;
          'N':
            BEGIN
              "Account Hours" := "Account Hours"::"Not allowed";
              "Norm Hours" := 0;
              "Norm Days" := 0;
            END;
        END;

        IF gvTerminationDateText <> '' THEN BEGIN
          "Termination Date" := ConvDate(gvTerminationDateText);
          Status := Status::Terminated;
        END ELSE BEGIN
          "Termination Date" := 0D;
          Status := Status::Active;
        END;
        "Last Date Modified" := TODAY;
        "Search Name" := '';
        VALIDATE("Last Name");
        DetermineAccountHours;
      END;
    END;

    PROCEDURE FillEmptyTextWithZero@1100525013(VAR Text@1100525000 : Text[1024]);
    BEGIN
      IF DELCHR(Text,'<>=',' ') = '' THEN
        Text := '0';
    END;

    BEGIN
    END.
  }
}

