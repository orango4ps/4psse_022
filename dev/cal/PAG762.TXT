OBJECT Page 762 Finance Performance
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Finance Performance;
               NOR=Finansytelse;
               SVE=Finansiella prestanda];
    SourceTable=Table485;
    PageType=CardPart;
    ActionList=ACTIONS
    {
      { 23      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 18      ;1   ;Action    ;
                      Name=SelectChart;
                      CaptionML=[ENU=Select Chart;
                                 NOR=Velg diagram;
                                 SVE=VÑlj diagram];
                      ToolTipML=[ENU=Select the analysis report that the chart will be based on.;
                                 NOR=Velg analyserapporten som diagrammet skal baseres pÜ.;
                                 SVE=VÑlj den analysrapport som ska ligga till grund fîr diagrammet.];
                      ApplicationArea=#Basic,#Suite;
                      Image=SelectChart;
                      OnAction=VAR
                                 AccountSchedulesChartSetup2@1002 : Record 762;
                               BEGIN
                                 AccountSchedulesChartSetup2.SETFILTER("User ID",'%1|%2',USERID,'');
                                 AccountSchedulesChartSetup2 := AccountSchedulesChartSetup;
                                 IF PAGE.RUNMODAL(0,AccountSchedulesChartSetup2) = ACTION::LookupOK THEN BEGIN
                                   AccountSchedulesChartSetup := AccountSchedulesChartSetup2;
                                   InitializePeriodFilter(0D,0D);
                                   UpdateChart(Period::" ");
                                 END;
                               END;
                                }
      { 6       ;1   ;Action    ;
                      Name=PreviousChart;
                      CaptionML=[ENU=Previous Chart;
                                 NOR=Forrige diagram;
                                 SVE=FîregÜende diagram];
                      ToolTipML=[ENU=View the previous chart.;
                                 NOR=Vis det forrige diagrammet.;
                                 SVE=Visa fîregÜende diagram.];
                      ApplicationArea=#Basic,#Suite;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 IF StatusText <> '' THEN
                                   MoveAndUpdateChart(Period::" ",-1)
                               END;
                                }
      { 4       ;1   ;Action    ;
                      Name=NextChart;
                      CaptionML=[ENU=Next Chart;
                                 NOR=Neste diagram;
                                 SVE=NÑsta diagram];
                      ToolTipML=[ENU=View the next chart.;
                                 NOR=Vis det neste diagrammet.;
                                 SVE=Visa nÑsta diagram.];
                      ApplicationArea=#Basic,#Suite;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 IF StatusText <> '' THEN
                                   MoveAndUpdateChart(Period::" ",1)
                               END;
                                }
      { 5       ;1   ;Separator  }
      { 15      ;1   ;ActionGroup;
                      Name=PeriodLength;
                      CaptionML=[ENU=Period Length;
                                 NOR=Periodelengde;
                                 SVE=Period];
                      Image=Period }
      { 14      ;2   ;Action    ;
                      Name=Day;
                      CaptionML=[ENU=Day;
                                 NOR=Dag;
                                 SVE=Dag];
                      ToolTipML=[ENU=Each stack covers one day.;
                                 NOR=Hver stakk omfatter Çn dag.;
                                 SVE=Varje stack omfattar en dag.];
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AccountSchedulesChartSetup.SetPeriodLength(AccountSchedulesChartSetup."Period Length"::Day);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=Week;
                      CaptionML=[ENU=Week;
                                 NOR=Uke;
                                 SVE=Vecka];
                      ToolTipML=[ENU=Each stack except for the last stack covers one week. The last stack contains data from the start of the week until the date that is defined by the Show option.;
                                 NOR=Hver stakk, bortsett fra den siste stakken, omfatter Çn uke. Den siste stakken inneholder data fra starten av uken til datoen som er definert av alternativet Vis.;
                                 SVE=Varje stack, fîrutom den senaste stacken, omfattar en vecka. Den senaste stacken innehÜller data frÜn bîrjan av veckan och fram tills det datum som anges med alternativet Visa.];
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AccountSchedulesChartSetup.SetPeriodLength(AccountSchedulesChartSetup."Period Length"::Week);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 12      ;2   ;Action    ;
                      Name=Month;
                      CaptionML=[ENU=Month;
                                 NOR=MÜned;
                                 SVE=MÜnad];
                      ToolTipML=[ENU=Each stack except for the last stack covers one month. The last stack contains data from the start of the month until the date that is defined by the Show option.;
                                 NOR=Hver stakk, bortsett fra den siste stakken, omfatter Çn mÜned. Den siste stakken inneholder data fra starten av mÜneden til datoen som er definert av alternativet Vis.;
                                 SVE=Varje stack, fîrutom den senaste stacken, omfattar en mÜnad. Den senaste stacken innehÜller data frÜn bîrjan av mÜnaden och fram tills det datum som anges med alternativet Visa.];
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AccountSchedulesChartSetup.SetPeriodLength(AccountSchedulesChartSetup."Period Length"::Month);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 11      ;2   ;Action    ;
                      Name=Quarter;
                      CaptionML=[ENU=Quarter;
                                 NOR=Kvartal;
                                 SVE=Kvartal];
                      ToolTipML=[ENU=Each stack except for the last stack covers one quarter. The last stack contains data from the start of the quarter until the date that is defined by the Show option.;
                                 NOR=Hver stakk, bortsett fra den siste stakken, omfatter ett kvartal. Den siste stakken inneholder data fra starten av kvartalet til datoen som er definert av alternativet Vis.;
                                 SVE=Varje stack, fîrutom den senaste stacken, omfattar ett kvartal. Den senaste stacken innehÜller data frÜn bîrjan av kvartalet och fram tills det datum som anges med alternativet Visa.];
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AccountSchedulesChartSetup.SetPeriodLength(AccountSchedulesChartSetup."Period Length"::Quarter);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=Year;
                      CaptionML=[ENU=Year;
                                 NOR=èr;
                                 SVE=èr];
                      ToolTipML=[ENU=Each stack except for the last stack covers one year. The last stack contains data from the start of the year until the date that is defined by the Show option.;
                                 NOR=Hver stakk, bortsett fra den siste stakken, omfatter ett Ür. Den siste stakken inneholder data fra starten av Üret til datoen som er definert av alternativet Vis.;
                                 SVE=Varje stack, fîrutom den senaste stacken, omfattar ett Ür. Den senaste stacken innehÜller data frÜn bîrjan av Üret och fram tills det datum som anges med alternativet Visa.];
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AccountSchedulesChartSetup.SetPeriodLength(AccountSchedulesChartSetup."Period Length"::Year);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 16      ;1   ;Action    ;
                      Name=PreviousPeriod;
                      CaptionML=[ENU=Previous Period;
                                 NOR=Forrige periode;
                                 SVE=FîregÜende period];
                      ToolTipML=[ENU=Show the information based on the previous period. If you set the View by field to Day, the date filter changes to the day before.;
                                 NOR=Vis informasjonen basert pÜ den forrige perioden. Hvis du setter feltet Vis etter til Dag, endres datofiltret til dagen fõr.;
                                 SVE=Visa informationen baserad pÜ fîregÜende period. Om du stÑller in fÑltet Visa efter pÜ Dag Ñndras dagsfiltret till dagen fîre.];
                      ApplicationArea=#Basic,#Suite;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 UpdateChart(Period::Previous);
                               END;
                                }
      { 17      ;1   ;Action    ;
                      Name=NextPeriod;
                      CaptionML=[ENU=Next Period;
                                 NOR=Neste periode;
                                 SVE=NÑsta period];
                      ToolTipML=[ENU=Show the information based on the next period. If you set the View by field to Day, the date filter changes to the day before.;
                                 NOR=Vis informasjonen basert pÜ den neste perioden. Hvis du setter feltet Vis etter til Dag, endres datofiltret til dagen fõr.;
                                 SVE=Visa informationen baserad pÜ nÑsta period. Om du stÑller in fÑltet Visa efter pÜ Dag Ñndras dagsfiltret till dagen fîre.];
                      ApplicationArea=#Basic,#Suite;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 UpdateChart(Period::Next);
                               END;
                                }
      { 7       ;1   ;Separator  }
      { 8       ;1   ;Action    ;
                      Name=ChartInformation;
                      CaptionML=[ENU=Chart Information;
                                 NOR=Diagraminformasjon;
                                 SVE=Diagraminformation];
                      ToolTipML=[ENU=View a description of the chart.;
                                 NOR=Vis en beskrivelse av diagrammet.;
                                 SVE=Visa en beskrivning av diagrammet.];
                      ApplicationArea=#Basic,#Suite;
                      Image=AboutNav;
                      OnAction=BEGIN
                                 IF StatusText = '' THEN
                                   EXIT;
                                 IF AccountSchedulesChartSetup.Description = '' THEN
                                   MESSAGE(NoDescriptionMsg)
                                 ELSE
                                   MESSAGE(AccountSchedulesChartSetup.Description);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=container;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                Name=Status Text;
                CaptionML=[ENU=Status Text;
                           NOR=Statustekst;
                           SVE=Statustext];
                ToolTipML=[ENU=Specifies the status of the chart.;
                           NOR=Angir statusen til diagrammet.;
                           SVE=Anger diagrammets status.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=StatusText;
                Enabled=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE;
                ShowCaption=No }

    { 3   ;1   ;Field     ;
                Name=BusinessChart;
                ApplicationArea=#Basic,#Suite;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35] }

  }
  CODE
  {
    VAR
      AccountSchedulesChartSetup@1004 : Record 762;
      AccSchedChartManagement@1002 : Codeunit 762;
      StatusText@1001 : Text[250];
      Period@1005 : ' ,Next,Previous';
      Text001@1000 : TextConst '@@@=%1 Account Schedule Chart Setup Name, %2 Period Length, %3 Current time;ENU=%1 | %2 (Updated %3);NOR=%1 | %2 (oppdatert %3);SVE=%1 | %2 (Updaterad %3)';
      Text002@1003 : TextConst '@@@="%1 Account Schedule Chart Setup Name, %2 = Start Date, %3 = End Date, %4 Period Length, %5 Current time";ENU=%1 | %2..%3 | %4 (Updated %5);NOR=%1 | %2..%3 | %4 (oppdatert %5);SVE=%1 | %2..%3 | %4 (Uppdaterade %5)';
      NoDescriptionMsg@1006 : TextConst 'ENU=A description was not specified for this chart.;NOR=Det er ikke angitt en beskrivelse for dette diagrammet.;SVE=Ingen beskrivning har angetts fîr det hÑr diagrammet.';
      IsChartAddInReady@1007 : Boolean;

    LOCAL PROCEDURE UpdateChart@6(Period@1000 : ',Next,Previous');
    BEGIN
      MoveAndUpdateChart(Period,0);
    END;

    LOCAL PROCEDURE MoveAndUpdateChart@3(Period@1000 : ',Next,Previous';Move@1001 : Integer);
    BEGIN
      IF NOT IsChartAddInReady THEN
        EXIT;
      AccSchedChartManagement.GetSetupRecordset(AccountSchedulesChartSetup,AccountSchedulesChartSetup.Name,Move);
      AccSchedChartManagement.UpdateData(Rec,Period,AccountSchedulesChartSetup);
      Update(CurrPage.BusinessChart);
      StatusText := GetCurrentSelectionText("Period Filter Start Date","Period Filter End Date");
    END;

    LOCAL PROCEDURE GetCurrentSelectionText@1(FromDate@1002 : Date;ToDate@1003 : Date) : Text[100];
    BEGIN
      WITH AccountSchedulesChartSetup DO
        CASE "Base X-Axis on" OF
          "Base X-Axis on"::Period:
            EXIT(STRSUBSTNO(Text001,Name,"Period Length",TIME));
          "Base X-Axis on"::"Acc. Sched. Line",
          "Base X-Axis on"::"Acc. Sched. Column":
            EXIT(STRSUBSTNO(Text002,Name,FromDate,ToDate,"Period Length",TIME));
        END;
    END;

    EVENT BusinessChart@-5::DataPointClicked@12(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
      SetDrillDownIndexes(point);
      AccSchedChartManagement.DrillDown(Rec,AccountSchedulesChartSetup);
    END;

    EVENT BusinessChart@-5::DataPointDoubleClicked@13(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=14.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT BusinessChart@-3::AddInReady@14();
    BEGIN
      IsChartAddInReady := TRUE;
      UpdateChart(Period::" ");
    END;

    EVENT BusinessChart@-5::Refresh@15();
    BEGIN
      IF IsChartAddInReady THEN BEGIN
        InitializePeriodFilter(0D,0D);
        UpdateChart(Period::" ");
      END;
    END;

    BEGIN
    END.
  }
}

