OBJECT Page 9172 User Personalization Card
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=User Personalization Card;
               NOR=Brukertilpasningskort;
               SVE=Anv.anpassningskort];
    SourceTable=Table2000000073;
    DataCaptionExpr="User ID";
    DelayedInsert=Yes;
    PageType=Card;
    OnOpenPage=BEGIN
                 HideExternalUsers;
               END;

    OnInsertRecord=BEGIN
                     TESTFIELD("User SID");
                   END;

    OnModifyRecord=BEGIN
                     TESTFIELD("User SID");
                   END;

    OnQueryClosePage=BEGIN
                       IF RequiresRestart AND (CloseAction <> ACTION::Cancel) THEN
                         RestartSession;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           ProfileID := "Profile ID";
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 13      ;1   ;ActionGroup;
                      CaptionML=[ENU=User &Personalization;
                                 NOR=&Brukertilpasning;
                                 SVE=Anv„ndaran&passning];
                      Image=Grid }
      { 14      ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+L;
                      CaptionML=[ENU=List;
                                 NOR=Oversikt;
                                 SVE=Lista];
                      ToolTipML=[ENU=View or edit a list of all users who have personalized their user interface by customizing one or more pages.;
                                 NOR=Vis eller rediger en liste med alle brukere som har tilpasset brukergrensesnittet ved † tilpasse ‚n eller flere sider.;
                                 SVE=Visa eller redigera en lista med alla anv„ndare som har anpassat sitt anv„ndargr„nssnitt genom att anpassa en eller flera sidor.];
                      ApplicationArea=#Basic,#Suite;
                      Image=OpportunitiesList;
                      OnAction=VAR
                                 UserPersList@1102601000 : Page 9173;
                               BEGIN
                                 UserPersList.LOOKUPMODE := TRUE;
                                 UserPersList.SETRECORD(Rec);
                                 IF UserPersList.RUNMODAL = ACTION::LookupOK THEN
                                   UserPersList.GETRECORD(Rec);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 20      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 NOR=F&unksjoner;
                                 SVE=F&unktioner];
                      Image=Action }
      { 21      ;2   ;Action    ;
                      CaptionML=[ENU=C&lear Personalized Pages;
                                 NOR=&Fjern tilpassede sider;
                                 SVE=R&ensa anpassade sidor];
                      ToolTipML=[ENU=Delete all personalizations made by the specified user across display targets.;
                                 NOR=Slett alle tilpassinger som er gjort av den angitte brukeren p† tvers av visningsm†l.;
                                 SVE=Ta bort alla anpassningar som har gjorts av den angivna anv„ndaren f”r visningsm†l.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Cancel;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ConfPersMgt.ClearUserPersonalization(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=Allm„nt] }

    { 4   ;2   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=User ID;
                           NOR=Bruker-ID;
                           SVE=Anv„ndar-ID];
                ToolTipML=[ENU=Specifies the user ID of a user who is using Database Server Authentication to log on to Business Central.;
                           NOR=Angir bruker-ID-en for en bruker som bruker Databaseservergodkjenning til † logge p† Business Central.;
                           SVE=Anger anv„ndar-ID:t f”r en anv„ndare som anv„nder Databasserververifiering f”r att logga in i Business Central.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="User ID";
                Editable=FALSE;
                OnAssistEdit=VAR
                               UserPersonalization@1005 : Record 2000000073;
                               UserMgt@1002 : Codeunit 418;
                               SID@1006 : GUID;
                               UserID@1001 : Code[50];
                             BEGIN
                               UserMgt.LookupUser(UserID,SID);

                               IF (SID <> "User SID") AND NOT ISNULLGUID(SID) THEN BEGIN
                                 IF UserPersonalization.GET(SID) THEN BEGIN
                                   UserPersonalization.CALCFIELDS("User ID");
                                   ERROR(Text000,TABLECAPTION,UserPersonalization."User ID");
                                 END;

                                 VALIDATE("User SID",SID);
                                 CALCFIELDS("User ID");

                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 6   ;2   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=Profile ID;
                           NOR=Profil-ID;
                           SVE=Profil-ID];
                ToolTipML=[ENU=Specifies the ID of the profile that is associated with the current user.;
                           NOR=Angir ID-en for profilen som er knyttet til den gjeldende brukeren.;
                           SVE=Anger id:t f”r den profil som „r kopplad till den aktuella anv„ndaren.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ProfileID;
                Editable=False;
                LookupPageID=Profile List;
                OnAssistEdit=VAR
                               AllProfileTable@1000 : Record 2000000178;
                             BEGIN
                               IF PAGE.RUNMODAL(PAGE::"Available Profiles",AllProfileTable) = ACTION::LookupOK THEN BEGIN
                                 "Profile ID" := AllProfileTable."Profile ID";
                                 "App ID" := AllProfileTable."App ID";
                                 Scope := AllProfileTable.Scope;
                                 ProfileID := "Profile ID";
                                 SetRestartRequiredIfChangeIsForCurrentUser;
                               END
                             END;
                              }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Language ID;
                           NOR=Spr†k-ID;
                           SVE=Spr†k-ID];
                ToolTipML=[ENU=Specifies the ID of the language that Microsoft Windows is set up to run for the selected user.;
                           NOR=Angir ID-en for spr†ket som Microsoft Windows er konfigurert til † kj›re for den valgte brukeren.;
                           SVE=Anger id:t f”r spr†ket som Microsoft Windows ska k”ra f”r den valda anv„ndaren.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Language ID";
                OnValidate=VAR
                             LanguageManagement@1001 : Codeunit 43;
                           BEGIN
                             LanguageManagement.ValidateApplicationLanguage("Language ID");
                             SetRestartRequiredIfChangeIsForCurrentUser;
                           END;

                OnLookup=VAR
                           LanguageManagement@1002 : Codeunit 43;
                         BEGIN
                           LanguageManagement.LookupApplicationLanguage("Language ID");

                           IF "Language ID" <> xRec."Language ID" THEN BEGIN
                             VALIDATE("Language ID","Language ID");
                             SetRestartRequiredIfChangeIsForCurrentUser;
                           END;
                         END;
                          }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Locale ID;
                           NOR=ID for nasjonal innstilling;
                           SVE=Spr†kvariant-ID];
                ToolTipML=[ENU=Specifies the ID of the locale that Microsoft Windows is set up to run for the selected user.;
                           NOR=Angir ID-en for den nasjonale innstillingen som Microsoft Windows er konfigurert til † kj›re for den valgte brukeren.;
                           SVE=Anger id:t f”r de nationella inst„llningar som Microsoft Windows ska anv„nda f”r den valda anv„ndaren.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Locale ID";
                TableRelation="Windows Language"."Language ID";
                Importance=Additional;
                OnValidate=VAR
                             LanguageManagement@1000 : Codeunit 43;
                           BEGIN
                             LanguageManagement.ValidateWindowsLocale("Locale ID");
                             SetRestartRequiredIfChangeIsForCurrentUser;
                           END;

                OnLookup=VAR
                           LanguageManagement@1000 : Codeunit 43;
                         BEGIN
                           LanguageManagement.LookupWindowsLocale("Locale ID");

                           IF "Locale ID" <> xRec."Locale ID" THEN BEGIN
                             VALIDATE("Locale ID","Locale ID");
                             SetRestartRequiredIfChangeIsForCurrentUser;
                           END;
                         END;
                          }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Time Zone;
                           NOR=Tidssone;
                           SVE=Tidszon];
                ToolTipML=[ENU=Specifies the time zone that Microsoft Windows is set up to run for the selected user.;
                           NOR=Angir tidssonen som Microsoft Windows er konfigurert til † kj›re for den valgte brukeren.;
                           SVE=Anger tidszonen som Microsoft Windows ska anv„nda f”r den valda anv„ndaren.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Time Zone";
                Importance=Additional;
                OnValidate=BEGIN
                             ConfPersMgt.ValidateTimeZone("Time Zone");
                             SetRestartRequiredIfChangeIsForCurrentUser;
                           END;

                OnLookup=BEGIN
                           EXIT(ConfPersMgt.LookupTimeZone(Text))
                         END;
                          }

    { 10  ;2   ;Field     ;
                CaptionML=[ENU=Company;
                           NOR=Selskap;
                           SVE=F”retag];
                ToolTipML=[ENU=Specifies the company that is associated with the user.;
                           NOR=Angir selskapet som er knyttet til brukeren.;
                           SVE=Anger f”retaget som „r kopplat till anv„ndaren.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Company }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ConfPersMgt@1000 : Codeunit 9170;
      Text000@1008 : TextConst '@@@=User Personalization User1 already exists.;ENU=%1 %2 already exists.;NOR=%1 %2 finnes allerede.;SVE=%1 %2 finns redan.';
      AccountantTxt@1002 : TextConst '@@@=Please translate all caps;ENU=ACCOUNTANT;NOR=REGNSKAP;SVE=KAMRER';
      ProjectManagerTxt@1003 : TextConst '@@@=Please translate all caps;ENU=PROJECT MANAGER;NOR=PROSJEKTLEDER;SVE=PROJEKTCHEF';
      TeamMemberTxt@1001 : TextConst '@@@=Please translate all caps;ENU=TEAM MEMBER;NOR=TEAMMEDLEM;SVE=TEAMMEDLEM';
      ExperienceMsg@1004 : TextConst 'ENU=You are changing to a Role Center that has more functionality. To display the full functionality for this role, your Experience setting will be set to Essential.;NOR=Du endrer til et rollesenter som har mer funksjonalitet. Hvis du vil vise den fullstendige funksjonaliteten for dette rolletillegget, m† innstillingen Opplevelse v‘re satt til Essential.;SVE=Du byter till ett Rollcenter med fler funktioner. F”r att visa alla funktioner f”r det h„r rolltill„gget st„lls Upplevelse in p† Essential.';
      ProfileID@1005 : Code[30];
      RequiresRestart@1006 : Boolean;

    LOCAL PROCEDURE HideExternalUsers@5();
    VAR
      PermissionManager@1001 : Codeunit 9002;
      OriginalFilterGroup@1000 : Integer;
    BEGIN
      IF NOT PermissionManager.SoftwareAsAService THEN
        EXIT;

      OriginalFilterGroup := FILTERGROUP;
      FILTERGROUP := 2;
      CALCFIELDS("License Type");
      SETFILTER("License Type",'<>%1',"License Type"::"External User");
      FILTERGROUP := OriginalFilterGroup;
    END;

    [External]
    PROCEDURE SetExperienceToEssential@8(SelectedProfileID@1003 : Text[30]);
    VAR
      ExperienceTierSetup@1004 : Record 9176;
      ApplicationAreaMgmtFacade@1002 : Codeunit 9179;
      CompanyInformationMgt@1001 : Codeunit 1306;
    BEGIN
      IF CompanyInformationMgt.IsDemoCompany THEN
        IF ExperienceTierSetup.GET(COMPANYNAME) THEN
          IF ExperienceTierSetup.Basic THEN
            IF (SelectedProfileID = TeamMemberTxt) OR
               (SelectedProfileID = AccountantTxt) OR
               (SelectedProfileID = ProjectManagerTxt)
            THEN BEGIN
              MESSAGE(ExperienceMsg);
              ApplicationAreaMgmtFacade.SaveExperienceTierCurrentCompany(ExperienceTierSetup.FIELDCAPTION(Essential));
            END;
    END;

    LOCAL PROCEDURE SetRestartRequiredIfChangeIsForCurrentUser@3();
    BEGIN
      IF ((USERSECURITYID = "User SID") OR ISNULLGUID("User SID")) AND (COMPANYNAME = Company) THEN
        RequiresRestart := TRUE;
    END;

    LOCAL PROCEDURE RestartSession@1();
    VAR
      UserPersonalization@1000 : Record 2000000073;
      CurrentUserSessionSettings@1001 : SessionSettings;
      ProfileScope@1002 : 'System,Tenant';
    BEGIN
      UserPersonalization.GET(USERSECURITYID);

      CurrentUserSessionSettings.INIT;
      CurrentUserSessionSettings.PROFILEID := UserPersonalization."Profile ID";
      CurrentUserSessionSettings.PROFILEAPPID := UserPersonalization."App ID";
      CurrentUserSessionSettings.PROFILESYSTEMSCOPE := UserPersonalization.Scope = ProfileScope::System;
      CurrentUserSessionSettings.LANGUAGEID := UserPersonalization."Language ID";
      CurrentUserSessionSettings.LOCALEID := UserPersonalization."Locale ID";
      CurrentUserSessionSettings.TIMEZONE := UserPersonalization."Time Zone";

      CurrentUserSessionSettings.REQUESTSESSIONUPDATE(TRUE);
    END;

    BEGIN
    END.
  }
}

