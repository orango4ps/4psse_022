OBJECT Page 11125073 Base Recipe List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[DEU=Rezept öbersicht;
               ENU=Base Recipes;
               NLD=Standaard recepten;
               NOR=Liste over maler;
               SVE=Mallista];
    SourceTable=Table11020581;
    PageType=List;
    UsageCategory=Lists;
    CardPageID=Base Recipe;
    OnOpenPage=BEGIN
                 GlobalCopyEnable := (g_copy);
                 CopyRecipeEnable := NOT GlobalCopyEnable;  //db, 01-01-16
               END;

    OnAfterGetRecord=BEGIN
                       CheckRecipeLine();
                       CheckAmountRecipeChild;  //db, 11-09-14
                     END;

    ActionList=ACTIONS
    {
      { 1100525018;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528400;1 ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&uncties;
                                 NOR=Fu&nksjon;
                                 SVE=Fu&nktion];
                      Image=Action }
      { 1100525017;2 ;Action    ;
                      Name=ResetFilter;
                      CaptionML=[DEU=Filter zurÅcksetzen;
                                 ENU=Reset Filter;
                                 NLD=Reset filter];
                      Image=UseFilters;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 RcpGrp@1100525001 : Text[30];
                               BEGIN
                                 RcpGrp := GETFILTER("Recipe Group");
                                 RESET;
                                 SETFILTER("Recipe Group", RcpGrp);
                                 MARKEDONLY(FALSE);
                               END;
                                }
      { 1100525019;2 ;Action    ;
                      Name=CopyButton;
                      CaptionML=[DEU=&Kopieren;
                                 ENU=&Copy;
                                 NLD=&Kopieer;
                                 NOR=&Kopier;
                                 SVE=&Kopiera];
                      Promoted=Yes;
                      Visible=GlobalCopyEnable;
                      Enabled=GlobalCopyEnable;
                      PromotedIsBig=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 BaseRecipe@1100409000 : Record 11020581;
                               BEGIN
                                 //DP00381
                                 g_Multicopy := TRUE;
                                 CopyMgt.SetSelectionRecipe(g_table, g_code1, g_code2, g_code3, g_code4, g_code5,
                                   g_code6, g_code7, g_code8, g_code9, g_int1);  //C027336
                                 CurrPage.SETSELECTIONFILTER(BaseRecipe);  //db, 16-12-14: C019964
                                 CopyMgt.CopyBaseRecipes(BaseRecipe);
                                 CurrPage.CLOSE;
                               END;
                                }
      { 1100528402;2 ;Action    ;
                      Name=CopyRecipe;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Basisrezept kopieren;
                                 ENU=Copy Base Recipe;
                                 NLD=Recept kopiâren];
                      Promoted=Yes;
                      Visible=CopyRecipeEnable;
                      Enabled=CopyRecipeEnable;
                      PromotedIsBig=Yes;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyBaseRecipe;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100525002;2;Field  ;
                SourceExpr="Recipe Group" }

    { 1100525003;2;Field  ;
                SourceExpr="No." }

    { 1100525004;2;Field  ;
                SourceExpr=Description;
                Style=Strong;
                StyleExpr=RecipeLine;
                OnDrillDown=BEGIN
                              DescriptionOnDrillDown();
                            END;
                             }

    { 1100525005;2;Field  ;
                SourceExpr="Unit of Measure" }

    { 1100525006;2;Field  ;
                SourceExpr=Blocked }

    { 1100409000;2;Field  ;
                SourceExpr=Fixed }

    { 1100525007;2;Field  ;
                SourceExpr="Norm Group" }

    { 1100525008;2;Field  ;
                SourceExpr="Rate Group" }

    { 1100525009;2;Field  ;
                SourceExpr=Hours;
                OnDrillDown=BEGIN
                              HandleDrillDown;
                            END;
                             }

    { 1100525010;2;Field  ;
                SourceExpr="Labor Cost Amount";
                OnDrillDown=BEGIN
                              HandleDrillDown;
                            END;
                             }

    { 1100525011;2;Field  ;
                SourceExpr="Material Cost Amount";
                OnDrillDown=BEGIN
                              HandleDrillDown;
                            END;
                             }

    { 1100525014;2;Field  ;
                SourceExpr="Subcontracting Cost Amount";
                OnDrillDown=BEGIN
                              HandleDrillDown;
                            END;
                             }

    { 1100525015;2;Field  ;
                SourceExpr="Plant Cost Amount";
                OnDrillDown=BEGIN
                              HandleDrillDown;
                            END;
                             }

    { 1100409001;2;Field  ;
                SourceExpr="Sundry Cost Amount" }

    { 1100525016;2;Field  ;
                SourceExpr="Cost Amount";
                OnDrillDown=BEGIN
                              HandleDrillDown;
                            END;
                             }

    { 1100525020;2;Field  ;
                SourceExpr="Sales Amount" }

    { 1100528300;2;Field  ;
                AccessByPermission=TableData 11125999=R;
                SourceExpr="Main Process Code" }

    { 1100528302;2;Field  ;
                AccessByPermission=TableData 11125999=R;
                SourceExpr="Main Process Description";
                Visible=false }

    { 1100528301;2;Field  ;
                AccessByPermission=TableData 11125999=R;
                SourceExpr="Sub Process Code" }

    { 1100528303;2;Field  ;
                AccessByPermission=TableData 11125999=R;
                SourceExpr="Sub Process Description";
                Visible=false }

  }
  CODE
  {
    VAR
      g_code1@1100525014 : Code[20];
      g_code2@1100525013 : Code[20];
      g_code3@1100525012 : Code[20];
      g_code4@1100525011 : Code[20];
      g_code5@1100525010 : Code[20];
      g_code6@1100525009 : Code[20];
      g_code7@1100525008 : Code[20];
      g_code8@1100525007 : Code[20];
      g_code9@1100525006 : Code[20];
      g_copy@1100525005 : Boolean;
      g_table@1100525004 : Integer;
      g_int1@1100525016 : Integer;
      CopyMgt@1100525002 : Codeunit 11012068;
      g_Multicopy@1100525001 : Boolean;
      GlobalCopyEnable@1100525000 : Boolean INDATASET;
      CopyRecipeEnable@1100525017 : Boolean INDATASET;
      RecipeLine@1100525015 : Boolean INDATASET;

    PROCEDURE SetSelection@1210190002(l_table@11012000 : Integer;l_code1@11012001 : Code[20];l_code2@11012002 : Code[20];l_code3@11012003 : Code[20];l_code4@11012004 : Code[20];l_code5@1210190000 : Code[20];l_code6@1210190004 : Code[20];l_code7@1210190003 : Code[20];l_code8@1210190002 : Code[20];l_code9@1210190001 : Code[20];l_Copy@11012005 : Boolean;l_int1@1100525000 : Integer);
    BEGIN
      g_table := l_table;
      g_code1 := l_code1;
      g_code2 := l_code2;
      g_code3 := l_code3;
      g_code4 := l_code4;
      g_code5 := l_code5;
      g_code6 := l_code6;
      g_code7 := l_code7;
      g_code8 := l_code8;
      g_code9 := l_code9;
      g_copy := l_Copy;
      g_int1 := l_int1;  //C027336
    END;

    PROCEDURE HandleDrillDown@1100485000();
    VAR
      RcpLineRec@1100485001 : Record 11020582;
      RcpLineFrm@1100485000 : Page 11125076;
    BEGIN
      CLEAR(RcpLineFrm);
      RcpLineRec.RESET;
      RcpLineRec.SETRANGE("Recipe Group","Recipe Group");
      RcpLineRec.SETRANGE(Recipe,"No.");
      RcpLineFrm.SETTABLEVIEW(RcpLineRec);
      RcpLineFrm.RUNMODAL;
    END;

    PROCEDURE CheckMultiCopy@1100528900() : Boolean;
    BEGIN
      //DP00381
      EXIT (g_Multicopy);
    END;

    PROCEDURE CheckRecipeLine@1100525000();
    VAR
      BaseRecipeLine@1100525000 : Record 11020582;
    BEGIN
      RecipeLine := FALSE;
      BaseRecipeLine.SETRANGE("Recipe Group", "Recipe Group");
      BaseRecipeLine.SETRANGE(Recipe, "No.");
      BaseRecipeLine.SETFILTER("Recipe (Child)", '<>%1', '');
      IF BaseRecipeLine.FINDFIRST THEN
        RecipeLine := TRUE;
    END;

    PROCEDURE DescriptionOnDrillDown@1100525001();
    VAR
      BaseRecipeLine@1100525000 : Record 11020582;
      BaseRecipe@1100525001 : Record 11020581;
    BEGIN
      BaseRecipeLine.SETRANGE("Recipe Group", "Recipe Group");
      BaseRecipeLine.SETRANGE(Recipe, "No.");
      BaseRecipeLine.SETFILTER("Recipe (Child)", '<>%1', '');
      IF BaseRecipeLine.FINDSET THEN BEGIN
        REPEAT
          BaseRecipe.GET(BaseRecipeLine."Recipe Group (Child)", BaseRecipeLine."Recipe (Child)");
          BaseRecipe.MARK := TRUE;
        UNTIL BaseRecipeLine.NEXT = 0;
      END ELSE BEGIN
        EXIT;
      END;
      BaseRecipe.MARKEDONLY := TRUE;
      PAGE.RUNMODAL(PAGE::"Base Recipe List", BaseRecipe);
    END;

    LOCAL PROCEDURE CopyBaseRecipe@1100528400();
    VAR
      BaseRecipe@1210190000 : Record 11020581;
      CopyBaseRecipe@1100525000 : Report 11020275;
    BEGIN
      BaseRecipe := Rec;
      BaseRecipe.SETRECFILTER;
      CopyBaseRecipe.SETTABLEVIEW(BaseRecipe);
      CopyBaseRecipe.FillDefaults('','','','',0,"Recipe Group","No.");
      CopyBaseRecipe.RUNMODAL;
    END;

    PROCEDURE CheckAmountRecipeChild@1100409000();
    VAR
      BaseRecipeLine@1100409000 : Record 11020582;
      BaseRecipeChild@1100409001 : Record 11020581;
    BEGIN
      //db.sn, 11-09-14
      BaseRecipeLine.SETRANGE("Recipe Group", "Recipe Group");
      BaseRecipeLine.SETRANGE(Recipe, "No.");
      BaseRecipeLine.SETFILTER("Recipe (Child)", '<>%1', '');
      IF BaseRecipeLine.FINDSET THEN BEGIN
        REPEAT
          IF NOT BaseRecipeChild.GET(BaseRecipeLine."Recipe Group (Child)", BaseRecipeLine."Recipe (Child)") THEN BaseRecipeChild.INIT;
          BaseRecipeChild.CALCFIELDS("Material Cost Amount","Subcontracting Cost Amount","Plant Cost Amount","Sundry Cost Amount");
          "Material Cost Amount" += (BaseRecipeLine.Quantity * BaseRecipeChild."Material Cost Amount");
          "Subcontracting Cost Amount" += (BaseRecipeLine.Quantity * BaseRecipeChild."Subcontracting Cost Amount");
          "Plant Cost Amount" += (BaseRecipeLine.Quantity * BaseRecipeChild."Plant Cost Amount");
          "Sundry Cost Amount" += (BaseRecipeLine.Quantity * BaseRecipeChild."Sundry Cost Amount");
        UNTIL BaseRecipeLine.NEXT = 0;
      END;
      //db.en, 11-09-14
    END;

    BEGIN
    END.
  }
}

