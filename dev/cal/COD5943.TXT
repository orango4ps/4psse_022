OBJECT Codeunit 5943 Lock-OpenServContract
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1001 : TextConst 'ENU=It is not possible to lock this %1 Service %2 because some lines have zero %3.;NOR=Det er ikke mulig † l†se %1 service %2 fordi noen linjer har %3 som er null.;SVE=Det „r inte m”jligt att l†sa %1 service %2 d„rf”r att n†gra rader har noll %3.';
      Text001@1000 : TextConst 'ENU=It is not possible to open a %1 service contract;NOR=Det er ikke mulig † †pne en %1 servicekontrakt;SVE=Det „r inte m”jligt att ”ppna servicekontraktet %1';
      Text002@1002 : TextConst 'ENU=New lines have been added to this contract.\Would you like to continue?;NOR=Det er lagt til nye linjer i denne kontrakten.\Vil du fortsette?;SVE=Nya rader har lagts till det h„r kontraktet.\Vill du forts„tta?';
      SignServContractDoc@1003 : Codeunit 5944;
      Text003@1004 : TextConst 'ENU=You cannot lock service contract with negative annual amount.;NOR=Du kan ikke l†se servicekontrakter med negative †rlige bel›p.;SVE=Du kan inte l†sa ett servicekontrakt med negativt †rligt belopp.';
      Text004@1005 : TextConst 'ENU=You cannot lock service contract with zero annual amount when invoice period is different from None.;NOR=Du kan ikke l†se servicekontrakter med et †rsbel›p p† null, n†r fakturaperioden er noe annet enn Ingen.;SVE=Du kan inte l†sa ett servicekontrakt med ett †rligt belopp p† noll n„r faktureringsperioden inte „r Ingen.';

    [External]
    PROCEDURE LockServContract@1(FromServContractHeader@1000 : Record 5965);
    VAR
      ServContractHeader@1002 : Record 5965;
      ServContractLine@1001 : Record 5964;
      ConfirmManagement@1004 : Codeunit 27;
      RaiseError@1003 : Boolean;
    BEGIN
      OnBeforeLockServContract(FromServContractHeader);

      ServContractHeader := FromServContractHeader;
      WITH ServContractHeader DO BEGIN
        IF "Change Status" = "Change Status"::Locked THEN
          EXIT;
        CALCFIELDS("Calcd. Annual Amount");
        TESTFIELD("Annual Amount","Calcd. Annual Amount");
        IF "Annual Amount" < 0 THEN
          ERROR(Text003);
        IF "Invoice Period" <> "Invoice Period"::None THEN
          IF "Annual Amount" = 0 THEN
            ERROR(Text004);

        LOCKTABLE;
        IF ("Contract Type" = "Contract Type"::Contract) AND
           (Status = Status::Signed)
        THEN BEGIN
          ServContractLine.RESET;
          ServContractLine.SETRANGE("Contract Type","Contract Type");
          ServContractLine.SETRANGE("Contract No.","Contract No.");
          ServContractLine.SETRANGE("Line Amount",0);
          RaiseError := NOT ServContractLine.ISEMPTY;
          OnErrorIfServContractLinesHaveZeroAmount(ServContractHeader,ServContractLine,RaiseError);
          IF RaiseError THEN
            ERROR(Text000,Status,"Contract Type",ServContractLine.FIELDCAPTION("Line Amount"));
          ServContractLine.RESET;
          ServContractLine.SETRANGE("Contract Type","Contract Type");
          ServContractLine.SETRANGE("Contract No.","Contract No.");
          ServContractLine.SETRANGE("New Line",TRUE);
          IF NOT ServContractLine.ISEMPTY THEN BEGIN
            IF  NOT ConfirmManagement.ConfirmProcess(Text002,TRUE) THEN
              EXIT;
            SignServContractDoc.AddendumToContract(ServContractHeader);
          END;
        END;
        GET(FromServContractHeader."Contract Type",FromServContractHeader."Contract No.");
        "Change Status" := "Change Status"::Locked;
        MODIFY;
      END;

      OnAfterLockServContract(ServContractHeader);
    END;

    [External]
    PROCEDURE OpenServContract@2(ServContractHeader@1000 : Record 5965);
    BEGIN
      WITH ServContractHeader DO BEGIN
        IF "Change Status" = "Change Status"::Open THEN
          EXIT;
        LOCKTABLE;
        IF (Status = Status::Canceled) AND ("Contract Type" = "Contract Type"::Contract)THEN
          ERROR(Text001,Status);
        "Change Status" := "Change Status"::Open;
        MODIFY;
      END;

      OnAfterOpenServContract(ServContractHeader);
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeLockServContract@3(VAR ServiceContractHeader@1000 : Record 5965);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnErrorIfServContractLinesHaveZeroAmount@4(ServiceContractHeader@1000 : Record 5965;ServiceContractLine@1001 : Record 5964;VAR RaiseError@1002 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterLockServContract@5(VAR ServiceContractHeader@1000 : Record 5965);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterOpenServContract@9(VAR ServiceContractHeader@1000 : Record 5965);
    BEGIN
    END;

    BEGIN
    END.
  }
}

