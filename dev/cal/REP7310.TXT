OBJECT Report 7310 Calculate Bins
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=LagerplÑtze berechnen;
               ENU=Calculate Bins;
               NLD=Opslaglocaties berekenen;
               NOR=Beregn hyller];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  BinCreateFilter.TESTFIELD(Code);
                  IF BinCreateFilter.GET(BinCreateFilter.Code) THEN;
                  BinCreateWkshLine.SETRANGE("Worksheet Template Name",CurrTemplateName);
                  BinCreateWkshLine.SETRANGE(Name,CurrWorksheetName);
                  BinCreateWkshLine.SETRANGE("Location Code",CurrLocationCode);
                  IF BinCreateWkshLine.FINDLAST THEN
                    LineNo := BinCreateWkshLine."Line No." + 10000
                  ELSE
                    LineNo := 10000;
                  BinCreateWkshLine.INIT;
                  WITH BinCreateWkshLine DO BEGIN
                    "Worksheet Template Name" := CurrTemplateName;
                    Name := CurrWorksheetName;
                    "Location Code" := CurrLocationCode;
                    Dedicated := BinCreateFilter.Dedicated;
                    "Zone Code" := BinCreateFilter."Zone Code";
                    Description := BinCreateFilter."Bin Description";
                    "Bin Type Code" := BinCreateFilter."Bin Type Code";
                    "Warehouse Class Code" := BinCreateFilter."Warehouse Class Code";
                    "Block Movement" := BinCreateFilter."Block Movement";
                    "Special Equipment Code" := BinCreateFilter."Special Equipment Code";
                    "Bin Ranking" := BinCreateFilter."Bin Ranking";
                    "Maximum Cubage" := BinCreateFilter."Maximum Cubage";
                    "Maximum Weight" := BinCreateFilter."Maximum Weight";
                  END;
                END;

  }
  DATASET
  {
    { 6034;    ;DataItem;Rack2               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               Rack := FromRack;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF INCSTR(Rack) = Rack THEN
                                    CurrReport.BREAK;
                                  IF Rack > ToRack THEN
                                    CurrReport.BREAK;
                                  IF STRLEN(Rack) > STRLEN(ToRack) THEN
                                    CurrReport.BREAK;

                                  IF (FromSection = '') AND (ToSection = '') THEN
                                    BinCreateWksh;
                                END;
                                 }

    { 6247;1   ;DataItem;Section2            ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               Section := FromSection;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF INCSTR(Section) = Section THEN
                                    CurrReport.BREAK;
                                  IF Section > ToSection THEN
                                    CurrReport.BREAK;
                                  IF STRLEN(Section) > STRLEN(ToSection) THEN
                                    CurrReport.BREAK;

                                  IF (FromLevel = '') AND (ToLevel = '') THEN
                                    BinCreateWksh;
                                END;

               OnPostDataItem=BEGIN
                                Rack := INCSTR(Rack);
                              END;
                               }

    { 6891;2   ;DataItem;Level2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               Level := FromLevel;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF INCSTR(Level) = Level THEN
                                    CurrReport.BREAK;
                                  IF Level > ToLevel THEN
                                    CurrReport.BREAK;
                                  IF STRLEN(Level) > STRLEN(ToLevel) THEN
                                    CurrReport.BREAK;

                                  BinCreateWksh;

                                  Level := INCSTR(Level);
                                END;

               OnPostDataItem=BEGIN
                                Section := INCSTR(Section);
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 29  ;2   ;Field     ;
                  Name=BinTemplateCode;
                  CaptionML=[DEU=Lagerplatzvorlagencode;
                             ENU=Bin Template Code;
                             NLD=Opslaglocatiesjabloon;
                             NOR=Hyllemalkode];
                  ToolTipML=[DEU="Gibt den Code fÅr den Lagerplatz an. ";
                             ENU="Specifies the code for the bin. ";
                             NLD="Hiermee wordt de code opgegeven voor de opslaglocatie. ";
                             NOR="Angir koden for hyllen. "];
                  ApplicationArea=#Warehouse;
                  SourceExpr=BinCreateFilter.Code;
                  OnValidate=BEGIN
                               IF  BinCreateFilter.Code <> '' THEN BEGIN
                                 BinCreateFilter.GET(BinCreateFilter.Code);
                                 BinCreateFilter.TESTFIELD("Location Code");
                               END ELSE BEGIN
                                 BinCreateFilter.Code := '';
                                 BinCreateFilter.Description := '';
                                 BinCreateFilter."Location Code" := '';
                                 BinCreateFilter."Zone Code" := '';
                               END;
                             END;

                  OnLookup=BEGIN
                             IF CurrLocationCode <> '' THEN BEGIN
                               BinCreateFilter.FILTERGROUP := 2;
                               BinCreateFilter.SETRANGE("Location Code",CurrLocationCode);
                               BinCreateFilter.FILTERGROUP := 0;
                             END;
                             CLEAR(BinTemplateForm);
                             BinTemplateForm.SETTABLEVIEW(BinCreateFilter);
                             BinTemplateForm.EDITABLE(FALSE);
                             BinTemplateForm.LOOKUPMODE(TRUE);
                             IF BinTemplateForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                               BinTemplateForm.GETRECORD(BinCreateFilter);
                               BinCreateFilter.VALIDATE(Code);
                               BinCreateFilter.TESTFIELD("Location Code");
                             END;
                           END;
                            }

      { 31  ;2   ;Field     ;
                  CaptionML=[DEU=Beschreibung;
                             ENU=Description;
                             NLD=Omschrijving;
                             NOR=Beskrivelse;
                             SVE=Beskrivning];
                  ToolTipML=[DEU=Gibt die Beschreibung fÅr den Lagerplatz an.;
                             ENU=Specifies the description of the bin.;
                             NLD=Hiermee wordt de omschrijving van de opslaglocatie opgegeven.;
                             NOR=Angir beskrivelsen av hyllen.];
                  ApplicationArea=#Warehouse;
                  SourceExpr=BinCreateFilter.Description }

      { 33  ;2   ;Field     ;
                  CaptionML=[DEU=Lagerortcode;
                             ENU=Location Code;
                             NLD=Vestiging;
                             NOR=Lokasjonskode;
                             SVE=LagerstÑllekod];
                  ToolTipML=[DEU="Gibt den Lagerort an, an dem die LageraktivitÑt erfolgt. ";
                             ENU="Specifies the location where the warehouse activity takes place. ";
                             NLD="Hiermee wordt de locatie opgegeven waar de magazijnactiviteit wordt uitgevoerd. ";
                             NOR="Angir lokasjonen der lageraktiviteten finner sted. ";
                             SVE="Anger lagerstÑllet dÑr distributionslageraktiviteten utfîrs. "];
                  ApplicationArea=#Warehouse;
                  SourceExpr=BinCreateFilter."Location Code";
                  Editable=FALSE }

      { 35  ;2   ;Field     ;
                  CaptionML=[DEU=Zonencode;
                             ENU=Zone Code;
                             NLD=Zone;
                             NOR=Sonekode;
                             SVE=Zonkod];
                  ToolTipML=[DEU=Gibt den Code der Zone an, in der sich der Lagerplatz dieser Zeile befindet.;
                             ENU=Specifies the zone code where the bin on this line is located.;
                             NLD=Hiermee wordt de zonecode opgegeven waar de opslaglocatie zich op deze regel bevindt.;
                             NOR=Angir sonekoden der hyllen pÜ denne linjen finnes.;
                             SVE=Anger zonkoden dÑr lagerplatsen pÜ den hÑr raden finns.];
                  ApplicationArea=#Warehouse;
                  SourceExpr=BinCreateFilter."Zone Code";
                  Editable=FALSE }

      { 6   ;2   ;Group     ;
                  CaptionML=[DEU=Regal;
                             ENU=Rack;
                             NLD=Rek;
                             NOR=Reol] }

      { 11  ;3   ;Field     ;
                  Name=RackFromNo;
                  CaptionML=[DEU=Von Nr.;
                             ENU=From No.;
                             NLD=Van nr.;
                             NOR=Fra nr.;
                             SVE=FrÜn nr];
                  ToolTipML=[DEU=Gibt die kleinstmîgliche Anzahl an, ab der Sie den Lagerplatz berechnen.;
                             ENU=Specifies the lowest number from which you will calculate the bin.;
                             NLD=Hiermee wordt het laagste nummer opgegeven van waaraf de opslaglocatie wordt berekend.;
                             NOR=Angir det laveste nummeret du beregner hyllen fra.];
                  ApplicationArea=#Warehouse;
                  SourceExpr=FromRack;
                  OnValidate=BEGIN
                               IF (FromRack <> '') AND
                                  (ToRack <> '') AND
                                  (STRLEN(FromRack) <> STRLEN(ToRack))
                               THEN
                                 ERROR(Text004);
                             END;
                              }

      { 13  ;3   ;Field     ;
                  Name=RackToNo;
                  CaptionML=[DEU=Nach Nr.;
                             ENU=To No.;
                             NLD=Tot nr.;
                             NOR=Til nr.;
                             SVE=Till nr];
                  ApplicationArea=#Warehouse;
                  SourceExpr=ToRack;
                  OnValidate=BEGIN
                               IF (FromRack <> '') AND
                                  (ToRack <> '') AND
                                  (STRLEN(FromRack) <> STRLEN(ToRack))
                               THEN
                                 ERROR(Text004);
                             END;
                              }

      { 15  ;2   ;Group     ;
                  CaptionML=[DEU=Abschnitt;
                             ENU=Section;
                             NLD=Sectie;
                             NOR=Seksjon;
                             SVE=Sektion] }

      { 16  ;3   ;Field     ;
                  Name=SelectionFromNo;
                  CaptionML=[DEU=Von Nr.;
                             ENU=From No.;
                             NLD=Van nr.;
                             NOR=Fra nr.;
                             SVE=FrÜn nr];
                  ToolTipML=[DEU=Gibt die kleinstmîgliche Anzahl an, ab der Sie den Lagerplatz berechnen.;
                             ENU=Specifies the lowest number from which you will calculate the bin.;
                             NLD=Hiermee wordt het laagste nummer opgegeven van waaraf de opslaglocatie wordt berekend.;
                             NOR=Angir det laveste nummeret du beregner hyllen fra.];
                  ApplicationArea=#Warehouse;
                  SourceExpr=FromSection;
                  OnValidate=BEGIN
                               IF (FromSection <> '') AND
                                  (ToSection <> '') AND
                                  (STRLEN(FromSection) <> STRLEN(ToSection))
                               THEN
                                 ERROR(Text004);
                             END;
                              }

      { 18  ;3   ;Field     ;
                  Name=SelectionToNo;
                  CaptionML=[DEU=Nach Nr.;
                             ENU=To No.;
                             NLD=Tot nr.;
                             NOR=Til nr.;
                             SVE=Till nr];
                  ApplicationArea=#Warehouse;
                  SourceExpr=ToSection;
                  OnValidate=BEGIN
                               IF (FromSection <> '') AND
                                  (ToSection <> '') AND
                                  (STRLEN(FromSection) <> STRLEN(ToSection))
                               THEN
                                 ERROR(Text004);
                             END;
                              }

      { 20  ;2   ;Group     ;
                  CaptionML=[DEU=Ebene;
                             ENU=Level;
                             NLD=Niveau;
                             NOR=NivÜ;
                             SVE=NivÜ] }

      { 21  ;3   ;Field     ;
                  Name=LevelFromNo;
                  CaptionML=[DEU=Von Nr.;
                             ENU=From No.;
                             NLD=Van nr.;
                             NOR=Fra nr.;
                             SVE=FrÜn nr];
                  ToolTipML=[DEU=Gibt die kleinstmîgliche Anzahl an, ab der Sie den Lagerplatz berechnen.;
                             ENU=Specifies the lowest number from which you will calculate the bin.;
                             NLD=Hiermee wordt het laagste nummer opgegeven van waaraf de opslaglocatie wordt berekend.;
                             NOR=Angir det laveste nummeret du beregner hyllen fra.];
                  ApplicationArea=#Warehouse;
                  SourceExpr=FromLevel;
                  OnValidate=BEGIN
                               IF (FromLevel <> '') AND
                                  (ToLevel <> '') AND
                                  (STRLEN(FromLevel) <> STRLEN(ToLevel))
                               THEN
                                 ERROR(Text004);
                             END;
                              }

      { 23  ;3   ;Field     ;
                  Name=LevelToNo;
                  CaptionML=[DEU=Nach Nr.;
                             ENU=To No.;
                             NLD=Tot nr.;
                             NOR=Til nr.;
                             SVE=Till nr];
                  ApplicationArea=#Warehouse;
                  SourceExpr=ToLevel;
                  OnValidate=BEGIN
                               IF (FromLevel <> '') AND
                                  (ToLevel <> '') AND
                                  (STRLEN(FromLevel) <> STRLEN(ToLevel))
                               THEN
                                 ERROR(Text004);
                             END;
                              }

      { 25  ;2   ;Field     ;
                  Name=FieldSeparator;
                  CaptionML=[DEU=Feldbegrenzung;
                             ENU=Field Separator;
                             NLD=Veldscheidingsteken;
                             NOR=Feltskilletegn];
                  ToolTipML=[DEU=Gibt an, ob ein Zeichen (z.ˇB. ein Bindestrich) als Trennzeichen fÅr die Kategoriefelder verwendet werden soll, die Sie als Teil des Lagerplatzcodes definiert haben. Tragen Sie in diesem Fall dieses Zeichen in das Feld "Feldbegrenzung" ein.;
                             ENU=Specifies if you want a character, such as a hyphen, to separate the category fields you have defined as part of the bin code. If so, fill in the Field Separator field with this character.;
                             NLD=Hiermee wordt opgegeven of u een teken, zoals een koppelteken, wilt gebruiken om de categorievelden te scheiden die u hebt gedefinieerd als onderdeel van de opslaglocatiecode. Vul dit teken in dat geval in het veld Veldscheidingsteken in.;
                             NOR=Angir om du õnsker Ü bruke et tegn, for eksempel en bindestrek, til Ü skille kategorifeltene du har definert som en del av hyllekoden. Hvis det er tilfelle, fyller du inn dette tegnet i feltet Feltseparator.];
                  ApplicationArea=#Warehouse;
                  SourceExpr=FieldSeparator }

      { 27  ;2   ;Field     ;
                  CaptionML=[DEU=Auf vorh. LagerplÑtzen prÅfen;
                             ENU=Check on Existing Bin;
                             NLD=Bestaande opslaglocatie controleren;
                             NOR=Kontroller eksisterende hylle];
                  ToolTipML=[DEU=Gibt an, ob ein bestehender Lagerplatz geprÅft werden soll.;
                             ENU=Specifies whether or not to check on an existing bin.;
                             NLD=Hiermee wordt opgegeven of een bestaande opslaglocatie moet worden gecontroleerd.;
                             NOR=Angir om du skal kontrollere en eksisterende hylle eller ikke.];
                  ApplicationArea=#Warehouse;
                  SourceExpr=CheckOnBin }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Bin@1027 : Record 7354;
      BinCreateFilter@1016 : Record 7335;
      BinCreateWkshLine@1013 : Record 7338;
      BinTemplateForm@1020 : Page 7367;
      CurrTemplateName@1011 : Code[10];
      CurrWorksheetName@1010 : Code[10];
      CurrLocationCode@1000 : Code[10];
      FromRack@1009 : Code[20];
      FromSection@1008 : Code[20];
      FromLevel@1007 : Code[20];
      ToRack@1006 : Code[20];
      ToSection@1005 : Code[20];
      ToLevel@1004 : Code[20];
      FieldSeparator@1003 : Code[1];
      Rack@1017 : Code[20];
      Section@1018 : Code[20];
      Level@1019 : Code[20];
      CheckOnBin@1026 : Boolean;
      Text000@1002 : TextConst 'DEU=Von Regal+Von SÑule+Von Ebene ist lÑnger als die maximale LÑnge des Lagerplatzcodes (%1).;ENU=The length of From Rack+From Section+From Level is greater than the maximum length of Bin Code (%1).;NLD=De lengte van Van rek+Van sectie+Van niveau is groter dan de maximale lengte van opslaglocatie (%1).;NOR=Lengden pÜ Fra reol + Fra seksjon + Fra nivÜ er stõrre enn maksimumslengden for hyllekoden (%1).';
      LenFieldSeparator@1001 : Integer;
      LineNo@1014 : Integer;
      Text004@1012 : TextConst 'DEU=Die Anzahl der in die Felder Von Nr. und Nach Nr. eingegebenen Zeichen muss Åbereinstimmen.;ENU=The length of the strings inserted in From No. and To No. must be identical.;NLD=De lengte van de strings in Van nr. en Tot nr. moet identiek zijn.;NOR=Lengden pÜ strengene som settes inn i Fra nr. og Til nr. mÜ vëre lik.';

    LOCAL PROCEDURE BinCreateWksh@1();
    BEGIN
      LenFieldSeparator := 0;
      IF FieldSeparator <> '' THEN
        LenFieldSeparator := 2;

      IF (STRLEN(Rack + Section + Level) + LenFieldSeparator) > MAXSTRLEN(BinCreateWkshLine."Bin Code") THEN
        ERROR(Text000,MAXSTRLEN(BinCreateWkshLine."Bin Code"));

      BinCreateWkshLine."Line No." := LineNo;
      BinCreateWkshLine."Bin Code" := Rack + FieldSeparator + Section + FieldSeparator + Level;
      IF NOT CheckOnBin THEN
        BinCreateWkshLine.INSERT(TRUE)
      ELSE BEGIN
        IF Bin.GET(BinCreateWkshLine."Location Code",BinCreateWkshLine."Bin Code") THEN
          EXIT
          ;
        BinCreateWkshLine.INSERT(TRUE);
      END;
      LineNo := LineNo + 10000;
    END;

    [External]
    PROCEDURE SetTemplAndWorksheet@2(TemplateName@1001 : Code[10];WorksheetName@1000 : Code[10];LocationCode@1002 : Code[10]);
    BEGIN
      CurrTemplateName := TemplateName;
      CurrWorksheetName := WorksheetName;
      CurrLocationCode := LocationCode;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

