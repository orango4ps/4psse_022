OBJECT Report 11126037 Update Prognosis from PER
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Prognose von PER aus aktualisieren;
               ENU=Update Prognosis from PER;
               NLD=Prognose bijwerken vanuit PER;
               NOR=Oppdater prognose fra PER;
               SVE=Uppdatera prognos frÜn PER];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 8397;    ;DataItem;                    ;
               DataItemTable=Table11126036;
               DataItemTableView=SORTING(Project No.,Date);
               OnAfterGetRecord=VAR
                                  Prognosis@1210190000 : Record 11012034;
                                BEGIN
                                  CALCFIELDS("Total Actual Cost", "Total Remaining Amount", "Actual Result Forecast");

                                  IF NOT Prognosis.GET("Project No.", Date) THEN BEGIN
                                    Prognosis.VALIDATE("Project No.", "Project No.");
                                    Prognosis.VALIDATE("Prognosis Date", Date);
                                    Prognosis.INSERT(TRUE);
                                  END ELSE BEGIN
                                    //? Regels verwijderen en hieronder is weer opbouwen van de regels uitgeschakeld.
                                    //? En dan ook nog eens alle vellden uit kop leeg maken. Kan niet de bedoeling zijn
                                    // Moet volgens Jan Paul Zeeman (15-06-2012) als volgt:
                                    // Als prognose voor project/datum al aanwezig dan een foutmelding geven, en verder dus niets doen
                                    //Prognosis.DeleteLines; //JPZ.o
                                    //Prognosis.INIT;        //JPZ.o
                                    ERROR(Text001, Prognosis.TABLECAPTION, FIELDCAPTION("Project No."), "Project No.", FIELDCAPTION(Date), Date);
                                  END;
                                  Prognosis."Prognosis Level" := Prognosis."Prognosis Level"::Rough;
                                  Prognosis.VALIDATE("Rough Prognosis Total Revenues", "Project Result Forecast".TotalContractAmount());
                                  Prognosis.VALIDATE("Rough Prognosis Total Cost", "Total Actual Cost" + "Total Remaining Amount");
                                  Prognosis.MODIFY(TRUE);

                                  //UpdateRevenuePrognosis(Prognosis);
                                END;

               ReqFilterFields=Project No.,Date }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text001@1210190000 : TextConst 'DEU=Nicht zulÑssig, %1 ist bereits vorhanden fÅr %2 ''%3'' %4 ''%5'';ENU=Not allowed, %1 is already present for %2 ''%3'' %4 ''%5'';NLD=Niet toegestaan, %1 is al aanwezig voor %2 ''%3'' %4 ''%5'';NOR=Ikke tillatt, %1 finnes allerede for %2 ''%3'' %4 ''%5'';SVE=Inte tillÜtet, %1 finns redan fîr %2 ''%3'' %4 ''%5''';

    PROCEDURE UpdateRevenuePrognosis@1210190000(VAR Prognosis2@1210190001 : Record 11012034);
    BEGIN
      //? Functie in een form aanroepen? (vreemd)  ook is optie 2 geen Revenue maar Both(Cost+Rev)
      //? Aanroep van deze functie is al uitgeschakeld, dus deze functie wordt niet meer gebruikt (dus maar uitgeschakeld)
      {
      Prognosis.SETRECORD(Prognosis2);
      Prognosis.CreatePrognosis(Prognosis2, 2);
      }
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

