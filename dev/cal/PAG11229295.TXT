OBJECT Page 11229295 Visible Resources by User(WOP)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Sichtbare Ressourcen nach Benutzer;
               ENU=Visible Resources by User;
               NLD=Zichtbare resources per gebruiker;
               SVE=Synliga resurser per anv„ndare];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11229285;
    PageType=List;
    UsageCategory=Tasks;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             UserIDFilter := USERID;
           END;

    OnOpenPage=BEGIN
                 BuildTmpTable;
               END;

    OnAfterGetRecord=BEGIN
                       DetermineSourceData;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           DetermineSourceData;
                         END;

    ActionList=ACTIONS
    {
      { 1100528609;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100528632;1 ;Action    ;
                      CaptionML=[DEU=Sichtbar machen;
                                 ENU=Make Visible;
                                 NLD=Zichtbaar maken;
                                 NOR=Gjor synlig;
                                 SVE=S„tt till synlig];
                      Promoted=Yes;
                      Image=SelectEntries;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 OldVisibleResourceWOP@1100525001 : TEMPORARY Record 11229285;
                                 VisibleResourceWOP@1100525002 : TEMPORARY Record 11229285;
                                 ResourceWOP@1100528601 : Record 11229278;
                                 ResourceMgtWorkOrderPlan@1100525000 : Codeunit 11229277;
                                 Choice@1100528600 : Integer;
                               BEGIN
                                 OldVisibleResourceWOP.COPY(Rec, TRUE);
                                 CurrPage.SETSELECTIONFILTER(Rec);
                                 VisibleResourceWOP.COPY(Rec, TRUE);
                                 Rec.COPY(OldVisibleResourceWOP, TRUE);
                                 VisibleResourceWOP.GetResourceWOP(ResourceWOP);
                                 Choice := STRMENU(Text000);
                                 ResourceMgtWorkOrderPlan.SetVisibleByDS(Choice -1, ResourceWOP);
                                 BuildTmpTable;
                               END;
                                }
      { 1100528631;1 ;Action    ;
                      CaptionML=[DEU=Nach Konsignation auf Sichtbar setzen;
                                 ENU=Set Visible by Consignment;
                                 NLD=Zichtbaar o.b.v. consignatiedienst;
                                 SVE=S„tt synlig f”r s„ndningar];
                      Promoted=Yes;
                      Image=PlanningWorksheet;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ResourceMgtWorkOrderPlan@1100525000 : Codeunit 11229277;
                                 Choice@1100528600 : Integer;
                               BEGIN
                                 Choice := STRMENU(Text000);
                                 IF Choice > 0 THEN
                                   ResourceMgtWorkOrderPlan.SetVisibleByConsignment(Choice -1);
                                 BuildTmpTable;
                               END;
                                }
      { 1100528630;1 ;Action    ;
                      CaptionML=[DEU=Nach Abwesenheit auf Sichtbar setzen;
                                 ENU=Set Visible by Absence;
                                 NLD=Zichtbaar o.b.v. afwezigheid;
                                 SVE=S„tt synlig f”r fr†nvaro];
                      Promoted=Yes;
                      Image=Absence;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ResourceMgtWorkOrderPlan@1100525000 : Codeunit 11229277;
                                 Choice@1100528600 : Integer;
                               BEGIN
                                 Choice := STRMENU(Text000);
                                 IF Choice > 0 THEN
                                   ResourceMgtWorkOrderPlan.SetVisibleByAbsence(Choice -1);
                                 BuildTmpTable;
                               END;
                                }
      { 1100528629;1 ;Action    ;
                      CaptionML=[DEU=Nach Auswahl auf Sichtbar setzen;
                                 ENU=Set Visible by Selection;
                                 NLD=Zichtbaar o.b.v. selectie;
                                 SVE=S„tt synlig f”r urval];
                      Promoted=Yes;
                      Image=SelectEntries;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SetResourceVisibility@1100528600 : Report 11012788;
                               BEGIN
                                 SetResourceVisibility.SetRestrictToCurrentUser(TRUE);
                                 SetResourceVisibility.RUNMODAL;
                                 BuildTmpTable;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100528604;;Container;
                ContainerType=ContentArea }

    { 1100528619;1;Group  ;
                CaptionML=[DEU=Filter;
                           ENU=Filters;
                           NLD=Filters;
                           NOR=Filtre;
                           SVE=Filter];
                GroupType=Group }

    { 1100528620;2;Field  ;
                Name=<Control1100528619>;
                CaptionML=[DEU=Benutzer-ID;
                           ENU=User ID;
                           NLD=Gebruikers ID;
                           NOR=Bruker-ID;
                           SVE=Anv„ndar-ID];
                SourceExpr=UserIDFilter;
                TableRelation="User Setup";
                OnValidate=BEGIN
                             BuildTmpTable;
                           END;
                            }

    { 1100528626;2;Field  ;
                CaptionML=[DEU=Disziplin;
                           ENU=Discipline;
                           NLD=Discipline;
                           NOR=Disiplin;
                           SVE=Disciplin];
                SourceExpr=DisciplineFilter;
                TableRelation=Discipline;
                OnValidate=BEGIN
                             BuildTmpTable;
                           END;
                            }

    { 1100528605;1;Group  ;
                GroupType=Repeater }

    { 1100528607;2;Field  ;
                SourceExpr="Resource Type" }

    { 1100528608;2;Field  ;
                SourceExpr="Resource Company" }

    { 1100528601;2;Field  ;
                SourceExpr="Resource No.";
                Editable=FALSE }

    { 1100528606;2;Field  ;
                SourceExpr="Resource Name" }

    { 1100528602;2;Field  ;
                SourceExpr="Visible in GWP";
                OnValidate=BEGIN
                             UpdateVisibleResource;
                           END;
                            }

    { 1100528603;2;Field  ;
                SourceExpr="Visible in 4PS Contruct";
                OnValidate=BEGIN
                             UpdateVisibleResource;
                           END;
                            }

    { 1100528611;2;Field  ;
                SourceExpr="Visible in GRP";
                OnValidate=BEGIN
                             UpdateVisibleResource;
                           END;
                            }

    { 1100528612;2;Field  ;
                SourceExpr="Source No." }

    { 1100528613;2;Field  ;
                SourceExpr="Source No. 2" }

    { 1100528614;2;Field  ;
                SourceExpr="Search Name" }

    { 1100528615;2;Field  ;
                SourceExpr=Schedule }

    { 1100528616;2;Field  ;
                SourceExpr="Planner Company" }

    { 1100528617;2;Field  ;
                SourceExpr=Planner }

    { 1100528618;2;Field  ;
                SourceExpr="Active in FSA" }

    { 1100528600;2;Field  ;
                CaptionML=[DEU=Kostenstelle;
                           ENU=Department Code;
                           NLD=Kostenplaats;
                           NOR=Avdelingskode;
                           SVE=Avdelningskod];
                SourceExpr=DepartmentCode;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528621;2;Field  ;
                CaptionML=[DEU=Gebietscode;
                           ENU=Territory Code;
                           NLD=Regio;
                           NOR=Distriktskode;
                           SVE=Distriktskod];
                SourceExpr=TerritoryCode;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528622;2;Field  ;
                CaptionML=[DEU=Fachgruppe;
                           ENU=Trade Association;
                           NLD=Vakgroep;
                           NOR=Bransjeorganisasjon;
                           SVE=Branschorganisation];
                SourceExpr=TradeAssociation;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528623;2;Field  ;
                CaptionML=[DEU=Ort;
                           ENU=City;
                           NLD=Plaats;
                           NOR=Poststed;
                           SVE=Ort];
                SourceExpr=City;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528624;2;Field  ;
                CaptionML=[DEU=PLZ-Code;
                           ENU=Post Code;
                           NLD=Postcode;
                           NOR=Postnr;
                           SVE=Postnr];
                SourceExpr=PostCode;
                Visible=FALSE;
                Editable=FALSE }

    { 1100528625;2;Field  ;
                CaptionML=[DEU=Extern;
                           ENU=External;
                           NLD=Extern;
                           NOR=Eksternt;
                           SVE=Externt];
                SourceExpr=External;
                Visible=FALSE;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      UserIDFilter@1100528600 : Text;
      DisciplineFilter@1100528607 : Text;
      DepartmentCode@1100528601 : Code[20];
      TerritoryCode@1100528602 : Code[10];
      TradeAssociation@1100528603 : Code[10];
      City@1100528604 : Text[30];
      PostCode@1100528605 : Code[20];
      External@1100528606 : Boolean;
      Text000@1100528608 : TextConst 'DEU=In GWP sichtbar, in 4PS Construct sichtbar, in GRP sichtbar;ENU=Visible in GWP,Visible in 4PS Construct,Visible in GRP;NLD=Zichtbaar in GWP,Zichtbaar in 4PS Construct,Zichtbaar in GRP;SVE=Synlig i GWP,Synlig i 4PS Construct,Synlig i GRP';

    LOCAL PROCEDURE BuildTmpTable@1100528601();
    VAR
      ResourceWOP@1100528601 : Record 11229278;
      VisibleResourceWOP@1100528600 : Record 11229285;
      UserSetup@1100528602 : Record 91;
      ResourceMgtWorkOrderPlan@1100528603 : Codeunit 11229277;
    BEGIN
      CurrPage.SETSELECTIONFILTER(Rec);
      RESET;
      DELETEALL;
      UserSetup.SETRANGE("User ID", UserIDFilter);
      UserSetup.FINDSET;
      IF DisciplineFilter <> '' THEN
        ResourceWOP.GetResourceDSByDisciplineFilter(DisciplineFilter, ResourceWOP);
      ResourceMgtWorkOrderPlan.GetPlannableResourcesDS(ResourceWOP);
      REPEAT
        IF ResourceWOP.FINDSET THEN
          REPEAT
            VisibleResourceWOP.SETFILTER("User ID", UserIDFilter);
            IF NOT VisibleResourceWOP.GET(UserSetup."User ID", ResourceWOP."No.") THEN BEGIN
              INIT;
              "User ID" := UserSetup."User ID";
              "Resource No." := ResourceWOP."No.";
            END ELSE
              Rec := VisibleResourceWOP;
            INSERT;
          UNTIL ResourceWOP.NEXT = 0;
      UNTIL UserSetup.NEXT = 0;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE UpdateVisibleResource@1100528604();
    VAR
      VisibleResourceWOP@1100528600 : Record 11229285;
    BEGIN
      IF "Visible in 4PS Contruct" OR "Visible in GWP" OR "Visible in GRP" THEN BEGIN
        IF NOT VisibleResourceWOP.GET("User ID", "Resource No.") THEN BEGIN
          VisibleResourceWOP := Rec;
          VisibleResourceWOP.INSERT(TRUE);
        END ELSE BEGIN
          VisibleResourceWOP."Visible in 4PS Contruct" := "Visible in 4PS Contruct";
          VisibleResourceWOP."Visible in GWP" := "Visible in GWP";
          VisibleResourceWOP."Visible in GRP" := "Visible in GRP";
          VisibleResourceWOP.MODIFY(TRUE);
        END;
      END ELSE
        IF VisibleResourceWOP.GET("User ID", "Resource No.") THEN
          VisibleResourceWOP.DELETE(TRUE);
    END;

    LOCAL PROCEDURE DetermineSourceData@1100528609();
    VAR
      Employee@1100528600 : Record 5200;
      Vendor@1100528601 : Record 23;
      PlantNumber@1100528602 : Record 11012552;
    BEGIN
      DepartmentCode := '';
      TerritoryCode := '';
      TradeAssociation := '';
      City := '';
      PostCode := '';
      External := FALSE;
      CASE "Resource Type" OF
        "Resource Type"::Employee:
          BEGIN
            IF "Resource Company" <> COMPANYNAME THEN
              Employee.CHANGECOMPANY("Resource Company");
            IF NOT Employee.GET("Source No.") THEN
              Employee.INIT;
            DepartmentCode := Employee."Global Dimension 1 Code";
            TerritoryCode := Employee."Territory Code";
            TradeAssociation := Employee."Trade Association";
            City := Employee.City;
            PostCode := Employee."Post Code";
            External := Employee.External;
          END;
        "Resource Type"::Subcontractor:
          BEGIN
            IF "Resource Company" <> COMPANYNAME THEN
              Vendor.CHANGECOMPANY("Resource Company");
            IF NOT Vendor.GET("Source No.") THEN
              Vendor.INIT;
            DepartmentCode := Vendor."Global Dimension 1 Code";
            TerritoryCode := Vendor."Territory Code";
            City := Vendor.City;
            PostCode := Vendor."Post Code";
          END;
        "Resource Type"::Plant:
          BEGIN
            IF "Resource Company" <> COMPANYNAME THEN
              PlantNumber.CHANGECOMPANY("Resource Company");
            IF NOT PlantNumber.GET("Source No.", "Source No. 2") THEN
              PlantNumber.INIT;
            DepartmentCode := PlantNumber."Department Code";
          END;
      END;
    END;

    BEGIN
    END.
  }
}

