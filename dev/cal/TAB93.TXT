OBJECT Table 93 Vendor Posting Group
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01,4PS14.00,NAVSE;
  }
  PROPERTIES
  {
    OnDelete=VAR
               LedgerbyProjTypeVendorGr@1100528500 : Record 11020252;
             BEGIN
               CheckGroupUsage;

               //**4PS.sn
               LedgerbyProjTypeVendorGr.SETRANGE("Project Type No.", Code);
               LedgerbyProjTypeVendorGr.DELETEALL;
               //**4PS.sn
             END;

    CaptionML=[ENU=Vendor Posting Group;
               NOR=Bokf›ringsgruppe - leverand›r;
               SVE=Leverant”rsbokf”ringsmall];
    LookupPageID=Page111;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 2   ;   ;Payables Account    ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Payables Account",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Payables Account",FALSE,FALSE,GLAccountCategory."Account Category"::Liabilities,GLAccountCategoryMgt.GetCurrentLiabilities);
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Payables Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount(
                                                                  "Payables Account",GLAccountCategory."Account Category"::Liabilities,GLAccountCategoryMgt.GetCurrentLiabilities);

                                                              VALIDATE("Payables Account");
                                                            END;

                                                   CaptionML=[ENU=Payables Account;
                                                              NOR=Samlekonto (levr.);
                                                              SVE=Leverant”rsskulder] }
    { 7   ;   ;Service Charge Acc. ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Service Charge Acc.",TRUE,TRUE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Service Charge Acc.",TRUE,TRUE,GLAccountCategory."Account Category"::Liabilities,GLAccountCategoryMgt.GetFeesExpense);
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Service Charge Acc.")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount(
                                                                  "Service Charge Acc.",GLAccountCategory."Account Category"::Liabilities,GLAccountCategoryMgt.GetFeesExpense);

                                                              VALIDATE("Service Charge Acc.");
                                                            END;

                                                   CaptionML=[ENU=Service Charge Acc.;
                                                              NOR=Gebyrkonto;
                                                              SVE=Faktureringsavgifter] }
    { 8   ;   ;Payment Disc. Debit Acc.;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Payment Disc. Debit Acc.",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount("Payment Disc. Debit Acc.",FALSE,FALSE,GLAccountCategory."Account Category"::Income,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Payment Disc. Debit Acc.")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Payment Disc. Debit Acc.",GLAccountCategory."Account Category"::Income,'');

                                                              VALIDATE("Payment Disc. Debit Acc.");
                                                            END;

                                                   CaptionML=[ENU=Payment Disc. Debit Acc.;
                                                              NOR=Kontantrabatt - debetkonto;
                                                              SVE=Betalningsrabatt debet] }
    { 9   ;   ;Invoice Rounding Account;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Invoice Rounding Account",TRUE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount("Invoice Rounding Account",TRUE,FALSE,GLAccountCategory."Account Category"::Expense,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Invoice Rounding Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Invoice Rounding Account",GLAccountCategory."Account Category"::Expense,'');

                                                              VALIDATE("Invoice Rounding Account");
                                                            END;

                                                   CaptionML=[ENU=Invoice Rounding Account;
                                                              NOR=Fakturaavrundingskonto;
                                                              SVE=™resutj„mning] }
    { 10  ;   ;Debit Curr. Appln. Rndg. Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Debit Curr. Appln. Rndg. Acc.",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Debit Curr. Appln. Rndg. Acc.",FALSE,FALSE,GLAccountCategory."Account Category"::Income,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Debit Curr. Appln. Rndg. Acc.")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Debit Curr. Appln. Rndg. Acc.",GLAccountCategory."Account Category"::Income,'');

                                                              VALIDATE("Debit Curr. Appln. Rndg. Acc.");
                                                            END;

                                                   CaptionML=[ENU=Debit Curr. Appln. Rndg. Acc.;
                                                              NOR=Debetkonto for valutaavrund.;
                                                              SVE=Debet valutakopp. avrundning] }
    { 11  ;   ;Credit Curr. Appln. Rndg. Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Credit Curr. Appln. Rndg. Acc.",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Credit Curr. Appln. Rndg. Acc.",FALSE,FALSE,GLAccountCategory."Account Category"::Income,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Credit Curr. Appln. Rndg. Acc.")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Credit Curr. Appln. Rndg. Acc.",GLAccountCategory."Account Category"::Income,'');

                                                              VALIDATE("Credit Curr. Appln. Rndg. Acc.");
                                                            END;

                                                   CaptionML=[ENU=Credit Curr. Appln. Rndg. Acc.;
                                                              NOR=Kreditkonto for valutaavrund.;
                                                              SVE=Kredit valutakopp. avrundning] }
    { 12  ;   ;Debit Rounding Account;Code20      ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Debit Rounding Account",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount("Debit Rounding Account",FALSE,FALSE,GLAccountCategory."Account Category"::Expense,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Debit Rounding Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Debit Rounding Account",GLAccountCategory."Account Category"::Expense,'');

                                                              VALIDATE("Debit Rounding Account");
                                                            END;

                                                   CaptionML=[ENU=Debit Rounding Account;
                                                              NOR=Avrundingskonto - debet;
                                                              SVE=Debetavrundning] }
    { 13  ;   ;Credit Rounding Account;Code20     ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Credit Rounding Account",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount("Credit Rounding Account",FALSE,FALSE,GLAccountCategory."Account Category"::Expense,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Credit Rounding Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Credit Rounding Account",GLAccountCategory."Account Category"::Expense,'');

                                                              VALIDATE("Credit Rounding Account");
                                                            END;

                                                   CaptionML=[ENU=Credit Rounding Account;
                                                              NOR=Avrundingskonto - kredit;
                                                              SVE=Kreditavrundning] }
    { 16  ;   ;Payment Disc. Credit Acc.;Code20   ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Payment Disc. Credit Acc.",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount("Payment Disc. Credit Acc.",FALSE,FALSE,GLAccountCategory."Account Category"::Income,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Payment Disc. Credit Acc.")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Payment Disc. Credit Acc.",GLAccountCategory."Account Category"::Income,'');

                                                              VALIDATE("Payment Disc. Credit Acc.");
                                                            END;

                                                   CaptionML=[ENU=Payment Disc. Credit Acc.;
                                                              NOR=Kontantrabatt - kreditkonto;
                                                              SVE=Kassarabatt kredit] }
    { 17  ;   ;Payment Tolerance Debit Acc.;Code20;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Payment Tolerance Debit Acc.",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Payment Tolerance Debit Acc.",FALSE,FALSE,
                                                                    GLAccountCategory."Account Category"::Income,GLAccountCategoryMgt.GetIncomeInterest);
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Payment Tolerance Debit Acc.")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount(
                                                                  "Payment Tolerance Debit Acc.",GLAccountCategory."Account Category"::Income,GLAccountCategoryMgt.GetIncomeInterest);

                                                              VALIDATE("Payment Tolerance Debit Acc.");
                                                            END;

                                                   CaptionML=[ENU=Payment Tolerance Debit Acc.;
                                                              NOR=Betalingstoler. - debetkonto;
                                                              SVE=Betalningstolerans debet] }
    { 18  ;   ;Payment Tolerance Credit Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Payment Tolerance Credit Acc.",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Payment Tolerance Credit Acc.",FALSE,FALSE,
                                                                    GLAccountCategory."Account Category"::Income,GLAccountCategoryMgt.GetIncomeInterest);
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Payment Tolerance Credit Acc.")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount(
                                                                  "Payment Tolerance Credit Acc.",GLAccountCategory."Account Category"::Income,GLAccountCategoryMgt.GetIncomeInterest);

                                                              VALIDATE("Payment Tolerance Credit Acc.");
                                                            END;

                                                   CaptionML=[ENU=Payment Tolerance Credit Acc.;
                                                              NOR=Betalingstoler. - kreditkonto;
                                                              SVE=Betalningstolerans kredit] }
    { 20  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Description;
                                                              SVE=Beskrivning] }
    { 21  ;   ;View All Accounts on Lookup;Boolean;CaptionML=[ENU=View All Accounts on Lookup;
                                                              NOR=Vis alle konti p† oppslag] }
    { 11200;  ;Inward Reg. Bridging Debt;Code20   ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Inward Reg. Bridging Debt;
                                                   Description=NAVSE (11200) }
    { 11012000;;Invoices Exp. Acc. Labor;Code20   ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Invoices Expected Acc. Labor;
                                                              NOR=Fakturaer forventet, akk. arbeidskraft;
                                                              SVE=Fakturor f”rv„ntat, ack. arbetskraft] }
    { 11012010;;Invoices Exp. Acc. Material;Code20;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Invoices Expected Acc. Material;
                                                              NOR=Fakturaer forventet, akk. materiale;
                                                              SVE=Fakturor f”rv„ntat, ack. material] }
    { 11012020;;Invoices Exp. Acc. Plant;Code20   ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Invoices Expected Acc. Plant;
                                                              NOR=Fakturaer forventet, akk. maskin;
                                                              SVE=Fakturor f”rv„ntat, ack. Maskin] }
    { 11012030;;Invoices Exp. Acc. Subcontr.;Code20;
                                                   TableRelation="G/L Account";
                                                   CaptionML=[ENU=Invoices Expected Acc. Subcontracting;
                                                              NOR=Fakturaer forventet, akk. underentrepen›r;
                                                              SVE=Fakturor f”rv„ntat, ack. Underentreprenad] }
    { 11012040;;Invoices Exp. Acc. Sundry;Code20  ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Invoices Expected Acc. Sundry;
                                                              NOR=Fakturaer forventet, akk. diverse;
                                                              SVE=Fakturor f”rv„ntat, ack. diversa] }
    { 11012100;;Retention Suspense Acc.;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                GLAccountCategoryMgt.CheckGLAccount("Retention Suspense Acc.",TRUE,FALSE,0,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              //**4PS
                                                              GLAccountCategoryMgt.LookupGLAccount("Retention Suspense Acc.",0,'');
                                                            END;

                                                   CaptionML=[ENU=Retention Suspense Acc.;
                                                              NOR=Gjenv‘rende spenning akk.;
                                                              SVE=Kvarst†ende bevakning ack.];
                                                   Description=Retention }
    { 11020270;;Small Order Charge Acc.;Code20    ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Small Order Charge Acc.;
                                                              NOR=Gebyr for mindre ordre akk.;
                                                              SVE=Avgift f”r mindre order ack.];
                                                   Description=**4PS** }
    { 11020271;;Transport Charge Acc.;Code20      ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Transport Charge Acc.;
                                                              NOR=Transportgebyr akk.;
                                                              SVE=Transportavgift ack.];
                                                   Description=**4PS** }
    { 11020272;;Packing Charge Acc.;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Packing Charge Acc.;
                                                              NOR=Pakkegebyr akk.;
                                                              SVE=F”rpackningsavgift ack.];
                                                   Description=**4PS** }
    { 11020273;;Deleted Discount Acc.;Code20      ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Deleted Discount Acc.;
                                                              NOR=Slettet rabattkonto akk.;
                                                              SVE=Borttaget rabattkonto];
                                                   Description=**4PS** }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code                                     }
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      GLAccountCategory@1001 : Record 570;
      GLAccountCategoryMgt@1002 : Codeunit 570;
      PostingSetupMgt@1004 : Codeunit 48;
      YouCannotDeleteErr@1003 : TextConst '@@@="%1 = Code";ENU=You cannot delete %1.;NOR=Du kan ikke slette %1.';

    LOCAL PROCEDURE CheckGroupUsage@8();
    VAR
      Vendor@1000 : Record 23;
      VendorLedgerEntry@1001 : Record 25;
    BEGIN
      Vendor.SETRANGE("Vendor Posting Group",Code);
      IF NOT Vendor.ISEMPTY THEN
        ERROR(YouCannotDeleteErr,Code);

      VendorLedgerEntry.SETRANGE("Vendor Posting Group",Code);
      IF NOT VendorLedgerEntry.ISEMPTY THEN
        ERROR(YouCannotDeleteErr,Code);
    END;

    [External]
    PROCEDURE GetPayablesAccount@6() : Code[20];
    BEGIN
      IF "Payables Account" = '' THEN
        PostingSetupMgt.SendVendPostingGroupNotification(Rec,FIELDCAPTION("Payables Account"));
      TESTFIELD("Payables Account");
      EXIT("Payables Account");
    END;

    [External]
    PROCEDURE GetPmtDiscountAccount@1(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        IF "Payment Disc. Debit Acc." = '' THEN
          PostingSetupMgt.SendVendPostingGroupNotification(Rec,FIELDCAPTION("Payment Disc. Debit Acc."));
        TESTFIELD("Payment Disc. Debit Acc.");
        EXIT("Payment Disc. Debit Acc.");
      END;
      IF "Payment Disc. Credit Acc." = '' THEN
        PostingSetupMgt.SendVendPostingGroupNotification(Rec,FIELDCAPTION("Payment Disc. Credit Acc."));
      TESTFIELD("Payment Disc. Credit Acc.");
      EXIT("Payment Disc. Credit Acc.");
    END;

    [External]
    PROCEDURE GetPmtToleranceAccount@3(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        IF "Payment Tolerance Debit Acc." = '' THEN
          PostingSetupMgt.SendVendPostingGroupNotification(Rec,FIELDCAPTION("Payment Tolerance Debit Acc."));
        TESTFIELD("Payment Tolerance Debit Acc.");
        EXIT("Payment Tolerance Debit Acc.");
      END;
      IF "Payment Tolerance Credit Acc." = '' THEN
        PostingSetupMgt.SendVendPostingGroupNotification(Rec,FIELDCAPTION("Payment Tolerance Credit Acc."));
      TESTFIELD("Payment Tolerance Credit Acc.");
      EXIT("Payment Tolerance Credit Acc.");
    END;

    [External]
    PROCEDURE GetRoundingAccount@4(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        IF "Debit Rounding Account" = '' THEN
          PostingSetupMgt.SendVendPostingGroupNotification(Rec,FIELDCAPTION("Debit Rounding Account"));
        TESTFIELD("Debit Rounding Account");
        EXIT("Debit Rounding Account");
      END;
      IF "Credit Rounding Account" = '' THEN
        PostingSetupMgt.SendVendPostingGroupNotification(Rec,FIELDCAPTION("Credit Rounding Account"));
      TESTFIELD("Credit Rounding Account");
      EXIT("Credit Rounding Account");
    END;

    [External]
    PROCEDURE GetApplRoundingAccount@5(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        IF "Debit Curr. Appln. Rndg. Acc." = '' THEN
          PostingSetupMgt.SendVendPostingGroupNotification(Rec,FIELDCAPTION("Debit Curr. Appln. Rndg. Acc."));
        TESTFIELD("Debit Curr. Appln. Rndg. Acc.");
        EXIT("Debit Curr. Appln. Rndg. Acc.");
      END;
      IF "Credit Curr. Appln. Rndg. Acc." = '' THEN
        PostingSetupMgt.SendVendPostingGroupNotification(Rec,FIELDCAPTION("Credit Curr. Appln. Rndg. Acc."));
      TESTFIELD("Credit Curr. Appln. Rndg. Acc.");
      EXIT("Credit Curr. Appln. Rndg. Acc.");
    END;

    [External]
    PROCEDURE GetInvRoundingAccount@9() : Code[20];
    BEGIN
      IF "Invoice Rounding Account" = '' THEN
        PostingSetupMgt.SendVendPostingGroupNotification(Rec,FIELDCAPTION("Invoice Rounding Account"));
      TESTFIELD("Invoice Rounding Account");
      EXIT("Invoice Rounding Account");
    END;

    [External]
    PROCEDURE GetServiceChargeAccount@7() : Code[20];
    BEGIN
      IF "Service Charge Acc." = '' THEN
        PostingSetupMgt.SendVendPostingGroupNotification(Rec,FIELDCAPTION("Service Charge Acc."));
      TESTFIELD("Service Charge Acc.");
      EXIT("Service Charge Acc.");
    END;

    [External]
    PROCEDURE SetAccountVisibility@10(VAR PmtToleranceVisible@1000 : Boolean;VAR PmtDiscountVisible@1002 : Boolean;VAR InvRoundingVisible@1001 : Boolean;VAR ApplnRoundingVisible@1005 : Boolean);
    VAR
      PurchSetup@1003 : Record 312;
      PaymentTerms@1004 : Record 3;
    BEGIN
      GLSetup.GET;
      PmtToleranceVisible := GLSetup.GetPmtToleranceVisible;
      PmtDiscountVisible := PaymentTerms.UsePaymentDiscount;

      PurchSetup.GET;
      InvRoundingVisible := PurchSetup."Invoice Rounding";
      ApplnRoundingVisible := PurchSetup."Appln. between Currencies" <> PurchSetup."Appln. between Currencies"::None;
    END;

    BEGIN
    END.
  }
}

