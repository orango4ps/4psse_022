OBJECT Page 9087 Sales Line FactBox
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Line Details;
               NOR=Salgslinjedetaljer;
               SVE=F”rs„ljningsraddetaljer];
    SourceTable=Table37;
    PageType=CardPart;
    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Reserved Quantity","Attached Doc Count");
                       SalesInfoPaneMgt.ResetItemNo;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           ClearSalesHeader;
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 8   ;1   ;Field     ;
                Name=ItemNo;
                Lookup=No;
                CaptionML=[ENU=Item No.;
                           NOR=Varenr.;
                           SVE=Artikelnr];
                ToolTipML=[ENU=Specifies the item that is handled on the sales line.;
                           NOR=Angir varen som behandles p† salgslinjen.;
                           SVE=Anger artikeln som hanteras p† f”rs„ljningsraden.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShowNo;
                OnDrillDown=BEGIN
                              SalesInfoPaneMgt.LookupItem(Rec);
                            END;
                             }

    { 13  ;1   ;Field     ;
                Name=Required Quantity;
                CaptionML=[ENU=Required Quantity;
                           NOR=N›dvendig antall;
                           SVE=Obligatoriskt antal];
                ToolTipML=[ENU=Specifies how many units of the item are required on the sales line.;
                           NOR=Angir hvor mange enheter av varen som kreves p† salgslinjen.;
                           SVE=Anger hur m†nga enheter av artikeln som kr„vs p† f”rs„ljningsraden.];
                ApplicationArea=#Reservation;
                DecimalPlaces=0:5;
                SourceExpr="Outstanding Quantity" - "Reserved Quantity" }

    { 17  ;1   ;Group     ;
                CaptionML=[ENU=Attachments;
                           NOR=Vedlegg;
                           SVE=Bilagor];
                GroupType=Group }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Documents;
                           NOR=Dokumenter;
                           SVE=Dokument];
                ToolTipML=[ENU=Specifies the number of attachments.;
                           NOR=Angir antall vedlegg.;
                           SVE=Anger antalet bilagor.];
                ApplicationArea=#All;
                SourceExpr="Attached Doc Count";
                OnDrillDown=VAR
                              DocumentAttachmentDetails@1000 : Page 1173;
                              RecRef@1001 : RecordRef;
                            BEGIN
                              RecRef.GETTABLE(Rec);
                              DocumentAttachmentDetails.OpenForRecRef(RecRef);
                              DocumentAttachmentDetails.RUNMODAL;
                            END;
                             }

    { 12  ;1   ;Group     ;
                CaptionML=[ENU=Availability;
                           NOR=Disponibelt;
                           SVE=Disposition];
                GroupType=Group }

    { 10  ;2   ;Field     ;
                Name=Shipment Date;
                CaptionML=[ENU=Shipment Date;
                           NOR=Forsendelsesdato;
                           SVE=Utleveransdatum];
                ToolTipML=[ENU=Specifies when the items on the sales line must be shipped.;
                           NOR=Angir n†r varene p† salgslinjen m† leveres.;
                           SVE=Anger n„r artiklarna p† f”rs„ljningsraden m†ste utlevereras.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesInfoPaneMgt.CalcAvailabilityDate(Rec) }

    { 3   ;2   ;Field     ;
                Name=Item Availability;
                DrillDown=Yes;
                CaptionML=[ENU=Item Availability;
                           NOR=Varetilgjengelighet;
                           SVE=Artikeldisposition];
                ToolTipML=[ENU=Specifies how may units of the item on the sales line are available, in inventory or incoming before the shipment date.;
                           NOR=Angir hvor mange enheter av varen p† salgslinjen som er tilgjengelig p† lager eller som innkommende f›r leveringsdatoen.;
                           SVE=Anger hur m†nga enheter av artikeln p† f”rs„ljningsraden som „r tillg„ngliga, i lager eller p† ing†ng f”re utleveransdatumet.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcAvailability(Rec);
                OnDrillDown=BEGIN
                              ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByEvent);
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1   ;2   ;Field     ;
                Name=Available Inventory;
                CaptionML=[ENU=Available Inventory;
                           NOR=Disponibel beholdning;
                           SVE=Disponibelt lager];
                ToolTipML=[ENU=Specifies the quantity of the item that is currently in inventory and not reserved for other demand.;
                           NOR=Angir antallet av varen som for ›yeblikket er p† lager og som ikke er reservert for andre behov.;
                           SVE=Visar antalet artiklar som f”r n„rvarande finns i lager och som inte „r reserverade f”r andra „ndam†l.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcAvailableInventory(Rec) }

    { 2   ;2   ;Field     ;
                Name=Scheduled Receipt;
                CaptionML=[ENU=Scheduled Receipt;
                           NOR=Tidsplanlagt mottak;
                           SVE=Planenlig inleverans];
                ToolTipML=[ENU=Specifies how many units of the assembly component are inbound on purchase orders, transfer orders, assembly orders, firm planned production orders, and released production orders.;
                           NOR=Angir hvor mange enheter av monteringskomponenten som er inng†ende p† kj›psordrer, overf›ringsordrer, monteringsordrer, fast planlagte produksjonsordrer og frigitte produksjonsordrer.;
                           SVE=Anger hur m†nga enheter av monteringskomponenten som „r ankommande p† ink”psorder, ”verf”ringsorder, monteringsorder, fast planerade produktionsorder och utsl„ppta produktionsorder.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcScheduledReceipt(Rec) }

    { 4   ;2   ;Field     ;
                Name=Reserved Receipt;
                CaptionML=[ENU=Reserved Receipt;
                           NOR=Reservert mottak;
                           SVE=Reserverad inleverans];
                ToolTipML=[ENU=Specifies how many units of the item on the sales line are reserved on incoming receipts.;
                           NOR=Angir hvor mange enheter av varen p† salgslinjen som er reservert p† innkommende f›lgesedler.;
                           SVE=Anger hur m†nga enheter av artikeln p† f”rs„ljningsraden som „r reserverade p† inkommande inleveranser.];
                ApplicationArea=#Reservation;
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcReservedRequirements(Rec) }

    { 6   ;2   ;Field     ;
                Name=Gross Requirements;
                CaptionML=[ENU=Gross Requirements;
                           NOR=Bruttobehov;
                           SVE=Bruttobehov];
                ToolTipML=[ENU=Specifies, for the item on the sales line, dependent demand plus independent demand. Dependent demand comes production order components of all statuses, assembly order components, and planning lines. Independent demand comes from sales orders, transfer orders, service orders, job tasks, and demand forecasts.;
                           NOR=Angir konkret behov pluss ikke-konkret behov for varen p† salgslinjen. Konkret behov kommer fra produksjonsordrekomponenter med alle typer statuser, monteringsordrekomponenter og planleggingslinjer. Ikke-konkret behov kommer fra ordrer, overf›ringsordrer, serviceordrer, prosjektoppgaver og behovsprognoser.;
                           SVE=Anger den h„rledda och icke h„rledda efterfr†gan f”r artikeln p† f”rs„ljningsraden. Den h„rledda efterfr†gan kommer fr†n produktionsorderkomponenter med alla m”jliga statusar, monteringsorderkomponenter samt planeringsrader. Den icke h„rledda efterfr†gan kommer fr†n f”rs„ljningsorder, ”verf”ringsorder, serviceorder, projektaktiviteter och efterfr†geprognoser.];
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcGrossRequirements(Rec) }

    { 9   ;2   ;Field     ;
                Name=Reserved Requirements;
                CaptionML=[ENU=Reserved Requirements;
                           NOR=Reserverte behov;
                           SVE=Reserverade behov];
                ToolTipML=[ENU=Specifies, for the item on the sales line, how many are reserved on demand records.;
                           NOR=Angir hvor mange varer p† salgslinjen som er reservert for behovsposter.;
                           SVE=Anger hur m†nga enheter av artikeln p† f”rs„ljningsraden som „r reserverade i efterfr†geposter.];
                ApplicationArea=#Reservation;
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcReservedDemand(Rec) }

    { 16  ;1   ;Group     ;
                Name=Item;
                CaptionML=[ENU=Item;
                           NOR=Vare;
                           SVE=Artikel];
                GroupType=Group }

    { 15  ;2   ;Field     ;
                Name=UnitofMeasureCode;
                CaptionML=[ENU=Unit of Measure Code;
                           NOR=Enhetskode;
                           SVE=Enhetskod];
                ToolTipML=[ENU=Specifies the unit of measure that is used to determine the value in the Unit Price field on the sales line.;
                           NOR=Angir enheten som brukes til † fastsl† verdien i feltet Salgspris p† salgslinjen.;
                           SVE=Anger m†ttenheten som anv„nds f”r att best„mma v„rdet i f„ltet Enhetspris p† f”rs„ljningsraden.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code" }

    { 14  ;2   ;Field     ;
                Name=Qty. per Unit of Measure;
                CaptionML=[ENU=Qty. per Unit of Measure;
                           NOR=Antall per enhet;
                           SVE=Antal per enhet];
                ToolTipML=[ENU=Specifies an auto-filled number if you have included Sales Unit of Measure on the item card and a quantity in the Qty. per Unit of Measure field.;
                           NOR=Angir et automatisk utfylt nummer hvis du har inkludert Salgsenhet p† varekortet og et antall i feltet Antall per enhet.;
                           SVE=Anger ett automatiskt ifyllt tal om du har tagit med Enhet i f”rs„ljning p† artikelkortet och att antal i f„ltet Antal per enhet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Qty. per Unit of Measure" }

    { 5   ;2   ;Field     ;
                Name=Substitutions;
                DrillDown=Yes;
                CaptionML=[ENU=Substitutions;
                           NOR=Erstatninger;
                           SVE=Ers„ttning];
                ToolTipML=[ENU=Specifies other items that are set up to be traded instead of the item in case it is not available.;
                           NOR=Angir andre varer som er definert for handel i stedet for varen hvis den ikke er tilgjengelig.;
                           SVE=Anger andra artiklar som ska erbjudas i st„llet f”r artikeln om den inte „r tillg„nglig.];
                ApplicationArea=#Suite;
                SourceExpr=SalesInfoPaneMgt.CalcNoOfSubstitutions(Rec);
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemSub;
                              CurrPage.UPDATE(TRUE);
                              IF (Reserve = Reserve::Always) AND ("No." <> xRec."No.") THEN BEGIN
                                AutoReserve;
                                CurrPage.UPDATE(FALSE);
                              END;
                            END;
                             }

    { 7   ;2   ;Field     ;
                Name=SalesPrices;
                DrillDown=Yes;
                CaptionML=[ENU=Sales Prices;
                           NOR=Salgspriser;
                           SVE=F”rs„ljningspriser];
                ToolTipML=[ENU=Specifies special sales prices that you grant when certain conditions are met, such as customer, quantity, or ending date. The price agreements can be for individual customers, for a group of customers, for all customers or for a campaign.;
                           NOR=Angir spesialsalgspriser du gir n†r bestemte betingelser oppfylles, for eksempel kunde, antall eller sluttdato. Prisavtalene kan v‘re for enkeltkunder, for en gruppe av kunder, for alle kunder eller for en kampanje.;
                           SVE=Anger s„rskilda f”rs„ljningspriser som du beviljar n„r vissa villkor uppfylls, till exempel kund, antal eller slutdatum. Prisavtalen kan g„lla f”r enskilda kunder, en grupp kunder, alla kunder eller en kampanj.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesInfoPaneMgt.CalcNoOfSalesPrices(Rec);
                OnDrillDown=BEGIN
                              ShowPrices;
                              CurrPage.UPDATE;
                            END;
                             }

    { 11  ;2   ;Field     ;
                Name=SalesLineDiscounts;
                DrillDown=Yes;
                CaptionML=[ENU=Sales Line Discounts;
                           NOR=Salgslinjerabatter;
                           SVE=F”rs.radrabatter];
                ToolTipML=[ENU=Specifies how many special discounts you grant for the sales line. Choose the value to see the sales line discounts.;
                           NOR=Angir hvor mange spesialrabatter du gir for salgslinjen. Velg verdien for † vise salgslinjerabattene.;
                           SVE=Anger hur m†nga specialrabatter du beviljar f”r f”rs„ljningsraden. V„lj v„rdet f”r att visa f”rs„ljningsradrabatterna.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesInfoPaneMgt.CalcNoOfSalesLineDisc(Rec);
                OnDrillDown=BEGIN
                              ShowLineDisc;
                              CurrPage.UPDATE;
                            END;
                             }

    { 1100525000;2;Field  ;
                Name=Adjusted Profit Perc;
                CaptionML=[ENU=Adjusted Profit %;
                           SVE=Justerad vinst %];
                ToolTipML=[ENU=Specifies the percentage of profit for all sales, taking into account changes that occurred in the purchase prices of the goods.;
                           SVE=Anger vinstprocentandelen f”r all f”rs„ljning, med h„nsyn till konto„ndringar som har „gt rum i varornas ink”pspriser.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=1:1;
                SourceExpr=SalesInfoPaneMgt.CalcAdjustedProfitPercentage(Rec);
                Visible=false;
                Editable=FALSE }

    { 1100530700;2;Field  ;
                Name=Delivery Time;
                CaptionML=[ENU=Delivery Time;
                           SVE=Leveranstid];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesInfoPaneMgt.GetDeliveryTime(Rec);
                Visible=FALSE }

  }
  CODE
  {
    VAR
      SalesHeader@1000 : Record 36;
      SalesPriceCalcMgt@1002 : Codeunit 7000;
      SalesInfoPaneMgt@1001 : Codeunit 7171;
      ItemAvailFormsMgt@1003 : Codeunit 353;

    LOCAL PROCEDURE ShowPrices@15();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLinePrice(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE ShowLineDisc@16();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLineLineDisc(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE ShowNo@29() : Code[20];
    BEGIN
      IF Type <> Type::Item THEN
        EXIT('');
      EXIT("No.");
    END;

    BEGIN
    END.
  }
}

