OBJECT Table 11126150 Ext. Plant Rent Invoice Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GetHeader;
               ExternalPlantRentInvoice.TESTFIELD(ExternalPlantRentInvoice.Status, ExternalPlantRentInvoice.Status::Open);
             END;

    OnModify=BEGIN
               TESTFIELD("Invoiced (Sales)", FALSE);
               GetHeader;
               ExternalPlantRentInvoice.TESTFIELD(ExternalPlantRentInvoice.Status, ExternalPlantRentInvoice.Status::Open);
             END;

    OnDelete=BEGIN
               TESTFIELD("Invoiced (Sales)", FALSE);
               GetHeader;
               ExternalPlantRentInvoice.TESTFIELD(ExternalPlantRentInvoice.Status, ExternalPlantRentInvoice.Status::Open);
               TESTFIELD("Plant Location", '');
             END;

    CaptionML=ENU=External Plant Rent Invoice Line;
  }
  FIELDS
  {
    { 10  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Vendor No.;
                                                              SVE=Leverant”rsnr] }
    { 20  ;   ;External Invoice No.;Code20        ;TableRelation="External Plant Rent Invoice"."External Invoice No." WHERE (Vendor No.=FIELD(Vendor No.));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=External Invoice No. }
    { 30  ;   ;Line No.            ;Integer       ;DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Line No.;
                                                              SVE=Radnr] }
    { 40  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   OnValidate=VAR
                                                                PlantType@1100529000 : Record 11012551;
                                                              BEGIN
                                                                PlantType.GET("Plant Type");
                                                                PlantType.TESTFIELD("Ext. Plant Rental Invoicing", TRUE);
                                                                FillDefaultPlantLocation;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Plant Type;
                                                              SVE=Maskintyp] }
    { 50  ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=VAR
                                                                PlantNumber@1100529000 : Record 11012552;
                                                              BEGIN
                                                                PlantNumber.GET("Plant Type", "Plant No.");
                                                                PlantNumber.TESTFIELD(External, TRUE);
                                                                PlantNumber.TESTFIELD(Vendor, "Vendor No.");
                                                                CALCFIELDS("Plant Description");
                                                                FillDefaultPlantLocation;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Plant No.;
                                                              SVE=Maskinnr];
                                                   SQL Data Type=Integer }
    { 51  ;   ;Plant Description   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".Description WHERE (Plant Type=FIELD(Plant Type),
                                                                                                        No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Plant Description;
                                                              SVE=Maskinbeskrivning];
                                                   Editable=No }
    { 60  ;   ;From Date           ;Date          ;OnValidate=BEGIN
                                                                FillDefaultPlantLocation;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=From Date;
                                                              SVE=Fr†n datum] }
    { 65  ;   ;Until Date          ;Date          ;OnValidate=BEGIN
                                                                FillDefaultPlantLocation;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Until Date;
                                                              SVE=T.o.m. datum] }
    { 80  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Rate);
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Quantity;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 85  ;   ;Time Quantity       ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                VALIDATE(Rate);
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Time Quantity;
                                                              SVE=Tidskvantitet];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 86  ;   ;Time Unit           ;Code10        ;TableRelation="Unit of Measure";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Time Unit;
                                                              SVE=Tidsenhet] }
    { 90  ;   ;Rate                ;Decimal       ;OnValidate=BEGIN
                                                                GLSetup.GET;
                                                                Amount := ROUND(Quantity * "Time Quantity" * Rate, GLSetup."Amount Rounding Precision");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Rate;
                                                              SVE=Avgift];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 100 ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                IF Amount <> 0 THEN BEGIN
                                                                  TESTFIELD(Quantity);
                                                                  TESTFIELD("Time Quantity");
                                                                  Rate := Amount / (Quantity * "Time Quantity");
                                                                  GLSetup.GET;
                                                                  Rate := ROUND(Rate,GLSetup."Unit-Amount Rounding Precision")
                                                                END;
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Amount;
                                                              SVE=Belopp];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 110 ;   ;Plant Location      ;Code20        ;TableRelation="Plant Location";
                                                   OnValidate=VAR
                                                                PlantLocation@1100529000 : Record 11012554;
                                                              BEGIN
                                                                IF "Plant Location" <> '' THEN BEGIN
                                                                  PlantLocation.GET("Plant Location");
                                                                  PlantLocation.TESTFIELD(Depot, FALSE);
                                                                  PlantLocation.CheckBlock(1, TRUE, FALSE);
                                                                END;
                                                                IF ("Plant Location" = '') OR ("Plant Location" <> xRec."Plant Location") THEN
                                                                  Element := '';
                                                                CALCFIELDS("Plant Location Description");
                                                              END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Plant Location;
                                                              SVE=Maskinplats] }
    { 111 ;   ;Plant Location Description;Text50  ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Location".Description WHERE (Code=FIELD(Plant Location)));
                                                   CaptionML=[ENU=Plant Location Description;
                                                              SVE=Beskrivning av Maskinplats];
                                                   Editable=No }
    { 120 ;   ;Element             ;Code20        ;OnValidate=VAR
                                                                PlantElementMgt@1100529000 : Codeunit 11012582;
                                                              BEGIN
                                                                IF Element = '' THEN
                                                                  EXIT;
                                                                TESTFIELD("Plant Location");
                                                                PlantElementMgt.OnValidateElement("Plant Location", Element, '', FALSE);
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupElement(TRUE);
                                                            END;

                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Element;
                                                              SVE=Element] }
    { 130 ;   ;Purchase Order No.  ;Code20        ;TableRelation="Purchase Header".No. WHERE (Document Type=CONST(Order),
                                                                                              Buy-from Vendor No.=FIELD(Vendor No.));
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Purchase Order No.;
                                                              SVE=Ink”psordernr] }
    { 210 ;   ;Invoiced (Sales)    ;Boolean       ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Invoiced (Sales);
                                                   Editable=No }
    { 220 ;   ;Sales Invoice No.   ;Code20        ;TableRelation=IF (Sales Invoice Status=CONST(Proposal)) "Sales Header".No. WHERE (Document Type=CONST(Invoice Proposal))
                                                                 ELSE IF (Sales Invoice Status=CONST(Temporary)) "Sales Header".No. WHERE (Document Type=CONST(Invoice))
                                                                 ELSE IF (Sales Invoice Status=CONST(Posted)) "Sales Invoice Header".No.;
                                                   TestTableRelation=No;
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=[ENU=Sales Invoice No.;
                                                              SVE=F”rs„ljningsfakturanr];
                                                   Editable=No }
    { 230 ;   ;Sales Invoice Status;Option        ;DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Sales Invoice Status;
                                                   OptionCaptionML=[ENU=,Proposal,Temporary,Posted;
                                                                    SVE=,F”rslag,Tillf„lligt,Bokf”rt];
                                                   OptionString=,Proposal,Temporary,Posted;
                                                   BlankZero=Yes;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Vendor No.,External Invoice No.,Line No.;Clustered=Yes }
    {    ;Vendor No.,External Invoice No.,Plant Location,Plant Type,Plant No. }
    {    ;Sales Invoice Status,Sales Invoice No.   }
    {    ;Plant Location,Plant Type,Plant No.      }
    {    ;Plant Type,Plant No.                     }
    {    ;Plant Location,Invoiced (Sales),Vendor No.,External Invoice No.,Line No. }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetup@1100529000 : Record 98;
      ExternalPlantRentInvoice@1100529001 : Record 11126149;

    LOCAL PROCEDURE GetHeader@1100529000();
    BEGIN
      ExternalPlantRentInvoice.GET("Vendor No.", "External Invoice No.");
    END;

    LOCAL PROCEDURE FillDefaultPlantLocation@1100529002();
    VAR
      PlantInventory@1100529000 : Record 11012555;
    BEGIN
      IF ("Plant Type" = '') OR ("Plant No." = '') OR ("From Date" = 0D) OR ("Until Date" = 0D) THEN
        EXIT;
      PlantInventory.SETCURRENTKEY("Plant Type", "Plant No.", "Present from");
      PlantInventory.SETRANGE("Plant Type", "Plant Type");
      PlantInventory.SETRANGE("Plant No.", "Plant No.");
      PlantInventory.SETFILTER("Present from", '<=%1', "Until Date");
      PlantInventory.SETFILTER("Removed on", '>=%1|%2', "From Date", 0D);
      PlantInventory.SETRANGE(Depot, FALSE);
      IF PlantInventory.FINDFIRST THEN BEGIN
        PlantInventory.SETFILTER(Location, '<>%1', PlantInventory.Location);
        IF PlantInventory.ISEMPTY THEN BEGIN
          "Plant Location" := PlantInventory.Location;
          CALCFIELDS("Plant Location Description");
          PlantInventory.CALCFIELDS(Element);
          IF PlantInventory.Element <> '' THEN
            Element := PlantInventory.Element;
        END;
      END;
    END;

    PROCEDURE LookupElement@1100529001(EditableMode@1100529001 : Boolean);
    VAR
      PlantElementMgt@1100529002 : Codeunit 11012582;
      NewElement@1100529000 : Code[20];
    BEGIN
      IF EditableMode THEN BEGIN
        IF "Invoiced (Sales)" THEN
          EditableMode := FALSE
        ELSE BEGIN
          GetHeader;
          IF ExternalPlantRentInvoice.Status <> ExternalPlantRentInvoice.Status::Open THEN
            EditableMode := FALSE;
        END;
      END;
      NewElement := PlantElementMgt.OnLookupElement("Plant Location", Element, '', EditableMode);
      IF (NewElement <> '') AND (NewElement <> Element) THEN
        VALIDATE(Element, NewElement);
    END;

    PROCEDURE ShowPlantInventoryCourse@1100529003(EditMode@1100529002 : Boolean);
    VAR
      PlantInventory@1100529000 : Record 11012555;
    BEGIN
      PlantInventory.SETCURRENTKEY("Plant Type", "Plant No.", "Present from");
      PlantInventory.SETRANGE("Plant Type", "Plant Type");
      PlantInventory.SETRANGE("Plant No.", "Plant No.");
      PlantInventory.SETFILTER("Present from", '<=%1', "Until Date");
      PlantInventory.SETFILTER("Removed on", '>=%1|%2', "From Date", 0D);
      IF NOT EditMode THEN
        PAGE.RUNMODAL(PAGE::"Plant Inventory Course", PlantInventory)
      ELSE BEGIN
        IF PAGE.RUNMODAL(PAGE::"Plant Inventory Course", PlantInventory) = ACTION::LookupOK THEN
          VALIDATE("Plant Location", PlantInventory.Location);
      END;
    END;

    BEGIN
    END.
  }
}

