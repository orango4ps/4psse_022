OBJECT Table 11071789 Subcontractor (Service)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TestIfLineIsUnique;
             END;

    OnModify=BEGIN
               TestIfLineIsUnique;
             END;

    CaptionML=[ENU=Subcontractor (Service);
               NOR=Underentrepen›r (Service);
               SVE=Underentrepren”r (service)];
    LookupPageID=Page11126097;
    DrillDownPageID=Page11126097;
  }
  FIELDS
  {
    { 10  ;   ;Service Contract No.;Code20        ;TableRelation=Service-Contract;
                                                   OnValidate=BEGIN
                                                                IF "Service Contract No." <> '' THEN
                                                                  TESTFIELD("Service Location No.", '');
                                                              END;

                                                   CaptionML=[ENU=Service Contract No.;
                                                              NOR=Servicekontraktnr;
                                                              SVE=Servicekontraktnr] }
    { 15  ;   ;Complex Code        ;Code20        ;TableRelation=Complex;
                                                   CaptionML=[ENU=Complex Code;
                                                              NOR=Komplekskode;
                                                              SVE=Servicekomplexkod] }
    { 20  ;   ;Service Location No.;Code20        ;TableRelation="Service Location";
                                                   OnValidate=BEGIN
                                                                IF "Service Location No." <> '' THEN BEGIN
                                                                  TESTFIELD("Service Contract No.", '');
                                                                  TESTFIELD("Object No.", '');
                                                                  TESTFIELD("Maintenance Scheme Code", '');
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Service Location No.;
                                                              NOR=Servicelokasjon Nr.;
                                                              SVE=Serviceplatsnr] }
    { 30  ;   ;Object No.          ;Code20        ;TableRelation=Service-Object;
                                                   OnValidate=BEGIN
                                                                IF "Object No." <> '' THEN
                                                                  TESTFIELD("Service Location No.", '');
                                                              END;

                                                   CaptionML=[ENU=Object No.;
                                                              NOR=Objektnr.;
                                                              SVE=Objektnr] }
    { 40  ;   ;Maintenance Scheme Code;Code20     ;TableRelation="Maintenance Scheme";
                                                   OnValidate=BEGIN
                                                                IF "Maintenance Scheme Code" <> '' THEN BEGIN
                                                                  TESTFIELD("Service Location No.", '');
                                                                  TESTFIELD("Service Contract No.");
                                                                  TESTFIELD("Object No.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Maintenance Scheme Code;
                                                              NOR=Kode for vedlikeholdsskjema;
                                                              SVE=Kod f”r underh†llsschema] }
    { 50  ;   ;Discipline          ;Code10        ;FieldClass=Normal;
                                                   TableRelation=Discipline;
                                                   CaptionML=[ENU=Discipline;
                                                              NOR=Disiplin;
                                                              SVE=Disciplin] }
    { 60  ;   ;Trade Speciality    ;Code10        ;FieldClass=Normal;
                                                   TableRelation="Trade Speciality".Code WHERE (Discipline=FIELD(Discipline));
                                                   CaptionML=[ENU=Trade Speciality;
                                                              NOR=SNI-nummer;
                                                              SVE=SNI-nummer] }
    { 70  ;   ;Subcontractor       ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Subcontractor;
                                                              NOR=Underentrepren›r;
                                                              SVE=Underentrepren”r] }
    { 80  ;   ;Subcontractor Name  ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Subcontractor)));
                                                   CaptionML=[ENU=Subcontractor Name;
                                                              NOR=Underentrepren›rens navn;
                                                              SVE=Underentrepren”rens namn];
                                                   Editable=No }
    { 90  ;   ;Apply To            ;Option        ;OnValidate=BEGIN
                                                                IF "Apply To" IN ["Apply To"::Call, "Apply To"::Both] THEN
                                                                  TESTFIELD("Maintenance Scheme Code", '');
                                                              END;

                                                   CaptionML=[ENU=Apply To;
                                                              NOR=Gjelder];
                                                   OptionCaptionML=[ENU=Maintenance,Call,,,,Both;
                                                                    NOR=Vedlikehold,Samtale,,,,Begge];
                                                   OptionString=Maintenance,Call,,,,Both }
    { 100 ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              NOR=L›penr.;
                                                              SVE=L”pnr] }
  }
  KEYS
  {
    {    ;Service Contract No.,Complex Code,Service Location No.,Object No.,Maintenance Scheme Code,Discipline,Trade Speciality,Apply To,Entry No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=Line already exists';
      Text001@1100525000 : TextConst 'ENU=Vendor %1 has no Resource';

    PROCEDURE GetSubcontractor@1100528600(IServiceContractNo@1100528600 : Code[20];IServiceLocationNo@1100528602 : Code[20];IObjectNo@1100528601 : Code[20];IMaintenanceSchemeCode@1100528603 : Code[20];IDiscipline@1100528604 : Code[10];ITradeSpeciality@1100528605 : Code[10]) : Code[20];
    BEGIN
      EXIT(GetSubcontractorByLevel(IServiceContractNo, IServiceLocationNo, IObjectNo, IMaintenanceSchemeCode, IDiscipline, ITradeSpeciality, 0, ''));
    END;

    PROCEDURE GetSubcontractorByLevel@1100525001(IServiceContractNo@1100528600 : Code[20];IServiceLocationNo@1100528602 : Code[20];IObjectNo@1100528601 : Code[20];IMaintenanceSchemeCode@1100528603 : Code[20];IDiscipline@1100528604 : Code[10];ITradeSpeciality@1100528605 : Code[10];IStartLevel@1100525000 : Integer;ISubcontractorFilter@1100528611 : Code[250]) : Code[20];
    VAR
      SubcontractorService@1100528606 : Record 11071789;
      ServiceLocation@1100528610 : Record 11012801;
      StartLevel@1100528609 : Integer;
      Level@1100528607 : Integer;
      StopLooking@1100528608 : Boolean;
    BEGIN
      IF IStartLevel > 0 THEN
        StartLevel := IStartLevel
      ELSE BEGIN
        IF IServiceContractNo <> '' THEN
          StartLevel := 1;
        IF IServiceLocationNo <> '' THEN
          StartLevel := 3;
        IF IObjectNo <> '' THEN
          StartLevel := 4;
        IF (IServiceContractNo <> '') AND (IObjectNo <> '') AND (IMaintenanceSchemeCode <> '') THEN
          StartLevel := 5;
      END;
      IF StartLevel = 0 THEN
        EXIT;
      IF IMaintenanceSchemeCode <> '' THEN
        SubcontractorService.SETFILTER("Apply To", '%1|%2',
         SubcontractorService."Apply To"::Maintenance, SubcontractorService."Apply To"::Both)
      ELSE
        SubcontractorService.SETFILTER("Apply To", '%1|%2',
         SubcontractorService."Apply To"::Call, SubcontractorService."Apply To"::Both);

      REPEAT
        Level := StartLevel;
        REPEAT
          SubcontractorService.SETRANGE(Discipline, IDiscipline);
          SubcontractorService.SETRANGE("Trade Speciality", ITradeSpeciality);
          IF ISubcontractorFilter <> '' THEN
            SubcontractorService.SETFILTER(Subcontractor, ISubcontractorFilter)
          ELSE
            SubcontractorService.SETFILTER(Subcontractor, '<>%1', '');

          CASE Level OF
            1:
              BEGIN
                SubcontractorService.SETRANGE("Service Contract No.", IServiceContractNo);
                SubcontractorService.SETRANGE("Complex Code", '');
                SubcontractorService.SETRANGE("Service Location No.", '');
                SubcontractorService.SETRANGE("Object No.", '');
                SubcontractorService.SETRANGE("Maintenance Scheme Code", '');
              END;
            2:
              BEGIN
                IF NOT ServiceLocation.GET(IServiceLocationNo) THEN
                  ServiceLocation.INIT;
                SubcontractorService.SETRANGE("Service Contract No.", '');
                SubcontractorService.SETRANGE("Complex Code", ServiceLocation.GetComplexCode);
                SubcontractorService.SETRANGE("Service Location No.", '');
                SubcontractorService.SETRANGE("Object No.", '');
                SubcontractorService.SETRANGE("Maintenance Scheme Code", '');
              END;
            3:
              BEGIN
                SubcontractorService.SETRANGE("Service Contract No.", '');
                SubcontractorService.SETRANGE("Complex Code", '');
                SubcontractorService.SETRANGE("Service Location No.", IServiceLocationNo);
                SubcontractorService.SETRANGE("Object No.", '');
                SubcontractorService.SETRANGE("Maintenance Scheme Code", '');
              END;
            4:
              BEGIN
                SubcontractorService.SETRANGE("Service Contract No.", ''); //mg.c, 12-02-13: C005789
                SubcontractorService.SETRANGE("Complex Code", '');
                SubcontractorService.SETRANGE("Service Location No.", '');
                SubcontractorService.SETRANGE("Object No.", IObjectNo);
                SubcontractorService.SETRANGE("Maintenance Scheme Code", '');
              END;
            5:
              BEGIN
                SubcontractorService.SETRANGE("Service Contract No.", IServiceContractNo); //mg.c, 12-02-13: C005789
                SubcontractorService.SETRANGE("Complex Code", '');
                SubcontractorService.SETRANGE("Service Location No.", '');
                SubcontractorService.SETRANGE("Object No.", IObjectNo);
                SubcontractorService.SETRANGE("Maintenance Scheme Code", IMaintenanceSchemeCode);
              END;
          END;

          IF SubcontractorService.FINDFIRST THEN
            EXIT(SubcontractorService.Subcontractor);
          Level -= 1;
        UNTIL Level = 0;
        IF IDiscipline = '' THEN
          StopLooking := TRUE;
        IF ITradeSpeciality = '' THEN
          IDiscipline := '';
        IF ITradeSpeciality <> '' THEN
          ITradeSpeciality := '';
      UNTIL StopLooking;
    END;

    PROCEDURE GetSubcontractorResourceNo@1100528602(IServiceContractNo@1100528600 : Code[20];IServiceLocationNo@1100528602 : Code[20];IObjectNo@1100528601 : Code[20];IMaintenanceSchemeCode@1100528603 : Code[20];IDiscipline@1100528604 : Code[10];ITradeSpeciality@1100528605 : Code[10]) : Code[20];
    VAR
      Vendor@1100528607 : Record 23;
      VendorNo@1100528606 : Code[20];
      ResourceNo@1100525000 : Code[20];
    BEGIN
      VendorNo := GetSubcontractor(IServiceContractNo, IServiceLocationNo, IObjectNo, IMaintenanceSchemeCode, IDiscipline, ITradeSpeciality);
      IF Vendor.GET(VendorNo) THEN BEGIN
        ResourceNo := Vendor.GetResourceNo;
        IF ResourceNo = '' THEN
          ERROR(Text001, VendorNo);
      END;
      EXIT(ResourceNo);
    END;

    PROCEDURE GetSubcontractorForDisplay@1100528601(IServiceContractNo@1100528605 : Code[20];IServiceLocationNo@1100528604 : Code[20];IObjectNo@1100528603 : Code[20];IMaintenanceSchemeCode@1100528602 : Code[20];VAR OSubcontractorName@1100528600 : Text[100]) : Code[20];
    VAR
      SubcontractorService@1100528607 : Record 11071789;
      ServiceLocation@1100528601 : Record 11012801;
      Level@1100528606 : Integer;
      NoOfSubcontractors@1100528608 : Integer;
    BEGIN
      OSubcontractorName := '';

      IF IServiceContractNo <> '' THEN
        Level := 1;
      IF IServiceLocationNo <> '' THEN
        Level := 3;
      IF IObjectNo <> '' THEN
        Level := 4;
      IF (IServiceContractNo <> '') AND (IObjectNo <> '') AND (IMaintenanceSchemeCode <> '') THEN
        Level := 5;
      IF Level = 0 THEN
        EXIT;

      IF IMaintenanceSchemeCode <> '' THEN
        SubcontractorService.SETRANGE("Apply To", SubcontractorService."Apply To"::Maintenance);

      CASE Level OF
        1:
          BEGIN
            SubcontractorService.SETRANGE("Service Contract No.", IServiceContractNo);
            SubcontractorService.SETRANGE("Complex Code", '');
            SubcontractorService.SETRANGE("Service Location No.", '');
            SubcontractorService.SETRANGE("Object No.", '');
            SubcontractorService.SETRANGE("Maintenance Scheme Code", '');
          END;
        2:
          BEGIN
            IF NOT ServiceLocation.GET(IServiceLocationNo) THEN
              ServiceLocation.INIT;
            SubcontractorService.SETRANGE("Service Contract No.", '');
            SubcontractorService.SETRANGE("Complex Code", ServiceLocation.GetComplexCode);
            SubcontractorService.SETRANGE("Service Location No.", '');
            SubcontractorService.SETRANGE("Object No.", '');
            SubcontractorService.SETRANGE("Maintenance Scheme Code", '');
          END;
        3:
          BEGIN
            SubcontractorService.SETRANGE("Service Contract No.", '');
            SubcontractorService.SETRANGE("Complex Code", '');
            SubcontractorService.SETRANGE("Service Location No.", IServiceLocationNo);
            SubcontractorService.SETRANGE("Object No.", '');
            SubcontractorService.SETRANGE("Maintenance Scheme Code", '');
          END;
        4:
          BEGIN
            SubcontractorService.SETRANGE("Service Contract No.", '');
            SubcontractorService.SETRANGE("Complex Code", '');
            SubcontractorService.SETRANGE("Service Location No.", '');
            SubcontractorService.SETRANGE("Object No.", IObjectNo);
            SubcontractorService.SETRANGE("Maintenance Scheme Code", '');
          END;
        5:
          BEGIN
            SubcontractorService.SETRANGE("Service Contract No.", IServiceContractNo);
            SubcontractorService.SETRANGE("Complex Code", '');
            SubcontractorService.SETRANGE("Service Location No.", '');
            SubcontractorService.SETRANGE("Object No.", IObjectNo);
            SubcontractorService.SETRANGE("Maintenance Scheme Code", IMaintenanceSchemeCode);
          END;
      END;

      IF SubcontractorService.ISEMPTY THEN
        EXIT('');
      NoOfSubcontractors := SubcontractorService.COUNT;
      IF NoOfSubcontractors = 1 THEN BEGIN
        SubcontractorService.FINDFIRST;
        SubcontractorService.CALCFIELDS("Subcontractor Name");
        OSubcontractorName := SubcontractorService."Subcontractor Name";
        EXIT(SubcontractorService.Subcontractor);
      END;
      EXIT(STRSUBSTNO('[%1]', NoOfSubcontractors));
    END;

    PROCEDURE AssistEditSubcontractors@1100528604(IServiceContractNo@1100528603 : Code[20];IServiceLocationNo@1100528602 : Code[20];IObjectNo@1100528601 : Code[20];IMaintenanceSchemeCode@1100528600 : Code[20]);
    VAR
      SubcontractorService@1100528605 : Record 11071789;
      ServiceLocation@1100528606 : Record 11012801;
      Level@1100528604 : Integer;
    BEGIN
      IF IServiceContractNo <> '' THEN
        Level := 1;
      IF IServiceLocationNo <> '' THEN
        Level := 3;
      IF IObjectNo <> '' THEN
        Level := 4;
      IF (IServiceContractNo <> '') AND (IObjectNo <> '') AND (IMaintenanceSchemeCode <> '') THEN
        Level := 5;
      IF IMaintenanceSchemeCode <> '' THEN
        SubcontractorService.SETRANGE("Apply To", SubcontractorService."Apply To"::Maintenance);

      CASE Level OF
        1:
          BEGIN
            SubcontractorService.SETRANGE("Service Contract No.", IServiceContractNo);
            SubcontractorService.SETRANGE("Complex Code", '');
            SubcontractorService.SETRANGE("Service Location No.", '');
            SubcontractorService.SETRANGE("Object No.", '');
            SubcontractorService.SETRANGE("Maintenance Scheme Code", '');
          END;
        2:
          BEGIN
            IF NOT ServiceLocation.GET(IServiceLocationNo) THEN
              ServiceLocation.INIT;
            SubcontractorService.SETRANGE("Service Contract No.", '');
            SubcontractorService.SETRANGE("Complex Code", ServiceLocation.GetComplexCode);
            SubcontractorService.SETRANGE("Service Location No.", '');
            SubcontractorService.SETRANGE("Object No.", '');
            SubcontractorService.SETRANGE("Maintenance Scheme Code", '');
          END;
        3:
          BEGIN
            SubcontractorService.SETRANGE("Service Contract No.", '');
            SubcontractorService.SETRANGE("Complex Code", '');
            SubcontractorService.SETRANGE("Service Location No.", IServiceLocationNo);
            SubcontractorService.SETRANGE("Object No.", '');
            SubcontractorService.SETRANGE("Maintenance Scheme Code", '');
          END;
        4:
          BEGIN
            SubcontractorService.SETRANGE("Service Contract No.", '');
            SubcontractorService.SETRANGE("Complex Code", '');
            SubcontractorService.SETRANGE("Service Location No.", '');
            SubcontractorService.SETRANGE("Object No.", IObjectNo);
            SubcontractorService.SETRANGE("Maintenance Scheme Code", '');
          END;
        5:
          BEGIN
            SubcontractorService.SETRANGE("Service Contract No.", IServiceContractNo);
            SubcontractorService.SETRANGE("Complex Code", '');
            SubcontractorService.SETRANGE("Service Location No.", '');
            SubcontractorService.SETRANGE("Object No.", IObjectNo);
            SubcontractorService.SETRANGE("Maintenance Scheme Code", IMaintenanceSchemeCode);
          END;
      END;
      PAGE.RUNMODAL(0, SubcontractorService);
    END;

    PROCEDURE TestIfLineIsUnique@1100528606();
    VAR
      SubcontractorService@1100528600 : Record 11071789;
    BEGIN
      SubcontractorService := Rec;
      SubcontractorService.SETRECFILTER;
      CASE "Apply To" OF
        "Apply To"::Maintenance,
        "Apply To"::Call:
            SubcontractorService.SETRANGE("Apply To", SubcontractorService."Apply To"::Both);
        "Apply To"::Both:
            SubcontractorService.SETFILTER("Apply To", '<>%1', SubcontractorService."Apply To"::Both);
      END;
      IF NOT SubcontractorService.ISEMPTY THEN
        ERROR(Text000);
    END;

    BEGIN
    END.
  }
}

