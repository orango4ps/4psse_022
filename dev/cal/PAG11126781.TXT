OBJECT Page 11126781 S. Control/Source/Cost Type
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=ServiceÅberwachung SC Perioden nach Herkunftsart/Kostenart;
               ENU=Service Control SC Periods by Source Type/Cost Type;
               NLD=Servicebewaking (contractbewakingsperiodes) per bron/kostensoort];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11072295;
    PageType=List;
    OnOpenPage=VAR
                 ServiceControlSCPeriodMgt@1100528600 : Codeunit 11012882;
               BEGIN
                 IF (GETFILTER("Service Contract No.") = '') OR (GETFILTER("Control Period Code") = '') OR (GETFILTER("Source Type") = '') THEN
                   ERROR(Text000);
                 ReportingPeriodFilter := GETFILTER("Report Period Filter");
                 IF ReportingPeriodFilter = '' THEN
                   ReportingPeriodFilter := STRSUBSTNO('%1..%2', CALCDATE('<-CY>'), TODAY);
                 ValidateReportingFilter;
                 IF CumulativeFilter = '' THEN
                   DetermineCumulativeFilter;
                 ServiceControlSCPeriodMgt.UpdateServiceContractPeriodsAndArrangements(GETRANGEMAX("Service Contract No."), ReportingPeriodEndingDate);
                 ServiceControlSCPeriodMgt.UpdateServiceControlBySourceTypeCostType(
                   GETRANGEMAX("Service Contract No."), GETRANGEMAX("Control Period Code"), ReportingPeriodStartingDate, ReportingPeriodEndingDate,
                   GETRANGEMAX("Source Type"));
                 PeriodFilter := ServiceControlSCPeriodMgt.GetPeriodFilterText(GETRANGEMAX("Service Contract No."), GETRANGEMAX("Control Period Code"));
                 ApplyFilters;
               END;

  }
  CONTROLS
  {
    { 1100528600;0;Container;
                ContainerType=ContentArea }

    { 1100528633;1;Group  ;
                CaptionML=[DEU=Filter;
                           ENU=Filters;
                           NLD=Filters;
                           NOR=Filtre;
                           SVE=Filter];
                GroupType=Group }

    { 1100528604;2;Field  ;
                CaptionML=[DEU=Periodenfilter;
                           ENU=Period Filter;
                           NLD=Periodefilter;
                           NOR=Periodefilter;
                           SVE=Periodfilter];
                SourceExpr=PeriodFilter;
                Editable=FALSE }

    { 1100528608;2;Field  ;
                CaptionML=[DEU=Herkunftsart;
                           ENU=Source Type;
                           NLD=Bron;
                           NOR=Kildetype;
                           SVE=Ursprungstyp];
                SourceExpr=GETFILTER("Source Type");
                Editable=FALSE }

    { 1100528634;2;Field  ;
                CaptionML=[DEU=Filter Berichtszeitraum;
                           ENU=Reporting Period Filter;
                           NLD=Rapportageperiodefilter];
                SourceExpr=ReportingPeriodFilter;
                Editable=FALSE }

    { 1100528635;2;Field  ;
                CaptionML=[DEU=Kumulativer Filter;
                           ENU=Cumulative Filter;
                           NLD=Cumulatiefilter;
                           SVE=Kumulativt filter];
                SourceExpr=CumulativeFilter;
                Editable=FALSE }

    { 1100528601;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100528602;2;Field  ;
                SourceExpr="Service Contract No.";
                Visible=FALSE }

    { 1100528603;2;Field  ;
                SourceExpr="Control Period Code";
                Visible=FALSE }

    { 1100528606;2;Field  ;
                SourceExpr="Source Type";
                Visible=FALSE }

    { 1100528607;2;Field  ;
                SourceExpr="Cost Type" }

    { 1100528614;2;Field  ;
                SourceExpr=Revenue }

    { 1100528615;2;Field  ;
                SourceExpr="Revenue Period" }

    { 1100528616;2;Field  ;
                SourceExpr="Closed Revenue" }

    { 1100528617;2;Field  ;
                SourceExpr="Closed Revenue Period" }

    { 1100528618;2;Field  ;
                SourceExpr=Budget }

    { 1100528619;2;Field  ;
                SourceExpr="Actual Cost" }

    { 1100528620;2;Field  ;
                SourceExpr="Actual Cost Period" }

    { 1100528621;2;Field  ;
                SourceExpr="Open (Purchase)" }

    { 1100528622;2;Field  ;
                SourceExpr="Open Ovh. Surch. Soft (Purch.)" }

    { 1100528623;2;Field  ;
                SourceExpr="Received/Not Invoiced (Purch.)" }

    { 1100528605;2;Field  ;
                SourceExpr="Open Ovh. Surch. Firm (Purch.)" }

    { 1100528625;2;Field  ;
                SourceExpr="Open (Inventory)" }

    { 1100528624;2;Field  ;
                SourceExpr="Open Ovh. Surch. (Inventory)" }

    { 1100528626;2;Field  ;
                SourceExpr="Open Hours" }

    { 1100528627;2;Field  ;
                SourceExpr="Open Ovh. Surch. (Hours)" }

    { 1100528610;2;Field  ;
                SourceExpr="Total Cost" }

    { 1100528628;2;Field  ;
                SourceExpr="Closed Cost" }

    { 1100528629;2;Field  ;
                SourceExpr="Closed Cost Period" }

    { 1100528630;2;Field  ;
                SourceExpr="WIP Position" }

    { 1100528631;2;Field  ;
                SourceExpr=Allowed }

  }
  CODE
  {
    VAR
      ReportingPeriodFilter@1100528601 : Text;
      PeriodFilter@1100528604 : Text;
      CumulativeFilter@1100528600 : Text;
      Text000@1100528602 : TextConst 'DEU=Seite kann nur von einem Vertrag aus ausgefÅhrt werden;ENU=Page can only be executed from a contract;NLD=Pagina alleen op te starten vanuit een contract';
      ReportingPeriodStartingDate@1100528603 : Date;
      ReportingPeriodEndingDate@1100528605 : Date;

    LOCAL PROCEDURE ValidateReportingFilter@1100528605();
    VAR
      ServiceControlSCPeriodMgt@1100528600 : Codeunit 11012882;
    BEGIN
      ServiceControlSCPeriodMgt.GetDatesFromDateFilter(ReportingPeriodFilter, ReportingPeriodStartingDate, ReportingPeriodEndingDate);
    END;

    LOCAL PROCEDURE DetermineCumulativeFilter@1100528606();
    BEGIN
      IF ReportingPeriodEndingDate <> 0D THEN
        CumulativeFilter := STRSUBSTNO('..%1', ReportingPeriodEndingDate)
      ELSE
        CumulativeFilter := '';
    END;

    LOCAL PROCEDURE ApplyFilters@1100528609();
    BEGIN
      IF ReportingPeriodFilter <> '' THEN
        SetReportingFilters(ReportingPeriodFilter);
      SetControlPeriodFilters;
    END;

    BEGIN
    END.
  }
}

