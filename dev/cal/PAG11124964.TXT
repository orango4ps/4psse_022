OBJECT Page 11124964 Prognosis Costs per Element
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Prognosis Costs per Element;
               NOR=Rader;
               SVE=Rader];
    SourceTable=Table11071893;
    DelayedInsert=Yes;
    PageType=List;
    OnOpenPage=BEGIN
                 ProjSetUp.GET;
                 SpecificationsVisible := ProjSetUp."Prognosis Specifications";
                 CurrPage.PrognosisTotalsExtendedFB.PAGE.SetFilters("Project No.", "Prognosis Date", 0);
               END;

    OnAfterGetRecord=BEGIN
                       SetPreviousDateFilter; //C017374.n
                       CalculateValuesElements(Rec,NOT "Fix Prognosis Line");
                     END;

    OnNewRecord=BEGIN
                  SetValuesToZero;
                END;

    OnAfterGetCurrRecord=BEGIN
                           SetPreviousDateFilter; //C017374.n
                         END;

    ActionList=ACTIONS
    {
      { 1100529702;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100529701;1 ;ActionGroup;
                      CaptionML=[ENU=Line;
                                 NOR=RAD;
                                 SVE=Rad] }
      { 1100529700;2 ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Specifications;
                                 NOR=Spesifikasjoner;
                                 SVE=Specifikationer];
                      Promoted=Yes;
                      Visible=SpecificationsVisible;
                      Image=SetupList;
                      OnAction=BEGIN
                                 ShowDetailLines();
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Element }

    { 4   ;2   ;Field     ;
                SourceExpr="Element Description";
                Visible=FALSE;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Budget;
                           NOR=Budsjett;
                           SVE=Budget];
                SourceExpr=BudgetDec;
                Editable=FALSE }

    { 1100485006;2;Field  ;
                CaptionML=[ENU=Open (Purchase);
                           NOR=èpne innkjõp;
                           SVE=ôppna inkîp];
                SourceExpr=OpenDec;
                Visible=FALSE;
                Editable=FALSE }

    { 1100485008;2;Field  ;
                CaptionML=[ENU=Received/Not Invoiced;
                           NOR=Mottatt/ikke fakturert;
                           SVE=Mottaget/inte fakturerat];
                SourceExpr=RecNotInvDec;
                Visible=FALSE;
                Editable=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Open Ovh. Surch. (Purchase)";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525006;2;Field  ;
                SourceExpr="Open (Inventory)";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525008;2;Field  ;
                SourceExpr="Open Ovh. Surch. (Inventory)";
                Visible=FALSE;
                Editable=FALSE }

    { 1210190002;2;Field  ;
                CaptionML=[ENU=Actual Costs;
                           NOR=Faktiske koster;
                           SVE=Verkliga kostnader];
                SourceExpr=ActualDec;
                Visible=FALSE;
                Editable=FALSE }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=Total Cost;
                           NOR=Total kost;
                           SVE=Totalkostnad];
                SourceExpr=TotalCostDec;
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=Allowed;
                           NOR=Tillatt;
                           SVE=TillÜten];
                SourceExpr=AllowedDec;
                Editable=FALSE }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Available;
                           NOR=Disponibelt;
                           SVE=Disponibelt];
                SourceExpr=AvailableDec;
                Editable=FALSE }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Result;
                           NOR=Resultat;
                           SVE=Resultat];
                SourceExpr=ResultDec;
                Editable=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Previous Date";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                SourceExpr="Previous Prognosis" }

    { 1100485000;2;Field  ;
                SourceExpr="Prev Prognosis End Result" }

    { 1100528300;2;Field  ;
                SourceExpr="Prev Prognosis Total Cost" }

    { 1100485010;2;Field  ;
                SourceExpr="Risc Coverage";
                OnValidate=BEGIN
                             RiscCoverageOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 28  ;2   ;Field     ;
                SourceExpr="Unit of Measure" }

    { 30  ;2   ;Field     ;
                SourceExpr=Price;
                OnValidate=BEGIN
                             PriceOnAfterValidate;
                           END;
                            }

    { 1100525002;2;Field  ;
                SourceExpr=Amount }

    { 1210190004;2;Field  ;
                SourceExpr="Total Risc Coverage Amount";
                Visible=FALSE }

    { 1210190027;2;Field  ;
                SourceExpr="Total Release Risc Coverage";
                Visible=FALSE }

    { 1100525000;2;Field  ;
                SourceExpr="Ovh. Surcharge" }

    { 32  ;2   ;Field     ;
                SourceExpr="Amount incl. Surcharge";
                OnValidate=BEGIN
                             AmountinclSurchargeOnAfterVali;
                           END;
                            }

    { 1100485004;2;Field  ;
                CaptionML=[ENU=Estimated Purchase Result;
                           NOR=Kalkulert Innkjõpsresultat;
                           SVE=Kalkylerat inkîpsresultat];
                SourceExpr=EstimPurchResultDec;
                Visible=FALSE;
                Editable=FALSE }

    { 34  ;2   ;Field     ;
                CaptionML=[ENU=Prognosis End Result;
                           NOR=Forventet Sluttresultat;
                           SVE=FîrvÑntat \slutresultat];
                SourceExpr="Prognosis End Result";
                OnValidate=BEGIN
                             PrognosisEndResultOnAfterValid;
                           END;
                            }

    { 1100485002;2;Field  ;
                SourceExpr="Prognosis Total Cost" }

    { 1210190000;2;Field  ;
                SourceExpr=Comment }

    { 1100528802;2;Field  ;
                SourceExpr="Best Case Result" }

    { 1100528804;2;Field  ;
                SourceExpr="Worst Case Result" }

    { 1100529900;2;Field  ;
                SourceExpr="Received/To Process";
                Visible=FALSE;
                OnValidate=BEGIN
                             CalculateValuesElements(Rec,NOT "Fix Prognosis Line");
                           END;
                            }

    { 1100527350;2;Field  ;
                SourceExpr="Allowed %";
                Visible=FALSE }

    { 1100529705;0;Container;
                ContainerType=FactBoxArea }

    { 1100529703;1;Part   ;
                Name=PrognosisTotalsExtendedFB;
                CaptionML=[ENU=Prognosis Totals;
                           NOR=Prognosetotaler;
                           SVE=Prognostotalsummor];
                SubPageLink=Project No.=FIELD(Project No.),
                            Prognosis Date=FIELD(Prognosis Date);
                PagePartID=Page11126502;
                PartType=Page }

  }
  CODE
  {
    VAR
      ProjSetUp@11012000 : Record 315;
      ProjRec@11012001 : Record 11072003;
      ElemCstObjCntrlRec@11012002 : Record 11012048;
      SearchProgrDate@11012004 : Codeunit 11012014;
      CostContMgt@1210190002 : Codeunit 11012006;
      BudgetDec@11012005 : Decimal;
      BudgetSurchargeDec@1100525005 : Decimal;
      ActualDec@11012006 : Decimal;
      ResultDec@11012008 : Decimal;
      TotalCostDec@11012009 : Decimal;
      TotCostExclRiscCovDec@1100485002 : Decimal;
      AvailableDec@11012010 : Decimal;
      AllowedDec@1100485001 : Decimal;
      RecNotInvDec@1210190001 : Decimal;
      OpenDec@1210190000 : Decimal;
      PrognTotCostDec@1100485000 : Decimal;
      EstimPurchResultDec@1100485003 : Decimal;
      SurchOpenDec@1100525004 : Decimal;
      OpenAmountInvDec@1100525002 : Decimal;
      SurchOpenAmountInvDec@1100525001 : Decimal;
      RiscCoverage@1210190004 : Decimal;
      RiscCoverageWithdraw@1210190003 : Decimal;
      SpecificationsVisible@1100529700 : Boolean INDATASET;

    PROCEDURE SetValuesToZero@4();
    BEGIN
      BudgetDec := 0;
      BudgetSurchargeDec := 0;   //M20030
      ActualDec := 0;
      TotalCostDec := 0;
      TotCostExclRiscCovDec := 0;
      AllowedDec := 0;
      ResultDec := 0;
      AvailableDec := 0;
      RecNotInvDec := 0;
      OpenDec := 0;
      PrognTotCostDec :=0;
      EstimPurchResultDec := 0;
      RiscCoverage := 0;  // 25531.n
      RiscCoverageWithdraw := 0;  // 25531.n

      //**4PS -25-05-2010 sn
      SurchOpenDec := 0;
      OpenAmountInvDec := 0;
      SurchOpenAmountInvDec := 0;
      //**4PS -25-05-2010 en
    END;

    PROCEDURE CalculateValuesElements@1100528804(VAR lPrognLineRec@11012000 : Record 11071893;SaveValues@1210190000 : Boolean);
    VAR
      ProjRec@1100525001 : Record 11072003;
      ProjSetUp@1100525002 : Record 315;
      ElemCstObjCntrlRec@1100525005 : Record 11012048;
      lvProgHeaderRec@1100525000 : Record 11012034;
      SearchProgrDate@1100525004 : Codeunit 11012014;
      CostContMgt@1100525006 : Codeunit 11012006;
      DummyDec@1100525003 : Decimal;
    BEGIN
      WITH lPrognLineRec DO BEGIN
        SetValuesToZero;

        IF NOT ProjRec.GET("Project No.") THEN
          EXIT;

        IF NOT SaveValues AND "Fix Prognosis Line" THEN BEGIN
          BudgetDec := "Budget Amount";
          BudgetSurchargeDec := lPrognLineRec."Budget Surcharge Amount";
          ActualDec := "Actual Costs";
          TotalCostDec := "Total Cost";
          TotCostExclRiscCovDec := "Total Cost (Excl. Risc Cov.)";
          AllowedDec := "Allowed Costs";
          ResultDec := "Allowed Costs" - "Total Cost" - "Received/To Process";
          RecNotInvDec := "Received/Not Invoiced";
          OpenDec := "Open (Purchase)";
          RiscCoverage := "Total Risc Coverage Amount"; // 25531.n
          RiscCoverageWithdraw := "Total Release Risc Coverage";  // 25531.n
          SurchOpenDec := "Open Ovh. Surch. (Purchase)";
          OpenAmountInvDec := "Open (Inventory)";
          SurchOpenAmountInvDec := "Open Ovh. Surch. (Inventory)";

          IF ProjSetUp."Calculate Available" = ProjSetUp."Calculate Available"::"Budget - Allowed Cost" THEN
            AvailableDec := "Budget Amount" - AllowedDec - OpenDec
          ELSE
            AvailableDec := "Budget Amount" - TotalCostDec;

          PrognTotCostDec := "Amount incl. Surcharge" + "Total Cost";
          EstimPurchResultDec := "Estimated Purchase Result";
        END ELSE BEGIN
          //Set Filters
          ProjRec.SETRANGE("Period Filter",0D,"Prognosis Date");
          SearchProgrDate.DetermineDate(ProjRec,FALSE);

          IF ProjRec."Prognosis Level" =  ProjRec."Prognosis Level"::Element THEN BEGIN
            //Prognosis per Project-Element
            IF ElemCstObjCntrlRec.GET("Project No.",Element) THEN BEGIN
              ElemCstObjCntrlRec.RESET;
              ProjRec.COPYFILTER("Progress Filter", ElemCstObjCntrlRec."Progress Filter");
              ElemCstObjCntrlRec.SETRANGE("Element Filter", Element);
              ElemCstObjCntrlRec.SETRANGE("Prognosis Filter", "Prognosis Date");
              ElemCstObjCntrlRec.SETRANGE("Cumulation Filter",0D,"Prognosis Date");
              ElemCstObjCntrlRec.SETRANGE("Main Project No.","Main Project No.");
              IF "Project No." <> "Main Project No." THEN
                ElemCstObjCntrlRec.SETRANGE("Project Filter","Project No.");
              ElemCstObjCntrlRec.CALCFIELDS(Budget, "Actual Costs",
                                           "Risc Coverage","Risc Coverage Withdraw"); // 25531.n
              BudgetDec := ElemCstObjCntrlRec.Budget;
              RiscCoverage := ElemCstObjCntrlRec."Risc Coverage";  // 25531.n
              RiscCoverageWithdraw := ElemCstObjCntrlRec."Risc Coverage Withdraw";  // 25531.n
              ActualDec := ElemCstObjCntrlRec."Actual Costs";
              CostContMgt.AllowedAndPurchElem(ElemCstObjCntrlRec, AllowedDec,
                DummyDec, DummyDec, DummyDec, TRUE);
              OpenDec := CostContMgt.OutstandingElem(ElemCstObjCntrlRec,TRUE);
              RecNotInvDec := CostContMgt.ReceivedNotInvoicedElem(ElemCstObjCntrlRec,TRUE);
              TotalCostDec := CostContMgt.TotCostElem(ElemCstObjCntrlRec,TRUE);  // Surcharges included
              ResultDec := CostContMgt.ResultElem(ElemCstObjCntrlRec,TRUE);

              ElemCstObjCntrlRec.CALCFIELDS("Open (Inventory)", "Open Ovh. Surch. (Inventory)");
              SurchOpenDec := CostContMgt.OpenOvhPurchElem(ElemCstObjCntrlRec,TRUE);
              OpenAmountInvDec := ElemCstObjCntrlRec."Open (Inventory)";
              SurchOpenAmountInvDec := ElemCstObjCntrlRec."Open Ovh. Surch. (Inventory)";

              IF ProjSetUp."Calculate Available" = ProjSetUp."Calculate Available"::"Budget - Allowed Cost" THEN
                AvailableDec := BudgetDec - AllowedDec - OpenDec
              ELSE
                AvailableDec := BudgetDec - TotalCostDec;

              PrognTotCostDec := "Amount incl. Surcharge" + TotalCostDec;
              //"Prognosis End Result" := AvailableDec - "Amount incl. Surcharge";

              ElemCstObjCntrlRec.CALCFIELDS("Risc Coverage (Prognosis)");
              TotCostExclRiscCovDec := TotalCostDec - ElemCstObjCntrlRec."Risc Coverage (Prognosis)";
            END;
          END;
        END;

        IF SaveValues THEN BEGIN
          IF NOT lvProgHeaderRec.GET("Project No.", "Prognosis Date") THEN lvProgHeaderRec.INIT;
          "Fix Prognosis Line" := lvProgHeaderRec."Fix Prognosis Line";

          "Budget Amount" := BudgetDec;
          "Total Risc Coverage Amount" := RiscCoverage; // 25531.n
          "Total Release Risc Coverage" := RiscCoverageWithdraw;  // 25531.n
          "Budget Surcharge Amount" := BudgetSurchargeDec;
          "Actual Costs" := ActualDec;
          "Open (Purchase)" := OpenDec;
          "Received/Not Invoiced" := RecNotInvDec;
          "Total Cost" := TotalCostDec;
          "Total Cost (Excl. Risc Cov.)" := TotCostExclRiscCovDec;
          "Allowed Costs" := AllowedDec;

          "Open Ovh. Surch. (Purchase)" := SurchOpenDec;
          "Open (Inventory)" := OpenAmountInvDec;
          "Open Ovh. Surch. (Inventory)" := SurchOpenAmountInvDec;

          "Prognosis Total Cost" := PrognTotCostDec;
          "Estimated Purchase Result" :=  EstimPurchResultDec;
        END;
        CalculateAllowedPercentage(lPrognLineRec);
        SetPreviousDateFilter; //C017374.n
        CALCFIELDS("Previous Prognosis","Prev Prognosis End Result");
      END;
    END;

    LOCAL PROCEDURE RiscCoverageOnAfterValidate@19065993();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE PriceOnAfterValidate@19065147();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE AmountinclSurchargeOnAfterVali@19001334();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE PrognosisEndResultOnAfterValid@19000495();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ElementOnBeforeInput@19053503();
    BEGIN
    END;

    PROCEDURE ShowDetailLines@11136552();
    BEGIN
      CurrPage.SAVERECORD;
      AmountOnDrillDown;
    END;

    BEGIN
    {
      //20060706-JE : Added fields [Prev Prognosis End Result], [Total Expected Costs]
    }
    END.
  }
}

