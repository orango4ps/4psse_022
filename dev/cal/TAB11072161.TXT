OBJECT Table 11072161 Project Provision Update Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               IF Posted THEN
                 ERROR(Text001,"Project No.","Posting Date", "Version No.");
             END;

    OnDelete=BEGIN
               IF ProjectRec.GET("Project No.") THEN
                 IF Posted AND (ProjectRec."Project Status" < ProjectRec."Project Status"::Archived) THEN
                   ERROR(Text001,"Project No.","Posting Date", "Version No.");
             END;

    OnRename=BEGIN
               IF Posted THEN
                 ERROR(Text001,"Project No.","Posting Date", "Version No.");
             END;

    CaptionML=[ENU=Project Provision Update Line;
               NOR=Oppdater rad for prosjektprovisjon];
    PasteIsValid=No;
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No. WHERE (Project Status=FILTER(Finished));
                                                   OnValidate=VAR
                                                                lProjectProvisionUpdateLine@1100528240 : Record 11072161;
                                                              BEGIN
                                                                IF "Project No." <> '' THEN BEGIN
                                                                  ProjectRec.GET("Project No.");
                                                                  DimMgt.CheckDepartmentAuthorization(DATABASE::"Project Preclosure Result", ProjectRec."Global Dimension 1 Code");
                                                                  "Global Dimension 1 Code" := ProjectRec."Global Dimension 1 Code";
                                                                END;

                                                                IF CurrFieldNo > 0 THEN BEGIN
                                                                  IF NOT lProjectProvisionUpdateLine.GET(xRec."Project No.", xRec."Posting Date", xRec."Version No.", xRec."Line No.") THEN
                                                                  BEGIN
                                                                    lProjectProvisionUpdateLine.RESET;
                                                                    lProjectProvisionUpdateLine.SETCURRENTKEY("Project No.","Line No.");
                                                                    lProjectProvisionUpdateLine.SETRANGE("Project No.", "Project No.");
                                                                    "Line No." := 10000;  //Select new lineno.
                                                                    IF lProjectProvisionUpdateLine.FINDLAST THEN
                                                                      "Line No." :=lProjectProvisionUpdateLine."Line No." + 10000;
                                                                  END;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              CLEAR(ProjectRec);
                                                              ProjectRec.SETCURRENTKEY("Project Status");
                                                              ProjectRec.SETFILTER("Project Status", '%1', ProjectRec."Project Status"::Finished);
                                                              ProjectRec."No." := "Project No.";
                                                              IF ProjectRec.GET("Project No.") THEN;
                                                              IF (PAGE.RUNMODAL(0,ProjectRec,ProjectRec."No.") = ACTION::LookupOK) THEN
                                                                VALIDATE("Project No.", ProjectRec."No.");
                                                              ProjectRec.RESET;
                                                            END;

                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes }
    { 20  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              NOR=Bokf›ringsdato;
                                                              SVE=Bokf”ringsdatum];
                                                   NotBlank=Yes }
    { 21  ;   ;Version No.         ;Integer       ;CaptionML=[ENU=Version No.;
                                                              NOR=Versjonsnr.;
                                                              SVE=Versionsnr] }
    { 25  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 28  ;   ;Cost Type           ;Option        ;CaptionML=[ENU=Cost Type;
                                                              NOR=Kostnadstype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                                    NOR=Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse,Inntekt;
                                                                    SVE=Arbetskraft,Material,Underentreprenad,Maskin,Diverse,Int„kt];
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry,Revenue;
                                                   Editable=No }
    { 30  ;   ;Finished Amount     ;Decimal       ;CaptionML=[ENU=Finished Amount;
                                                              NOR=Ferdig bel›p];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 40  ;   ;Actual Amount       ;Decimal       ;CaptionML=[ENU=Actual Amount;
                                                              NOR=Faktisk bel›p;
                                                              SVE=Faktiskt belopp];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 50  ;   ;Amount Provision    ;Decimal       ;OnValidate=BEGIN
                                                                "Amount to Post" := "Amount Provision" + "Actual Amount" - "Finished Amount";
                                                              END;

                                                   CaptionML=[ENU=Amount Provision;
                                                              NOR=Bel›psprovisjon];
                                                   AutoFormatType=1 }
    { 55  ;   ;Amount to Post      ;Decimal       ;CaptionML=[ENU=Amount to Post;
                                                              NOR=Bel›p † bokf›re];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 70  ;   ;Posted              ;Boolean       ;InitValue=No;
                                                   CaptionML=[ENU=Posted;
                                                              NOR=Bokf›rt;
                                                              SVE=Bokf”rd];
                                                   Editable=No }
    { 400 ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Global dimensjon 1 - kode;
                                                              SVE=Global dimension 1 kod];
                                                   Editable=No;
                                                   CaptionClass='1,1,1' }
  }
  KEYS
  {
    {    ;Project No.,Posting Date,Version No.,Line No.;
                                                   Clustered=Yes }
    {    ;Project No.,Line No.                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProjectRec@11012006 : Record 11072003;
      Text001@1210190002 : TextConst 'ENU=Already posted Project %1 Posting Date %2 Version No. %3;NOR=Allerede bokf›rt prosjekt %1 bokf›ringsdato %2 versjon nr. %3';
      testRec@1100525000 : Record 11072160;
      DimMgt@1100525004 : Codeunit 408;
      DPA_Management@1100000999 : Codeunit 11012783;
      Text007@1100528240 : TextConst 'ENU="Already Project %1 at Posting Date later than %2 ";NOR=Allerede prosjekt %1 p† Bokf›ringsdato senere enn %2';

    PROCEDURE testRecPresent@1100525000(ShowErrorMessage@1100525000 : Boolean) : Boolean;
    BEGIN
      testRec.RESET;
      testRec.SETRANGE("Project No.", "Project No.");
      testRec.SETFILTER("Posting Date", '%1..', "Posting Date");
      IF NOT testRec.ISEMPTY THEN
        IF ShowErrorMessage THEN
          ERROR(Text007,"Project No.","Posting Date")
        ELSE
          EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(11012093) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 11012093');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Project Preclosure Result", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    BEGIN
    END.
  }
}

