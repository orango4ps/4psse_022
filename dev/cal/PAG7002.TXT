OBJECT Page 7002 Sales Prices
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Prices;
               NOR=Salgspriser;
               SVE=F”rs.priser];
    SaveValues=Yes;
    SourceTable=Table7002;
    DataCaptionExpr=GetCaption;
    DelayedInsert=Yes;
    SourceTableView=SORTING(Item No.,Sales Type,Sales Code,Reverse Starting Date,Currency Code,Variant Code,Unit of Measure Code,Minimum Quantity);
    PageType=List;
    OnInit=BEGIN
             SalesCodeFilterCtrlEnable := TRUE;
             SalesCodeControlEditable := TRUE;
             IsLookupMode := CurrPage.LOOKUPMODE;
           END;

    OnOpenPage=BEGIN
                 IsOnMobile := ClientTypeManagement.GetCurrentClientType = CLIENTTYPE::Phone;
                 GetRecFilters;
                 SetRecFilters;
               END;

    OnInsertRecord=VAR
                     CentralDataMgt@1100528400 : Codeunit 11012010;
                   BEGIN
                     //**4PS.sn
                     IF NOT CentralDataMgt.InsertingSalesPriceIsAllowed THEN
                       ERROR(Text11012000);
                     //**4PS.en
                   END;

    OnDeleteRecord=VAR
                     CentralDataMgt@1100528400 : Codeunit 11012010;
                   BEGIN
                     //**4PS.sn
                     IF NOT CentralDataMgt.ChangingSalesPriceIsAllowed(Rec) THEN
                       ERROR(Text11012000);
                     //**4PS.en
                   END;

    OnAfterGetCurrRecord=BEGIN
                           //SalesCodeControlEditable := SetSalesCodeEditable("Sales Type"); //**4PS.o
                           ActivateFieldsForCentralManagement; //**4PS.n
                         END;

    ActionList=ACTIONS
    {
      { 1210190000;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190001;1 ;ActionGroup;
                      CaptionML=[ENU=S&ales;
                                 SVE=F”rs&„ljning] }
      { 1210190002;2 ;Action    ;
                      CaptionML=ENU=&Sales Price Worksheet;
                      RunObject=Page 7023;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SalesPrices;
                      PromotedCategory=Process }
      { 3       ;    ;ActionContainer;
                      Name=Filtering;
                      CaptionML=SVE=Filtrering;
                      ActionContainerType=ActionItems }
      { 5       ;1   ;Action    ;
                      Name=SalesPricesFilter;
                      CaptionML=[ENU=Filter;
                                 NOR=Filtrer;
                                 SVE=Filter];
                      ToolTipML=[ENU=Apply the filter.;
                                 NOR=Bruk filteret.;
                                 SVE=Anv„nd filtret.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsOnMobile;
                      Image=Filter;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FilterLines;
                               END;
                                }
      { 7       ;1   ;Action    ;
                      Name=ClearFilter;
                      CaptionML=[ENU=Clear Filter;
                                 NOR=Fjern filter;
                                 SVE=Rensa filter];
                      ToolTipML=[ENU=Clear filter.;
                                 NOR=Fjern filter.;
                                 SVE=Rensa filter.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsOnMobile;
                      Image=ClearFilter;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 RESET;
                                 UpdateBasicRecFilters;
                                 EVALUATE(StartingDateFilter,GETFILTER("Starting Date"));
                                 SetEditableFields;
                               END;
                                }
      { 48      ;1   ;Action    ;
                      Name=CopyPrices;
                      CaptionML=[ENU=Copy Prices;
                                 NOR=Kopier priser;
                                 SVE=Kopiera priser];
                      ToolTipML=[ENU=Select prices and press OK to copy them to Customer No.;
                                 NOR=Velg priser og trykk p† OK for † kopiere dem til Kundenr.;
                                 SVE=V„lj priser och tryck p† OK f”r att kopiera dem till Kundnr.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=NOT IsLookupMode;
                      Image=Copy;
                      OnAction=BEGIN
                                 CopyPrices;
                                 CurrPage.UPDATE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 20  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=Allm„nt];
                Visible=NOT IsOnMobile }

    { 28  ;2   ;Field     ;
                CaptionML=[ENU=Sales Type Filter;
                           NOR=Salgstypefilter;
                           SVE=F”rs.typfilter];
                ToolTipML=[ENU=Specifies a filter for which sales prices to display.;
                           NOR=Angir et filter som salgspriser skal vises for.;
                           SVE=Anger ett filter som anv„nds f”r att visa f”rs„ljningspriser.];
                OptionCaptionML=[ENU=Customer,Customer Price Group,All Customers,Campaign,None;
                                 NOR=Kunde,Kundeprisgruppe,Alle kunder,Kampanje,Ingen;
                                 SVE=Kund,Kundprisgrupp,Alla kunder,Kampanj,Ingen];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesTypeFilter;
                OnValidate=BEGIN
                             SalesTypeFilterOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                Name=SalesCodeFilterCtrl;
                CaptionML=[ENU=Sales Code Filter;
                           NOR=Salgskodefilter;
                           SVE=F”rs.kodfilter];
                ToolTipML=[ENU=Specifies a filter for which sales prices to display.;
                           NOR=Angir et filter som salgspriser skal vises for.;
                           SVE=Anger ett filter som anv„nds f”r att visa f”rs„ljningspriser.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesCodeFilter;
                Enabled=SalesCodeFilterCtrlEnable;
                OnValidate=BEGIN
                             SalesCodeFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           CustList@1005 : Page 22;
                           CustPriceGrList@1004 : Page 7;
                           CampaignList@1002 : Page 11072059;
                         BEGIN
                           IF SalesTypeFilter = SalesTypeFilter::"All Customers" THEN
                             EXIT;

                           CASE SalesTypeFilter OF
                             SalesTypeFilter::Customer:
                               BEGIN
                                 CustList.LOOKUPMODE := TRUE;
                                 IF CustList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CustList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                             SalesTypeFilter::"Customer Price Group":
                               BEGIN
                                 CustPriceGrList.LOOKUPMODE := TRUE;
                                 IF CustPriceGrList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CustPriceGrList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                             SalesTypeFilter::Campaign:
                               BEGIN
                                 CampaignList.LOOKUPMODE := TRUE;
                                 IF CampaignList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CampaignList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                           END;

                           EXIT(TRUE);
                         END;
                          }

    { 10  ;2   ;Field     ;
                Name=ItemNoFilterCtrl;
                CaptionML=[ENU=Item No. Filter;
                           NOR=Filter for varenr.;
                           SVE=Artikelnrfilter];
                ToolTipML=[ENU=Specifies a filter for which sales prices to display.;
                           NOR=Angir et filter som salgspriser skal vises for.;
                           SVE=Anger ett filter som anv„nds f”r att visa f”rs„ljningspriser.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ItemNoFilter;
                OnValidate=BEGIN
                             ItemNoFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           ItemList@1002 : Page 31;
                         BEGIN
                           ItemList.LOOKUPMODE := TRUE;
                           IF ItemList.RUNMODAL = ACTION::LookupOK THEN
                             Text := ItemList.GetSelectionFilter
                           ELSE
                             EXIT(FALSE);

                           EXIT(TRUE);
                         END;
                          }

    { 34  ;2   ;Field     ;
                CaptionML=[ENU=Starting Date Filter;
                           NOR=Startdatofilter;
                           SVE=Startdatumfilter];
                ToolTipML=[ENU=Specifies a filter for which sales prices to display.;
                           NOR=Angir et filter som salgspriser skal vises for.;
                           SVE=Anger ett filter som anv„nds f”r att visa f”rs„ljningspriser.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=StartingDateFilter;
                OnValidate=VAR
                             TextManagement@1030 : Codeunit 41;
                           BEGIN
                             TextManagement.MakeDateFilter(StartingDateFilter);
                             StartingDateFilterOnAfterValid;
                           END;
                            }

    { 38  ;2   ;Field     ;
                Name=CurrencyCodeFilterCtrl;
                CaptionML=[ENU=Currency Code Filter;
                           NOR=Valutakodefilter;
                           SVE=Valutakodfilter];
                ToolTipML=[ENU=Specifies a filter for which sales prices to display.;
                           NOR=Angir et filter som salgspriser skal vises for.;
                           SVE=Anger ett filter som anv„nds f”r att visa f”rs„ljningspriser.];
                ApplicationArea=#Suite;
                SourceExpr=CurrencyCodeFilter;
                OnValidate=BEGIN
                             CurrencyCodeFilterOnAfterValid;
                           END;

                OnLookup=VAR
                           CurrencyList@1000 : Page 5;
                         BEGIN
                           CurrencyList.LOOKUPMODE := TRUE;
                           IF CurrencyList.RUNMODAL = ACTION::LookupOK THEN
                             Text := CurrencyList.GetSelectionFilter
                           ELSE
                             EXIT(FALSE);

                           EXIT(TRUE);
                         END;
                          }

    { 9   ;1   ;Group     ;
                CaptionML=[ENU=Filters;
                           NOR=Filtre;
                           SVE=Filter];
                Visible=IsOnMobile;
                GroupType=Group }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a filter for which sales prices to display.;
                           NOR=Angir et filter som salgspriser skal vises for.;
                           SVE=Anger ett filter som anv„nds f”r att visa f”rs„ljningspriser.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetFilterDescription;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               FilterLines;
                               CurrPage.UPDATE(FALSE);
                             END;
                              }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the sales price type, which defines whether the price is for an individual, group, all customers, or a campaign.;
                           NOR=Angir salgspristypen, som definerer om prisen er for en individuell kunde, for en gruppe, for alle kunder eller for en kampanje.;
                           SVE=Anger f”rs„ljningspristypen, som definierar om priset g„ller f”r en enskild kund, en grupp, alla kunder eller en kampanj.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sales Type";
                Editable=SalesTypeControlEditable;
                OnValidate=BEGIN
                             SalesCodeControlEditable := SetSalesCodeEditable("Sales Type");
                           END;
                            }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code that belongs to the Sales Type.;
                           NOR=Angir koden som h›rer til salgstypen.;
                           SVE=Anger vilken kod som tillh”r F”rs„ljningstyp.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sales Code";
                Editable=SalesCodeControlEditable }

    { 1100525000;2;Field  ;
                SourceExpr="Sales Code Description";
                Visible=false }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the item for which the sales price is valid.;
                           NOR=Angir nummeret for varen som salgsprisen gjelder for.;
                           SVE=Anger numret p† den artikel som f”rs„ljningspriset g„ller f”r.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item No." }

    { 1100525001;2;Field  ;
                SourceExpr="Item Description";
                Visible=false }

    { 1100525002;2;Field  ;
                SourceExpr="Item Description 2";
                Visible=false }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the variant of the item on the line.;
                           NOR=Angir varianten for varen p† linjen.;
                           SVE=Anger varianten av artikeln p† raden.];
                ApplicationArea=#Planning;
                SourceExpr="Variant Code";
                Visible=FALSE;
                Editable=VariantCodeControlEditable }

    { 1100525003;2;Field  ;
                SourceExpr="Variant Code Description";
                Visible=false }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the currency of the sales price.;
                           NOR=Angir valutakoden for salgsprisen.;
                           SVE=Anger valutakoden f”r f”rs„ljningspriset.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Currency Code Description";
                Visible=false }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                           NOR=Angir hvordan hver enhet av varen eller ressursen m†les, for eksempel i stykker eller timer. Verdien i feltet Lagerenhet p† vare- eller ressurskortet settes inn som standard.;
                           SVE=Anger hur varje enhet av artikeln eller resursen m„ts, till exempel i stycken eller timmar. Som standard infogas v„rdet i f„ltet Basenhet p† artikel- eller resurskortet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code";
                Editable=UnitOfMeasureCodeControlEditable }

    { 1100525005;2;Field  ;
                SourceExpr="Unit of Measure Description";
                Visible=false }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the minimum sales quantity required to warrant the sales price.;
                           NOR=Angir det minste salgsantallet som kreves for † garantere salgsprisen.;
                           SVE=Anger minsta f”rs„ljningsantal som kr„vs f”r att garantera f”rs„ljningspriset.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Minimum Quantity";
                Editable=MinimumQuantityControlEditable }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the price of one unit of the item or resource. You can enter a price manually or have it entered according to the Price/Profit Calculation field on the related card.;
                           NOR=Angir prisen for ‚n enhet av varen eller ressursen. Du kan angi en pris manuelt, eller du kan f† den angitt i henhold til feltet Beregning av fortjeneste-% p† det relaterte kortet.;
                           SVE=Anger priset f”r en enhet av artikeln eller resursen. Du kan ange ett pris manuellt eller h„mta det fr†n f„ltet Pris/vinstber„kning p† det relaterade kortet.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Price";
                Editable=UnitPriceControlEditable }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date from which the sales price is valid.;
                           NOR=Angir datoen som salgsprisen er gyldig fra.;
                           SVE=Anger datumet som f”rs„ljningspriset g„ller fr†n.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Starting Date" }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the calendar date when the sales price agreement ends.;
                           NOR=Angir kalenderdatoen da salgsprisavtalen avsluttes.;
                           SVE=Anger kalenderdatumet d† f”rs„ljningsprisavtalet upph”r.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ending Date";
                Editable=EndingDateControlEditable }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the sales price includes VAT.;
                           NOR=Angir om salgsprisen inkluderer mva.;
                           SVE=Anger om f”rs„ljningspriset inkluderar moms.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Price Includes VAT";
                Visible=FALSE;
                Editable=PriceIncludesVATControlEditable }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if a line discount will be calculated when the sales price is offered.;
                           NOR=Angir om en linjerabatt skal beregnes n†r salgsprisen tilbys.;
                           SVE=Anger om en radrabatt ska ber„knas n„r f”rs„ljningspriset offereras.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Allow Line Disc.";
                Visible=FALSE;
                Editable=AllowLineDiscControlEditable }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if an invoice discount will be calculated when the sales price is offered.;
                           NOR=Angir om en fakturarabatt skal beregnes n†r salgsprisen tilbys.;
                           SVE=Anger om en fakturarabatt ska ber„knas n„r f”rs„ljningspriset offereras.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE;
                Editable=AllowInvoiceDiscControlEditable }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the VAT business posting group for customers for whom you want the sales price (which includes VAT) to apply.;
                           NOR=Angir mva-firmabokf›ringsgruppen for kunder som du vil at salgsprisen (som inkluderer mva) skal gjelde for.;
                           SVE=Anger r”relsebokf”ringsmallen med moms f”r de kunder som du vill att f”rs„ljningspriset (inklusive moms) ska g„lla f”r.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Bus. Posting Gr. (Price)";
                Visible=FALSE;
                Editable=VATBusPostingGrPriceControlEditable }

    { 1100525006;2;Field  ;
                SourceExpr="Item Card Unit Cost";
                Visible=FALSE }

    { 1100525007;2;Field  ;
                SourceExpr="Item Card Unit Price";
                Visible=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Cust@1001 : Record 18;
      CustPriceGr@1005 : Record 6;
      Campaign@1008 : Record 11072034;
      ClientTypeManagement@1077 : Codeunit 4030;
      SalesTypeFilter@1000 : 'Customer,Customer Price Group,All Customers,Campaign,None';
      SalesCodeFilter@1003 : Text;
      ItemNoFilter@1011 : Text;
      StartingDateFilter@1006 : Text[30];
      CurrencyCodeFilter@1002 : Text;
      Text000@1007 : TextConst 'ENU=All Customers;NOR=Alle kunder;SVE=Alla kunder';
      Text001@1009 : TextConst 'ENU=No %1 within the filter %2.;NOR=Ingen %1 i filteret %2.;SVE=Ingen %1 i filtret %2.';
      SalesCodeFilterCtrlEnable@19013164 : Boolean INDATASET;
      IsOnMobile@1004 : Boolean;
      IsLookupMode@1017 : Boolean;
      SalesTypeControlEditable@1012 : Boolean;
      SalesCodeControlEditable@1013 : Boolean;
      MultipleCustomersSelectedErr@1018 : TextConst 'ENU=More than one customer uses these sales prices. To copy prices, the Sales Code Filter field must contain one customer only.;NOR=Flere enn ‚n kunde bruker disse salgsprisene. Hvis du vil kopiere priser, m† feltet Salgskodefilter bare inneholde ‚n kunde.;SVE=Fler „n en kund anv„nder de h„r f”rs„ljningspriserna. Om du vill kopiera priser f†r f„ltet F”rs.kodfilter bara inneh†lla en kund.';
      IncorrectSalesTypeToCopyPricesErr@1010 : TextConst 'ENU=To copy sales prices, The Sales Type Filter field must contain Customer.;NOR=Hvis du vil kopiere salgspriser, m† feltet Salgstypefilter inneholde Kunde.;SVE=Om du vill kopiera f”rs„ljningspriser m†ste f„ltet F”rs.typfilter inneh†ll Kund.';
      VariantCodeControlEditable@1100528400 : Boolean INDATASET;
      UnitOfMeasureCodeControlEditable@1100528401 : Boolean INDATASET;
      MinimumQuantityControlEditable@1100528402 : Boolean INDATASET;
      UnitPriceControlEditable@1100528403 : Boolean INDATASET;
      EndingDateControlEditable@1100528404 : Boolean INDATASET;
      PriceIncludesVATControlEditable@1100528405 : Boolean INDATASET;
      AllowLineDiscControlEditable@1100528406 : Boolean INDATASET;
      AllowInvoiceDiscControlEditable@1100528407 : Boolean INDATASET;
      VATBusPostingGrPriceControlEditable@1100528408 : Boolean INDATASET;
      Text11012000@1100528409 : TextConst 'ENU=Sales Prices are managed centrally.';
      ItemNoControlEditable@1100525000 : Boolean INDATASET;
      StartingDateControlEditable@1100525001 : Boolean INDATASET;
      CurrencyCodeControlEditable@1100525002 : Boolean INDATASET;

    LOCAL PROCEDURE GetRecFilters@2();
    BEGIN
      IF GETFILTERS <> '' THEN
        UpdateBasicRecFilters;

      EVALUATE(StartingDateFilter,GETFILTER("Starting Date"));
    END;

    LOCAL PROCEDURE UpdateBasicRecFilters@17();
    BEGIN
      IF GETFILTER("Sales Type") <> '' THEN
        SalesTypeFilter := GetSalesTypeFilter
      ELSE
        SalesTypeFilter := SalesTypeFilter::None;

      SalesCodeFilter := GETFILTER("Sales Code");
      ItemNoFilter := GETFILTER("Item No.");
      CurrencyCodeFilter := GETFILTER("Currency Code");
    END;

    [External]
    PROCEDURE SetRecFilters@1();
    BEGIN
      SalesCodeFilterCtrlEnable := TRUE;

      IF SalesTypeFilter <> SalesTypeFilter::None THEN
        SETRANGE("Sales Type",SalesTypeFilter)
      ELSE
        SETRANGE("Sales Type");

      IF SalesTypeFilter IN [SalesTypeFilter::"All Customers",SalesTypeFilter::None] THEN BEGIN
        SalesCodeFilterCtrlEnable := FALSE;
        SalesCodeFilter := '';
      END;

      IF SalesCodeFilter <> '' THEN
        SETFILTER("Sales Code",SalesCodeFilter)
      ELSE
        SETRANGE("Sales Code");

      IF StartingDateFilter <> '' THEN
        SETFILTER("Starting Date",StartingDateFilter)
      ELSE
        SETRANGE("Starting Date");

      IF ItemNoFilter <> '' THEN BEGIN
        SETFILTER("Item No.",ItemNoFilter);
      END ELSE
        SETRANGE("Item No.");

      IF CurrencyCodeFilter <> '' THEN BEGIN
        SETFILTER("Currency Code",CurrencyCodeFilter);
      END ELSE
        SETRANGE("Currency Code");

      CASE SalesTypeFilter OF
        SalesTypeFilter::Customer:
          CheckFilters(DATABASE::Customer,SalesCodeFilter);
        SalesTypeFilter::"Customer Price Group":
          CheckFilters(DATABASE::"Customer Price Group",SalesCodeFilter);
        SalesTypeFilter::Campaign:
          CheckFilters(DATABASE::Campaign,SalesCodeFilter);
      END;
      CheckFilters(DATABASE::Item,ItemNoFilter);
      CheckFilters(DATABASE::Currency,CurrencyCodeFilter);

      SetEditableFields;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE GetCaption@3() : Text;
    BEGIN
      IF IsOnMobile THEN
        EXIT('');

      EXIT(GetFilterDescription);
    END;

    LOCAL PROCEDURE GetFilterDescription@7() : Text;
    VAR
      ObjTranslation@1000 : Record 377;
      SourceTableName@1002 : Text;
      SalesSrcTableName@1003 : Text;
      Description@1001 : Text;
    BEGIN
      GetRecFilters;

      SourceTableName := '';
      IF ItemNoFilter <> '' THEN
        SourceTableName := ObjTranslation.TranslateObject(ObjTranslation."Object Type"::Table,27);

      SalesSrcTableName := '';
      CASE SalesTypeFilter OF
        SalesTypeFilter::Customer:
          BEGIN
            SalesSrcTableName := ObjTranslation.TranslateObject(ObjTranslation."Object Type"::Table,18);
            Cust."No." := COPYSTR(SalesCodeFilter,1,MAXSTRLEN(Cust."No."));
            IF Cust.FIND THEN
              Description := Cust.Name;
          END;
        SalesTypeFilter::"Customer Price Group":
          BEGIN
            SalesSrcTableName := ObjTranslation.TranslateObject(ObjTranslation."Object Type"::Table,6);
            CustPriceGr.Code := COPYSTR(SalesCodeFilter,1,MAXSTRLEN(CustPriceGr.Code));
            IF CustPriceGr.FIND THEN
              Description := CustPriceGr.Description;
          END;
        SalesTypeFilter::Campaign:
          BEGIN
            SalesSrcTableName := ObjTranslation.TranslateObject(ObjTranslation."Object Type"::Table,11072034);
            Campaign."No." := COPYSTR(SalesCodeFilter,1,MAXSTRLEN(Campaign."No."));
            IF Campaign.FIND THEN
              Description := Campaign.Description;
          END;
        SalesTypeFilter::"All Customers":
          BEGIN
            SalesSrcTableName := Text000;
            Description := '';
          END;
      END;

      IF SalesSrcTableName = Text000 THEN
        EXIT(STRSUBSTNO('%1 %2 %3',SalesSrcTableName,SourceTableName,ItemNoFilter));
      EXIT(STRSUBSTNO('%1 %2 %3 %4 %5',SalesSrcTableName,SalesCodeFilter,Description,SourceTableName,ItemNoFilter));
    END;

    LOCAL PROCEDURE CheckFilters@4(TableNo@1000 : Integer;FilterTxt@1001 : Text);
    VAR
      FilterRecordRef@1002 : RecordRef;
      FilterFieldRef@1003 : FieldRef;
    BEGIN
      //IF FilterTxt = '' THEN //**4PS.o
      IF (FilterTxt = '') OR (FilterTxt = '''''') THEN //**4PS.n
        EXIT;
      CLEAR(FilterRecordRef);
      CLEAR(FilterFieldRef);
      FilterRecordRef.OPEN(TableNo);
      FilterFieldRef := FilterRecordRef.FIELD(1);
      FilterFieldRef.SETFILTER(FilterTxt);
      IF FilterRecordRef.ISEMPTY THEN
        ERROR(Text001,FilterRecordRef.CAPTION,FilterTxt);
    END;

    LOCAL PROCEDURE SalesCodeFilterOnAfterValidate@19067727();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE SalesTypeFilterOnAfterValidate@19024044();
    BEGIN
      CurrPage.SAVERECORD;
      SalesCodeFilter := '';
      SetRecFilters;
    END;

    LOCAL PROCEDURE StartingDateFilterOnAfterValid@19055286();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE ItemNoFilterOnAfterValidate@19009808();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE CurrencyCodeFilterOnAfterValid@19015290();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE GetSalesTypeFilter@1000() : Integer;
    BEGIN
      CASE GETFILTER("Sales Type") OF
        FORMAT("Sales Type"::Customer):
          EXIT(0);
        FORMAT("Sales Type"::"Customer Price Group"):
          EXIT(1);
        FORMAT("Sales Type"::"All Customers"):
          EXIT(2);
        FORMAT("Sales Type"::Campaign):
          EXIT(3);
      END;
    END;

    LOCAL PROCEDURE SetSalesCodeEditable@5(SalesType@1000 : Option) : Boolean;
    BEGIN
      EXIT(SalesType <> "Sales Type"::"All Customers");
    END;

    LOCAL PROCEDURE SetEditableFields@10();
    BEGIN
      SalesTypeControlEditable := GETFILTER("Sales Type") = '';
      SalesCodeControlEditable :=
        SalesCodeControlEditable AND (GETFILTER("Sales Code") = '');
    END;

    LOCAL PROCEDURE FilterLines@6();
    VAR
      FilterPageBuilder@1000 : FilterPageBuilder;
    BEGIN
      FilterPageBuilder.ADDTABLE(TABLECAPTION,DATABASE::"Sales Price");

      FilterPageBuilder.SETVIEW(TABLECAPTION,GETVIEW);
      IF GETFILTER("Sales Type") = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO("Sales Type"));
      IF GETFILTER("Sales Code") = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO("Sales Code"));
      IF GETFILTER("Item No.") = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO("Item No."));
      IF GETFILTER("Starting Date") = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO("Starting Date"));
      IF GETFILTER("Currency Code") = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO("Currency Code"));

      IF FilterPageBuilder.RUNMODAL THEN
        SETVIEW(FilterPageBuilder.GETVIEW(TABLECAPTION));

      UpdateBasicRecFilters;
      EVALUATE(StartingDateFilter,GETFILTER("Starting Date"));
      SetEditableFields;
    END;

    LOCAL PROCEDURE CopyPrices@8();
    VAR
      Customer@1001 : Record 18;
      SalesPrice@1004 : Record 7002;
      SelectedSalesPrice@1005 : Record 7002;
      SalesPrices@1002 : Page 7002;
      CopyToCustomerNo@1003 : Code[20];
    BEGIN
      IF SalesTypeFilter <> SalesTypeFilter::Customer THEN
        ERROR(IncorrectSalesTypeToCopyPricesErr);
      Customer.SETFILTER("No.",SalesCodeFilter);
      IF Customer.COUNT <> 1 THEN
        ERROR(MultipleCustomersSelectedErr);
      CopyToCustomerNo := COPYSTR(SalesCodeFilter,1,MAXSTRLEN(CopyToCustomerNo));
      SalesPrice.SETRANGE("Sales Type",SalesPrice."Sales Type"::Customer);
      SalesPrice.SETFILTER("Sales Code",'<>%1',SalesCodeFilter);
      SalesPrices.LOOKUPMODE(TRUE);
      SalesPrices.SETTABLEVIEW(SalesPrice);
      IF SalesPrices.RUNMODAL = ACTION::LookupOK THEN BEGIN
        SalesPrices.GetSelectionFilter(SelectedSalesPrice);
        CopySalesPriceToCustomersSalesPrice(SelectedSalesPrice,CopyToCustomerNo);
      END;
    END;

    [External]
    PROCEDURE GetSelectionFilter@9(VAR SalesPrice@1000 : Record 7002);
    BEGIN
      CurrPage.SETSELECTIONFILTER(SalesPrice);
    END;

    LOCAL PROCEDURE ActivateFieldsForCentralManagement@1100528405();
    VAR
      CentralDataMgt@1100528400 : Codeunit 11012010;
    BEGIN
      //**4PS
      SetEditableFields;
      SalesCodeControlEditable := SetSalesCodeEditable("Sales Type");
      ItemNoControlEditable := TRUE;
      StartingDateControlEditable := TRUE;
      CurrencyCodeControlEditable := TRUE;
      VariantCodeControlEditable := TRUE;
      UnitOfMeasureCodeControlEditable := TRUE;
      MinimumQuantityControlEditable := TRUE;

      UnitPriceControlEditable := TRUE;
      EndingDateControlEditable := TRUE;
      PriceIncludesVATControlEditable := TRUE;
      AllowLineDiscControlEditable := TRUE;
      AllowInvoiceDiscControlEditable := TRUE;
      VATBusPostingGrPriceControlEditable := TRUE;

      IF NOT CentralDataMgt.ChangingSalesPriceIsAllowed(Rec) THEN BEGIN
        ItemNoControlEditable := FALSE;
        SalesTypeControlEditable := FALSE;
        SalesCodeControlEditable := FALSE;
        StartingDateControlEditable := FALSE;
        CurrencyCodeControlEditable := FALSE;
        VariantCodeControlEditable := FALSE;
        UnitOfMeasureCodeControlEditable := FALSE;
        MinimumQuantityControlEditable := FALSE;

        UnitPriceControlEditable := CentralDataMgt.FieldInputAllowed(DATABASE::"Sales Price", FIELDNO("Unit Price"));
        EndingDateControlEditable := CentralDataMgt.FieldInputAllowed(DATABASE::"Sales Price", FIELDNO("Ending Date"));
        PriceIncludesVATControlEditable := CentralDataMgt.FieldInputAllowed(DATABASE::"Sales Price", FIELDNO("Price Includes VAT"));
        AllowLineDiscControlEditable := CentralDataMgt.FieldInputAllowed(DATABASE::"Sales Price", FIELDNO("Allow Line Disc."));
        AllowInvoiceDiscControlEditable := CentralDataMgt.FieldInputAllowed(DATABASE::"Sales Price", FIELDNO("Allow Invoice Disc."));
        VATBusPostingGrPriceControlEditable := CentralDataMgt.FieldInputAllowed(DATABASE::"Sales Price", FIELDNO("VAT Bus. Posting Gr. (Price)"));
      END;
    END;

    BEGIN
    END.
  }
}

