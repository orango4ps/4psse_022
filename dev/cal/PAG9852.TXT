OBJECT Page 9852 Effective Permissions
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Effective Permissions;
               NOR=Gyldige tillatelser;
               SVE=G„llande beh”righeter];
    ApplicationArea=#All;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table2000000005;
    PageType=Worksheet;
    UsageCategory=Administration;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             CurrentUserID := USERSECURITYID;
             ChosenUserName := USERID;
             CurrentCompanyName := COMPANYNAME;
           END;

    OnOpenPage=BEGIN
                 FillByObject;
               END;

    OnAfterGetRecord=VAR
                       TenantPermission@1000 : Record 2000000166;
                       ZeroGuid@1001 : GUID;
                     BEGIN
                       IF "Object ID" = 0 THEN
                         EXIT;
                       TenantPermission.SETRANGE("App ID",ZeroGuid); // does not come from an extension
                       TenantPermission.SETRANGE("Object Type","Object Type");
                       TenantPermission.SETRANGE("Object ID","Object ID");
                       ContainedInCustomPermissionSet := NOT TenantPermission.ISEMPTY;
                     END;

    OnAfterGetCurrRecord=VAR
                           EffectivePermissionsMgt@1000 : Codeunit 9852;
                         BEGIN
                           // Refresh
                           IF "Object ID" <> 0 THEN BEGIN // handle case when there are no records at all
                             EffectivePermissionsMgt.PopulatePermissionRecordWithEffectivePermissionsForObject(Rec,CurrentUserID,CurrentCompanyName,
                               "Object Type","Object ID");
                             MODIFY;
                           END;

                           CurrPage.ByPermissionSet.PAGE.SetRecordAndRefresh(CurrentUserID,CurrentCompanyName,"Object Type","Object ID");
                         END;

    ActionList=ACTIONS
    {
      { 5       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 7       ;1   ;Action    ;
                      CaptionML=[ENU=Permission Sets;
                                 NOR=Tillatelsessett;
                                 SVE=Beh”righetsupps„ttningar];
                      ToolTipML=[ENU=View or edit which feature objects that users need to access and set up the related permissions in permission sets that you can assign to the users of the database.;
                                 NOR=Vis eller rediger hvilke funksjonsobjekter brukere trenger for † f† tilgang, og definer relaterte tillatelser i tillatelsessett som du kan tilordne brukerne av databasen.;
                                 SVE=Visa eller „ndra vilka funktionsobjekt anv„ndare beh”ver komma †t och skapa relaterade beh”righeter i beh”righetsupps„ttningar som du kan tilldela anv„ndare i databasen.];
                      ApplicationArea=#All;
                      RunObject=Page 9802;
                      Promoted=Yes;
                      Image=Permission;
                      PromotedCategory=Process }
      { 19      ;1   ;Action    ;
                      CaptionML=[ENU=Permission Set by User;
                                 NOR=Tillatelsessett etter bruker;
                                 SVE=Beh”righetsupps„ttning efter anv„ndare];
                      ToolTipML=[ENU=View or edit the available permission sets and apply permission sets to existing users.;
                                 NOR=Vis eller rediger de tilgjengelige tillatelsessettene, og bruk tillatelsessett for eksisterende brukere.;
                                 SVE=Visa eller redigera de tillg„ngliga beh”righetsupps„ttningarna och anv„nd beh”righetsupps„ttningar p† befintliga anv„ndare.];
                      ApplicationArea=#All;
                      RunObject=Page 9816;
                      Promoted=Yes;
                      Image=Permission;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=Allm„nt];
                GroupType=Group }

    { 3   ;2   ;Field     ;
                Name=ChooseUser;
                CaptionML=[ENU=User;
                           NOR=Bruker;
                           SVE=Anv„ndare];
                ToolTipML=[ENU=Specifies the user that the effective permissions apply to.;
                           NOR=Angir brukeren som de gyldige tillatelsene gjelder for.;
                           SVE=Anger anv„ndaren som den g„llande beh”righeten g„ller f”r.];
                ApplicationArea=#All;
                SourceExpr=ChosenUserName;
                OnValidate=VAR
                             User@1000 : Record 2000000120;
                           BEGIN
                             User.SETRANGE("User Name",ChosenUserName);
                             User.FINDFIRST;
                             CurrentUserID := User."User Security ID";
                             FillByObject;
                           END;

                OnLookup=VAR
                           ChosenUser@1003 : Record 2000000120;
                           User@1002 : Record 2000000120;
                           Users@1000 : Page 9800;
                         BEGIN
                           User.SETFILTER("License Type",'<>%1',User."License Type"::"External User");
                           Users.SETTABLEVIEW(User);
                           ChosenUser.SETRANGE("User Name",Text);
                           IF ChosenUser.FINDFIRST THEN
                             Users.SETRECORD(ChosenUser);
                           Users.LOOKUPMODE(TRUE);
                           IF Users.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             Users.GETRECORD(User);

                             IF Text <> User."User Name" THEN BEGIN
                               Text := User."User Name";
                               ChosenUserName := Text;
                               CurrentUserID := User."User Security ID";
                               FillByObject;
                             END;
                           END;
                         END;
                          }

    { 16  ;2   ;Field     ;
                Name=ChooseCompany;
                CaptionML=[ENU=Company;
                           NOR=Selskap;
                           SVE=F”retag];
                ToolTipML=[ENU=Specifies the company for which effective permissions for the chosen user will be shown.;
                           NOR=Angir selskapet som gyldige tillatelser for den valgte brukeren vises for.;
                           SVE=Anger f”retaget som g„llande beh”righeter f”r den valda anv„ndaren visas f”r.];
                ApplicationArea=#All;
                SourceExpr=CurrentCompanyName;
                OnValidate=VAR
                             Company@1000 : Record 2000000006;
                           BEGIN
                             Company.GET(CurrentCompanyName);
                             FillByObject;
                           END;

                OnLookup=VAR
                           Company@1001 : Record 2000000006;
                           Companies@1000 : Page 357;
                         BEGIN
                           IF Company.GET(CurrentCompanyName) THEN
                             Companies.SETRECORD(Company);
                           Companies.LOOKUPMODE(TRUE);
                           IF Companies.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             Companies.GETRECORD(Company);

                             IF Text <> Company.Name THEN BEGIN
                               Text := Company.Name;
                               CurrentCompanyName := Text;
                               FillByObject;
                             END;
                           END;
                         END;
                          }

    { 17  ;2   ;Field     ;
                Name=ShowAllObjects;
                CaptionML=[ENU=Show All Objects;
                           NOR=Vis alle objekter;
                           SVE=Visa alla objekt];
                ToolTipML=[ENU=Specifies if the effective permissions are shown for all objects or only for objects in the user's assigned permission sets.;
                           NOR=Angir om de gyldige tillatelsene vises for alle objekter eller bare for objekter i brukerens tilordnede tillatelsessett.;
                           SVE=Anger om g„llande beh”righeter visas f”r alla objekt eller bara f”r objekten i anv„ndarens tilldelade beh”righetsupps„ttningar.];
                ApplicationArea=#All;
                SourceExpr=ShowAllObjects;
                OnValidate=BEGIN
                             CurrentObjectId := 0;
                             FillByObject;
                           END;
                            }

    { 18  ;1   ;Group     ;
                CaptionML=[ENU=Permissions;
                           NOR=Tillatelser;
                           SVE=Beh”righeter];
                GroupType=Group }

    { 6   ;2   ;Group     ;
                Name=EffectivePermissions;
                GroupType=Repeater }

    { 13  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the type of object that the permissions apply to in the current database.;
                           NOR=Angir hvilken objekttype tillatelsene gjelder for i den gjeldende databasen.;
                           SVE=Anger typen f”r objektet som beh”righeterna g„ller i den aktuella databasen.];
                ApplicationArea=#All;
                SourceExpr="Object Type" }

    { 15  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the object to which the permissions apply.;
                           NOR=Angir ID-en for objektet som tillatelsene gjelder for.;
                           SVE=Anger id:t f”r objektet som beh”righeterna g„ller.];
                ApplicationArea=#All;
                SourceExpr="Object ID";
                Visible=FALSE;
                Editable=FALSE }

    { 14  ;3   ;Field     ;
                CaptionML=[ENU=Object Name;
                           NOR=Objektnavn;
                           SVE=Objektnamn];
                ApplicationArea=#All;
                SourceExpr="Object Name";
                Editable=FALSE }

    { 8   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has read permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have read permission.;
                           NOR=Angir informasjon om tillatelsessettene har lesetillatelse til dette objektet eller ikke. Verdiene for feltet er Tomt, Ja og Indirekte. Indirekte betyr tillatelse bare gjennom et annet objekt. Hvis feltet er tomt, har ikke tillatelsessettet lesetillatelse.;
                           SVE=Inneh†ller information om huruvida beh”righetsupps„ttningen har l„sbeh”righet till det h„r objektet. F„ltet kan vara tomt eller ha v„rdet Ja eller Indirekt. Indirekt inneb„r att beh”righet bara ges via ett annat objekt. Om f„ltet „r tomt har beh”righetsupps„ttningen inte l„sbeh”righet.];
                ApplicationArea=#All;
                SourceExpr="Read Permission" }

    { 9   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has insert permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have insert permission.;
                           NOR=Angir informasjon om tillatelsessettene har innsettingstillatelse til dette objektet eller ikke. Verdiene for feltet er Tomt, Ja og Indirekte. Indirekte betyr tillatelse bare gjennom et annet objekt. Hvis feltet er tomt, har ikke tillatelsessettet innsettingstillatelse.;
                           SVE=Inneh†ller information om huruvida beh”righetsupps„ttningen har infogningsbeh”righet till det h„r objektet. F„ltet kan vara tomt eller ha v„rdet Ja eller Indirekt. Indirekt inneb„r att beh”righet bara ges via ett annat objekt. Om f„ltet „r tomt har beh”righetsupps„ttningen inte infogningsbeh”righet.];
                ApplicationArea=#All;
                SourceExpr="Insert Permission" }

    { 10  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has modify permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have modify permission.;
                           NOR=Angir informasjon om tillatelsessettene har endringstillatelse til dette objektet eller ikke. Verdiene for feltet er Tomt, Ja og Indirekte. Indirekte betyr tillatelse bare gjennom et annet objekt. Hvis feltet er tomt, har ikke tillatelsessettet endringstillatelse.;
                           SVE=Inneh†ller information om huruvida beh”righetsupps„ttningen har „ndringsbeh”righet till det h„r objektet. F„ltet kan vara tomt eller ha v„rdet Ja eller Indirekt. Indirekt inneb„r att beh”righet bara ges via ett annat objekt. Om f„ltet „r tomt har beh”righetsupps„ttningen inte „ndringsbeh”righet.];
                ApplicationArea=#All;
                SourceExpr="Modify Permission" }

    { 11  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has delete permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have delete permission.;
                           NOR=Angir informasjon om tillatelsessettene har slettetillatelse til dette objektet eller ikke. Verdiene for feltet er Tomt, Ja og Indirekte. Indirekte betyr tillatelse bare gjennom et annet objekt. Hvis feltet er tomt, har ikke tillatelsessettet slettetillatelse.;
                           SVE=Inneh†ller information om huruvida beh”righetsupps„ttningen har borttagningsbeh”righet till det h„r objektet. F„ltet kan vara tomt eller ha v„rdet Ja eller Indirekt. Indirekt inneb„r att beh”righet bara ges via ett annat objekt. Om f„ltet „r tomt har beh”righetsupps„ttningen inte borttagningsbeh”righet.];
                ApplicationArea=#All;
                SourceExpr="Delete Permission" }

    { 12  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has execute permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have execute permission.;
                           NOR=Angir informasjon om tillatelsessettene har kj›ringstillatelse til dette objektet eller ikke. Verdiene for feltet er Tomt, Ja og Indirekte. Indirekte betyr tillatelse bare gjennom et annet objekt. Hvis feltet er tomt, har ikke tillatelsessettet kj›ringstillatelse.;
                           SVE=Inneh†ller information om huruvida beh”righetsupps„ttningen har k”rningsbeh”righet till det h„r objektet. F„ltet kan vara tomt eller ha v„rdet Ja eller Indirekt. Indirekt inneb„r att beh”righet bara ges via ett annat objekt. Om f„ltet „r tomt har beh”righetsupps„ttningen inte k”rningsbeh”righet.];
                ApplicationArea=#All;
                SourceExpr="Execute Permission" }

    { 4   ;3   ;Field     ;
                CaptionML=[ENU=In User-Defined Permission Set;
                           NOR=I brukerdefinert tillatelsessett;
                           SVE=I anv„ndardefinierad beh”righetsupps„ttning];
                ToolTipML=[ENU=Specifies if the object is included in a User-Defined permission set.;
                           NOR=Angir om objektet er inkludert i et brukerdefinert tillatelsessett.;
                           SVE=Anger om objektet ing†r i en anv„ndardefinierad beh”righetsupps„ttning.];
                ApplicationArea=#All;
                SourceExpr=ContainedInCustomPermissionSet;
                Editable=False }

    { 20  ;1   ;Part      ;
                Name=ByPermissionSet;
                ApplicationArea=#All;
                PagePartID=Page9853;
                PartType=Page;
                UpdatePropagation=Both }

  }
  CODE
  {
    VAR
      CurrentUserID@1000 : GUID;
      CurrentObjectType@1006 : Option;
      CurrentObjectId@1007 : Integer;
      CurrentCompanyName@1001 : Text[30];
      ChosenUserName@1003 : Code[50];
      LastUsedUserID@1002 : GUID;
      LastUsedCompanyName@1008 : Text[30];
      LastUsedObjectType@1009 : Option;
      LastUsedObjectId@1010 : Integer;
      LastUsedShowAllObjects@1012 : Boolean;
      ShowAllObjects@1011 : Boolean;
      ContainedInCustomPermissionSet@1004 : Boolean;

    LOCAL PROCEDURE FillByObject@1();
    VAR
      EffectivePermissionsMgt@1000 : Codeunit 9852;
    BEGIN
      IF (LastUsedUserID = CurrentUserID) AND
         (LastUsedCompanyName = CurrentCompanyName) AND
         (LastUsedObjectType = CurrentObjectType) AND
         (LastUsedObjectId = CurrentObjectId) AND
         (LastUsedShowAllObjects = ShowAllObjects)
      THEN
        EXIT;

      EffectivePermissionsMgt.PopulateEffectivePermissionsBuffer(Rec,
        CurrentUserID,CurrentCompanyName,CurrentObjectType,CurrentObjectId,ShowAllObjects);
      CurrPage.UPDATE(FALSE);

      LastUsedUserID := CurrentUserID;
      LastUsedCompanyName := CurrentCompanyName;
      LastUsedObjectType := CurrentObjectType;
      LastUsedObjectId := CurrentObjectId;
      LastUsedShowAllObjects := ShowAllObjects;
      OnEffectivePermissionsPopulated(CurrentUserID,CurrentCompanyName,CurrentObjectType,CurrentObjectId);
    END;

    [External]
    PROCEDURE SetUserSID@5(UserSID@1000 : GUID);
    VAR
      User@1001 : Record 2000000120;
    BEGIN
      User.GET(UserSID);
      CurrentUserID := UserSID;
      ChosenUserName := User."User Name";
    END;

    [Integration]
    LOCAL PROCEDURE OnEffectivePermissionsPopulated@3(CurrUserId@1000 : GUID;CurrCompanyName@1001 : Text[30];CurrObjectType@1002 : Integer;CurrObjectId@1003 : Integer);
    BEGIN
    END;

    BEGIN
    END.
  }
}

