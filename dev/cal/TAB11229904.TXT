OBJECT Table 11229904 Opportunity Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               Job@1100528800 : Record 11072003;
             BEGIN
               VALIDATE("Line No.");

               //**4PS.sn BI047 KD 25-07-16
               IF "Base Risk Code" <> '' THEN
                 VALIDATE("Base Risk Code")
               ELSE BEGIN
               //**4PS.en BI047 KD 25-07-16
                 VALIDATE("Probability Code", DetermineProbabilityCode("Probability Code"));
                 VALIDATE(Impact, DetermineImpactCode(Impact));
               END;

               GetRisksOpportunitiesSchedule;
               RiskOpportunitySchedule.TESTFIELD(Fixed,FALSE);

               IF Source = Source::Project THEN
                 IF Job.GET("Source Code") THEN
                   "Main Project No." := Job."Main Project";

               "Created by" := USERID;
               "Created on" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               GetRisksOpportunitiesSchedule;
               RiskOpportunitySchedule.TESTFIELD(Fixed,FALSE);

               "Modified by" := USERID;
               "Last Date Modified" := CURRENTDATETIME;
             END;

    OnDelete=BEGIN
               GetRisksOpportunitiesSchedule;
               RiskOpportunitySchedule.TESTFIELD(Fixed,FALSE);

               IF ("Prev. Total Opp. Cost Amount" <> 0) OR
                 ("Prev. Total Opp. Sales Amt." <> 0) OR
                 ("Prev. Target Opp. Cost Amount" <> 0) OR
                 ("Prev. Target Opp. Sales Amt." <> 0)
               THEN
                 ERROR(Text001,TABLECAPTION);

               DeleteCommentLine;
               DeleteDocumentLinks;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=ENU=Opportunity Line;
  }
  FIELDS
  {
    { 10  ;   ;Source              ;Option        ;CaptionML=[ENU=Source;
                                                              NOR=Kilde;
                                                              SVE=K„lla];
                                                   OptionCaptionML=ENU=Project,Try-Out,Service Contract;
                                                   OptionString=Project,Try-Out,Service Contract;
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 20  ;   ;Source Code         ;Code20        ;TableRelation=IF (Source=CONST(Project)) Job.No.
                                                                 ELSE IF (Source=CONST(Try-Out)) Try-out.Code
                                                                 ELSE IF (Source=CONST(Service Contract)) Service-Contract.No.;
                                                   CaptionML=[ENU=Source Code;
                                                              NOR=Kildekode;
                                                              SVE=Ursprungskod];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 25  ;   ;Schedule Date       ;Date          ;TableRelation="Risk Opportunity Schedule".Date WHERE (Source=FIELD(Source),
                                                                                                         Source Code=FIELD(Source Code));
                                                   CaptionML=ENU=Schedule Date;
                                                   NotBlank=Yes }
    { 26  ;   ;Line No.            ;Integer       ;OnValidate=BEGIN
                                                                IF "Line No." = 0 THEN
                                                                  "Line No." := GetNewLineNo;
                                                              END;

                                                   CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr];
                                                   Editable=No }
    { 30  ;   ;Base Risk Code      ;Code20        ;TableRelation=IF (Source=CONST(Project)) "Base Risk Opportunity".Code WHERE (Type=CONST(Opportunity),
                                                                                                                                Apply To=FILTER(All|Project))
                                                                                                                                ELSE IF (Source=CONST(Try-Out)) "Base Risk Opportunity".Code WHERE (Type=CONST(Opportunity),
                                                                                                                                                                                                    Apply To=FILTER(All|Try-Out))
                                                                                                                                                                                                    ELSE IF (Source=CONST(Service Contract)) "Base Risk Opportunity".Code WHERE (Type=CONST(Opportunity),
                                                                                                                                                                                                                                                                                 Apply To=FILTER(All|Service Contract));
                                                   OnValidate=VAR
                                                                BaseRiskOpportunity@1100528800 : Record 11229899;
                                                              BEGIN
                                                                IF BaseRiskOpportunity.GET("Base Risk Code") THEN BEGIN
                                                                  Description := BaseRiskOpportunity.Description;
                                                                  VALIDATE(Impact, BaseRiskOpportunity.Impact);
                                                                  VALIDATE("Probability Code", BaseRiskOpportunity."Probability Code");
                                                                  //**4PS.sn BI047 KD 25-07-16
                                                                  IF "Probability %" <> BaseRiskOpportunity."Probability %" THEN BEGIN
                                                                    "Probability %" := BaseRiskOpportunity."Probability %";
                                                                    VALIDATE("Probability % After Risk Mgt",BaseRiskOpportunity."Probability %");
                                                                  END;
                                                                  IF "Currency Code" <> BaseRiskOpportunity."Currency Code" THEN
                                                                    "Currency Code" := BaseRiskOpportunity."Currency Code";
                                                                  IF "Predicted Cost Amount (FCY)" <> BaseRiskOpportunity."Predicted Cost Amount" THEN
                                                                    VALIDATE("Predicted Cost Amount (FCY)",BaseRiskOpportunity."Predicted Cost Amount");
                                                                  IF "Predicted Sales Amount (FCY)" <> BaseRiskOpportunity."Predicted Sales Amount" THEN
                                                                    VALIDATE("Predicted Sales Amount (FCY)",BaseRiskOpportunity."Predicted Sales Amount");
                                                                  //**4PS.en BI047 KD 25-07-16
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Risk Code }
    { 40  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 50  ;   ;Impact              ;Code20        ;TableRelation="Risk Opportunity Impact";
                                                   OnValidate=VAR
                                                                RiskOpportunityImpact@1100528800 : Record 11229901;
                                                              BEGIN
                                                                IF RiskOpportunityImpact.GET(Impact) THEN BEGIN
                                                                  IF RiskOpportunityImpact."Predicted Cost Amount (LCY)" <> 0 THEN
                                                                    "Predicted Cost Amount" := RiskOpportunityImpact."Predicted Cost Amount (LCY)";
                                                                  IF RiskOpportunityImpact."Predicted Sales Amount (LCY)" <> 0 THEN
                                                                    "Predicted Sales Amount" := RiskOpportunityImpact."Predicted Sales Amount (LCY)";
                                                                  //**4PS.sn BI047 KD 14-07-16
                                                                  "Currency Code" := RiskOpportunityImpact."Currency Code";
                                                                  IF RiskOpportunityImpact."Predicted Cost Amount" <> 0 THEN BEGIN
                                                                    "Predicted Cost Amount (FCY)" := RiskOpportunityImpact."Predicted Cost Amount";
                                                                    "Predicted Cost Amount" := CalculateAmount("Predicted Cost Amount (FCY)",FALSE);
                                                                  END;
                                                                  IF RiskOpportunityImpact."Predicted Sales Amount" <> 0 THEN BEGIN
                                                                    "Predicted Sales Amount (FCY)" := RiskOpportunityImpact."Predicted Sales Amount";
                                                                    "Predicted Sales Amount" := CalculateAmount("Predicted Sales Amount (FCY)",FALSE);
                                                                  END;
                                                                  //**4PS.en BI047 KD 14-07-16
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Impact;
                                                              SVE=Impakt] }
    { 60  ;   ;Probability Code    ;Code20        ;TableRelation="Risk Opportunity Probability";
                                                   OnValidate=VAR
                                                                RiskOpportunityProbability@1100528800 : Record 11229902;
                                                              BEGIN
                                                                IF "Probability Code" = '' THEN
                                                                  "Probability After Risk Mgt" := '';
                                                                IF RiskOpportunityProbability.GET("Probability Code") THEN BEGIN
                                                                  "Probability After Risk Mgt" := "Probability Code";
                                                                    IF RiskOpportunityProbability.Percentage <> 0 THEN
                                                                      VALIDATE("Probability %", RiskOpportunityProbability.Percentage);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Probability Code }
    { 65  ;   ;Probability %       ;Decimal       ;OnValidate=BEGIN
                                                                IF "Probability %" <> xRec."Probability %" THEN BEGIN
                                                                  VALIDATE("Probability % After Risk Mgt", "Probability %");
                                                                  "Probability Code" := FindProbabilityCodeByPercentage("Probability %");
                                                                END;

                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=[ENU=Probability %;
                                                              NOR=Sannsynlighets-%;
                                                              SVE=Sannolikhet %];
                                                   MaxValue=100 }
    { 70  ;   ;Predicted Cost Amount;Decimal      ;OnValidate=BEGIN
                                                                "Predicted Cost Amount (FCY)" := CalculateAmount("Predicted Cost Amount",TRUE); //**4PS.n BI047 KD 14-07-16
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Predicted Cost Amount (LCY) }
    { 80  ;   ;Predicted Sales Amount;Decimal     ;OnValidate=BEGIN
                                                                "Predicted Sales Amount (FCY)" := CalculateAmount("Predicted Sales Amount",TRUE); //**4PS.n BI047 KD 14-07-16
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Predicted Sales Amount (LCY) }
    { 90  ;   ;Anticipated Cost Amount;Decimal    ;OnValidate=BEGIN
                                                                "Anticipated Cost Amount (FCY)" := CalculateAmount("Anticipated Cost Amount",TRUE); //**4PS.n BI047 KD 14-07-16
                                                              END;

                                                   CaptionML=ENU=Anticipated Cost Amount (LCY) }
    { 100 ;   ;Anticipated Sales Amount;Decimal   ;OnValidate=BEGIN
                                                                "Anticipated Sales Amount (FCY)" := CalculateAmount("Anticipated Sales Amount",TRUE); //**4PS.n BI047 KD 14-07-16
                                                              END;

                                                   CaptionML=ENU=Anticipated Sales Amount (LCY) }
    { 110 ;   ;Risk Management Plan;Text250       ;CaptionML=ENU=Risk Management Plan }
    { 120 ;   ;Probability After Risk Mgt;Code20  ;TableRelation="Risk Opportunity Probability";
                                                   OnValidate=VAR
                                                                RiskOpportunityProbability@1100528800 : Record 11229902;
                                                              BEGIN
                                                                IF RiskOpportunityProbability.GET("Probability After Risk Mgt") THEN
                                                                  IF RiskOpportunityProbability.Percentage <> 0 THEN
                                                                    "Probability % After Risk Mgt" := RiskOpportunityProbability.Percentage;

                                                                UpdateAmounts;  //**4PS.n BI047 KD 24-10-16
                                                              END;

                                                   CaptionML=ENU=Probability After Risk Management }
    { 125 ;   ;Probability % After Risk Mgt;Decimal;
                                                   OnValidate=BEGIN
                                                                IF "Probability % After Risk Mgt" <> xRec."Probability % After Risk Mgt" THEN
                                                                  "Probability After Risk Mgt" := FindProbabilityCodeByPercentage("Probability % After Risk Mgt");

                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Probability % After Risk Management;
                                                   MaxValue=100 }
    { 130 ;   ;Total Opportunity Cost Amt.;Decimal;CaptionML=ENU=Total Opportunity Cost Amount (LCY);
                                                   Editable=No }
    { 140 ;   ;Total Opportunity Sales Amt.;Decimal;
                                                   CaptionML=ENU=Total Opportunity Sales Amount (LCY);
                                                   Editable=No }
    { 150 ;   ;Target Opportunity Cost Amt.;Decimal;
                                                   OnValidate=BEGIN
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Target Opportunity Cost Amount }
    { 160 ;   ;Target Opportunity Sales Amt.;Decimal;
                                                   OnValidate=BEGIN
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Target Opportunity Sales Amount }
    { 170 ;   ;Owner               ;Code20        ;TableRelation=Employee.No.;
                                                   CaptionML=[ENU=Owner;
                                                              NOR=Owner;
                                                              SVE=Owner] }
    { 180 ;   ;Owner Name          ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Employee."Full Name" WHERE (No.=FIELD(Owner)));
                                                   CaptionML=[ENU=Owner Name;
                                                              NOR=Eiers navn;
                                                              SVE=Žgarnamn];
                                                   Editable=No }
    { 190 ;   ;Fallback Plan       ;Text250       ;CaptionML=ENU=Fallback Plan }
    { 200 ;   ;Prev. Total Opp. Cost Amount;Decimal;
                                                   CaptionML=ENU=Previous Total Opportunity Cost Amount;
                                                   Editable=No }
    { 210 ;   ;Prev. Total Opp. Sales Amt.;Decimal;CaptionML=ENU=Previous Total Opportunity Sales Amount;
                                                   Editable=No }
    { 220 ;   ;Prev. Target Opp. Cost Amount;Decimal;
                                                   CaptionML=ENU=Previous Target Opportunity Cost Amount }
    { 230 ;   ;Prev. Target Opp. Sales Amt.;Decimal;
                                                   CaptionML=ENU=Previous Target Opportunity Sales Amount }
    { 240 ;   ;Total Opp. Cost Movement;Decimal   ;CaptionML=ENU=Total Opportunity Cost Movement;
                                                   Editable=No }
    { 250 ;   ;Total Opp. Sales Movement;Decimal  ;CaptionML=ENU=Total Opportunity Sales Movement;
                                                   Editable=No }
    { 260 ;   ;Target Opp. Cost Movement;Decimal  ;OnValidate=BEGIN
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Target Opportunity Cost Movement }
    { 270 ;   ;Target Opp. Sales Movement;Decimal ;OnValidate=BEGIN
                                                                UpdateAmounts;
                                                              END;

                                                   CaptionML=ENU=Target Opportunity Sales Movement }
    { 280 ;   ;Main Project No.    ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Main Project No.;
                                                              NOR=Hovedprosjektnr.;
                                                              SVE=Huvudprojektnr] }
    { 290 ;   ;Total Opportunity Cost;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Line"."Total Opportunity Cost Amt." WHERE (Source=FIELD(Source),
                                                                                                                           Source Code=FIELD(Source Code),
                                                                                                                           Schedule Date=FIELD(Schedule Date)));
                                                   CaptionML=[ENU=Total Opportunity Cost;
                                                              SVE=Total aff„rsm”jlighetskostnad];
                                                   Editable=No }
    { 300 ;   ;Total Opportunity Sales;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Line"."Total Opportunity Sales Amt." WHERE (Source=FIELD(Source),
                                                                                                                            Source Code=FIELD(Source Code),
                                                                                                                            Schedule Date=FIELD(Schedule Date)));
                                                   CaptionML=[ENU=Total Opportunity Sales;
                                                              SVE=Total aff„rsm”jlighet, f”rs„ljning];
                                                   Editable=No }
    { 310 ;   ;Target Opportunity Cost;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Line"."Target Opportunity Cost Amt." WHERE (Source=FIELD(Source),
                                                                                                                            Source Code=FIELD(Source Code),
                                                                                                                            Schedule Date=FIELD(Schedule Date)));
                                                   CaptionML=[ENU=Target Opportunity Cost;
                                                              SVE=Aff„rsm”jlighetskostnad, m†l];
                                                   Editable=No }
    { 320 ;   ;Target Opportunity Sales;Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Line"."Target Opportunity Sales Amt." WHERE (Source=FIELD(Source),
                                                                                                                             Source Code=FIELD(Source Code),
                                                                                                                             Schedule Date=FIELD(Schedule Date)));
                                                   CaptionML=[ENU=Target Opportunity Sales;
                                                              SVE=Aff„rsm”jlighet f”rs„ljningsm†l];
                                                   Editable=No }
    { 330 ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                //**4PS.sn BI047 KD 14-07-16
                                                                "Predicted Cost Amount (FCY)" := CalculateAmount("Predicted Cost Amount",TRUE);
                                                                "Predicted Sales Amount (FCY)" := CalculateAmount("Predicted Sales Amount",TRUE);
                                                                "Anticipated Cost Amount (FCY)" := CalculateAmount("Anticipated Cost Amount",TRUE);
                                                                "Anticipated Sales Amount (FCY)" := CalculateAmount("Anticipated Sales Amount",TRUE);
                                                                UpdateAmounts;
                                                                //**4PS.en BI047 KD 14-07-16
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod];
                                                   Description=BI047 }
    { 340 ;   ;Predicted Cost Amount (FCY);Decimal;OnValidate=BEGIN
                                                                //**4PS.sn BI047 KD 14-07-16
                                                                "Predicted Cost Amount" := CalculateAmount("Predicted Cost Amount (FCY)",FALSE);
                                                                UpdateAmounts;
                                                                //**4PS.en BI047 KD 14-07-16
                                                              END;

                                                   CaptionML=ENU=Predicted Cost Amount;
                                                   Description=BI047;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 350 ;   ;Predicted Sales Amount (FCY);Decimal;
                                                   OnValidate=BEGIN
                                                                //**4PS.sn BI047 KD 14-07-16
                                                                "Predicted Sales Amount" := CalculateAmount("Predicted Sales Amount (FCY)",FALSE);
                                                                UpdateAmounts;
                                                                //**4PS.en BI047 KD 14-07-16
                                                              END;

                                                   CaptionML=ENU=Predicted Sales Amount;
                                                   Description=BI047;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 360 ;   ;Anticipated Cost Amount (FCY);Decimal;
                                                   OnValidate=BEGIN
                                                                "Anticipated Cost Amount" := CalculateAmount("Anticipated Cost Amount (FCY)",FALSE); //**4PS.n BI047 KD 14-07-16
                                                              END;

                                                   CaptionML=ENU=Anticipated Cost Amount;
                                                   Description=BI047;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 370 ;   ;Anticipated Sales Amount (FCY);Decimal;
                                                   OnValidate=BEGIN
                                                                "Anticipated Sales Amount" := CalculateAmount("Anticipated Sales Amount (FCY)",FALSE); //**4PS.n BI047 KD 14-07-16
                                                              END;

                                                   CaptionML=ENU=Anticipated Sales Amount;
                                                   Description=BI047;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 380 ;   ;Total Opport. Cost Amt. (FCY);Decimal;
                                                   CaptionML=ENU=Total Opportunity Cost Amount;
                                                   Description=BI047;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 390 ;   ;Total Opport. Sales Amt. (FCY);Decimal;
                                                   CaptionML=ENU=Total Opportunity Sales Amount;
                                                   Description=BI047;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 400 ;   ;Original Source     ;Option        ;CaptionML=ENU=Original Source;
                                                   OptionCaptionML=ENU=Project,Try-Out,Service Contract;
                                                   OptionString=Project,Try-Out,Service Contract;
                                                   Editable=No }
    { 410 ;   ;Original Source Code;Code20        ;TableRelation=IF (Original Source=CONST(Project)) Job.No.
                                                                 ELSE IF (Original Source=CONST(Try-Out)) Try-out.Code
                                                                 ELSE IF (Original Source=CONST(Service Contract)) Service-Contract.No.;
                                                   CaptionML=ENU=Original Source Code;
                                                   Editable=No }
    { 420 ;   ;Status              ;Code10        ;TableRelation="Risk Opportunity Status";
                                                   CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status] }
    { 430 ;   ;Created on          ;DateTime      ;CaptionML=[ENU=Created on;
                                                              NOR=Opprettet den;
                                                              SVE=Skapades];
                                                   Editable=No }
    { 440 ;   ;Created by          ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserCode@1100529700 : Code[50];
                                                              UserMgt@1210190000 : Codeunit 418;
                                                            BEGIN
                                                              UserCode := "Created by";
                                                              UserMgt.LookupUserID(UserCode);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Created by;
                                                              NOR=Opprettet av;
                                                              SVE=Skapades av];
                                                   Editable=No }
    { 450 ;   ;Last Date Modified  ;DateTime      ;CaptionML=[ENU=Last Date Modified;
                                                              NOR=Oppdateringsdato;
                                                              SVE=Uppdateringsdatum];
                                                   Editable=No }
    { 460 ;   ;Modified by         ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserCode@1100529700 : Code[50];
                                                              UserMgt@1210190000 : Codeunit 418;
                                                            BEGIN
                                                              UserCode := "Modified by";
                                                              UserMgt.LookupUserID(UserCode);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Modified by;
                                                              NOR=Endret av;
                                                              SVE=Žndrad av];
                                                   Editable=No }
    { 470 ;   ;Created Budget Adjustments;Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count("Budget Adjustment" WHERE (Created from Source Type=CONST(Opportunity Line),
                                                                                                Project No.=FIELD(Source Code),
                                                                                                Created from Schedule Date=FIELD(Schedule Date),
                                                                                                Created from Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Created Budget Adjustment;
                                                              NOR=Opprettet Budsjettjustering;
                                                              SVE=Skapad budgetjustering];
                                                   Editable=No }
    { 480 ;   ;Created Extension Contract;Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count("Extension Contract" WHERE (Created from Source Type=CONST(Opportunity Line),
                                                                                                 Project No.=FIELD(Source Code),
                                                                                                 Created from Schedule Date=FIELD(Schedule Date),
                                                                                                 Created from Line No.=FIELD(Line No.)));
                                                   CaptionML=ENU=Created Extension Contract;
                                                   Editable=No }
    { 490 ;   ;Cause               ;Code20        ;CaptionML=[ENU=Cause;
                                                              SVE=Orsak] }
    { 500 ;   ;Consequence         ;Text50        ;CaptionML=ENU=Consequence }
    { 510 ;   ;Deadline            ;Date          ;CaptionML=ENU=Deadline }
    { 520 ;   ;Preventive or Corrective;Option    ;CaptionML=ENU=Preventive or Corrective;
                                                   OptionCaptionML=ENU=Preventive,Corrective;
                                                   OptionString=Preventive,Corrective }
    { 530 ;   ;Best Case Risk Cost ;Decimal       ;CaptionML=ENU=Best Case Risk Cost }
    { 540 ;   ;Worst Case Risk Cost;Decimal       ;CaptionML=ENU=Worst Case Risk Cost }
    { 550 ;   ;Total Anticipated Cost;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Line"."Anticipated Cost Amount" WHERE (Source=FIELD(Source),
                                                                                                                       Source Code=FIELD(Source Code),
                                                                                                                       Schedule Date=FIELD(Schedule Date)));
                                                   CaptionML=ENU=Total Anticipated Cost;
                                                   Editable=No }
    { 560 ;   ;Total Anticipated Sales;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Line"."Anticipated Sales Amount" WHERE (Source=FIELD(Source),
                                                                                                                        Source Code=FIELD(Source Code),
                                                                                                                        Schedule Date=FIELD(Schedule Date)));
                                                   CaptionML=ENU=Total Anticipated Sales;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Source,Source Code,Schedule Date,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      RiskOpportunitySchedule@1100528800 : Record 11229900;
      Text000@1100528802 : TextConst 'ENU=You cannot rename a %1.;NOR=Du kan ikke gi nytt navn til en %1.;SVE=Du kan inte byta namn p† %1.;ENG=You cannot rename a %1.';
      Text001@1100528801 : TextConst 'ENU=You cannot delete a %1 when the previous values are not 0.;ENG=You cannot delete a %1 when the previous values are not 0.';
      Currency@1100525000 : Record 4;
      FPSLicenseManagement@1100528500 : Codeunit 11229289;

    PROCEDURE GetRisksOpportunitiesSchedule@10504003();
    BEGIN
      IF (RiskOpportunitySchedule.Source <> Source) OR (RiskOpportunitySchedule."Source Code" <> "Source Code") OR
        (RiskOpportunitySchedule.Date <> "Schedule Date")
      THEN
        RiskOpportunitySchedule.GET(Source, "Source Code","Schedule Date");
    END;

    PROCEDURE SetRisksOpportunitiesSchedule@10504002(NewRiskOpportunitySchedule@10504001 : Record 11229900);
    BEGIN
      RiskOpportunitySchedule := NewRiskOpportunitySchedule;
    END;

    PROCEDURE UpdateAmounts@10504000();
    BEGIN
      //**4PS.so BI047 KD 22-07-16
      // Use "Probability % After Risk Mgt" instead of "Probability %" to calculate Total amounts
      // "Total Opportunity Cost Amt." := ROUND("Predicted Cost Amount" * "Probability %"/100);
      // "Total Opportunity Sales Amt." := ROUND("Predicted Sales Amount" * "Probability %"/100);
      //**4PS.eo BI047 KD 22-07-16

      //**4PS.sn BI047 KD 22-07-16
      "Anticipated Cost Amount" := ROUND("Predicted Cost Amount" * "Probability %"/100);
      "Anticipated Sales Amount" := ROUND("Predicted Sales Amount" * "Probability %"/100);

      "Total Opportunity Cost Amt." := ROUND("Predicted Cost Amount" * "Probability % After Risk Mgt"/100);
      "Total Opportunity Sales Amt." := ROUND("Predicted Sales Amount" * "Probability % After Risk Mgt"/100);

      InitCurrency;

      "Anticipated Cost Amount (FCY)" := ROUND("Predicted Cost Amount (FCY)" * "Probability %"/100, Currency."Amount Rounding Precision");
      "Anticipated Sales Amount (FCY)" := ROUND("Predicted Sales Amount (FCY)" * "Probability %"/100, Currency."Amount Rounding Precision");

      "Total Opport. Cost Amt. (FCY)" := ROUND("Predicted Cost Amount (FCY)" * "Probability % After Risk Mgt"/100, Currency."Amount Rounding Precision");
      "Total Opport. Sales Amt. (FCY)" := ROUND("Predicted Sales Amount (FCY)" * "Probability % After Risk Mgt"/100, Currency."Amount Rounding Precision");
      //**4PS.en BI047 KD 22-07-16

      "Total Opp. Cost Movement" := "Total Opportunity Cost Amt." - "Prev. Total Opp. Cost Amount";
      "Total Opp. Sales Movement" := "Total Opportunity Sales Amt." - "Prev. Total Opp. Sales Amt.";
      "Target Opp. Cost Movement" := "Target Opportunity Cost Amt." - "Prev. Target Opp. Cost Amount";
      "Target Opp. Sales Movement" := "Target Opportunity Sales Amt." - "Prev. Target Opp. Sales Amt.";
    END;

    PROCEDURE CreateNewFromBaseOpportunity@1100528800(BaseRiskOpportunity@1100528804 : Record 11229899;ISource@1100528803 : 'Project,Try-Out,Service Contract';ISourceCode@1100528802 : Code[20];IScheduleDate@1100528801 : Date);
    BEGIN
      INIT;
      Source := ISource;
      "Source Code" := ISourceCode;
      "Schedule Date" := IScheduleDate;
      "Line No." := 0;
      "Base Risk Code" := BaseRiskOpportunity.Code;
      Description := BaseRiskOpportunity.Description;
      VALIDATE(Impact, DetermineImpactCode(BaseRiskOpportunity.Impact));
      VALIDATE("Probability Code", DetermineProbabilityCode(BaseRiskOpportunity."Probability Code"));
      INSERT(TRUE);
    END;

    PROCEDURE GetNewLineNo@1100528801() NewLineNo : Integer;
    VAR
      OpportunityLine@1100528800 : Record 11229904;
    BEGIN
      OpportunityLine.SETRANGE(Source, Source);
      OpportunityLine.SETRANGE("Source Code", "Source Code");
      OpportunityLine.SETRANGE("Schedule Date", "Schedule Date");

      IF OpportunityLine.FINDLAST THEN
        NewLineNo := OpportunityLine."Line No.";
      NewLineNo += 10000;

      EXIT(NewLineNo);
    END;

    PROCEDURE DetermineImpactCode@1100528807(IImpact@1100528800 : Code[20]) : Code[20];
    BEGIN
      IF IImpact = '' THEN
        EXIT(GetDefaultImpact)
      ELSE
        EXIT(IImpact);
    END;

    LOCAL PROCEDURE GetDefaultImpact@1100528803() : Code[20];
    VAR
      RiskOpportunityImpact@1100528800 : Record 11229901;
    BEGIN
      RiskOpportunityImpact.SETRANGE(Default, TRUE);
      IF RiskOpportunityImpact.FINDFIRST THEN
        EXIT(RiskOpportunityImpact.Code);
    END;

    PROCEDURE FindProbabilityCodeByPercentage@1100528804(IProbabilityPercentage@1100528800 : Decimal) : Code[20];
    VAR
      RiskOpportunityProbability@1100528801 : Record 11229902;
    BEGIN
      RiskOpportunityProbability.SETRANGE(Percentage, IProbabilityPercentage);
      IF RiskOpportunityProbability.FINDFIRST THEN
        EXIT(RiskOpportunityProbability.Code)
      ELSE
        EXIT;
    END;

    PROCEDURE DetermineProbabilityCode@1100528805(IProbability@1100528800 : Code[20]) : Code[20];
    BEGIN
      IF IProbability = '' THEN
        EXIT(GetDefaultProbability)
      ELSE
        EXIT(IProbability);
    END;

    LOCAL PROCEDURE GetDefaultProbability@1100528806() : Code[20];
    VAR
      RiskOpportunityProbability@1100528800 : Record 11229902;
    BEGIN
      RiskOpportunityProbability.SETRANGE(Default, TRUE);
      IF RiskOpportunityProbability.FINDFIRST THEN
        EXIT(RiskOpportunityProbability.Code);
    END;

    PROCEDURE DeleteCommentLine@1100529800();
    VAR
      CommentLine@1100529800 : Record 11020634;
      RecRef@1100529801 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);

      CommentLine.RESET;
      CommentLine.SETRANGE("Table Name", CommentLine."Table Name"::"Opportunity Line");
      CommentLine.SETFILTER("Record ID", FORMAT(RecRef.RECORDID()));
      CommentLine.DELETEALL(TRUE);
    END;

    PROCEDURE CommentLineExist@1210190011() : Boolean;
    VAR
      RecRef@1210190000 : RecordRef;
      CommentLine@1210190001 : Record 11020634;
    BEGIN
      RecRef.GETTABLE(Rec);
      CommentLine.SETRANGE("Table Name", CommentLine."Table Name"::"Opportunity Line");
      CommentLine.SETFILTER("Record ID", FORMAT(RecRef.RECORDID()));
      IF NOT CommentLine.ISEMPTY THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE DocumentsExist@1100528802() : Boolean;
    VAR
      RecRef@1210190000 : RecordRef;
      DocumentLink@1210190001 : Record 11012747;
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN
        EXIT;

      RecRef.GETTABLE(Rec);

      DocumentLink.SETCURRENTKEY("Record ID");
      DocumentLink.SETFILTER("Record ID", STRSUBSTNO('''%1''', RecRef.RECORDID));
      DocumentLink.SETRANGE("Internal Company", COMPANYNAME);

      IF NOT DocumentLink.ISEMPTY THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    LOCAL PROCEDURE DeleteDocumentLinks@1100528400();
    VAR
      DocumentLink@1100528402 : Record 11012747;
      DocumentLinkMgt@1100528400 : Codeunit 11012401;
      RecRef@1100528401 : RecordRef;
    BEGIN
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DocumentLink) THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DocumentLinkMgt.DeleteDocumentLinksFromObject(RecRef);
    END;

    LOCAL PROCEDURE InitCurrency@1100525004();
    BEGIN
      //**4PS.sn BI047 KD 14-07-16
      IF "Currency Code" = Currency.Code THEN
        EXIT;

      Currency.Initialize("Currency Code");
      Currency.TESTFIELD("Amount Rounding Precision");
      //**4PS.en BI047 KD 14-07-16
    END;

    LOCAL PROCEDURE CalculateAmount@1100525000(Amount@1100525002 : Decimal;CalcFCY@1100525000 : Boolean) : Decimal;
    VAR
      LCYCurrency@1100525001 : Record 4;
      ProjectCurrExchangeRate@1100525003 : Record 11020628;
      CurrencyExchangeRate@1100525004 : Record 330;
      ProjectNoLoc@1100525005 : Code[20];
    BEGIN
      //**4PS.sn BI047 KD 14-07-16
      IF Amount = 0 THEN
          EXIT(0);

      ProjectNoLoc := GetProjectNo;

      IF CalcFCY THEN BEGIN
        IF ProjectNoLoc <> '' THEN
          IF ProjectCurrExchangeRate.FindCurrency(ProjectNoLoc,"Schedule Date","Currency Code",CurrencyExchangeRate) THEN
            EXIT(ProjectCurrExchangeRate.ExchangeAmtLCYToFCY(Amount,TRUE,FALSE,"Currency Code",ProjectNoLoc,'',"Schedule Date"));

        InitCurrency;

        EXIT(
          ROUND(
            CurrencyExchangeRate.ExchangeAmtLCYToFCY(
              1,ProjectNoLoc,"Schedule Date","Currency Code",Amount,
              CurrencyExchangeRate.ExchangeRate(1,ProjectNoLoc,"Schedule Date","Currency Code",TRUE),TRUE),
            Currency."Amount Rounding Precision"));
      END;

      IF ProjectNoLoc <> '' THEN
        IF ProjectCurrExchangeRate.FindCurrency(ProjectNoLoc,"Schedule Date","Currency Code",CurrencyExchangeRate) THEN
          EXIT(ProjectCurrExchangeRate.ExchangeAmtFCYToLCY(Amount,TRUE,FALSE,"Currency Code",ProjectNoLoc,'',"Schedule Date"));

      LCYCurrency.InitRoundingPrecision;

      EXIT(
        ROUND(
          CurrencyExchangeRate.ExchangeAmtFCYToLCY(
            1,ProjectNoLoc,"Schedule Date","Currency Code",Amount,
            CurrencyExchangeRate.ExchangeRate(1,ProjectNoLoc,"Schedule Date","Currency Code",TRUE),TRUE),
          LCYCurrency."Amount Rounding Precision"));
      //**4PS.en BI047 KD 14-07-16
    END;

    LOCAL PROCEDURE GetProjectNo@1100525003() : Code[20];
    BEGIN
      //**4PS.sn BI047 KD 14-07-16
      IF Source = Source::Project THEN
        IF "Source Code" <> '' THEN
          EXIT("Source Code");

      EXIT("Main Project No.");
      //**4PS.en BI047 KD 14-07-16
    END;

    BEGIN
    {
      4PS 14-07-16 UKR-C25096 KD: Multi Currency in Risks and opportunities (BI047) - Fields "Currency Code", "Predicted Cost Amount (FCY)", "Predicted Sales Amount (FCY)", "Anticipated Cost Amount (FCY)", "Anticipated Sales Amount (FCY)", "Total Opport.
                                                                                      Fields "Predicted Cost Amount", "Predicted Sales Amount", "Anticipated Cost Amount", "Anticipated Sales Amount" cahnged - (LCY) added to captions
                                                                                      Triggers InitCurrency, CalculateAmount, GetProjectNo added
                                                                                      Triggers "Impact - OnValidate", "Predicted Cost Amount - OnValidate", "Predicted Sales Amount - OnValidate", "Anticipated Cost Amount - OnValidate", "Anticipated Sales
    }
    END.
  }
}

