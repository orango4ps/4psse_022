OBJECT Page 6013 Resource Capacity Settings
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Resource Capacity Settings;
               NOR=Innstillinger for ressurskapasitet;
               SVE=Resurskapacitetss„ttning];
    SourceTable=Table156;
    PageType=Card;
    OnOpenPage=BEGIN
                 StartDate := 0D;
                 EndDate := 0D;
                 WorkTemplateCode := '';
               END;

    OnAfterGetRecord=BEGIN
                       IF NOT WorkTemplateRec.GET(WorkTemplateCode) AND ("No." <> xRec."No.") THEN
                         CLEAR(WorkTemplateRec);
                       SumWeekTotal;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 50      ;1   ;Action    ;
                      Name=UpdateCapacity;
                      CaptionML=[ENU=Update &Capacity;
                                 NOR=Oppdater &kapasitet;
                                 SVE=Uppdatera &kapacitet];
                      ToolTipML=[ENU=Update the capacity based on the changes you have made in the window.;
                                 NOR=Oppdater kapasiteten basert p† endringene du har gjort i vinduet.;
                                 SVE=Uppdatera kapacitet utifr†n „ndringarna som du gjort i f”nstret.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 NewCapacity@1000 : Decimal;
                               BEGIN
                                 IF StartDate = 0D THEN
                                   ERROR(Text002);

                                 IF EndDate = 0D THEN
                                   ERROR(Text003);

                                 IF NOT CONFIRM(Text004,FALSE,TABLECAPTION,"No.") THEN
                                   EXIT;

                                 IF CompanyInformation.GET THEN
                                   IF CompanyInformation."Base Calendar Code" <> '' THEN
                                     CalendarCustomized :=
                                       CalendarMgmt.CustomizedChangesExist(CalChange."Source Type"::Company,'','',CompanyInformation."Base Calendar Code");

                                 ResCapacityEntry.RESET;
                                 ResCapacityEntry.SETCURRENTKEY("Resource No.",Date);
                                 ResCapacityEntry.SETRANGE("Resource No.","No.");
                                 TempDate := StartDate;
                                 ChangedDays := 0;
                                 REPEAT
                                   IF CalendarCustomized THEN
                                     Holiday :=
                                       CalendarMgmt.CheckCustomizedDateStatus(
                                         CalChange."Source Type"::Company,'','',CompanyInformation."Base Calendar Code",TempDate,NewDescription)
                                   ELSE
                                     Holiday := CalendarMgmt.CheckDateStatus(CompanyInformation."Base Calendar Code",TempDate,NewDescription);

                                   ResCapacityEntry.SETRANGE(Date,TempDate);
                                   ResCapacityEntry.CALCSUMS(Capacity);
                                   TempCapacity := ResCapacityEntry.Capacity;

                                   IF Holiday THEN
                                     IF TempCapacity = 0 THEN
                                       NewCapacity := 0
                                     ELSE BEGIN
                                       // post reverse capacity entry to have zero balance
                                       NewCapacity := SelectCapacity;
                                       IF NewCapacity > TempCapacity THEN
                                         NewCapacity := TempCapacity;
                                     END
                                   ELSE
                                     NewCapacity := TempCapacity - SelectCapacity;

                                   IF NewCapacity <> 0 THEN BEGIN
                                     ResCapacityEntry2.RESET;
                                     IF ResCapacityEntry2.FINDLAST THEN;
                                     LastEntry := ResCapacityEntry2."Entry No." + 1;
                                     ResCapacityEntry2.RESET;
                                     ResCapacityEntry2."Entry No." := LastEntry;
                                     ResCapacityEntry2.Capacity := -NewCapacity;
                                     ResCapacityEntry2."Resource No." := "No.";
                                     ResCapacityEntry2."Resource Group No." := "Resource Group No.";
                                     ResCapacityEntry2.Date := TempDate;
                                     IF ResCapacityEntry2.INSERT(TRUE) THEN;
                                     ChangedDays := ChangedDays + 1;
                                   END;
                                   TempDate := TempDate + 1;
                                 UNTIL TempDate > EndDate;
                                 COMMIT;
                                 IF ChangedDays > 1 THEN
                                   MESSAGE(Text006,ChangedDays)
                                 ELSE
                                   IF ChangedDays = 1 THEN
                                     MESSAGE(Text007,ChangedDays)
                                   ELSE
                                     MESSAGE(Text008);
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=Allm„nt] }

    { 41  ;2   ;Field     ;
                CaptionML=[ENU=Starting Date;
                           NOR=Startdato;
                           SVE=Startdatum];
                ToolTipML=[ENU=Specifies the starting date for the time period for which you want to change capacity.;
                           NOR=Angir startdatoen for tidsperioden du vil endre kapasitet for.;
                           SVE=Anger startdatumet f”r den tidsperiod som du vill „ndra kapacitet f”r.];
                ApplicationArea=#Jobs;
                SourceExpr=StartDate }

    { 45  ;2   ;Field     ;
                CaptionML=[ENU=Ending Date;
                           NOR=Sluttdato;
                           SVE=Slutdatum];
                ToolTipML=[ENU=Specifies the end date relating to the resource capacity.;
                           NOR=Angir sluttdatoen som er knyttet til ressurskapasiteten.;
                           SVE=Anger slutdatumet som avser resurskapaciteten.];
                ApplicationArea=#Jobs;
                SourceExpr=EndDate;
                OnValidate=BEGIN
                             IF StartDate > EndDate THEN
                               ERROR(Text000);
                           END;
                            }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=Work-Hour Template;
                           NOR=Arbeidstidsmal;
                           SVE=Arbetstidsmall];
                ToolTipML=[ENU=Specifies the number of hours in the work week: 30, 36, or 40.;
                           NOR=Angir antall arbeidstimer i arbeidsuken: 30, 36 eller 40.;
                           SVE=Anger antalet arbetstimmar under arbetsveckan: 30, 36 eller 40.];
                ApplicationArea=#Jobs;
                SourceExpr=WorkTemplateCode;
                TableRelation="Work-Hour Template";
                LookupPageID=Work-Hour Templates;
                OnValidate=BEGIN
                             WorkTemplateCodeOnAfterValidat;
                           END;
                            }

    { 23  ;2   ;Field     ;
                CaptionML=[ENU=Monday;
                           NOR=Mandag;
                           SVE=M†ndag];
                ToolTipML=[ENU=Specifies the number of work-hours on Monday.;
                           NOR=Angir antall arbeidstimer p† mandag.;
                           SVE=Anger antalet arbetstimmar p† m†ndagar.];
                ApplicationArea=#Jobs;
                SourceExpr=WorkTemplateRec.Monday;
                MinValue=0;
                MaxValue=24;
                OnValidate=BEGIN
                             WorkTemplateRecMondayOnAfterVa;
                           END;
                            }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Tuesday;
                           NOR=Tirsdag;
                           SVE=Tisdag];
                ToolTipML=[ENU=Specifies the number of work-hours on Tuesday.;
                           NOR=Angir antall arbeidstimer p† tirsdag.;
                           SVE=Anger antalet arbetstimmar p† tisdagar.];
                ApplicationArea=#Jobs;
                SourceExpr=WorkTemplateRec.Tuesday;
                MinValue=0;
                MaxValue=24;
                OnValidate=BEGIN
                             WorkTemplateRecTuesdayOnAfterV;
                           END;
                            }

    { 29  ;2   ;Field     ;
                CaptionML=[ENU=Wednesday;
                           NOR=Onsdag;
                           SVE=Onsdag];
                ToolTipML=[ENU=Specifies the number of work-hours on Wednesday.;
                           NOR=Angir antall arbeidstimer p† onsdag.;
                           SVE=Anger antalet arbetstimmar p† onsdagar.];
                ApplicationArea=#Jobs;
                SourceExpr=WorkTemplateRec.Wednesday;
                MinValue=0;
                MaxValue=24;
                OnValidate=BEGIN
                             WorkTemplateRecWednesdayOnAfte;
                           END;
                            }

    { 31  ;2   ;Field     ;
                CaptionML=[ENU=Thursday;
                           NOR=Torsdag;
                           SVE=Torsdag];
                ToolTipML=[ENU=Specifies the number of work-hours on Thursday.;
                           NOR=Angir antall arbeidstimer p† torsdag.;
                           SVE=Anger antalet arbetstimmar p† torsdagar.];
                ApplicationArea=#Jobs;
                SourceExpr=WorkTemplateRec.Thursday;
                MinValue=0;
                MaxValue=24;
                OnValidate=BEGIN
                             WorkTemplateRecThursdayOnAfter;
                           END;
                            }

    { 33  ;2   ;Field     ;
                CaptionML=[ENU=Friday;
                           NOR=Fredag;
                           SVE=Fredag];
                ToolTipML=[ENU=Specifies the work-hour schedule for Friday.;
                           NOR=Angir arbeidstidsmalen for fredag.;
                           SVE=Anger arbetstidsschemat f”r fredag.];
                ApplicationArea=#Jobs;
                SourceExpr=WorkTemplateRec.Friday;
                MinValue=0;
                MaxValue=24;
                OnValidate=BEGIN
                             WorkTemplateRecFridayOnAfterVa;
                           END;
                            }

    { 35  ;2   ;Field     ;
                CaptionML=[ENU=Saturday;
                           NOR=L›rdag;
                           SVE=L”rdag];
                ToolTipML=[ENU=Specifies the number of work-hours on Friday.;
                           NOR=Angir antall arbeidstimer p† fredag.;
                           SVE=Anger antalet arbetstimmar p† fredagar.];
                ApplicationArea=#Jobs;
                SourceExpr=WorkTemplateRec.Saturday;
                MinValue=0;
                MaxValue=24;
                OnValidate=BEGIN
                             WorkTemplateRecSaturdayOnAfter;
                           END;
                            }

    { 37  ;2   ;Field     ;
                CaptionML=[ENU=Sunday;
                           NOR=S›ndag;
                           SVE=S”ndag];
                ToolTipML=[ENU=Specifies the number of work-hours on Saturday.;
                           NOR=Angir antall arbeidstimer p† l›rdag.;
                           SVE=Anger antalet arbetstimmar p† l”rdagar.];
                ApplicationArea=#Jobs;
                SourceExpr=WorkTemplateRec.Sunday;
                MinValue=0;
                MaxValue=24;
                OnValidate=BEGIN
                             WorkTemplateRecSundayOnAfterVa;
                           END;
                            }

    { 39  ;2   ;Field     ;
                CaptionML=[ENU=Week Total;
                           NOR=Uketotal;
                           SVE=Veckototal];
                ToolTipML=[ENU=Specifies the total number of hours for the week. The total is calculated automatically.;
                           NOR=Angir det totale antallet arbeidstimer for uken. De totale antallet beregnes automatisk.;
                           SVE=Anger det totala antalet arbetstimmar f”r veckan. Summan ber„knas automatiskt.];
                ApplicationArea=#Jobs;
                DecimalPlaces=0:5;
                SourceExpr=WeekTotal;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                ApplicationArea=#RecordLinks;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                ApplicationArea=#Notes;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The starting date is later than the ending date.;NOR=Startdatoen er senere enn sluttdatoen.;SVE=Startdatum „r senare „n slutdatum.';
      Text002@1002 : TextConst 'ENU=You must fill in the Starting Date field.;NOR=Du m† fylle ut feltet Startdato.;SVE=Du m†ste fylla i f„ltet startdatum.';
      Text003@1003 : TextConst 'ENU=You must fill in the Ending Date field.;NOR=Du m† fylle ut feltet Sluttdato.;SVE=Du m†ste fylla i f„ltet slutdatum.';
      Text004@1004 : TextConst '@@@=Do you want to change the capacity for NO No.?;ENU=Do you want to change the capacity for %1 %2?;NOR=Vil du endre kapasiteten for %1 %2?;SVE=Vill du „ndra kapaciteten f”r %1 %2?';
      Text006@1006 : TextConst 'ENU=The capacity for %1 days was changed successfully.;NOR=Kapasiteten for %1 dager ble endret.;SVE=Det gick bra att „ndra kapacitet f”r %1 dagar.';
      Text007@1007 : TextConst 'ENU=The capacity for %1 day was changed successfully.;NOR=Kapasiteten for %1 dag ble endret.;SVE=Det gick bra att „ndra kapaciteten f”r %1 dag.';
      Text008@1008 : TextConst 'ENU=The capacity change was unsuccessful.;NOR=Kapatitetsendringen ble ikke gjennomf›rt.;SVE=Žndring av kapacitet lyckades inte.';
      CalChange@1023 : Record 11072016;
      WorkTemplateRec@1009 : Record 5954;
      ResCapacityEntry@1010 : Record 160;
      CompanyInformation@1102601000 : Record 79;
      ResCapacityEntry2@1011 : Record 160;
      CalendarMgmt@1022 : Codeunit 7600;
      WorkTemplateCode@1013 : Code[10];
      StartDate@1014 : Date;
      EndDate@1015 : Date;
      WeekTotal@1016 : Decimal;
      TempDate@1017 : Date;
      TempCapacity@1018 : Decimal;
      ChangedDays@1019 : Integer;
      LastEntry@1020 : Decimal;
      CalendarCustomized@1012 : Boolean;
      Holiday@1024 : Boolean;
      NewDescription@1025 : Text[50];

    LOCAL PROCEDURE SelectCapacity@1() Hours@1000 : Decimal;
    BEGIN
      CASE DATE2DWY(TempDate,1) OF
        1:
          Hours := WorkTemplateRec.Monday;
        2:
          Hours := WorkTemplateRec.Tuesday;
        3:
          Hours := WorkTemplateRec.Wednesday;
        4:
          Hours := WorkTemplateRec.Thursday;
        5:
          Hours := WorkTemplateRec.Friday;
        6:
          Hours := WorkTemplateRec.Saturday;
        7:
          Hours := WorkTemplateRec.Sunday;
      END;
    END;

    LOCAL PROCEDURE SumWeekTotal@2();
    BEGIN
      WeekTotal := WorkTemplateRec.Monday + WorkTemplateRec.Tuesday + WorkTemplateRec.Wednesday +
        WorkTemplateRec.Thursday + WorkTemplateRec.Friday + WorkTemplateRec.Saturday + WorkTemplateRec.Sunday;
    END;

    LOCAL PROCEDURE WorkTemplateCodeOnAfterValidat@19020447();
    BEGIN
      IF WorkTemplateRec.GET(WorkTemplateCode) THEN;
      SumWeekTotal;
    END;

    LOCAL PROCEDURE WorkTemplateRecMondayOnAfterVa@19038558();
    BEGIN
      SumWeekTotal;
    END;

    LOCAL PROCEDURE WorkTemplateRecTuesdayOnAfterV@19038753();
    BEGIN
      SumWeekTotal;
    END;

    LOCAL PROCEDURE WorkTemplateRecWednesdayOnAfte@19032807();
    BEGIN
      SumWeekTotal;
    END;

    LOCAL PROCEDURE WorkTemplateRecThursdayOnAfter@19058780();
    BEGIN
      SumWeekTotal;
    END;

    LOCAL PROCEDURE WorkTemplateRecFridayOnAfterVa@19036770();
    BEGIN
      SumWeekTotal;
    END;

    LOCAL PROCEDURE WorkTemplateRecSaturdayOnAfter@19074542();
    BEGIN
      SumWeekTotal;
    END;

    LOCAL PROCEDURE WorkTemplateRecSundayOnAfterVa@19029469();
    BEGIN
      SumWeekTotal;
    END;

    BEGIN
    END.
  }
}

