OBJECT Codeunit 6086333 Expense-Check
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.3.00.02;
  }
  PROPERTIES
  {
    TableNo=6086320;
    OnRun=VAR
            GLAccount@1160040003 : Record 15;
            Item@1160040004 : Record 27;
            ContiniaUserSetup@1160040002 : Record 6086002;
            EMSetup@1160040005 : Record 6086300;
            ExpenseAllocation@1160040000 : Record 6086321;
            UseExpenseAllocation@1160040001 : Boolean;
          BEGIN
            TESTFIELD(Posted,FALSE);
            TESTFIELD("Continia User ID");
            TESTFIELD("Document Date");
            IF "Job No." = '' THEN
              TESTFIELD("Expense Type");

            EMSetup.GET;
            IF EMSetup."Expense Posting" = EMSetup."Expense Posting"::"Use General Journal" THEN
              EMSetup.TESTFIELD("Expense Posted Nos.");

            IF NOT Rec."No Refund" THEN BEGIN
              TESTFIELD("Expense Account");

              CASE "Expense Account Type" OF
                "Expense Account Type"::"G/L Account":
                  BEGIN
                    GLAccount.GET("Expense Account");
                    IF (GLAccount."Gen. Bus. Posting Group" <> '') OR (GLAccount."Gen. Prod. Posting Group" <> '') OR
                       (GLAccount."VAT Bus. Posting Group" <> '') OR (GLAccount."VAT Prod. Posting Group" <> '')
                    THEN
                      GLAccount.TESTFIELD("Gen. Posting Type");
                    IF "Job No." <> '' THEN
                      GLAccount.TESTFIELD("Direct Posting",TRUE);
                  END;

                "Expense Account Type"::Item:
                  BEGIN
                    Item.GET("Expense Account");
                    IF EMSetup."Expense Posting" <> EMSetup."Expense Posting"::"Always Purchase Invoice" THEN
                      ERROR(ItemRequiresPurchInv);
                  END;
              END;
            END;

            IF "Matched to Bank Transaction" THEN BEGIN
              IF CalcMatchedAmount <> Amount THEN
                ERROR(WrongMatchAmtErr,Amount,CalcMatchedAmount,"Entry No.");
            END ELSE
              TESTFIELD("Cash/Private Card",TRUE);

            IF NOT "Cash/Private Card" THEN
              TESTFIELD("Matched to Bank Transaction",TRUE);

            ContiniaUserSetup.GET("Continia User ID");
            IF "No Refund" THEN
              ContiniaUserSetup.TESTFIELD("Vendor No.");
            TESTFIELD(Status,Status::Released);

            ExpenseAllocation.SETCURRENTKEY("Expense Entry No.");
            ExpenseAllocation.SETRANGE("Expense Entry No.","Entry No.");
            IF ExpenseAllocation.FINDFIRST THEN BEGIN
              CALCFIELDS("Allocated Amount (LCY)");
              IF "Allocated Amount (LCY)" <> "Amount (LCY)" THEN
                ERROR(WrongAllocAmtErr,FIELDCAPTION("Amount (LCY)"),TABLECAPTION,"Entry No.");
              UseExpenseAllocation := TRUE;
              REPEAT
                IF "Job No." = '' THEN
                  ExpenseAllocation.TESTFIELD("Expense Type");

                IF NOT ExpenseAllocation."No Refund" THEN BEGIN
                  ExpenseAllocation.TESTFIELD("Expense Account");

                  CASE ExpenseAllocation."Expense Account Type" OF
                    ExpenseAllocation."Expense Account Type"::"G/L Account":
                      BEGIN
                        GLAccount.GET(ExpenseAllocation."Expense Account");
                        IF (GLAccount."Gen. Bus. Posting Group" <> '') OR (GLAccount."Gen. Prod. Posting Group" <> '') OR
                           (GLAccount."VAT Bus. Posting Group" <> '') OR (GLAccount."VAT Prod. Posting Group" <> '')
                        THEN
                          GLAccount.TESTFIELD("Gen. Posting Type");
                        GLAccount.TESTFIELD("Direct Posting",TRUE);
                      END;

                    ExpenseAllocation."Expense Account Type"::Item:
                      Item.GET(ExpenseAllocation."Expense Account");
                  END;
                END;

                IF NOT "Matched to Bank Transaction" THEN
                  ExpenseAllocation.TESTFIELD("Cash/Private Card",TRUE);

              UNTIL ExpenseAllocation.NEXT = 0;
            END;

            IF UseExpenseAllocation THEN
              CheckAllocation(Rec);
          END;

  }
  CODE
  {
    VAR
      ItemRequiresPurchInv@1160040001 : TextConst 'DEU=Sie kînnen nicht %1 und %2 gleichzeitig angeben.;ENU="Items are allowed only when using purchase invoice posting. ";NLD="Artikelen zijn alleen toegestaan ??bij gebruik van inkoopfactuurboekingen. "';
      NoAllocationAllowedNegativ@1160040005 : TextConst 'DEU=Keine Zuweisung fÅr Kostenpositionen gestattet, die zugeordnet wurden und keine RÅckzahlung haben.;ENU=No allocation allowed for expenses that are matched and without refund.;NLD=Geen allocatie toegestaan voor uitgaven die gematched of zonder weigering zijn';
      WrongAllocAmtErr@1160040000 : TextConst 'DEU=%1 auf %2 %3 stimmt nicht mit dem zugewiesenen Gesamtbetrag Åberein.;ENU=%1 on %2 %3 does not match the total allocated amount.;NLD=%1 op %2 %3 komt niet overeen met het totaal gealloceerde bedrag.';
      WrongMatchAmtErr@1160040003 : TextConst 'DEU=%1 muss entweder %2 oder %3 sein;ENU=Amount %2 and Matched Amount %1 does not match on %3;NLD=Bedrag %2 en het gematcht bedrag %1 komen niet overeen op %3';

    LOCAL PROCEDURE CheckAllocation@1160040000(VAR Rec@1160040000 : Record 6086320);
    BEGIN
      WITH Rec DO
        IF "Matched to Bank Transaction" AND "No Refund" AND ("Amount (LCY)" < 0) THEN
          ERROR(NoAllocationAllowedNegativ);
    END;

    BEGIN
    END.
  }
}

