OBJECT Table 92 Customer Posting Group
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01,4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               CheckCustEntries;
             END;

    CaptionML=[ENU=Customer Posting Group;
               NOR=Bokf›ringsgruppe - kunde;
               SVE=Kundbokf”ringsmall];
    LookupPageID=Page110;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes }
    { 2   ;   ;Receivables Account ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Receivables Account",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Receivables Account",FALSE,FALSE,GLAccountCategory."Account Category"::Assets,GLAccountCategoryMgt.GetAR);
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Receivables Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount(
                                                                  "Receivables Account",GLAccountCategory."Account Category"::Assets,GLAccountCategoryMgt.GetAR);

                                                              VALIDATE("Receivables Account");
                                                            END;

                                                   CaptionML=[ENU=Receivables Account;
                                                              NOR=Samlekonto (kunde);
                                                              SVE=Kundfordringar] }
    { 7   ;   ;Service Charge Acc. ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Service Charge Acc.",TRUE,TRUE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Service Charge Acc.",TRUE,TRUE,GLAccountCategory."Account Category"::Income,GLAccountCategoryMgt.GetIncomeService);
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Service Charge Acc.")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount(
                                                                  "Service Charge Acc.",GLAccountCategory."Account Category"::Income,GLAccountCategoryMgt.GetIncomeService);

                                                              VALIDATE("Service Charge Acc.");
                                                            END;

                                                   CaptionML=[ENU=Service Charge Acc.;
                                                              NOR=Gebyrkonto;
                                                              SVE=Faktureringsavgifter] }
    { 8   ;   ;Payment Disc. Debit Acc.;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Payment Disc. Debit Acc.",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount("Payment Disc. Debit Acc.",FALSE,FALSE,GLAccountCategory."Account Category"::Expense,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Payment Disc. Debit Acc.")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Payment Disc. Debit Acc.",GLAccountCategory."Account Category"::Expense,'');

                                                              VALIDATE("Payment Disc. Debit Acc.")
                                                            END;

                                                   CaptionML=[ENU=Payment Disc. Debit Acc.;
                                                              NOR=Kontantrabatt - debetkonto;
                                                              SVE=Betalningsrabatt debet] }
    { 9   ;   ;Invoice Rounding Account;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Invoice Rounding Account",TRUE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount("Invoice Rounding Account",TRUE,FALSE,GLAccountCategory."Account Category"::Income,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Invoice Rounding Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Invoice Rounding Account",GLAccountCategory."Account Category"::Income,'');

                                                              VALIDATE("Invoice Rounding Account");
                                                            END;

                                                   CaptionML=[ENU=Invoice Rounding Account;
                                                              NOR=Fakturaavrundingskonto;
                                                              SVE=™resutj„mning] }
    { 10  ;   ;Additional Fee Account;Code20      ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Additional Fee Account",TRUE,TRUE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount("Additional Fee Account",TRUE,TRUE,GLAccountCategory."Account Category"::Income,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Additional Fee Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Additional Fee Account",GLAccountCategory."Account Category"::Income,'');

                                                              VALIDATE("Additional Fee Account");
                                                            END;

                                                   CaptionML=[ENU=Additional Fee Account;
                                                              NOR=Tilleggsgebyrkonto;
                                                              SVE=Avgift] }
    { 11  ;   ;Interest Account    ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Interest Account",TRUE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount("Interest Account",TRUE,FALSE,GLAccountCategory."Account Category"::Income,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Interest Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Interest Account",GLAccountCategory."Account Category"::Income,'');

                                                              VALIDATE("Interest Account");
                                                            END;

                                                   CaptionML=[ENU=Interest Account;
                                                              NOR=Rentekonto;
                                                              SVE=R„nta] }
    { 12  ;   ;Debit Curr. Appln. Rndg. Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Debit Curr. Appln. Rndg. Acc.",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Debit Curr. Appln. Rndg. Acc.",FALSE,FALSE,GLAccountCategory."Account Category"::Income,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Debit Curr. Appln. Rndg. Acc.")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Debit Curr. Appln. Rndg. Acc.",GLAccountCategory."Account Category"::Income,'');

                                                              VALIDATE("Debit Curr. Appln. Rndg. Acc.");
                                                            END;

                                                   CaptionML=[ENU=Debit Curr. Appln. Rndg. Acc.;
                                                              NOR=Debetkonto for valutaavrund.;
                                                              SVE=Debet valutakopp. avrundning] }
    { 13  ;   ;Credit Curr. Appln. Rndg. Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Credit Curr. Appln. Rndg. Acc.",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Credit Curr. Appln. Rndg. Acc.",FALSE,FALSE,GLAccountCategory."Account Category"::Income,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Credit Curr. Appln. Rndg. Acc.")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Credit Curr. Appln. Rndg. Acc.",GLAccountCategory."Account Category"::Income,'');

                                                              VALIDATE("Credit Curr. Appln. Rndg. Acc.");
                                                            END;

                                                   CaptionML=[ENU=Credit Curr. Appln. Rndg. Acc.;
                                                              NOR=Kreditkonto for valutaavrund.;
                                                              SVE=Kredit valutakopp. avrundning] }
    { 14  ;   ;Debit Rounding Account;Code20      ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Debit Rounding Account",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Debit Rounding Account",FALSE,FALSE,GLAccountCategory."Account Category"::Income,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Debit Rounding Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Debit Rounding Account",GLAccountCategory."Account Category"::Income,'');

                                                              VALIDATE("Debit Rounding Account");
                                                            END;

                                                   CaptionML=[ENU=Debit Rounding Account;
                                                              NOR=Avrundingskonto - debet;
                                                              SVE=Debetavrundning] }
    { 15  ;   ;Credit Rounding Account;Code20     ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Credit Rounding Account",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount("Credit Rounding Account",FALSE,FALSE,GLAccountCategory."Account Category"::Income,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Credit Rounding Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Credit Rounding Account",GLAccountCategory."Account Category"::Income,'');
                                                              VALIDATE("Credit Rounding Account");
                                                            END;

                                                   CaptionML=[ENU=Credit Rounding Account;
                                                              NOR=Avrundingskonto - kredit;
                                                              SVE=Kreditavrundning] }
    { 16  ;   ;Payment Disc. Credit Acc.;Code20   ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Payment Disc. Credit Acc.",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount("Payment Disc. Credit Acc.",FALSE,FALSE,GLAccountCategory."Account Category"::Expense,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Payment Disc. Credit Acc.")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Payment Disc. Credit Acc.",GLAccountCategory."Account Category"::Expense,'');

                                                              VALIDATE("Payment Disc. Credit Acc.");
                                                            END;

                                                   CaptionML=[ENU=Payment Disc. Credit Acc.;
                                                              NOR=Kontantrabatt - kreditkonto;
                                                              SVE=Kassarabatt kredit] }
    { 17  ;   ;Payment Tolerance Debit Acc.;Code20;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Payment Tolerance Debit Acc.",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Payment Tolerance Debit Acc.",FALSE,FALSE,GLAccountCategory."Account Category"::Expense,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Payment Tolerance Debit Acc.")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Payment Tolerance Debit Acc.",GLAccountCategory."Account Category"::Expense,'');

                                                              VALIDATE("Payment Tolerance Debit Acc.");
                                                            END;

                                                   CaptionML=[ENU=Payment Tolerance Debit Acc.;
                                                              NOR=Betalingstoler. - debetkonto;
                                                              SVE=Betalningstolerans debet] }
    { 18  ;   ;Payment Tolerance Credit Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Payment Tolerance Credit Acc.",FALSE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount(
                                                                    "Payment Tolerance Credit Acc.",FALSE,FALSE,
                                                                    GLAccountCategory."Account Category"::Expense,GLAccountCategoryMgt.GetInterestExpense);
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Payment Tolerance Credit Acc.")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount(
                                                                  "Payment Tolerance Credit Acc.",GLAccountCategory."Account Category"::Expense,GLAccountCategoryMgt.GetInterestExpense);

                                                              VALIDATE("Payment Tolerance Credit Acc.");
                                                            END;

                                                   CaptionML=[ENU=Payment Tolerance Credit Acc.;
                                                              NOR=Betalingstoler. - kreditkonto;
                                                              SVE=Betalningstolerans kredit] }
    { 19  ;   ;Add. Fee per Line Account;Code20   ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                IF "View All Accounts on Lookup" THEN
                                                                  GLAccountCategoryMgt.CheckGLAccountWithoutCategory("Add. Fee per Line Account",TRUE,FALSE)
                                                                ELSE
                                                                  GLAccountCategoryMgt.CheckGLAccount("Add. Fee per Line Account",TRUE,FALSE,GLAccountCategory."Account Category"::Income,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "View All Accounts on Lookup" THEN
                                                                GLAccountCategoryMgt.LookupGLAccountWithoutCategory("Add. Fee per Line Account")
                                                              ELSE
                                                                GLAccountCategoryMgt.LookupGLAccount("Add. Fee per Line Account",GLAccountCategory."Account Category"::Income,'');

                                                              VALIDATE("Add. Fee per Line Account");
                                                            END;

                                                   CaptionML=[ENU=Add. Fee per Line Account;
                                                              NOR=Tilleggsgebyr per linjekonto;
                                                              SVE=Konto f”r avgift per rad] }
    { 20  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Description;
                                                              SVE=Beskrivning] }
    { 21  ;   ;View All Accounts on Lookup;Boolean;CaptionML=[ENU=View All Accounts on Lookup;
                                                              NOR=Vis alle konti p† oppslag] }
    { 11012000;;Dubious Account    ;Code20        ;TableRelation="G/L Account";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Dubious Account }
    { 11012010;;Addition Dubious Account;Code20   ;TableRelation="G/L Account";
                                                   DataClassification=ToBeClassified;
                                                   CaptionML=ENU=Addition Dubious Account }
    { 11128275;;Taxreduction handling fee;Code20  ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=ROT/RUT reduction handling fee account;
                                                              SVE=Konto f”r ROT/RUT hantering];
                                                   Description=RFC188 }
    { 11128900;;Retention Suspense Acc.;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                //**4PS
                                                                GLAccountCategoryMgt.CheckGLAccount("Retention Suspense Acc.",TRUE,FALSE,0,'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              //**4PS
                                                              GLAccountCategoryMgt.LookupGLAccount("Retention Suspense Acc.",0,'');
                                                            END;

                                                   CaptionML=[ENU=Retention Suspense Acc.;
                                                              NOR=Gjenv‘rende spenning akk.;
                                                              SVE=Kvarst†ende bevakning ack.];
                                                   Description=4PSNA }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code                                     }
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      GLAccountCategory@1002 : Record 570;
      GLAccountCategoryMgt@1001 : Codeunit 570;
      PostingSetupMgt@1005 : Codeunit 48;
      YouCannotDeleteErr@1004 : TextConst '@@@="%1 = Code";ENU=You cannot delete %1.;NOR=Du kan ikke slette %1.';

    LOCAL PROCEDURE CheckCustEntries@13();
    VAR
      Customer@1000 : Record 18;
      CustLedgerEntry@1001 : Record 21;
    BEGIN
      Customer.SETRANGE("Customer Posting Group",Code);
      IF NOT Customer.ISEMPTY THEN
        ERROR(YouCannotDeleteErr,Code);

      CustLedgerEntry.SETRANGE("Customer Posting Group",Code);
      IF NOT CustLedgerEntry.ISEMPTY THEN
        ERROR(YouCannotDeleteErr,Code);
    END;

    [External]
    PROCEDURE GetReceivablesAccount@6() : Code[20];
    BEGIN
      IF "Receivables Account" = '' THEN
        PostingSetupMgt.SendCustPostingGroupNotification(Rec,FIELDCAPTION("Receivables Account"));
      TESTFIELD("Receivables Account");
      EXIT("Receivables Account");
    END;

    [External]
    PROCEDURE GetPmtDiscountAccount@1(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        IF "Payment Disc. Debit Acc." = '' THEN
          PostingSetupMgt.SendCustPostingGroupNotification(Rec,FIELDCAPTION("Payment Disc. Debit Acc."));
        TESTFIELD("Payment Disc. Debit Acc.");
        EXIT("Payment Disc. Debit Acc.");
      END;
      IF "Payment Disc. Credit Acc." = '' THEN
        PostingSetupMgt.SendCustPostingGroupNotification(Rec,FIELDCAPTION("Payment Disc. Credit Acc."));
      TESTFIELD("Payment Disc. Credit Acc.");
      EXIT("Payment Disc. Credit Acc.");
    END;

    [External]
    PROCEDURE GetPmtToleranceAccount@3(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        IF "Payment Tolerance Debit Acc." = '' THEN
          PostingSetupMgt.SendCustPostingGroupNotification(Rec,FIELDCAPTION("Payment Tolerance Debit Acc."));
        TESTFIELD("Payment Tolerance Debit Acc.");
        EXIT("Payment Tolerance Debit Acc.");
      END;
      IF "Payment Tolerance Credit Acc." = '' THEN
        PostingSetupMgt.SendCustPostingGroupNotification(Rec,FIELDCAPTION("Payment Tolerance Credit Acc."));
      TESTFIELD("Payment Tolerance Credit Acc.");
      EXIT("Payment Tolerance Credit Acc.");
    END;

    [External]
    PROCEDURE GetRoundingAccount@4(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        IF "Debit Rounding Account" = '' THEN
          PostingSetupMgt.SendCustPostingGroupNotification(Rec,FIELDCAPTION("Debit Rounding Account"));
        TESTFIELD("Debit Rounding Account");
        EXIT("Debit Rounding Account");
      END;
      IF "Credit Rounding Account" = '' THEN
        PostingSetupMgt.SendCustPostingGroupNotification(Rec,FIELDCAPTION("Credit Rounding Account"));
      TESTFIELD("Credit Rounding Account");
      EXIT("Credit Rounding Account");
    END;

    [External]
    PROCEDURE GetApplRoundingAccount@5(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        IF "Debit Curr. Appln. Rndg. Acc." = '' THEN
          PostingSetupMgt.SendCustPostingGroupNotification(Rec,FIELDCAPTION("Debit Curr. Appln. Rndg. Acc."));
        TESTFIELD("Debit Curr. Appln. Rndg. Acc.");
        EXIT("Debit Curr. Appln. Rndg. Acc.");
      END;
      IF "Credit Curr. Appln. Rndg. Acc." = '' THEN
        PostingSetupMgt.SendCustPostingGroupNotification(Rec,FIELDCAPTION("Credit Curr. Appln. Rndg. Acc."));
      TESTFIELD("Credit Curr. Appln. Rndg. Acc.");
      EXIT("Credit Curr. Appln. Rndg. Acc.");
    END;

    [External]
    PROCEDURE GetInvRoundingAccount@9() : Code[20];
    BEGIN
      IF "Invoice Rounding Account" = '' THEN
        PostingSetupMgt.SendCustPostingGroupNotification(Rec,FIELDCAPTION("Invoice Rounding Account"));
      TESTFIELD("Invoice Rounding Account");
      EXIT("Invoice Rounding Account");
    END;

    [External]
    PROCEDURE GetServiceChargeAccount@7() : Code[20];
    BEGIN
      IF "Service Charge Acc." = '' THEN
        PostingSetupMgt.SendCustPostingGroupNotification(Rec,FIELDCAPTION("Service Charge Acc."));
      TESTFIELD("Service Charge Acc.");
      EXIT("Service Charge Acc.");
    END;

    [External]
    PROCEDURE GetAdditionalFeeAccount@8() : Code[20];
    BEGIN
      IF "Additional Fee Account" = '' THEN
        PostingSetupMgt.SendCustPostingGroupNotification(Rec,FIELDCAPTION("Additional Fee Account"));
      TESTFIELD("Additional Fee Account");
      EXIT("Additional Fee Account");
    END;

    [External]
    PROCEDURE GetAddFeePerLineAccount@11() : Code[20];
    BEGIN
      IF "Add. Fee per Line Account" = '' THEN
        PostingSetupMgt.SendCustPostingGroupNotification(Rec,FIELDCAPTION("Add. Fee per Line Account"));
      TESTFIELD("Add. Fee per Line Account");
      EXIT("Add. Fee per Line Account");
    END;

    [External]
    PROCEDURE GetInterestAccount@10() : Code[20];
    BEGIN
      IF "Interest Account" = '' THEN
        PostingSetupMgt.SendCustPostingGroupNotification(Rec,FIELDCAPTION("Interest Account"));
      TESTFIELD("Interest Account");
      EXIT("Interest Account");
    END;

    [External]
    PROCEDURE SetAccountVisibility@12(VAR PmtToleranceVisible@1000 : Boolean;VAR PmtDiscountVisible@1002 : Boolean;VAR InvRoundingVisible@1001 : Boolean;VAR ApplnRoundingVisible@1005 : Boolean);
    VAR
      SalesSetup@1003 : Record 311;
      PaymentTerms@1004 : Record 3;
    BEGIN
      GLSetup.GET;
      PmtToleranceVisible := GLSetup.GetPmtToleranceVisible;
      PmtDiscountVisible := PaymentTerms.UsePaymentDiscount;

      SalesSetup.GET;
      InvRoundingVisible := SalesSetup."Invoice Rounding";
      ApplnRoundingVisible := SalesSetup."Appln. between Currencies" <> SalesSetup."Appln. between Currencies"::None;
    END;

    BEGIN
    {
      170405 ITERO.DL RFC188 enhance ROT-handling and extend with RUT
      170512 ITERO.DL RFC188 caption change ROT -> ROT/RUT
    }
    END.
  }
}

