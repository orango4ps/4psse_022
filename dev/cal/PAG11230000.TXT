OBJECT Page 11230000 Additional Field FSA WS
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=;
    SourceTable=Table11072382;
    PageType=List;
    SourceTableTemporary=Yes;
    OnAfterGetRecord=BEGIN
                       GetValue();
                     END;

  }
  CONTROLS
  {
    { 1100526000;0;Container;
                ContainerType=ContentArea }

    { 1100526005;1;Field  ;
                SourceExpr=LCID }

    { 1100526008;1;Field  ;
                SourceExpr=WorkOrderNo;
                OnValidate=BEGIN
                             FillSourceTable();
                           END;
                            }

    { 1100526001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1100526007;2;Field  ;
                Name=FieldType;
                SourceExpr="Field Type" }

    { 1100526012;2;Field  ;
                Name=Caption;
                SourceExpr=GetCaption }

    { 1100526009;2;Field  ;
                Name=TextValue;
                SourceExpr=TextValue }

    { 1100526010;2;Field  ;
                Name=DateValue;
                SourceExpr=DateValue }

    { 1100526011;2;Field  ;
                Name=TimeValue;
                SourceExpr=TimeValue }

    { 1100526003;2;Field  ;
                Name=DateTimeValue;
                SourceExpr=DateTimeValue }

    { 1100526004;2;Field  ;
                Name=NumericValue;
                SourceExpr=NumericValue }

    { 1100526002;2;Field  ;
                Name=IsApplicableForService;
                SourceExpr=GetIsApplicableForService }

    { 1100526006;2;Field  ;
                Name=IsApplicableForProjects;
                SourceExpr=GetIsApplicableForProjects }

    { 1100528700;2;Field  ;
                Name=BooleanValue;
                SourceExpr=BooleanValue }

  }
  CODE
  {
    VAR
      LCID@1100526006 : Integer;
      WorkOrderNo@1100526000 : Code[20];
      TextValue@1100526001 : Text;
      DateValue@1100526002 : Date;
      TimeValue@1100526003 : Time;
      DateTimeValue@1100526004 : DateTime;
      NumericValue@1100526005 : Decimal;
      BooleanValue@1100528700 : Boolean;

    LOCAL PROCEDURE FillSourceTable@1100526000();
    VAR
      AdditionalFieldFSA@1100526000 : Record 11072382;
      WorkOrder@1100526001 : Record 11229279;
    BEGIN
      Rec.RESET;
      Rec.DELETEALL;

      AdditionalFieldFSA.SETFILTER("Table No.", '<>%1', 0);
      AdditionalFieldFSA.SETFILTER("Field No.", '<>%1', 0);
      IF NOT AdditionalFieldFSA.FINDSET THEN
        EXIT;

      IF NOT WorkOrder.GET(WorkOrderNo) THEN
        EXIT;

      REPEAT
        Rec.INIT;
        Rec.TRANSFERFIELDS(AdditionalFieldFSA);
        IF Rec.INSERT THEN;
      UNTIL AdditionalFieldFSA.NEXT = 0;
    END;

    LOCAL PROCEDURE GetValue@1100526001();
    VAR
      WorkOrder@1100526004 : Record 11229279;
      ServiceOrder@1100526003 : Record 11012823;
      ServiceOrderExtension@1100526005 : Record 11071727;
      ServiceLocation@1100526007 : Record 11012801;
      ServiceContract@1100528701 : Record 11012812;
      Job@1100526002 : Record 11072003;
      Customer@1100528700 : Record 18;
      RecRef@1100526001 : RecordRef;
      FldRef@1100526000 : FieldRef;
      FieldTableManagement@1100526006 : Codeunit 11012372;
    BEGIN
      TextValue := '';
      DateValue := 0D;
      TimeValue := 0T;
      DateTimeValue := CREATEDATETIME(0D, 0T);
      NumericValue := 0;
      BooleanValue := FALSE;

      IF NOT WorkOrder.GET(WorkOrderNo) THEN
        EXIT;

      CLEAR(RecRef);
      CASE "Table No." OF
        DATABASE::"Work Order" :
          BEGIN
            RecRef.GETTABLE(WorkOrder);
          END;
        DATABASE::"Service Order" :
          BEGIN
            IF WorkOrder."Source Type" = WorkOrder."Source Type"::ServiceOrder THEN BEGIN
              ServiceOrder.CHANGECOMPANY(WorkOrder."Source Company");
              ServiceOrder.GET(WorkOrder."Source No.");
              RecRef.GETTABLE(ServiceOrder);
            END;
          END;
        DATABASE::"Service Order Extension" :
          BEGIN
            IF WorkOrder."Source Type" = WorkOrder."Source Type"::ServiceOrder THEN BEGIN
              ServiceOrderExtension.CHANGECOMPANY(WorkOrder."Source Company");
              ServiceOrderExtension.GET(WorkOrder."Source No.");
              RecRef.GETTABLE(ServiceOrderExtension);
            END;
          END;
        DATABASE::"Service Location" :
          BEGIN
            IF WorkOrder."Source Type" = WorkOrder."Source Type"::ServiceOrder THEN BEGIN
              ServiceOrder.CHANGECOMPANY(WorkOrder."Source Company");
              ServiceOrder.GET(WorkOrder."Source No.");
              ServiceLocation.CHANGECOMPANY(WorkOrder."Source Company");
              IF ServiceLocation.GET(ServiceOrder."Service Location No.") THEN
                RecRef.GETTABLE(ServiceLocation);
            END;
          END;
        DATABASE::"Service-Contract" :
          BEGIN
            IF WorkOrder."Source Type" = WorkOrder."Source Type"::ServiceOrder THEN BEGIN
              ServiceOrder.CHANGECOMPANY(WorkOrder."Source Company");
              ServiceOrder.GET(WorkOrder."Source No.");
              ServiceContract.CHANGECOMPANY(WorkOrder."Source Company");
              IF ServiceContract.GET(ServiceOrder."Service Contract No.") THEN
                RecRef.GETTABLE(ServiceContract);
            END;
          END;
        DATABASE::Job :
          BEGIN
            IF WorkOrder."Source Type" = WorkOrder."Source Type"::Project THEN BEGIN
              Job.CHANGECOMPANY(WorkOrder."Source Company");
              Job.GET(WorkOrder."Source No.");
              RecRef.GETTABLE(Job);
            END;
          END;
        DATABASE::Customer :
          BEGIN
            IF WorkOrder."Source Type" = WorkOrder."Source Type"::ServiceOrder THEN BEGIN
              ServiceOrder.CHANGECOMPANY(WorkOrder."Source Company");
              ServiceOrder.GET(WorkOrder."Source No.");
              Customer.CHANGECOMPANY(WorkOrder."Source Company");
              IF Customer.GET(WorkOrder."Customer No.") THEN
                RecRef.GETTABLE(Customer);
            END;
          END;
      END;

      IF RecRef.NUMBER <> 0 THEN BEGIN
        FldRef := RecRef.FIELD("Field No.");
        IF FieldTableManagement.IsFlowField("Table No.", "Field No.") THEN
          FldRef.CALCFIELD;
        CASE "Field Type" OF
          "Field Type"::Text, "Field Type"::Code : TextValue := FldRef.VALUE;
          "Field Type"::Date : DateValue := FldRef.VALUE;
          "Field Type"::Time : TimeValue := FldRef.VALUE;
          "Field Type"::DateTime : DateTimeValue := FldRef.VALUE;
          "Field Type"::Integer, "Field Type"::Decimal : NumericValue := FldRef.VALUE;
          "Field Type"::Boolean : BooleanValue := FldRef.VALUE;
        END;
      END;
    END;

    LOCAL PROCEDURE GetCaption@1100526003() : Text;
    VAR
      Language@1100526002 : Record 8;
      FlexibleFieldCaptionFSA@1100526000 : Record 11072383;
      Field@1100526004 : Record 2000000041;
    BEGIN
      Language.SETRANGE("Windows Language ID", LCID);
      IF Language.FINDFIRST THEN BEGIN
        FlexibleFieldCaptionFSA.SETRANGE("Additional Field Seq. No.", "Seq. No.");
        FlexibleFieldCaptionFSA.SETRANGE("Language Code", Language.Code);
        IF FlexibleFieldCaptionFSA.FINDFIRST THEN
          EXIT(FlexibleFieldCaptionFSA.Caption);
      END;

      IF Field.GET("Table No.", "Field No.") THEN
        EXIT(Field."Field Caption");
    END;

    LOCAL PROCEDURE GetIsApplicableForService@1100526002() : Boolean;
    BEGIN
      EXIT("Table No." <> DATABASE::Job);
    END;

    LOCAL PROCEDURE GetIsApplicableForProjects@1100526004() : Boolean;
    BEGIN
      EXIT(NOT ("Table No." IN [DATABASE::"Service Order", DATABASE::"Service Order Extension", DATABASE::"Service Location", DATABASE::"Service-Contract"]));
    END;

    BEGIN
    END.
  }
}

