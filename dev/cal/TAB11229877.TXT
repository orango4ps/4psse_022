OBJECT Table 11229877 Plant Budget Rubric
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               PlantBudgetEntry@1100528700 : Record 11229878;
             BEGIN
               CALCFIELDS("Budget Fixed");
               TESTFIELD("Budget Fixed", FALSE);

               PlantBudgetEntry.SETRANGE("Plant Budget", "Plant Budget");
               PlantBudgetEntry.SETRANGE("Plant Type", "Plant Type");
               PlantBudgetEntry.SETRANGE("Plant No.", "Plant No.");
               PlantBudgetEntry.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               ERROR(Text000);
             END;

    CaptionML=ENU=Plant Budget Rubric;
  }
  FIELDS
  {
    { 10  ;   ;Plant Budget        ;Code10        ;TableRelation="Plant Budget";
                                                   CaptionML=[ENU=Plant Budget;
                                                              NOR=Maskinbudsjett;
                                                              SVE=Maskinbudget];
                                                   NotBlank=Yes }
    { 20  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   OnValidate=VAR
                                                                GroupingLevel@1100528001 : Record 11012576;
                                                                PlantType@1100528000 : Record 11012551;
                                                              BEGIN
                                                                Level := DetermineLevel;
                                                                CASE Level OF
                                                                  1..3 :
                                                                    GroupingLevel.GET("Plant Type");
                                                                  4..5 :
                                                                    PlantType.GET("Plant Type");
                                                                  ELSE
                                                                    IF "Plant Type" <> '' THEN
                                                                      FIELDERROR("Plant Type");
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp] }
    { 30  ;   ;Plant No.           ;Code20        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS(Bulk);
                                                                IF Bulk THEN
                                                                  TESTFIELD("Plant No.", '');

                                                                Level := DetermineLevel;
                                                              END;

                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr] }
    { 40  ;   ;Bulk                ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Type".Bulk WHERE (Code=FIELD(Plant Type)));
                                                   CaptionML=[ENU=Bulk;
                                                              NOR=Bulk;
                                                              SVE=Bulk];
                                                   Editable=No }
    { 50  ;   ;Level               ;Integer       ;CaptionML=[ENU=Level;
                                                              NOR=Niv†;
                                                              SVE=Niv†];
                                                   Editable=No }
    { 90  ;   ;Comment             ;Text30        ;CaptionML=[ENU=Comment;
                                                              NOR=Merknad;
                                                              SVE=Kommentar] }
    { 100 ;   ;Budget Fixed        ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Budget".Fixed WHERE (Code=FIELD(Plant Budget)));
                                                   CaptionML=[ENU=Budget Fixed;
                                                              NOR=Budsjett fast;
                                                              SVE=Budget fast];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Plant Budget,Plant Type,Plant No.       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528000 : TextConst 'ENU=Rename not allowed;NOR=Ikke tillatt † endre navn.;SVE=Det „r inte till†tet att byta namn.';
      Text001@1100528700 : TextConst 'ENU=Total;NOR=Totalt;SVE=Totalt';

    PROCEDURE GetDescription@1100528700() : Text;
    VAR
      GroupingLevel@1100528700 : Record 11012576;
      PlantNumber@1100528702 : Record 11012552;
      Description@1100528703 : Text;
    BEGIN
      CASE Level OF
        0 : EXIT(Text001);
        1..3 :
          IF GroupingLevel.GET("Plant Type") THEN
            EXIT(GroupingLevel.Description);
        4..5 :
          BEGIN
            PlantNumber.GetPlantDescription("Plant Type", "Plant No.", Description);
            EXIT(Description);
          END;
      END;
    END;

    PROCEDURE AddGroupingLevels@1100528701();
    VAR
      PlantSetup@1100528701 : Record 11012550;
      PlantBudgetRubric@1100528703 : Record 11229877;
      GroupingLevel@1100528702 : Record 11012576;
      Skip@1100528704 : Boolean;
      i@1100528700 : Integer;
    BEGIN
      PlantSetup.GET;

      PlantBudgetRubric."Plant Budget" := "Plant Budget";
      AddGroupingLevel(PlantBudgetRubric, 0, 0);

      PlantBudgetRubric.SETRANGE("Plant Budget", "Plant Budget");
      PlantBudgetRubric.SETFILTER(Level, '%1..', 1);
      IF PlantBudgetRubric.ISEMPTY THEN BEGIN
        IF GroupingLevel.FINDSET THEN
          REPEAT
            Skip := FALSE;
            PlantBudgetRubric.INIT;
            PlantBudgetRubric."Plant Budget" := "Plant Budget";
            PlantBudgetRubric."Plant Type" := GroupingLevel.Code;
            CASE STRLEN(GroupingLevel.Code) OF
              PlantSetup."Level 1 Grouping No. of Char." : PlantBudgetRubric.Level := 1;
              PlantSetup."Level 2 Grouping No. of Char." : PlantBudgetRubric.Level := 2;
              PlantSetup."Level 3 Grouping No. of Char." : PlantBudgetRubric.Level := 3;
            ELSE
              Skip := TRUE;
            END;
            IF NOT Skip THEN
              PlantBudgetRubric.INSERT;
          UNTIL GroupingLevel.NEXT = 0;
        EXIT;
      END;

      PlantBudgetRubric.RESET;
      PlantBudgetRubric.SETRANGE("Plant Budget", "Plant Budget");
      PlantBudgetRubric.SETRANGE(Level, 2, 5);
      IF PlantBudgetRubric.FINDSET THEN
        REPEAT
          FOR i := 1 TO PlantBudgetRubric.Level - 1 DO BEGIN
            CASE i OF
              1: AddGroupingLevel(PlantBudgetRubric, PlantSetup."Level 1 Grouping No. of Char.", i);
              2: AddGroupingLevel(PlantBudgetRubric, PlantSetup."Level 2 Grouping No. of Char.", i);
              3: AddGroupingLevel(PlantBudgetRubric, PlantSetup."Level 3 Grouping No. of Char.", i);
              4: AddGroupingLevel(PlantBudgetRubric, STRLEN(PlantBudgetRubric."Plant Type"), i);
            END;
          END;
        UNTIL PlantBudgetRubric.NEXT = 0;
    END;

    PROCEDURE AddGroupingLevel@1100528705(PlantBudgetRubric@1100528705 : Record 11229877;NoOfChar@1100528703 : Integer;Level@1100528704 : Integer);
    VAR
      GroupingLevel@1100528701 : Record 11012576;
      PlantType@1100528700 : Record 11012551;
      PlantBudgetRubric2@1100528702 : Record 11229877;
      Code@1100528706 : Code[20];
    BEGIN
      IF STRLEN(PlantBudgetRubric."Plant Type") > NoOfChar THEN BEGIN
        Code := COPYSTR(PlantBudgetRubric."Plant Type", 1, NoOfChar);
        IF NOT GroupingLevel.GET(Code) THEN
          EXIT;
      END ELSE BEGIN
        Code := PlantBudgetRubric."Plant Type";
        IF NOT PlantType.GET(Code) AND (Level > 0) THEN
          EXIT;
      END;

      PlantBudgetRubric2.INIT;
      PlantBudgetRubric2."Plant Budget" := PlantBudgetRubric."Plant Budget";
      PlantBudgetRubric2."Plant Type" := Code;
      PlantBudgetRubric2.Level := Level;
      IF NOT PlantBudgetRubric2.FIND THEN
        PlantBudgetRubric2.INSERT;
    END;

    PROCEDURE DetermineLevel@1100528702() : Integer;
    VAR
      PlantSetup@1100528700 : Record 11012550;
      Len@1100528000 : Integer;
    BEGIN
      Len := STRLEN("Plant Type");
      IF "Plant Type" <> '' THEN BEGIN
        PlantSetup.GET;
        Len := STRLEN("Plant Type");
        IF (PlantSetup."Level 1 Grouping No. of Char." <> 0) AND (Len <= PlantSetup."Level 1 Grouping No. of Char.") THEN
          EXIT(1);
        IF (PlantSetup."Level 2 Grouping No. of Char." <> 0) AND (Len <= PlantSetup."Level 2 Grouping No. of Char.") THEN
          EXIT(2);
        IF (PlantSetup."Level 3 Grouping No. of Char." <> 0) AND (Len <= PlantSetup."Level 3 Grouping No. of Char.") THEN
          EXIT(3);
        IF "Plant No." = '' THEN
          EXIT(4)
        ELSE
          EXIT(5);
      END;
    END;

    PROCEDURE GetStartDateFromDateFilter@1100528706(DateFilter@1100528701 : Text) : Date;
    VAR
      Date@1100528700 : Record 2000000007;
    BEGIN
      Date.SETRANGE("Period Type", Date."Period Type"::Date);
      Date.SETFILTER("Period Start", DateFilter);
      IF Date.FINDFIRST THEN
        EXIT(Date."Period Start");
    END;

    PROCEDURE GetFilteredEntries@1100528703(CostComponentFilter@1100528702 : Code[250];DateFilter@1100528701 : Text;VAR PlantBudgetEntry@1100528700 : Record 11229878);
    BEGIN
      PlantBudgetEntry.SETRANGE("Plant Budget", "Plant Budget");
      IF Level < 4 THEN
        PlantBudgetEntry.SETFILTER("Plant Type", STRSUBSTNO('%1*', "Plant Type"))
      ELSE
        PlantBudgetEntry.SETFILTER("Plant Type", "Plant Type");
      PlantBudgetEntry.SETFILTER("Plant No.", "Plant No.");
      PlantBudgetEntry.SETFILTER("Cost Component", CostComponentFilter);
      PlantBudgetEntry.SETFILTER(Date, DateFilter);
    END;

    PROCEDURE GetBudget@1100528712(CostComponentFilter@1100528702 : Code[250];DateFilter@1100528700 : Text) : Decimal;
    VAR
      PlantBudgetEntry@1100528701 : Record 11229878;
    BEGIN
      GetFilteredEntries(CostComponentFilter, DateFilter, PlantBudgetEntry);
      PlantBudgetEntry.CALCSUMS(Amount);
      EXIT(PlantBudgetEntry.Amount);
    END;

    PROCEDURE AssistEditPlantNumber@1100528704();
    VAR
      PlantNumber@1100528700 : Record 11012552;
      PlantNumberList@1100528701 : Page 11012555;
    BEGIN
      PlantNumberList.LOOKUPMODE(TRUE);
      IF PlantNumber.GET("Plant Type", "Plant No.") THEN
        PlantNumberList.SETRECORD(PlantNumber);
      IF PlantNumberList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        CALCFIELDS("Budget Fixed");
        IF "Budget Fixed" THEN
          EXIT;
        PlantNumberList.GETRECORD(PlantNumber);
        VALIDATE("Plant Type", PlantNumber."Plant Type");
        VALIDATE("Plant No.", PlantNumber."No.");
      END;
    END;

    BEGIN
    END.
  }
}

