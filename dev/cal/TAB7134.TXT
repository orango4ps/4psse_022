OBJECT Table 7134 Item Budget Entry
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               TempDimSetEntry@1000 : TEMPORARY Record 480;
             BEGIN
               CheckIfBlocked;
               TESTFIELD(Date);

               GetGLSetup;
               IF ("Source No." = '') AND ("Item No." = '') THEN BEGIN
                 GetSalesSetup;
                 GetInventorySetup;

                 IF NOT (CheckGroupDimFilled(SalesSetup."Customer Group Dimension Code") OR
                         CheckGroupDimFilled(SalesSetup."Salesperson Dimension Code") OR
                         CheckGroupDimFilled(InventorySetup."Item Group Dimension Code"))
                 THEN
                   TESTFIELD("Item No.");
               END;

               TESTFIELD("Budget Name");
               LOCKTABLE;
               "User ID" := USERID;
               IF "Entry No." = 0 THEN
                 "Entry No." := GetNextEntryNo;

               GetGLSetup;
               DimMgt.GetDimensionSet(TempDimSetEntry,"Dimension Set ID");
               UpdateDimSet(TempDimSetEntry,GLSetup."Global Dimension 1 Code","Global Dimension 1 Code");
               UpdateDimSet(TempDimSetEntry,GLSetup."Global Dimension 2 Code","Global Dimension 2 Code");
               UpdateDimSet(TempDimSetEntry,ItemBudgetName."Budget Dimension 1 Code","Budget Dimension 1 Code");
               UpdateDimSet(TempDimSetEntry,ItemBudgetName."Budget Dimension 2 Code","Budget Dimension 2 Code");
               UpdateDimSet(TempDimSetEntry,ItemBudgetName."Budget Dimension 3 Code","Budget Dimension 3 Code");
               "Dimension Set ID" := DimMgt.GetDimensionSetID(TempDimSetEntry);
             END;

    OnModify=VAR
               TempDimSetEntry@1000 : TEMPORARY Record 480;
             BEGIN
               CheckIfBlocked;
               "User ID" := USERID;
               GetGLSetup;

               DimMgt.GetDimensionSet(TempDimSetEntry,"Dimension Set ID");
               IF "Global Dimension 1 Code" <> xRec."Global Dimension 1 Code" THEN
                 UpdateDimSet(TempDimSetEntry,GLSetup."Global Dimension 1 Code","Global Dimension 1 Code");
               IF "Global Dimension 2 Code" <> xRec."Global Dimension 2 Code" THEN
                 UpdateDimSet(TempDimSetEntry,GLSetup."Global Dimension 2 Code","Global Dimension 2 Code");
               IF "Budget Dimension 1 Code" <> xRec."Budget Dimension 1 Code" THEN
                 UpdateDimSet(TempDimSetEntry,ItemBudgetName."Budget Dimension 1 Code","Budget Dimension 1 Code");
               IF "Budget Dimension 2 Code" <> xRec."Budget Dimension 2 Code" THEN
                 UpdateDimSet(TempDimSetEntry,ItemBudgetName."Budget Dimension 2 Code","Budget Dimension 2 Code");
               IF "Budget Dimension 3 Code" <> xRec."Budget Dimension 3 Code" THEN
                 UpdateDimSet(TempDimSetEntry,ItemBudgetName."Budget Dimension 3 Code","Budget Dimension 3 Code");
               "Dimension Set ID" := DimMgt.GetDimensionSetID(TempDimSetEntry);
             END;

    OnDelete=BEGIN
               CheckIfBlocked;
               DeleteItemAnalysisViewBudgEntry;
             END;

    CaptionML=[ENU=Item Budget Entry;
               NOR=Varebudsjettpost];
    LookupPageID=Page7133;
    DrillDownPageID=Page7133;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              NOR=L›penr.;
                                                              SVE=L”pnr] }
    { 2   ;   ;Analysis Area       ;Option        ;CaptionML=[ENU=Analysis Area;
                                                              NOR=Analyseomr†de;
                                                              SVE=Analysomr†de];
                                                   OptionCaptionML=[ENU=Sales,Purchase;
                                                                    NOR=Salg,Kj›p;
                                                                    SVE=F”rs„ljning,Ink”p];
                                                   OptionString=Sales,Purchase;
                                                   NotBlank=Yes }
    { 3   ;   ;Budget Name         ;Code10        ;TableRelation="Item Budget Name".Name WHERE (Analysis Area=FIELD(Analysis Area));
                                                   CaptionML=[ENU=Budget Name;
                                                              NOR=Budsjettnavn;
                                                              SVE=Budgetnamn] }
    { 4   ;   ;Date                ;Date          ;CaptionML=[ENU=Date;
                                                              NOR=Dato;
                                                              SVE=Datum];
                                                   ClosingDates=Yes }
    { 5   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Varenr.;
                                                              SVE=Artikelnr] }
    { 6   ;   ;Source Type         ;Option        ;OnValidate=BEGIN
                                                                IF "Source Type" <> xRec."Source Type" THEN
                                                                  VALIDATE("Source No.",'');
                                                              END;

                                                   CaptionML=[ENU=Source Type;
                                                              NOR=Kildetype;
                                                              SVE=Ursprungstyp];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Item";
                                                                    NOR=" ,Kunde,Leverand›r,Vare";
                                                                    SVE=" ,Kund,Leverant”r,Artikel"];
                                                   OptionString=[ ,Customer,Vendor,Item] }
    { 7   ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Customer)) Customer
                                                                 ELSE IF (Source Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Source Type=CONST(Item)) Item;
                                                   CaptionML=[ENU=Source No.;
                                                              NOR=Kildenr.;
                                                              SVE=Ursprungsnr] }
    { 8   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 9   ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5 }
    { 10  ;   ;Cost Amount         ;Decimal       ;CaptionML=[ENU=Cost Amount;
                                                              NOR=Kostbel›p;
                                                              SVE=Kostnadsbelopp];
                                                   AutoFormatType=1 }
    { 11  ;   ;Sales Amount        ;Decimal       ;CaptionML=[ENU=Sales Amount;
                                                              NOR=Salgsbel›p;
                                                              SVE=F”rs„ljningsbelopp];
                                                   AutoFormatType=1 }
    { 13  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[ENU=User ID;
                                                              NOR=Bruker-ID;
                                                              SVE=Anv„ndar-ID];
                                                   Editable=No }
    { 14  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              NOR=Lokasjonskode;
                                                              SVE=Lagerst„llekod] }
    { 15  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                IF "Global Dimension 1 Code" = '' THEN
                                                                  EXIT;
                                                                GetGLSetup;
                                                                ValidateDimValue(GLSetup."Global Dimension 1 Code","Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Global dimensjon 1 - kode;
                                                              SVE=Avdelningskod];
                                                   CaptionClass='1,1,1' }
    { 16  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                IF "Global Dimension 2 Code" = '' THEN
                                                                  EXIT;
                                                                GetGLSetup;
                                                                ValidateDimValue(GLSetup."Global Dimension 2 Code","Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Global dimensjon 2 - kode;
                                                              SVE=Global dimension 2 kod];
                                                   CaptionClass='1,1,2' }
    { 17  ;   ;Budget Dimension 1 Code;Code20     ;OnValidate=BEGIN
                                                                IF "Budget Dimension 1 Code" = '' THEN
                                                                  EXIT;
                                                                IF ItemBudgetName.Name <> "Budget Name" THEN
                                                                  ItemBudgetName.GET("Analysis Area","Budget Name");
                                                                ValidateDimValue(ItemBudgetName."Budget Dimension 1 Code","Budget Dimension 1 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              "Budget Dimension 1 Code" := OnLookupDimCode(2,"Budget Dimension 1 Code");
                                                            END;

                                                   AccessByPermission=TableData 348=R;
                                                   CaptionML=[ENU=Budget Dimension 1 Code;
                                                              NOR=Budsjettdim. 1 - kode;
                                                              SVE=Budget dimension 1 kod];
                                                   CaptionClass=GetCaptionClass(1) }
    { 18  ;   ;Budget Dimension 2 Code;Code20     ;OnValidate=BEGIN
                                                                IF "Budget Dimension 2 Code" = '' THEN
                                                                  EXIT;
                                                                IF ItemBudgetName.Name <> "Budget Name" THEN
                                                                  ItemBudgetName.GET("Analysis Area","Budget Name");
                                                                ValidateDimValue(ItemBudgetName."Budget Dimension 2 Code","Budget Dimension 2 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              "Budget Dimension 2 Code" := OnLookupDimCode(3,"Budget Dimension 2 Code");
                                                            END;

                                                   AccessByPermission=TableData 348=R;
                                                   CaptionML=[ENU=Budget Dimension 2 Code;
                                                              NOR=Budsjettdim. 2 - kode;
                                                              SVE=Budget dimension 2 kod];
                                                   CaptionClass=GetCaptionClass(2) }
    { 19  ;   ;Budget Dimension 3 Code;Code20     ;OnValidate=BEGIN
                                                                IF "Budget Dimension 3 Code" = '' THEN
                                                                  EXIT;
                                                                IF ItemBudgetName.Name <> "Budget Name" THEN
                                                                  ItemBudgetName.GET("Analysis Area","Budget Name");
                                                                ValidateDimValue(ItemBudgetName."Budget Dimension 3 Code","Budget Dimension 3 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              "Budget Dimension 3 Code" := OnLookupDimCode(4,"Budget Dimension 3 Code");
                                                            END;

                                                   AccessByPermission=TableData 350=R;
                                                   CaptionML=[ENU=Budget Dimension 3 Code;
                                                              NOR=Budsjettdim. 3 - kode;
                                                              SVE=Budget dimension 3 kod];
                                                   CaptionClass=GetCaptionClass(3) }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              NOR=Dimensjonssett-ID;
                                                              SVE=Dimensionsupps„ttnings-ID];
                                                   Editable=No }
    { 11012000;;Forecast Code      ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item."Forecast Code" WHERE (No.=FIELD(Item No.)));
                                                   CaptionML=ENU=Forecast Code;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Analysis Area,Budget Name,Item No.,Source Type,Source No.,Date,Location Code,Global Dimension 1 Code,Global Dimension 2 Code,Budget Dimension 1 Code,Budget Dimension 2 Code,Budget Dimension 3 Code;
                                                   SumIndexFields=Cost Amount,Sales Amount,Quantity }
    {    ;Analysis Area,Budget Name,Source Type,Source No.,Item No.,Date,Location Code,Global Dimension 1 Code,Global Dimension 2 Code,Budget Dimension 1 Code,Budget Dimension 2 Code,Budget Dimension 3 Code;
                                                   SumIndexFields=Cost Amount,Sales Amount,Quantity }
    {    ;Analysis Area,Budget Name,Item No.,Date  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The dimension value %1 has not been set up for dimension %2.;NOR=Dimensjonsverdien %1 er ikke opprettet for dimensjon %2.;SVE=Dimensionsv„rdet %1 har inte lagts upp f”r dimension %2.';
      Text001@1001 : TextConst 'ENU=1,5,,Budget Dimension 1 Code;NOR=1,5,,Budsjettdim. 1 - kode;SVE=1,5,,Budget Dimension 1 kod';
      Text002@1002 : TextConst 'ENU=1,5,,Budget Dimension 2 Code;NOR=1,5,,Budsjettdim. 2 - kode;SVE=1,5,,Budget Dimension 2 kod';
      Text003@1003 : TextConst 'ENU=1,5,,Budget Dimension 3 Code;NOR=1,5,,Budsjettdim. 3 - kode;SVE=1,5,,Budget Dimension 3 kod';
      ItemBudgetName@1005 : Record 7132;
      GLSetup@1006 : Record 98;
      InventorySetup@1008 : Record 313;
      SalesSetup@1011 : Record 311;
      DimVal@1009 : Record 349;
      DimMgt@1004 : Codeunit 408;
      GLSetupRetrieved@1007 : Boolean;
      InventorySetupRetrieved@1010 : Boolean;
      SalesSetupRetrieved@1012 : Boolean;
      DPA_Management@1100000999 : Codeunit 11012783;

    LOCAL PROCEDURE CheckIfBlocked@1();
    BEGIN
      IF "Budget Name" = ItemBudgetName.Name THEN
        EXIT;
      IF ItemBudgetName.Name <> "Budget Name" THEN
        ItemBudgetName.GET("Analysis Area","Budget Name");
      ItemBudgetName.TESTFIELD(Blocked,FALSE);
    END;

    LOCAL PROCEDURE ValidateDimValue@5(DimCode@1000 : Code[20];VAR DimValueCode@1001 : Code[20]);
    VAR
      DimValue@1002 : Record 349;
    BEGIN
      DimValue."Dimension Code" := DimCode;
      DimValue.Code := DimValueCode;
      DimValue.FIND('=><');
      IF DimValueCode <> COPYSTR(DimValue.Code,1,STRLEN(DimValueCode)) THEN
        ERROR(Text000,DimValueCode,DimCode);
      DimValueCode := DimValue.Code;
    END;

    LOCAL PROCEDURE GetGLSetup@2();
    BEGIN
      IF NOT GLSetupRetrieved THEN BEGIN
        GLSetup.GET;
        GLSetupRetrieved := TRUE;
      END;
    END;

    LOCAL PROCEDURE GetInventorySetup@8();
    BEGIN
      IF NOT InventorySetupRetrieved THEN BEGIN
        InventorySetup.GET;
        InventorySetupRetrieved := TRUE;
      END;
    END;

    LOCAL PROCEDURE GetSalesSetup@9();
    BEGIN
      IF NOT SalesSetupRetrieved THEN BEGIN
        SalesSetup.GET;
        SalesSetupRetrieved := TRUE;
      END;
    END;

    LOCAL PROCEDURE OnLookupDimCode@3(DimOption@1000 : 'Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3,Budget Dimension 4';DefaultValue@1001 : Code[20]) : Code[20];
    VAR
      DimValue@1002 : Record 349;
      DimValueList@1003 : Page 560;
    BEGIN
      IF DimOption IN [DimOption::"Global Dimension 1",DimOption::"Global Dimension 2"] THEN
        GetGLSetup
      ELSE
        IF ItemBudgetName.Name <> "Budget Name" THEN
          ItemBudgetName.GET("Analysis Area","Budget Name");
      CASE DimOption OF
        DimOption::"Global Dimension 1":
          DimValue."Dimension Code" := GLSetup."Global Dimension 1 Code";
        DimOption::"Global Dimension 2":
          DimValue."Dimension Code" := GLSetup."Global Dimension 2 Code";
        DimOption::"Budget Dimension 1":
          DimValue."Dimension Code" := ItemBudgetName."Budget Dimension 1 Code";
        DimOption::"Budget Dimension 2":
          DimValue."Dimension Code" := ItemBudgetName."Budget Dimension 2 Code";
        DimOption::"Budget Dimension 3":
          DimValue."Dimension Code" := ItemBudgetName."Budget Dimension 3 Code";
      END;
      DimValue.SETRANGE("Dimension Code",DimValue."Dimension Code");
      IF DimValue.GET(DimValue."Dimension Code",DefaultValue) THEN;
      DimValueList.SETTABLEVIEW(DimValue);
      DimValueList.SETRECORD(DimValue);
      DimValueList.LOOKUPMODE := TRUE;
      IF DimValueList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValueList.GETRECORD(DimValue);
        EXIT(DimValue.Code);
      END;
      EXIT(DefaultValue);
    END;

    LOCAL PROCEDURE GetNextEntryNo@4() : Integer;
    VAR
      ItemBudgetEntry@1000 : Record 7134;
    BEGIN
      ItemBudgetEntry.SETCURRENTKEY("Entry No.");
      IF ItemBudgetEntry.FINDLAST THEN
        EXIT(ItemBudgetEntry."Entry No." + 1);

      EXIT(1);
    END;

    [External]
    PROCEDURE GetCaptionClass@7(BudgetDimType@1000 : Integer) : Text[250];
    BEGIN
      IF (ItemBudgetName."Analysis Area" <> "Analysis Area") OR
         (ItemBudgetName.Name <> "Budget Name")
      THEN
        IF NOT ItemBudgetName.GET("Analysis Area","Budget Name") THEN
          EXIT('');
      CASE BudgetDimType OF
        1:
          BEGIN
            IF ItemBudgetName."Budget Dimension 1 Code" <> '' THEN
              EXIT('1,5,' + ItemBudgetName."Budget Dimension 1 Code");
            EXIT(Text001);
          END;
        2:
          BEGIN
            IF ItemBudgetName."Budget Dimension 2 Code" <> '' THEN
              EXIT('1,5,' + ItemBudgetName."Budget Dimension 2 Code");
            EXIT(Text002);
          END;
        3:
          BEGIN
            IF ItemBudgetName."Budget Dimension 3 Code" <> '' THEN
              EXIT('1,5,' + ItemBudgetName."Budget Dimension 3 Code");
            EXIT(Text003);
          END;
      END;
    END;

    LOCAL PROCEDURE CheckGroupDimFilled@10(GroupDimCode@1000 : Code[20]) : Boolean;
    BEGIN
      IF GroupDimCode <> '' THEN
        CASE GroupDimCode OF
          GLSetup."Global Dimension 1 Code":
            EXIT("Global Dimension 1 Code" <> '');
          GLSetup."Global Dimension 2 Code":
            EXIT("Global Dimension 2 Code" <> '');
          ItemBudgetName."Budget Dimension 1 Code":
            EXIT("Budget Dimension 1 Code" <> '');
          ItemBudgetName."Budget Dimension 2 Code":
            EXIT("Budget Dimension 2 Code" <> '');
          ItemBudgetName."Budget Dimension 3 Code":
            EXIT("Budget Dimension 3 Code" <> '');
        END;
    END;

    [External]
    PROCEDURE GetCaption@11() : Text[1024];
    VAR
      GLSetup@1008 : Record 98;
      ItemBudgetName@1009 : Record 7132;
      Cust@1000 : Record 18;
      Vend@1004 : Record 23;
      Item@1005 : Record 27;
      Dimension@1007 : Record 348;
      DimValue@1006 : Record 349;
      SourceTableCaption@1001 : Text[250];
      SourceFilter@1002 : Text;
      Description@1003 : Text[250];
    BEGIN
      CASE TRUE OF
        GETFILTER("Source No.") <> '':
          CASE "Source Type" OF
            "Source Type"::Customer:
              BEGIN
                SourceTableCaption := Cust.TABLECAPTION;
                SourceFilter := GETFILTER("Source No.");
                IF MAXSTRLEN(Cust."No.") >= STRLEN(SourceFilter) THEN
                  IF Cust.GET(SourceFilter) THEN
                    Description := Cust.Name;
              END;
            "Source Type"::Vendor:
              BEGIN
                SourceTableCaption := Vend.TABLECAPTION;
                SourceFilter := GETFILTER("Source No.");
                IF MAXSTRLEN(Vend."No.") >= STRLEN(SourceFilter) THEN
                  IF Vend.GET(SourceFilter) THEN
                    Description := Vend.Name;
              END;
          END;
        GETFILTER("Item No.") <> '':
          BEGIN
            SourceTableCaption := Item.TABLECAPTION;
            SourceFilter := GETFILTER("Item No.");
            IF MAXSTRLEN(Item."No.") >= STRLEN(SourceFilter) THEN
              IF Item.GET(SourceFilter) THEN
                Description := Item.Description;
          END;
        GETFILTER("Global Dimension 1 Code") <> '':
          BEGIN
            GLSetup.GET;
            Dimension.Code := GLSetup."Global Dimension 1 Code";
            SourceFilter := GETFILTER("Global Dimension 1 Code");
            SourceTableCaption := Dimension.GetMLName(GLOBALLANGUAGE);
            IF MAXSTRLEN(DimValue.Code) >= STRLEN(SourceFilter) THEN
              IF DimValue.GET(GLSetup."Global Dimension 1 Code",SourceFilter) THEN
                Description := DimValue.Name;
          END;
        GETFILTER("Global Dimension 2 Code") <> '':
          BEGIN
            GLSetup.GET;
            Dimension.Code := GLSetup."Global Dimension 2 Code";
            SourceFilter := GETFILTER("Global Dimension 2 Code");
            SourceTableCaption := Dimension.GetMLName(GLOBALLANGUAGE);
            IF MAXSTRLEN(DimValue.Code) >= STRLEN(SourceFilter) THEN
              IF DimValue.GET(GLSetup."Global Dimension 2 Code",SourceFilter) THEN
                Description := DimValue.Name;
          END;
        GETFILTER("Budget Dimension 1 Code") <> '':
          IF ItemBudgetName.GET("Analysis Area","Budget Name") THEN BEGIN
            Dimension.Code := ItemBudgetName."Budget Dimension 1 Code";
            SourceFilter := GETFILTER("Budget Dimension 1 Code");
            SourceTableCaption := Dimension.GetMLName(GLOBALLANGUAGE);
            IF MAXSTRLEN(DimValue.Code) >= STRLEN(SourceFilter) THEN
              IF DimValue.GET(ItemBudgetName."Budget Dimension 1 Code",SourceFilter) THEN
                Description := DimValue.Name;
          END;
        GETFILTER("Budget Dimension 2 Code") <> '':
          IF ItemBudgetName.GET("Analysis Area","Budget Name") THEN BEGIN
            Dimension.Code := ItemBudgetName."Budget Dimension 2 Code";
            SourceFilter := GETFILTER("Budget Dimension 2 Code");
            SourceTableCaption := Dimension.GetMLName(GLOBALLANGUAGE);
            IF MAXSTRLEN(DimValue.Code) >= STRLEN(SourceFilter) THEN
              IF DimValue.GET(ItemBudgetName."Budget Dimension 2 Code",SourceFilter) THEN
                Description := DimValue.Name;
          END;
        GETFILTER("Budget Dimension 3 Code") <> '':
          IF ItemBudgetName.GET("Analysis Area","Budget Name") THEN BEGIN
            Dimension.Code := ItemBudgetName."Budget Dimension 3 Code";
            SourceFilter := GETFILTER("Budget Dimension 3 Code");
            SourceTableCaption := Dimension.GetMLName(GLOBALLANGUAGE);
            IF MAXSTRLEN(DimValue.Code) >= STRLEN(SourceFilter) THEN
              IF DimValue.GET(ItemBudgetName."Budget Dimension 3 Code",SourceFilter) THEN
                Description := DimValue.Name;
          END;
      END;

      EXIT(
        DELCHR(
          STRSUBSTNO('%1 %2 %3 %4',SourceTableCaption,SourceFilter,Description,"Budget Name"),
          '>'));
    END;

    [External]
    PROCEDURE ShowDimensions@12();
    VAR
      DimSetEntry@1001 : Record 480;
      OldDimSetID@1000 : Integer;
    BEGIN
      DimMgt.SetTableID(DATABASE::"Item Budget Entry"); //**4PS.n
      OldDimSetID := "Dimension Set ID";
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2 %3',"Budget Name","Item No.",Date));

      IF OldDimSetID = "Dimension Set ID" THEN
        EXIT;

      GetGLSetup;
      ItemBudgetName.GET("Analysis Area","Budget Name");

      "Global Dimension 1 Code" := '';
      "Global Dimension 2 Code" := '';
      "Budget Dimension 1 Code" := '';
      "Budget Dimension 2 Code" := '';
      "Budget Dimension 3 Code" := '';

      IF DimSetEntry.GET("Dimension Set ID",GLSetup."Global Dimension 1 Code") THEN
        "Global Dimension 1 Code" := DimSetEntry."Dimension Value Code";
      IF DimSetEntry.GET("Dimension Set ID",GLSetup."Global Dimension 2 Code") THEN
        "Global Dimension 2 Code" := DimSetEntry."Dimension Value Code";
      IF DimSetEntry.GET("Dimension Set ID",ItemBudgetName."Budget Dimension 1 Code") THEN
        "Budget Dimension 1 Code" := DimSetEntry."Dimension Value Code";
      IF DimSetEntry.GET("Dimension Set ID",ItemBudgetName."Budget Dimension 2 Code") THEN
        "Budget Dimension 2 Code" := DimSetEntry."Dimension Value Code";
      IF DimSetEntry.GET("Dimension Set ID",ItemBudgetName."Budget Dimension 3 Code") THEN
        "Budget Dimension 3 Code" := DimSetEntry."Dimension Value Code";
    END;

    LOCAL PROCEDURE UpdateDimSet@13(VAR TempDimSetEntry@1003 : TEMPORARY Record 480;DimCode@1000 : Code[20];DimValueCode@1001 : Code[20]);
    BEGIN
      IF DimCode = '' THEN
        EXIT;
      IF TempDimSetEntry.GET("Dimension Set ID",DimCode) THEN
        TempDimSetEntry.DELETE;
      IF DimValueCode <> '' THEN BEGIN
        DimVal.GET(DimCode,DimValueCode);
        TempDimSetEntry.INIT;
        TempDimSetEntry."Dimension Set ID" := "Dimension Set ID";
        TempDimSetEntry."Dimension Code" := DimCode;
        TempDimSetEntry."Dimension Value Code" := DimValueCode;
        TempDimSetEntry."Dimension Value ID" := DimVal."Dimension Value ID";
        TempDimSetEntry.INSERT;
      END;
    END;

    LOCAL PROCEDURE DeleteItemAnalysisViewBudgEntry@6();
    VAR
      ItemAnalysisViewBudgEntry@1000 : Record 7156;
    BEGIN
      ItemAnalysisViewBudgEntry.SETRANGE("Entry No.","Entry No.");
      ItemAnalysisViewBudgEntry.SETRANGE("Analysis Area","Analysis Area");
      ItemAnalysisViewBudgEntry.SETRANGE("Budget Name","Budget Name");
      ItemAnalysisViewBudgEntry.DELETEALL;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(7134) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 7134');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::"Item Budget Entry", "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    BEGIN
    END.
  }
}

