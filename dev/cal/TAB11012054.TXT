OBJECT Table 11012054 Perc. Progress by Level
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=% Progress by Level;
               NOR=Prosent, Fremdrift etter niv†;
               SVE=Procent, f”rlopp efter niv†];
  }
  FIELDS
  {
    { 10  ;   ;Project No.         ;Code20        ;TableRelation=Job.No.;
                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes }
    { 20  ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 30  ;   ;Progress Date       ;Date          ;TableRelation="Progress Level"."Progress Date" WHERE (Project No.=FIELD(Project No.));
                                                   OnValidate=BEGIN
                                                                //PrevProgrDateFilter := '<'+FORMAT("Progress Date"); //C017374.o
                                                              END;

                                                   CaptionML=[ENU=Progress Date;
                                                              NOR=Fremdriftsdato;
                                                              SVE=F”rloppsdatum];
                                                   NotBlank=Yes }
    { 40  ;   ;Level               ;Option        ;CaptionML=[ENU=Level;
                                                              NOR=Niv†;
                                                              SVE=Niv†];
                                                   OptionCaptionML=[ENU=Project,Element,Cost Type - Element,Cost Component,Element - Cost Object,Element - Cost Object - Plot;
                                                                    NOR=Prosjekt,Element,Kostnadstype Í Element,Kostdel;
                                                                    SVE=Projekt,Element,Kostnadstyp - element,Kostnadsdel,Element - Kostnandsobjekt,Element - Kostnandsobjekt - Ritning];
                                                   OptionString=Project,Element,Cost Type - Element,Cost Component,Element - Cost Object,Element - Cost Object - Plot }
    { 50  ;   ;Element             ;Code20        ;TableRelation="Project Element".Element WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Element;
                                                              NOR=Element;
                                                              SVE=Element] }
    { 60  ;   ;Element Description ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Project Element".Description WHERE (Project No.=FIELD(Project No.),
                                                                                                           Element=FIELD(Element)));
                                                   CaptionML=[ENU=Element Description;
                                                              NOR=Elementbeskrivelse;
                                                              SVE=Elementbeskrivning];
                                                   Editable=No }
    { 70  ;   ;Cost Type           ;Option        ;CaptionML=[ENU=Cost Type;
                                                              NOR=Kosttype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=Labor,Material,Subcontracting,Plant,Sundry;
                                                                    NOR=Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse;
                                                                    SVE=Arbetskraft,Material,Underentreprenad,Maskin,Diverse];
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry;
                                                   Editable=No }
    { 80  ;   ;Cumulative Progress %;Decimal      ;OnValidate=BEGIN
                                                                IF "Cumulative Progress %" > 100 THEN
                                                                  CheckProgress;

                                                                CALCFIELDS("Prev.Cumulative Progr.%");
                                                                "Period Progress %" := "Cumulative Progress %" - "Prev.Cumulative Progr.%";
                                                              END;

                                                   CaptionML=[ENU=Cumulative Progress %;
                                                              NOR=Akkumulert Fremdrift %;
                                                              SVE=Ackumulerad f”rloppsprocent] }
    { 90  ;   ;Period Progress %   ;Decimal       ;OnValidate=BEGIN
                                                                CALCFIELDS("Prev.Cumulative Progr.%");
                                                                "Cumulative Progress %" := "Prev.Cumulative Progr.%" + "Period Progress %";

                                                                VALIDATE("Cumulative Progress %");
                                                              END;

                                                   CaptionML=[ENU=Period Progress %;
                                                              NOR=Periodens Fremdrift %;
                                                              SVE=Periodens f”rlopp %] }
    { 110 ;   ;Previous Date       ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Max("Perc. Progress by Level"."Progress Date" WHERE (Project No.=FIELD(Project No.),
                                                                                                                    Level=FIELD(Level),
                                                                                                                    Element=FIELD(Element),
                                                                                                                    Cost Type=FIELD(Cost Type),
                                                                                                                    Cost Component=FIELD(Cost Component),
                                                                                                                    Global Dimension 2 Code=FIELD(Global Dimension 2 Code),
                                                                                                                    Plot No.=FIELD(Plot No.),
                                                                                                                    Progress Date=FIELD(Previous Date Filter)));
                                                   CaptionML=[ENU=Previous Date;
                                                              NOR=Forrige dato;
                                                              SVE=F”reg†ende datum];
                                                   Editable=No }
    { 111 ;   ;Previous Date Filter;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Previous Date Flter;
                                                   Description=C017374 }
    { 120 ;   ;Prev.Cumulative Progr.%;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Perc. Progress by Level"."Cumulative Progress %" WHERE (Project No.=FIELD(Project No.),
                                                                                                                               Level=FIELD(Level),
                                                                                                                               Element=FIELD(Element),
                                                                                                                               Cost Type=FIELD(Cost Type),
                                                                                                                               Cost Component=FIELD(Cost Component),
                                                                                                                               Global Dimension 2 Code=FIELD(Global Dimension 2 Code),
                                                                                                                               Plot No.=FIELD(Plot No.),
                                                                                                                               Progress Date=FIELD(Previous Date)));
                                                   CaptionML=[ENU=Prev.Cumulative Progr.%;
                                                              NOR=Forrige akkumulerte fremdrift %;
                                                              SVE=F”reg. ackumulerat f”rlopp %];
                                                   Editable=No }
    { 130 ;   ;Process             ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Process;
                                                              NOR=Process;
                                                              SVE=Process] }
    { 140 ;   ;Cost Component      ;Code10        ;TableRelation="Cost Component";
                                                   CaptionML=[ENU=Cost Component;
                                                              NOR=Kostnadskomponent;
                                                              SVE=Kostnadsdel] }
    { 150 ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              SVE=Global dimension 2 kod];
                                                   CaptionClass='1,1,2' }
    { 160 ;   ;Plot No.            ;Code10        ;TableRelation=Plot."Plot No." WHERE (Project No.=FIELD(Project No.));
                                                   CaptionML=[ENU=Plot No.;
                                                              SVE=Ritningnr] }
  }
  KEYS
  {
    {    ;Project No.,Progress Date,Level,Element,Cost Type,Cost Component,Global Dimension 2 Code,Plot No.;
                                                   Clustered=Yes }
    {    ;Progress Date                            }
    {    ;Project No.,Progress Date,Level,Cost Type,Element }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProjectSetup@11012000 : Record 315;
      Text001@1100485000 : TextConst 'ENU=%1 may not exceed 100%;NOR=%1 kan ikke overstige 100 %;SVE=%1 f†r inte ”verstiga 100 %';

    PROCEDURE CheckProgress@11();
    BEGIN
      ProjectSetup.GET;
      IF ProjectSetup."Progress Range" = ProjectSetup."Progress Range"::"No Progress Max. Allowed Max 100 %" THEN
        EXIT;

      IF "Cumulative Progress %" > 100 THEN
        ERROR(Text001,FIELDCAPTION("Cumulative Progress %"));
    END;

    PROCEDURE SetPreviousDateFilter@1100528000();
    VAR
      Progress@1100528500 : Record 11012036;
    BEGIN
      //C017374
      SETRANGE("Previous Date Filter",0D);

      IF Progress.GET("Project No.","Progress Date") THEN
        IF Progress.NEXT(-1) <> 0 THEN
          SETFILTER("Previous Date Filter",FORMAT(Progress."Progress Date"));
    END;

    PROCEDURE CopyPreviousPercProgressToCurrentProgressDate@1100528400();
    VAR
      PreviousProgressDate@1100528400 : Date;
    BEGIN
      //Assumption: Records have been created for current progress date and required level.
      PreviousProgressDate := GetPreviousDate;
      CASE Level OF
        Level::Project:
          ;
        Level::Element:
          IF NOT PreviousPercProgressByLevelExists(PreviousProgressDate, Level::Element) THEN
            IF PreviousPercProgressByLevelExists(PreviousProgressDate, Level::Project) THEN
              CopyPreviousPercProgressToLowerLevel(PreviousProgressDate, Level::Project, Level::Element);
        Level::"Cost Type - Element":
          IF NOT PreviousPercProgressByLevelExists(PreviousProgressDate, Level::"Cost Type - Element") THEN
            IF PreviousPercProgressByLevelExists(PreviousProgressDate, Level::Element) THEN
              CopyPreviousPercProgressToLowerLevel(PreviousProgressDate, Level::Element, Level::"Cost Type - Element")
            ELSE
              IF PreviousPercProgressByLevelExists(PreviousProgressDate, Level::Project) THEN
                CopyPreviousPercProgressToLowerLevel(PreviousProgressDate, Level::Project, Level::"Cost Type - Element");
        Level::"Cost Component":
          IF NOT PreviousPercProgressByLevelExists(PreviousProgressDate, Level::"Cost Component") THEN
            IF PreviousPercProgressByLevelExists(PreviousProgressDate, Level::Project) THEN
              CopyPreviousPercProgressToLowerLevel(PreviousProgressDate, Level::Project, Level::"Cost Component");
        Level::"Element - Cost Object":
          IF NOT PreviousPercProgressByLevelExists(PreviousProgressDate, Level::"Element - Cost Object") THEN
            IF PreviousPercProgressByLevelExists(PreviousProgressDate, Level::Element) THEN
              CopyPreviousPercProgressToLowerLevel(PreviousProgressDate, Level::Element, Level::"Element - Cost Object")
            ELSE
              IF PreviousPercProgressByLevelExists(PreviousProgressDate, Level::Project) THEN
                CopyPreviousPercProgressToLowerLevel(PreviousProgressDate, Level::Project, Level::"Element - Cost Object");
        Level::"Element - Cost Object - Plot":
          IF NOT PreviousPercProgressByLevelExists(PreviousProgressDate, Level::"Element - Cost Object - Plot") THEN
            IF PreviousPercProgressByLevelExists(PreviousProgressDate, Level::"Element - Cost Object") THEN
              CopyPreviousPercProgressToLowerLevel(
                PreviousProgressDate, Level::"Element - Cost Object", Level::"Element - Cost Object - Plot")
            ELSE
              IF PreviousPercProgressByLevelExists(PreviousProgressDate, Level::Element) THEN
                CopyPreviousPercProgressToLowerLevel(
                  PreviousProgressDate, Level::Element, Level::"Element - Cost Object - Plot")
              ELSE
                IF PreviousPercProgressByLevelExists(PreviousProgressDate, Level::Project) THEN
                  CopyPreviousPercProgressToLowerLevel(
                    PreviousProgressDate, Level::Project, Level::"Element - Cost Object - Plot");
      END;
      CopyPreviousPercProgressToCurrentProgressDateOnSameLevel;
    END;

    LOCAL PROCEDURE GetPreviousDate@1100528401() : Date;
    VAR
      PercProgressbyLevel@1100528400 : Record 11012054;
      ProgressLevel@1100528401 : Record 11012036;
    BEGIN
      PercProgressbyLevel.COPY(Rec);
      PercProgressbyLevel.SetPreviousDateFilter;
      ProgressLevel.SETRANGE("Project No.", PercProgressbyLevel."Project No.");
      ProgressLevel.SETFILTER("Progress Date", PercProgressbyLevel.GETFILTER("Previous Date Filter"));
      IF ProgressLevel.FINDFIRST THEN
        EXIT(ProgressLevel."Progress Date");
    END;

    LOCAL PROCEDURE PreviousPercProgressByLevelExists@1100528402(PreviousProgressDate@1100528403 : Date;Level2@1100528401 : Integer) PercProgressExists : Boolean;
    VAR
      PercProgressbyLevel@1100528400 : Record 11012054;
    BEGIN
      PercProgressbyLevel.SETRANGE("Project No.", "Project No." );
      PercProgressbyLevel.SETRANGE("Progress Date", PreviousProgressDate);
      PercProgressbyLevel.SETRANGE(Level, Level2);
      PercProgressbyLevel.SETFILTER("Cumulative Progress %", '<>%1', 0);
      EXIT(NOT PercProgressbyLevel.ISEMPTY);
    END;

    LOCAL PROCEDURE CopyPreviousPercProgressToLowerLevel@1100528403(PreviousProgressDate@1100528402 : Date;LevelFrom@1100528405 : Integer;LevelTo@1100528406 : Integer);
    VAR
      PercProgressByLevelFrom@1100528403 : Record 11012054;
      CurrentPercProgressByLevel@1100528400 : Record 11012054;
      PercProgressByLevelTo@1100528401 : Record 11012054;
      PercProgressExists@1100528404 : Boolean;
    BEGIN
      PercProgressByLevelFrom.SETRANGE("Project No.", "Project No.");
      PercProgressByLevelFrom.SETRANGE("Progress Date", PreviousProgressDate);
      PercProgressByLevelFrom.SETRANGE(Level, LevelFrom);
      IF PercProgressByLevelFrom.FINDSET THEN
        REPEAT
          CurrentPercProgressByLevel.SETRANGE("Project No.", PercProgressByLevelFrom."Project No.");
          CurrentPercProgressByLevel.SETRANGE("Progress Date", "Progress Date");
          CurrentPercProgressByLevel.SETRANGE(Level, LevelTo);
          IF LevelFrom IN [Level::Element, Level::"Element - Cost Object"] THEN
            CurrentPercProgressByLevel.SETRANGE(Element, PercProgressByLevelFrom.Element);
          IF LevelFrom = Level::"Element - Cost Object" THEN
            CurrentPercProgressByLevel.SETRANGE("Global Dimension 2 Code", PercProgressByLevelFrom."Global Dimension 2 Code");
          IF CurrentPercProgressByLevel.FINDSET THEN
            REPEAT
              PercProgressByLevelTo := CurrentPercProgressByLevel;
              PercProgressByLevelTo."Progress Date" := PreviousProgressDate;
              PercProgressByLevelTo.SetPreviousDateFilter;
              PercProgressByLevelTo.CALCFIELDS("Previous Date");
              PercProgressByLevelTo.CALCFIELDS("Prev.Cumulative Progr.%");
              PercProgressExists := PercProgressByLevelTo.FIND;
              PercProgressByLevelTo.VALIDATE("Cumulative Progress %", PercProgressByLevelFrom."Cumulative Progress %");
              IF PercProgressExists THEN
                PercProgressByLevelTo.MODIFY(TRUE)
              ELSE
                PercProgressByLevelTo.INSERT(TRUE);
            UNTIL CurrentPercProgressByLevel.NEXT = 0;
        UNTIL PercProgressByLevelFrom.NEXT = 0;
    END;

    LOCAL PROCEDURE CopyPreviousPercProgressToCurrentProgressDateOnSameLevel@1100528404();
    VAR
      PercProgressbyLevel@1100528400 : Record 11012054;
    BEGIN
      PercProgressbyLevel.SETRANGE("Project No.", "Project No.");
      PercProgressbyLevel.SETRANGE("Progress Date", "Progress Date");
      PercProgressbyLevel.SETRANGE(Level, Level);
      IF PercProgressbyLevel.FINDSET THEN
        REPEAT
          PercProgressbyLevel.SetPreviousDateFilter;
          PercProgressbyLevel.CALCFIELDS("Previous Date");
          PercProgressbyLevel.CALCFIELDS("Prev.Cumulative Progr.%");
          IF PercProgressbyLevel."Cumulative Progress %" <> PercProgressbyLevel."Prev.Cumulative Progr.%" THEN BEGIN
            PercProgressbyLevel.VALIDATE("Cumulative Progress %", PercProgressbyLevel."Prev.Cumulative Progr.%");
            PercProgressbyLevel.MODIFY(TRUE);
          END;
        UNTIL PercProgressbyLevel.NEXT = 0;
    END;

    PROCEDURE GetCompleted@1100528405() Completed : Boolean;
    BEGIN
      IF "Cumulative Progress %" = 100 THEN
        Completed := TRUE;
    END;

    PROCEDURE SetCompleted@1100528406(Completed@1100528400 : Boolean);
    BEGIN
      IF Completed THEN
        VALIDATE("Cumulative Progress %", 100);
    END;

    PROCEDURE GetGlobalDim2ValueName@1100528407() : Text;
    VAR
      DimensionValue@1100528400 : Record 349;
    BEGIN
      DimensionValue.SETRANGE("Global Dimension No.", 2);
      DimensionValue.SETRANGE(Code, "Global Dimension 2 Code");
      IF DimensionValue.FINDFIRST THEN
        EXIT(DimensionValue.Name);
    END;

    BEGIN
    END.
  }
}

