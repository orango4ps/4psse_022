OBJECT Codeunit 11128086 BaseCodeunits
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=PE7.02 (12047965),4PSSE;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      gGLSetup@1100570000 : Record 98;
      gPurchSetup@1100570001 : Record 312;
      gSalesSetup@1100570002 : Record 311;
      gSetupOK@1100570003 : Boolean;
      gInvoiceRoundingAmount@12047958 : Decimal;
      BaseMgt@12047959 : Codeunit 11128082;

    PROCEDURE CompInit@1100570008();
    VAR
      CompanyInfo@1100570000 : Record 79;
      CompanyInitialize@1100570001 : Codeunit 2;
      GenJournalTemplate@12047958 : Record 80;
      GenJournalBatch@12047959 : Record 232;
      VPMnmt@12047961 : Codeunit 11128061;
      BaseMgt@12047962 : Codeunit 11128082;
    BEGIN
      // C40
      CompanyInfo.LOCKTABLE;
      IF CompanyInfo.GET AND NOT CompanyInfo."Base is Initiated" THEN BEGIN
        CompanyInfo.LOCKTABLE;
        CompanyInfo."Base is Initiated" := TRUE;
        CompanyInfo.MODIFY;

        BaseMgt.ChangeReportSelection;
        //TextLanguageMgt.MakeTranslations;
        //BasePermissionsMgmnt.RunCode;
        //BaseDemoDataMgmnt.RunCode;
        //BaseReports.InitBaseReportsSelection;

        WITH GenJournalTemplate DO BEGIN
          RESET;
          IF FINDSET THEN REPEAT
            CLEAR("Copy VAT Setup to Jnl. Lines");
            MODIFY;
          UNTIL NEXT = 0;
        END;

        WITH GenJournalBatch DO BEGIN
          RESET;
          IF FINDSET THEN REPEAT
            CLEAR("Copy VAT Setup to Jnl. Lines");
            MODIFY;
          UNTIL NEXT = 0;
        END;

        VPMnmt.InsertVPGiroTypeLines;
      END;
      BaseMgt.Initialize;
      COMMIT;
    END;

    PROCEDURE IsClosingDate@1100570019(pDate@1100570000 : Date) : Boolean;
    BEGIN
      // C11
      EXIT(pDate = CLOSINGDATE(pDate));
    END;

    PROCEDURE AllowedPostingDate@1100570013(VAR pvPostingDate@1100570005 : Date;VAR pvAllowPostingFrom@1100570004 : Date;VAR pvAllowPostingTo@1100570003 : Date;VAR pvPerPosting@1100570001 : Boolean;VAR pvUserSetup@1100570002 : Record 91);
    VAR
      PEB002@1100570007 : TextConst 'ENU="It is only Possible to Post  Today, depending on the field ""%1"" in Table ""%2"" not marked.\\User = ""%3""";SVE="Det g†r enbart att bokf”ra med dagens datum, beroende p† att f„ltet ""%1"" i tabellen ""%2"" inte „r markerat.\\Anv„ndare = ""%3"""';
      PEB003@1100570006 : TextConst 'ENU=You Try to Post on the Date %1, this Date is Closed according to %2 fields %3 and %4.;SVE=Datumet %1 som du f”rs”ker bokf”ra med „r st„ngt enligt %2 f„lten %3 och %4.';
      AllowDateFromUserSetup@1100570000 : Boolean;
    BEGIN
      // C11
      GetSetup;
      gGLSetup.TESTFIELD("Allow Posting From");
      gGLSetup.TESTFIELD("Allow Posting To");

      AllowDateFromUserSetup := (pvUserSetup."Allow Posting From" <> 0D) OR (pvUserSetup."Allow Posting To" <> 0D);

      IF AllowDateFromUserSetup THEN BEGIN
        pvUserSetup.TESTFIELD("Allow Posting From");
        pvUserSetup.TESTFIELD("Allow Posting To");
      END;

      IF pvPerPosting THEN BEGIN
        IF NOT pvUserSetup."Allow Posting <> Today" THEN
          pvAllowPostingTo := TODAY;
        IF FORMAT(gGLSetup."Extend Allow Posting To") = '' THEN
          EXIT;
        IF (pvAllowPostingTo < DMY2DATE(31,12,9999)) THEN BEGIN
          IF pvAllowPostingTo < CALCDATE(gGLSetup."Extend Allow Posting To",pvAllowPostingTo) THEN
            pvAllowPostingTo := CALCDATE(gGLSetup."Extend Allow Posting To",pvAllowPostingTo);
        END;
      END ELSE
        IF NOT pvUserSetup.ISEMPTY AND NOT pvUserSetup."Allow Posting <> Today" AND (pvPostingDate <> TODAY) THEN
          ERROR(PEB002,pvUserSetup.FIELDCAPTION("Allow Posting <> Today"),pvUserSetup.TABLECAPTION,USERID);

      IF (pvPostingDate < pvAllowPostingFrom) OR (pvPostingDate > pvAllowPostingTo) THEN BEGIN
        IF AllowDateFromUserSetup THEN
          ERROR(PEB003,pvPostingDate,pvUserSetup.TABLECAPTION,pvUserSetup.FIELDCAPTION("Allow Posting From"),pvUserSetup.FIELDCAPTION("Allow Posting To"))
        ELSE
          ERROR(PEB003,pvPostingDate,gGLSetup.TABLECAPTION,gGLSetup.FIELDCAPTION("Allow Posting From"),gGLSetup.FIELDCAPTION("Allow Posting To"));
      END;
    END;

    PROCEDURE ExtDocNoMandatory@1100570015(pVendLedgEntry@1100570001 : Record 25;pCVLedgEntryBuf@1100570004 : Record 382;pGenJournalLine@1100570002 : Record 81) : Boolean;
    VAR
      Vendor@1100570000 : Record 23;
    BEGIN
      // C12
      GetSetup;
      WITH pGenJournalLine DO BEGIN
        Vendor.GET(pVendLedgEntry."Vendor No.");
        EXIT((NOT "Ext. Doc. No. not Mandatory")AND
             ((gPurchSetup."Ext. Doc. No. Mandatory" OR
              (pCVLedgEntryBuf."External Document No." <> ''))
              )) //AND
              //(NOT Vendor."No control of Ext. Doc. No.")))
      END;
    END;

    LOCAL PROCEDURE GetDocNoMsg@12047971(pPurchaseHeader@12047958 : Record 38);
    VAR
      PurchSetup@12047959 : Record 312;
      PEB004@12047960 : TextConst 'ENU=Document No. %1;SVE=Verifikationsnr %1';
    BEGIN
      // PEB0078
      PurchSetup.GET;
      WITH pPurchaseHeader DO BEGIN
        IF NOT PurchSetup."Post with Job Queue" AND
           (Invoice OR ("Document Type" IN ["Document Type"::Invoice,"Document Type"::"Credit Memo"])) AND
           (("Last Posting No." <> "No.") AND
           ("Last Posting No." <> '')) THEN
          MESSAGE(PEB004,"Last Posting No.");
      END;
    END;

    LOCAL PROCEDURE GetSelectionSO@1100570027(VAR pvSalesHeader@1100570001 : Record 36) : Boolean;
    VAR
      Selection@12047958 : Integer;
      DefaultSelection@12047959 : Integer;
      ShipInvoiceQst@12047960 : TextConst 'ENU=&Ship,&Invoice,Ship &and Invoice;SVE=&Leverera,&Fakturera,Leverera &och fakturera';
    BEGIN
      IF NOT pvSalesHeader."Combine Shipments" THEN
        EXIT(FALSE);

      IF pvSalesHeader."Document Type" <> pvSalesHeader."Document Type"::Order THEN
        EXIT(FALSE);

      Selection := STRMENU(ShipInvoiceQst,1);
      pvSalesHeader.Ship := Selection IN [1,3];
      pvSalesHeader.Invoice := Selection IN [2,3];
      IF Selection = 0 THEN
        ERROR('');

      EXIT(TRUE);
    END;

    PROCEDURE Set0DToWorkdate@1100570001(VAR pDate@1100570000 : Date);
    BEGIN
      // C7000
      IF pDate = 0D THEN
        pDate := WORKDATE;
    END;

    LOCAL PROCEDURE GetSetup@1100570021();
    BEGIN
      IF gSetupOK THEN
        EXIT;
      gGLSetup.GET;
      gSalesSetup.GET;
      gPurchSetup.GET;

      gSetupOK := TRUE;
    END;

    PROCEDURE CheckMaxRounding@1100570009(pPurchHeader@1100570004 : Record 38;pTotalAmount@1100570007 : Decimal;pHideDialog@1100570003 : Boolean) rAmountOK : Boolean;
    VAR
      PEB006@1100570008 : TextConst 'ENU=%1 must not be zero.;SVE=%1 f†r inte vara noll.';
      PEB007@1100570001 : TextConst 'ENU=Amount is too big for rounding, %1 %3 \Maximum is %2 %3;SVE=Beloppet f”r avrundning „r f”r stort, %1 %3. \F†r max vara %2 %3';
      CurrExchRate@1100570002 : Record 330;
      MaxPurchRounding@1100570005 : Decimal;
      CurrCode@1100570006 : Code[10];
    BEGIN
    END;

    PROCEDURE GetRoundingAmount@12047976() : Decimal;
    BEGIN
      EXIT(gInvoiceRoundingAmount);
    END;

    LOCAL PROCEDURE UpdateLineNoTextLine@1000000002(VAR pvSalesLine@1100570000 : Record 37);
    BEGIN
    END;

    LOCAL PROCEDURE TextlineAppliToItemline@12047965(VAR SalesHeader@12047958 : Record 36);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCompanyInitialize@1100570005();
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterLogInStart@1100570010();
    BEGIN
    END;

    PROCEDURE GetDefaultSelectionWHS@12047959(pWhseActivLine@12047958 : Record 5767) : Integer;
    BEGIN
    END;

    PROCEDURE SetPerPosting@12047987(pPerPosting@12047958 : Boolean);
    BEGIN
    END;

    [EventSubscriber(Codeunit,2,OnCompanyInitialize)]
    LOCAL PROCEDURE C2_CompanyInitialize@1100570002();
    BEGIN
      CompInit;
      OnAfterCompanyInitialize;
    END;

    [EventSubscriber(Codeunit,40,OnAfterLogInStart)]
    LOCAL PROCEDURE C40_AfterLogInStart@1100570003();
    BEGIN
      CompInit;
      OnAfterLogInStart;
    END;

    BEGIN
    {
      PEB *** Begin ***
      PEB0000 Miscellaneous
      PEB0093 Create permissions and demodata
      PEB
      PEB *** End ***
      190627 ORANGO.DL #24730 upgrade to 8.11 after bug found
    }
    END.
  }
}

