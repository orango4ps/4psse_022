OBJECT Codeunit 11012205 DPT Subscribers
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [EventSubscriber(Table,11012747,OnAfterModifyEvent,"",Skip)]
    PROCEDURE OnAfterModifyDocumentLink@1100527803(VAR Rec@1100527800 : Record 11012747;VAR xRec@1100527801 : Record 11012747;RunTrigger@1100527802 : Boolean);
    VAR
      DPTEventLog@1100527806 : Record 11229822;
      DocumentProperties@1100527805 : Record 11012746;
      Job@1100527804 : Record 11072003;
      ServiceLocation@1100527803 : Record 11012801;
    BEGIN
      CASE Rec."Table No." OF
       DATABASE::Plot: BEGIN
         IF (NOT RunTrigger) THEN
            EXIT;
          IF DocumentProperties.GET(Rec."Document No.") THEN
            IF (DocumentProperties."Storage Type" = DocumentProperties."Storage Type"::DPTDUAL) THEN BEGIN
              CASE DocumentProperties."Document Portal Source Type" OF
                DocumentProperties."Document Portal Source Type"::Project: BEGIN
                  IF (Job.GET(DocumentProperties."Document Portal Source No.")) THEN
                    DPTEventLog.AddEventLog(DPTEventLog.GetSyncDocumentText, 1, Job."No.", DocumentProperties.RECORDID, xRec."Record ID");
                END;
              END;
            END;
        END;
      END;
    END;

    [EventSubscriber(Table,11012747,OnAfterInsertEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterInsertDocumentLink@1100528300(VAR Rec@1100528300 : Record 11012747;RunTrigger@1100528301 : Boolean);
    VAR
      DPTEventLog@1100528305 : Record 11229822;
      DocumentProperties@1100528304 : Record 11012746;
      Job@1100528303 : Record 11072003;
      ServiceLocation@1100528306 : Record 11012801;
      xRecId@1100528302 : RecordID;
      RecRef@1100528900 : RecordRef;
    BEGIN
      IF Rec.ISTEMPORARY OR NOT RunTrigger THEN
        EXIT;

      CASE Rec."Table No." OF
        DATABASE::Job: BEGIN
          IF DocumentProperties.GET(Rec."Document No.") THEN
            IF (DocumentProperties.DocumentIsLinkedToDPT(Rec."Record ID")) THEN BEGIN
              RecRef.GET(Rec."Record ID");
              RecRef.SETTABLE(Job);
              IF (Job."Document Portal Site Generated") AND (DocumentProperties."Internal Company" = COMPANYNAME) AND
                 (DocumentProperties."Storage Type" <> DocumentProperties."Storage Type"::DPTDUAL)
              THEN
                DPTEventLog.AddEventLog(DPTEventLog.GetSyncDocumentText, 1, Job."No.", DocumentProperties.RECORDID, xRecId);
            END;
        END;
        DATABASE::"Service Location": BEGIN
          IF DocumentProperties.GET(Rec."Document No.") THEN
            IF (DocumentProperties.DocumentIsLinkedToDPT(Rec."Record ID")) THEN BEGIN
              RecRef.GET(Rec."Record ID");
              RecRef.SETTABLE(ServiceLocation);
              IF (ServiceLocation."Document Portal Site Generated") AND (DocumentProperties."Internal Company" = COMPANYNAME) AND
                 (DocumentProperties.HasStorageURI) AND (DocumentProperties."Storage Type" <> DocumentProperties."Storage Type"::DPTDUAL)
              THEN
                DPTEventLog.AddEventLog(DPTEventLog.GetSyncDocumentText, 2, ServiceLocation."No.", DocumentProperties.RECORDID, xRecId);
            END;
        END;
        DATABASE::Plot: BEGIN
          IF (NOT RunTrigger) THEN
            EXIT;
          IF DocumentProperties.GET(Rec."Document No.") THEN
            IF (DocumentProperties."Storage Type" = DocumentProperties."Storage Type"::DPTDUAL) THEN BEGIN
              IF  (DocumentProperties."Document Portal Source Type" = DocumentProperties."Document Portal Source Type"::Project) THEN
                BEGIN
                  IF (Job.GET(DocumentProperties."Document Portal Source No.")) THEN
                    DPTEventLog.AddEventLog(DPTEventLog.GetSyncDocumentText, 1, Job."No.", DocumentProperties.RECORDID, xRecId);
                END;
          END;
        END;
      END;
    END;

    [EventSubscriber(Table,11012747,OnAfterDeleteEvent,"",Skip)]
    PROCEDURE OnAfterDeleteDocumentLink@1100528301(VAR Rec@1100528300 : Record 11012747;RunTrigger@1100528301 : Boolean);
    VAR
      DocumentProperties@1100528305 : Record 11012746;
      DPTEventLog@1100528306 : Record 11229822;
      Job@1100528304 : Record 11072003;
      ServiceLocation@1100528307 : Record 11012801;
      User@1100525001 : Record 2000000120;
      DPTInterface@1100525000 : Codeunit 11012451;
      SeqNo@1100528302 : Integer;
      xRecId@1100528303 : RecordID;
      RecRef@1100528900 : RecordRef;
    BEGIN
      IF Rec.ISTEMPORARY OR NOT RunTrigger THEN
        EXIT;

      CASE Rec."Table No." OF
        DATABASE::Job: BEGIN
          DocumentProperties.GET(Rec."Document No.");
          IF (DocumentProperties.DocumentIsLinkedToDPT(Rec."Record ID")) THEN BEGIN
            RecRef.GET(Rec."Record ID");
            RecRef.SETTABLE(Job);
            IF (Job."Document Portal Site Generated") AND (DocumentProperties."Internal Company" = COMPANYNAME) AND
              (DocumentProperties.HasStorageURI) AND (DocumentProperties."Storage Type" = DocumentProperties."Storage Type"::DPTDUAL)
            THEN BEGIN
              SeqNo := DPTEventLog.AddEventLog(DPTEventLog.GetDeleteDocumentText, 1, Job."No.", DocumentProperties.RECORDID, xRecId);
              DPTEventLog.AddEventLogParameter(SeqNo, DATABASE::"Document Properties", DocumentProperties.FIELDNO("Web link"), DocumentProperties.GetStorageURI);
              DPTEventLog.AddEventLogParameter(SeqNo, DATABASE::"Document Properties", DocumentProperties.FIELDNO("Document Portal Subsite"), DocumentProperties."Document Portal Subsite");
            END;
          END;
        END;
        DATABASE::"Service Location": BEGIN
          DocumentProperties.GET(Rec."Document No.");
          IF (DocumentProperties.DocumentIsLinkedToDPT(Rec."Record ID")) THEN BEGIN
            RecRef.GET(Rec."Record ID");
            RecRef.SETTABLE(ServiceLocation);
            IF (ServiceLocation."Document Portal Site Generated") AND (DocumentProperties."Internal Company" = COMPANYNAME) AND
                 (NOT DocumentProperties.HasStorageURI) AND (DocumentProperties."Storage Type" = DocumentProperties."Storage Type"::DPTDUAL)
            THEN BEGIN
              SeqNo := DPTEventLog.AddEventLog(DPTEventLog.GetDeleteDocumentText, 2, ServiceLocation."No.", DocumentProperties.RECORDID, xRecId);
              DPTEventLog.AddEventLogParameter(SeqNo, DATABASE::"Document Properties", DocumentProperties.FIELDNO("Web link"), DocumentProperties.GetStorageURI);
              DPTEventLog.AddEventLogParameter(SeqNo, DATABASE::"Document Properties", DocumentProperties.FIELDNO("Document Portal Subsite"), DocumentProperties."Document Portal Subsite");
            END;
          END;
        END;
        DATABASE::Plot: BEGIN
          IF (NOT RunTrigger) THEN
            EXIT;
           IF DocumentProperties.GET(Rec."Document No.") THEN
            IF (DocumentProperties."Storage Type" = DocumentProperties."Storage Type"::DPTDUAL) THEN BEGIN
              IF  (DocumentProperties."Document Portal Source Type" = DocumentProperties."Document Portal Source Type"::Project) THEN
                BEGIN
                  IF (Job.GET(DocumentProperties."Document Portal Source No.")) THEN
                    DPTEventLog.AddEventLog(DPTEventLog.GetSyncDocumentText, 1, Job."No.", DocumentProperties.RECORDID, xRecId);
                END;
          END;
        END;
      END;
    END;

    [EventSubscriber(Table,11012746,OnAfterModifyEvent,"",Skip)]
    LOCAL PROCEDURE OnAfterModifyDocumentProperties@1100528302(VAR Rec@1100528300 : Record 11012746;VAR xRec@1100528301 : Record 11012746;RunTrigger@1100528302 : Boolean);
    VAR
      Job@1100528303 : Record 11072003;
      ServiceLocation@1100528305 : Record 11012801;
      DPTEventLog@1100528304 : Record 11229822;
    BEGIN
      IF (NOT RunTrigger) THEN
        EXIT;

      IF Rec."Internal Company" = COMPANYNAME THEN
        CASE Rec."Document Portal Source Type" OF
          Rec."Document Portal Source Type"::Project: BEGIN
            IF Job.GET(Rec."Document Portal Source No.") THEN
              IF (Job."Document Portal Site Generated") THEN
                DPTEventLog.AddEventLog(DPTEventLog.GetSyncDocumentText, 1, Job."No.", Rec.RECORDID, xRec.RECORDID);
          END;
          Rec."Document Portal Source Type"::ServiceLoc: BEGIN
            IF ServiceLocation.GET(Rec."Document Portal Source No.") THEN
              IF (ServiceLocation."Document Portal Site Generated") THEN
                DPTEventLog.AddEventLog(DPTEventLog.GetSyncDocumentText, 2, ServiceLocation."No.", Rec.RECORDID, xRec.RECORDID);
          END;
        END;
    END;

    [EventSubscriber(Table,11072334,OnAfterDeleteEvent,"",Skip)]
    PROCEDURE OnAfterDeleteDPTAuthorityPermProject@1100528320(VAR Rec@1100528300 : Record 11072334;RunTrigger@1100528301 : Boolean);
    VAR
      Job@1100528303 : Record 11072003;
      DPTEventLog@1100528304 : Record 11229822;
    BEGIN
      Job.GET(Rec."Project No.");
      IF (Job.IsDocumentPortalDualProject) THEN
        DPTEventLog.AddEventLog(DPTEventLog.GetSyncAuthorityText, 1, Job."No.", Job.RECORDID, Job.RECORDID);
    END;

    [EventSubscriber(Table,11072343,OnAfterDeleteEvent,"",Skip)]
    PROCEDURE OnAfterDeleteDPTAuthorityPermServLoc@1100528303(VAR Rec@1100528300 : Record 11072343;RunTrigger@1100528301 : Boolean);
    VAR
      ServiceLocation@1100528303 : Record 11012801;
      DPTEventLog@1100528304 : Record 11229822;
    BEGIN
      ServiceLocation.GET(Rec."Service Location No.");
      IF (ServiceLocation.IsDocumentPortalServiceLocation) THEN
        DPTEventLog.AddEventLog(DPTEventLog.GetSyncAuthorityText, 2, ServiceLocation."No.", ServiceLocation.RECORDID,
          ServiceLocation.RECORDID);
    END;

    [EventSubscriber(Table,11072332,OnAfterDeleteEvent,"",Skip)]
    PROCEDURE OnAfterDeleteDPTRespPersPermProject@1100528316(VAR Rec@1100528300 : Record 11072332;RunTrigger@1100528301 : Boolean);
    VAR
      Job@1100528303 : Record 11072003;
      DPTEventLog@1100528304 : Record 11229822;
    BEGIN
      Job.GET(Rec."Project No.");
      IF (Job.IsDocumentPortalDualProject) THEN
        DPTEventLog.AddEventLog(DPTEventLog.GetSyncResponsiblePersonText, 1, Job."No.", Job.RECORDID, Job.RECORDID);
    END;

    [EventSubscriber(Table,11072340,OnAfterDeleteEvent,"",Skip)]
    PROCEDURE OnAfterDeleteDPTRespPersPermServLoc@1100528305(VAR Rec@1100528300 : Record 11072340;RunTrigger@1100528301 : Boolean);
    VAR
      ServiceLocation@1100528303 : Record 11012801;
      DPTEventLog@1100528304 : Record 11229822;
    BEGIN
      ServiceLocation.GET(Rec."Service Location No.");
      IF (ServiceLocation.IsDocumentPortalServiceLocation) THEN
        DPTEventLog.AddEventLog(DPTEventLog.GetSyncResponsiblePersonText, 2, ServiceLocation."No.", ServiceLocation.RECORDID,
          ServiceLocation.RECORDID);
    END;

    [EventSubscriber(Table,11020216,OnAfterDeleteEvent,"",Skip)]
    PROCEDURE OnAfterDeleteProjectAuthority@1100528321(VAR Rec@1100528300 : Record 11020216;RunTrigger@1100528301 : Boolean);
    VAR
      Job@1100528303 : Record 11072003;
      DPTEventLog@1100528304 : Record 11229822;
    BEGIN
      Job.GET(Rec."Project No.");
      IF (Job.IsDocumentPortalDualProject) THEN
        DPTEventLog.AddEventLog(DPTEventLog.GetSyncAuthorityText, 1, Job."No.", Job.RECORDID, Job.RECORDID);
    END;

    [EventSubscriber(Table,11072298,OnAfterDeleteEvent,"",Skip)]
    PROCEDURE OnAfterDeleteServiceAuthorityDPT@1100528306(VAR Rec@1100528300 : Record 11072298;RunTrigger@1100528301 : Boolean);
    VAR
      ServiceLocation@1100528303 : Record 11012801;
      DPTEventLog@1100528304 : Record 11229822;
    BEGIN
      IF (Rec."Source Type" <> Rec."Source Type"::ServLocation) THEN
        EXIT;
      ServiceLocation.GET(Rec."Source Code");
      IF (ServiceLocation.IsDocumentPortalServiceLocation) THEN
        DPTEventLog.AddEventLog(DPTEventLog.GetSyncAuthorityText, 2, ServiceLocation."No.", ServiceLocation.RECORDID,
          ServiceLocation.RECORDID);
    END;

    [EventSubscriber(Table,11012040,OnAfterDeleteEvent,"",Skip)]
    PROCEDURE OnAfterDeleteProjectResponsiblePerson@1100528304(VAR Rec@1100528300 : Record 11012040;RunTrigger@1100528301 : Boolean);
    VAR
      Job@1100528303 : Record 11072003;
      DPTEventLog@1100528304 : Record 11229822;
    BEGIN
      Job.GET(Rec."Project No.");
      IF (Job.IsDocumentPortalDualProject) THEN
        DPTEventLog.AddEventLog(DPTEventLog.GetSyncResponsiblePersonText, 1, Job."No.", Job.RECORDID, Job.RECORDID);
    END;

    [EventSubscriber(Table,11072297,OnAfterDeleteEvent,"",Skip)]
    PROCEDURE OnAfterDeleteServiceResponsiblePersonDPT@1100528307(VAR Rec@1100528300 : Record 11072297;RunTrigger@1100528301 : Boolean);
    VAR
      ServiceLocation@1100528303 : Record 11012801;
      DPTEventLog@1100528304 : Record 11229822;
    BEGIN
      IF (Rec."Source Type" <> Rec."Source Type"::ServLocation) THEN
        EXIT;
      ServiceLocation.GET(Rec."Source Code");
      IF (ServiceLocation.IsDocumentPortalServiceLocation) THEN
        DPTEventLog.AddEventLog(DPTEventLog.GetSyncResponsiblePersonText, 2, ServiceLocation."No.", ServiceLocation.RECORDID,
          ServiceLocation.RECORDID);
    END;

    LOCAL PROCEDURE "---Locals---"@1100528310();
    BEGIN
    END;

    BEGIN
    END.
  }
}

