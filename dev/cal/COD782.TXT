OBJECT Codeunit 782 Opportunity Chart Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE DrillDown@7(VAR BusinessChartBuffer@1000 : Record 485;Period@1002 : Record 2000000007;OpportunityStatus@1003 : Option);
    VAR
      Opportunity@1005 : Record 5092;
      SalespersonPurchaser@1001 : Record 13;
      SalesPersonName@1004 : Variant;
    BEGIN
      BusinessChartBuffer.GetXValue(BusinessChartBuffer."Drill-Down X Index",SalesPersonName);
      SalespersonPurchaser.SETRANGE(Name,SalesPersonName);
      SalespersonPurchaser.FINDFIRST;
      Opportunity.SETRANGE("Salesperson Code",SalespersonPurchaser.Code);
      Opportunity.Status := OpportunityStatus;
      Opportunity.SETRANGE(Status,Opportunity.Status);
      CASE Opportunity.Status OF
        Opportunity.Status::"Not Started",
        Opportunity.Status::"In Progress":
          Opportunity.SETRANGE("Creation Date",0D,Period."Period End");
        Opportunity.Status::Won,
        Opportunity.Status::Lost:
          Opportunity.SETRANGE("Date Closed",Period."Period Start",Period."Period End");
      END;
      PAGE.RUN(PAGE::"Opportunity List",Opportunity);
    END;

    LOCAL PROCEDURE GetOppCount@8(Period@1003 : Record 2000000007;SalesPersonCode@1001 : Code[20];OpportunityStatus@1002 : Option) : Integer;
    VAR
      Opportunity@1000 : Record 5092;
    BEGIN
      Opportunity.SETRANGE("Salesperson Code",SalesPersonCode);
      Opportunity.Status := OpportunityStatus;
      Opportunity.SETRANGE(Status,Opportunity.Status);
      CASE Opportunity.Status OF
        Opportunity.Status::"Not Started",
        Opportunity.Status::"In Progress":
          Opportunity.SETRANGE("Creation Date",0D,Period."Period End");
        Opportunity.Status::Won,
        Opportunity.Status::Lost:
          Opportunity.SETRANGE("Date Closed",Period."Period Start",Period."Period End");
      END;
      EXIT(Opportunity.COUNT);
    END;

    [External]
    PROCEDURE SetDefaultOppStatus@5(VAR Opportunity@1000 : Record 5092);
    BEGIN
      Opportunity.Status := Opportunity.Status::Won;
    END;

    [External]
    PROCEDURE SetDefaultPeriod@2(VAR Period@1000 : Record 2000000007);
    BEGIN
      Period."Period Type" := Period."Period Type"::Month;
      Period."Period Start" := CALCDATE('<-CM>',WORKDATE);
      Period."Period End" := CALCDATE('<CM>',WORKDATE);
    END;

    [External]
    PROCEDURE SetNextPeriod@4(VAR Period@1000 : Record 2000000007);
    BEGIN
      CASE Period."Period Type" OF
        Period."Period Type"::Date:
          Period."Period Start" := CALCDATE('<+1D>',Period."Period Start");
        Period."Period Type"::Week:
          Period."Period Start" := CALCDATE('<+1W>',Period."Period Start");
        Period."Period Type"::Month:
          Period."Period Start" := CALCDATE('<+1M>',Period."Period Start");
        Period."Period Type"::Quarter:
          Period."Period Start" := CALCDATE('<+1Q>',Period."Period Start");
        Period."Period Type"::Year:
          Period."Period Start" := CALCDATE('<+1Y>',Period."Period Start");
      END;
      SetPeriodRange(Period);
    END;

    [External]
    PROCEDURE SetPrevPeriod@6(VAR Period@1000 : Record 2000000007);
    BEGIN
      CASE Period."Period Type" OF
        Period."Period Type"::Date:
          Period."Period Start" := CALCDATE('<-1D>',Period."Period Start");
        Period."Period Type"::Week:
          Period."Period Start" := CALCDATE('<-1W>',Period."Period Start");
        Period."Period Type"::Month:
          Period."Period Start" := CALCDATE('<-1M>',Period."Period Start");
        Period."Period Type"::Quarter:
          Period."Period Start" := CALCDATE('<-1Q>',Period."Period Start");
        Period."Period Type"::Year:
          Period."Period Start" := CALCDATE('<-1Y>',Period."Period Start");
      END;
      SetPeriodRange(Period);
    END;

    [External]
    PROCEDURE SetPeriodRange@1(VAR Period@1000 : Record 2000000007);
    BEGIN
      CASE Period."Period Type" OF
        Period."Period Type"::Date:
          BEGIN
            Period."Period Start" := Period."Period Start";
            Period."Period End" := Period."Period Start";
          END;
        Period."Period Type"::Week:
          BEGIN
            Period."Period Start" := CALCDATE('<-CW>',Period."Period Start");
            Period."Period End" := CALCDATE('<CW>',Period."Period Start");
          END;
        Period."Period Type"::Month:
          BEGIN
            Period."Period Start" := CALCDATE('<-CM>',Period."Period Start");
            Period."Period End" := CALCDATE('<CM>',Period."Period Start");
          END;
        Period."Period Type"::Quarter:
          BEGIN
            Period."Period Start" := CALCDATE('<-CQ>',Period."Period Start");
            Period."Period End" := CALCDATE('<CQ>',Period."Period Start");
          END;
        Period."Period Type"::Year:
          BEGIN
            Period."Period Start" := CALCDATE('<-CY>',Period."Period Start");
            Period."Period End" := CALCDATE('<CY>',Period."Period Start");
          END;
      END;
    END;

    PROCEDURE UpdateData@3(VAR BusinessChartBuffer@1000 : Record 485;Period@1006 : Record 2000000007;OpportunityStatus@1004 : Option);
    VAR
      SalespersonPurchaser@1001 : Record 13;
      I@1002 : Integer;
      OppCount@1003 : Integer;
    BEGIN
      WITH BusinessChartBuffer DO BEGIN
        Initialize;
        AddMeasure(SalespersonPurchaser.FIELDCAPTION("No. of Opportunities"),1,"Data Type"::Integer,"Chart Type"::Pie);
        SetXAxis(SalespersonPurchaser.TABLECAPTION,"Data Type"::String);
        IF SalespersonPurchaser.FINDSET THEN
          REPEAT
            OppCount := GetOppCount(Period,SalespersonPurchaser.Code,OpportunityStatus);
            IF OppCount <> 0 THEN BEGIN
              I += 1;
              AddColumn(SalespersonPurchaser.Name);
              SetValueByIndex(0,I - 1,OppCount);
            END;
          UNTIL SalespersonPurchaser.NEXT = 0;
      END;
    END;

    BEGIN
    {
      4PS, renumbered objects
    }
    END.
  }
}

