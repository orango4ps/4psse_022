OBJECT Table 11020644 Purchase Line Extension
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Purchase Line Extension;
               NOR=Innkj›psrads-ETA;
               SVE=Ink”psrads-ŽTA];
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              NOR=Dokumenttype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                                    NOR=Tilbud,Ordre,Faktura,Kreditnota,Rammeordre,Returordre;
                                                                    SVE=Offert,Order,Faktura,Kreditnota,Avropsorder,Returorder];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 3   ;   ;Document No.        ;Code20        ;TableRelation="Purchase Header".No. WHERE (Document Type=FIELD(Document Type));
                                                   CaptionML=[ENU=Document No.;
                                                              NOR=Bilagsnr.;
                                                              SVE=Dokumentnr] }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 11  ;   ;Yard No.            ;Code20        ;CaptionML=[ENU=Yard No.;
                                                              NOR=Plassnr;
                                                              SVE=Platsnr];
                                                   Description=Engineering }
    { 12  ;   ;System No.          ;Code20        ;CaptionML=[ENU=System No.;
                                                              NOR=Systemnr;
                                                              SVE=Systemnr];
                                                   Description=Engineering;
                                                   Editable=No }
    { 14  ;   ;Entity No.          ;Code20        ;CaptionML=[ENU=Entity No.;
                                                              NOR=Enhetsnr;
                                                              SVE=Enhetsnr];
                                                   Description=Engineering;
                                                   Editable=No }
    { 15  ;   ;Cable Transit Pos.  ;Option        ;CaptionML=[ENU=Cable Transit Postion;
                                                              NOR=Kabeloverf›ringsposisjon;
                                                              SVE=Kabel”verf”ringsposition];
                                                   OptionCaptionML=[ENU=" ,From Side,To Side";
                                                                    NOR=" ,Fra side,Til side";
                                                                    SVE=" ,Fr†n sida,Till sida"];
                                                   OptionString=[ ,From,To];
                                                   Description=Engineering;
                                                   Editable=No }
    { 20  ;   ;GS1 Quantity Confirmed;Decimal     ;FieldClass=Normal;
                                                   CaptionML=[ENU=GS1 Quantity Confirmed;
                                                              NOR=GS1-antall bekreftet;
                                                              SVE=GS1-antal bekr„ftat];
                                                   Editable=No }
    { 100 ;   ;Service Warranty Code;Code10       ;TableRelation="Service Warranty";
                                                   CaptionML=[ENU=Service Warranty Code;
                                                              NOR=Servicegarantikode;
                                                              SVE=Servicegarantikod] }
    { 110 ;   ;Standard Service Object No.;Code20 ;TableRelation="Standard Object".No. WHERE (Expired=CONST(No));
                                                   OnLookup=VAR
                                                              ServiceObjectManagement@1100528700 : Codeunit 11012808;
                                                            BEGIN
                                                              IF ServiceObjectManagement.HandleLookupStandardObject('', FALSE, "Standard Service Object No.") THEN
                                                                VALIDATE("Standard Service Object No.");
                                                            END;

                                                   CaptionML=[ENU=Standard Service Object No.;
                                                              NOR=Standard serviceobjektnr.] }
    { 120 ;   ;Source Advice Order ;Boolean       ;CaptionML=ENU=Source Advice Order }
    { 130 ;   ;Work Order No.      ;Code20        ;TableRelation="Work Order";
                                                   OnValidate=VAR
                                                                PurchaseLine@1100528600 : Record 39;
                                                                WorkOrder@1100528601 : Record 11229279;
                                                                Resource@1100528602 : Record 11229278;
                                                              BEGIN
                                                                IF PurchaseLine.GET("Document Type", "Document No.", "Line No.") THEN BEGIN
                                                                  PurchaseLine.TESTFIELD("Cost Type", PurchaseLine."Cost Type"::Subcontracting);
                                                                  WorkOrder.GET("Work Order No.");
                                                                  WorkOrder.TESTFIELD("Resource No.");
                                                                  Resource.GET(WorkOrder."Resource No.");
                                                                  Resource.TESTFIELD(Type, Resource.Type::Subcontractor);
                                                                  IF Resource."Source No." <> PurchaseLine."Buy-from Vendor No." THEN
                                                                    MESSAGE(Text000, PurchaseLine."Buy-from Vendor No.", Resource."Source No.", Resource.TABLECAPTION);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Work Order No.;
                                                              SVE=Serviceordernr];
                                                   Editable=No }
    { 200 ;   ;Expense Allowance Scheme;Boolean   ;CaptionML=[ENU=Expense Allowance Scheme;
                                                              NOR=Skjema for utgiftskvote;
                                                              SVE=Schema f”r kostnadsplan] }
    { 210 ;   ;Requester ID        ;Code50        ;TableRelation=User."User Name";
                                                   OnValidate=VAR
                                                                UserMgt@1000 : Codeunit 418;
                                                              BEGIN
                                                                UserMgt.ValidateUserID("Requester ID");
                                                              END;

                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("Requester ID");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Requester ID;
                                                              NOR=Bestiller-ID;
                                                              SVE=Anv„ndar-ID f”r ink”psanmodan] }
  }
  KEYS
  {
    {    ;Document Type,Document No.,Line No.     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528601 : TextConst 'ENU=Vendor (%1) doesn''t match Subcontractor (%2) om %3';

    PROCEDURE GetPurchLineExtension@1100525001(DocType@1100525000 : Option;DocNo@1100525001 : Code[20];LineNo@1100525002 : Integer);
    BEGIN
      IF NOT GET(DocType, DocNo, LineNo) THEN BEGIN
        INIT;
        "Document Type" := DocType;
        "Document No."  := DocNo;
        "Line No." := LineNo;
      END;
    END;

    PROCEDURE UpdatePurchLineExtension@1100525000(DocType@1100525002 : Option;DocNo@1100525000 : Code[20];LineNo@1100525005 : Integer);
    VAR
      PurchLineExtension@1100525001 : Record 11020644;
      PurchLineExtensionInit@1100525003 : Record 11020644;
      DeleteExt@1100525004 : Boolean;
    BEGIN
      PurchLineExtensionInit.INIT;
      PurchLineExtensionInit."Document Type" := DocType;
      PurchLineExtensionInit."Document No."  := DocNo;
      PurchLineExtensionInit."Line No." := LineNo;
      IF FORMAT(Rec) = FORMAT(PurchLineExtensionInit) THEN
        DeleteExt := TRUE
      ELSE
        DeleteExt := FALSE;

      IF NOT PurchLineExtension.GET(DocType, DocNo, LineNo) THEN BEGIN
        IF DeleteExt THEN
          EXIT;
        PurchLineExtension.INIT;
        PurchLineExtension."Document Type" := DocType;
        PurchLineExtension."Document No."  := DocNo;
        PurchLineExtension."Line No." := LineNo;
        PurchLineExtension.INSERT;
      END ELSE BEGIN
        IF DeleteExt THEN BEGIN
          PurchLineExtension.DELETE;
          EXIT;
        END;
      END;
      PurchLineExtension.TRANSFERFIELDS(Rec, FALSE);
      PurchLineExtension.MODIFY;
    END;

    PROCEDURE CopyPurchLineExtension@1100525002(FromDocType@1100525001 : Option;FromDocNo@1100525000 : Code[20];FromLineNo@1100525007 : Integer;ToDocType@1100525003 : Option;ToDocNo@1100525002 : Code[20];ToLineNo@1100525006 : Integer);
    VAR
      FromPurchLineExtension@1100525004 : Record 11020644;
      ToPurchLineExtension@1100525005 : Record 11020644;
    BEGIN
      IF ToPurchLineExtension.GET(ToDocType, ToDocNo, ToLineNo) THEN
        ToPurchLineExtension.DELETE;
      IF FromPurchLineExtension.GET(FromDocType, FromDocNo, FromLineNo) THEN BEGIN
        ToPurchLineExtension."Document Type" := ToDocType;
        ToPurchLineExtension."Document No."  := ToDocNo;
        ToPurchLineExtension."Line No." := ToLineNo;

        ToPurchLineExtension.TRANSFERFIELDS(FromPurchLineExtension, FALSE);
        ToPurchLineExtension.INSERT;
      END;
    END;

    PROCEDURE IsFilled@1100528400() : Boolean;
    BEGIN
      IF "Yard No." <> '' THEN
        EXIT(TRUE);
      IF "System No." <> '' THEN
        EXIT(TRUE);
      IF "Entity No." <> '' THEN
        EXIT(TRUE);
      IF "Cable Transit Pos." > 0 THEN
        EXIT(TRUE);
      IF "GS1 Quantity Confirmed" <> 0 THEN
        EXIT(TRUE);
      IF "Service Warranty Code" <> '' THEN
        EXIT(TRUE);
      IF "Standard Service Object No." <> '' THEN
        EXIT(TRUE);
      IF "Source Advice Order" THEN
        EXIT(TRUE);
      IF "Work Order No." <> '' THEN
        EXIT(TRUE);
      IF "Expense Allowance Scheme" THEN
        EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

