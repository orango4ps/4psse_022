OBJECT Codeunit 11012550 Post Plant Number
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    TableNo=11012552;
    OnRun=VAR
            InventoryRec@1100485000 : Record 11012555;
            PlantLoc@1100409000 : Record 11012554;
            PlantType@1100409001 : Record 11012551;
          BEGIN
            PlantNoRec.COPY(Rec);

            WITH PlantNoRec DO BEGIN

              LOCKTABLE;

              TESTFIELD(Posted,FALSE);
              TESTFIELD("Ship To Location");
              TESTFIELD("Receipt Date");
              CALCFIELDS(Bulk);
              IF NOT Bulk THEN
                TESTFIELD(Quantity,1);
              IF Bulk AND (Quantity = 0) THEN
                FIELDERROR(Quantity);
              IF External THEN
                TESTFIELD(Vendor);
              PlantType.GET("Plant Type");
              PlantLoc.GET("Ship To Location");
              IF (PlantType."Rental Type" <> PlantType."Rental Type"::Rental) AND (NOT PlantLoc.Depot) AND (NOT gFromConvImport) THEN
                FIELDERROR("Ship To Location", STRSUBSTNO(Text001, PlantLoc.FIELDCAPTION(Depot)));
              InventoryRec.LOCKTABLE;
              CreateInventory;
              IF External THEN
                CreateArrivalRent();
              Posted := TRUE;
              "Posting Date" := TODAY;
              MODIFY;
              CreateInspections;
            END;
            Rec := PlantNoRec;
          END;

  }
  CODE
  {
    VAR
      PlantSetupRec@1100485003 : Record 11012550;
      PlantNoRec@11012000 : Record 11012552;
      gReceiptMode@1100485002 : Boolean;
      gFromConvImport@1100409001 : Boolean;
      gDocLineNo@1100485000 : Integer;
      gDocumentNo@1100485001 : Code[20];
      gRateCode@1100409002 : Code[20];
      gExpectedEnddateExtRented@1100485004 : Date;
      Text001@1100409000 : TextConst 'DEU=ist %1, nicht zulÑssig fÅr S/BB-Werkzeug (Verkaufsfakturierung nur mîglich Åber Werkzeugauftrag);ENU=is %1, not allowed for S/BB Plant (sales invoicing only possible via Plant Order);NLD=is %1, niet toegestaan voor v/t materieel (verkoop facturen alleen mogelijk via materieelorder)';

    LOCAL PROCEDURE CreateInventory@6();
    VAR
      lvPlantLocRec@1100485001 : Record 11012554;
      PlantRateCode@1100525000 : Record 11020502;
      lvInventoryMngmnt@1100485000 : Codeunit 11012566;
      OrderType@11012001 : 'Receipt,Plant Order,Exit Order';
      RateCode@1100525001 : Code[10];
      lvEmplNo@1100485002 : Code[20];
      lvEmplComp@1100485003 : Text[30];
      ExpectedReturnDepot@1100529000 : Code[20];
    BEGIN
      PlantSetupRec.GET;
      PlantNoRec.FillInventoryNo();

      //IF lvPlantLocRec.GET(PlantNoRec."Ship To Location") AND (lvPlantLocRec."Employee No." <> '') THEN BEGIN  //DP00485.o
      lvPlantLocRec.GET(PlantNoRec."Ship To Location");  //DP00485.n C009408
      IF lvPlantLocRec."Employee No." <> '' THEN BEGIN   //DP00485.n
        lvEmplNo := lvPlantLocRec."Employee No.";
        lvEmplComp := lvPlantLocRec."Company Name";
      END;
      IF NOT lvPlantLocRec.Depot THEN
        GetExpectedReturnDepot(PlantNoRec);

      //DP00485.sn C009408
      RateCode := '';
      IF PlantSetupRec."Rate Codes" THEN BEGIN
        IF lvPlantLocRec.Depot THEN BEGIN
          PlantSetupRec.TESTFIELD("Default Rate Code");
          RateCode := PlantSetupRec."Default Rate Code";
        END ELSE BEGIN
          RateCode :=PlantRateCode.GetDefaultRateCodeRental(PlantNoRec."Ship To Location", TRUE, '');
        END;
      END;
      gRateCode := RateCode;
      //DP00485.en

      lvInventoryMngmnt.CreateStockToLocation(
        OrderType::Receipt,'',0,
        PlantNoRec."Ship To Location",PlantNoRec."Plant Type",PlantNoRec."Stock No.",
        PlantNoRec."Receipt Date",PlantNoRec.Quantity,0,
        //PlantSetupRec."Default Rate Code",  //DP00485.o
        RateCode,  //DP00485.n C009408
        lvEmplNo,lvEmplComp,0, ExpectedReturnDepot);
    END;

    PROCEDURE SetReceiptMode@1100485000(IRcptDocNo@1100485001 : Code[20];IRcptLineNo@1100485000 : Integer;IExpectedEnddateExtRented@1100485002 : Date);
    BEGIN
      gReceiptMode := TRUE;
      gDocumentNo := IRcptDocNo;
      gDocLineNo := IRcptLineNo;
      gExpectedEnddateExtRented := IExpectedEnddateExtRented;
    END;

    PROCEDURE CreateArrivalRent@1100485001();
    VAR
      lvPlantRentMgtCU@1100485000 : Codeunit 11012578;
    BEGIN
      lvPlantRentMgtCU.CreateArrivalRentEntryExternal(
        PlantNoRec, gReceiptMode, gDocumentNo, gDocLineNo, gExpectedEnddateExtRented);
    END;

    PROCEDURE SetFromConvImport@1100409000();
    BEGIN
      // Import Plant No XML11012114
      gFromConvImport := TRUE;
    END;

    PROCEDURE GetRateCodeCreatedInventory@1100409001(VAR RateCode@1100409000 : Code[20]);
    BEGIN
      RateCode := gRateCode;
    END;

    LOCAL PROCEDURE GetExpectedReturnDepot@1100529001(PlantNumber@1100529000 : Record 11012552) : Code[20];
    VAR
      PurchaseLine@1100529001 : Record 39;
      PlantOrder@1100529002 : Record 11012556;
      PlantLocation@1100529003 : Record 11012554;
    BEGIN
      IF PlantNumber."Purchase Order No." <> '' THEN BEGIN
        PurchaseLine.SETRANGE("Document Type", PurchaseLine."Document Type"::Order);
        PurchaseLine.SETRANGE("Document No.", PlantNumber."Purchase Order No.");
        PurchaseLine.SETRANGE("Plant Type", PlantNumber."Plant Type");
        PurchaseLine.SETRANGE("Plant No.", PlantNumber."No.");
        PurchaseLine.SETFILTER("Plant Order No.", '<>%1', '');
        IF NOT PurchaseLine.FINDFIRST THEN BEGIN
          PurchaseLine.SETRANGE("Plant No.", '');
          IF NOT PurchaseLine.FINDFIRST THEN
            EXIT('');
        END;
        IF NOT PlantOrder.GET(PurchaseLine."Plant Order No.") THEN
          EXIT('');
        IF NOT PlantLocation.GET(PlantOrder."From Location") THEN
          EXIT('');
        IF PlantLocation.Depot THEN
          EXIT(PlantOrder."From Location");
      END;
      EXIT('');
    END;

    BEGIN
    END.
  }
}

