OBJECT Report 11128527 Delete rem. payment order
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVNO10.00 (15000004),4PSSE.NO;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Delete rem. payment order;
               NOR=Slette remitteringsoppdrag;
               SVE=Ta bort remitteringsorder];
    ProcessingOnly=Yes;
    UsageCategory=ReportsAndAnalysis;
  }
  DATASET
  {
    { 8474;    ;DataItem;                    ;
               DataItemTable=Table11128504;
               DataItemTableView=SORTING(Date);
               OnPreDataItem=BEGIN
                               IF StartDate < FirstDate THEN
                                 ERROR(Text000,StartDate);
                               IF EndDate > LastDate THEN
                                 ERROR(Text002,EndDate);

                               SETRANGE(Date,StartDate,EndDate);
                               IF FINDFIRST THEN BEGIN
                                 IF NOT CONFIRM(Text003,FALSE,COUNT) THEN
                                   ERROR('');
                               END ELSE
                                 ERROR(Text004);

                               Window.OPEN(Text005);
                               NumberOfWindows := COUNT;
                               WindowCOunter := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  WindowCOunter := WindowCOunter + 1;
                                  Window.UPDATE(1,ROUND(10000 * WindowCOunter / NumberOfWindows,1));

                                  // make sure no Waiting journal lines in the payment order of type:export have status approved or sent.
                                  // payment orders of type:return can be deleted.
                                  IF Type = Type::Export THEN BEGIN
                                    WaitingJournalLine.SETRANGE("Payment Order ID - Sent",ID);
                                    WaitingJournalLine.SETFILTER(
                                      "Remittance Status",'%1|%2',WaitingJournalLine."Remittance Status"::Sent,
                                      WaitingJournalLine."Remittance Status"::Approved);
                                    IF WaitingJournalLine.FINDFIRST THEN
                                      WaitingJournalLine.FIELDERROR("Remittance Status");
                                  END;

                                  DELETE(TRUE);
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   AccountingPeriod.SETRANGE(Closed,TRUE);
                   IF NOT AccountingPeriod.FINDFIRST THEN
                     ERROR(Text007);
                   FirstDate := AccountingPeriod."Starting Date";
                   // Find the first open period, following the last closed period
                   AccountingPeriod.FINDLAST;
                   AccountingPeriod.SETRANGE(Closed);
                   LastDate := AccountingPeriod."Starting Date";
                   IF AccountingPeriod.NEXT > 0 THEN
                     LastDate := CLOSINGDATE(CALCDATE('<-1D>',AccountingPeriod."Starting Date"));

                   StartDate := FirstDate;
                   EndDate := LastDate;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Start date;
                             NOR=Startdato;
                             SVE=Startdatum];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=StartDate }

      { 4   ;2   ;Field     ;
                  CaptionML=[ENU=End date;
                             NOR=Sluttdato;
                             SVE=Slutdatum];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=EndDate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1080009 : TextConst 'ENU=Only payment orders in closed accounting periods can be deleted.\Starting date %1 is prior to the first closed accounting period.;NOR=Bare oppdrag i lukkede regnskapsperioder kan slettes.\Startdatoen %1 er tidligere enn den f›rste lukkede regnskapsperioden.';
      Text002@1080011 : TextConst 'ENU=Only payment orders in closed accounting periods can be deleted.\Ending date %1 is after the last closed accounting period.;NOR=Bare oppdrag i lukkede regnskapsperioder kan slettes.\Startdatoen %1 er etter den siste lukkede regnskapsperioden.';
      Text003@1080012 : TextConst 'ENU=There are %1 payment orders in the period.\Delete?;NOR=Det er %1 oppdrag i perioden.\Slette?';
      Text004@1080013 : TextConst 'ENU=There are no remittance payment orders in the period.;NOR=Det er ingen remitteringsoppdrag i perioden.';
      Text005@1080014 : TextConst 'ENU=Deleting remittance payment order...\Deleting  @1@@@@@@@@@@@@@@@@@@@;NOR=Sletter remitteringsoppdrag ...\Setter @1@@@@@@@@@@@@@@@@@@@';
      Text007@1080016 : TextConst 'ENU=Only the payment order in closed accounting periods can be closed.\Not all periods are closed.;NOR=Bare oppdrag i lukkede regnskapsperioder kan slettes.\Det er ikke lukket noen perioder.';
      AccountingPeriod@1080018 : Record 50;
      WaitingJournalLine@1080019 : Record 11128507;
      Window@1080000 : Dialog;
      StartDate@1080020 : Date;
      EndDate@1080021 : Date;
      FirstDate@1080022 : Date;
      LastDate@1080023 : Date;
      WindowCOunter@1080025 : Integer;
      NumberOfWindows@1080026 : Integer;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

