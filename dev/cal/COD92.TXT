OBJECT Codeunit 92 Purch.-Post + Print
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.03,4PS14.00;
  }
  PROPERTIES
  {
    TableNo=38;
    OnRun=VAR
            PurchHeader@1000 : Record 38;
          BEGIN
            PurchHeader.COPY(Rec);
            Code(PurchHeader);
            Rec := PurchHeader;
          END;

  }
  CODE
  {
    VAR
      ReceiveInvoiceQst@1000 : TextConst 'ENU=&Receive,&Invoice,Receive and &Register Invoice,Receive &and Invoice;NOR=&Motta,F&akturer,Motta &og fakturer;SVE=&Inleverera,&Fakturera,Inleverera &och fakturera';
      PostAndPrintQst@1001 : TextConst '@@@="%1 = Document Type";ENU=Do you want to post and print the %1?;NOR=Vil du bokf›re og skrive ut %1?;SVE=Vill du bokf”ra och skriva ut %1?';
      ShipInvoiceQst@1002 : TextConst 'ENU=&Ship,&Invoice,Ship &and Invoice;NOR=&Lever,F&akturer,Lever &og fakturer;SVE=&Leverera,&Fakturera,Leverera &och fakturera';
      gWorkingDate@1100525001 : Date;
      gFromSiteMgtForm@1100525000 : Boolean;
      Text11012001@1100409000 : TextConst 'ENU=It is only possible to post released Orders;NOR=Det er kun mulig † bokf›re frigitte ordre;SVE=Det „r bara m”jligt att bokf”ra sl„ppta ordrar';

    LOCAL PROCEDURE Code@2(VAR PurchHeader@1002 : Record 38);
    VAR
      PurchSetup@1000 : Record 312;
      PurchasePostViaJobQueue@1001 : Codeunit 98;
      HideDialog@1003 : Boolean;
      IsHandled@1004 : Boolean;
      DefaultOption@1005 : Integer;
    BEGIN
      HideDialog := FALSE;
      IsHandled := FALSE;
      DefaultOption := 3;
      OnBeforeConfirmPost(PurchHeader,HideDialog,IsHandled,DefaultOption);
      IF IsHandled THEN
        EXIT;

      IF NOT HideDialog THEN
        IF NOT ConfirmPost(PurchHeader,DefaultOption) THEN
          EXIT;

      OnAfterConfirmPost(PurchHeader);

      PurchSetup.GET;
      IF PurchSetup."Post & Print with Job Queue" THEN
        PurchasePostViaJobQueue.EnqueuePurchDoc(PurchHeader)
      ELSE BEGIN
        CODEUNIT.RUN(CODEUNIT::"Purch.-Post",PurchHeader);
        COMMIT;  //**4PS.n
        GetReport(PurchHeader);
      END;

      OnAfterPost(PurchHeader);
    END;

    LOCAL PROCEDURE ConfirmPost@9(VAR PurchHeader@1000 : Record 38;DefaultOption@1003 : Integer) : Boolean;
    VAR
      ConfirmManagement@1002 : Codeunit 27;
      Selection@1001 : Integer;
      PurchSetup@11012000 : Record 312;
    BEGIN
      PurchSetup.GET;  //**4PS.n
      WITH PurchHeader DO BEGIN
        CASE "Document Type" OF
          "Document Type"::Order:
            BEGIN
              //**4PS.so
              //Selection := STRMENU(ReceiveInvoiceQst,DefaultOption);
              //IF Selection = 0 THEN
              //  EXIT(FALSE);
              //Receive := Selection IN [1,3];
              //Invoice := Selection IN [2,3];
              //**4PS.eo

              //**4PS.sn
              IF ("Purchase Order Type" = "Purchase Order Type"::"Purchase Order") THEN
                IF PurchSetup."Release Purch Orders Required" THEN BEGIN
                  IF Status = Status::Open THEN BEGIN
                    MESSAGE(Text11012001);
                    EXIT(FALSE);
                  END;
                END;

              IF ("Purchase Order Type" = "Purchase Order Type"::"Return Order") THEN
                Selection := 1
              ELSE BEGIN
                IF PurchSetup."Invoice Purchase Orders" THEN
                  Selection := STRMENU(ReceiveInvoiceQst,1)
                ELSE
                  Selection := 1;
              END;

              IF Selection = 0 THEN
                EXIT(FALSE);
              Receive := Selection IN [1,3,4];
              Invoice := Selection IN [2,4];
              "Register Invoice" := (Selection = 3);
              UpdatePostingAndDocDate(FALSE,gWorkingDate);
              //**4PS.en
            END;
          "Document Type"::"Return Order":
            BEGIN
              Selection := STRMENU(ShipInvoiceQst,DefaultOption);
              IF Selection = 0 THEN
                EXIT(FALSE);
              Ship := Selection IN [1,3];
              Invoice := Selection IN [2,3];
              "Register Invoice" := FALSE;  //**4PS.n
            END
          ELSE
            IF NOT ConfirmManagement.ConfirmProcess(
                 STRSUBSTNO(PostAndPrintQst,"Document Type"),TRUE)
            THEN
              EXIT(FALSE);
        END;
        "Print Posted Documents" := TRUE;
      END;
      EXIT(TRUE);
    END;

    [External]
    PROCEDURE GetReport@3(VAR PurchHeader@1000 : Record 38);
    VAR
      IsHandled@1001 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforeGetReport(PurchHeader,IsHandled);
      IF IsHandled THEN
        EXIT;

      WITH PurchHeader DO
        CASE "Document Type" OF
          "Document Type"::Order:
            BEGIN
              IF Receive THEN
                PrintReceive(PurchHeader);
              IF Invoice THEN
                PrintInvoice(PurchHeader);
            END;
          "Document Type"::Invoice:
            PrintInvoice(PurchHeader);
          "Document Type"::"Return Order":
            BEGIN
              IF Ship THEN
                PrintShip(PurchHeader);
              IF Invoice THEN
                PrintCrMemo(PurchHeader);
            END;
          "Document Type"::"Credit Memo":
            PrintCrMemo(PurchHeader);
        END;
    END;

    LOCAL PROCEDURE PrintReceive@1(PurchHeader@1000 : Record 38);
    VAR
      PurchRcptHeader@1001 : Record 120;
      IsHandled@1002 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforePrintReceive(PurchHeader,IsHandled);
      IF IsHandled THEN
        EXIT;

      PurchRcptHeader."No." := PurchHeader."Last Receiving No.";
      PurchRcptHeader.SETRECFILTER;
      //PurchRcptHeader.PrintRecords(FALSE); //**4PS.o
      PurchRcptHeader.PrintRecords(TRUE); //**4PS.n
    END;

    LOCAL PROCEDURE PrintInvoice@4(PurchHeader@1000 : Record 38);
    VAR
      PurchInvHeader@1001 : Record 122;
      IsHandled@1002 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforePrintInvoice(PurchHeader,IsHandled);
      IF IsHandled THEN
        EXIT;

      IF PurchHeader."Last Posting No." = '' THEN
        PurchInvHeader."No." := PurchHeader."No."
      ELSE
        PurchInvHeader."No." := PurchHeader."Last Posting No.";
      PurchInvHeader.SETRECFILTER;
      //PurchInvHeader.PrintRecords(FALSE); //**4PS.o
      PurchInvHeader.PrintRecords(TRUE); //**4PS.n
    END;

    LOCAL PROCEDURE PrintShip@5(PurchHeader@1000 : Record 38);
    VAR
      ReturnShptHeader@1001 : Record 6650;
      IsHandled@1002 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforePrintShip(PurchHeader,IsHandled);
      IF IsHandled THEN
        EXIT;

      ReturnShptHeader."No." := PurchHeader."Last Return Shipment No.";
      ReturnShptHeader.SETRECFILTER;
      //ReturnShptHeader.PrintRecords(FALSE); //**4PS.o
      ReturnShptHeader.PrintRecords(TRUE,TRUE); //**4PS.n
    END;

    LOCAL PROCEDURE PrintCrMemo@6(PurchHeader@1000 : Record 38);
    VAR
      PurchCrMemoHdr@1001 : Record 124;
      IsHandled@1002 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforePrintCrMemo(PurchHeader,IsHandled);
      IF IsHandled THEN
        EXIT;

      IF PurchHeader."Last Posting No." = '' THEN
        PurchCrMemoHdr."No." := PurchHeader."No."
      ELSE
        PurchCrMemoHdr."No." := PurchHeader."Last Posting No.";
      PurchCrMemoHdr.SETRECFILTER;
      //PurchCrMemoHdr.PrintRecords(FALSE); //**4PS.o
      PurchCrMemoHdr.PrintRecords(TRUE,TRUE); //**4PS.n
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterPost@8(VAR PurchaseHeader@1000 : Record 38);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterConfirmPost@10(PurchaseHeader@1000 : Record 38);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeConfirmPost@7(VAR PurchaseHeader@1000 : Record 38;VAR HideDialog@1001 : Boolean;VAR IsHandled@1002 : Boolean;VAR DefaultOption@1003 : Integer);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeGetReport@11(VAR PurchaseHeader@1000 : Record 38;VAR IsHandled@1001 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforePrintInvoice@17(VAR PurchaseHeader@1000 : Record 38;VAR IsHandled@1002 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforePrintCrMemo@18(VAR PurchaseHeader@1000 : Record 38;VAR IsHandled@1002 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforePrintReceive@14(VAR PurchaseHeader@1000 : Record 38;VAR IsHandled@1002 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforePrintShip@16(VAR PurchaseHeader@1000 : Record 38;VAR IsHandled@1002 : Boolean);
    BEGIN
    END;

    PROCEDURE SetSiteMgtForm@1100525002(WorkingDate@1100525000 : Date);
    BEGIN
      //**4PS  C-027632
      gFromSiteMgtForm := TRUE;
      gWorkingDate := WorkingDate;
    END;

    BEGIN
    {
      4PS, dbeekman, 22-10-2008:
            - Report selection handled by cod229.GetReportSelection
    }
    END.
  }
}

