OBJECT Table 1265 Data Exch. Field Mapping Buf.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               DataExchFieldMapping@1000 : Record 1225;
             BEGIN
               TESTFIELD(Type,Type::Field);
               IF "Column No." = 0 THEN
                 CreateDataExchColumnDef;

               IF NOT DataExchFieldMapping.GET("Data Exchange Def Code","Data Exchange Line Def Code","Table ID","Column No.","Field ID") THEN
                 CreateFieldMapping;
             END;

    OnDelete=VAR
               DataExchColumnDef@1000 : Record 1223;
               DataExchFieldMapping@1001 : Record 1225;
             BEGIN
               TESTFIELD(Type,Type::Field);
               IF DataExchFieldMapping.GET("Data Exchange Def Code","Data Exchange Line Def Code","Table ID","Column No.","Field ID") THEN
                 DataExchFieldMapping.DELETE(TRUE);

               IF DataExchColumnDef.GET("Data Exchange Def Code","Data Exchange Line Def Code","Column No.") THEN
                 DataExchColumnDef.DELETE(TRUE);
             END;

    OnRename=BEGIN
               // TODO: Test and implement
             END;

    CaptionML=[ENU=Data Exch. Field Mapping Buf.;
               NOR=Buffer for felttilordning for datautveksl.;
               SVE=Mappningsbuff. f”r dataintegrationsf„lt];
  }
  FIELDS
  {
    { 1   ;   ;Data Exchange Def Code;Code20      ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Data Exchange Def Code;
                                                              NOR=Kode for datautveksl.def.;
                                                              SVE=Kod f”r dataintegrationsdef.] }
    { 2   ;   ;Data Exchange Line Def Code;Code20 ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Data Exchange Line Def Code;
                                                              NOR=Kode for linjedef. for datautveksl.;
                                                              SVE=Def.kod f”r dataintegrationsrad] }
    { 3   ;   ;Table ID            ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Table ID;
                                                              NOR=Tabell-ID;
                                                              SVE=Tabell-ID] }
    { 4   ;   ;Column No.          ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Column No.;
                                                              NOR=Kolonnenr.;
                                                              SVE=Kolumnnr] }
    { 5   ;   ;Type                ;Option        ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=Field,Table;
                                                                    NOR=Felt,Tabell;
                                                                    SVE=F„lt,Tabell];
                                                   OptionString=Field,Table }
    { 10  ;   ;Field ID            ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Field ID;
                                                              NOR=Felt-ID;
                                                              SVE=F„lt-ID] }
    { 11  ;   ;Default Value       ;Text250       ;OnValidate=VAR
                                                                DataExchFieldMapping@1000 : Record 1225;
                                                              BEGIN
                                                                TESTFIELD(Type,Type::Field);
                                                                DataExchFieldMapping.GET("Data Exchange Def Code","Data Exchange Line Def Code","Table ID","Column No.","Field ID");
                                                                DataExchFieldMapping.VALIDATE("Default Value","Default Value");
                                                                DataExchFieldMapping.MODIFY(TRUE);
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Default Value;
                                                              NOR=Standardverdi;
                                                              SVE=Standardv„rde] }
    { 13  ;   ;Source              ;Text250       ;OnValidate=VAR
                                                                DataExchColumnDef@1000 : Record 1223;
                                                                DataExchLineDef@1001 : Record 1227;
                                                              BEGIN
                                                                CASE Type OF
                                                                  Type::Field:
                                                                    IF NOT DataExchColumnDef.GET("Data Exchange Def Code","Data Exchange Line Def Code","Column No.") THEN
                                                                      CreateDataExchColumnDef
                                                                    ELSE BEGIN
                                                                      DataExchColumnDef.VALIDATE(Path,Source);
                                                                      DataExchColumnDef.MODIFY(TRUE);
                                                                    END;
                                                                  Type::Table:
                                                                    BEGIN
                                                                      DataExchLineDef.GET("Data Exchange Def Code","Data Exchange Line Def Code");
                                                                      DataExchLineDef.VALIDATE("Data Line Tag",Source);
                                                                      DataExchLineDef.MODIFY(TRUE);
                                                                    END;
                                                                END;
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Source;
                                                              NOR=Kilde;
                                                              SVE=K„lla] }
    { 20  ;   ;Caption             ;Text250       ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Caption;
                                                              NOR=Overskrift;
                                                              SVE=Rubrik];
                                                   Editable=No }
    { 22  ;   ;Depth               ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Depth;
                                                              NOR=Dybde;
                                                              SVE=Niv†] }
    { 23  ;   ;Transformation Rule ;Code20        ;TableRelation="Transformation Rule";
                                                   OnValidate=VAR
                                                                DataExchFieldMapping@1000 : Record 1225;
                                                              BEGIN
                                                                TESTFIELD(Type,Type::Field);
                                                                DataExchFieldMapping.GET("Data Exchange Def Code","Data Exchange Line Def Code","Table ID","Column No.","Field ID");
                                                                DataExchFieldMapping.VALIDATE("Transformation Rule","Transformation Rule");
                                                                DataExchFieldMapping.MODIFY(TRUE);
                                                              END;

                                                   DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Transformation Rule;
                                                              NOR=Transformasjonsregel;
                                                              SVE=Omvandlingsregel] }
  }
  KEYS
  {
    {    ;Data Exchange Def Code,Data Exchange Line Def Code,Field ID,Table ID;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE InsertFromDataExchDefinition@14(VAR TempDataExchFieldMappingBuf@1001 : TEMPORARY Record 1265;DataExchDef@1000 : Record 1222;VAR TempSuggestedField@1003 : TEMPORARY Record 2000000041);
    VAR
      DataExchLineDef@1002 : Record 1227;
    BEGIN
      DataExchLineDef.SETRANGE("Data Exch. Def Code",DataExchDef.Code);
      DataExchLineDef.SETRANGE("Parent Code",'');

      IF DataExchLineDef.FINDSET THEN
        REPEAT
          InsertFromDataExchDefinitionLine(TempDataExchFieldMappingBuf,DataExchLineDef,TempSuggestedField,0);
        UNTIL DataExchLineDef.NEXT = 0;
    END;

    [External]
    PROCEDURE InsertFromDataExchDefinitionLine@31(VAR TempDataExchFieldMappingBuf@1001 : TEMPORARY Record 1265;DataExchLineDef@1000 : Record 1227;VAR TempSuggestedField@1003 : TEMPORARY Record 2000000041;NewDepth@1004 : Integer);
    VAR
      DataExchMapping@1002 : Record 1224;
      ChildDataExchLineDef@1005 : Record 1227;
    BEGIN
      DataExchMapping.SETRANGE("Data Exch. Def Code",DataExchLineDef."Data Exch. Def Code");
      DataExchMapping.SETRANGE("Data Exch. Line Def Code",DataExchLineDef.Code);

      IF DataExchMapping.FINDSET THEN
        REPEAT
          InsertDataExchLineDefMappingLine(TempDataExchFieldMappingBuf,DataExchMapping,NewDepth);
          InsertFieldMappingDefinition(TempDataExchFieldMappingBuf,DataExchMapping,NewDepth + 1);
          InsertSuggestedFields(TempDataExchFieldMappingBuf,DataExchMapping,TempSuggestedField,NewDepth + 1);
        UNTIL DataExchMapping.NEXT = 0;

      ChildDataExchLineDef.SETRANGE("Data Exch. Def Code",DataExchLineDef."Data Exch. Def Code");
      ChildDataExchLineDef.SETRANGE("Parent Code",DataExchLineDef.Code);

      IF ChildDataExchLineDef.FINDSET THEN
        REPEAT
          InsertFromDataExchDefinitionLine(TempDataExchFieldMappingBuf,ChildDataExchLineDef,TempSuggestedField,NewDepth + 1);
        UNTIL ChildDataExchLineDef.NEXT = 0;
    END;

    [External]
    PROCEDURE InsertFieldMappingDefinition@30(VAR TempDataExchFieldMappingBuf@1001 : TEMPORARY Record 1265;DataExchMapping@1000 : Record 1224;Indentation@1004 : Integer);
    VAR
      DataExchFieldMapping@1003 : Record 1225;
    BEGIN
      DataExchFieldMapping.SETRANGE("Data Exch. Def Code",DataExchMapping."Data Exch. Def Code");
      DataExchFieldMapping.SETRANGE("Data Exch. Line Def Code",DataExchMapping."Data Exch. Line Def Code");
      DataExchFieldMapping.SETRANGE("Table ID",DataExchMapping."Table ID");

      IF NOT DataExchFieldMapping.FINDSET THEN
        EXIT;

      REPEAT
        InsertFieldMappingLineDefinition(TempDataExchFieldMappingBuf,DataExchMapping,DataExchFieldMapping,Indentation);
      UNTIL DataExchFieldMapping.NEXT = 0;
    END;

    [External]
    PROCEDURE InsertSuggestedFields@32(VAR TempDataExchFieldMappingBuf@1001 : TEMPORARY Record 1265;DataExchMapping@1000 : Record 1224;VAR TempSuggestedField@1005 : TEMPORARY Record 2000000041;Indentation@1004 : Integer);
    VAR
      DataExchFieldMapping@1003 : Record 1225;
    BEGIN
      TempSuggestedField.SETRANGE(TableNo,DataExchMapping."Table ID");

      IF NOT TempSuggestedField.FINDSET THEN
        EXIT;

      REPEAT
        DataExchFieldMapping.SETRANGE("Data Exch. Def Code",DataExchMapping."Data Exch. Def Code");
        DataExchFieldMapping.SETRANGE("Data Exch. Line Def Code",DataExchMapping."Data Exch. Line Def Code");
        DataExchFieldMapping.SETRANGE("Table ID",DataExchMapping."Table ID");
        DataExchFieldMapping.SETRANGE("Field ID",TempSuggestedField."No.");
        IF NOT DataExchFieldMapping.FINDFIRST THEN BEGIN
          InitializeDataExchangeSetupLine(
            TempDataExchFieldMappingBuf,DataExchMapping,TempSuggestedField."No.",Indentation,TempSuggestedField."Field Caption");
          TempDataExchFieldMappingBuf.INSERT(TRUE);
        END;
      UNTIL TempSuggestedField.NEXT = 0;
    END;

    [External]
    PROCEDURE InsertFieldMappingLineDefinition@52(VAR TempDataExchFieldMappingBuf@1001 : TEMPORARY Record 1265;DataExchMapping@1000 : Record 1224;DataExchFieldMapping@1003 : Record 1225;Indentation@1004 : Integer);
    VAR
      DataExchColumnDef@1002 : Record 1223;
    BEGIN
      InitializeDataExchangeSetupLine(
        TempDataExchFieldMappingBuf,DataExchMapping,DataExchFieldMapping."Field ID",Indentation,DataExchFieldMapping.GetFieldCaption);
      TempDataExchFieldMappingBuf."Column No." := DataExchFieldMapping."Column No.";
      TempDataExchFieldMappingBuf."Default Value" := DataExchFieldMapping."Default Value";
      TempDataExchFieldMappingBuf."Transformation Rule" := DataExchFieldMapping."Transformation Rule";
      DataExchColumnDef.GET(
        DataExchFieldMapping."Data Exch. Def Code",DataExchFieldMapping."Data Exch. Line Def Code",
        DataExchFieldMapping."Column No.");
      TempDataExchFieldMappingBuf.Source := DataExchColumnDef.Path;
      TempDataExchFieldMappingBuf.INSERT(TRUE);
    END;

    LOCAL PROCEDURE InsertDataExchLineDefMappingLine@56(VAR TempDataExchFieldMappingBuf@1001 : TEMPORARY Record 1265;DataExchMapping@1000 : Record 1224;Indentation@1003 : Integer);
    VAR
      DataExchDef@1002 : Record 1222;
      DataExchLineDef@1005 : Record 1227;
    BEGIN
      DataExchDef.GET(DataExchMapping."Data Exch. Def Code");
      DataExchLineDef.GET(DataExchMapping."Data Exch. Def Code",DataExchMapping."Data Exch. Line Def Code");
      CLEAR(TempDataExchFieldMappingBuf);
      TempDataExchFieldMappingBuf.INIT;
      TempDataExchFieldMappingBuf."Data Exchange Def Code" := DataExchMapping."Data Exch. Def Code";
      TempDataExchFieldMappingBuf."Data Exchange Line Def Code" := DataExchMapping."Data Exch. Line Def Code";
      TempDataExchFieldMappingBuf.Type := TempDataExchFieldMappingBuf.Type::Table;
      TempDataExchFieldMappingBuf."Table ID" := DataExchMapping."Table ID";
      TempDataExchFieldMappingBuf.Caption := DataExchLineDef.Name;
      TempDataExchFieldMappingBuf.Depth := Indentation;
      TempDataExchFieldMappingBuf.Source := DataExchLineDef."Data Line Tag";
      TempDataExchFieldMappingBuf.INSERT;
    END;

    LOCAL PROCEDURE InitializeDataExchangeSetupLine@10(VAR TempDataExchFieldMappingBuf@1001 : TEMPORARY Record 1265;DataExchMapping@1000 : Record 1224;FieldID@1002 : Integer;Indentation@1003 : Integer;NewCaption@1004 : Text);
    VAR
      DataExchDef@1005 : Record 1222;
    BEGIN
      DataExchDef.GET(DataExchMapping."Data Exch. Def Code");

      CLEAR(TempDataExchFieldMappingBuf);
      TempDataExchFieldMappingBuf.INIT;
      TempDataExchFieldMappingBuf."Data Exchange Def Code" := DataExchMapping."Data Exch. Def Code";
      TempDataExchFieldMappingBuf."Data Exchange Line Def Code" := DataExchMapping."Data Exch. Line Def Code";
      TempDataExchFieldMappingBuf.Type := TempDataExchFieldMappingBuf.Type::Field;
      TempDataExchFieldMappingBuf."Table ID" := DataExchMapping."Table ID";
      TempDataExchFieldMappingBuf."Field ID" := FieldID;
      TempDataExchFieldMappingBuf.Caption := COPYSTR(NewCaption,1,MAXSTRLEN(TempDataExchFieldMappingBuf.Caption));
      TempDataExchFieldMappingBuf.Depth := Indentation;
    END;

    [External]
    PROCEDURE SourceAssistEdit@4(VAR XMLBuffer@1000 : Record 1235);
    BEGIN
      IF PAGE.RUNMODAL(PAGE::"Select Source",XMLBuffer) = ACTION::LookupOK THEN
        VALIDATE(Source,XMLBuffer.Path);
    END;

    [External]
    PROCEDURE CaptionAssistEdit@5();
    VAR
      Field@1001 : Record 2000000041;
      FieldList@1000 : Page 6218;
    BEGIN
      Field.SETRANGE(TableNo,"Table ID");
      Field.SETFILTER(ObsoleteState,'<>%1',Field.ObsoleteState::Removed);
      FieldList.SETTABLEVIEW(Field);
      FieldList.LOOKUPMODE(TRUE);
      IF FieldList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        FieldList.GETRECORD(Field);
        VALIDATE("Field ID",Field."No.");
        VALIDATE(Caption,Field."Field Caption");
      END;
    END;

    LOCAL PROCEDURE GetLastColumnNo@1() : Integer;
    VAR
      DataExchColumnDef@1000 : Record 1223;
    BEGIN
      DataExchColumnDef.SETRANGE("Data Exch. Def Code","Data Exchange Def Code");
      DataExchColumnDef.SETRANGE("Data Exch. Line Def Code","Data Exchange Line Def Code");
      IF DataExchColumnDef.FINDLAST THEN
        EXIT(DataExchColumnDef."Column No.");

      EXIT(GetIncrement);
    END;

    LOCAL PROCEDURE GetIncrement@6() : Integer;
    BEGIN
      EXIT(10000);
    END;

    LOCAL PROCEDURE CreateDataExchColumnDef@15();
    VAR
      DataExchColumnDef@1000 : Record 1223;
    BEGIN
      IF "Data Exchange Def Code" <> '' THEN BEGIN
        "Column No." := GetLastColumnNo + GetIncrement;
        DataExchColumnDef.INIT;
        DataExchColumnDef."Data Exch. Def Code" := "Data Exchange Def Code";
        DataExchColumnDef."Data Exch. Line Def Code" := "Data Exchange Line Def Code";
        DataExchColumnDef."Column No." := "Column No.";
        DataExchColumnDef.Path := Source;
        DataExchColumnDef.INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE CreateFieldMapping@7();
    VAR
      DataExchFieldMapping@1000 : Record 1225;
    BEGIN
      IF "Data Exchange Def Code" <> '' THEN BEGIN
        DataExchFieldMapping.INIT;
        DataExchFieldMapping.VALIDATE("Data Exch. Def Code","Data Exchange Def Code");
        DataExchFieldMapping.VALIDATE("Data Exch. Line Def Code","Data Exchange Line Def Code");
        DataExchFieldMapping.VALIDATE("Table ID","Table ID");
        DataExchFieldMapping.VALIDATE("Column No.","Column No.");
        DataExchFieldMapping.VALIDATE("Field ID","Field ID");
        DataExchFieldMapping.VALIDATE("Default Value","Default Value");
        DataExchFieldMapping.VALIDATE("Transformation Rule","Transformation Rule");
        DataExchFieldMapping.INSERT(TRUE);
      END;
    END;

    BEGIN
    END.
  }
}

