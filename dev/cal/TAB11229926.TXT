OBJECT Table 11229926 Plant - Material Inventory
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               PlantProfileAnswer@1100529000 : Record 11012582;
             BEGIN
               PlantProfileAnswer.SETRANGE(Level, PlantProfileAnswer.Level::MaterialInventory);
               PlantProfileAnswer.SETRANGE("Plant Type", "Plant Type");
               PlantProfileAnswer.SETRANGE("Plant No.", "Plant No.");
               PlantProfileAnswer.SETRANGE("Material Inventory Line No.", "Line No.");
               PlantProfileAnswer.DELETEALL;
             END;

    CaptionML=ENU=Plant - Material Inventory;
  }
  FIELDS
  {
    { 10  ;   ;Plant Type          ;Code20        ;TableRelation="Plant Type";
                                                   CaptionML=[ENU=Plant Type;
                                                              NOR=Maskintype;
                                                              SVE=Maskintyp];
                                                   NotBlank=Yes }
    { 20  ;   ;Plant No.           ;Code10        ;TableRelation="Plant Number".No. WHERE (Plant Type=FIELD(Plant Type));
                                                   OnValidate=BEGIN
                                                                IF "Plant No." <> xRec."Plant No." THEN
                                                                  VALIDATE(Meter, '');
                                                                CALCFIELDS("Plant Description");
                                                              END;

                                                   CaptionML=[ENU=Plant No.;
                                                              NOR=Maskinnr.;
                                                              SVE=Maskinnr];
                                                   NotBlank=Yes }
    { 21  ;   ;Plant Description   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Number".Description WHERE (Plant Type=FIELD(Plant Type),
                                                                                                        No.=FIELD(Plant No.)));
                                                   CaptionML=[ENU=Plant Description;
                                                              NOR=Maskinbeskrivelse;
                                                              SVE=Maskinbeskrivning];
                                                   Editable=No }
    { 30  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 40  ;   ;Item No.            ;Code20        ;TableRelation=Item.No.;
                                                   OnValidate=BEGIN
                                                                IF xRec."Item No." <> "Item No." THEN BEGIN
                                                                  IF "Item No." <> '' THEN
                                                                    ValidateItem(ItemTypeOpt::Item);
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              HandleLookupItem(FIELDNO("Item No."));
                                                            END;

                                                   CaptionML=[ENU=Item No.;
                                                              NOR=Varenr.;
                                                              SVE=Artikelnr] }
    { 50  ;   ;Manufacturer        ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=[ENU=Manufacturer;
                                                              NOR=Produsent;
                                                              SVE=Tillverkare] }
    { 55  ;   ;Basic Item          ;Code20        ;TableRelation="Basic Item"."Product Code" WHERE (Manufacturer=FIELD(Manufacturer));
                                                   OnValidate=BEGIN
                                                                IF xRec."Basic Item" <> "Basic Item" THEN BEGIN
                                                                  IF "Basic Item" <> '' THEN
                                                                    ValidateItem(ItemTypeOpt::"Basic Item");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              HandleLookupItem(FIELDNO("Basic Item"));
                                                            END;

                                                   CaptionML=[ENU=Basic Item;
                                                              NOR=Fabrikantartikkel;
                                                              SVE=Basartikel] }
    { 60  ;   ;Vendor (Trade Item) ;Code15        ;TableRelation="ETIM Vendor - Central Mgt";
                                                   CaptionML=[ENU=Vendor (Trade Item);
                                                              NOR=Leverand›r (katalogartikkel);
                                                              SVE=Leverant”r (skaffningsartikel)] }
    { 65  ;   ;Trade Item          ;Code20        ;TableRelation=IF (Vendor (Trade Item)=FILTER(<>'')) "Trade Item"."Item Code" WHERE (Vendor=FIELD("Vendor (Trade Item)"))
                                                                 ELSE IF (Vendor (Trade Item)=FILTER('')) "Trade Item"."Item Code";
                                                   OnValidate=BEGIN
                                                                IF xRec."Trade Item" <> "Trade Item" THEN BEGIN
                                                                  IF "Trade Item" <> '' THEN
                                                                    ValidateItem(ItemTypeOpt::"Trade Item");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              HandleLookupItem(FIELDNO("Trade Item"));
                                                            END;

                                                   CaptionML=[ENU=Trade Item;
                                                              NOR=Katalogartikkel;
                                                              SVE=Anskaffningsartikel] }
    { 70  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 80  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal] }
    { 90  ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   OnLookup=BEGIN
                                                              HandleLookupUnit;
                                                            END;

                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=M†leenhet;
                                                              SVE=M†ttenhet] }
    { 100 ;   ;Warranty Type       ;Code10        ;TableRelation="Plant Warranty Type";
                                                   OnValidate=VAR
                                                                DateFormula@1100529000 : DateFormula;
                                                              BEGIN
                                                                IF "Warranty Type" = '' THEN BEGIN
                                                                  TESTFIELD("Starting Date", 0D);
                                                                  TESTFIELD("Lead Time", DateFormula);
                                                                  TESTFIELD(Meter, '');
                                                                  TESTFIELD("Meter Reading Type", '');
                                                                END;
                                                                CALCFIELDS("Warranty Type Description");
                                                              END;

                                                   CaptionML=ENU=Warranty Type }
    { 101 ;   ;Warranty Type Description;Text50   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Warranty Type".Description WHERE (Code=FIELD(Warranty Type)));
                                                   CaptionML=ENU=Warranty Type Description;
                                                   Editable=No }
    { 110 ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                IF "Starting Date" <> 0D THEN
                                                                  TESTFIELD("Warranty Type");
                                                                CalculateDueDate;
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum] }
    { 120 ;   ;Lead Time           ;DateFormula   ;OnValidate=BEGIN
                                                                IF FORMAT("Lead Time") <> '' THEN
                                                                  TESTFIELD("Warranty Type");
                                                                CalculateDueDate;
                                                              END;

                                                   CaptionML=ENU=Lead Time }
    { 125 ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              NOR=Forfallsdato;
                                                              SVE=F”rfallodatum];
                                                   Editable=No }
    { 130 ;   ;Meter               ;Code10        ;TableRelation="Plant Meter Type"."Plant Meter" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                         Plant No.=FIELD(Plant No.));
                                                   OnValidate=BEGIN
                                                                IF Meter <> '' THEN
                                                                  TESTFIELD("Warranty Type");
                                                                IF Meter <> xRec.Meter THEN
                                                                  VALIDATE("Meter Reading Type", GetDefaultMeterReadingType);
                                                              END;

                                                   CaptionML=ENU=Meter }
    { 140 ;   ;Meter Reading Type  ;Code10        ;TableRelation="Plant Meter Type"."Plant Meter Type" WHERE (Plant Type=FIELD(Plant Type),
                                                                                                              Plant No.=FIELD(Plant No.),
                                                                                                              Plant Meter=FIELD(Meter));
                                                   OnValidate=BEGIN
                                                                IF "Meter Reading Type" = '' THEN
                                                                  "Meter Reading to (Total)" := 0
                                                                ELSE
                                                                  TESTFIELD("Warranty Type");
                                                                CALCFIELDS("Meter Unit of Measure");
                                                              END;

                                                   CaptionML=ENU=Meter Reading Type }
    { 141 ;   ;Meter Unit of Measure;Code10       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Plant Meter Reading Type"."Unit of Measure" WHERE (Code=FIELD(Meter Reading Type)));
                                                   CaptionML=ENU=Meter Unit of Measure;
                                                   Editable=No }
    { 150 ;   ;Meter Reading to (Total);Decimal   ;OnValidate=BEGIN
                                                                IF "Meter Reading to (Total)" <> 0 THEN
                                                                  TESTFIELD("Meter Reading Type");
                                                              END;

                                                   CaptionML=ENU=Meter Reading to (Total);
                                                   DecimalPlaces=0:0;
                                                   MinValue=0;
                                                   BlankZero=Yes }
    { 160 ;   ;Comment             ;Text80        ;CaptionML=[ENU=Comment;
                                                              NOR=Merknad;
                                                              SVE=Kommentar] }
  }
  KEYS
  {
    {    ;Plant Type,Plant No.,Line No.           ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ItemTypeOpt@1100526200 : 'Item,Basic Item,Trade Item,Trade Vendor';

    PROCEDURE ValidateItem@3(ITypeArtOpt@11012000 : 'Item,Basic Item,Trade Item,Trade Vendor');
    VAR
      ValidateItemsCU@1100526200 : Codeunit 11012033;
      Desc1Txt@1210190001 : Text[50];
      Desc2Txt@1210190003 : Text[50];
      lvDummyCode20@1100526201 : Code[20];
      lvDummyDec@1100526202 : Decimal;
      lvDummyDate@1100526203 : Date;
    BEGIN
      ValidateItemsCU.ValidateItem(
        ITypeArtOpt, "Trade Item", "Item No.", Manufacturer, "Vendor (Trade Item)", "Basic Item",
        lvDummyCode20, Desc1Txt, "Unit of Measure", lvDummyDec,
        lvDummyDec, lvDummyDate, lvDummyDec, Desc2Txt, lvDummyCode20,
        lvDummyCode20, lvDummyCode20, lvDummyDate, lvDummyCode20);

      IF Desc2Txt = '' THEN
        Description := Desc1Txt
      ELSE
        Description := COPYSTR((Desc1Txt + '\' + Desc2Txt), 1, MAXSTRLEN(Description));
      VALIDATE(Description);
    END;

    PROCEDURE HandleLookupItem@1100525003(lvFieldNo@1100525004 : Integer) lvRefresh : Boolean;
    VAR
      ItemRec@1100525012 : Record 27;
      BasicItemRec@1100525011 : Record 11012316;
      TradeItemRec@1100525010 : Record 11012317;
      ItemFrm@1100525009 : Page 31;
      BasicItemFrm@1100525008 : Page 11012333;
      TradeItemFrm@1100525007 : Page 11012334;
      g_ItemCode@1100525014 : Code[20];
      g_Vendor@1100525013 : Code[20];
    BEGIN
      IF lvFieldNo = FIELDNO("Item No.") THEN BEGIN
        CLEAR(ItemFrm);
        ItemFrm.LOOKUPMODE(TRUE);
        IF ItemRec.GET("Item No.") THEN
          ItemFrm.SETRECORD(ItemRec);
        IF ItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
          ItemFrm.GETRECORD(ItemRec);
          VALIDATE("Item No.", ItemRec."No.");
        END ELSE BEGIN
          lvRefresh := ItemFrm.CheckMultiCopy;
        END;
      END;

      IF lvFieldNo = FIELDNO("Basic Item") THEN BEGIN
        CLEAR(BasicItemFrm);
        BasicItemFrm.LOOKUPMODE(TRUE);
        BasicItemRec.InitLookup(BasicItemRec, "Basic Item", Manufacturer);
        BasicItemFrm.SETRECORD(BasicItemRec);

        IF BasicItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
          BasicItemFrm.GETRECORD(BasicItemRec);
          VALIDATE(Manufacturer, BasicItemRec.Manufacturer);
          VALIDATE("Basic Item", BasicItemRec."Product Code");
        END ELSE BEGIN
          lvRefresh := BasicItemFrm.CheckMultiCopy;
        END;
      END;

      IF lvFieldNo = FIELDNO("Trade Item") THEN BEGIN
        g_ItemCode := '';
        g_Vendor := '';

        CLEAR(TradeItemFrm);

        TradeItemFrm.LOOKUPMODE(TRUE);
        TradeItemRec.InitLookup(TradeItemRec, "Basic Item", Manufacturer, "Trade Item", "Vendor (Trade Item)");
        TradeItemFrm.SETRECORD(TradeItemRec);
        IF TradeItemFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
          TradeItemFrm.GETRECORD(TradeItemRec);
          Manufacturer := TradeItemRec.Manufacturer;
          "Basic Item" := TradeItemRec."Product Code";
          "Vendor (Trade Item)" := TradeItemRec.Vendor;
          VALIDATE("Trade Item", TradeItemRec."Item Code");
        END ELSE BEGIN
          lvRefresh := TradeItemFrm.CheckMultiCopy;
        END;
      END;

      EXIT(lvRefresh);
    END;

    PROCEDURE HandleLookupUnit@1210190011();
    VAR
      ItemUnitRec@1210190000 : Record 5404;
      lvUnit@1210190001 : Code[10];
    BEGIN
      lvUnit := ItemUnitRec.HandleLookupUnit("Item No.", "Basic Item", "Trade Item", Manufacturer, "Vendor (Trade Item)");
      IF (lvUnit <> '') AND (lvUnit <> "Unit of Measure") THEN BEGIN
        xRec."Unit of Measure" := "Unit of Measure";
        VALIDATE("Unit of Measure", lvUnit);
      END;
    END;

    PROCEDURE CalculateDueDate@1100529000();
    BEGIN
      IF ("Starting Date" = 0D) OR (FORMAT("Lead Time") ='') THEN
        "Due Date" := 0D
      ELSE
        "Due Date" := CALCDATE("Lead Time", "Starting Date");
    END;

    LOCAL PROCEDURE GetDefaultMeterReadingType@1100529001() : Code[20];
    VAR
      PlantMeterType@1100529000 : Record 11229921;
    BEGIN
      IF Meter <> '' THEN BEGIN
        PlantMeterType.SETRANGE("Plant Type","Plant Type");
        PlantMeterType.SETRANGE("Plant No.","Plant No.");
        PlantMeterType.SETRANGE("Plant Meter",Meter);
        IF PlantMeterType.FINDFIRST THEN BEGIN
          IF PlantMeterType.NEXT = 0 THEN
            EXIT(PlantMeterType."Plant Meter Type");
        END;
      END;
      EXIT('');
    END;

    PROCEDURE IsActiveWarranty@1100529002() : Boolean;
    VAR
      WarrantyFound@1100529000 : Boolean;
    BEGIN
      IF ("Warranty Type" = '') OR ("Starting Date" > TODAY) THEN
        EXIT(FALSE);
      IF (FORMAT("Lead Time") <> '') AND ("Due Date" <> 0D) THEN BEGIN
        IF "Due Date" <= TODAY THEN
          EXIT(FALSE);
        WarrantyFound := TRUE;
      END;
      IF ("Meter Reading to (Total)" > 0) AND ("Plant Type" <> '') AND ("Plant No." <> '') AND (Meter <> '') AND ("Meter Reading Type" <> '') THEN BEGIN
        IF TotalMeterReading > "Meter Reading to (Total)" THEN
          EXIT(FALSE);
        WarrantyFound := TRUE;
      END;
      EXIT(WarrantyFound);
    END;

    PROCEDURE ActualMeterReading@1100529003() : Decimal;
    VAR
      PlantMeterType@1100529001 : Record 11229921;
    BEGIN
      IF ("Plant Type" <> '') AND ("Plant No." <> '') AND (Meter <> '') AND ("Meter Reading Type" <> '') THEN
        EXIT(PlantMeterType.ActualMeterReading("Plant Type", "Plant No.", Meter, "Meter Reading Type"));
      EXIT(0);
    END;

    PROCEDURE TotalMeterReading@1100529005() : Decimal;
    VAR
      PlantMeterType@1100529001 : Record 11229921;
    BEGIN
      IF ("Plant Type" <> '') AND ("Plant No." <> '') AND (Meter <> '') AND ("Meter Reading Type" <> '') THEN
        EXIT(PlantMeterType.TotalMeterReading("Plant Type", "Plant No.", Meter, "Meter Reading Type", 0D, 0D));
      EXIT(0);
    END;

    BEGIN
    {
      Base copied from  Object Material Inventory (T11071712)
    }
    END.
  }
}

