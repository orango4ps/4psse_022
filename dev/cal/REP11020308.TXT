OBJECT Report 11020308 Close Service Precl. Results
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Zwischenzeitliche Serviceergebnisse schlieáen;
               ENU=Close Service Preclosure Results;
               NLD=Service tussentijdsresultaat afsluiten];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF PostingDate = 0D THEN
                    ERROR(Text000);
                  ServiceSetup.GET;
                END;

    OnPostReport=VAR
                   ClosingProjPrevGenJnlReport@1100525000 : Report 11020272;
                 BEGIN
                   IF NOT (TempGenJnlLineRec1.ISEMPTY AND TempGenJnlLineRec2.ISEMPTY) AND
                     PreviewGenJournalLines
                   THEN BEGIN
                     CLEAR(ClosingProjPrevGenJnlReport);
                     ClosingProjPrevGenJnlReport.SetCloseServiceContract(TRUE);
                     ClosingProjPrevGenJnlReport.ImportTemp1(TempGenJnlLineRec1);
                     ClosingProjPrevGenJnlReport.ImportTemp2(TempGenJnlLineRec2);
                     ClosingProjPrevGenJnlReport.RUNMODAL;
                   END;
                   ClosingProcedure.DisplayError;
                   ClosingProcedure.StartGenJnl;
                   CLEAR(ClosingProcedure);
                 END;

  }
  DATASET
  {
    { 4178;    ;DataItem;                    ;
               DataItemTable=Table11012812;
               DataItemTableView=SORTING(No.);
               OnAfterGetRecord=VAR
                                  LocServiceContractCtrlPeriod@1100529600 : Record 11071746;
                                  ServiceContractPreclDetail@1100529601 : Record 11071767;
                                BEGIN
                                  TmpServiceContractCtrlPeriod.RESET;
                                  TmpServiceContractCtrlPeriod.DELETEALL;

                                  IF ServiceSetup."Service Control Method" = ServiceSetup."Service Control Method"::Snapshot THEN BEGIN
                                    ServiceContractPreclDetail.SETRANGE("Service Contract No.", "No.");
                                    ServiceContractPreclDetail.SETRANGE(Posted, TRUE);
                                    ServiceContractPreclDetail.SETRANGE("Service Contract WIP Processed", FALSE);
                                    IF NOT ServiceContractPreclDetail.ISEMPTY THEN BEGIN
                                      ServiceContractPreclDetail.FINDSET;
                                      REPEAT
                                        TmpServiceContractCtrlPeriod.SETRANGE(Code, ServiceContractPreclDetail."Contract Control Period Code");
                                        IF TmpServiceContractCtrlPeriod.ISEMPTY THEN BEGIN
                                          TmpServiceContractCtrlPeriod.INIT;
                                          TmpServiceContractCtrlPeriod."Service Contract No." := "No.";
                                          TmpServiceContractCtrlPeriod.Code := ServiceContractPreclDetail."Contract Control Period Code";
                                          TmpServiceContractCtrlPeriod.INSERT;
                                        END;
                                      UNTIL ServiceContractPreclDetail.NEXT = 0;
                                    END;
                                  END ELSE BEGIN
                                    LocServiceContractCtrlPeriod.SETRANGE("Service Contract No.", "No.");
                                    IF "Rest of Contract" THEN BEGIN
                                      CLEAR(TmpServiceContractCtrlPeriod);
                                      TmpServiceContractCtrlPeriod."Service Contract No." := "No.";
                                      IF LocServiceContractCtrlPeriod.FINDLAST THEN
                                        TmpServiceContractCtrlPeriod."Starting Date" := LocServiceContractCtrlPeriod."Ending Date" + 1
                                      ELSE
                                         TmpServiceContractCtrlPeriod."Starting Date" := "Starting Date";
                                      TmpServiceContractCtrlPeriod."Ending Date" := "Ending Date";
                                      TmpServiceContractCtrlPeriod.INSERT;
                                    END ELSE BEGIN
                                      LocServiceContractCtrlPeriod.SETRANGE("Date Finished", 0D);
                                      IF LocServiceContractCtrlPeriod.FINDSET THEN
                                        REPEAT
                                          TmpServiceContractCtrlPeriod := LocServiceContractCtrlPeriod;
                                          TmpServiceContractCtrlPeriod.INSERT;
                                        UNTIL LocServiceContractCtrlPeriod.NEXT = 0;
                                    END;
                                  END;
                                END;

               ReqFilterFields=No.,Contract Group,Contract Manager,Contract Form }

    { 9302;1   ;DataItem;ServiceContractCtrlPeriod;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               TmpServiceContractCtrlPeriod.RESET;
                               SETRANGE(Number, 1, TmpServiceContractCtrlPeriod.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    TmpServiceContractCtrlPeriod.FINDSET
                                  ELSE
                                    TmpServiceContractCtrlPeriod.NEXT;

                                  ClosingProcedure.SetSelection(
                                    gvType::"Service Contract", '', TmpServiceContractCtrlPeriod."Service Contract No.", '',
                                    PostingDate, TRUE, TRUE, TRUE, FALSE, FALSE, '', FALSE,FALSE,FALSE);
                                  IF (TmpServiceContractCtrlPeriod.Code = '') AND "Service-Contract"."Rest of Contract" THEN
                                    ClosingProcedure.SetSelectionCloseServiceRestOfContract(0, TmpServiceContractCtrlPeriod)
                                  ELSE
                                    ClosingProcedure.SetSelectionCloseService(0, TmpServiceContractCtrlPeriod.Code);
                                  ClosingProcedure.CheckServicePreclosureResult;
                                  ClosingProcedure.DeleteTempGenJnlLines;
                                  IF ReversePostPreclResults THEN BEGIN
                                    ClosingProcedure.TableLocking;
                                    ClosingProcedure.InitTemplateAndBatch;
                                    IF NOT ClosingProcedure.ErrorsFound THEN
                                      ClosingProcedure.ReverseServicePreclosureResults;
                                    COMMIT;
                                  END;

                                  IF PreviewGenJournalLines THEN BEGIN
                                    IF NOT ClosingProcedure.ErrorsFound THEN BEGIN
                                      ClosingProcedure.SetPreview(TRUE);
                                      ClosingProcedure.TableLocking;
                                      ClosingProcedure.InitTemplateAndBatch;
                                      ClosingProcedure.ReverseServicePreclosureResults;
                                      ClosingProcedure.ExportTempGenJnlLine1(TempGenJnlLineRec1);
                                      ClosingProcedure.ExportTempGenJnlLine2(TempGenJnlLineRec2);
                                    END;
                                    COMMIT;
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 2   ;2   ;Field     ;
                  CaptionML=[DEU=Buchungsdatum;
                             ENU=Posting Date;
                             NLD=Boekingsdatum;
                             NOR=Bokf›ringsdato;
                             SVE=Bokf”ringsdatum];
                  SourceExpr=PostingDate }

      { 1100528240;2;Field  ;
                  Name=PreviewClosedProjects;
                  CaptionML=[DEU=Gen. Journalzeilen vorab anzeigen;
                             ENU=Preview Gen. Journal Lines;
                             NLD=Overzicht financiele dagboekregels;
                             NOR=Forh†ndsvis generelle kostrader;
                             SVE=F”rhandsgranska red.journalrader];
                  SourceExpr=PreviewGenJournalLines;
                  OnValidate=BEGIN
                               IF PreviewGenJournalLines THEN
                                 ReversePostPreclResults := FALSE;
                             END;
                              }

      { 1210190002;2;Field  ;
                  Name=ReversePostPreclResults;
                  CaptionML=[DEU=Buchen;
                             ENU=Post;
                             NLD=Boeken;
                             NOR=Bokf›r;
                             SVE=Bokf”r];
                  SourceExpr=ReversePostPreclResults;
                  OnValidate=BEGIN
                               IF ReversePostPreclResults THEN
                                 PreviewGenJournalLines := FALSE;
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@11012042 : TextConst 'DEU=Ausw„hlen Buchungsdatum auf Registerblatt ''Optionen'';ENU=Select Posting Date on Option Tab;NLD=Selecteer boekingsdatum op tabblad opties;NOR=Velg bokf›ringsdato p† alternativ-fanen;SVE=V„lj bokf”ringsdatum p† alternativfliken';
      ServiceSetup@1100529601 : Record 11012800;
      ClosingProcedure@1210190007 : Codeunit 11012046;
      PostingDate@1210190001 : Date;
      gvType@1210190000 : 'Project,Service Contract,Service Order';
      ReversePostPreclResults@1210190006 : Boolean;
      PreviewGenJournalLines@1100528240 : Boolean;
      TempGenJnlLineRec1@1100528242 : TEMPORARY Record 81;
      TempGenJnlLineRec2@1100528241 : TEMPORARY Record 81;
      TmpServiceContractCtrlPeriod@1100529600 : TEMPORARY Record 11071746;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

