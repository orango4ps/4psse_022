OBJECT Table 11126218 Report Lines Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Report ID" = 0 THEN
                "Report ID" := REPORT::"General Overview";
             END;

    CaptionML=ENU=Report Lines Setup;
    LookupPageID=Page11130096;
  }
  FIELDS
  {
    { 10  ;   ;Report ID           ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Report));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Report Caption");
                                                              END;

                                                   CaptionML=[ENU=Report ID;
                                                              NOR=Rapport-ID;
                                                              SVE=Rapport-ID];
                                                   Editable=No }
    { 15  ;   ;Report Caption      ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Report),
                                                                                                                Object ID=FIELD(Report ID)));
                                                   CaptionML=[ENU=Report Caption;
                                                              NOR=Rapportoverskrift;
                                                              SVE=Rapportrubrik];
                                                   Editable=No }
    { 20  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr];
                                                   Editable=No }
    { 30  ;   ;Line Type           ;Option        ;OnValidate=BEGIN
                                                                IF "Line Type" <> "Line Type"::Data THEN BEGIN
                                                                  "Cost Group Code" := '';
                                                                  "Cost Type" := 0;
                                                                  "Values Inside Purch. Contr." := FALSE;
                                                                  "Estimate Result" := FALSE;
                                                                  Bold := TRUE;
                                                                END ELSE
                                                                  Bold := FALSE;
                                                              END;

                                                   CaptionML=[ENU=Line Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=ENU=Caption,Data,Totals,Contract,Subtotal;
                                                   OptionString=Caption,Data,Totals,Contract,Subtotal }
    { 40  ;   ;Line Caption        ;Text100       ;CaptionML=ENU=Line Caption }
    { 50  ;   ;Cost Group Code     ;Code10        ;TableRelation="Cost Group";
                                                   OnValidate=VAR
                                                                CostGroup@1100529600 : Record 11126038;
                                                              BEGIN
                                                                IF CostGroup.GET("Cost Group Code") THEN BEGIN
                                                                  "Estimate Result" := CostGroup."Estimate Result";
                                                                  GetCostObjectFilter("Cost Group Code", "Cost Type");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Cost Group Code;
                                                              NOR=Kostgruppekode;
                                                              SVE=Kostnadsgruppkod] }
    { 60  ;   ;Cost Type           ;Option        ;CaptionML=[ENU=Cost Type;
                                                              NOR=Kostnadstype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=" ,Labor,Material,Subcontracting,Plant,Sundry,Revenues";
                                                                    NOR=" ,Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse,Inntekter";
                                                                    SVE=" ,Arbetskraft,Material,Underentreprenad,Maskin,Diverse,Int„kter"];
                                                   OptionString=[ ,Labor,Material,Subcontracting,Plant,Sundry,Revenues] }
    { 70  ;   ;Values Inside Purch. Contr.;Boolean;CaptionML=ENU=Values Inside Purchase Contract }
    { 80  ;   ;Bold                ;Boolean       ;CaptionML=[ENU=Bold;
                                                              NOR=Fet;
                                                              SVE=Fet] }
    { 90  ;   ;Estimate Result     ;Boolean       ;CaptionML=[ENU=Estimate Result;
                                                              NOR=Kalkyleresultat;
                                                              SVE=Kalkylresultat] }
  }
  KEYS
  {
    {    ;Report ID,Line No.                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DefaultLineText001@1100529600 : TextConst 'ENU=Contracts;NOR=Kontrakter;SVE=Kontrakt';
      DefaultLineText002@1100529601 : TextConst 'ENU=Material;NOR=Materialee;SVE=Material';
      DefaultLineText003@1100529602 : TextConst 'ENU=Subcontracting;NOR=Underentrepen›r;SVE=Underentreprenad';
      DefaultLineText004@1100529603 : TextConst 'ENU=Remainder';
      DefaultLineText005@1100529604 : TextConst 'ENU=Material;NOR=Materialee;SVE=Material';
      DefaultLineText006@1100529605 : TextConst 'ENU=Labor;NOR=Arbeidskraft;SVE=Arbetskraft';
      DefaultLineText007@1100529606 : TextConst 'ENU=Plant;NOR=Maskin;SVE=Maskin';
      DefaultLineText008@1100529607 : TextConst 'ENU=Subcontracting;NOR=Underentrepen›r;SVE=Underentreprenad';
      DefaultLineText009@1100529608 : TextConst 'ENU=Sundry;NOR=Diverse;SVE=Diverse';
      DefaultLineText010@1100529609 : TextConst 'ENU=Additional costs;SVE=Till„ggskostnader';
      DefaultLineText011@1100529610 : TextConst 'ENU=Surcharge;NOR=Tilleggsgebyr;SVE=Till„ggsavgift';
      DefaultLineText012@1100529611 : TextConst 'ENU=Estimation Result';
      DefaultLineText013@1100529612 : TextConst 'ENU=Totals;NOR=Totaler;SVE=Totaler';
      DefaultLineText014@1100529613 : TextConst 'ENU=Contract Amount;NOR=Kontraktsbel›p;SVE=Kontraktsbelopp';
      GLSetup@1100529614 : Record 98;
      HasGotGLSetup@1100529615 : Boolean;
      Text001@1100529616 : TextConst 'ENU=Lines already exist. Do you want to delete them?';
      DefaultLineText015@1100529617 : TextConst 'ENU=Subtotal;SVE=Subtotal';

    PROCEDURE InsertDefaultLines@1100529600(ReportID@1100529601 : Integer);
    VAR
      ReportLinesSetup@1100529600 : Record 11126218;
      LineNo@1100529602 : Integer;
    BEGIN
      ReportLinesSetup.SETRANGE("Report ID", ReportID);
      IF NOT ReportLinesSetup.ISEMPTY THEN BEGIN
        IF GUIALLOWED THEN
          IF NOT CONFIRM(Text001) THEN
            EXIT;
        ReportLinesSetup.DELETEALL;
      END;

      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Caption, DefaultLineText001, 0, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Data, DefaultLineText002, ReportLinesSetup."Cost Type"::Material, TRUE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Data, DefaultLineText003, ReportLinesSetup."Cost Type"::Subcontracting, TRUE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Subtotal, DefaultLineText015, 0, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Caption, '', 0, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Caption, DefaultLineText004, 0, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Data, DefaultLineText005, ReportLinesSetup."Cost Type"::Material, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Data, DefaultLineText006, ReportLinesSetup."Cost Type"::Labor, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Data, DefaultLineText007, ReportLinesSetup."Cost Type"::Plant, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Data, DefaultLineText008, ReportLinesSetup."Cost Type"::Subcontracting, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Data, DefaultLineText009, ReportLinesSetup."Cost Type"::Sundry, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Caption, '', 0, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Data, DefaultLineText010, ReportLinesSetup."Cost Type"::Sundry, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Data, DefaultLineText011, 0, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Caption, '', 0, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Data, DefaultLineText012, 0, FALSE, TRUE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Caption, '', 0, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Totals, DefaultLineText013, 0, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Caption, '', 0, FALSE, FALSE);
      InsertLine(ReportID, LineNo, ReportLinesSetup."Line Type"::Contract, DefaultLineText014, 0, FALSE, FALSE);
    END;

    LOCAL PROCEDURE InsertLine@1100529602(ReportID@1100529602 : Integer;VAR LineNo@1100529601 : Integer;LineType@1100529603 : Option;LineCaption@1100529604 : Text[100];CostType@1100529606 : Option;ValuesInsidePurchContr@1100529605 : Boolean;EstimateResult@1100529607 : Boolean);
    VAR
      ReportLinesSetup@1100529600 : Record 11126218;
    BEGIN
      LineNo += 10000;
      ReportLinesSetup.INIT;
      ReportLinesSetup."Report ID" := ReportID;
      ReportLinesSetup."Line No." := LineNo;
      ReportLinesSetup.VALIDATE("Line Type", LineType);
      ReportLinesSetup."Line Caption" := LineCaption;
      ReportLinesSetup."Cost Type" := CostType;
      ReportLinesSetup."Values Inside Purch. Contr." := ValuesInsidePurchContr;
      ReportLinesSetup."Estimate Result" := EstimateResult;
      ReportLinesSetup.INSERT;
    END;

    PROCEDURE GetCostObjectFilter@1100529629(CostGroupCode@1100529600 : Code[10];VAR CostType@1100529604 : Option) CostObjFilter : Text;
    VAR
      CostObjectsByCostGroup@1100529601 : Record 11126039;
      DimensionValue@1100529602 : Record 349;
      PrevCostObjectCode@1100529603 : Code[20];
    BEGIN
      CostObjFilter := '';

      CostObjectsByCostGroup.SETRANGE("Cost Group Code", CostGroupCode);
      IF CostObjectsByCostGroup.ISEMPTY THEN
        EXIT;

      GetGLSetup;
      DimensionValue.SETRANGE("Dimension Code", GLSetup."Global Dimension 2 Code");

      CostObjectsByCostGroup.FINDSET;
      REPEAT
        IF CostObjFilter = '' THEN BEGIN
          CostObjFilter := CostObjectsByCostGroup."Cost Object Code";
          DimensionValue.GET(GLSetup."Global Dimension 2 Code", CostObjectsByCostGroup."Cost Object Code");
        END ELSE BEGIN
          DimensionValue.NEXT;
          IF DimensionValue.Code = CostObjectsByCostGroup."Cost Object Code" THEN BEGIN
            IF STRLEN(CostObjFilter) < 3 THEN
              CostObjFilter := CostObjFilter + '..'
            ELSE
              IF COPYSTR(CostObjFilter, STRLEN(CostObjFilter) - 1) <> '..' THEN
                CostObjFilter := CostObjFilter + '..'
          END ELSE BEGIN
            IF STRLEN(CostObjFilter) >= 3 THEN
              IF COPYSTR(CostObjFilter, STRLEN(CostObjFilter) - 1) = '..' THEN
                CostObjFilter := CostObjFilter + PrevCostObjectCode;
            CostObjFilter := CostObjFilter + '|' + CostObjectsByCostGroup."Cost Object Code";
            DimensionValue.GET(GLSetup."Global Dimension 2 Code", CostObjectsByCostGroup."Cost Object Code");
          END;
        END;
        PrevCostObjectCode := CostObjectsByCostGroup."Cost Object Code";
      UNTIL CostObjectsByCostGroup.NEXT = 0;

      IF STRLEN(CostObjFilter) >= 3 THEN
        IF COPYSTR(CostObjFilter, STRLEN(CostObjFilter) - 1) = '..' THEN
          CostObjFilter := CostObjFilter + PrevCostObjectCode;

      DimensionValue.SETFILTER(Code, CostObjFilter);
      DimensionValue.FINDFIRST;
      DimensionValue.SETFILTER("Cost Type", '<>%1', DimensionValue."Cost Type");
      IF DimensionValue.ISEMPTY THEN BEGIN
        CostType := DimensionValue."Cost Type" + 1;
        CostObjFilter := CostObjFilter + '|''''';
      END ELSE
        CostType := 0;
    END;

    LOCAL PROCEDURE GetGLSetup@1100529601();
    BEGIN
      IF HasGotGLSetup THEN
        EXIT;
      GLSetup.GET;
      HasGotGLSetup := TRUE;
    END;

    BEGIN
    END.
  }
}

