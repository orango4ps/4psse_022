OBJECT Page 2142 O365 First Invoice Wizard
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=" ";
               NOR=" ";
               SVE=" "];
    PageType=NavigatePage;
    OnInit=BEGIN
             Initialize
           END;

    OnOpenPage=BEGIN
                 Step := Step::First;
                 EnableControls;

                 ItemBaseUnitOfMeasure := O365TemplateManagement.GetDefaultBaseUnitOfMeasure;

                 IF IsUsingVAT THEN BEGIN
                   VATBusinessPostingGroupCode := O365TemplateManagement.GetDefaultVATBusinessPostingGroup;
                   VATProductPostingGroup.GET(O365TemplateManagement.GetDefaultVATProdPostingGroup);
                 END;
               END;

    OnQueryClosePage=BEGIN
                       IF Customer."No." <> '' THEN
                         IF Step <> Step::Finish THEN
                           Customer.DELETE(TRUE);
                     END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=[ENU=Next;
                                 NOR=Neste;
                                 SVE=N„sta];
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Visible=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep;
                               END;
                                }
      { 35      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=[ENU=Back;
                                 NOR=Tilbake;
                                 SVE=F”reg†ende];
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Visible=BackActionEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 PrevStep;
                               END;
                                }
      { 34      ;1   ;Action    ;
                      Name=ActionCreateInvoice;
                      CaptionML=[ENU=Create Invoice;
                                 NOR=Opprett faktura;
                                 SVE=Skapa faktura];
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Visible=CreateInvoiceActionEnabled;
                      InFooterBar=Yes;
                      OnAction=BEGIN
                                 Step := Step::Customer;
                                 EnableControls;
                               END;
                                }
      { 36      ;1   ;Action    ;
                      Name=ActionDone;
                      CaptionML=[ENU=Done;
                                 NOR=Ferdig;
                                 SVE=F„rdigt];
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Visible=DoneActionEnabled;
                      InFooterBar=Yes;
                      OnAction=BEGIN
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Visible=TopBannerVisible AND CustomerStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=MediaResourcesFirstInv1."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 98  ;1   ;Group     ;
                Visible=TopBannerVisible AND ItemStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=MediaResourcesFirstInv2."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 42  ;1   ;Group     ;
                Visible=TopBannerVisible AND TaxStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 41  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=MediaResourcesFirstInv3."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 24  ;1   ;Group     ;
                Name=FirstStep;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 23  ;2   ;Group     ;
                CaptionML=[ENU=Hi;
                           NOR=Hei,;
                           SVE=Hej,];
                Visible=NOT UserNameAvailable;
                GroupType=Group }

    { 15  ;2   ;Group     ;
                CaptionML=[ENU=Hi,;
                           NOR=Hei,;
                           SVE=Hej,];
                Visible=UserNameAvailable;
                GroupType=Group }

    { 11  ;3   ;Field     ;
                Name=UserName;
                CaptionML=[ENU=User;
                           NOR=Bruker;
                           SVE=Anv„ndare];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=UserName;
                Editable=FALSE;
                OnValidate=BEGIN
                             EnableControls;
                           END;

                ShowCaption=No }

    { 30  ;2   ;Group     ;
                Visible=ImagesVisible;
                Editable=FALSE;
                GroupType=Group }

    { 29  ;3   ;Field     ;
                Name=<MediaRepositoryFirstInvFirst>;
                CaptionML=[ENU=<MediaRepositoryFirstInvFirst>;
                           NOR=<MedierepositoriumF›rsteFakturaF›rst>;
                           SVE=<MediearkivF”rstaFaktF”rst>];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=MediaResourcesFirstInvFirst."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 19  ;2   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=Let's create your first invoice.;
                                     NOR=La oss opprette din f›rste faktura.;
                                     SVE=Nu ska du skapa din f”rsta faktura.] }

    { 8   ;1   ;Group     ;
                Name=CustomerStep;
                Visible=CustomerStepVisible;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                CaptionML=[ENU=Who are you invoicing?;
                           NOR=Hvem fakturerer du?;
                           SVE=Vem fakturerar du?];
                GroupType=Group }

    { 18  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=We'll file this away for next time.;
                                     NOR=Vi lagrer dette til neste gang.;
                                     SVE=Vi l„gger den †t sidan till n„sta g†ng.] }

    { 3   ;4   ;Field     ;
                Name=CustomerName;
                CaptionML=[ENU=Customer name;
                           NOR=Kundenavn;
                           SVE=Kundens namn];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=CustomerName;
                OnValidate=BEGIN
                             ModifyCustomer;
                             EnableControls;
                           END;

                ShowCaption=No }

    { 32  ;4   ;Field     ;
                Name=CustomerEmail;
                ExtendedDatatype=E-Mail;
                CaptionML=[ENU=Email (optional);
                           NOR=E-post (valgfritt);
                           SVE=E-postadress (valfritt)];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=CustomerEmail;
                OnValidate=VAR
                             MailManagement@1000 : Codeunit 9520;
                           BEGIN
                             IF CustomerEmail <> '' THEN
                               MailManagement.CheckValidEmailAddress(CustomerEmail);
                             ModifyCustomer;
                             EnableControls;
                           END;

                ShowCaption=No }

    { 22  ;4   ;Field     ;
                Name=<FullAddress>;
                CaptionML=[ENU=Address (optional);
                           NOR=Adresse (valgfritt);
                           SVE=Adress (valfritt)];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=FullAddress;
                OnAssistEdit=VAR
                               TempStandardAddress@1000 : TEMPORARY Record 730;
                             BEGIN
                               CreateCustomer(CustomerName);
                               TempStandardAddress.CopyFromCustomer(Customer);
                               IF PAGE.RUNMODAL(PAGE::"O365 Address",TempStandardAddress) = ACTION::LookupOK THEN BEGIN
                                 Customer.GET(Customer."No.");
                                 FullAddress := TempStandardAddress.ToString;
                               END;
                             END;

                ShowCaption=No;
                QuickEntry=FALSE }

    { 7   ;1   ;Group     ;
                Name=ItemStep;
                Visible=ItemStepVisible;
                GroupType=Group }

    { 26  ;2   ;Group     ;
                CaptionML=[ENU=What did you sell?;
                           NOR=Hva solgte du?;
                           SVE=Vad s†lde du?];
                GroupType=Group }

    { 2   ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=Start adding items. You can always edit later.;
                                     NOR=Begynn † legge til varer. Du kan alltid redigere senere.;
                                     SVE=B”rja l„gg till artiklar. Du kan alltid redigera senare.] }

    { 4   ;4   ;Field     ;
                Name=ItemDescription;
                CaptionML=[ENU=Description of product or service;
                           NOR=Beskrivelse av produkt eller tjeneste;
                           SVE=Beskrivning av produkten eller tj„nsten];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=ItemDescription;
                OnValidate=BEGIN
                             EnableControls;
                           END;

                ShowCaption=No }

    { 5   ;4   ;Field     ;
                Name=ItemPrice;
                CaptionML=[ENU=Price (excl. tax);
                           NOR=Pris (f›r mva);
                           SVE=Pris (exkl moms)];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                DecimalPlaces=2:5;
                BlankZero=Yes;
                SourceExpr=ItemPrice;
                MinValue=0;
                ShowCaption=No }

    { 28  ;1   ;Group     ;
                Name=TaxStep;
                Visible=TaxStepVisible;
                GroupType=Group }

    { 27  ;2   ;Group     ;
                CaptionML=[ENU=Need to add sales tax?;
                           NOR=Vil du legge til salgsmva?;
                           SVE=Beh”ver du l„gga till moms?];
                Visible=NOT IsUsingVAT;
                GroupType=Group }

    { 17  ;3   ;Group     ;
                Visible=NOT IsUsingVAT;
                GroupType=Group;
                InstructionalTextML=[ENU=Tell us the tax rate for your region.;
                                     NOR=Angi mva-satsen for ditt omr†de.;
                                     SVE=Ange momssatsen f”r din region.] }

    { 9   ;4   ;Field     ;
                Name=CityTax;
                CaptionML=[ENU=City Tax %;
                           NOR=Avgiftsprosent for sted;
                           SVE=Kommunalskatt %];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                DecimalPlaces=1:3;
                BlankZero=Yes;
                SourceExpr=CityTax;
                MinValue=0;
                OnValidate=BEGIN
                             EnableControls;
                           END;

                ShowCaption=No }

    { 6   ;4   ;Field     ;
                Name=StateTax;
                CaptionML=[ENU=State Tax %;
                           NOR=Avgiftsprosent for region;
                           SVE=Delstatsskatt %];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                DecimalPlaces=1:3;
                BlankZero=Yes;
                SourceExpr=StateTax;
                MinValue=0;
                ShowCaption=No }

    { 33  ;2   ;Group     ;
                CaptionML=[ENU=Here is your default VAT.;
                           NOR=Her er din standard mva.;
                           SVE=Det h„r „r din standardmoms.];
                Visible=IsUsingVAT;
                GroupType=Group }

    { 21  ;3   ;Group     ;
                Visible=IsUsingVAT;
                GroupType=Group;
                InstructionalTextML=[ENU=You can always edit it later.;
                                     NOR=Du kan alltid redigere den senere.;
                                     SVE=Du kan alltid „ndra den senare.] }

    { 16  ;4   ;Field     ;
                Name=VAT Group;
                CaptionML=[ENU=VAT;
                           NOR=Merverdiavgift;
                           SVE=Moms];
                ToolTipML=[ENU=Specifies the VAT group code for this item.;
                           NOR=Angir MVA-gruppekoden for denne varen.;
                           SVE=Anger momsgruppskoden f”r den h„r artikeln.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                NotBlank=Yes;
                SourceExpr=VATProductPostingGroup.Description;
                Visible=IsUsingVAT;
                OnLookup=BEGIN
                           IF PAGE.RUNMODAL(PAGE::"O365 VAT Product Posting Gr.",VATProductPostingGroup) = ACTION::LookupOK THEN;
                         END;

                ShowCaption=No;
                QuickEntry=FALSE }

    { 49  ;1   ;Group     ;
                Name=FinalStep;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 20  ;2   ;Group     ;
                Visible=ImagesVisible;
                Editable=FALSE;
                GroupType=Group }

    { 12  ;3   ;Field     ;
                Name=<MediaRepositoryLastInvFirst>;
                CaptionML=[ENU=<MediaRepositoryLastInvFirst>;
                           NOR=<MedierepositoriumSisteFakturaF›rst>;
                           SVE=<MediearkivSistaFaktF”rst>];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=MediaResourcesFirstInvLast."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 48  ;2   ;Group     ;
                CaptionML=[ENU=Voila!;
                           NOR=Det var det!;
                           SVE=Nu „r det klart!];
                GroupType=Group }

    { 46  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=Your first invoice is ready. Preview it, send it, or add more details whenever you want.;
                                     NOR=Din f›rste faktura er klar. Forh†ndsvis den, send den eller legg til mer informasjon n†r du vil.;
                                     SVE=Din f”rsta faktura „r klar. F”rhandsgranska, skicka den eller l„gg till mer information n„r du vill.] }

  }
  CODE
  {
    VAR
      Customer@1001 : Record 18;
      Item@1002 : Record 27;
      SalesHeader@1003 : Record 36;
      SalesLine@1030 : Record 37;
      MediaRepositoryFirstInv1@1040 : Record 9400;
      MediaRepositoryFirstInv2@1034 : Record 9400;
      MediaRepositoryFirstInv3@1041 : Record 9400;
      MediaRepositoryFirstInvFirst@1033 : Record 9400;
      MediaRepositoryFirstInvLast@1032 : Record 9400;
      MediaResourcesFirstInv1@1028 : Record 2000000182;
      MediaResourcesFirstInv2@1027 : Record 2000000182;
      MediaResourcesFirstInv3@1039 : Record 2000000182;
      MediaResourcesFirstInvFirst@1038 : Record 2000000182;
      MediaResourcesFirstInvLast@1029 : Record 2000000182;
      O365SalesInitialSetup@1023 : Record 2110;
      VATProductPostingGroup@1037 : Record 324;
      O365TemplateManagement@1024 : Codeunit 2142;
      Step@1012 : 'First,Customer,Item,Tax,Finish';
      TopBannerVisible@1042 : Boolean;
      ImagesVisible@1036 : Boolean;
      FirstStepVisible@1009 : Boolean;
      CustomerStepVisible@1010 : Boolean;
      ItemStepVisible@1011 : Boolean;
      TaxStepVisible@1019 : Boolean;
      FinalStepVisible@1015 : Boolean;
      BackActionEnabled@1008 : Boolean;
      NextActionEnabled@1014 : Boolean;
      CreateInvoiceActionEnabled@1016 : Boolean;
      DoneActionEnabled@1017 : Boolean;
      UserNameAvailable@1013 : Boolean;
      UserName@1035 : Text;
      CustomerName@1005 : Text[100];
      ItemDescription@1007 : Text[100];
      FullAddress@1025 : Text;
      ItemPrice@1000 : Decimal;
      ItemBaseUnitOfMeasure@1004 : Code[10];
      CityTax@1020 : Decimal;
      StateTax@1022 : Decimal;
      VATBusinessPostingGroupCode@1018 : Code[20];
      IsUsingVAT@1021 : Boolean;
      ItemNoDescriptionErr@1026 : TextConst 'ENU=Give your product or service a description.;NOR=Angi en beskrivelse for produktet eller tjenesten.;SVE=Ge produkten eller tj„nsten en beskrivning.';
      CustNoNameErr@1031 : TextConst 'ENU=Enter a customer name to create your first invoice for them.;NOR=Angi et kundenavn for † opprette din f›rste faktura for dem.;SVE=Ange ett kundnamn f”r att skapa den f”rsta fakturan till den.';
      CustomerEmail@1006 : Text[80];

    [External]
    PROCEDURE HasCompleted@9() : Boolean;
    BEGIN
      EXIT(Step = Step::Finish);
    END;

    [External]
    PROCEDURE GetInvoiceNo@15() : Code[20];
    BEGIN
      EXIT(SalesHeader."No.");
    END;

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      ResetControls;

      CASE Step OF
        Step::First:
          ShowFirstStep;
        Step::Customer:
          ShowCustomerStep;
        Step::Item:
          ShowItemStep;
        Step::Tax:
          ShowTaxStep;
        Step::Finish:
          ShowFinishStep;
      END;
    END;

    LOCAL PROCEDURE PrevStep@12();
    BEGIN
      CASE Step OF
        Step::First:
          ShowFirstStep;
        Step::Customer:
          ShowFirstStep;
        Step::Item:
          ShowCustomerStep;
        Step::Tax:
          ShowItemStep;
        Step::Finish:
          ShowFinishStep;
      END;
      EnableControls;
    END;

    LOCAL PROCEDURE NextStep@41();
    BEGIN
      CASE Step OF
        Step::First:
          ShowCustomerStep;
        Step::Customer:
          IF ValidateCustomer THEN
            ShowItemStep;
        Step::Item:
          IF ValidateItem THEN
            ShowTaxStep;
        Step::Tax:
          ShowFinishStep;
      END;
      EnableControls;
    END;

    LOCAL PROCEDURE ShowFirstStep@7();
    BEGIN
      Step := Step::First;
      FirstStepVisible := TRUE;
      CreateInvoiceActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowCustomerStep@33();
    BEGIN
      Step := Step::Customer;
      CustomerStepVisible := TRUE;
      NextActionEnabled := TRUE;
      BackActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowItemStep@34();
    BEGIN
      Step := Step::Item;
      ItemStepVisible := TRUE;
      NextActionEnabled := TRUE;
      BackActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowTaxStep@8();
    BEGIN
      Step := Step::Tax;
      TaxStepVisible := TRUE;
      NextActionEnabled := TRUE;
      BackActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ShowFinishStep@35();
    BEGIN
      CreateInvoice;
      Step := Step::Finish;
      FinalStepVisible := TRUE;
      DoneActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      NextActionEnabled := FALSE;
      FirstStepVisible := FALSE;
      CustomerStepVisible := FALSE;
      ItemStepVisible := FALSE;
      TaxStepVisible := FALSE;
      FinalStepVisible := FALSE;
      BackActionEnabled := FALSE;
      DoneActionEnabled := FALSE;
      CreateInvoiceActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      IF MediaRepositoryFirstInv1.GET('FirstInvoice1.png','PHONE') AND
         MediaRepositoryFirstInv2.GET('FirstInvoice2.png','PHONE') AND
         MediaRepositoryFirstInv3.GET('FirstInvoice3.png','PHONE')
      THEN
        IF MediaResourcesFirstInv1.GET(MediaRepositoryFirstInv1."Media Resources Ref") AND
           MediaResourcesFirstInv2.GET(MediaRepositoryFirstInv2."Media Resources Ref") AND
           MediaResourcesFirstInv3.GET(MediaRepositoryFirstInv3."Media Resources Ref")
        THEN
          TopBannerVisible := MediaResourcesFirstInv1."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE LoadImages@6();
    BEGIN
      IF MediaRepositoryFirstInvFirst.GET('FirstInvoiceSplash.png','PHONE') AND
         MediaRepositoryFirstInvLast.GET('FirstInvoiceSplash.png','PHONE')
      THEN
        IF MediaResourcesFirstInvFirst.GET(MediaRepositoryFirstInvFirst."Media Resources Ref") AND
           MediaResourcesFirstInvLast.GET(MediaRepositoryFirstInvLast."Media Resources Ref")
        THEN
          ImagesVisible := MediaResourcesFirstInvFirst."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE CreateCustomer@13(CustomerName@1002 : Text[100]);
    VAR
      Customer2@1003 : Record 18;
      MiniCustomerTemplate@1000 : Record 1300;
      CustContUpdate@1004 : Codeunit 5056;
    BEGIN
      IF Customer."No." <> '' THEN
        EXIT;

      Customer2.INIT;
      IF MiniCustomerTemplate.NewCustomerFromTemplate(Customer2) THEN BEGIN
        Customer2.VALIDATE(Name,CustomerName);
        Customer2.VALIDATE("E-Mail",CustomerEmail);
        Customer2.VALIDATE("Tax Liable",TRUE);
        Customer2.MODIFY(TRUE);
        CustContUpdate.OnModify(Customer2);
        COMMIT;
      END;

      Customer := Customer2;
    END;

    LOCAL PROCEDURE CreateItem@14();
    VAR
      ItemTemplate@1000 : Record 1301;
    BEGIN
      IF Item."No." = '' THEN BEGIN
        Item.INIT;
        IF ItemTemplate.NewItemFromTemplate(Item) THEN BEGIN
          Item.VALIDATE(Description,ItemDescription);
          Item.VALIDATE("Unit Price",ItemPrice);
          IF IsUsingVAT THEN
            Item.VALIDATE("VAT Prod. Posting Group",VATProductPostingGroup.Code);
          IF ItemBaseUnitOfMeasure <> '' THEN
            Item.VALIDATE("Base Unit of Measure",ItemBaseUnitOfMeasure);
          Item.MODIFY(TRUE);
          COMMIT;
        END;
      END;
    END;

    LOCAL PROCEDURE CreateInvoice@11();
    BEGIN
      IF SalesHeader."No." <> '' THEN
        EXIT;
      CreateCustomer(CustomerName);
      CreateItem;
      SalesHeader.INIT;
      SalesHeader."Document Type" := SalesHeader."Document Type"::Invoice;
      SalesHeader.INSERT(TRUE);
      SalesHeader.VALIDATE("Sell-to Customer No.",Customer."No.");
      SalesHeader.MODIFY;

      SalesLine.INIT;
      SalesLine."Document Type" := SalesHeader."Document Type";
      SalesLine."Document No." := SalesHeader."No.";
      SalesLine."Line No." := 10000;
      SalesLine.INSERT(TRUE);
      SalesLine."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
      SalesLine.Type := SalesLine.Type::Item;
      IF IsUsingVAT THEN BEGIN
        SalesLine."VAT Bus. Posting Group" := VATBusinessPostingGroupCode;
        SalesLine."VAT Prod. Posting Group" := VATProductPostingGroup.Code;
      END;
      SalesLine.VALIDATE("No.",Item."No.");
      SalesLine.VALIDATE(Quantity,1);
      SalesLine.MODIFY;
    END;

    LOCAL PROCEDURE ValidateItem@3() : Boolean;
    BEGIN
      IF ItemDescription = '' THEN
        ERROR(ItemNoDescriptionErr);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE ValidateCustomer@4() : Boolean;
    BEGIN
      IF CustomerName = '' THEN
        ERROR(CustNoNameErr);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE Initialize@5();
    BEGIN
      LoadTopBanners;
      LoadImages;
      GetUserFirstName;
      IsUsingVAT := O365SalesInitialSetup.IsUsingVAT;
    END;

    LOCAL PROCEDURE GetUserFirstName@16();
    VAR
      User@1000 : Record 2000000120;
      TempString@1001 : Text;
    BEGIN
      IF User.GET(USERSECURITYID) THEN BEGIN
        TempString := User."Full Name";
        TempString := DELCHR(TempString,'<>',' ');
        TempString := CONVERTSTR(TempString,' ',',');
        UserName := SELECTSTR(1,TempString);
        IF UserName <> '' THEN
          UserNameAvailable := TRUE;
      END;
    END;

    LOCAL PROCEDURE ModifyCustomer@10();
    VAR
      CustContUpdate@1000 : Codeunit 5056;
    BEGIN
      IF Customer."No." <> '' THEN BEGIN
        Customer.VALIDATE(Name,CustomerName);
        Customer.VALIDATE("E-Mail",CustomerEmail);
        Customer.MODIFY(TRUE);
        CustContUpdate.OnModify(Customer);
      END;
    END;

    BEGIN
    END.
  }
}

