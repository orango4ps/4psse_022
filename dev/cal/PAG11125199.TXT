OBJECT Page 11125199 Service Call Wiz. Locations
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Assistent Servicemeldung Standorte;
               ENU=Service Call Wizard Locations;
               NLD=Servicemelding wizard locaties;
               NOR=Servicesamtaleguide, lokasjoner;
               SVE=Servicesamtalsguide, platser];
    SourceTable=Table11012801;
    PageType=List;
    CardPageID=Service Location;
    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                         TESTFIELD(Blocked, FALSE);
                     END;

    OnAfterGetCurrRecord=VAR
                           ServiceOrder@1100525001 : Record 11012823;
                           ServiceLocationInfoMgt@1100525000 : Codeunit 11012856;
                         BEGIN
                           NoOfHistorySOs :=
                             ServiceLocationInfoMgt.GetNoOfHistorySOs("No.");
                           NoOfOpenMaintananceSOs :=
                             ServiceLocationInfoMgt.GetNoOfOpenSOsBySourceType("No.", ServiceOrder."Source Type"::Contract);
                         END;

    ActionList=ACTIONS
    {
      { 1100525000;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100525001;1 ;Action    ;
                      ShortCutKey=Shift+Ctrl+G;
                      CaptionML=[DEU=Standort unbekannt;
                                 ENU=Location unknown;
                                 NLD=&Locatie onbekend;
                                 NOR=Lokasjon ukjent;
                                 SVE=LagerstÑlle okÑnt];
                      Promoted=Yes;
                      Image=AddAction;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100409005;1;Group  ;
                CaptionML=[DEU=Suchen;
                           ENU=Seek;
                           NLD=Zoeken;
                           NOR=Sõk;
                           SVE=Sîk];
                GroupType=Group }

    { 1100409004;2;Field  ;
                Name=PostCodeCtrl;
                CaptionML=[DEU=&PLZ-Code;
                           ENU=&Post Code;
                           NLD=&Postcode;
                           NOR=&Postnr;
                           SVE=&Postnummer];
                SourceExpr=gvLocPostCodeTxt;
                OnValidate=BEGIN
                             IF gvLocPostCodeTxt = '' THEN BEGIN
                               gvLocHouseNo := '';
                               gvLocHouseNoExt := '';
                             END;
                             UpdateLocations(gvLocPostCodeTxt, gvLocHouseNo, gvLocHouseNoExt);
                           END;
                            }

    { 1100409003;2;Field  ;
                CaptionML=[DEU=Hausnr.;
                           ENU=House No.;
                           NLD=Huisnr.;
                           NOR=Husnr.;
                           SVE=Husnr];
                SourceExpr=gvLocHouseNo;
                OnValidate=BEGIN
                             UpdateLocations(gvLocPostCodeTxt, gvLocHouseNo, gvLocHouseNoExt);
                           END;
                            }

    { 1100409002;2;Field  ;
                CaptionML=[DEU=Hausnr. hinzufÅgen;
                           ENU=House No. Ext.;
                           NLD=Huisnr. toevoeging;
                           NOR=Husnr. ETA;
                           SVE=Husnr, éTA];
                SourceExpr=gvLocHouseNoExt;
                OnValidate=BEGIN
                             UpdateLocations(gvLocPostCodeTxt, gvLocHouseNo, gvLocHouseNoExt);
                           END;
                            }

    { 1100526200;1;Group  ;
                GroupType=Repeater }

    { 1100528601;2;Field  ;
                SourceExpr=Name;
                Visible=FALSE }

    { 1100526201;2;Field  ;
                SourceExpr=Address;
                Editable=FALSE }

    { 1100528602;2;Field  ;
                SourceExpr="Address 2";
                Visible=FALSE;
                Editable=FALSE }

    { 1100526203;2;Field  ;
                SourceExpr="Post Code";
                Editable=FALSE }

    { 1100526205;2;Field  ;
                SourceExpr=City;
                Editable=FALSE }

    { 1100526209;2;Field  ;
                SourceExpr="Customer Name";
                Editable=FALSE }

    { 1100526215;2;Field  ;
                SourceExpr=Description;
                Editable=FALSE }

    { 1100526217;2;Field  ;
                SourceExpr="Description 2";
                Editable=FALSE }

    { 1100526211;2;Field  ;
                SourceExpr="Phone No.";
                Editable=FALSE }

    { 1100526207;2;Field  ;
                SourceExpr="Customer No.";
                Editable=FALSE }

    { 1100526213;2;Field  ;
                SourceExpr="No.";
                Editable=FALSE;
                OnLookup=VAR
                           ServiceLocation@1210190000 : Record 11012801;
                         BEGIN
                           IF ServiceLocation.GET("No.") THEN
                             PAGE.RUNMODAL(0, ServiceLocation);
                         END;
                          }

    { 1100528600;2;Field  ;
                SourceExpr=Blocked;
                Editable=FALSE }

    { 1100525002;1;Group  ;
                CaptionML=[DEU=Summen;
                           ENU=Totals;
                           NLD=Totalen;
                           NOR=Totaler;
                           SVE=Totaler];
                GroupType=Group }

    { 1100409000;2;Field  ;
                DrillDown=Yes;
                CaptionML=[DEU=Anzahl Historie ServiceauftrÑge;
                           ENU=No. of History Service Orders;
                           NLD=Aantal historie serviceorders;
                           NOR=Antall tidligere serviceordre];
                SourceExpr=NoOfHistorySOs;
                Editable=FALSE;
                OnDrillDown=VAR
                              ServiceLocationInfoMgt@1100525000 : Codeunit 11012856;
                            BEGIN
                              ServiceLocationInfoMgt.ShowHistorySOs("No.");
                            END;
                             }

    { 1100409006;2;Field  ;
                CaptionML=[DEU=Anzahl offene ServiceauftrÑge;
                           ENU=No. of Open Service Orders;
                           NLD=Aantal openstaande serviceorders;
                           NOR=Antall Üpne serviceordre];
                SourceExpr=NoOfOpenSOs;
                Editable=FALSE;
                OnDrillDown=VAR
                              ServiceLocationInfoMgt@1100409000 : Codeunit 11012856;
                            BEGIN
                              ServiceLocationInfoMgt.ShowOpenSOs("No.");
                            END;
                             }

    { 1100409001;2;Field  ;
                CaptionML=[DEU=Anzahl offene ServiceauftrÑge (Wartung);
                           ENU=No. of Open Service Orders (Maintenance);
                           NLD=Aantal openstaande serviceorders (onderhoud);
                           NOR=Antall Üpne serviceordre (vedlikehold)];
                SourceExpr=NoOfOpenMaintananceSOs;
                Editable=FALSE;
                OnDrillDown=VAR
                              ServiceOrder@1100409001 : Record 11012823;
                              ServiceLocationInfoMgt@1100409000 : Codeunit 11012856;
                            BEGIN
                              ServiceLocationInfoMgt.ShowOpenSOsBySourceType("No.", ServiceOrder."Source Type"::Contract);
                            END;
                             }

  }
  CODE
  {
    VAR
      SelectedServiceLocationNo@1100525000 : Code[20];
      gvLocPostCodeTxt@1100525003 : Code[20];
      gvLocHouseNo@1100525002 : Text[20];
      gvLocHouseNoExt@1100525001 : Code[10];
      Text002@1100525005 : TextConst 'DEU=Wegen der LeistungsfÑhigkeit muss zumindest die Postleitzahl oder ein Teil der Postleitzahl eingegeben worden sein;ENU=(Part of) Post Code is mandatory due to performance issues;NLD=I.v.m. performance dient minimaal de postcode of een deel van de postcode ingevoerd te zijn;NOR=(Deler av) postkoden er obligatorisk pga ytelsesÜrsaker;SVE=(del av) postnumret Ñr obligatoriskt pÜ grund av prestandaorsaker';
      Text003@1100525004 : TextConst 'DEU=Es sind mindestens 4 Ziffern fÅr die Postleitzahl notwendig;ENU=A minimal of 4 digits needed for the Post Code;NLD=Minimaal 4 cijfers noodzakelijk voor de postcode;NOR=Minst 4 tegn er pÜkrevd for et postnummer;SVE=Minst fyra tecken krÑvs fîr ett postnummer';
      NoOfHistorySOs@1100409000 : Integer INDATASET;
      NoOfOpenMaintananceSOs@1100409001 : Integer INDATASET;
      NoOfOpenSOs@1100409002 : Integer;

    PROCEDURE UpdateForm@1100526200();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE GetSelectedLocationNo@1100525000() : Code[20];
    BEGIN
      EXIT(SelectedServiceLocationNo);
    END;

    PROCEDURE UpdateLocations@1100526202(IPostCode@1100526200 : Code[20];IHouseNo@1100526201 : Text[30];IHouseNoExt@1100526202 : Code[10]);
    VAR
      ServiceLocation@1100525001 : Record 11012801;
      ObjectImpWorkSheetMgtCU@1100525000 : Codeunit 11012839;
      NormalizedPostCode@1100526204 : Code[20];
    BEGIN
      ServiceLocation.SETCURRENTKEY("Post Code", "House No.");
      ServiceLocation.DPA_SetFilters(CurrPage.OBJECTID(FALSE));
      IF ObjectImpWorkSheetMgtCU.NormalizePostCode(gvLocPostCodeTxt, '', NormalizedPostCode) THEN BEGIN
        gvLocPostCodeTxt := NormalizedPostCode;
        ServiceLocation.SETFILTER("Post Code", '@' + gvLocPostCodeTxt + '*');
      END ELSE
        IF gvLocPostCodeTxt <> '' THEN
          ServiceLocation.SETFILTER("Post Code", '@' + gvLocPostCodeTxt + '*');
      IF (IHouseNo <> '') OR (IHouseNoExt <> '') THEN BEGIN
        IF IPostCode = '' THEN
          ERROR(Text002);
        IF STRLEN(IPostCode) < 4 THEN
          ERROR(Text003);
        IF IHouseNo <> '' THEN
          ServiceLocation.SETRANGE("House No.", IHouseNo);
        IF IHouseNoExt <> '' THEN
          ServiceLocation.SETRANGE("House No. Ext.", IHouseNoExt);
      END;
      COPY(ServiceLocation);
      //CurrPage.Locations.PAGE.SETTABLEVIEW(gvLocRec);
      UpdateForm;
    END;

    PROCEDURE GetLocationAddress@1100409001() : Text[100];
    BEGIN
      EXIT(gvLocPostCodeTxt + gvLocHouseNo + gvLocHouseNoExt);
    END;

    PROCEDURE SetPostCodeHouseNo@1100525001(PostCode@1100525002 : Code[20];HouseNo@1100525001 : Text[20];HouseNoExt@1100525000 : Code[10]);
    BEGIN
      gvLocPostCodeTxt := PostCode;
      gvLocHouseNo := HouseNo;
      gvLocHouseNoExt := HouseNoExt;
      UpdateLocations(gvLocPostCodeTxt, gvLocHouseNo, gvLocHouseNoExt);
    END;

    BEGIN
    END.
  }
}

