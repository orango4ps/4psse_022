OBJECT Codeunit 11020220 XML DOM Management (4PS)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      LocalName@1100528800 : TextConst 'DEU=".//*[local-name()=""%1""]";ENU=".//*[local-name()=""%1""]";NLD=".//*[local-name()=""%1""]"';

    PROCEDURE AddValueToNode@1100528817(IRootNode@1100528800 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";IElementName@1100528803 : Text;IValue@1100528802 : Text);
    VAR
      FoundNode@1100528801 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      FindNode(IRootNode, STRSUBSTNO(LocalName, IElementName), FoundNode);
      FoundNode.InnerText(IValue);
    END;

    PROCEDURE AddElement@1(VAR XMLNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodeName@1002 : Text[1024];NodeText@1003 : Text;NameSpace@1004 : Text[1024];VAR CreatedXMLNode@1005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode") ExitStatus@1000 : Integer;
    VAR
      NewChildNode@1006 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      NewChildNode := XMLNode.OwnerDocument.CreateNode('element',NodeName,NameSpace);

      IF ISNULL(NewChildNode) THEN BEGIN
        ExitStatus := 50;
        EXIT;
      END;

      IF NodeText <> '' THEN
        NewChildNode.InnerText := NodeText;

      XMLNode.AppendChild(NewChildNode);
      CreatedXMLNode := NewChildNode;

      ExitStatus := 0;
    END;

    PROCEDURE AddAttribute@2(VAR XMLNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";Name@1002 : Text[1024];NodeValue@1003 : Text[1024]) ExitStatus@1000 : Integer;
    VAR
      XMLNewAttributeNode@1004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLNewAttributeNode := XMLNode.OwnerDocument.CreateAttribute(Name);

      IF ISNULL(XMLNewAttributeNode) THEN BEGIN
        ExitStatus := 60;
        EXIT(ExitStatus)
      END;

      IF NodeValue <> '' THEN
        XMLNewAttributeNode.Value := NodeValue;

      XMLNode.Attributes.SetNamedItem(XMLNewAttributeNode);
    END;

    PROCEDURE FindNode@3(XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodePath@1001 : Text;VAR FoundXMLNode@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode") : Boolean;
    BEGIN
      IF ISNULL(XMLRootNode) THEN
        EXIT(FALSE);

      FoundXMLNode := XMLRootNode.SelectSingleNode(NodePath);

      IF ISNULL(FoundXMLNode) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE FindNodeNs@1100528300(XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodePath@1001 : Text;VAR FoundXMLNode@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";XmlNsMgr@1100528300 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNamespaceManager") : Boolean;
    BEGIN
      //**4PS.n
      IF ISNULL(XMLRootNode) THEN
        EXIT(FALSE);
      FoundXMLNode := XMLRootNode.SelectSingleNode(NodePath,XmlNsMgr);
      IF ISNULL(FoundXMLNode) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE FindNodeText@5(XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodePath@1001 : Text) : Text;
    VAR
      FoundXMLNode@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      IF ISNULL(XMLRootNode) THEN
        EXIT('');

      FoundXMLNode := XMLRootNode.SelectSingleNode(NodePath);

      IF ISNULL(FoundXMLNode) THEN
        EXIT('');

      EXIT(FoundXMLNode.InnerText);
    END;

    PROCEDURE FindNodeTextNs@15(XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodePath@1001 : Text;XmlNsMgr@1002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNamespaceManager") : Text;
    VAR
      FoundXMLNode@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      FoundXMLNode := XMLRootNode.SelectSingleNode(NodePath,XmlNsMgr);
      EXIT(FoundXMLNode.InnerText);
    END;

    PROCEDURE FindNodes@4(XMLRootNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodePath@1001 : Text;VAR ReturnedXMLNodeList@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList") : Boolean;
    BEGIN
      ReturnedXMLNodeList := XMLRootNode.SelectNodes(NodePath);

      IF ISNULL(ReturnedXMLNodeList) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE AddDeclaration@11(VAR XMLDoc@1001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";Version@1002 : Text;Encoding@1003 : Text;Standalone@1004 : Text);
    VAR
      XMLDeclaration@1000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDeclaration";
    BEGIN
      XMLDeclaration := XMLDoc.CreateXmlDeclaration(Version,Encoding,Standalone);
      XMLDoc.InsertBefore(XMLDeclaration,XMLDoc.DocumentElement);
    END;

    PROCEDURE AddGroupNode@6(VAR XMLNode@1001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodeName@1002 : Text[1024]);
    VAR
      XMLNewChild@1003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
    BEGIN
      AddElement(XMLNode,NodeName,'','',XMLNewChild);
      XMLNode := XMLNewChild;
    END;

    PROCEDURE AddNode@7(VAR XMLNode@1001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodeName@1002 : Text[1024];NodeText@1003 : Text[1024]);
    VAR
      XMLNewChild@1004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      AddElement(XMLNode,NodeName,NodeText,'',XMLNewChild);
    END;

    PROCEDURE AddLastNode@8(VAR XMLNode@1001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";NodeName@1002 : Text[1024];NodeText@1003 : Text[1024]);
    VAR
      XMLNewChild@1004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      AddElement(XMLNode,NodeName,NodeText,'',XMLNewChild);
      XMLNode := XMLNode.ParentNode;
    END;

    PROCEDURE GetAttributeValue@33(XMLNode@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";AttributeName@1003 : Text[1024]) @1001 : Text;
    VAR
      TempXMLNode@1002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NodeAttributes@1000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlAttributeCollection";
    BEGIN
      //**4PS.n
      IF ISNULL(XMLNode) THEN
        EXIT('');

      NodeAttributes := XMLNode.Attributes;
      IF ISNULL(NodeAttributes) THEN
        EXIT('');

      TempXMLNode := NodeAttributes.GetNamedItem(AttributeName);
      IF ISNULL(TempXMLNode) THEN
        EXIT('');

      EXIT(TempXMLNode.Value);
    END;

    PROCEDURE LoadXMLFromClientFile@1100525001(VAR XmlDoc@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";ClientFileName@1100525001 : Text;RemoveAllNamespaces@1100525004 : Boolean);
    VAR
      FileMgt@1100525003 : Codeunit 419;
      ServerFileName@1100525002 : Text;
    BEGIN
      //**4PS.n
      ServerFileName := FileMgt.UploadFileSilent(ClientFileName);
      LoadXMLFromServerFile(XmlDoc, ServerFileName, RemoveAllNamespaces);
      ERASE(ServerFileName);
    END;

    PROCEDURE LoadXMLFromServerFile@1100528700(VAR XmlDoc@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";ServerFileName@1100525001 : Text;RemoveAllNamespaces@1100525004 : Boolean);
    VAR
      FileMgt@1100525003 : Codeunit 419;
    BEGIN
      //**4PS.n
      XmlDoc.Load(ServerFileName);
      IF RemoveAllNamespaces THEN
        RemoveNamespaces(XmlDoc, XmlDoc);
    END;

    PROCEDURE LoadXMLFromXMLPort@1100528800(VAR XmlDoc@1100528800 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";XmlPortNo@1100528801 : Integer);
    VAR
      TempBlob@1100528803 : TEMPORARY Record 99008535;
      OStream@1100528802 : OutStream;
      IStream@1100528804 : InStream;
    BEGIN
      TempBlob.INIT;
      TempBlob.Blob.CREATEOUTSTREAM(OStream);
      XMLPORT.EXPORT(XmlPortNo, OStream);
      LoadXMLFromBlob(XmlDoc, TempBlob, FALSE);
    END;

    PROCEDURE LoadXMLFromBlob@1100528500(VAR XmlDoc@1100528502 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";VAR TempBlob@1100528500 : TEMPORARY Record 99008535;RemoveAllNamespaces@1100528503 : Boolean);
    VAR
      IStream@1100528501 : InStream;
    BEGIN
      TempBlob.Blob.CREATEINSTREAM(IStream);
      XmlDoc := XmlDoc.XmlDocument;
      XmlDoc.Load(IStream);
      IF RemoveAllNamespaces THEN
        RemoveNamespaces(XmlDoc, XmlDoc);
    END;

    PROCEDURE SaveXMLToClientFile@1100525002(XmlDoc@1100525002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";ClientFileName@1100525001 : Text);
    VAR
      FileMgt@1100525003 : Codeunit 419;
      ServerFileName@1100525000 : Text;
    BEGIN
      //**4PS.n
      ServerFileName := FileMgt.ServerTempFileName('');
      XmlDoc.Save(ServerFileName);
      FileMgt.DownloadToFile(ServerFileName, ClientFileName);
      ERASE(ServerFileName);
    END;

    PROCEDURE RemoveNamespaces@1100525007(XMLDocIn@1100525000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";VAR XMLDocOut@1100525002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      TempBlob@1100525003 : Record 99008535;
      XMLStylesheetDoc@1100525001 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XslTransform@1100525006 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.Xsl.XslTransform";
      XsltArgumentList@1100525007 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.Xsl.XsltArgumentList";
      IStream@1100525004 : InStream;
      OStream@1100525005 : OutStream;
    BEGIN
      //**4PS.n
      // See http://mibuso.com/blogs/ara3n/2012/12/07/how-to-remove-namespaces-in-xmlport-in-nav-2013/
      // When an xml document contains namespaces, the functions FindNode, FindNodeText and FindNodes
      // don't work. In NAV2009 (with automation) this was no problem.
      // In most cases namespaces are not relevant at all, and when they are removed the functions
      // FindNode, FindNodeText and FindNodes can be used in the same way as in NAV2009.
      CreateStyleSheetForRemovingNamespaces(XMLStylesheetDoc);
      XslTransform := XslTransform.XslTransform;
      XslTransform.Load(XMLStylesheetDoc);

      TempBlob.Blob.CREATEOUTSTREAM(OStream);
      XslTransform.Transform(XMLDocIn, XsltArgumentList, OStream);

      TempBlob.Blob.CREATEINSTREAM(IStream);
      IF (ISNULL(XMLDocOut)) THEN
        XMLDocOut := XMLDocOut.XmlDocument;
      XMLDocOut.Load(IStream);

      CLEAR(XMLStylesheetDoc);
      CLEAR(XslTransform);
      CLEAR(XsltArgumentList);
    END;

    LOCAL PROCEDURE CreateStyleSheetForRemovingNamespaces@1100525000(VAR XMLStylesheetDoc@1100525004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      TempBlob@1100525001 : Record 99008535;
      IStream@1100525002 : InStream;
      OStream@1100525000 : OutStream;
    BEGIN
      //**4PS.n
      TempBlob.Blob.CREATEOUTSTREAM(OStream);
      OStream.WRITETEXT('<?xml version="1.0" encoding="UTF-8"?>');
      OStream.WRITETEXT('<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">');
      OStream.WRITETEXT('<xsl:output method="xml" encoding="UTF-8" />');

      OStream.WRITETEXT('<xsl:template match="/">');
      OStream.WRITETEXT('<xsl:copy>');
      OStream.WRITETEXT('<xsl:apply-templates />');
      OStream.WRITETEXT('</xsl:copy>');
      OStream.WRITETEXT('</xsl:template>');

      OStream.WRITETEXT('<xsl:template match="*">');
      OStream.WRITETEXT('<xsl:element name="{local-name()}">');
      OStream.WRITETEXT('<xsl:apply-templates select="@* | node()" />');
      OStream.WRITETEXT('</xsl:element>');
      OStream.WRITETEXT('</xsl:template>');

      OStream.WRITETEXT('<xsl:template match="@*">');
      OStream.WRITETEXT('<xsl:attribute name="{local-name()}"><xsl:value-of select="."/></xsl:attribute>');
      OStream.WRITETEXT('</xsl:template>');

      OStream.WRITETEXT('<xsl:template match="text() | processing-instruction() | comment()">');
      OStream.WRITETEXT('<xsl:copy />');
      OStream.WRITETEXT('</xsl:template>');

      OStream.WRITETEXT('</xsl:stylesheet>');

      TempBlob.Blob.CREATEINSTREAM(IStream);
      XMLStylesheetDoc := XMLStylesheetDoc.XmlDocument;
      XMLStylesheetDoc.Load(IStream);
    END;

    PROCEDURE DecodeHtmlString@1100528600(IXmlString@1100528600 : Text) : Text;
    VAR
      HttpUtility@1100528601 : DotNet "'System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Web.HttpUtility";
    BEGIN
      EXIT(HttpUtility.HtmlDecode(IXmlString));
    END;

    PROCEDURE RemoveEmptyTags@1100528301(VAR XMLNode@1100528300 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode");
    VAR
      CurrNode@1100528306 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NextNode@1100528305 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      ChildNode@1100528301 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      CurrNode := XMLNode;
      REPEAT
        NextNode := CurrNode.NextSibling;

        IF (CurrNode.HasChildNodes) THEN BEGIN
          ChildNode := CurrNode.FirstChild;
          RemoveEmptyTags(ChildNode);
        END;
        IF (CurrNode.InnerText = '') THEN
          CurrNode.ParentNode.RemoveChild(CurrNode);
        CurrNode := NextNode;
      UNTIL (ISNULL(CurrNode));
    END;

    BEGIN
    {
      //**4PS.n
      //Original codeunit 6224
    }
    END.
  }
}

