OBJECT Page 11130448 Hours Consent Lines (HPT)
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=SVE=Tidrader f”r godk„nnande  (HPT);
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table11020579;
    PageType=Card;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 HourPortalSetup.GET;
                 //HourPortalSetup.TESTFIELD("Default Wage Comp (Expense)");
                 HourPortalSetup.TESTFIELD("Default Wage Comp (Km) OLD");

                 FillTempTable;
               END;

    OnAfterGetRecord=BEGIN
                       TypeOptionsField := Int4;
                       SetDescriptionFields;
                     END;

  }
  CONTROLS
  {
    { 1100528300;0;Container;
                ContainerType=ContentArea }

    { 1100528301;1;Group  ;
                Name=General;
                GroupType=Group }

    { 1100528326;2;Field  ;
                Name=User Id;
                SourceExpr=Code1;
                Editable=false }

    { 1100528302;2;Field  ;
                Name=Year;
                SourceExpr=Int1;
                Editable=false }

    { 1100528303;2;Field  ;
                Name=Week;
                SourceExpr=Int2;
                Editable=false }

    { 1100528304;2;Field  ;
                Name=Supplying Company;
                SourceExpr=Text1;
                Editable=false }

    { 1100528305;2;Field  ;
                Name=Employee No.;
                SourceExpr=Code2;
                Editable=false }

    { 1100409001;2;Field  ;
                Name=Employee Name;
                SourceExpr=Employee."Full Name";
                Editable=false }

    { 1100528306;2;Field  ;
                Name=Line No.;
                SourceExpr=Int3;
                Editable=false }

    { 1100528308;2;Field  ;
                Name=Receiving Company;
                SourceExpr=Text2;
                Editable=false }

    { 1100528313;2;Field  ;
                Name=Line Template Code;
                SourceExpr=Code3;
                Editable=false }

    { 1100525000;2;Field  ;
                Name=Line Template Description;
                SourceExpr=HourLineTemplate.Description;
                Editable=false }

    { 1100528309;2;Field  ;
                Name=Type;
                OptionCaptionML=[DEU=Projekt,Indirekt,Service,Werkzeug,Unbemanntes Werkzeug;
                                 ENU=Project,Indirect,Service,Plant,UnmannedPlant;
                                 NLD=Project,Indirect,Service,Materieel,Onbemand materieel;
                                 SVE=Projekt,Indirekt,Service,Maskin,Obemannad Maskin];
                SourceExpr=TypeOptionsField;
                Editable=false }

    { 1100528344;2;Field  ;
                Name=LineType;
                SourceExpr=Int5;
                Editable=false }

    { 1100528307;2;Field  ;
                Name=Object No.;
                SourceExpr=Code4;
                Editable=false }

    { 1100529405;2;Field  ;
                Name=Object Description;
                SourceExpr=ObjectDescription;
                Editable=false }

    { 1100528321;2;Field  ;
                Name=DayNo;
                SourceExpr=Int6;
                Editable=false }

    { 1100528312;2;Field  ;
                Name=Element;
                SourceExpr=Code5;
                Editable=false }

    { 1100529406;2;Field  ;
                Name=Element Description;
                SourceExpr=ProjectElement.Description;
                Editable=false }

    { 1100528310;2;Field  ;
                Name=Extension Contract;
                SourceExpr=Code6;
                Editable=false }

    { 1100525001;2;Field  ;
                Name=Extension Contract Description;
                SourceExpr=ExtensionContract.Description;
                Editable=false }

    { 1100529400;2;Field  ;
                Name=Plant Company;
                SourceExpr=Text5;
                Editable=false }

    { 1100529401;2;Field  ;
                Name=Plant Location;
                SourceExpr=Code10;
                Editable=false }

    { 1100529403;2;Field  ;
                Name=Plant Type;
                SourceExpr=Code11;
                Editable=false }

    { 1100529402;2;Field  ;
                Name=Plant No.;
                SourceExpr=Code12;
                Editable=false }

    { 1100529407;2;Field  ;
                Name=Plant Description;
                SourceExpr=PlantType.Description;
                Editable=false }

    { 1100529404;2;Field  ;
                Name=Cost Component Plant;
                SourceExpr=Code13;
                Editable=false }

    { 1100528319;2;Field  ;
                Name=Department Code;
                SourceExpr=Code7;
                Editable=false }

    { 1100525002;2;Field  ;
                Name=Department Description;
                SourceExpr=DimensionValue.Name;
                Editable=false }

    { 1100528311;2;Field  ;
                Name=Cost Object;
                SourceExpr=Code8;
                Editable=false }

    { 1100528320;2;Field  ;
                Name=Wage Component;
                SourceExpr=Code9;
                Editable=false }

    { 1100525003;2;Field  ;
                Name=Wage Component Description;
                SourceExpr=WageComponent.Description;
                Editable=false }

    { 1100528322;2;Field  ;
                Name=DayQty;
                SourceExpr=Dec1;
                Editable=false }

    { 1100528323;2;Field  ;
                Name=OverHourQty;
                SourceExpr=Dec2;
                Editable=false }

    { 1100528324;2;Field  ;
                Name=RiderType;
                SourceExpr=Int7;
                Editable=false }

    { 1100528325;2;Field  ;
                Name=LineEditable;
                SourceExpr=Bool1;
                Editable=false }

    { 1100528342;2;Field  ;
                Name=StartTime;
                SourceExpr=Time1;
                Editable=false }

    { 1100528343;2;Field  ;
                Name=EndTime;
                SourceExpr=Time2;
                Editable=false }

    { 1100528341;2;Field  ;
                Name=Hour Portal Link Guid;
                SourceExpr=Text3;
                Editable=false }

    { 1100528345;2;Field  ;
                Name=Quantity;
                SourceExpr=Dec3;
                Editable=false }

    { 1100528346;2;Field  ;
                Name=Amount;
                SourceExpr=Dec4;
                Editable=false }

    { 1100528327;2;Field  ;
                Name=Consented;
                SourceExpr=Bool2;
                OnValidate=BEGIN
                             ProcessHourLine;
                           END;
                            }

    { 1100528328;2;Field  ;
                Name=Rejected;
                SourceExpr=Bool3;
                OnValidate=BEGIN
                             ProcessHourLine;
                           END;
                            }

    { 1100528330;2;Field  ;
                Name=Reject Text;
                SourceExpr=Text4;
                OnValidate=BEGIN
                             ProcessHourLine;
                           END;
                            }

    { 1100409000;2;Field  ;
                Name=Status;
                SourceExpr=Int8 }

  }
  CODE
  {
    VAR
      HourPortalSetup@1100528326 : Record 11020454;
      HourLineTemplate@1100528313 : Record 11229799;
      ExtensionContract@1100528314 : Record 11012004;
      ProjectElement@1100529401 : Record 11012010;
      PlantType@1100529402 : Record 11012551;
      DimensionValue@1100528322 : Record 349;
      WageComponent@1100528309 : Record 11012014;
      Employee@1100409000 : Record 5200;
      LineType@1100528325 : Integer;
      DayNo@1100528305 : Integer;
      DayQty@1100528304 : Decimal;
      OverHourQty@1100528303 : Decimal;
      RiderType@1100528302 : Integer;
      LineEditable@1100528301 : Boolean INDATASET;
      Consented@1100409001 : Boolean;
      Rejected@1100409002 : Boolean;
      TypeOptionsField@1100525000 : 'Project,Indirect,Service,Plant,UnmannedPlant';
      YearStr@1100525001 : Code[50];
      WeekStr@1100525002 : Code[50];
      LineNoStr@1100525003 : Code[50];
      ObjectDescription@1100529400 : Text;
      FPSLicenseManagement@1100527400 : Codeunit 11229289;

    LOCAL PROCEDURE SetPageFields@1100528302(SiteMngmntHoursLine@1100409000 : Record 11012361;HoursConsentLine@1100409001 : Record 11020437);
    BEGIN
      DayNo := 0;
      DayQty := 0;
      OverHourQty := 0;
      RiderType := 0;

      CASE TRUE OF
        ((SiteMngmntHoursLine.Monday <> 0) OR (SiteMngmntHoursLine."Overtime Hours Monday" <> 0) OR (SiteMngmntHoursLine."Travel Hours Monday" <> 0)): BEGIN
          DayNo := 1;
          DayQty := SiteMngmntHoursLine.Monday;
          OverHourQty := SiteMngmntHoursLine."Overtime Hours Monday";
          RiderType := SiteMngmntHoursLine."Travel Hours Monday";
        END;
        ((SiteMngmntHoursLine.Tuesday <> 0) OR (SiteMngmntHoursLine."Overtime Hours Tuesday" <> 0) OR (SiteMngmntHoursLine."Travel Hours Tuesday" <> 0)): BEGIN
          DayNo := 2;
          DayQty := SiteMngmntHoursLine.Tuesday;
          OverHourQty := SiteMngmntHoursLine."Overtime Hours Tuesday";
          RiderType := SiteMngmntHoursLine."Travel Hours Tuesday";
        END;
        ((SiteMngmntHoursLine.Wednesday <> 0) OR (SiteMngmntHoursLine."Overtime Hours Wednesday" <> 0) OR (SiteMngmntHoursLine."Travel Hours Wednesday" <> 0)): BEGIN
          DayNo := 3;
          DayQty := SiteMngmntHoursLine.Wednesday;
          OverHourQty := SiteMngmntHoursLine."Overtime Hours Wednesday";
          RiderType := SiteMngmntHoursLine."Travel Hours Wednesday";
        END;
        ((SiteMngmntHoursLine.Thursday <> 0) OR (SiteMngmntHoursLine."Overtime Hours Thursday" <> 0) OR (SiteMngmntHoursLine."Travel Hours Thursday" <> 0)): BEGIN
          DayNo := 4;
          DayQty := SiteMngmntHoursLine.Thursday;
          OverHourQty := SiteMngmntHoursLine."Overtime Hours Thursday";
          RiderType := SiteMngmntHoursLine."Travel Hours Thursday";
        END;
        ((SiteMngmntHoursLine.Friday <> 0) OR (SiteMngmntHoursLine."Overtime Hours Friday" <> 0) OR (SiteMngmntHoursLine."Travel Hours Friday" <> 0)): BEGIN
          DayNo := 5;
          DayQty := SiteMngmntHoursLine.Friday;
          OverHourQty := SiteMngmntHoursLine."Overtime Hours Friday";
          RiderType := SiteMngmntHoursLine."Travel Hours Friday";
        END;
        ((SiteMngmntHoursLine.Saturday <> 0) OR (SiteMngmntHoursLine."Overtime Hours Saturday" <> 0) OR (SiteMngmntHoursLine."Travel Hours Saturday" <> 0)): BEGIN
          DayNo := 6;
          DayQty := SiteMngmntHoursLine.Saturday;
          OverHourQty := SiteMngmntHoursLine."Overtime Hours Saturday";
          RiderType := SiteMngmntHoursLine."Travel Hours Saturday";
        END;
        ((SiteMngmntHoursLine.Sunday <> 0) OR (SiteMngmntHoursLine."Overtime Hours Sunday" <> 0) OR (SiteMngmntHoursLine."Travel Hours Sunday" <> 0)): BEGIN
          DayNo := 7;
          DayQty := SiteMngmntHoursLine.Sunday;
          OverHourQty := SiteMngmntHoursLine."Overtime Hours Sunday";
          RiderType := SiteMngmntHoursLine."Travel Hours Sunday";
        END;
      END;
      LineType := GetLineType(SiteMngmntHoursLine);

      SetConsentRejectDenied(SiteMngmntHoursLine);
      SetLineEditable(SiteMngmntHoursLine, HoursConsentLine);
    END;

    LOCAL PROCEDURE GetLineType@1100528305(SiteMngmntHoursLine@1100409000 : Record 11012361) : Integer;
    VAR
      WageComponent@1100528300 : Record 11012014;
    BEGIN
      IF (NOT WageComponent.GET(SiteMngmntHoursLine."Wage Component")) THEN
        EXIT(0); //Unknown
      IF (WageComponent."Component Type" = WageComponent."Component Type"::Hours) THEN
        EXIT(1); //Hour
      IF (WageComponent."Component Type" = WageComponent."Component Type"::Expenses) THEN BEGIN
        IF (WageComponent."Kilometer Expense") THEN
          EXIT(2); //Km;
        EXIT(3); //Expense;
      END;
    END;

    LOCAL PROCEDURE SetConsentRejectDenied@1100409002(SiteMngmntHoursLine@1100409000 : Record 11012361);
    BEGIN
      Consented := FALSE;
      Rejected := FALSE;

      CASE SiteMngmntHoursLine.Status OF
        SiteMngmntHoursLine.Status::Approved:
          Consented := TRUE;
        SiteMngmntHoursLine.Status::Rejected:
          Rejected := TRUE;
      END;
    END;

    LOCAL PROCEDURE SetLineEditable@1100409001(SiteMngmntHoursLine@1100409000 : Record 11012361;HoursConsentLine@1100409001 : Record 11020437);
    BEGIN
      LineEditable := FALSE;
      IF (SiteMngmntHoursLine.Status = SiteMngmntHoursLine.Status::Released) AND
         (SiteMngmntHoursLine."Line No." = HoursConsentLine."Line No.")
      THEN
        LineEditable := TRUE;
    END;

    LOCAL PROCEDURE FillTempTable@1100528300();
    VAR
      HoursApprover@1100409000 : Record 11020438;
      HoursConsentLine@1100528300 : Record 11020437;
      LineNoFound@1100525000 : Integer;
    BEGIN
      HoursConsentLine.SETRANGE(Source, HoursConsentLine.Source::"Site Mngmnt. Hours");
      HoursConsentLine.SETRANGE(LineType, HoursConsentLine.LineType::Normal);
      HoursConsentLine.SETRANGE(Denied, FALSE);
      HoursConsentLine.SETRANGE(Consent, FALSE);
      HoursConsentLine.SETRANGE(Rejected, FALSE);
      IF (NOT HoursConsentLine.FINDSET) THEN
        EXIT;

      REPEAT
        LineNoFound := FindExistingLine(HoursConsentLine, HoursConsentLine.Approver);
        ReadHoursLines(HoursConsentLine, HoursConsentLine.Approver,LineNoFound);
        HoursApprover.SETRANGE("User ID", HoursConsentLine.Approver);
        HoursApprover.SETFILTER("User ID Substitute", '<>%1', '');
        HoursApprover.SETRANGE("Substitute Active", TRUE);
        IF (HoursApprover.FINDSET) THEN BEGIN
          REPEAT
            LineNoFound := FindExistingLine(HoursConsentLine, HoursApprover."User ID Substitute");
            ReadHoursLines(HoursConsentLine, HoursApprover."User ID Substitute",LineNoFound);
          UNTIL (HoursApprover.NEXT = 0);
        END;
      UNTIL (HoursConsentLine.NEXT = 0);
      //RESET;
      IF (COUNT > 0) THEN
        FINDFIRST
    END;

    LOCAL PROCEDURE ReadHoursLines@1100409006(HoursConsentLine@1100409000 : Record 11020437;ApproverId@1100409001 : Text;LineNoFound@1100525001 : Integer);
    VAR
      SiteMngmntHoursLine@1100528301 : Record 11012361;
      IsInsert@1100525000 : Boolean;
    BEGIN
      SiteMngmntHoursLine.SETRANGE(Year, HoursConsentLine.Year);
      SiteMngmntHoursLine.SETRANGE(Week, HoursConsentLine.Week);
      SiteMngmntHoursLine.SETRANGE("Supplying Company", HoursConsentLine."Supplying Company");
      SiteMngmntHoursLine.SETRANGE("Employee No.", HoursConsentLine.Employee);
      SiteMngmntHoursLine.SETFILTER(Status, '%1..%2', SiteMngmntHoursLine.Status::Released,
        SiteMngmntHoursLine.Status::Rejected);
      IF LineNoFound <> 0 THEN
        SiteMngmntHoursLine.SETRANGE("Line No.", LineNoFound);
      IF (SiteMngmntHoursLine.FINDSET) THEN BEGIN
        REPEAT
          IsInsert := CreateTempRec(SiteMngmntHoursLine, ApproverId);
          SetPageFields(SiteMngmntHoursLine, HoursConsentLine);
          FillTempFields(HoursConsentLine, SiteMngmntHoursLine, ApproverId);
          IF (LineEditable) THEN
            Bool1 := TRUE;
          IF IsInsert THEN
            INSERT
          ELSE
            MODIFY;
        UNTIL (SiteMngmntHoursLine.NEXT = 0);
      END;
    END;

    LOCAL PROCEDURE CreateTempRec@1100409007(VAR SiteMngmntHoursLine@1100409000 : Record 11012361;ApproverId@1100409002 : Text) : Boolean;
    BEGIN
      YearStr := FORMAT(SiteMngmntHoursLine.Year);
      WeekStr := FORMAT(SiteMngmntHoursLine.Week);
      LineNoStr := FORMAT(SiteMngmntHoursLine."Line No.");

      IF (NOT GET(ApproverId, YearStr , WeekStr, SiteMngmntHoursLine."Supplying Company",
          SiteMngmntHoursLine."Employee No.", LineNoStr))
      THEN BEGIN
        INIT;
        "Key Code1" := ApproverId;
        "Key Code2" := YearStr ;
        "Key Code3" := WeekStr;
        "Key Code4" := SiteMngmntHoursLine."Supplying Company";
        "Key Code5" := SiteMngmntHoursLine."Employee No.";
        "Key Code6" := LineNoStr;
        EXIT (TRUE);
      END;
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE FindExistingLine@1100525000(HoursConsentLine@1100525000 : Record 11020437;ApproverId@1100525001 : Text) : Integer;
    VAR
      LineNo@1100525002 : Integer;
    BEGIN
      YearStr := FORMAT(HoursConsentLine.Year);
      WeekStr := FORMAT(HoursConsentLine.Week);
      LineNoStr := FORMAT(HoursConsentLine."Line No.");

      SETRANGE("Key Code1", ApproverId);
      SETRANGE("Key Code2", YearStr);
      SETRANGE("Key Code3", WeekStr);
      SETRANGE("Key Code4", HoursConsentLine."Supplying Company");
      SETRANGE("Key Code5", HoursConsentLine.Employee);
      SETRANGE("Key Code6", LineNoStr);

      IF FINDFIRST THEN
        EVALUATE(LineNo, "Key Code6");

      SETRANGE("Key Code1");
      SETRANGE("Key Code2");
      SETRANGE("Key Code3");
      SETRANGE("Key Code4");
      SETRANGE("Key Code5");
      SETRANGE("Key Code6");

      EXIT(LineNo);
    END;

    LOCAL PROCEDURE FillTempFields@1100409000(HoursConsentLine@1100409001 : Record 11020437;SiteMngmntHoursLine@1100409000 : Record 11012361;ApproverId@1100409002 : Text);
    BEGIN
      Code1 := ApproverId;
      Code2 := SiteMngmntHoursLine."Employee No.";
      Code3 := SiteMngmntHoursLine."Line Template Code";
      Code4 := SiteMngmntHoursLine."Object No.";
      Code5 := SiteMngmntHoursLine.Element;
      Code6 := SiteMngmntHoursLine."Extension Contract";
      Code7 := SiteMngmntHoursLine."Department Code";
      Code8 := SiteMngmntHoursLine."Cost Object";
      Code9 := SiteMngmntHoursLine."Wage Component";
      Code10 := SiteMngmntHoursLine."Plant Location";
      Code11 := SiteMngmntHoursLine."Plant Type";
      Code12 := SiteMngmntHoursLine."Plant No.";
      Code13 := SiteMngmntHoursLine."Cost Component Plant";

      Int1 := SiteMngmntHoursLine.Year;
      Int2 := SiteMngmntHoursLine.Week;
      Int3 := SiteMngmntHoursLine."Line No.";
      Int4 := SiteMngmntHoursLine.Type;
      Int5 := LineType;
      Int6 := DayNo;
      Int7 := RiderType;
      Int8 := SiteMngmntHoursLine.Status;

      Dec1 := DayQty;
      Dec2 := OverHourQty;
      Dec3 := SiteMngmntHoursLine.Quantity;
      Dec4 := SiteMngmntHoursLine.Amount;

      //Bool1 := LineEditable;
      Bool2 := Consented;
      Bool3 := Rejected;

      Text1 := SiteMngmntHoursLine."Supplying Company";
      Text2 := SiteMngmntHoursLine."Receiving Company";
      Text3 := SiteMngmntHoursLine."Hour Portal Link Guid";
      Text5 := SiteMngmntHoursLine."Plant Company";

      Time1 := SiteMngmntHoursLine."Start Time";
      Time2 := SiteMngmntHoursLine."End Time";
    END;

    LOCAL PROCEDURE ProcessHourLine@1100528315();
    VAR
      SiteMngmntHoursLine@1100528300 : Record 11012361;
      HourPortalWSHPT@1100525000 : Codeunit 11126046;
    BEGIN
      IF (NOT SiteMngmntHoursLine.GET(Int1, Int2, Text1, Code2, Int3)) THEN
        EXIT;

      HourPortalWSHPT.ProcessHourLine(SiteMngmntHoursLine, Bool2, Bool3,Text4);
    END;

    LOCAL PROCEDURE SetDescriptionFields@1100525002();
    BEGIN
      ExtensionContract.INIT;
      DimensionValue.INIT;
      ProjectElement.INIT;
      PlantType.INIT;

      IF (NOT Employee.GET(Code2)) THEN
        Employee.INIT;
      IF (NOT HourLineTemplate.GET(1, Text2, Code3)) THEN
        HourLineTemplate.INIT;

      ObjectDescription := GetDescriptionOfObjectNo;

      IF (Int4 = 0) AND (Code5 <> '') THEN BEGIN
        IF Text2 <> '' THEN
          ProjectElement.CHANGECOMPANY(Text2);
        IF FPSLicenseManagement.LicenseAndReadPermissionForTable(ProjectElement) THEN
          IF (NOT ProjectElement.GET(Code4, Code5)) THEN
          ProjectElement.INIT;
      END;

      IF (Int4 = 0) AND (Code6 <> '') THEN BEGIN
        IF Text2 <> '' THEN
          ExtensionContract.CHANGECOMPANY(Text2);
        IF FPSLicenseManagement.LicenseAndReadPermissionForTable(ExtensionContract) THEN
          IF (NOT ExtensionContract.GET(Code4, Code6)) THEN
            ExtensionContract.INIT;
      END;

      IF (Code7 <> '') THEN BEGIN
        DimensionValue.SETCURRENTKEY(Code, "Global Dimension No.");
        DimensionValue.SETRANGE(Code, Code7);
        DimensionValue.SETRANGE("Global Dimension No.", 1);
        IF (NOT DimensionValue.FINDFIRST) THEN
          DimensionValue.INIT;
      END;

      IF (NOT WageComponent.GET(Code9)) THEN
        WageComponent.INIT;

      IF (Code11 <> '') THEN BEGIN
        IF Text5 <> '' THEN
          PlantType.CHANGECOMPANY(Text5);
        IF FPSLicenseManagement.LicenseAndReadPermissionForTable(PlantType) THEN
          IF (NOT PlantType.GET(Code11)) THEN
            PlantType.INIT;
      END;
    END;

    PROCEDURE GetDescriptionOfObjectNo@1100528700() : Text[100];
    VAR
      Job@1100528700 : Record 11072003;
      ServiceContract@1100528701 : Record 11012812;
      CostCode@1100528702 : Record 11012083;
      PlantLocation@1100528703 : Record 11012554;
    BEGIN
      IF Code4 = '' THEN
        EXIT;

      CASE Int4 OF
        0:
          BEGIN
            IF Text2 <> '' THEN
              Job.CHANGECOMPANY(Text2);
            IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(Job) THEN
              EXIT;
            IF Job.GET(Code4) THEN
              EXIT(Job.Description);
          END;
        1:
          BEGIN
            IF Text2 <> '' THEN
              ServiceContract.CHANGECOMPANY(Text2);
            IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(ServiceContract) THEN
              EXIT;
            IF ServiceContract.GET(COPYSTR(Code4,1,MAXSTRLEN(ServiceContract."No."))) THEN
              EXIT(ServiceContract.Description);
          END;
        2:
          BEGIN
            IF Text2 <> '' THEN
              CostCode.CHANGECOMPANY(Text2);
            IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(CostCode) THEN
              EXIT;
            IF CostCode.GET(Code4) THEN
              EXIT(CostCode.Description);
          END;
        4:
          BEGIN
            IF Text2 <> '' THEN
              PlantLocation.CHANGECOMPANY(Text2);
            IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(PlantLocation) THEN
              EXIT;
            IF PlantLocation.GET(Code4) THEN
              EXIT(PlantLocation.Description);
          END;
      END;
    END;

    BEGIN
    {
      LineType:
        1 = Hour
        2 = Km
        3 = Expences
    }
    END.
  }
}

