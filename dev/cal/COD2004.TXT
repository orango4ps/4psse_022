OBJECT Codeunit 2004 Machine Learning KeyVaultMgmt.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      LimitTypeOption@1000 : 'Year,Month,Day,Hour';

    [Internal]
    PROCEDURE GetMachineLearningCredentials@2(SecretName@1005 : Text;VAR ApiUri@1003 : Text[250];VAR ApiKey@1002 : Text[200];VAR LimitType@1001 : Option;VAR Limit@1000 : Decimal);
    VAR
      AzureKeyVaultManagement@1004 : Codeunit 2200;
      JSONManagement@1007 : Codeunit 5459;
      TenantManagement@1008 : Codeunit 417;
      JsonObject@1011 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      ApiKeyJArray@1009 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JArray";
      ApiUriJArray@1010 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JArray";
      JObject@1015 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      SecretValue@1006 : Text;
      LimitTxt@1012 : Text;
      LimitTypeTxt@1013 : Text;
      Index@1014 : Integer;
    BEGIN
      IF NOT AzureKeyVaultManagement.GetAzureKeyVaultSecret(SecretValue,SecretName) THEN
        EXIT;

      JSONManagement.InitializeObject(SecretValue);
      JSONManagement.GetJSONObject(JsonObject);
      JSONManagement.GetStringPropertyValueFromJObjectByName(JsonObject,'Limit',LimitTxt);
      EVALUATE(Limit,LimitTxt,9);
      IF NOT JSONManagement.GetStringPropertyValueFromJObjectByName(JsonObject,'LimitType',LimitTypeTxt) THEN
        LimitTypeTxt := 'Month';
      LimitType := GetLimitTypeOptionFromText(LimitTypeTxt);
      IF NOT JSONManagement.GetArrayPropertyValueFromJObjectByName(JsonObject,'ApiKeys',ApiKeyJArray) THEN
        EXIT;
      IF NOT JSONManagement.GetArrayPropertyValueFromJObjectByName(JsonObject,'ApiUris',ApiUriJArray) THEN
        EXIT;

      JSONManagement.InitializeCollectionFromJArray(ApiKeyJArray);
      IF JSONManagement.GetCollectionCount > 0 THEN BEGIN
        Index := TenantManagement.GenerateTenantIdBasedRandomNumber(JSONManagement.GetCollectionCount) - 1;
        IF JSONManagement.GetJObjectFromCollectionByIndex(JObject,Index) THEN
          ApiKey := FORMAT(JObject);
        JSONManagement.InitializeCollectionFromJArray(ApiUriJArray);
        IF JSONManagement.GetJObjectFromCollectionByIndex(JObject,Index) THEN
          ApiUri := FORMAT(JObject);
      END;
    END;

    [External]
    PROCEDURE GetLimitTypeOptionFromText@14(LimitTypeTxt@1000 : Text) : Integer;
    BEGIN
      CASE LimitTypeTxt OF
        'Year':
          EXIT(LimitTypeOption::Year);
        'Month':
          EXIT(LimitTypeOption::Month);
        'Day':
          EXIT(LimitTypeOption::Day);
        'Hour':
          EXIT(LimitTypeOption::Hour);
      END;
    END;

    BEGIN
    END.
  }
}

