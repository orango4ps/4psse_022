OBJECT Table 11012619 Request - Rail
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 HrsSetupRec.GET;
                 HrsSetupRec.TESTFIELD("Request Nos.");
                 NoSeriesMgt.InitSeries(HrsSetupRec."Request Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;
               IF ("No." <> '') AND (Date = 0D) THEN
                 Date := TODAY;
             END;

    OnModify=BEGIN
               IF "Project No." <> xRec."Project No." THEN BEGIN
                 UpdateProjectInReqLines();
                 UpdateProjectInCapacityPlan();
               END;
               IF (Status = Status::Expired) OR (Status = Status::Rejected) THEN
                 DeleteAssignedAndCapPlan();
             END;

    OnDelete=VAR
               lvRequestLineRec@1210190000 : Record 11012620;
             BEGIN
               lvRequestLineRec.SETRANGE("Request No.", "No.");
               lvRequestLineRec.DELETEALL;

               DeleteAssignedAndCapPlan();
             END;

    CaptionML=[ENU=Request - Rail;
               NOR=Foresp›rsel - Rail;
               SVE=Beg„ran - Rail];
    LookupPageID=Page11012652;
  }
  FIELDS
  {
    { 10  ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  HrsSetupRec.GET;
                                                                  NoSeriesMgt.TestManual(HrsSetupRec."Request Nos.");
                                                                 "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 20  ;   ;Date                ;Date          ;CaptionML=[ENU=Date;
                                                              NOR=Dato;
                                                              SVE=Datum] }
    { 30  ;   ;Requested by        ;Code20        ;TableRelation=Employee;
                                                   CaptionML=[ENU=Requested by;
                                                              NOR=Forespurt av;
                                                              SVE=Beg„rd av] }
    { 40  ;   ;Project No.         ;Code20        ;TableRelation=Job;
                                                   OnValidate=BEGIN
                                                                IF "Project No." <> '' THEN BEGIN
                                                                  ProjSetupRec.GET;
                                                                  ProjRec.GET("Project No.");
                                                                  IF (ProjSetupRec."Provisions at Closure") THEN
                                                                    ProjRec.CheckProjectStatus(-1)
                                                                  ELSE
                                                                    ProjRec.CheckProjectStatus(1);
                                                                END;

                                                                IF "Project No." <> xRec."Project No." THEN
                                                                  CheckReqLinesProjectRelated();

                                                                CALCFIELDS("Project Description");
                                                              END;

                                                   CaptionML=[ENU=Project No.;
                                                              NOR=Prosjektnr;
                                                              SVE=Projektnr];
                                                   NotBlank=Yes }
    { 41  ;   ;Project Description ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Job.Description WHERE (No.=FIELD(Project No.)));
                                                   CaptionML=[ENU=Project Description;
                                                              NOR=Prosjektbeskrivelse;
                                                              SVE=Projektbeskrivning];
                                                   Editable=No }
    { 50  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 60  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              NOR=Nr-serie;
                                                              SVE=Nr-serie];
                                                   Editable=No }
    { 70  ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                IF (Status = Status::Rejected) THEN BEGIN
                                                                  IF CheckAssigned() THEN
                                                                    FIELDERROR(Status, STRSUBSTNO(Text000, Status));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[ENU="Requested,Planned,Planned; Hire To Do,Rejected,Expired";
                                                                    NOR="Forespurt,Planlagte,Planlagte;Leie Oppgave,Avvist,Utg†tt";
                                                                    SVE=Beg„rd,Planerad,Planerad:Hyra uppgift,Avvisad,Utg†ngen];
                                                   OptionString=Requested,Planned,Hire To Do,Rejected,Expired }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      HrsSetupRec@1210190001 : Record 11012600;
      ProjSetupRec@1210190002 : Record 315;
      ProjRec@1210190003 : Record 11072003;
      NoSeriesMgt@1210190000 : Codeunit 396;
      Text000@1100485000 : TextConst 'ENU=''%1'' not allowed, request is already assigned;NOR=%1'' ikke tillatt, foresp›rsel er allerede tilordnet;SVE=''%1'' inte till†tet, f”rfr†gan har redan tilldelats';

    PROCEDURE AssistEdit@2(IOldRequestRec@1000 : Record 11012619) : Boolean;
    VAR
      lvRequestRec@1210190000 : Record 11012619;
    BEGIN
      WITH lvRequestRec DO BEGIN
        lvRequestRec := Rec;
        HrsSetupRec.GET;
        HrsSetupRec.TESTFIELD("Request Nos.");
        IF NoSeriesMgt.SelectSeries(HrsSetupRec."Request Nos.",IOldRequestRec."No. Series","No. Series") THEN BEGIN
          HrsSetupRec.GET;
          HrsSetupRec.TESTFIELD("Request Nos.");
          NoSeriesMgt.SetSeries("No.");
          Rec := lvRequestRec;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE CheckReqLinesProjectRelated@1210190000();
    VAR
      lvRequestLineRec@1210190000 : Record 11012620;
    BEGIN
      lvRequestLineRec.SETRANGE("Request No.", "No.");
      IF NOT lvRequestLineRec.FIND('-') THEN
        EXIT;

      REPEAT
        lvRequestLineRec."Project No." := "Project No.";  //* Check element present for
        lvRequestLineRec.VALIDATE(Element);               //* the new project
      UNTIL lvRequestLineRec.NEXT = 0;
    END;

    PROCEDURE UpdateProjectInReqLines@1210190001();
    VAR
      lvRequestLineRec@1210190000 : Record 11012620;
    BEGIN
      lvRequestLineRec.SETRANGE("Request No.", "No.");
      IF NOT lvRequestLineRec.FIND('-') THEN
        EXIT;

      REPEAT
        lvRequestLineRec."Project No." := "Project No.";
        lvRequestLineRec.MODIFY;
      UNTIL lvRequestLineRec.NEXT = 0;
    END;

    PROCEDURE UpdateProjectInCapacityPlan@1210190005();
    VAR
      lvCapPlanRec@1210190000 : Record 11012623;
    BEGIN
      lvCapPlanRec.SETCURRENTKEY("Request No.", "Request Line No.", "Assigned Employee Line No.");
      lvCapPlanRec.SETRANGE("Request No.", "No.");
      IF NOT lvCapPlanRec.FIND('-') THEN
        EXIT;

      REPEAT
        lvCapPlanRec."Project No." := "Project No.";
        lvCapPlanRec.MODIFY;
      UNTIL lvCapPlanRec.NEXT = 0;
    END;

    PROCEDURE DeleteAssignedAndCapPlan@1100485000();
    VAR
      lvAssEmplRec@1100485001 : Record 11012621;
      lvCapPlanRec@1100485000 : Record 11012623;
    BEGIN
      lvAssEmplRec.SETRANGE("Request No.", "No.");
      lvAssEmplRec.DELETEALL;

      lvCapPlanRec.SETCURRENTKEY("Request No.", "Request Line No.", "Assigned Employee Line No.");
      lvCapPlanRec.SETRANGE("Request No.", "No.");
      lvCapPlanRec.DELETEALL;
    END;

    PROCEDURE CheckAssigned@1100485003() : Boolean;
    VAR
      lvAssEmplRec@1100485000 : Record 11012621;
    BEGIN
      lvAssEmplRec.SETRANGE("Request No.", "No.");
      IF lvAssEmplRec.FIND('-') THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

