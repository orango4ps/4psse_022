OBJECT Table 11072312 Service Preclosure Result
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               ServicePrognosisManagement@1100528600 : Codeunit 11012884;
             BEGIN
               ServicePrognosisManagement.TestRealTimeControlMethod;
               "Created on" := TODAY;
               "Created by" := USERID;
               TESTFIELD("Posting Date");
               TESTFIELD("Seq. No.");
             END;

    OnDelete=VAR
               ServicePreclosureResultLine@1100528600 : Record 11072313;
             BEGIN
               ServicePreclosureResultLine.SETRANGE("Posting Date", "Posting Date");
               ServicePreclosureResultLine.SETRANGE("Seq. No.", "Seq. No.");
               ServicePreclosureResultLine.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               ERROR(Text001, TABLECAPTION);
             END;

    CaptionML=ENU=Service Preclosure Result;
    LookupPageID=Page11126807;
    DrillDownPageID=Page11126807;
  }
  FIELDS
  {
    { 10  ;   ;Posting Date        ;Date          ;OnValidate=VAR
                                                                ServicePreclosureResultLine@1100528600 : Record 11072313;
                                                                ServicePreclosureResult@1100528601 : Record 11072312;
                                                              BEGIN
                                                                IF xRec."Posting Date" <> "Posting Date" THEN BEGIN
                                                                  ServicePreclosureResultLine.SETRANGE("Posting Date", xRec."Posting Date");
                                                                  ServicePreclosureResultLine.SETRANGE("Seq. No.", "Seq. No.");
                                                                  IF NOT ServicePreclosureResultLine.ISEMPTY THEN
                                                                    ERROR(Text000, ServicePreclosureResultLine.TABLECAPTION);
                                                                END;
                                                                IF "Posting Date" <> 0D THEN BEGIN
                                                                  ServicePreclosureResult.SETRANGE("Posting Date", "Posting Date");
                                                                  IF ServicePreclosureResult.FINDLAST THEN
                                                                    "Seq. No." := ServicePreclosureResult."Seq. No.";
                                                                  "Seq. No." += 1;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Posting Date;
                                                              NOR=Bokf›ringsdato;
                                                              SVE=Bokf”ringsdatum];
                                                   NotBlank=Yes }
    { 20  ;   ;Seq. No.            ;Integer       ;OnValidate=VAR
                                                                ServicePreclosureResultLine@1100528600 : Record 11072313;
                                                              BEGIN
                                                                IF xRec."Seq. No." <> "Seq. No." THEN BEGIN
                                                                  ServicePreclosureResultLine.SETRANGE("Posting Date", "Posting Date");
                                                                  ServicePreclosureResultLine.SETRANGE("Seq. No.", xRec."Seq. No.");
                                                                  IF NOT ServicePreclosureResultLine.ISEMPTY THEN
                                                                    ERROR(Text000, ServicePreclosureResultLine.TABLECAPTION);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Seq. No.;
                                                              NOR=Sekv. nr;
                                                              SVE=Sekv. nr];
                                                   NotBlank=Yes }
    { 30  ;   ;Created on          ;Date          ;CaptionML=[ENU=Created on;
                                                              NOR=Opprettet den;
                                                              SVE=Skapades];
                                                   Editable=No }
    { 40  ;   ;Created by          ;Text50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Created by;
                                                              NOR=Opprettet av;
                                                              SVE=Skapades av];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Posting Date,Seq. No.                   ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528600 : TextConst 'ENU=There are %1s present, changing not allowed';
      Text001@1100525000 : TextConst 'ENU=You cannot rename a %1.;NOR=Du kan ikke gi nytt navn til en %1.;SVE=Du kan inte byta namn p† %1.';
      SummaryLevel@1100529782 : Boolean;
      SummaryLevelStartDate@1100529781 : Date;
      SummaryLevelEndDate@1100529780 : Date;
      Text002@1100529600 : TextConst 'ENU=Posted service interim result (old) must first be reversed. See installation instruction release/hotfix.';

    PROCEDURE AddPreclosureResultLine@1100528600(IServiceContractNo@1100528604 : Code[20];IControlPeriodCode@1100528603 : Code[20];ILineType@1100528602 : Option;IServiceCategoryCode@1100528607 : Code[10];ISourceType@1100528605 : Option;IServiceOrderNo@1100528606 : Code[20];IGlobalDim1Code@1100529600 : Code[20];VAR IOLastLineNo@1100528601 : Integer);
    VAR
      ServicePreclosureResultLine@1100528600 : Record 11072313;
      ServicePreclosureResultLine2@1100529660 : Record 11072313;
    BEGIN
      ServicePreclosureResultLine."Posting Date" := "Posting Date";
      ServicePreclosureResultLine."Seq. No." := "Seq. No.";
      ServicePreclosureResultLine.VALIDATE("Service Contract No.", IServiceContractNo);
      ServicePreclosureResultLine.VALIDATE("Control Period Code", IControlPeriodCode);
      ServicePreclosureResultLine."Line Type" := ILineType;
      ServicePreclosureResultLine.VALIDATE("Service Category", IServiceCategoryCode);
      ServicePreclosureResultLine."Source Type" := ISourceType;
      ServicePreclosureResultLine."Service Order No." := IServiceOrderNo;
      IF (ServicePreclosureResultLine."Line Type" = ServicePreclosureResultLine."Line Type"::"Service Order") AND
         (ServicePreclosureResultLine."Service Order No." = '') AND (ServicePreclosureResultLine."Calc. Interim Results by Order")
      THEN
        EXIT;
      IF SummaryLevel THEN BEGIN
        ServicePreclosureResultLine."Summary Level" := TRUE;
        ServicePreclosureResultLine."Starting Date" := SummaryLevelStartDate;
        ServicePreclosureResultLine."Ending Date" := SummaryLevelEndDate;
      END;
      IF ServicePreclosureResultLine."Line Type" = ServicePreclosureResultLine."Line Type"::Period THEN
        ServicePreclosureResultLine."Totaling Type" := ServicePreclosureResultLine."Totaling Type"::All
      ELSE
        IF (ServicePreclosureResultLine."Calc. Interim Results by Order") AND
           (ServicePreclosureResultLine."Service Order No." = '')
        THEN
          ServicePreclosureResultLine."Totaling Type" := ServicePreclosureResultLine."Totaling Type"::Profit
        ELSE
          ServicePreclosureResultLine."Totaling Type" := ServicePreclosureResultLine."Totaling Type"::All;
      IOLastLineNo += 10000;
      ServicePreclosureResultLine."Line No." := IOLastLineNo;
      ServicePreclosureResultLine."Global Dimension 1 Code" := IGlobalDim1Code;
      ServicePreclosureResultLine.INSERT(TRUE);

      IF (ServicePreclosureResultLine."Calc. Interim Results by Order") AND (ServicePreclosureResultLine."Line Type" <> ServicePreclosureResultLine."Line Type"::Period) THEN
        IF (ServicePreclosureResultLine."Line Type" <> ServicePreclosureResultLine."Line Type"::"Service Order") OR
           (ServicePreclosureResultLine."Service Order No." = '')
        THEN BEGIN
          ServicePreclosureResultLine."Totaling Type" := ServicePreclosureResultLine."Totaling Type"::Loss;
          ServicePreclosureResultLine."Line No." := - ServicePreclosureResultLine."Line No.";
          ServicePreclosureResultLine.ResetValues;
          ServicePreclosureResultLine.INSERT(TRUE);
        END ELSE
          IF ServicePreclosureResultLine."Totaling Type" = ServicePreclosureResultLine."Totaling Type"::Loss THEN BEGIN
            ServicePreclosureResultLine2 := ServicePreclosureResultLine;
            ServicePreclosureResultLine2."Line No." := - ServicePreclosureResultLine2."Line No.";
            ServicePreclosureResultLine2.INSERT;
            ServicePreclosureResultLine.DELETE;
          END;
    END;

    PROCEDURE IsContractOnOtherPreclosureResultSeqNo@1100528601(IServiceContractNo@1100528600 : Code[20];IGlobalDim1Code@1100529600 : Code[20];VAR OOtherPreclosureResultSeqNo@1100528602 : Integer) : Boolean;
    VAR
      ServicePreclosureResultLine@1100528601 : Record 11072313;
    BEGIN
      ServicePreclosureResultLine.SETRANGE("Posting Date", "Posting Date");
      ServicePreclosureResultLine.SETRANGE("Service Contract No.", IServiceContractNo);
      IF IServiceContractNo = '' THEN
        ServicePreclosureResultLine.SETRANGE("Global Dimension 1 Code", IGlobalDim1Code);
      ServicePreclosureResultLine.SETRANGE(Posted, FALSE);
      IF ServicePreclosureResultLine.FINDFIRST THEN BEGIN
        OOtherPreclosureResultSeqNo := ServicePreclosureResultLine."Seq. No.";
        EXIT(TRUE);
      END;
      ServicePreclosureResultLine.SETRANGE(Posted, TRUE);
      ServicePreclosureResultLine.SETRANGE("Seq. No.", "Seq. No.");
      IF ServicePreclosureResultLine.FINDFIRST THEN BEGIN
        OOtherPreclosureResultSeqNo := ServicePreclosureResultLine."Seq. No.";
        EXIT(TRUE);
      END;
    END;

    PROCEDURE PostPreclosureResult@1100525003(Print@1100525001 : Boolean);
    VAR
      ServicePreclosureResultLine@1100525004 : Record 11072313;
      GLRegister@1100525003 : Record 45;
      ServiceSetup@1100525002 : Record 11012800;
      GenJournalTemplate@1100525000 : Record 80;
      ServiceContract@1100529660 : Record 11012812;
      UseServiceCategory@1100529661 : Boolean;
    BEGIN
      ServiceSetup.GET;
      IF ServiceSetup."Old Preclosure Result Present" THEN
        ERROR(Text002);

      ServicePreclosureResultLine.SETRANGE("Posting Date", "Posting Date");
      ServicePreclosureResultLine.SETRANGE("Seq. No.", "Seq. No.");
      ServicePreclosureResultLine.SETRANGE(Posted, FALSE);
      ServicePreclosureResultLine.SETRANGE("Line Type", ServicePreclosureResultLine."Line Type"::Period, ServicePreclosureResultLine."Line Type"::"Service Category");
      ServicePreclosureResultLine.SETCURRENTKEY("Service Contract No.");
      IF ServicePreclosureResultLine.FINDSET THEN BEGIN
        REPEAT
          IF ServicePreclosureResultLine."Service Contract No." = '' THEN BEGIN;
            CLEAR(ServiceContract);
            UseServiceCategory := FALSE;
          END ELSE
            IF ServiceContract."No." <> ServicePreclosureResultLine."Service Contract No." THEN BEGIN
              ServiceContract.GET(ServicePreclosureResultLine."Service Contract No.");
              UseServiceCategory := NOT ServiceContract."Result Calc. on Total Contract" AND
                (ServiceContract."Budget Based on" IN [ServiceContract."Budget Based on"::Category, ServiceContract."Budget Based on"::"Category + Maintenance Scheme"]);
            END;
          IF (UseServiceCategory AND (ServicePreclosureResultLine."Line Type" = ServicePreclosureResultLine."Line Type"::"Service Category")) OR
             ((NOT UseServiceCategory) AND (ServicePreclosureResultLine."Line Type" = ServicePreclosureResultLine."Line Type"::Period))
          THEN
            ServicePreclosureResultLine.MARK(TRUE);
        UNTIL ServicePreclosureResultLine.NEXT = 0;
        ServicePreclosureResultLine.MARKEDONLY(TRUE);
        REPORT.RUNMODAL(REPORT::"Post Service Preclosure Result", FALSE, FALSE, ServicePreclosureResultLine);
      END;

      IF Print THEN
        IF ServiceSetup."Journal Template Closing Proc." <> '' THEN
          GenJournalTemplate.GET(ServiceSetup."Journal Template Closing Proc.")
        ELSE
          GenJournalTemplate.INIT;
        IF ServicePreclosureResultLine."G/L Register No. Sales" <> 0 THEN BEGIN
          IF GLRegister.GET(ServicePreclosureResultLine."G/L Register No. Sales") THEN BEGIN
            GLRegister.SETRECFILTER;
            REPORT.RUN(GenJournalTemplate."Posting Report ID", FALSE, FALSE, GLRegister);
          END;
        END;
    END;

    PROCEDURE SetSummaryLevelValues@1100529782(NewSummaryLevel@1100529782 : Boolean;NewSummaryLevelStartDate@1100529781 : Date;NewSummaryLevelEndDate@1100529780 : Date);
    BEGIN
      SummaryLevel := NewSummaryLevel;
      IF SummaryLevel THEN BEGIN
        SummaryLevelStartDate := NewSummaryLevelStartDate;
        SummaryLevelEndDate := NewSummaryLevelEndDate;
      END;
    END;

    BEGIN
    END.
  }
}

