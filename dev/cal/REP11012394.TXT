OBJECT Report 11012394 Upd. Exp. Installm. Inv. Dates
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Permissions=TableData 11012018=rm;
    CaptionML=[DEU=Aktualisieren verarb. Rechn.-Datum Rate;
               ENU=Update Exp. Installmt. Invoice Dates;
               NLD=Bijwerken verw. fact.datum termijnen;
               NOR=Oppdater utg. Fakturadato for avdrag;
               SVE=Uppdatera utg. fakturadatum fîr avbetalning];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 5136;    ;DataItem;                    ;
               DataItemTable=Table11012018;
               DataItemTableView=SORTING(Project No.,Principal);
               OnPreDataItem=BEGIN
                               TestForValidDateFormula(DateFormula);
                               TestForOnlyOnePrincipal("Project Installment");

                               IgnoreInvoicedInstallments("Project Installment");
                               IgnoreEmptyExpInvoiceDates("Project Installment");

                               IF ISEMPTY THEN
                                 ERROR(Text002);
                             END;

               OnAfterGetRecord=BEGIN
                                  UpdateExpectedInvoiceDate("Project Installment", DateFormula);
                                END;

               ReqFilterFields=Project No.,Principal,Installment No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=[DEU=Datumsformel;
                 ENU=Date Formula;
                 NLD=Datumformule;
                 NOR=Datoformel;
                 SVE=Datumformel];
    }
    CONTROLS
    {
      { 1100525000;;Container;
                  ContainerType=ContentArea }

      { 1100525001;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100525002;2;Field  ;
                  Name=Date Formula;
                  CaptionML=[DEU=Datumsformel;
                             ENU=Date Formula;
                             NLD=Datumformule;
                             NOR=Datoformel;
                             SVE=Datumformel];
                  SourceExpr=DateFormula }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      DateFormula@1210190000 : DateFormula;
      Text000@1210190001 : TextConst 'DEU=Geben Sie bitte eine Datumswechsel Formel auf;ENU=Please specify a date formula.;NLD=Geef a.u.b. een datumformule op.;NOR=Angi en datoformel.;SVE=Ange en datumformel.';
      Text001@1210190002 : TextConst 'DEU=Sie kînnen nur fÅr einen Auftraggeber gleichzeitig die erwarteten Rechnungsdaten anpassen.;ENU=You cannot update the expected invoice dates for more than one principal at a time.;NLD=U kunt slechts voor ÇÇn opdrachtgever tegelijk de verwachte factuurdatums aanpassen.;NOR=Du kan ikke oppdatere den forventede fakturadatoen for mer enn en hovedkonto om gangen.;SVE=Du kan inte uppdatera det fîrvÑntade fakturadatumet fîr mer Ñn ett huvudkonto Üt gÜngen.';
      Text002@1210190003 : TextConst 'DEU=Keine Raten zu bearbeiten.;ENU=No installments were updated.;NLD=Geen termijnen om bij te werken.;NOR=Ingen avdrag ble oppdatert.;SVE=Inga avbetalningar har uppdaterats.';

    LOCAL PROCEDURE TestForValidDateFormula@1210190002(DateFormula@1210190000 : DateFormula);
    BEGIN
      IF FORMAT(DateFormula) = '' THEN
        ERROR(Text000);
    END;

    LOCAL PROCEDURE TestForOnlyOnePrincipal@1210190006(VAR ProjectInstallment@1210190000 : Record 11012018);
    BEGIN
      CASE TRUE OF
        ProjectInstallment.GETFILTER("Project No.") = '':
          ERROR(Text001);
        ProjectInstallment.GETRANGEMIN("Project No.") <> ProjectInstallment.GETRANGEMAX("Project No."):
          ERROR(Text001);
        ProjectInstallment.GETFILTER(Principal) = '':
          ERROR(Text001);
        ProjectInstallment.GETRANGEMIN(Principal) <> ProjectInstallment.GETRANGEMAX(Principal):
          ERROR(Text001);
      END;
    END;

    LOCAL PROCEDURE IgnoreInvoicedInstallments@1210190000(VAR ProjectInstallment@1210190000 : Record 11012018);
    BEGIN
      ProjectInstallment.SETRANGE("Invoice in Process", 0);
      ProjectInstallment.SETRANGE("Credit Memo in Process", 0);
      ProjectInstallment.SETRANGE("Invoiced Price", 0);
    END;

    LOCAL PROCEDURE IgnoreEmptyExpInvoiceDates@1210190001(VAR ProjectInstallment@1210190000 : Record 11012018);
    BEGIN
      ProjectInstallment.SETFILTER(ProjectInstallment."Expected Invoice Date", '<>%1', 0D);
    END;

    LOCAL PROCEDURE UpdateExpectedInvoiceDate@1210190010(ProjectInstallment@1210190000 : Record 11012018;DateFormula@1210190001 : DateFormula);
    BEGIN
      ProjectInstallment."Expected Invoice Date" := CALCDATE(DateFormula, ProjectInstallment."Expected Invoice Date");
      ProjectInstallment.MODIFY(TRUE);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

