OBJECT Codeunit 5527 Graph Mgt - Purchase Invoice
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    Permissions=TableData 122=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [External]
    PROCEDURE ProcessComplexTypes@1(VAR PurchInvEntityAggregate@1000 : Record 5477;BuyFromAddressJSON@1001 : Text);
    BEGIN
      ParseBuyFromVendorAddressFromJSON(BuyFromAddressJSON,PurchInvEntityAggregate);
    END;

    [External]
    PROCEDURE ParseBuyFromVendorAddressFromJSON@7(BuyFromAddressJSON@1000 : Text;VAR PurchInvEntityAggregate@1002 : Record 5477);
    VAR
      GraphMgtComplexTypes@1003 : Codeunit 5468;
      RecRef@1001 : RecordRef;
    BEGIN
      IF BuyFromAddressJSON <> '' THEN
        WITH PurchInvEntityAggregate DO BEGIN
          RecRef.GETTABLE(PurchInvEntityAggregate);
          GraphMgtComplexTypes.ApplyPostalAddressFromJSON(BuyFromAddressJSON,RecRef,
            FIELDNO("Buy-from Address"),FIELDNO("Buy-from Address 2"),FIELDNO("Buy-from City"),FIELDNO("Buy-from County"),
            FIELDNO("Buy-from Country/Region Code"),FIELDNO("Buy-from Post Code"));
          RecRef.SETTABLE(PurchInvEntityAggregate);
        END;
    END;

    [External]
    PROCEDURE ParsePayToVendorAddressFromJSON@10(PayToAddressJSON@1000 : Text;VAR PurchInvEntityAggregate@1002 : Record 5477);
    VAR
      GraphMgtComplexTypes@1003 : Codeunit 5468;
      RecRef@1001 : RecordRef;
    BEGIN
      IF PayToAddressJSON <> '' THEN
        WITH PurchInvEntityAggregate DO BEGIN
          RecRef.GETTABLE(PurchInvEntityAggregate);
          GraphMgtComplexTypes.ApplyPostalAddressFromJSON(PayToAddressJSON,RecRef,
            FIELDNO("Pay-to Address"),FIELDNO("Pay-to Address 2"),FIELDNO("Pay-to City"),FIELDNO("Pay-to County"),
            FIELDNO("Pay-to Country/Region Code"),FIELDNO("Pay-to Post Code"));
          RecRef.SETTABLE(PurchInvEntityAggregate);
        END;
    END;

    [External]
    PROCEDURE ParseShipToVendorAddressFromJSON@6(ShipToAddressJSON@1000 : Text;VAR PurchInvEntityAggregate@1002 : Record 5477);
    VAR
      GraphMgtComplexTypes@1003 : Codeunit 5468;
      RecRef@1001 : RecordRef;
    BEGIN
      IF ShipToAddressJSON <> '' THEN
        WITH PurchInvEntityAggregate DO BEGIN
          RecRef.GETTABLE(PurchInvEntityAggregate);
          GraphMgtComplexTypes.ApplyPostalAddressFromJSON(ShipToAddressJSON,RecRef,
            FIELDNO("Ship-to Address"),FIELDNO("Ship-to Address 2"),FIELDNO("Ship-to City"),FIELDNO("Ship-to County"),
            FIELDNO("Ship-to Country/Region Code"),FIELDNO("Ship-to Post Code"));
          RecRef.SETTABLE(PurchInvEntityAggregate);
        END;
    END;

    [External]
    PROCEDURE BuyFromVendorAddressToJSON@5(PurchInvEntityAggregate@1000 : Record 5477) JSON : Text;
    VAR
      GraphMgtComplexTypes@1001 : Codeunit 5468;
    BEGIN
      WITH PurchInvEntityAggregate DO
        GraphMgtComplexTypes.GetPostalAddressJSON("Buy-from Address","Buy-from Address 2",
          "Buy-from City","Buy-from County","Buy-from Country/Region Code","Buy-from Post Code",JSON);
    END;

    [External]
    PROCEDURE PayToVendorAddressToJSON@4(PurchInvEntityAggregate@1000 : Record 5477) JSON : Text;
    VAR
      GraphMgtComplexTypes@1001 : Codeunit 5468;
    BEGIN
      WITH PurchInvEntityAggregate DO
        GraphMgtComplexTypes.GetPostalAddressJSON("Pay-to Address","Pay-to Address 2",
          "Pay-to City","Pay-to County","Pay-to Country/Region Code","Pay-to Post Code",JSON);
    END;

    [External]
    PROCEDURE ShipToVendorAddressToJSON@3(PurchInvEntityAggregate@1000 : Record 5477) JSON : Text;
    VAR
      GraphMgtComplexTypes@1001 : Codeunit 5468;
    BEGIN
      WITH PurchInvEntityAggregate DO
        GraphMgtComplexTypes.GetPostalAddressJSON("Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to County","Ship-to Country/Region Code","Ship-to Post Code",JSON);
    END;

    [External]
    PROCEDURE UpdateIntegrationRecordIds@34(OnlyRecordsWithoutID@1007 : Boolean);
    VAR
      DummyPurchInvEntityAggregate@1001 : Record 5477;
      DummyVendor@1005 : Record 23;
      GraphMgtGeneralTools@1008 : Codeunit 5465;
      PurchaseInvoiceHeaderRecordRef@1002 : RecordRef;
      PurchaseHeaderRecordRef@1000 : RecordRef;
      VendorRecordRef@1004 : RecordRef;
    BEGIN
      VendorRecordRef.OPEN(DATABASE::Vendor);
      GraphMgtGeneralTools.UpdateIntegrationRecords(
        VendorRecordRef,DummyVendor.FIELDNO(Id),TRUE);

      PurchaseHeaderRecordRef.OPEN(DATABASE::"Purchase Header");
      GraphMgtGeneralTools.UpdateIntegrationRecords(
        PurchaseHeaderRecordRef,DummyPurchInvEntityAggregate.FIELDNO(Id),OnlyRecordsWithoutID);

      PurchaseInvoiceHeaderRecordRef.OPEN(DATABASE::"Purch. Inv. Header");
      GraphMgtGeneralTools.UpdateIntegrationRecords(
        PurchaseInvoiceHeaderRecordRef,DummyPurchInvEntityAggregate.FIELDNO(Id),OnlyRecordsWithoutID);
    END;

    [EventSubscriber(Codeunit,5465,ApiSetup)]
    PROCEDURE HandleApiSetup@2();
    VAR
      PurchInvAggregator@1000 : Codeunit 5529;
    BEGIN
      UpdateIntegrationRecordIds(FALSE);
      PurchInvAggregator.UpdateAggregateTableRecords;
    END;

    BEGIN
    END.
  }
}

