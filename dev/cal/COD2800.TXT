OBJECT Codeunit 2800 Native - Setup APIs
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            IF NOT GUIALLOWED THEN
              EXIT;

            // SetupApis;
            InsertNativeInvoicingWebServices(FALSE);
            COMMIT;
          END;

  }
  CODE
  {
    VAR
      ApiPrefixTxt@1000 : TextConst '@@@={Locked};ENU=nativeInvoicing;NOR=nativeInvoicing';

    [EventSubscriber(Codeunit,5465,ApiSetup)]
    PROCEDURE SetupApis@1();
    VAR
      NativeEDMTypes@1000 : Codeunit 2801;
    BEGIN
      NativeEDMTypes.UpdateEDMTypes;
    END;

    [External]
    PROCEDURE InsertNativeInvoicingWebServices@2(AllTenants@1000 : Boolean);
    BEGIN
      InsertNativeInvoicingODataWebService(PAGE::"Native - KPIs Entity",ApiPrefixTxt + 'KPIs',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Customer Entity",ApiPrefixTxt + 'Customers',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Item Entity",ApiPrefixTxt + 'Items',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Sales Inv. Entity",ApiPrefixTxt + 'SalesInvoices',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Sales Inv. Overview",ApiPrefixTxt + 'SalesInvoiceOverview',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Sales Quotes",ApiPrefixTxt + 'SalesQuotes',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Tax Area",ApiPrefixTxt + 'TaxAreas',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Tax Group Entity",ApiPrefixTxt + 'TaxGroups',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Tax Rates",ApiPrefixTxt + 'TaxRates',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Units of Measure",ApiPrefixTxt + 'UnitsOfMeasure',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Payment Terms",ApiPrefixTxt + 'PaymentTerms',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Payment Methods",ApiPrefixTxt + 'PaymentMethods',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Attachments",ApiPrefixTxt + 'Attachments',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - General Setting",ApiPrefixTxt + 'GeneralSettings',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - SMTP Mail Setup",ApiPrefixTxt + 'SMTPMailSetup',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Email Setting",ApiPrefixTxt + 'EmailSetting',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native Country/Regions Entity",ApiPrefixTxt + 'CountryRegion',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - PDFs",ApiPrefixTxt + 'PDFs',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Email Preview",ApiPrefixTxt + 'EmailPreview',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Export Invoices",ApiPrefixTxt + 'ExportInvoices',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Test Mail",ApiPrefixTxt + 'TestMail',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Sales Tax Setup",ApiPrefixTxt + 'SalesTaxSetup',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - VAT Setup",ApiPrefixTxt + 'VATSetup',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Languages",ApiPrefixTxt + 'Languages',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Sync Services Setting",ApiPrefixTxt + 'SyncServicesSetting',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - QBO Sync Auth",ApiPrefixTxt + 'QBOSyncAuth',AllTenants);
      InsertNativeInvoicingODataWebService(PAGE::"Native - Contact",ApiPrefixTxt + 'Contacts',AllTenants);
    END;

    LOCAL PROCEDURE InsertNativeInvoicingODataWebService@12(PageNumber@1002 : Integer;ServiceName@1001 : Text;AllTenants@1000 : Boolean);
    VAR
      DummyWebService@1004 : Record 2000000076;
      DummyTenantWebService@1005 : Record 2000000168;
      WebServiceManagement@1003 : Codeunit 9750;
    BEGIN
      IF AllTenants THEN
        WebServiceManagement.CreateWebService(DummyWebService."Object Type"::Page,PageNumber,ServiceName,TRUE)
      ELSE
        WebServiceManagement.CreateTenantWebService(DummyTenantWebService."Object Type"::Page,PageNumber,ServiceName,TRUE);
    END;

    [External]
    PROCEDURE CreatePaymentRegistrationSetup@16();
    VAR
      PaymentRegistrationSetup@1000 : Record 980;
    BEGIN
      WITH PaymentRegistrationSetup DO BEGIN
        IF GET(USERID) THEN
          EXIT;
        IF GET THEN BEGIN
          "User ID" := USERID;
          INSERT(TRUE);
          COMMIT;
          EXIT;
        END;
        CODEUNIT.RUN(CODEUNIT::"O365 Sales Initial Setup");
        COMMIT;
      END;
    END;

    [External]
    PROCEDURE GetAPIPrefix@3() : Text;
    BEGIN
      EXIT(ApiPrefixTxt);
    END;

    BEGIN
    END.
  }
}

