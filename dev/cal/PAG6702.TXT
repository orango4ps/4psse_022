OBJECT Page 6702 Booking Sync. Setup
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04;
  }
  PROPERTIES
  {
    Permissions=TableData 1261=rimd;
    CaptionML=[ENU=Booking Sync. Setup;
               NOR=Oppsett for synkronisering av Bookings;
               SVE=Inst„llningar av Bookings-synkning];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table6702;
    DataCaptionExpr="Booking Mailbox Name";
    PageType=Card;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Navigate,Filter;
                                NOR=Ny,Prosess,Rapport,Naviger,Filter;
                                SVE=Ny,Process,Rapport,Navigera,Filtrera];
    OnInit=VAR
             MarketingSetup@1000 : Record 5079;
           BEGIN
             IF MarketingSetup.GET THEN
               GraphSyncEnabled := MarketingSetup."Sync with Microsoft Graph";
           END;

    OnOpenPage=VAR
                 PermissionManager@1000 : Codeunit 9002;
               BEGIN
                 CheckExistingSetup;
                 GetExchangeAccount;
                 IsSyncUser := "User ID" = USERID;
                 IsSaaS := PermissionManager.SoftwareAsAService;
               END;

    ActionList=ACTIONS
    {
      { 6       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 18      ;1   ;ActionGroup;
                      CaptionML=[ENU=Process;
                                 NOR=Behandle;
                                 SVE=Bearbeta];
                      Image=Action }
      { 22      ;2   ;Action    ;
                      Name=Validate Exchange Connection;
                      CaptionML=[ENU=Validate Exchange Connection;
                                 NOR=Valider Exchange-tilkobling;
                                 SVE=Validera Exchange-anslutning];
                      ToolTipML=[ENU=Test that the provided exchange server connection works.;
                                 NOR=Tester at den angitte tilkoblingen til Exchange-serveren fungerer.;
                                 SVE=Testa att anslutningen till Exchange Server fungerar.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=ValidateEmailLoggingSetup;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF O365SyncManagement.IsO365Setup(FALSE) THEN
                                   O365SyncManagement.ValidateExchangeConnection(ExchangeAccountUserName,ExchangeSync);
                               END;
                                }
      { 28      ;2   ;Action    ;
                      Name=SyncWithBookings;
                      CaptionML=[ENU=Sync with Bookings;
                                 NOR=Synkroniser med Bookings;
                                 SVE=Synka med Bookings];
                      ToolTipML=[ENU=Synchronize changes made in Bookings since the last sync date and last modified date.;
                                 NOR=Synkroniser endringer som er gjort i Bookings siden forrige synkroniseringsdato og endringsdato.;
                                 SVE=Synkronisera „ndringar som gjorts i Bookings sedan det senaste synkroniseringsdatumet och senaste „ndringsdatumet.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Refresh;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 O365SyncManagement@1002 : Codeunit 6700;
                               BEGIN
                                 CLEAR(O365SyncManagement);
                                 IF O365SyncManagement.IsO365Setup(FALSE) THEN BEGIN
                                   IF "Sync Customers" THEN
                                     O365SyncManagement.SyncBookingCustomers(Rec);
                                   IF "Sync Services" THEN
                                     O365SyncManagement.SyncBookingServices(Rec);
                                 END;
                               END;
                                }
      { 23      ;2   ;Action    ;
                      Name=SetSyncUser;
                      CaptionML=[ENU=Set Sync. User;
                                 NOR=Angi synkroniseringsbruker;
                                 SVE=Ange synkningsanv„ndare];
                      ToolTipML=[ENU=Set the synchronization user to be you.;
                                 NOR=Angi at synkroniseringsbrukeren er deg selv.;
                                 SVE=Ange att du „r synkroniseringsanv„ndaren.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=NOT IsSyncUser;
                      Image=User;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF CONFIRM(SetSyncUserQst) THEN BEGIN
                                   VALIDATE("User ID",USERID);
                                   GetExchangeAccount;
                                 END;
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=Invoice Appointments;
                      CaptionML=[ENU=Invoice Appointments;
                                 NOR=Fakturaavtaler;
                                 SVE=Fakturera m”ten];
                      ToolTipML=[ENU=View Booking appointments and create invoices for your customers.;
                                 NOR=Vis Bookings-avtaler og opprett fakturaer for dine kunder.;
                                 SVE=Visa Bookings-m”ten och skapa fakturor till dina kunder.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsSaaS;
                      PromotedIsBig=Yes;
                      Image=NewInvoice;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 BookingManager@1003 : Codeunit 6721;
                               BEGIN
                                 BookingManager.InvoiceBookingItems;
                               END;
                                }
      { 16      ;1   ;ActionGroup;
                      CaptionML=[ENU=Filter;
                                 NOR=Filter;
                                 SVE=Filter] }
      { 17      ;2   ;Action    ;
                      Name=SetCustomerSyncFilter;
                      CaptionML=[ENU=Set Customer Sync Filter;
                                 NOR=Angi filter for synkronisering av kunde;
                                 SVE=Ange synkningsfilter f”r kund];
                      ToolTipML=[ENU=Set a filter to use when syncing customers.;
                                 NOR=Angi et filter for bruk ved synkronisering av kunder.;
                                 SVE=Ange ett filter som ska anv„ndas n„r kunder synkroniseras.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=ContactFilter;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 BookingCustomerSync@1000 : Codeunit 6704;
                               BEGIN
                                 CALCFIELDS("Customer Filter");
                                 BookingCustomerSync.GetRequestParameters(Rec);
                               END;
                                }
      { 20      ;2   ;Action    ;
                      Name=SetServiceSyncFilter;
                      CaptionML=[ENU=Set Service Sync Filter;
                                 NOR=Angi filter for synkronisering av tjeneste;
                                 SVE=Ange synkningsfilter f”r tj„nst];
                      ToolTipML=[ENU=Set a filter to use when syncing service items.;
                                 NOR=Angi et filter for bruk ved synkronisering av servicevarer.;
                                 SVE=Ange ett filter som ska anv„ndas n„r serviceartiklar synkroniseras.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Filter;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 BookingServiceSync@1004 : Codeunit 6705;
                               BEGIN
                                 CALCFIELDS("Item Filter");
                                 BookingServiceSync.GetRequestParameters(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=General;
                CaptionML=[ENU=General;
                           NOR=Generelt;
                           SVE=Allm„nt];
                GroupType=Group }

    { 3   ;2   ;Field     ;
                Name=Bookings Company;
                CaptionML=[ENU=Bookings Company;
                           NOR=Bookingsfirma;
                           SVE=Bookings-f”retag];
                ToolTipML=[ENU=Specifies the Bookings company with which to synchronize customers and services.;
                           NOR=Angir Bookings-firmaet som kunder og tjenester skal synkroniseres med.;
                           SVE=Anger Bookings-f”retaget som kunder och tj„nster ska synkroniseras med.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Booking Mailbox Name";
                OnValidate=VAR
                             BookingMailbox@1001 : Record 6704;
                             BookingMailboxList@1000 : Page 6704;
                           BEGIN
                             IF FORMAT("Last Customer Sync") + FORMAT("Last Service Sync") <> '' THEN
                               IF NOT CONFIRM(ChangeCompanyQst) THEN BEGIN
                                 "Booking Mailbox Name" := xRec."Booking Mailbox Name";
                                 EXIT;
                               END;

                             O365SyncManagement.GetBookingMailboxes(Rec,TempBookingMailbox,"Booking Mailbox Name");

                             IF TempBookingMailbox.COUNT = 0 THEN
                               ERROR(NoMailboxErr);

                             IF TempBookingMailbox.COUNT = 1 THEN BEGIN
                               "Booking Mailbox Address" := TempBookingMailbox.SmtpAddress;
                               "Booking Mailbox Name" := TempBookingMailbox."Display Name";
                             END ELSE BEGIN
                               BookingMailboxList.SetMailboxes(TempBookingMailbox);
                               BookingMailboxList.LOOKUPMODE(TRUE);
                               IF BookingMailboxList.RUNMODAL IN [ACTION::LookupOK,ACTION::OK] THEN BEGIN
                                 BookingMailboxList.GETRECORD(BookingMailbox);
                                 "Booking Mailbox Address" := BookingMailbox.SmtpAddress;
                                 "Booking Mailbox Name" := BookingMailbox."Display Name";
                               END ELSE
                                 "Booking Mailbox Name" := xRec."Booking Mailbox Name";
                             END;

                             IF "Booking Mailbox Name" <> xRec."Booking Mailbox Name" THEN BEGIN
                               CLEAR("Last Customer Sync");
                               CLEAR("Last Service Sync");
                               MODIFY;
                               CurrPage.UPDATE;
                             END;
                           END;
                            }

    { 5   ;2   ;Field     ;
                Name=SyncUser;
                CaptionML=[ENU=Synchronization User;
                           NOR=Synkroniseringsbruker;
                           SVE=Synkroniseringsanv„ndare];
                ToolTipML=[ENU=Specifies the user on behalf of which to run the synchronize operation.;
                           NOR=Angir brukeren som synkroniseringsoperasjonen skal kj›res p† vegne av.;
                           SVE=Anger anv„ndaren som synkroniseringen ska utf”ras p† uppdrag f”r.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="User ID";
                Enabled=false;
                Editable=false }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Enable Background Synchronization;
                           NOR=Aktiver bakgrunnssynkronisering;
                           SVE=Aktivera synkning i bakgrunden];
                ToolTipML=[ENU=Specifies whether to allow synchronization to occur periodically in the background.;
                           NOR=Angir om det skal tillates at synkronisering p†g†r regelmessig i bakgrunnen.;
                           SVE=Anger om synkronisering ska till†tas ske regelbundet i bakgrunden.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Enabled }

    { 19  ;1   ;Group     ;
                Name=Synchronize;
                CaptionML=[ENU=Synchronize;
                           NOR=Synkroniser;
                           SVE=Synkronisera];
                GroupType=Group }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether to synchronize Bookings customers.;
                           NOR=Angir om Bookings-kunder skal synkroniseres.;
                           SVE=Anger om Bookings-kunder ska synkroniseras.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sync Customers";
                Visible=NOT GraphSyncEnabled }

    { 13  ;2   ;Field     ;
                CaptionML=[ENU=Default Customer Template;
                           NOR=Mal for standardkunde;
                           SVE=Standardmall f”r kund];
                ToolTipML=[ENU=Specifies the customer template to use when creating new Customers from the Bookings company.;
                           NOR=Angir kundemalen som skal brukes ved oppretting av nye kunder fra Bookings-firmaet.;
                           SVE=Anger kundmallen som ska anv„ndas n„r nya kunder skapas fr†n Bookings-f”retaget.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Customer Template Code";
                Visible=NOT GraphSyncEnabled }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether to synchronize services.;
                           NOR=Angir om tjenester skal synkroniseres.;
                           SVE=Anger om tj„nster ska synkroniseras.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sync Services" }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Default Item Template;
                           NOR=Mal for standardvare;
                           SVE=Standardmall f”r artikel];
                ToolTipML=[ENU=Specifies the template to use when creating new service items from the Bookings company.;
                           NOR=Angir malen som skal brukes ved oppretting av nye servicevarer fra Bookings-firmaet.;
                           SVE=Anger mallen som ska anv„ndas n„r nya serviceartiklar skapas fr†n Bookings-f”retaget.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item Template Code" }

  }
  CODE
  {
    VAR
      ExchangeSync@1000 : Record 6700;
      TempBookingMailbox@1002 : TEMPORARY Record 6704;
      O365SyncManagement@1004 : Codeunit 6700;
      ExchangeAccountUserName@1001 : Text[250];
      ChangeCompanyQst@1003 : TextConst 'ENU=The synchronization has been run against the current company. The process will no longer synchronize customer and service records with the current company, and synchronize against the new selected company. Do you want to continue?;NOR=Synkroniseringen har blitt kj›rt mot det gjeldende firmaet. Prosessen synkroniserer ikke lenger kunde- og tjenesteposter med det gjeldende firmaet, og vil heller ikke synkronisere mot det nyvalgte firmaet. Vil du fortsette?;SVE=Synkroniseringen har k”rts mot det aktuella f”retaget. Processen synkroniserar inte l„ngre kund- och tj„nstposter med det aktuella f”retaget, utan synkroniserar mot det nyvalda f”retaget. Vill du forts„tta?';
      SetSyncUserQst@1008 : TextConst 'ENU=Setting the synchronization user will assign your Exchange email and password as the credentials that are used to synchronize customers and service items to Bookings for this company. Any user already assigned as the synchronization user will be replaced with your User ID. Do you want to continue?;NOR=Angivelse av synkroniseringsbrukeren vil tilordne e-postadressen og passordet for Exchange som p†loggingsinformasjonen om skal brukes til † synkronisere kunder og tjenestevarer til Bookings for dette firmaet. Brukere som allerede er tilordnet som synkroniseringsbrukere, blir erstattet med din bruker-ID. Vil du fortsette?;SVE=Om du anger synkroniseringsanv„ndaren tilldelas din e-postadress och ditt l”senord f”r Exchange som de autentiseringsuppgifter som anv„nds f”r att synkronisera kund- och serviceartiklar till Bookings f”r det h„r f”retaget. De anv„ndare som redan har tilldelats som synkroniseringsanv„ndare ers„tts med ditt anv„ndar-ID. Vill du forts„tta?';
      ExchangeSyncErr@1007 : TextConst 'ENU=Exchange sync. must be setup before using Bookings Sync.;NOR=Synkronisering av Exchange m† v‘re konfigurert f›r du bruker synkronisering av Bookings.;SVE=Du m†ste konfigurera Exchange-synkning innan du anv„nder Bookings-synkning.';
      NoMailboxErr@1010 : TextConst 'ENU=No matching mailboxes found.;NOR=Fant ingen samsvarende postbokser.;SVE=Inga matchande postl†dor p†tr„ffades.';
      BookingsSetupErr@1011 : TextConst 'ENU=Cannot open the Bookings Sync. Setup page. Make sure that your company is set up in the Bookings application in Office 365.;NOR=Kan ikke †pne siden Oppsett for synkronisering av Bookings. Sjekk at selskapet ditt er konfigurert i Bookings-appen i Office 365.;SVE=Det g†r inte att ”ppna sidan f”r inst„llningar av Bookings-synkning. Kontrollera att ditt f”retag har st„llts in i Bookings-appen i Office 365.';
      IsSyncUser@1005 : Boolean;
      GraphSyncEnabled@1006 : Boolean;
      IsSaaS@1009 : Boolean;

    LOCAL PROCEDURE CheckExistingSetup@6();
    BEGIN
      IF NOT ExchangeSync.GET(USERID) OR NOT O365SyncManagement.IsO365Setup(FALSE) THEN
        ERROR(ExchangeSyncErr);

      IF NOT GET THEN BEGIN
        INIT;
        "User ID" := USERID;
        O365SyncManagement.GetBookingMailboxes(Rec,TempBookingMailbox,'');

        IF TempBookingMailbox.COUNT = 0 THEN
          ERROR(BookingsSetupErr);

        IF TempBookingMailbox.COUNT = 1 THEN BEGIN
          "Booking Mailbox Address" := TempBookingMailbox.SmtpAddress;
          "Booking Mailbox Name" := TempBookingMailbox."Display Name";
        END;
        INSERT(TRUE);
      END;
    END;

    LOCAL PROCEDURE GetExchangeAccount@1();
    VAR
      User@1000 : Record 2000000120;
    BEGIN
      User.SETRANGE("User Name",USERID);
      IF User.FINDFIRST THEN
        ExchangeAccountUserName := User."Authentication Email";
    END;

    BEGIN
    END.
  }
}

