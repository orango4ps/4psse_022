OBJECT Table 6086340 Settlement Overview Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.3.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=AusgleichsÅbersichtszeile;
               ENU=Settlement Overview Line;
               NLD=Afrekeningoverzichtsregel];
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;CaptionML=[DEU=Tabellen-ID;
                                                              ENU=Table ID;
                                                              NLD=Tabel-id;
                                                              SVE=Tabell-ID] }
    { 2   ;   ;Document Type       ;Option        ;CaptionML=[DEU=Belegart;
                                                              ENU=Document Type;
                                                              NLD=Documenttype;
                                                              SVE=Dokumenttyp];
                                                   OptionCaptionML=[DEU=Budget,Verrechnung;
                                                                    ENU=Budget,Settlement;
                                                                    NLD=Budget,Afboeking];
                                                   OptionString=Budget,Settlement }
    { 3   ;   ;Document No.        ;Code20        ;TableRelation="Expense Header".No.;
                                                   CaptionML=[DEU=Belegnr.;
                                                              ENU=Document No.;
                                                              NLD=Documentnr.;
                                                              SVE=Dokumentnr] }
    { 4   ;   ;Doc. Ref. No.       ;Integer       ;TableRelation=IF (Table ID=CONST(6086320)) Expense
                                                                 ELSE IF (Table ID=CONST(6086338)) Mileage;
                                                   CaptionML=[DEU=Bel. Referenznr.;
                                                              ENU=Doc. Ref. No.;
                                                              NLD=Doc. Ref. nr.] }
    { 5   ;   ;Continia User ID    ;Code50        ;TableRelation="Continia User Setup";
                                                   CaptionML=[DEU=Continia-Benutzer-ID;
                                                              ENU=Continia User ID;
                                                              NLD=Continia gebruikers-id;
                                                              SVE=AnstÑllningsnr] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[DEU=Beschreibung;
                                                              ENU=Description;
                                                              NLD=Omschrijving;
                                                              SVE=Beskrivning] }
    { 8   ;   ;Description 2       ;Text50        ;CaptionML=[DEU=Beschreibung 2;
                                                              ENU=Description 2;
                                                              NLD=Omschrijving 2;
                                                              SVE=Beskrivning 2] }
    { 9   ;   ;Document Date       ;Date          ;CaptionML=[DEU=Belegdatum;
                                                              ENU=Document Date;
                                                              NLD=Documentdatum;
                                                              SVE=Dokumentdatum];
                                                   NotBlank=Yes }
    { 10  ;   ;Amount (LCY)        ;Decimal       ;CaptionML=[DEU=Betrag (MW);
                                                              ENU=Amount (LCY);
                                                              NLD=Bedrag (LV);
                                                              SVE=Belopp (BVA)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 11  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[DEU=Globaler Dimensionscode 1;
                                                              ENU=Global Dimension 1 Code;
                                                              NLD=Globale dimensiecode 1;
                                                              SVE=Global dimension 1 kod];
                                                   CaptionClass='1,1,1' }
    { 12  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[DEU=Globaler Dimensionscode 2;
                                                              ENU=Global Dimension 2 Code;
                                                              NLD=Globale dimensiecode 2;
                                                              SVE=Global dimension 2 kod];
                                                   CaptionClass='1,1,2' }
    { 14  ;   ;Code                ;Code20        ;TableRelation=IF (Table ID=CONST(6086320)) "Expense Type"
                                                                 ELSE IF (Table ID=CONST(6086338)) "Vehicle DC";
                                                   CaptionML=[DEU=Code;
                                                              ENU=Code;
                                                              NLD=Code;
                                                              SVE=Kod] }
    { 15  ;   ;Details             ;Text250       ;CaptionML=[DEU=Details;
                                                              ENU=Details;
                                                              NLD=Details;
                                                              SVE=Detaljer] }
    { 16  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=[DEU=Projektnr.;
                                                              ENU=Job No.;
                                                              NLD=Projectnr.;
                                                              SVE=Projektnr] }
    { 17  ;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   CaptionML=[DEU=Projektaufgabennr.;
                                                              ENU=Job Task No.;
                                                              NLD=Projecttaaknr.;
                                                              SVE=Projektaktivitetsnr] }
    { 210 ;   ;No Refund           ;Boolean       ;CaptionML=[DEU=Keine Erstattung;
                                                              ENU=No Refund;
                                                              NLD=Geen restitutie] }
  }
  KEYS
  {
    {    ;Table ID,Document Type,Document No.,Doc. Ref. No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ConfirmDetachExpenseMultiple@1160040002 : TextConst 'DEU=Mîchten Sie %1 Ausgaben vom Ausgleich trennen?;ENU=Do you want to detach %1 expenses from this Settlement?;NLD=Wilt u %1 uitgaven loskoppelen van de afrekening?';
      ConfirmDetachExpenseSingle@1160040006 : TextConst 'DEU=Mîchten Sie die Ausgabe von diesem Ausgleich trennen?;ENU=Do you want to detach the expense from this Settlement?;NLD=Wilt u de uitgave loskoppelen van deze afrekening?';
      ConfirmDetachMileageMultiple@1160040005 : TextConst 'DEU=Mîchten Sie die Kilometerleistung %1 vom Ausgleich trennen?;ENU=Do you want to detach %1 mileage from this Settlement?;NLD=Wilt u de kilometrage %1 loskoppelen van de afrekening?';
      ConfirmDetachMileageSingle@1160040003 : TextConst 'DEU=Die Kilometerleistung kann nicht geÑndert werden, da das Kilometerleistungseingangsfach eine nicht verarbeitete Zeile enthÑlt.\\Die Zeile im Kilometerleistungseingangsfach muss verarbeitet werden. bevor die Kilometerleistung aktualisiert werden kann.;ENU=Do you want to detach the mileage from this Settlement?;NLD=Wilt u de kilometrage loskoppelen van de afrekening?';
      NoExpInSelection@1160040004 : TextConst 'DEU=WÑhlen Sie eine oder mehrere Ausgaben aus, um die VerknÅpfung zu trennen.;ENU=Please select one or more expenses to detach.;NLD=Selecteer ÇÇn of meerdere uitgaven om los te koppelen.';
      NoMilInSelection@1160040001 : TextConst 'DEU=Sie mÅssen einen Standard-%1 angeben.;ENU=Please select one or more mileage to detach.;NLD=Selecteer ÇÇn of meerdere kilometrages om los te koppelen.';

    PROCEDURE LoadSettlements@1160040005(DocumentNo@1160040003 : Code[20];VAR SttlOverviewTmp@1160040004 : TEMPORARY Record 6086340);
    VAR
      Expense@1160040000 : Record 6086320;
      Mileage@1160040001 : Record 6086338;
      PosRecTmp@1160040002 : TEMPORARY Record 6086340;
    BEGIN
      PosRecTmp := Rec;

      SttlOverviewTmp.RESET;
      SttlOverviewTmp.DELETEALL;

      IF DocumentNo = '' THEN
        EXIT;

      Expense.SETCURRENTKEY("Settlement No.");
      Expense.SETRANGE("Settlement No.",DocumentNo);
      IF Expense.FINDSET THEN
        REPEAT
          SttlOverviewTmp.INIT;
          SttlOverviewTmp."Table ID" := DATABASE::Expense;
          SttlOverviewTmp."Document Type" := SttlOverviewTmp."Document Type"::Settlement;
          SttlOverviewTmp."Document No." := DocumentNo;
          SttlOverviewTmp."Doc. Ref. No." := Expense."Entry No.";
          SttlOverviewTmp."Continia User ID" := Expense."Continia User ID";
          SttlOverviewTmp.Code := Expense."Expense Type";
          SttlOverviewTmp.Description := Expense.Description;
          SttlOverviewTmp."Description 2" := Expense."Description 2";
          SttlOverviewTmp."Document Date" := Expense."Document Date";
          SttlOverviewTmp."Amount (LCY)" := Expense."Amount (LCY)";
          SttlOverviewTmp."Global Dimension 1 Code" := Expense."Global Dimension 1 Code";
          SttlOverviewTmp."Global Dimension 2 Code" := Expense."Global Dimension 2 Code";
          SttlOverviewTmp."Job No." := Expense."Job No.";
          SttlOverviewTmp."Job Task No." := Expense."Job Task No.";
          SttlOverviewTmp.Details := Expense.GetOverviewDetails;
          SttlOverviewTmp."No Refund" := Expense."No Refund";
          SttlOverviewTmp.INSERT;
        UNTIL Expense.NEXT = 0;

      Mileage.SETCURRENTKEY("Settlement No.");
      Mileage.SETRANGE("Settlement No.",DocumentNo);
      IF Mileage.FINDSET THEN
        REPEAT
          SttlOverviewTmp.INIT;
          SttlOverviewTmp."Table ID" := DATABASE::Mileage;
          SttlOverviewTmp."Document Type" := SttlOverviewTmp."Document Type"::Settlement;
          SttlOverviewTmp."Document No." := DocumentNo;
          SttlOverviewTmp."Doc. Ref. No." := Mileage."Entry No.";
          SttlOverviewTmp."Continia User ID" := Mileage."Continia User ID";
          SttlOverviewTmp.Code := Mileage."Vehicle Code";
          SttlOverviewTmp.Description := Mileage.Description;
          SttlOverviewTmp."Document Date" := Mileage."Registration Date";
          SttlOverviewTmp."Amount (LCY)" := Mileage."Amount (LCY)";
          SttlOverviewTmp."Global Dimension 1 Code" := Mileage."Global Dimension 1 Code";
          SttlOverviewTmp."Global Dimension 2 Code" := Mileage."Global Dimension 2 Code";
          SttlOverviewTmp."Job No." := Mileage."Job No.";
          SttlOverviewTmp."Job Task No." := Mileage."Job Task No.";
          SttlOverviewTmp.Details := Mileage.GetOverviewDetails;
          SttlOverviewTmp."No Refund" := Mileage."No Refund";
          SttlOverviewTmp.INSERT;
        UNTIL Mileage.NEXT = 0;

      IF NOT SttlOverviewTmp.GET(PosRecTmp."Table ID",PosRecTmp."Document Type",PosRecTmp."Document No.",PosRecTmp."Doc. Ref. No.") THEN
        IF SttlOverviewTmp.FINDFIRST THEN;
    END;

    PROCEDURE ShowAttachments@1160040000();
    VAR
      EMAttachment@1160040000 : Record 6086359;
    BEGIN
      EMAttachment.SETRANGE("Table ID","Table ID");
      EMAttachment.SETRANGE("Document Type",0);
      EMAttachment.SETRANGE("Document No.",'');
      EMAttachment.SETRANGE("Doc. Ref. No.","Doc. Ref. No.");
      PAGE.RUNMODAL(0,EMAttachment);
    END;

    PROCEDURE ShowDimensions@1160040001();
    VAR
      Expense@1160040000 : Record 6086320;
      Mileage@1160040001 : Record 6086338;
    BEGIN
      CASE "Table ID" OF
        DATABASE::Expense:
          BEGIN
            Expense.GET("Doc. Ref. No.");
            Expense.LookupDimensions(FALSE);
          END;
        DATABASE::Mileage:
          BEGIN
            Mileage.GET("Doc. Ref. No.");
            Mileage.LookupDimensions(FALSE);
          END;
      END;
    END;

    PROCEDURE ShowExtraFields@1160040002();
    VAR
      Expense@1160040001 : Record 6086320;
      Mileage@1160040000 : Record 6086338;
    BEGIN
      CASE "Table ID" OF
        DATABASE::Expense:
          BEGIN
            Expense.GET("Doc. Ref. No.");
            Expense.LookupExtraFields(FALSE);
          END;
        DATABASE::Mileage:
          BEGIN
            Mileage.GET("Doc. Ref. No.");
            Mileage.LookupExtraFields(FALSE);
          END;
      END;
    END;

    PROCEDURE ShowAttendees@1160040003();
    VAR
      Expense@1160040001 : Record 6086320;
      Mileage@1160040000 : Record 6086338;
    BEGIN
      CASE "Table ID" OF
        DATABASE::Expense:
          BEGIN
            Expense.GET("Doc. Ref. No.");
            Expense.DrillDownAttendees;
          END;
        DATABASE::Mileage:
          BEGIN
            Mileage.GET("Doc. Ref. No.");
            Mileage.DrillDownAttendees;
          END;
      END;
    END;

    PROCEDURE OpenDocumentCard@1160040030();
    VAR
      Expense@1160040000 : Record 6086320;
      Mileage@1160040001 : Record 6086338;
    BEGIN
      CASE "Table ID" OF
        DATABASE::Expense:
          BEGIN
            Expense.GET("Doc. Ref. No.");
            Expense.OpenDocumentCard;
          END;

        DATABASE::Mileage:
          BEGIN
            Mileage.GET("Doc. Ref. No.");
            Mileage.OpenDocumentCard;
          END;
      END;
    END;

    PROCEDURE SplitAndAllocate@1160040034();
    VAR
      Expense@1160040002 : Record 6086320;
      Mileage@1160040000 : Record 6086338;
    BEGIN
      CASE "Table ID" OF
        DATABASE::Expense:
          BEGIN
            Expense.GET("Doc. Ref. No.");
            Expense.SplitAndAllocate;
          END;
        DATABASE::Mileage:
          BEGIN
            Mileage.GET("Doc. Ref. No.");
            Mileage.SplitAndAllocate;
          END;
      END;
    END;

    PROCEDURE HasComments@1160040006() : Boolean;
    VAR
      Expense@1160040000 : Record 6086320;
      Mileage@1160040001 : Record 6086338;
    BEGIN
      CASE "Table ID" OF
        DATABASE::Expense:
          BEGIN
            Expense.GET("Doc. Ref. No.");
            EXIT(Expense.HasExpenseComment OR Expense.HasApprovalComment);
          END;
        DATABASE::Mileage:
          BEGIN
            Mileage.GET("Doc. Ref. No.");
            EXIT(Mileage.HasMileageComment OR Mileage.HasApprovalComment);
          END;
      END;
    END;

    PROCEDURE LookupComments@1160040037();
    VAR
      EMCmtMgt@1160040000 : Codeunit 6086323;
    BEGIN
      EMCmtMgt.LookupComments("Table ID",0,'',"Doc. Ref. No.");
    END;

    PROCEDURE DetachExpFromSettlement@1160040011(VAR SttlOverviewLine@1160040000 : Record 6086340);
    VAR
      Expense@1160040001 : Record 6086320;
      ConfirmText@1160040002 : Text[250];
    BEGIN
      SttlOverviewLine.SETRANGE("Table ID",DATABASE::Expense);
      IF SttlOverviewLine.COUNT = 0 THEN
        ERROR(NoExpInSelection);

      IF SttlOverviewLine.COUNT = 1 THEN
        ConfirmText := ConfirmDetachExpenseSingle
      ELSE
        ConfirmText := ConfirmDetachExpenseMultiple;

      IF CONFIRM(ConfirmText,FALSE,SttlOverviewLine.COUNT) THEN BEGIN
        SttlOverviewLine.FINDFIRST;
        REPEAT
          Expense.GET("Doc. Ref. No.");
          Expense.VALIDATE("Settlement No.",'');
          Expense.MODIFY(TRUE);
        UNTIL SttlOverviewLine.NEXT = 0;
      END;
    END;

    PROCEDURE DetachMilFromSettlement@1160040012(VAR SttlOverviewLine@1160040000 : Record 6086340);
    VAR
      Mileage@1160040001 : Record 6086338;
      ConfirmText@1160040002 : Text[1024];
    BEGIN
      SttlOverviewLine.SETRANGE("Table ID",DATABASE::Mileage);
      IF SttlOverviewLine.COUNT = 0 THEN
        ERROR(NoMilInSelection);

      IF SttlOverviewLine.COUNT = 1 THEN
        ConfirmText := ConfirmDetachMileageSingle
      ELSE
        ConfirmText := STRSUBSTNO(ConfirmDetachMileageMultiple,SttlOverviewLine.COUNT);

      IF CONFIRM(ConfirmText) THEN
        IF SttlOverviewLine.FINDSET THEN
          REPEAT
            Mileage.GET("Doc. Ref. No.");
            Mileage.VALIDATE("Settlement No.",'');
            Mileage.MODIFY(TRUE);
          UNTIL SttlOverviewLine.NEXT = 0;
    END;

    BEGIN
    {
      4PS, Objects renumbered
    }
    END.
  }
}

