OBJECT Table 11071920 Complex/Building Specification
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Complex/Building Specification;
               NOR=Kompleks,Bygningsspesifikasjon;
               SVE=Komplex/byggnadsspecifikation];
    LookupPageID=Page11126260;
    DrillDownPageID=Page11126260;
  }
  FIELDS
  {
    { 10  ;   ;Specification Type  ;Option        ;CaptionML=[ENU=Specification Type;
                                                              NOR=Spesifikasjonstype;
                                                              SVE=Specifikationstyp];
                                                   OptionCaptionML=[ENU=Complex,Building,Standard;
                                                                    NOR=Kompleks,Bygning,Standard;
                                                                    SVE=Komplex,Byggnad,Standard];
                                                   OptionString=Complex,Building,Standard }
    { 20  ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   Editable=No }
    { 30  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr];
                                                   Editable=No }
    { 40  ;   ;Line Type           ;Option        ;OnValidate=BEGIN
                                                                IF (xRec."Line Type" <> "Line Type") AND ("Line Type" = "Line Type"::Group) THEN BEGIN
                                                                  "Field Type" := "Field Type"::" ";
                                                                  "Unit Of Measure" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Line Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=Group,Line;
                                                                    NOR=Gruppe,Rad;
                                                                    SVE=Grupp,Rad];
                                                   OptionString=Group,Line }
    { 50  ;   ;Specification Code  ;Code10        ;TableRelation=IF (Line Type=CONST(Group)) "Complex/Building Spec. Group"
                                                                 ELSE IF (Line Type=CONST(Line)) "Base Complex/Building Spec."."Specification Code" WHERE (Specification Type=FIELD(Specification Type));
                                                   OnValidate=VAR
                                                                ComplexBuildingSpecGroup@1100528601 : Record 11071921;
                                                                BaseComplexBuildingSpec@1100528600 : Record 11071817;
                                                              BEGIN
                                                                IF xRec."Specification Code" <> "Specification Code" THEN BEGIN
                                                                  CASE "Line Type" OF
                                                                    "Line Type"::Group:
                                                                      BEGIN
                                                                        ComplexBuildingSpecGroup.GET("Specification Code");
                                                                        VALIDATE(Description, ComplexBuildingSpecGroup.Description);
                                                                      END;
                                                                    "Line Type"::Line:
                                                                      BEGIN
                                                                        BaseComplexBuildingSpec.GET("Specification Type", "Specification Code");
                                                                        VALIDATE(Description, BaseComplexBuildingSpec.Description);
                                                                        VALIDATE("Field Type", BaseComplexBuildingSpec."Field Type");
                                                                        VALIDATE("Unit Of Measure", BaseComplexBuildingSpec."Unit Of Measure");
                                                                      END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Specification Code;
                                                              NOR=Spesifikasjonskode;
                                                              SVE=Specifikationskod] }
    { 60  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 70  ;   ;Field Type          ;Option        ;CaptionML=[ENU=Field Type;
                                                              NOR=Felttype;
                                                              SVE=Field Type];
                                                   OptionCaptionML=[ENU="Date,Value,Text,Option, ";
                                                                    NOR="Dato,Verdi,Tekst,Alternativ, ";
                                                                    SVE="Datum,V„rde,Text,Alternativ, "];
                                                   OptionString=[Date,Value,Text,Option, ] }
    { 80  ;   ;Unit Of Measure     ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Unit Of Measure;
                                                              NOR=Enhet;
                                                              SVE=Enhet] }
    { 90  ;   ;Value               ;Text80        ;OnValidate=BEGIN
                                                                EvaluateValue;
                                                              END;

                                                   OnLookup=VAR
                                                              BaseComplexBuildSpecOpt@1100528300 : Record 11071818;
                                                            BEGIN
                                                              IF ("Field Type" <> "Field Type"::Option) THEN
                                                                EXIT;

                                                              BaseComplexBuildSpecOpt.SETRANGE("Specification Type", "Specification Type");
                                                              BaseComplexBuildSpecOpt.SETRANGE("Specification Code", "Specification Code");
                                                              IF (PAGE.RUNMODAL(0, BaseComplexBuildSpecOpt) = ACTION::LookupOK) THEN
                                                                Value := BaseComplexBuildSpecOpt.Description;
                                                            END;

                                                   CaptionML=[ENU=Value;
                                                              NOR=Verdi;
                                                              SVE=V„rde] }
    { 100 ;   ;Visible for Field Service;Boolean  ;CaptionML=[ENU=Visible for Field Service;
                                                              NOR=Synlig for feltservice;
                                                              SVE=Visas f”r f„ltservice] }
    { 110 ;   ;Editable by Field Service;Boolean  ;FieldClass=Normal;
                                                   CaptionML=[ENU=Editable by Field Service;
                                                              NOR=Redigerbar gjennom feltservice;
                                                              SVE=Redigerbar genom f„ltservice] }
    { 130 ;   ;Value (Date)        ;Date          ;CaptionML=[ENU=Value (Date);
                                                              NOR=Verdi (Dato);
                                                              SVE=Valuteringsdag];
                                                   Editable=No }
    { 140 ;   ;Value (Value)       ;Decimal       ;CaptionML=[ENU=Value (Value);
                                                              NOR=Verdi (Verdi);
                                                              SVE=V„rde (v„rde)];
                                                   BlankZero=Yes;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Specification Type,Code,Line No.        ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1100528301 : TextConst 'ENU=t;NOR=t;SVE=t';
      Text001@1100528601 : TextConst 'ENU=Option Value %1 not found;NOR=Alternativverdi %1 ikke funnet;SVE=Alternativv„rde %1 hittades inte';

    PROCEDURE GetSpecificationGroupCode@1100528601() : Code[10];
    VAR
      ComplexBuildingSpecification@1100528600 : Record 11071920;
    BEGIN
      ComplexBuildingSpecification.SETRANGE("Specification Type", "Specification Type");
      ComplexBuildingSpecification.SETRANGE(Code, Code);
      ComplexBuildingSpecification.SETFILTER("Line No.", '<%1', "Line No.");
      ComplexBuildingSpecification.SETRANGE("Line Type", "Line Type"::Group);
      IF ComplexBuildingSpecification.FINDLAST THEN
        EXIT(ComplexBuildingSpecification."Specification Code");
    END;

    PROCEDURE EvaluateValue@1100528603();
    VAR
      DummyDate@1100528600 : Date;
      DummyDecimal@1100528601 : Decimal;
    BEGIN
      "Value (Date)" := 0D;
      "Value (Value)" := 0;
      IF Value = '' THEN EXIT;
      CASE "Field Type" OF
        "Field Type"::Date:
          BEGIN
            IF LOWERCASE(Value) = Text000 THEN BEGIN
              Value := FORMAT(TODAY);
              "Value (Date)" := TODAY;
            END ELSE BEGIN
              EVALUATE(DummyDate, Value);
              Value := FORMAT(DummyDate);
              "Value (Date)" := DummyDate;
            END;
          END;
        "Field Type"::Value:
          BEGIN
            EVALUATE(DummyDecimal, Value);
            Value := FORMAT(DummyDecimal);
            "Value (Value)" := DummyDecimal;
          END;
        "Field Type"::Text:;
        "Field Type"::Option:
          Value := CheckOptionValue;
      END;
    END;

    PROCEDURE CheckOptionValue@1100528604() : Text[80];
    VAR
      BaseComplexBuildSpecOpt@1100528300 : Record 11071818;
    BEGIN
      BaseComplexBuildSpecOpt.SETRANGE("Specification Type", "Specification Type");
      BaseComplexBuildSpecOpt.SETRANGE("Specification Code", "Specification Code");
      BaseComplexBuildSpecOpt.SETRANGE(Description, Value);
      IF (BaseComplexBuildSpecOpt.FINDFIRST) THEN
        EXIT(BaseComplexBuildSpecOpt.Description);

      BaseComplexBuildSpecOpt.SETFILTER(Description, '@' + Value + '*');
      IF (BaseComplexBuildSpecOpt.COUNT = 1) THEN BEGIN
        BaseComplexBuildSpecOpt.FINDFIRST;
        EXIT(BaseComplexBuildSpecOpt.Description);
      END;
      ERROR(Text001, Value);
    END;

    PROCEDURE EditSpecOptions@1100528301();
    VAR
      BaseComplexBuildSpecOpt@1100528301 : Record 11071818;
    BEGIN
      TESTFIELD("Field Type", "Field Type"::Option);

      BaseComplexBuildSpecOpt.SETRANGE("Specification Type", "Specification Type");
      BaseComplexBuildSpecOpt.SETRANGE("Specification Code", "Specification Code");
      PAGE.RUNMODAL(0, BaseComplexBuildSpecOpt);
    END;

    BEGIN
    END.
  }
}

