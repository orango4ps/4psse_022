OBJECT Table 11229333 SMS Message Body Text
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=SMS Message Body Text;
  }
  FIELDS
  {
    { 10  ;   ;SMS Message Code    ;Code10        ;TableRelation="SMS Message";
                                                   CaptionML=ENU=SMS Message Code;
                                                   NotBlank=Yes }
    { 20  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              NOR=Spr†kkode;
                                                              SVE=Spr†kkod] }
    { 30  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 40  ;   ;Text                ;Text250       ;CaptionML=[ENU=Text;
                                                              NOR=Tekst;
                                                              SVE=Ben„mning] }
    { 50  ;   ;Table No.           ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Table),
                                                                                  ID=FILTER(79|11012812|11012822|11012823|11071727|11071729));
                                                   OnValidate=BEGIN
                                                                IF "Table No." <> xRec."Table No." THEN
                                                                  VALIDATE("Field No.", 0);

                                                                CALCFIELDS("Table Caption");
                                                              END;

                                                   CaptionML=[ENU=Table No.;
                                                              NOR=Tabellnr.;
                                                              SVE=Tabellnr] }
    { 60  ;   ;Table Caption       ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Table No.)));
                                                   CaptionML=[ENU=Table Caption;
                                                              NOR=Tabelltittel;
                                                              SVE=Tabellrubrik];
                                                   Editable=No }
    { 70  ;   ;Field No.           ;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Table No.),
                                                                                  Class=FILTER(Normal|FlowField),
                                                                                  Enabled=CONST(Yes));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Field Caption");
                                                              END;

                                                   OnLookup=VAR
                                                              FieldTableManagement@1100528700 : Codeunit 11012372;
                                                            BEGIN
                                                              VALIDATE("Field No.", FieldTableManagement.LookupFieldNo("Table No.", "Field No."));
                                                            END;

                                                   CaptionML=[ENU=Field No.;
                                                              NOR=Feltnr.;
                                                              SVE=F„ltnr] }
    { 80  ;   ;Field Caption       ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD(Table No.),
                                                                                                   No.=FIELD(Field No.)));
                                                   CaptionML=[ENU=Field Caption;
                                                              NOR=Felttekst;
                                                              SVE=F„ltrubrik];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;SMS Message Code,Language Code,Line No. ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text002@1100528700 : TextConst 'ENU=******************************;NOR=******************************;SVE=******************************';
      LanguageID@1100528600 : Integer;

    PROCEDURE GetBodyText@1100528700(SourceVariant@1100528704 : Variant;SMSMessageCode@1100528703 : Code[10];LanguageCode@1100528702 : Code[10];LanguageID@1100528601 : Integer) BodyText : Text;
    VAR
      SMSMessageBodyText@1100528700 : Record 11229333;
      PosNo@1100528707 : Integer;
      SubstituteText@1100528706 : Text;
      FullText@1100528701 : Text;
    BEGIN
      IF LanguageID <> 0 THEN
        SMSMessageBodyText.SetLanguageID(LanguageID);
      SMSMessageBodyText.SETRANGE("SMS Message Code", SMSMessageCode);
      SMSMessageBodyText.SETRANGE("Language Code", LanguageCode);
      IF SMSMessageBodyText.ISEMPTY THEN
        SMSMessageBodyText.SETRANGE("Language Code", '');
      IF SMSMessageBodyText.FINDSET THEN BEGIN
        REPEAT
          PosNo := STRPOS(SMSMessageBodyText.Text, '%1');
          IF PosNo <> 0 THEN BEGIN
            SubstituteText := SMSMessageBodyText.GetSubstituteFromSourceTable(SourceVariant);
            FullText := STRSUBSTNO(SMSMessageBodyText.Text, SubstituteText);
          END ELSE
            FullText := SMSMessageBodyText.Text;
          IF EndsWithBackSlash(FullText) THEN
            BodyText := BodyText + COPYSTR(FullText, 1, STRLEN(FullText) -1)
          ELSE
            BodyText := BodyText + (STRSUBSTNO(FullText + CrLf));
        UNTIL SMSMessageBodyText.NEXT = 0;
      END;
    END;

    PROCEDURE GetSubstituteFromSourceTable@1210190004(SourceVariant@1100528700 : Variant) @11012000 : Text;
    VAR
      CompanyInformation@1210190002 : Record 79;
      RecRef@1100525001 : RecordRef;
    BEGIN
      IF SourceVariant.ISRECORD THEN BEGIN
        RecRef.GETTABLE(SourceVariant);
        IF "Table No." = RecRef.NUMBER THEN
          EXIT(AnyTableFieldValue(RecRef, "Field No."))
        ELSE
          CASE "Table No." OF
            DATABASE::"Company Information":
              BEGIN
                CompanyInformation.GET;
                EXIT(GetSubstituteFromSourceTable(CompanyInformation));
              END;
            DATABASE::"Service Order Extension":
              BEGIN
                CASE RecRef.NUMBER OF
                  DATABASE::"Service Order":
                    EXIT(GetSubstituteFromServiceOrderExtensionViaServiceOrder(RecRef));
                END;
              END;
            DATABASE::"Service-Contract":
              BEGIN
                CASE RecRef.NUMBER OF
                  DATABASE::"Service Order":
                    EXIT(GetSubstituteFromServiceContractViaServiceOrder(RecRef));
                END;
              END;
            DATABASE::"Service Call":
              BEGIN
                CASE RecRef.NUMBER OF
                  DATABASE::"Service Order":
                    EXIT(GetSubstituteFromServiceCallViaServiceOrder(RecRef));
                END;
              END;
            DATABASE::"Planning Agreement":
              BEGIN
                CASE RecRef.NUMBER OF
                  DATABASE::"Service Order":
                    EXIT(GetSubstituteFromPlanningAgreementViaServiceOrder(RecRef));
                END;
              END;
          END;
      END;
    END;

    LOCAL PROCEDURE GetSubstituteFromServiceOrderExtensionViaServiceOrder@1100528406(ServiceOrderRecRef@1100528403 : RecordRef) : Text;
    VAR
      ServiceOrder@1100528402 : Record 11012823;
      ServiceOrderExtension@1100528401 : Record 11071727;
      ServiceOrderExtensionRecRef@1100528404 : RecordRef;
    BEGIN
      IF ServiceOrderRecRef.NUMBER <> DATABASE::"Service Order" THEN
        EXIT;

      ServiceOrderRecRef.SETTABLE(ServiceOrder);
      ServiceOrderExtension.GetServOrderExtension(ServiceOrder."No.");
      ServiceOrderExtensionRecRef.GETTABLE(ServiceOrderExtension);
      EXIT(AnyTableFieldValue(ServiceOrderExtensionRecRef, "Field No."));
    END;

    LOCAL PROCEDURE GetSubstituteFromServiceContractViaServiceOrder@1100528701(ServiceOrderRecRef@1100528403 : RecordRef) TxtContent : Text;
    VAR
      ServiceOrder@1100528402 : Record 11012823;
      ServiceContract@1100528401 : Record 11012812;
      ServiceContractRecRef@1100528404 : RecordRef;
    BEGIN
      IF ServiceOrderRecRef.NUMBER <> DATABASE::"Service Order" THEN
        EXIT;

      ServiceOrderRecRef.SETTABLE(ServiceOrder);
      IF ServiceContract.GET(ServiceOrder."Service Contract No.") THEN BEGIN
        ServiceContractRecRef.GETTABLE(ServiceContract);
        EXIT(AnyTableFieldValue(ServiceContractRecRef, "Field No."));
      END;
    END;

    LOCAL PROCEDURE GetSubstituteFromServiceCallViaServiceOrder@1100528702(ServiceOrderRecRef@1100528403 : RecordRef) TxtContent : Text;
    VAR
      ServiceOrder@1100528402 : Record 11012823;
      ServiceCall@1100528401 : Record 11012822;
      ServiceCallRecRef@1100528404 : RecordRef;
    BEGIN
      IF ServiceOrderRecRef.NUMBER <> DATABASE::"Service Order" THEN
        EXIT;

      ServiceOrderRecRef.SETTABLE(ServiceOrder);
      IF ServiceCall.GET(ServiceOrder."Call No.") THEN BEGIN
        ServiceCallRecRef.GETTABLE(ServiceCall);
        EXIT(AnyTableFieldValue(ServiceCallRecRef, "Field No."));
      END;
    END;

    LOCAL PROCEDURE GetSubstituteFromPlanningAgreementViaServiceOrder@1100528600(ServiceOrderRecRef@1100528403 : RecordRef) TxtContent : Text;
    VAR
      ServiceOrder@1100528402 : Record 11012823;
      PlanningAgreement@1100528401 : Record 11071729;
      PlanningAgreementRecRef@1100528404 : RecordRef;
    BEGIN
      IF ServiceOrderRecRef.NUMBER <> DATABASE::"Service Order" THEN
        EXIT;

      ServiceOrderRecRef.SETTABLE(ServiceOrder);
      IF PlanningAgreement.GetPlanningAgreement(ServiceOrder."Starting Time") THEN BEGIN
        PlanningAgreementRecRef.GETTABLE(PlanningAgreement);
        EXIT(AnyTableFieldValue(PlanningAgreementRecRef, "Field No."));
      END;
    END;

    LOCAL PROCEDURE AnyTableFieldValue@1210190010(RecRef@1100525005 : RecordRef;FieldNo@1210190001 : Integer) : Text[250];
    VAR
      FieldRec@1100525003 : Record 2000000041;
      FldRef@1100526200 : FieldRef;
      DecimalValue@1100525004 : Decimal;
      DateValue@1100525000 : Date;
      TimeValue@1100525001 : Time;
    BEGIN
      //copied from codeunit 110120401
      FldRef := RecRef.FIELD(FieldNo);
      IF NOT FieldRec.GET(RecRef.NUMBER, FieldNo) THEN
        EXIT(Text002);

      IF FieldRec.Class = FieldRec.Class::FlowField THEN
        FldRef.CALCFIELD;

      CASE FieldRec.Type OF
        FieldRec.Type::Decimal:
          BEGIN
            EVALUATE(DecimalValue, FORMAT(FldRef.VALUE));
            EXIT(FormatDecimal(DecimalValue));
          END;
        FieldRec.Type::Date:
          BEGIN
            DateValue := FldRef.VALUE;
            EXIT(FormatDate(DateValue));
          END;
        FieldRec.Type::Time:
          BEGIN
            TimeValue := FldRef.VALUE;
            EXIT(FormatTime(TimeValue));
          END;
      END;

      EXIT(FORMAT(FldRef));
    END;

    LOCAL PROCEDURE FormatDecimal@1210190009(DecimalValue@1210190000 : Decimal) : Text[30];
    BEGIN
      //copied from codeunit 110120401
      EXIT(FORMAT(DecimalValue, 0, '<Precision,2:><Standard format,0>'));
    END;

    LOCAL PROCEDURE FormatDate@1100528601(DateValue@1100528600 : Date) : Text[30];
    BEGIN
      CASE LanguageID OF
        1033:
          EXIT(FORMAT(DateValue, 0, '<Weekday Text,3> <Month Text,3> <Day>, <Year4>'));
        1043:
          EXIT(FORMAT(DateValue, 0, '<Weekday Text,3>. <Day> <Month Text,3>. <Year4>'));
      ELSE
        EXIT(FORMAT(DateValue));
      END;
    END;

    LOCAL PROCEDURE FormatTime@1100528602(TimeValue@1100528600 : Time) : Text[30];
    BEGIN
      CASE LanguageID OF
        1033:
          EXIT(FORMAT(TimeValue, 0, '<Hours>.<Minutes,2> <AM/PM>'));
        1043:
          EXIT(FORMAT(TimeValue, 0, '<Hours24>.<Minutes,2>'));
      ELSE
        EXIT(FORMAT(TimeValue));
      END;
    END;

    LOCAL PROCEDURE CrLf@1100528504() Result : Text[2];
    BEGIN
      Result[1] := 13;
      Result[2] := 10;
    END;

    LOCAL PROCEDURE EndsWithBackSlash@1100528506(Text@1100528500 : Text) : Boolean;
    BEGIN
      IF Text = '' THEN
        EXIT(FALSE);

      IF COPYSTR(Text, STRLEN(Text), 1) = '\' THEN
        EXIT(TRUE);
    END;

    PROCEDURE SetLanguageID@1100528606(ILanguageID@1100528600 : Integer);
    BEGIN
      LanguageID := ILanguageID;
    END;

    BEGIN
    END.
  }
}

