OBJECT Table 6086331 Bank Transaction Inbox
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.3.00.03;
  }
  PROPERTIES
  {
    DataCaptionFields=Entry No.,Card No.,Card Name;
    OnInsert=BEGIN
               Duplicate := IsDuplicate;
             END;

    OnModify=BEGIN
               IF xRec.Status = xRec.Status::Accepted THEN
                 TESTFIELD(Status,Status::Error);

               IF Status = Status::Error THEN BEGIN
                 Status := Status::Pending;
                 CLEAR("Try Processed Date/Time");
                 CLEAR("Error Text");
               END;
             END;

    OnRename=BEGIN
               ERROR(Text001,TABLECAPTION);
             END;

    CaptionML=[DEU=Eingangsfach fÅr Banktransakt.;
               ENU=Bank Transactions Inbox;
               NLD=Banktransactie inbox];
    LookupPageID=Page6086345;
    DrillDownPageID=Page6086345;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.;
                                                              NLD=Volgnr.;
                                                              NOR=Lõpenr.;
                                                              SVE=Lîpnr];
                                                   Editable=No }
    { 2   ;   ;Card No.            ;Code20        ;TableRelation="Continia User Credit Card"."Card No.";
                                                   OnValidate=VAR
                                                                EMSetup@1160040001 : Record 6086300;
                                                                UserCreditCard@1160040000 : Record 6086311;
                                                              BEGIN
                                                                EMSetup.GET;
                                                                IF NOT EMSetup."Allow duplicate Card ID" THEN BEGIN
                                                                  UserCreditCard.SETCURRENTKEY("Card No.");
                                                                  UserCreditCard.SETRANGE("Card No.","Card No.");
                                                                  IF UserCreditCard.FINDFIRST THEN
                                                                    VALIDATE("Continia User ID",UserCreditCard."Continia User ID");
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[DEU=Karten-ID;
                                                              ENU=Card No.;
                                                              NLD=Kaartnr.] }
    { 3   ;   ;Card Name           ;Text50        ;CaptionML=[DEU=Kartenenname;
                                                              ENU=Card Name;
                                                              NLD=Kaartnaam] }
    { 5   ;   ;Posting Date        ;Date          ;CaptionML=[DEU=Buchungsdatum;
                                                              ENU=Posting Date;
                                                              NLD=Boekingsdatum;
                                                              NOR=Bokfõringsdato;
                                                              SVE=Bokfîringsdatum] }
    { 6   ;   ;Document Date       ;Date          ;CaptionML=[DEU=Belegdatum;
                                                              ENU=Document Date;
                                                              NLD=Documentdatum;
                                                              NOR=Bilagsdato;
                                                              SVE=Dokumentdatum] }
    { 7   ;   ;Currency Code       ;Code10        ;ValidateTableRelation=No;
                                                   CaptionML=[DEU=WÑhrungscode;
                                                              ENU=Currency Code;
                                                              NLD=Valutacode;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod] }
    { 8   ;   ;Currency Exch. Rate ;Decimal       ;CaptionML=[DEU=WÑhrungswechselkurs;
                                                              ENU=Currency Exchange Rate;
                                                              NLD=Valutawisselkoers;
                                                              SVE=Valutakurs];
                                                   DecimalPlaces=0:15 }
    { 9   ;   ;Amount              ;Decimal       ;CaptionML=[DEU=Betrag;
                                                              ENU=Amount;
                                                              NLD=Bedrag;
                                                              NOR=Belõp;
                                                              SVE=Belopp];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 10  ;   ;Bank-Currency Amount;Decimal       ;CaptionML=[DEU=Betrag (MW);
                                                              ENU=Bank-Currency Amount;
                                                              NLD=Bankvalutabedrag;
                                                              NOR=Belõp (NOK);
                                                              SVE=Belopp (BVA)];
                                                   AutoFormatType=1 }
    { 11  ;   ;Entry Type          ;Integer       ;CaptionML=[DEU=Postenart;
                                                              ENU=Entry Type;
                                                              NLD=Posttype;
                                                              NOR=Posttype;
                                                              SVE=Transaktionstyp] }
    { 12  ;   ;Business Category ID;Code50        ;CaptionML=[DEU=Unternehmenskategorie-ID;
                                                              ENU=Business Category ID;
                                                              NLD=Branchecategorie-id] }
    { 13  ;   ;Business No.        ;Code20        ;CaptionML=[DEU=Unternehmensnr.;
                                                              ENU=Business No.;
                                                              NLD=Branchenr.] }
    { 14  ;   ;Business Name       ;Text250       ;CaptionML=[DEU=Unternehmensname;
                                                              ENU=Business Name;
                                                              NLD=Branchenaam] }
    { 15  ;   ;Business Address    ;Text80        ;CaptionML=[DEU=Unternehmensadresse;
                                                              ENU=Business Address;
                                                              NLD=Brancheadres;
                                                              SVE=Fîretagsadress] }
    { 16  ;   ;Business Address 2  ;Text80        ;CaptionML=[DEU=Unternehmensadresse 2;
                                                              ENU=Business Address 2;
                                                              NLD=Brancheadres 2] }
    { 17  ;   ;Business Address 3  ;Text80        ;CaptionML=[DEU=Unternehmensadresse 3;
                                                              ENU=Business Address 3;
                                                              NLD=Brancheadres 3] }
    { 18  ;   ;Business Country/Region;Code20     ;CaptionML=[DEU=Unternehmensland/-region;
                                                              ENU=Business Country/Region;
                                                              NLD=Brancheland-/regio] }
    { 19  ;   ;Business Post Code  ;Code10        ;CaptionML=[DEU=Unternehmens-PLZ;
                                                              ENU=Business Post Code;
                                                              NLD=Branchepostcode] }
    { 20  ;   ;Document Time       ;Time          ;CaptionML=[DEU=Belegzeit;
                                                              ENU=Document Time;
                                                              NLD=Documenttijd];
                                                   Editable=No }
    { 22  ;   ;Transaction ID      ;Text50        ;CaptionML=[DEU=Transaktions-ID;
                                                              ENU=Transaction ID;
                                                              NLD=Transactie-id;
                                                              SVE=Transaktions-ID];
                                                   Editable=No }
    { 40  ;   ;Bank Code           ;Code10        ;TableRelation="CEM Bank";
                                                   CaptionML=[DEU=Bankcode;
                                                              ENU=Bank Code;
                                                              NLD=Bankcode;
                                                              SVE=Bank kod] }
    { 41  ;   ;Bank Country/Region ;Code10        ;TableRelation="Bank Agreement"."Country/Region Code" WHERE (Bank Code=FIELD(Bank Code));
                                                   CaptionML=[DEU=Land/Region der Bank;
                                                              ENU=Bank Country/Region;
                                                              NLD=Bankland-/regio] }
    { 50  ;   ;Continia User ID    ;Code50        ;TableRelation="Continia User Setup";
                                                   OnValidate=VAR
                                                                EMSetup@1160040001 : Record 6086300;
                                                                UserCreditCard@1160040000 : Record 6086311;
                                                              BEGIN
                                                                IF "Continia User ID" = '' THEN
                                                                  EXIT;
                                                                EMSetup.GET;
                                                                IF NOT EMSetup."Allow duplicate Card ID" THEN BEGIN
                                                                  UserCreditCard.SETCURRENTKEY("Card No.");
                                                                  UserCreditCard.SETRANGE("Card No.","Card No.");
                                                                  UserCreditCard.FINDFIRST;
                                                                  UserCreditCard.TESTFIELD("Continia User ID","Continia User ID");
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[DEU=Continia-Benutzer-ID;
                                                              ENU=Continia User ID;
                                                              NLD=Continia gebruikers-id;
                                                              SVE=AnstÑllningsnr] }
    { 51  ;   ;Exclude Entry       ;Boolean       ;OnValidate=BEGIN
                                                                IF "Exclude Entry" THEN
                                                                  "Error Text" := Text002
                                                                ELSE
                                                                  CLEAR("Error Text");
                                                              END;

                                                   CaptionML=[DEU=Posten ausschlie·en;
                                                              ENU=Exclude Entry;
                                                              NLD=Post uitsluiten] }
    { 60  ;   ;Transaction Type    ;Option        ;CaptionML=[DEU=Angewendet auf Anspruch;
                                                              ENU=Transaction Type;
                                                              NLD=Transactietype;
                                                              SVE=EU transaktionstyp];
                                                   OptionCaptionML=[DEU=Normal,Ausgleichend;
                                                                    ENU=Normal,Balancing;
                                                                    NLD=Normaal,Balancerend];
                                                   OptionString=Normal,Balancing }
    { 74  ;   ;Bank Statement Transaction;Boolean ;CaptionML=[DEU=Bankauszugtransaktion;
                                                              ENU=Bank Statement Transaction;
                                                              NLD=Bankafschrifttransactie] }
    { 92  ;   ;Try Processed Date/Time;DateTime   ;CaptionML=[DEU=Verarbeitungsdatum/-uhrzeit vers.;
                                                              ENU=Try Processed Date Time;
                                                              NLD=Poging datum/tijd] }
    { 94  ;   ;Imported Date/Time  ;DateTime      ;CaptionML=[DEU=Import-Datum und -Uhrzeit;
                                                              ENU=Imported Date Time;
                                                              NLD=Datum/tijd geãmporteerd] }
    { 95  ;   ;Imported by User ID ;Code50        ;CaptionML=[DEU=Importiert von Benutzer-ID;
                                                              ENU=Imported by;
                                                              NLD=Geãmporteerd door;
                                                              NOR=Importert av bruker-ID;
                                                              SVE=Importerades av anvÑndar-ID] }
    { 96  ;   ;Processed Date/Time ;DateTime      ;CaptionML=[DEU=Verarbeitungsdatum/-uhrzeit;
                                                              ENU=Processed Date Time;
                                                              NLD=Verwerkt datum/tijd] }
    { 97  ;   ;Processed by User ID;Code50        ;CaptionML=[DEU=Verarbeitet von Benutzer-ID;
                                                              ENU=Processed by;
                                                              NLD=Verwerkt door;
                                                              NOR=Behandlet av bruker-ID;
                                                              SVE=Bearbetad av AnvÑndar-ID] }
    { 98  ;   ;Error Text          ;Text250       ;CaptionML=[DEU=Fehlertext;
                                                              ENU=Error Text;
                                                              NLD=Foutmelding;
                                                              NOR=Feiltekst;
                                                              SVE=Feltext] }
    { 99  ;   ;Status              ;Option        ;CaptionML=[DEU=Status;
                                                              ENU=Status;
                                                              NLD=Status;
                                                              NOR=Status;
                                                              SVE=Status];
                                                   OptionCaptionML=[DEU=Ausstehend,Fehler,Akzeptiert;
                                                                    ENU=Pending,Error,Accepted;
                                                                    NLD=Afwachten,Fout,Geaccepteerd];
                                                   OptionString=Pending,Error,Accepted;
                                                   Editable=No }
    { 100 ;   ;Agreement ID        ;Text30        ;TableRelation="Bank Agreement"."Agreement ID" WHERE (Bank Code=FIELD(Bank Code));
                                                   CaptionML=[DEU=Vereinbarungs-ID;
                                                              ENU=Agreement ID;
                                                              NLD=Overeenkomst-id] }
    { 120 ;   ;Employee No.        ;Text50        ;CaptionML=[DEU=Mitarbeiternr.;
                                                              ENU=Employee No.;
                                                              NLD=Werknemersnr.;
                                                              SVE=AnstÑllningsnr] }
    { 180 ;   ;Expense Type        ;Code20        ;TableRelation="Expense Type";
                                                   OnValidate=VAR
                                                                ExpenseType@1160040000 : Record 6086307;
                                                              BEGIN
                                                                ExpenseType.GET("Expense Type");
                                                                VALIDATE("Exclude Entry",ExpenseType."Exclude Transactions");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[DEU=Ausgabenart;
                                                              ENU=Expense Type;
                                                              NLD=Uitgavetype] }
    { 250 ;   ;Duplicate           ;Boolean       ;CaptionML=[DEU=Dublette;
                                                              ENU=Duplicate;
                                                              NLD=Duplicaat;
                                                              NOR=Duplikat;
                                                              SVE=Dubblett] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Status,Try Processed Date/Time           }
    {    ;Bank Code,Bank Country/Region,Status     }
    {    ;Card No.,Status,Posting Date             }
    {    ;Transaction ID                           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      BankFileFilters@1001 : TextConst 'DEU=Alle Dateien (*.*)|*.*;ENU=All Files (*.*)|*.*;NLD=Alle bestanden (*.*)|*.*;SVE=Alla filer (*.*)|*.*';
      CreditCardPostingAccTxt@1160040003 : TextConst 'DEU=Standard Buchungskonto (%1 %2) verwenden,Buchungskonto manuell eingeben;ENU=Use default posting account (%1 %2),Manually set up posting account;NLD=Gebruik standaard boekingsrekening (%1 %2),Geef boekingsrekening handmatig in';
      NotValidStatus@1160040002 : TextConst 'DEU=" ist ungÅltig.";ENU=is not valid;NLD=is niet geldig;SVE=Ñr inte giltig.';
      SelectBankTxt@1000 : TextConst 'DEU=Bankdatei auswÑhlen;ENU=Select Bank File;NLD=Selecteer bankbestand';
      SetupPostingAccNowTxt@1160040004 : TextConst 'DEU=Mîchten Sie das Buchungskonto jetzt einrichten?;ENU=Do you want to set up the posting account now?;NLD=Wilt u de boekingsrekening nu instellen?';
      Text001@1160040000 : TextConst 'DEU=Sie kînnen eine %1 nicht umbenennen.;ENU=You cannot rename a %1.;NLD=U kunt een %1 niet hernoemen.;NOR=Du kan ikke gi nytt navn til en %1.;SVE=Du kan inte byta namn pÜ %1.';
      Text002@1160040001 : TextConst 'DEU=Diese Transaktion wird nicht bearbeitet, da sie ausgeschlossen ist;ENU=This transaction will not be handled as it is excluded.;NLD=Deze transactie wordt niet afgehandeld omdat deze uitgesloten is.';
      NoCreditCardMapping@1002 : TextConst 'DEU=%1 muss vorhanden sein, wenn %2 ist eingerichtet.;ENU=%1 must exist when %2 is set.;NLD=%1 moet bestaan wanneer %2 is ingesteld.';

    PROCEDURE MatchCard@1160040003();
    VAR
      ContiniaUserSetup@1160040002 : Record 6086002;
      EMSetup@1160040003 : Record 6086300;
      UserCreditCard@1160040001 : Record 6086311;
      InboxTransaction@1160040000 : Record 6086331;
      CreditCardUserMapping@1160040006 : Record 6086344;
      CreditCardMapping@1160040007 : Record 6086351;
      BankTransactionInboxCheck@1160040011 : Codeunit 6086310;
      RecRef@1160040009 : RecordRef;
      FieldRef@1160040008 : FieldRef;
      ContiniaUserID@1160040012 : Code[50];
      MappingFieldCount@1160040010 : Integer;
      PostingAccountAction@1160040005 : 'DoNothing,UseDefault,SetupManually';
    BEGIN
      TESTFIELD("Continia User ID",'');
      TESTFIELD("Card No.");
      IF PAGE.RUNMODAL(0,ContiniaUserSetup) = ACTION::LookupOK THEN BEGIN
        EMSetup.GET;
        IF EMSetup."Card Transaction Bal. No." <> '' THEN BEGIN
          PostingAccountAction :=
            STRMENU(
             STRSUBSTNO(CreditCardPostingAccTxt,EMSetup."Card Transaction Bal. Type",EMSetup."Card Transaction Bal. No."),1);
          IF PostingAccountAction = PostingAccountAction::DoNothing THEN
            ERROR('');
        END ELSE
          IF CONFIRM(SetupPostingAccNowTxt,TRUE) THEN
            PostingAccountAction := PostingAccountAction::SetupManually;

        UserCreditCard.INIT;
        UserCreditCard."Continia User ID" := ContiniaUserSetup."Continia User ID";
        UserCreditCard."Card No." := "Card No.";
        IF PostingAccountAction = PostingAccountAction::UseDefault THEN BEGIN
          UserCreditCard."Account Type" := EMSetup."Card Transaction Bal. Type";
          UserCreditCard."Account No." := EMSetup."Card Transaction Bal. No.";
        END;
        IF NOT UserCreditCard.INSERT(TRUE) THEN
          UserCreditCard.MODIFY(TRUE);

        IF EMSetup."Allow duplicate Card ID" THEN BEGIN
          RecRef.GETTABLE(Rec);
          CreditCardUserMapping.SETRANGE("Card No.","Card No.");
          CreditCardUserMapping.SETRANGE("Continia User ID",UserCreditCard."Continia User ID");
          CreditCardUserMapping.DELETEALL;
          IF CreditCardMapping.FINDSET THEN
            REPEAT
              CreditCardUserMapping.VALIDATE("Continia User ID",UserCreditCard."Continia User ID");
              CreditCardUserMapping.VALIDATE("Card No.","Card No.");
              CreditCardUserMapping."Field No." := CreditCardMapping."Field No.";
              FieldRef := RecRef.FIELD(CreditCardMapping."Field No.");
              CreditCardUserMapping.Value := FORMAT(FieldRef.VALUE);
              CreditCardUserMapping.INSERT(TRUE);
            UNTIL CreditCardMapping.NEXT = 0;
        END;
        MappingFieldCount := CreditCardMapping.COUNT;
        IF (EMSetup."Allow duplicate Card ID") AND (MappingFieldCount = 0) THEN
          ERROR(NoCreditCardMapping,CreditCardMapping.TABLECAPTION,EMSetup.FIELDCAPTION("Allow duplicate Card ID"));

        InboxTransaction.SETCURRENTKEY("Card No.",Status);
        InboxTransaction.SETRANGE("Card No.",UserCreditCard."Card No.");
        InboxTransaction.SETFILTER(Status,'%1|%2',InboxTransaction.Status::Pending,InboxTransaction.Status::Error);
        InboxTransaction.SETRANGE("Continia User ID",'');
        IF NOT EMSetup."Allow duplicate Card ID" THEN BEGIN
          InboxTransaction.MODIFYALL("Error Text",'');
          InboxTransaction.MODIFYALL("Continia User ID",UserCreditCard."Continia User ID");
        END ELSE
          IF InboxTransaction.FINDSET THEN
            REPEAT
              ContiniaUserID := BankTransactionInboxCheck.GetMappingCreditCard(InboxTransaction,MappingFieldCount);
              IF ContiniaUserID <> '' THEN BEGIN
                InboxTransaction."Error Text" := '';
                InboxTransaction."Continia User ID" := ContiniaUserID;
                InboxTransaction.MODIFY;
              END;
            UNTIL InboxTransaction.NEXT = 0;

        COMMIT;
        IF PostingAccountAction = PostingAccountAction::SetupManually THEN BEGIN
          UserCreditCard.SETRANGE("Continia User ID",ContiniaUserSetup."Continia User ID");
          PAGE.RUNMODAL(0,UserCreditCard);
        END;
      END;

      CODEUNIT.RUN(CODEUNIT::"EM Online Mgt.");
    END;

    PROCEDURE UnMatchCard@1160040007();
    VAR
      EMSetup@1160040002 : Record 6086300;
      EmployeeCard@1160040001 : Record 6086311;
      InboxTransaction@1160040000 : Record 6086331;
      CreditCardUserMapping@1160040003 : Record 6086344;
    BEGIN
      TESTFIELD("Continia User ID");
      IF Status = Status::Accepted THEN
        FIELDERROR(Status,NotValidStatus);

      EmployeeCard.GET("Continia User ID","Card No.");
      EmployeeCard.DELETE;

      EMSetup.GET;

      InboxTransaction.SETCURRENTKEY("Card No.",Status);
      InboxTransaction.SETRANGE("Card No.","Card No.");
      IF EMSetup."Allow duplicate Card ID" THEN
        InboxTransaction.SETRANGE("Continia User ID","Continia User ID");
      InboxTransaction.SETFILTER(Status,'%1|%2',InboxTransaction.Status::Pending,InboxTransaction.Status::Error);
      InboxTransaction.MODIFYALL("Continia User ID",'');

      CreditCardUserMapping.SETRANGE("Card No.","Card No.");
      CreditCardUserMapping.SETRANGE("Continia User ID","Continia User ID");
      CreditCardUserMapping.DELETEALL;
    END;

    PROCEDURE UploadFile@1160040000(ReconciliationFile@1160040002 : Boolean);
    VAR
      Bank@1160040000 : Record 6086314;
      BankAgreement@1160040001 : Record 6086315;
    BEGIN
      IF BankAgreement.COUNT = 1 THEN
        BankAgreement.FINDFIRST
      ELSE
        IF PAGE.RUNMODAL(0,BankAgreement) <> ACTION::LookupOK THEN
          EXIT;

      Bank.GET(BankAgreement."Bank Code",BankAgreement."Country/Region Code");
      UploadFileFromBank(Bank,ReconciliationFile);
    END;

    LOCAL PROCEDURE UploadFileFromBank@1160040001(Bank@1160040000 : Record 6086314;ReconciliationFile@1160040004 : Boolean);
    VAR
      TempFile@1000 : TEMPORARY Record 6085608;
      CEM@1160040002 : Codeunit 6086305;
    BEGIN
      TempFile.BrowseFile(SelectBankTxt,'.csv',BankFileFilters);
      IF TempFile.Data.HASVALUE THEN BEGIN
        CEM.UploadBankFile(Bank,TempFile,ReconciliationFile);
        CEM.RUN;
      END;
    END;

    LOCAL PROCEDURE IsDuplicate@1160040002() : Boolean;
    VAR
      EMSetup@1160040002 : Record 6086300;
      BankTrans@1160040000 : Record 6086330;
      BankTransInbox@1160040001 : Record 6086331;
    BEGIN
      IF "Transaction ID" <> '' THEN
        EXIT;

      EMSetup.GET;
      IF EMSetup."Ignore BT Duplicate Check" THEN
        EXIT(FALSE);

      BankTransInbox.SETCURRENTKEY("Card No.",Status,"Posting Date");
      BankTransInbox.SETFILTER("Entry No.",'<>%1',"Entry No.");
      BankTransInbox.SETRANGE("Card No.","Card No.");
      BankTransInbox.SETRANGE(Status,BankTransInbox.Status::Pending,BankTransInbox.Status::Error);
      BankTransInbox.SETRANGE("Posting Date","Posting Date");
      BankTransInbox.SETRANGE("Document Time","Document Time");
      BankTransInbox.SETRANGE("Currency Code","Currency Code");
      BankTransInbox.SETRANGE(Amount,Amount);
      BankTransInbox.SETRANGE("Bank Statement Transaction","Bank Statement Transaction");
      IF BankTransInbox.FINDFIRST THEN
        EXIT(IsExcludedDuplicate);

      BankTrans.SETCURRENTKEY("Card No.");
      BankTrans.SETFILTER("Entry No.",'<>%1',"Entry No.");
      BankTrans.SETRANGE("Card No.","Card No.");
      BankTrans.SETRANGE("Posting Date","Posting Date");
      BankTrans.SETRANGE("Document Time","Document Time");
      BankTrans.SETRANGE("Currency Code","Currency Code");
      BankTrans.SETRANGE(Amount,Amount);
      BankTrans.SETRANGE("Bank Statement Transaction","Bank Statement Transaction");
      IF BankTrans.FINDFIRST THEN
        EXIT(IsExcludedDuplicate);
    END;

    LOCAL PROCEDURE IsExcludedDuplicate@1160040004() : Boolean;
    VAR
      NotDuplicate@1160040000 : Record 6086335;
    BEGIN
      NotDuplicate.SETRANGE("Business Name","Business Name");
      NotDuplicate.SETFILTER("Maximum Amount(LCY)",'<=%1',ABS("Bank-Currency Amount"));
      EXIT(NOT NotDuplicate.FINDFIRST);
    END;

    PROCEDURE MarkNotDuplicate@1160040005();
    VAR
      NotDuplicate@1160040000 : Record 6086335;
    BEGIN
      NotDuplicate.MakeNotDuplicate(Rec);
    END;

    PROCEDURE IsDuplicateFromBank@1160040006(TransactionID@1160040002 : Text[50];IsStatement@1000 : Boolean) : Boolean;
    VAR
      BankTrans@1160040001 : Record 6086330;
      BankTransInbox@1160040000 : Record 6086331;
    BEGIN
      IF TransactionID = '' THEN
        EXIT(FALSE);

      BankTransInbox.SETCURRENTKEY("Transaction ID");
      BankTransInbox.SETRANGE("Transaction ID",TransactionID);
      BankTransInbox.SETRANGE("Bank Statement Transaction",IsStatement);
      IF NOT BankTransInbox.ISEMPTY THEN
        EXIT(TRUE);

      BankTrans.SETCURRENTKEY("Transaction ID");
      BankTrans.SETRANGE("Transaction ID",TransactionID);
      BankTrans.SETRANGE("Bank Statement Transaction",IsStatement);
      IF NOT BankTrans.ISEMPTY THEN
        EXIT(TRUE);
    END;

    BEGIN
    END.
  }
}

