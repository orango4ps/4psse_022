OBJECT Codeunit 12013640 ExFlow-Check Head Warnings
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EXF510000;
  }
  PROPERTIES
  {
    TableNo=12013587;
    OnRun=VAR
            ExFlowSetup@1100285000 : Record 12013601;
          BEGIN
            ExFlowSetup.GET;

            DeleteWarningRecs("Inbound Document No.");

            IF ExFlowSetup."Due Date Warning when Older" <> 0 THEN
              CheckDueDate(ExFlowSetup."Due Date Warning when Older",Rec);

            IF ExFlowSetup."VAT Warning when diff setup" THEN
              CheckVAT(Rec);

            CheckPayToAccount(Rec);
            //110
            CheckContract(Rec);
            //110
          END;

  }
  CODE
  {
    VAR
      EXF000@1100285000 : TextConst 'ENU=Due date is over %1 days (either older or newer).;SVE=Fîrfallodatum Ñr îver %1 dagar (antingen Ñldre eller nyare).';
      EXF001@1100285001 : TextConst 'ENU=Calculated VAT %1 does not exist as a setting in VAT Posting Setup.;SVE=UtrÑknad Moms %1 finns ej uppsatt som momssats under MomsbokfîringsinstÑllningar.';
      EXF002@1100285002 : TextConst 'ENU="Payment account is not default value ";SVE="Betalningskontot Ñr inte standard "';
      EXF003@1100285003 : TextConst 'ENU=Warnings matching against Contract No. %1;SVE=Varning vid matchning mot kontraktsnr %1';

    LOCAL PROCEDURE CheckVAT@1100285006(ExfPurchDocHead@1100285001 : Record 12013587);
    VAR
      VATPostingSetup@1100285000 : Record 325;
    BEGIN
      IF ExfPurchDocHead."Document Amount" = 0 THEN
        EXIT;

      ExfPurchDocHead."Calculated VAT %" := ROUND(100 * ExfPurchDocHead."Document Amount VAT" / ExfPurchDocHead."Document Amount",1);
      IF ExfPurchDocHead."Calculated VAT %" IN [0,100] THEN
        EXIT;

      ExfPurchDocHead."Calculated VAT %" := ROUND(100 * ExfPurchDocHead."Document Amount VAT" / ExfPurchDocHead."Document Amount",0.1);

      VATPostingSetup.SETRANGE("VAT %",ExfPurchDocHead."Calculated VAT %");
      IF NOT VATPostingSetup.FINDFIRST THEN
        CreateWarningRec(ExfPurchDocHead."Inbound Document No.",1,STRSUBSTNO(EXF001,ExfPurchDocHead."Calculated VAT %"));
    END;

    LOCAL PROCEDURE CheckDueDate@1100285002(NoOfDueDays@1100285001 : Integer;ExfPurchDocHead@1100285000 : Record 12013587);
    BEGIN
      IF ExfPurchDocHead."Due Date" = 0D THEN
        EXIT;
      IF ABS((ExfPurchDocHead."Due Date" - TODAY)) >= NoOfDueDays THEN
        CreateWarningRec(ExfPurchDocHead."Inbound Document No.",0,STRSUBSTNO(EXF000,NoOfDueDays));
    END;

    PROCEDURE CreateWarningRec@1100285000(ImportDocNo@1100285001 : Integer;WarningType@1100285002 : Integer;WarningMessage@1100285003 : Text[250]);
    VAR
      PurchDocWarningDoc@1100285000 : Record 12013636;
    BEGIN
      IF NOT PurchDocWarningDoc.GET(ImportDocNo,WarningType) THEN BEGIN
        PurchDocWarningDoc.INIT;
        PurchDocWarningDoc."Inbound Document No." := ImportDocNo;
        PurchDocWarningDoc."Warning Type" := WarningType;
        PurchDocWarningDoc."Warning Message" := WarningMessage;
        PurchDocWarningDoc."Action Type" := 0;
        PurchDocWarningDoc.INSERT;
      END;
    END;

    PROCEDURE DeleteWarningRecs@1100285003(ImportDocNo@1100285001 : Integer);
    VAR
      PurchDocWarningDoc@1100285000 : Record 12013636;
    BEGIN
      PurchDocWarningDoc.RESET;
      PurchDocWarningDoc.SETRANGE("Inbound Document No.", ImportDocNo);
      PurchDocWarningDoc.SETRANGE("Action Type", 0);
      IF NOT PurchDocWarningDoc.ISEMPTY THEN
        PurchDocWarningDoc.DELETEALL;
    END;

    LOCAL PROCEDURE CheckPayToAccount@1100285001(ExfPurchDocHead@1100285000 : Record 12013587);
    VAR
      Vendor@1100285001 : Record 23;
      VendorID@1100285002 : Record 12013667;
      VendorIDField@1100285003 : Record 12013668;
      DefaultPay@1100285004 : Boolean;
      CustImportManager@1100285005 : Codeunit 12013611;
      TempPayAcc@1100285006 : Text[50];
      VendorAdvOpt@1100285007 : Record 12013595;
      EXPurchImpHeaderArchive@1100285008 : Record 12013650;
    BEGIN
      IF VendorAdvOpt.GET(ExfPurchDocHead."Pay-to Vendor No.") THEN
        IF VendorAdvOpt."Ignore Payment Warning" THEN
          EXIT;

      IF NOT EXPurchImpHeaderArchive.GET(ExfPurchDocHead."Import Document No.") THEN
        EXIT;

      VendorIDField.RESET;
      VendorIDField.SETRANGE("Payment Validation ID",TRUE);
      IF VendorIDField.FIND('-') THEN BEGIN
        REPEAT
          VendorID.RESET;
          VendorID.SETRANGE("Vendor No.",ExfPurchDocHead."Pay-to Vendor No.");
          VendorID.SETRANGE("Table No.",VendorIDField."Table No.");
          VendorID.SETRANGE("Field No.",VendorIDField."Field No.");
          IF VendorID.FIND('-') THEN BEGIN
            REPEAT
              TempPayAcc := RemoveSpecSign(ExfPurchDocHead."Pay to Account (Import)");
              IF VendorID.ID = TempPayAcc THEN BEGIN
                IF CustImportManager.CheckDefaultPayAcc(VendorID,ExfPurchDocHead."Pay to Account (Import)") THEN
                  CreateWarningRec(ExfPurchDocHead."Inbound Document No.",2,STRSUBSTNO(EXF002,VendorID.ID));
                EXIT;
              END;
            UNTIL VendorID.NEXT = 0;
          END;
        UNTIL VendorIDField.NEXT = 0;
          //If No VendorId match return warning
          CreateWarningRec(ExfPurchDocHead."Inbound Document No.",2,STRSUBSTNO(EXF002,VendorID.ID));
      END;
    END;

    LOCAL PROCEDURE RemoveSpecSign@1100285004(Value@1100285000 : Text[50]) RValue : Text[50];
    BEGIN
      RValue := DELCHR(Value,'=',DELCHR(Value,'=','ABCDEFGHIJKLMNOPQRSTUVWXYZèéô0123456789'));
    END;

    LOCAL PROCEDURE CheckContract@1100285005(ExDocHead@1100285000 : Record 12013587);
    VAR
      ExPurchDocLine@1100285001 : Record 12013588;
      ExWorflowMgt@1100285002 : Codeunit 12013593;
      LastContractNo@1100285003 : Integer;
      ContractOk@1100285004 : Boolean;
      WarnTxt@1100285005 : Text[250];
    BEGIN
      IF ExDocHead."Contract No." = 0 THEN
        EXIT;

      ContractOk := TRUE;
      WarnTxt := '';
      ContractOk := ExWorflowMgt.ContractPriceOK(ExDocHead,FALSE,WarnTxt);

      IF NOT ContractOk THEN BEGIN
        IF WarnTxt <> '' THEN
          CreateWarningRec(ExDocHead."Inbound Document No.",3,WarnTxt)
        ELSE
          CreateWarningRec(ExDocHead."Inbound Document No.",3,STRSUBSTNO(EXF003,LastContractNo));
      END;
    END;

    BEGIN
    END.
  }
}

