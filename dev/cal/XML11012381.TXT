OBJECT XMLport 11012381 Import GL Entries Payroll
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import GL Entries Payroll;
               SVE=Importera redovisningstransaktioner l”n];
    Direction=Import;
    DefaultFieldsValidation=No;
    TextEncoding=WINDOWS;
    OnInitXMLport=BEGIN
                    HumanResourcesSetup.GET;
                    HumanResourcesSetup.TESTFIELD("Salary Application",HumanResourcesSetup."Salary Application"::Payroll);

                    IF (HumanResourcesSetup."Salary Application Version" = '2') OR
                      (UPPERCASE(HumanResourcesSetup."Salary Application Version") = 'CSV-2') THEN
                    BEGIN
                      XMLPORT.RUN(XMLPORT::"Import GL Entries Payroll V2");
                      COMMIT;
                      ERROR('');
                    END;

                    HumanResourcesSetup.TESTFIELD("GL Entry Journal Template");
                    HumanResourcesSetup.TESTFIELD("GL Entry Journal Batch");

                    GLSetup.GET;

                    currXMLport.FILENAME(HumanResourcesSetup."Pathname Files from Salary");
                  END;

    OnPreXMLport=BEGIN
                   PostRec.LOCKTABLE;
                   PostRec.SETRANGE("Journal Template Name",HumanResourcesSetup."GL Entry Journal Template");
                   PostRec.SETRANGE("Journal Batch Name",HumanResourcesSetup."GL Entry Journal Batch");
                   IF PostRec.FIND('+') THEN
                     LineCounter := PostRec."Line No."
                   ELSE
                     LineCounter := 0;
                 END;

    OnPostXMLport=BEGIN
                    OldFile := currXMLport.FILENAME;
                    NewFile := HumanResourcesSetup.DetermineBackupFile(OldFile);
                    IF NewFile <> OldFile THEN
                      FileMgt.RenameClientFile(OldFile, NewFile, TRUE);
                  END;

    Format=Fixed Text;
    UseRequestPage=No;
  }
  ELEMENTS
  {
    { [{B9B32344-F648-4689-B2F1-F9BC10C28B30}];  ;Root                ;Element ;Text     }

    { [{84C7549A-2EFA-4B11-AAC6-D06FCF82FA90}];1 ;GenJournalLine      ;Element ;Table   ;
                                                  SourceTable=Table81;
                                                  SourceTableView=SORTING(Field1,Field51,Field2);
                                                  Import::OnAfterInitRecord=BEGIN
                                                                              "Gen. Journal Line".INIT;
                                                                              CLEAR(DCcode);
                                                                              CLEAR(YearTxt);
                                                                              CLEAR(WeekTxt);
                                                                              CLEAR(SupplyingCompany);
                                                                              CLEAR(ReceivingCompany);
                                                                            END;

                                                  Import::OnBeforeInsertRecord=VAR
                                                                                 RecRef@1100528400 : RecordRef;
                                                                               BEGIN
                                                                                 WITH "Gen. Journal Line" DO BEGIN
                                                                                   "Journal Template Name" := HumanResourcesSetup."GL Entry Journal Template";
                                                                                   "Journal Batch Name" := HumanResourcesSetup."GL Entry Journal Batch";
                                                                                   "Line No." := LineCounter + 10000;
                                                                                   RecRef.GETTABLE("Gen. Journal Line");
                                                                                   XMLportStatusDialogMgt.ShowImportStatus(RecRef);
                                                                                   INSERT;
                                                                                   LineCounter := LineCounter + 10000;
                                                                                   "Account Type" := "Account Type"::"G/L Account";

                                                                                   IF NOT JnlTemplRec.GET(HumanResourcesSetup."GL Entry Journal Template") THEN
                                                                                     JnlTemplRec.INIT;
                                                                                   IF NOT JnlBatchRec.GET(HumanResourcesSetup."GL Entry Journal Template", HumanResourcesSetup."GL Entry Journal Batch") THEN
                                                                                     JnlBatchRec.INIT;

                                                                                   IF DocNo = '' THEN BEGIN
                                                                                     IF JnlBatchRec."No. Series" <> '' THEN
                                                                                       DocNo := NoSeriesMgt.GetNextNo(JnlBatchRec."No. Series",0D,FALSE)
                                                                                     ELSE
                                                                                       IF JnlTemplRec."No. Series" <> '' THEN
                                                                                         DocNo := NoSeriesMgt.GetNextNo(JnlTemplRec."No. Series",0D,FALSE);
                                                                                   END;
                                                                                   "Document No." := DocNo;

                                                                                   DimMgt.GetDimValueRec(1, "Shortcut Dimension 1 Code", DimValRec, FALSE,'');
                                                                                   IF DimValRec.Code = '' THEN
                                                                                     WHILE (DimValRec.Code = '') AND (STRPOS("Shortcut Dimension 1 Code",'0') = 1) DO BEGIN
                                                                                       "Shortcut Dimension 1 Code" := DELSTR("Shortcut Dimension 1 Code",1,1);
                                                                                       DimMgt.GetDimValueRec(1, "Shortcut Dimension 1 Code", DimValRec, FALSE,'');
                                                                                     END;

                                                                                   IF (DimValRec.Code = '') AND  ("Shortcut Dimension 1 Code" <> '' ) THEN
                                                                                     VALIDATE("Shortcut Dimension 1 Code");

                                                                                   IF DimValRec.Code <> '' THEN
                                                                                     VALIDATE("Shortcut Dimension 1 Code");

                                                                                   IF DCcode = Text005 THEN
                                                                                     Amount := Amount * -1;
                                                                                   Amount := Amount / 100;
                                                                                   VALIDATE(Amount);

                                                                                   IF NOT GlAccRec.GET("Account No.") THEN GlAccRec.INIT;
                                                                                   IF GlAccRec."Import Posting Information" = FALSE THEN GlAccRec.INIT;
                                                                                   "Gen. Posting Type" := GlAccRec."Gen. Posting Type";
                                                                                   "Gen. Bus. Posting Group" := GlAccRec."Gen. Bus. Posting Group";
                                                                                   "Gen. Prod. Posting Group" := GlAccRec."Gen. Prod. Posting Group";
                                                                                   "VAT Bus. Posting Group" := GlAccRec."VAT Bus. Posting Group";
                                                                                   "VAT Prod. Posting Group" := GlAccRec."VAT Prod. Posting Group";
                                                                                   "Tax Area Code" := GlAccRec."Tax Area Code";
                                                                                   "Tax Liable" := GlAccRec."Tax Liable";
                                                                                   "Tax Group Code" := GlAccRec."Tax Group Code";
                                                                                   VALIDATE("VAT Prod. Posting Group");

                                                                                   "Source Code"  := JnlTemplRec."Source Code";
                                                                                   IF JnlBatchRec."Reason Code" <> '' THEN
                                                                                     "Reason Code" := JnlBatchRec."Reason Code"
                                                                                   ELSE
                                                                                     "Reason Code" := JnlTemplRec."Reason Code";
                                                                                   "Posting Date" := DWY2DATE(5, Week, Year+2000);
                                                                                   "Document Date" := "Posting Date";
                                                                                   CheckCompany;
                                                                                   "Receiving Company" := ReceivingCompany;
                                                                                   "Origin Salary Application" := TRUE;
                                                                                   MODIFY;
                                                                                 END;

                                                                                 currXMLport.SKIP;
                                                                               END;
                                                                                }

    { [{588DB2DD-49A6-4F65-949C-DA2220A2B1A4}];2 ;Filler1             ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=3 }

    { [{FB2E6B64-CD6B-427A-9DD5-EA07F111DF92}];2 ;AccountNo           ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Gen. Journal Line::Account No.;
                                                  MinOccurs=Zero;
                                                  Width=12 }

    { [{902F9556-4937-440B-AA08-25B94124B306}];2 ;Amount              ;Element ;Field   ;
                                                  DataType=Decimal;
                                                  SourceField=Gen. Journal Line::Amount;
                                                  MinOccurs=Zero;
                                                  Width=15 }

    { [{F4CB3181-9499-403A-856D-5D3350E13EF1}];2 ;ShortcutDimension1Code;Element;Field  ;
                                                  DataType=Code;
                                                  SourceField=Gen. Journal Line::Shortcut Dimension 1 Code;
                                                  MinOccurs=Zero;
                                                  Width=6 }

    { [{19FF4285-23C4-41B9-86EC-0E3A97120285}];2 ;Description         ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Gen. Journal Line::Description;
                                                  MinOccurs=Zero;
                                                  Width=25 }

    { [{0D46DA94-1954-43AB-9072-B49C83D18CAF}];2 ;Filler2             ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=12 }

    { [{D337E9B6-8294-4695-8D6F-B7A7AFD80858}];2 ;Quantity            ;Element ;Field   ;
                                                  DataType=Decimal;
                                                  SourceField=Gen. Journal Line::Quantity;
                                                  MinOccurs=Zero;
                                                  Width=10 }

    { [{4807923C-EFE5-46EE-B504-199EBEEEF8C9}];2 ;DCcode              ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=1 }

    { [{FBF50954-A2C5-4C58-AE6A-D5C36766E92F}];2 ;YearTxt             ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  FillEmptyTextWithZero(YearTxt);
                                                                                  EVALUATE(Year, YearTxt);
                                                                                END;

                                                  Width=2 }

    { [{ECADDFB0-DA43-401D-90BA-7AD0F8DCE168}];2 ;WeekTxt             ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Import::OnAfterAssignVariable=BEGIN
                                                                                  FillEmptyTextWithZero(WeekTxt);
                                                                                  EVALUATE(Week, WeekTxt);
                                                                                END;

                                                  Width=2 }

    { [{F7226380-8E5D-4871-99EE-DD54FA44C592}];2 ;SupplyingCompany    ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=3 }

    { [{B370706E-DAF1-41F8-B7CD-2A7E22D336F0}];2 ;ReceivingCompany    ;Element ;Text    ;
                                                  MinOccurs=Zero;
                                                  Width=3 }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      GLSetup@1100528417 : Record 98;
      HumanResourcesSetup@1100528416 : Record 5218;
      PostRec@1100528415 : Record 81;
      JnlTemplRec@1100528414 : Record 80;
      JnlBatchRec@1100528413 : Record 232;
      DimValRec@1100528412 : Record 349;
      GlAccRec@1100528411 : Record 15;
      FileMgt@1100528418 : Codeunit 419;
      XMLportStatusDialogMgt@1100528419 : Codeunit 11130006;
      LineCounter@1100528410 : Integer;
      DocNo@1100528408 : Code[20];
      Year@1100528407 : Integer;
      Week@1100528406 : Integer;
      DimMgt@1100528403 : Codeunit 408;
      NoSeriesMgt@1100528402 : Codeunit 396;
      OldFile@1100528401 : Text[250];
      NewFile@1100528400 : Text[250];
      Text005@1100528404 : TextConst 'ENU=C;SVE=Text005';

    PROCEDURE CheckCompany@2();
    VAR
      IcRelRec@11012000 : Record 11012057;
      CompFound@11012001 : Boolean;
    BEGIN
      CompFound := FALSE;
      IF HumanResourcesSetup."Delivering Company (Navision)" <> ReceivingCompany THEN BEGIN
        IF IcRelRec.FIND('-') THEN BEGIN
          REPEAT
            HumanResourcesSetup.CHANGECOMPANY(IcRelRec."Receiving Company");
            HumanResourcesSetup.GET;
            IF HumanResourcesSetup."Delivering Company (Navision)" = ReceivingCompany THEN BEGIN
              CompFound := TRUE;
              IF COMPANYNAME = IcRelRec."Receiving Company" THEN
                ReceivingCompany := ''
              ELSE
                ReceivingCompany := IcRelRec."Receiving Company";
            END;
          UNTIL (IcRelRec.NEXT = 0) OR (CompFound = TRUE);
        END;
      END;

      IF CompFound = FALSE THEN
        ReceivingCompany := '';

      HumanResourcesSetup.CHANGECOMPANY(COMPANYNAME);
      HumanResourcesSetup.GET;
    END;

    PROCEDURE FillEmptyTextWithZero@1100525013(VAR Text@1100525000 : Text[1024]);
    BEGIN
      IF DELCHR(Text,'<>=',' ') = '' THEN
        Text := '0';
    END;

    BEGIN
    END.
  }
}

