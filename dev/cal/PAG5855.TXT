OBJECT Page 5855 Posted Purchase Document Lines
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01,4PS14.00,4PSSE;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Posted Purchase Document Lines;
               NOR=Bokf›rte kj›psdokumentlinjer;
               SVE=Bokf”rda ink”psdokumentrader];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table23;
    PageType=ListPlus;
    OnInit=BEGIN
             ShowRevLineEnable := TRUE;
           END;

    OnOpenPage=BEGIN
                 CurrentMenuType := 1;
                 ChangeSubMenu(CurrentMenuType);

                 SETRANGE("No.","No.");

                 OriginalQuantity := FALSE;
               END;

    OnAfterGetRecord=BEGIN
                       CALCFIELDS(
                         "No. of Pstd. Receipts","No. of Pstd. Invoices",
                         "No. of Pstd. Return Shipments","No. of Pstd. Credit Memos");
                       CurrentMenuTypeOpt := CurrentMenuType;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 46  ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           NOR=Alternativer;
                           SVE=Alternativ] }

    { 63  ;2   ;Field     ;
                Name=ShowRevLine;
                CaptionML=[ENU=Show Reversible Lines Only;
                           NOR=Vis bare reversible linjer;
                           SVE=Visa endast rader som kan †terf”ras];
                ToolTipML=[ENU=Specifies if only lines with quantities that are available to be reversed are shown. For example, on a posted purchase invoice with an original quantity of 20, and 15 of the items have already been sold, the quantity that is available to be reversed on the posted purchase invoice is 5.;
                           NOR=Angir om bare linjer med antall som er tilgjengelige for tilbakef›ring, skal vises. Hvis for eksempel antallet p† en bokf›rt kj›psfaktura med et opprinnelig antall p† 20, der 15 av varene allerede har blitt solgt, vil antallet som er tilgjengelig for tilbakef›ring p† den bokf›rte kj›psfakturaen, v‘re 5.;
                           SVE=Anger om bara rader med antal som „r tillg„ngliga att †terf”ras ska visas. Om en bokf”rd ink”psfaktura t.ex. inneh†ller det ursprungliga antalet 20, och 15 av artiklarna har s†lts, †terst†r 5 artiklar som kan †terf”ras p† den bokf”rda ink”psfakturan.];
                ApplicationArea=#Suite;
                SourceExpr=ShowRevLinesOnly;
                Enabled=ShowRevLineEnable;
                OnValidate=BEGIN
                             CASE CurrentMenuType OF
                               0:
                                 CurrPage.PostedRcpts.PAGE.Initialize(
                                   ShowRevLinesOnly,
                                   CopyDocMgt.IsPurchFillExactCostRevLink(
                                     ToPurchHeader,CurrentMenuType,ToPurchHeader."Currency Code"),TRUE);
                               1:
                                 CurrPage.PostedInvoices.PAGE.Initialize(
                                   ToPurchHeader,ShowRevLinesOnly,
                                   CopyDocMgt.IsPurchFillExactCostRevLink(
                                     ToPurchHeader,CurrentMenuType,ToPurchHeader."Currency Code"),TRUE);
                             END;
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Return Original Quantity;
                           NOR=Returner opprinnelig antall;
                           SVE=Anv„nd ursprungligt antal];
                ToolTipML=[ENU=Specifies whether to use the original quantity to return quantities associated with specific receipts. For example, on a posted purchase invoice with an original quantity of 20, you can match this quantity with a specific shipment received even if some of the 20 items have been sold.;
                           NOR=Angir om du skal bruke det opprinnelige antallet til † returnere antall som er knyttet til bestemte mottak. Hvis det for eksempel finnes en bokf›rt kj›psfaktura med et opprinnelig antall p† 20, kan du avstemme dette antallet mot en bestemt mottatt forsendelse selv om noen av de 20 varene er solgt.;
                           SVE=Anger om det ursprungliga antalet ska anv„ndas f”r att returnera kvantiteter som „r associerade med specifika inleveranser. P† till exempel en bokf”rd ink”psfaktura med det ursprungliga antalet 20 kan du matcha detta antal med en specifik mottagen utleverans, „ven om n†gra av de 20 artiklarna redan s†lts.];
                ApplicationArea=#Suite;
                SourceExpr=OriginalQuantity }

    { 19  ;1   ;Group      }

    { 9   ;2   ;Group      }

    { 15  ;3   ;Field     ;
                Name=PostedReceiptsBtn;
                OptionCaptionML=[ENU=Posted Receipts,Posted Invoices,Posted Return Shipments,Posted Cr. Memos;
                                 NOR=Bokf›rte mottak,Bokf›rte fakturaer,Bokf›rte returforsendelser,Bokf›rte kreditnotaer;
                                 SVE=Bokf”rda inleveranser,Bokf”rda fakturor,Bokf”rda returutleveranser,Bokf”rda kreditnotor];
                ApplicationArea=#Suite;
                SourceExpr=CurrentMenuTypeOpt;
                CaptionClass=OptionCaptionServiceTier;
                OnValidate=BEGIN
                             IF CurrentMenuTypeOpt = CurrentMenuTypeOpt::x3 THEN
                               ChangeSubMenu(3);
                             IF CurrentMenuTypeOpt = CurrentMenuTypeOpt::x2 THEN
                               ChangeSubMenu(2);
                             IF CurrentMenuTypeOpt = CurrentMenuTypeOpt::x1 THEN
                               ChangeSubMenu(1);
                             IF CurrentMenuTypeOpt = CurrentMenuTypeOpt::x0 THEN
                               ChangeSubMenu(0);
                           END;
                            }

    { 16  ;3   ;Field     ;
                CaptionML=[ENU=&Posted Receipts;
                           NOR=&Bokf›rte mottak;
                           SVE=&Bokf”rda inleveranser];
                ToolTipML=[ENU=Specifies the lines that represent posted receipts.;
                           NOR=Angir linjene som representerer bokf›rte mottak.;
                           SVE=Anger raderna som representerar bokf”rda inleveranser.];
                ApplicationArea=#Suite;
                SourceExpr=STRSUBSTNO('(%1)',"No. of Pstd. Receipts");
                Editable=FALSE }

    { 14  ;3   ;Field     ;
                Name=NoOfPostedInvoices;
                CaptionML=[ENU=Posted I&nvoices;
                           NOR=B&okf›rte fakturaer;
                           SVE=Bokf”rda &fakturor];
                ToolTipML=[ENU=Specifies the lines that represent posted invoices.;
                           NOR=Angir linjene som representerer bokf›rte fakturaer.;
                           SVE=Anger raderna som representerar bokf”rda fakturor.];
                ApplicationArea=#Suite;
                SourceExpr=STRSUBSTNO('(%1)',"No. of Pstd. Invoices" - NoOfPostedPrepmtInvoices);
                Editable=FALSE }

    { 41  ;3   ;Field     ;
                CaptionML=[ENU=Posted Ret&urn Shipments;
                           NOR=&Bokf›rte returforsendelser;
                           SVE=Bokf”rda ret&urutleveranser];
                ToolTipML=[ENU=Specifies the lines that represent posted return shipments.;
                           NOR=Angir linjene som representerer bokf›rte returforsendelser.;
                           SVE=Anger raderna som representerar bokf”rda returutleveranser.];
                ApplicationArea=#Suite;
                SourceExpr=STRSUBSTNO('(%1)',"No. of Pstd. Return Shipments");
                Editable=FALSE }

    { 11  ;3   ;Field     ;
                Name=NoOfPostedCrMemos;
                CaptionML=[ENU=Posted Cr. &Memos;
                           NOR=Bokf›rte kredit&notaer;
                           SVE=Bokf”rda kredit&notor];
                ToolTipML=[ENU=Specifies the lines that represent posted purchase credit memos.;
                           NOR=Angir linjene som representerer bokf›rte kj›pskreditnotaer.;
                           SVE=Anger raderna som representerar bokf”rda ink”pskreditnotor.];
                ApplicationArea=#Suite;
                SourceExpr=STRSUBSTNO('(%1)',"No. of Pstd. Credit Memos" - NoOfPostedPrepmtCrMemos);
                Editable=FALSE }

    { 44  ;3   ;Field     ;
                Name=CurrentMenuTypeValue;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr=CurrentMenuType;
                Visible=FALSE }

    { 18  ;2   ;Group      }

    { 6   ;3   ;Part      ;
                Name=PostedInvoices;
                ApplicationArea=#All;
                SubPageView=SORTING(Buy-from Vendor No.);
                SubPageLink=Buy-from Vendor No.=FIELD(No.);
                PagePartID=Page5857;
                Visible=PostedInvoicesVisible }

    { 7   ;3   ;Part      ;
                Name=PostedRcpts;
                ApplicationArea=#All;
                SubPageView=SORTING(Buy-from Vendor No.);
                SubPageLink=Buy-from Vendor No.=FIELD(No.);
                PagePartID=Page5856;
                Visible=PostedRcptsVisible }

    { 1   ;3   ;Part      ;
                Name=PostedCrMemos;
                ApplicationArea=#All;
                SubPageView=SORTING(Buy-from Vendor No.);
                SubPageLink=Buy-from Vendor No.=FIELD(No.);
                PagePartID=Page5859;
                Visible=PostedCrMemosVisible }

    { 5   ;3   ;Part      ;
                Name=PostedReturnShpts;
                ApplicationArea=#All;
                SubPageView=SORTING(Buy-from Vendor No.);
                SubPageLink=Buy-from Vendor No.=FIELD(No.);
                PagePartID=Page5858;
                Visible=PostedReturnShptsVisible }

  }
  CODE
  {
    VAR
      ToPurchHeader@1002 : Record 38;
      CopyDocMgt@1010 : Codeunit 6620;
      OldMenuType@1001 : Integer;
      CurrentMenuType@1000 : Integer;
      LinesNotCopied@1008 : Integer;
      ShowRevLinesOnly@1004 : Boolean;
      MissingExCostRevLink@1006 : Boolean;
      Text000@1009 : TextConst 'ENU=The document lines that have a G/L account that does not allow direct posting have not been copied to the new document.;NOR=Dokumentlinjer med en finanskonto der direkte bokf›ring ikke er tillatt, er ikke kopiert til det nye dokumentet.;SVE=De dokumentrader som har ett redovisningskonto som inte till†ter direktbokf”ring har inte kopierats till det nya dokumentet.';
      OriginalQuantity@1003 : Boolean;
      Text002@1091 : TextConst 'ENU=Document Type Filter;NOR=Filter for bilagstype;SVE=Dokumenttypfilter';
      PostedRcptsVisible@19051516 : Boolean INDATASET;
      PostedInvoicesVisible@19029596 : Boolean INDATASET;
      PostedReturnShptsVisible@19040725 : Boolean INDATASET;
      PostedCrMemosVisible@19050108 : Boolean INDATASET;
      ShowRevLineEnable@19075015 : Boolean INDATASET;
      CurrentMenuTypeOpt@19019278 : 'x0,x1,x2,x3';

    PROCEDURE CopyLineToDoc@5();
    VAR
      FromPurchRcptLine@1001 : Record 121;
      FromPurchInvLine@1002 : Record 123;
      FromPurchCrMemoLine@1003 : Record 125;
      FromReturnShptLine@1004 : Record 6651;
      PurchDocType@1000 : 'Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Receipt,Posted Invoice,Posted Return Shipment,Posted Credit Memo';
    BEGIN
      OnBeforeCopyLineToDoc(CopyDocMgt);
      ToPurchHeader.TESTFIELD(Status,ToPurchHeader.Status::Open);
      LinesNotCopied := 0;
      CASE CurrentMenuType OF
        0:
          BEGIN
            CurrPage.PostedRcpts.PAGE.GetSelectedLine(FromPurchRcptLine);
            //CopyDocMgt.SetProperties(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity); //**4PS.o
            CopyDocMgt.SetProperties(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity,FALSE,FALSE); //**4PS.n
            CopyDocMgt.CopyPurchaseLinesToDoc(
              PurchDocType::"Posted Receipt",ToPurchHeader,
              FromPurchRcptLine,FromPurchInvLine,FromReturnShptLine,FromPurchCrMemoLine,LinesNotCopied,MissingExCostRevLink);
          END;
        1:
          BEGIN
            CurrPage.PostedInvoices.PAGE.GetSelectedLine(FromPurchInvLine);
            //CopyDocMgt.SetProperties(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity); //**4PS.o
            CopyDocMgt.SetProperties(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity,FALSE,FALSE); //**4PS.n
            CopyDocMgt.CopyPurchaseLinesToDoc(
              PurchDocType::"Posted Invoice",ToPurchHeader,
              FromPurchRcptLine,FromPurchInvLine,FromReturnShptLine,FromPurchCrMemoLine,LinesNotCopied,MissingExCostRevLink);
          END;
        2:
          BEGIN
            CurrPage.PostedReturnShpts.PAGE.GetSelectedLine(FromReturnShptLine);
            //CopyDocMgt.SetProperties(FALSE,TRUE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity); //**4PS.o
            CopyDocMgt.SetProperties(FALSE,TRUE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity,FALSE,FALSE); //**4PS.n
            CopyDocMgt.CopyPurchaseLinesToDoc(
              PurchDocType::"Posted Return Shipment",ToPurchHeader,
              FromPurchRcptLine,FromPurchInvLine,FromReturnShptLine,FromPurchCrMemoLine,LinesNotCopied,MissingExCostRevLink);
          END;
        3:
          BEGIN
            CurrPage.PostedCrMemos.PAGE.GetSelectedLine(FromPurchCrMemoLine);
            //CopyDocMgt.SetProperties(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity); //**4PS.o
            CopyDocMgt.SetProperties(FALSE,FALSE,FALSE,FALSE,TRUE,TRUE,OriginalQuantity,FALSE,FALSE); //**4PS.n
            CopyDocMgt.CopyPurchaseLinesToDoc(
              PurchDocType::"Posted Credit Memo",ToPurchHeader,
              FromPurchRcptLine,FromPurchInvLine,FromReturnShptLine,FromPurchCrMemoLine,LinesNotCopied,MissingExCostRevLink);
          END;
      END;
      CopyDocMgt.ShowMessageReapply(OriginalQuantity);
      CLEAR(CopyDocMgt);

      IF LinesNotCopied <> 0 THEN
        MESSAGE(Text000);
    END;

    LOCAL PROCEDURE ChangeSubMenu@1(NewMenuType@1000 : Integer);
    BEGIN
      IF OldMenuType <> NewMenuType THEN
        SetSubMenu(OldMenuType,FALSE);
      SetSubMenu(NewMenuType,TRUE);
      OldMenuType := NewMenuType;
      CurrentMenuType := NewMenuType;
    END;

    [External]
    PROCEDURE GetCurrentMenuType@8() : Integer;
    BEGIN
      EXIT(CurrentMenuType);
    END;

    LOCAL PROCEDURE SetSubMenu@2(MenuType@1000 : Integer;Visible@1001 : Boolean);
    BEGIN
      IF ShowRevLinesOnly AND (MenuType IN [0,1]) THEN
        ShowRevLinesOnly :=
          CopyDocMgt.IsPurchFillExactCostRevLink(ToPurchHeader,MenuType,ToPurchHeader."Currency Code");
      ShowRevLineEnable := MenuType IN [0,1];
      CASE MenuType OF
        0:
          BEGIN
            PostedRcptsVisible := Visible;
            CurrPage.PostedRcpts.PAGE.Initialize(
              ShowRevLinesOnly,
              CopyDocMgt.IsPurchFillExactCostRevLink(
                ToPurchHeader,MenuType,ToPurchHeader."Currency Code"),Visible);
          END;
        1:
          BEGIN
            PostedInvoicesVisible := Visible;
            CurrPage.PostedInvoices.PAGE.Initialize(
              ToPurchHeader,ShowRevLinesOnly,
              CopyDocMgt.IsPurchFillExactCostRevLink(
                ToPurchHeader,MenuType,ToPurchHeader."Currency Code"),Visible);
          END;
        2:
          PostedReturnShptsVisible := Visible;
        3:
          PostedCrMemosVisible := Visible;
      END;
    END;

    [External]
    PROCEDURE SetToPurchHeader@4(NewToPurchHeader@1000 : Record 38);
    BEGIN
      ToPurchHeader := NewToPurchHeader;
    END;

    LOCAL PROCEDURE OptionCaptionServiceTier@1088() : Text[70];
    BEGIN
      EXIT(Text002);
    END;

    LOCAL PROCEDURE NoOfPostedPrepmtInvoices@3() : Integer;
    VAR
      PurchInvHeader@1000 : Record 122;
    BEGIN
      PurchInvHeader.SETRANGE("Buy-from Vendor No.","No.");
      PurchInvHeader.SETRANGE("Prepayment Invoice",TRUE);
      EXIT(PurchInvHeader.COUNT);
    END;

    LOCAL PROCEDURE NoOfPostedPrepmtCrMemos@6() : Integer;
    VAR
      PurchCrMemoHdr@1000 : Record 124;
    BEGIN
      PurchCrMemoHdr.SETRANGE("Buy-from Vendor No.","No.");
      PurchCrMemoHdr.SETRANGE("Prepayment Credit Memo",TRUE);
      EXIT(PurchCrMemoHdr.COUNT);
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCopyLineToDoc@7(VAR CopyDocumentMgt@1000 : Codeunit 6620);
    BEGIN
    END;

    BEGIN
    END.
  }
}

