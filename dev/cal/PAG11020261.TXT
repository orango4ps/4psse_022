OBJECT Page 11020261 Generate Documents PurchAction
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=ZusÑtzliche Belege erzeugen;
               ENU=Generate Documents;
               NLD=Aanvullende documenten genereren;
               NOR=Generer dokument;
               SVE=Generera dokument];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table11012068;
    PageType=List;
    OnOpenPage=VAR
                 lTempDocRel@1210190000 : Record 11020230;
               BEGIN
                 FILTERGROUP(2);
                 IF gProjCde <> '' THEN BEGIN
                   SETRANGE(Source, Source::Project);
                   SETRANGE("Project No.",gProjCde);
                 END ELSE BEGIN
                   SETRANGE(Source, Source::Estimate);
                   SETRANGE("Estimate No.",gEstCde);
                 END;
                 FILTERGROUP(0);

                 SETRANGE("Purchase Action",gPurchActCde);
                 lTempDocRel.SETRANGE("User ID",USERID);
                 lTempDocRel.DELETEALL;

                 IF DocGroupRec.COUNT = 1 THEN BEGIN
                   DocGroupRec.FINDFIRST;
                   DocGroup := DocGroupRec.Code;
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       CalcFieldsVendor();
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210190038;1 ;ActionGroup;
                      CaptionML=[DEU=B&eleg;
                                 ENU=D&ocument;
                                 NLD=D&ocument;
                                 NOR=D&okument;
                                 SVE=D&okument] }
      { 1210190039;2 ;Action    ;
                      CaptionML=[DEU=Belegbeziehungen;
                                 ENU=Document Relations;
                                 NLD=Document Relaties;
                                 NOR=Dokumentrelasjoner;
                                 SVE=Dokumentrelationer];
                      Image=Relationship;
                      OnAction=VAR
                                 DocRelFrm@1210190000 : Page 11020262;
                               BEGIN
                                 DocRelFrm.SetUseridFilter(USERID,"Project No.",'');  //DP01137
                                 DocRelFrm.RUNMODAL;
                               END;
                                }
      { 1210190018;2 ;Action    ;
                      CaptionML=[DEU=Erîffnen Sie den zuletzt erzeugten Beleg;
                                 ENU=Open Last Generated document;
                                 NLD=Open laatst gegenereerd document;
                                 NOR=èpne sist genererte dokument;
                                 SVE=ôppna senaste genererade dokumentet];
                      Image=ViewDocumentLine;
                      OnAction=VAR
                                 lDocumentRec@1210190000 : Record 11012746;
                               BEGIN
                                 CurrPage.UPDATE;
                                 IF "Last Generated Document No." <> '' THEN
                                   IF lDocumentRec.GET("Last Generated Document No.") THEN
                                     lDocumentRec.OpenDocument;
                               END;
                                }
      { 1210190017;2 ;Action    ;
                      CaptionML=[DEU=Vorhandene Dokumente;
                                 ENU=Existing Documents;
                                 NLD=Aanwezige documenten;
                                 NOR=Eksisterende dokumenter;
                                 SVE=Befintliga dokument];
                      Image=Documents;
                      OnAction=VAR
                                 ProjectPurchaseAction@1100525003 : Record 11012026;
                                 RecRef@1100525001 : RecordRef;
                                 DocumentFilters@1100525002 : Codeunit 11012432;
                               BEGIN
                                 ProjectPurchaseAction.GET("Project No.", "Purchase Action");
                                 RecRef.GETTABLE(ProjectPurchaseAction);
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, FALSE);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210190036;1 ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions;
                                 NLD=F&uncties;
                                 NOR=Fu&nksjon;
                                 SVE=F&unktioner] }
      { 1100485000;2 ;Action    ;
                      CaptionML=[DEU=TemporÑre Vorlage erstellen;
                                 ENU=Create Temporay Template;
                                 NLD=Tijdelijk sjabloon aanmaken;
                                 NOR=Opprette midlertidig mal;
                                 SVE=Skapa tillfÑllig mall];
                      Image=Template;
                      OnAction=VAR
                                 DocumentServiceManagement@1100528700 : Codeunit 9510;
                                 TempClientFileName@1100528701 : Text;
                                 lNewTemplate@1100485001 : Boolean;
                               BEGIN
                                 DocumentServiceManagement.SetUseDocumentService4PS(TRUE);
                                 IF NOT gDocTemplateRec.GET(DocGroup,DocNo) THEN
                                   ERROR(Text001)
                                 ELSE BEGIN
                                   gDocGroupRec.GET(DocGroup);
                                   IF (gDocGroupRec."Template Directory" <> '') THEN BEGIN
                                     IF NOT FileMgt.ClientFileExists(gDocGroupRec."Template Directory" + gDocTemplateRec."Word Template") THEN
                                       ERROR(Text002);
                                   END ELSE
                                     IF gDocTemplateRec."Document Service URL" = '' THEN
                                       ERROR(Text002);
                                 END;

                                 lNewTemplate := TRUE;
                                 IF TempProjPurActRec.FINDFIRST THEN BEGIN
                                   IF (TempDocTemplateRec."Document Group" = gDocTemplateRec."Document Group") AND
                                      (TempDocTemplateRec."Template Code" = gDocTemplateRec."Template Code") AND
                                      (TempDocTemplateRec."Document Service URL" = gDocTemplateRec."Document Service URL")
                                   THEN BEGIN
                                     TempProjPurActRec.CALCFIELDS("Document Fysical Template");
                                     IF TempProjPurActRec."Document Fysical Template".HASVALUE THEN
                                       lNewTemplate := FALSE
                                     ELSE
                                       TempProjPurActRec.DELETE;
                                   END ELSE BEGIN
                                     TempProjPurActRec.DELETE;
                                   END;
                                 END;

                                 IF lNewTemplate THEN BEGIN
                                   TempDocTemplateRec := gDocTemplateRec;
                                   TempProjPurActRec."Document Template" := TempDocTemplateRec."Template Code";
                                   TempProjPurActRec."Project No." := "Project No.";
                                   TempProjPurActRec.Code := "Purchase Action";
                                   TempProjPurActRec.INSERT;
                                   IF gDocGroupRec."Template Directory" <> '' THEN
                                     TempProjPurActRec.ImportDocTemplate(
                                       gDocGroupRec."Template Directory" + TempDocTemplateRec."Word Template")
                                   ELSE
                                     IF gDocTemplateRec."Document Service URL" <> '' THEN
                                       BEGIN
                                         TempClientFileName := DocumentServiceManagement.DownloadFileFromCloudToClientSilent(
                                           gDocTemplateRec."Document Service URL");
                                         TempProjPurActRec.ImportDocTemplate(TempClientFileName);
                                         FileMgt.DeleteClientFile(TempClientFileName);
                                       END;
                                   TempProjPurActRec.MODIFY;
                                 END;

                                 IF gDocGroupRec."Template Directory" <> '' THEN
                                   TempProjPurActRec.OpenDocTemplate(gDocGroupRec."Template Directory")
                                 ELSE
                                   IF TempClientFileName <> '' THEN
                                     TempProjPurActRec.OpenDocTemplate(FileMgt.GetDirectoryName(TempClientFileName));
                               END;
                                }
      { 1100485001;2 ;Action    ;
                      CaptionML=[DEU=TemporÑre Vorlage lîschen;
                                 ENU=Remove Temporary Template;
                                 NLD=Tijdelijk sjabloon &verwijderen;
                                 NOR=Fjern midlertidig mal;
                                 SVE=Ta bort tillfÑllig mall];
                      Image=Delete;
                      OnAction=BEGIN
                                 IF TempProjPurActRec.FINDFIRST THEN
                                   TempProjPurActRec.DELETE;
                               END;
                                }
      { 1210190037;2 ;Action    ;
                      CaptionML=[DEU=ZusÑtzliche Belege erzeugen;
                                 ENU=Generate Documents;
                                 NLD=Genereren documenten;
                                 NOR=Generer dokument;
                                 SVE=Generera dokument];
                      Image=Word;
                      OnAction=VAR
                                 VendorsbyPurchaseAction@1100409001 : Record 11012068;
                                 Job@1100528300 : Record 11072003;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(VendorsbyPurchaseAction);
                                 IF NOT VendorsbyPurchaseAction.FINDSET THEN BEGIN
                                   MESSAGE(Text005);
                                 END ELSE BEGIN
                                   IF DocNo = '' THEN BEGIN
                                     ERROR(Text006);
                                   END;

                                   IF FileMgt.IsWindowsClient THEN BEGIN
                                     Job.GET(VendorsbyPurchaseAction."Project No.");
                                     IF (Job."Project Portal Project") THEN
                                       gvOptionNo := STRMENU(Text003, 2)
                                     ELSE
                                       gvOptionNo := STRMENU(Text003, 3);
                                     IF (gvOptionNo < 1) THEN BEGIN
                                       ERROR('');
                                     END;
                                   END ELSE
                                     gvOptionNo := 2;

                                   REPEAT
                                     IF (VendorsbyPurchaseAction.Type <> VendorsbyPurchaseAction.Type::Contact) THEN BEGIN
                                       ContactCde := GetContact(VendorsbyPurchaseAction."Vendor No.");
                                       IF ContactCde = '' THEN
                                         MESSAGE(Text007,VendorsbyPurchaseAction."Vendor No.");
                                     END ELSE BEGIN
                                       ContactCde := VendorsbyPurchaseAction."Vendor No.";
                                       IF ContactCde = '' THEN
                                         MESSAGE(Text010);
                                     END;
                                     IF ContactCde <> '' THEN
                                       CreateWordDoc(VendorsbyPurchaseAction);
                                   UNTIL VendorsbyPurchaseAction.NEXT = 0;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210190031;1;Group  ;
                CaptionML=[DEU=Belegfelder;
                           ENU=Document fields;
                           NLD=Documentvelden;
                           NOR=Dokumentfelt;
                           SVE=DokumentfÑlt] }

    { 1210190034;2;Field  ;
                CaptionML=[DEU=Beleggruppe;
                           ENU=Document Group;
                           NLD=Documentgroep;
                           NOR=Dokumentgruppen finnes ikke;
                           SVE=Dokumentgrupp];
                SourceExpr=DocGroup;
                OnValidate=BEGIN
                             ValidateDocumentGroup;
                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=VAR
                           DocGroupFrm@1210190000 : Page 11012400;
                         BEGIN
                           CLEAR(DocGroupFrm);
                           DocGroupFrm.LOOKUPMODE(TRUE);
                           IF DocGroupFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             DocGroupFrm.GETRECORD(DocGroupRec);
                             DocGroup := DocGroupRec.Code;
                             ValidateDocumentGroup;
                             CurrPage.UPDATE(FALSE);
                           END;
                         END;
                          }

    { 1210190026;2;Field  ;
                CaptionML=[DEU=Belegvorlage;
                           ENU=Document Template;
                           NLD=Documentsjabloon;
                           NOR=Dokumentmal;
                           SVE=Dokumentmall];
                SourceExpr=DocNo;
                OnValidate=VAR
                             lvDocPermissRec@1100485001 : Record 11012404;
                           BEGIN
                             IF DocNo = '' THEN
                               EXIT;

                             lvDocPermissRec.RESET;
                             lvDocPermissRec.SETRANGE("Document Group",DocGroup);
                             lvDocPermissRec.SETRANGE("Template Code",DocNo);
                             lvDocPermissRec.SETRANGE("User ID");
                             IF lvDocPermissRec.FIND('-') THEN BEGIN
                               lvDocPermissRec.SETRANGE("User ID",USERID);
                               IF NOT lvDocPermissRec.FIND('-') THEN
                                 ERROR(Text009);
                             END;

                             IF NOT TemplateExists THEN
                               ERROR(Text011);

                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=VAR
                           lvTemplateRec@1100485002 : Record 11012401;
                           TempTemplateRec@1100485005 : TEMPORARY Record 11012401;
                           lvAddTemplate@1100485003 : Boolean;
                           lvDocPermissRec@1100485004 : Record 11012404;
                         BEGIN
                           //CALL 11242: Lookup aangepast code gecopieerd vanuit tabel 11012403

                           lvTemplateRec.SETRANGE("Document Group",DocGroup);
                           lvTemplateRec.SETRANGE(Type,lvTemplateRec.Type::Miscellaneous);

                           IF lvTemplateRec.FINDFIRST THEN BEGIN
                             REPEAT
                               lvAddTemplate := FALSE;
                               lvDocPermissRec.SETRANGE("Document Group", lvTemplateRec."Document Group");
                               lvDocPermissRec.SETRANGE("Template Code", lvTemplateRec."Template Code");
                               lvDocPermissRec.SETRANGE("User ID");
                               IF NOT lvDocPermissRec.FINDFIRST THEN BEGIN
                                 //no permissions defined for any user, this means all have permissions
                                 lvAddTemplate := TRUE;
                               END ELSE BEGIN
                                 //there are permissions defined, check whether they are defined for the current user
                                 lvDocPermissRec.SETRANGE("User ID",USERID);
                                 IF lvDocPermissRec.FINDFIRST THEN
                                   lvAddTemplate := TRUE;
                               END;
                               IF lvAddTemplate THEN BEGIN
                                 TempTemplateRec.TRANSFERFIELDS(lvTemplateRec, TRUE);
                                 TempTemplateRec.INSERT;
                               END;
                             UNTIL lvTemplateRec.NEXT = 0;
                           END;

                           IF PAGE.RUNMODAL(PAGE::"Document Template List", TempTemplateRec) = ACTION::LookupOK THEN BEGIN
                             DocNo := TempTemplateRec."Template Code";
                             CurrPage.UPDATE(FALSE);
                           END;
                         END;
                          }

    { 1210190027;2;Field  ;
                CaptionML=[DEU=Beschreibung;
                           ENU=Description;
                           NLD=Omschrijving;
                           NOR=Beskrivelse;
                           SVE=Beskrivning];
                SourceExpr=DescTxt;
                OnValidate=BEGIN
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 1210190028;2;Field  ;
                CaptionML=[DEU=Betreff;
                           ENU=Subject;
                           NLD=Onderwerp;
                           NOR=Emne;
                           SVE=AngÜende];
                SourceExpr=SubjectTxt;
                OnValidate=BEGIN
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 1210190029;2;Field  ;
                CaptionML=[DEU=Absender;
                           ENU=Sender;
                           NLD=Afzender;
                           NOR=Avsender;
                           SVE=AvsÑndare];
                SourceExpr=SenderCde;
                OnValidate=VAR
                             EmplRec@1210190000 : Record 5200;
                             DocRec@1100485001 : Record 11012746;
                           BEGIN
                             EmplRec.GET(SenderCde);
                             NameTxt := EmplRec."Full Name";
                             DocRec.VALIDATE(Sender,EmplRec."No.");
                             DocRec.FillReference;
                             ReferenceTxt := DocRec.Reference;
                             CurrPage.UPDATE(FALSE);
                           END;

                OnLookup=VAR
                           EmplFrm@1210190000 : Page 5201;
                           EmplRec@1210190001 : Record 5200;
                           DocRec@1100485002 : Record 11012746;
                         BEGIN
                           CLEAR(EmplFrm);
                           EmplFrm.LOOKUPMODE(TRUE);
                           IF EmplFrm.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             EmplFrm.GETRECORD(EmplRec);
                             SenderCde := EmplRec."No.";
                             NameTxt := EmplRec."Full Name";
                             DocRec.VALIDATE(Sender,EmplRec."No.");
                             DocRec.FillReference;
                             ReferenceTxt := DocRec.Reference;
                             CurrPage.UPDATE(FALSE);
                           END;
                         END;
                          }

    { 1210190035;2;Field  ;
                CaptionClass=FORMAT (NameTxt);
                Editable=FALSE }

    { 1210190030;2;Field  ;
                CaptionML=[DEU=Referenz;
                           ENU=Reference;
                           NLD=Referentie;
                           NOR=Referanse;
                           SVE=Referens];
                SourceExpr=ReferenceTxt;
                OnValidate=BEGIN
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 1210190000;1;Group  ;
                GroupType=Repeater }

    { 1210190001;2;Field  ;
                SourceExpr="Purchase Action";
                Editable=FALSE }

    { 1100485002;2;Field  ;
                SourceExpr=Type }

    { 1210190003;2;Field  ;
                SourceExpr="Vendor No.";
                Editable=FALSE }

    { 1210190005;2;Field  ;
                DrillDown=No;
                SourceExpr="Vendor Name";
                Editable=FALSE }

    { 1210190007;2;Field  ;
                DrillDown=No;
                SourceExpr=Address;
                Editable=FALSE }

    { 1210190009;2;Field  ;
                DrillDown=No;
                SourceExpr=City;
                Editable=FALSE }

    { 1210190011;2;Field  ;
                DrillDown=No;
                SourceExpr="Phone No.";
                Editable=FALSE }

    { 1210190013;2;Field  ;
                DrillDown=No;
                SourceExpr="Post Code";
                Editable=FALSE }

    { 1210190015;2;Field  ;
                SourceExpr=Contact;
                Editable=FALSE }

    { 1100528300;2;Field  ;
                SourceExpr="Last Generated Document No." }

  }
  CODE
  {
    VAR
      gDocGroupRec@1100485011 : Record 11012400;
      gDocTemplateRec@1100485005 : Record 11012401;
      TempDocTemplateRec@1100485004 : TEMPORARY Record 11012401;
      TempProjPurActRec@1100485010 : TEMPORARY Record 11012026;
      DocGroupRec@1100485012 : Record 11012400;
      FileMgt@1100525001 : Codeunit 419;
      gProjCde@1100485007 : Code[20];
      gEstCde@1210190002 : Code[20];
      gPurchActCde@1210190001 : Code[20];
      DocNo@1210190007 : Code[20];
      SenderCde@1100485001 : Code[20];
      ContactCde@1100485003 : Code[20];
      DocGroup@1100485002 : Code[20];
      DescTxt@1210190006 : Text[50];
      SubjectTxt@1210190005 : Text[50];
      ReferenceTxt@1210190003 : Text[30];
      NameTxt@1210190013 : Text[100];
      gvOptionNo@1210190017 : Integer;
      Text001@1100528710 : TextConst 'DEU=WÑhlen Sie zuerst die Dokumentgruppe und die Dokumentvorlage.;ENU=Select first document group en doument template.;NLD=Selecteer eerst documentgroep en documentsjabloon.;NOR=Velg fõrst dokumentgruppe for dokumentmal.;SVE=VÑlj fîrst dokumentgrupp fîr dokumentmall.';
      Text002@1100528709 : TextConst 'DEU=Mit der ausgewÑhlten Vorlage wurde kein Word-Dokument (.dot-Datei) verbunden;ENU=No worddocument linked to the selected template;NLD=Aan het geselecteerde sjabloon is geen worddocument (.dot bestand) gekoppeld;NOR=Ingen Word-dokumenter er koblet til den valgte malen;SVE=Inget Word-dokument har lÑnkats till den valda mallen';
      Text003@1100528708 : TextConst 'DEU=Anfragen,Anfragen + Word-Dokumente,Anfragen + Drucken Word-Dokumente,Anfragen + Drucken Word-Dokumente mit Druckerauswahl;ENU=Documents,Documents + Word documents,Documents + Print Word Documents,Documents + Print Word Documents with printer selection;NLD="Documenten,Documenten + Word documenten,Documenten + Word documenten printen,Documenten + Word documenten printen met printerselectie ";SVE=Offerter,Offerter + Word-dokument,Offerter + Skriv ut Word-dokument,Offerter + Skriv ut Word-dokument med skrivarval';
      Text005@1100528707 : TextConst 'DEU=Zuerst DatensÑtze auswÑhlen;ENU="First Select Records ";NLD=Selecteer eerst records;NOR=Marker poster fõrst;SVE="Markera fîrst poster "';
      Text006@1100528706 : TextConst 'DEU=Geben Sie zuerst die Dokumentvorlage ein.;ENU=First enter document template.;NLD=Geef eerst documentsjabloon in.;NOR=Angi fõrst dokumentmal.;SVE=Ange fîrst dokumentmall.';
      Text007@1100528705 : TextConst 'DEU=FÅr Kreditoren %1 ist kein Kontakt vorhanden;ENU=Vendor %1 is not related to Contact;NLD=Voor leverancier %1 is geen relatie aanwezig;NOR=Leverandõr %1 er ikke relatert til kontakt;SVE=Leverantîr %1 Ñr inte relaterad till kontakt';
      Text009@1100528703 : TextConst 'DEU=Keine Berechtigung fÅr Dokumentvorlage.;ENU=No permission for document template.;NLD=Geen permissie voor documentsjabloon.;NOR=Ingen tillatelse for dokumentmal;SVE=Ingen behîrighet fîr dokumentmall';
      Text010@1100528702 : TextConst 'DEU=Kontakt muss eingegeben sein.;ENU=Contact must be filled.;NLD=Relatie moet gevuld zijn.;NOR=Kontakt mÜ fylles ut.;SVE=Kontakt mÜste fyllas i.';
      Text011@1100528701 : TextConst 'DEU=Nicht existierende Dokumentvorlage.;ENU=Non existing document template.;NLD=Documentsjabloon bestaat niet.;NOR=Ikke-eksisterende dokumentmal;SVE=Obefintlig dokumentmall';
      Text012@1100528700 : TextConst 'DEU=Kontakt %1 - %2 ist gesperrt. Es kînnen keine Belege erstellt werden.;ENU=Contact %1 - %2 is blocked. No Document is made.;NLD=Relatie %1 - %2 is geblokkeerd. Er is geen document aangemaakt.;NOR=Kontakt %1 Õ %2 er blokker. Ingen dokumenter er opprettet.;SVE=Kontakt %1 Õ %2 Ñr blockerad. Inget dokument har skapats.';

    PROCEDURE SetFilter@1210190000(lProjCde@1210190000 : Code[20];lEstCde@1100485000 : Code[20];lPurchActCde@1210190001 : Code[20]);
    BEGIN
      gProjCde := lProjCde;
      gEstCde := lEstCde;
      gPurchActCde := lPurchActCde;
    END;

    PROCEDURE GetContact@1210190002(lVendorCde@1210190001 : Code[20]) RelationCde : Code[20];
    VAR
      ContBusRelRec@1210190000 : Record 5054;
    BEGIN
      ContBusRelRec.SETCURRENTKEY("Link to Table","No.");
      ContBusRelRec.SETRANGE("No.",lVendorCde);
      ContBusRelRec.SETRANGE("Link to Table",ContBusRelRec."Link to Table"::Vendor);
      IF ContBusRelRec.FIND('-') THEN
        EXIT(ContBusRelRec."Contact No.")
      ELSE
        EXIT('');
    END;

    PROCEDURE CreateWordDoc@1210190007(VendorsbyPurchaseAction@1100409000 : Record 11012068);
    VAR
      DocumentProperties@1210190000 : Record 11012746;
      ProjectPurchaseAction@1210190001 : Record 11012026;
      DocumentGroup@1100485001 : Record 11012400;
      DocumentTemplate@1210190003 : Record 11012401;
      lTempDocRel@1210190004 : Record 11020230;
      DocumentRelation@1210190005 : Record 11012407;
      Job@1100525001 : Record 11072003;
      DocumentLinkMgt@1100525004 : Codeunit 11012401;
      lCduWordInterface@1100485000 : Codeunit 11012406;
      lFileName@1100485002 : Text[250];
      ShortFileName@1100525005 : Text[250];
      TemporaryTemplateDirectory@1100528700 : Text;
      RecRef@1100525002 : RecordRef;
      DocLinkRID@1100525003 : ARRAY [5] OF RecordID;
    BEGIN
      IF ContactBlocked(ContactCde) THEN BEGIN
        MESSAGE(Text012, ContactCde);
        EXIT;
      END;

      IF ProjectPurchaseAction.GET(VendorsbyPurchaseAction."Project No.",
        VendorsbyPurchaseAction."Purchase Action") THEN
      BEGIN
        RecRef.GETTABLE(ProjectPurchaseAction);
        DocLinkRID[1] := RecRef.RECORDID;
      END;

      IF Job.GET(VendorsbyPurchaseAction."Project No.") THEN BEGIN
        RecRef.GETTABLE(Job);
        DocLinkRID[2] := RecRef.RECORDID;
      END;

      DocumentProperties.INIT;
      DocumentProperties.INSERT(TRUE);
      DocumentProperties.VALIDATE("Contact No.", ContactCde);
      DocumentProperties.VALIDATE("Contact Person No.", VendorsbyPurchaseAction."Contact Person No.");
      DocumentProperties.VALIDATE("Document Group", DocGroup);
      DocumentProperties.VALIDATE("Document Template", DocNo);
      DocumentProperties.Description := DescTxt;
      DocumentProperties.VALIDATE(Sender, SenderCde);
      DocumentProperties.Subject := SubjectTxt;
      IF ReferenceTxt <> '' THEN
        DocumentProperties.Reference := ReferenceTxt;
      ProjectPurchaseAction.GET(VendorsbyPurchaseAction."Project No.",VendorsbyPurchaseAction."Purchase Action");
      DocumentProperties.MODIFY;

      // Create Document Links
      DocumentLinkMgt.CreateDocumentLink(DocumentProperties, DocLinkRID);

      VendorsbyPurchaseAction."Last Generated Document No." := DocumentProperties."No.";
      VendorsbyPurchaseAction.MODIFY;

      lTempDocRel.SETRANGE("User ID",USERID);
      lTempDocRel.SETRANGE("Project No.",VendorsbyPurchaseAction."Project No.");
      IF lTempDocRel.FIND('-') THEN BEGIN
        REPEAT
          DocumentRelation.INIT;
          DocumentRelation."Document Type" := DocumentRelation."Document Type"::Document;
          DocumentRelation."No." := DocumentProperties."No.";
          DocumentRelation."Related Document No."  :=  lTempDocRel."Related Document No.";
          DocumentRelation.Description := lTempDocRel.Description;
          DocumentRelation."Description 2" := lTempDocRel."Description 2";
          DocumentRelation."Send by E-Mail" := FALSE;
          DocumentRelation.Print := FALSE;
          DocumentRelation.INSERT;
        UNTIL lTempDocRel.NEXT = 0;
      END;

      COMMIT;  //Call C-009699 - Nummerreeks-tabel blijft anders te lang gelockt.

      CLEAR(lCduWordInterface);
      CLEAR(DocumentTemplate);
      lFileName := '';
      IF DocumentTemplate.GET(DocGroup,DocNo) THEN BEGIN
        //DocumentTemplate."No." := DocumentProperties."No.";
        //DocumentTemplate.Prospect := DocumentProperties."Contact No.";
        DocumentTemplate.Type := DocumentTemplate.Type::Miscellaneous;
        DocumentTemplate."Secured Document" := DocumentTemplate."Secured Document"::"Not";
        IF TempProjPurActRec.FINDFIRST THEN BEGIN
          DocumentGroup.GET(DocGroup);
          IF (DocumentGroup."Template Directory" = '') AND
             (DocumentGroup."Doc. Service Template Subdir." <> '')
          THEN BEGIN
            DocumentGroup."Template Directory" := FileMgt.ClientTempFolderName;
            TemporaryTemplateDirectory := DocumentGroup."Template Directory";
          END;
          TempProjPurActRec.CALCFIELDS("Document Fysical Template");
          IF TempProjPurActRec."Document Fysical Template".HASVALUE THEN BEGIN
            TempProjPurActRec.GetUniqueFilename(
              DocumentGroup."Template Directory",
              lFileName,
              ShortFileName);
            TempProjPurActRec.ExportDocTemplate(lFileName);

            IF NOT FileMgt.ClientFileExists(lFileName) THEN
              lFileName := '';
          END;
        END;
        IF lFileName <> '' THEN BEGIN
          DocumentTemplate."Word Template" := ShortFileName;
          DocumentTemplate."Document Service URL" := '';
          lCduWordInterface.SetTemporaryTemplateDirectory(TemporaryTemplateDirectory);
          lCduWordInterface.GenerateDoc(
                  DocumentTemplate,
                  DocLinkRID,
                  '',
                  DocumentProperties."No.",
                  DocumentProperties."Contact No.",
                  DocumentProperties."Contact Person No.",
                  '',
                  FALSE,
                  FALSE);

          TempProjPurActRec.DeleteFile(lFileName);
        END ELSE
          lCduWordInterface.GenerateDoc(DocumentTemplate,
                                        DocLinkRID,
                                        '',
                                        DocumentProperties."No.",
                                        DocumentProperties."Contact No.",
                                        DocumentProperties."Contact Person No.",
                                        '',
                                        FALSE, FALSE);

      END;
      DocumentProperties.GET(DocumentProperties."No.");
      IF (DocumentProperties.File <> '') OR
         (DocumentProperties."Document Service URL" <> '')
      THEN BEGIN
        PrintWordDoc(DocumentProperties);
        TempProjPurActRec.DeleteFile(lFileName);
      END;
    END;

    PROCEDURE PrintWordDoc@1210190009(DocumentProperties@1210190000 : Record 11012746);
    VAR
      lCduWord@1210190002 : Codeunit 11012400;
      FileManagement@1100528400 : Codeunit 419;
      lrecSavedDocument@1210190003 : Record 11012746;
      ClientFileName@1100527800 : Text;
    BEGIN
      lrecSavedDocument.GET(DocumentProperties."No.");
      IF gvOptionNo > 2 THEN BEGIN
        lrecSavedDocument.WriteContentToClient(ClientFileName);
        lCduWord.InitialiseForPrinting;
        CASE gvOptionNo OF
          3:
            lCduWord.Print(ClientFileName);
          4:
            lCduWord.PrintWithPrinterSelection(ClientFileName);
         END;
         lCduWord.TerminateAfterPrinting;
         FileManagement.DeleteClientFile(ClientFileName);
      END;
    END;

    PROCEDURE ContactBlocked@1100525000(ContactNo@1100525000 : Code[20]) : Boolean;
    VAR
      Contact@1100525001 : Record 5050;
    BEGIN
      Contact.GET(ContactNo);
      EXIT(Contact.Blocked);
    END;

    PROCEDURE ValidateDocumentGroup@1100528701();
    BEGIN
      DocGroupRec.GET(DocGroup);

      IF NOT TemplateExists THEN
        DocNo := '';
    END;

    PROCEDURE TemplateExists@1100528700() : Boolean;
    VAR
      DocumentTemplate@1100528700 : Record 11012401;
    BEGIN
      DocumentTemplate.SETRANGE("Document Group", DocGroup);
      DocumentTemplate.SETRANGE("Template Code", DocNo);
      DocumentTemplate.SETRANGE(Type, DocumentTemplate.Type::Miscellaneous);
      EXIT(DocumentTemplate.FINDFIRST);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      CalcFieldsVendor();
    END;

    BEGIN
    {
      db, 19-06-16: page 11020261 (PurchAction) <-> page 11126673 (Requisition)
    }
    END.
  }
}

