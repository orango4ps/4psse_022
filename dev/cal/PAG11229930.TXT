OBJECT Page 11229930 Bing Maps Service Order
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Bing Maps-Serviceauftrag;
               ENU=Bing Maps Service Order;
               NLD=Bing Maps service order];
    SourceTable=Table11012823;
    OnInit=BEGIN
             ServiceOrderTableIDText := FORMAT(DATABASE::"Service Order");
             ServiceObjectTableIDText := FORMAT(DATABASE::"Service-Object");
             ServiceOrderTableIDInt := DATABASE::"Service Order";
             ServiceObjectTableIDInt := DATABASE::"Service-Object";
           END;

  }
  CONTROLS
  {
    { 1100525000;;Container;
                Name=Container;
                CaptionML=[DEU=Container;
                           ENU=Container;
                           NLD=Container;
                           NOR=Container;
                           SVE=Beh†llare];
                ContainerType=ContentArea }

    { 1100525001;1;Field  ;
                Name=Map;
                CaptionML=[DEU=Karte;
                           ENU=Map;
                           NLD=Kaart];
                ControlAddIn=[Fps.Nav.Addin.BingMaps;PublicKeyToken=024bd013665211e9] }

  }
  CODE
  {
    VAR
      BingMapsHandler@1100525000 : Codeunit 11012485;
      ServiceOrderTableIDText@1100525001 : Text;
      ServiceObjectTableIDText@1100525002 : Text[30];
      Text001@1100525003 : TextConst 'DEU=Bing Maps konfigurieren.;ENU=Configure Bing Maps.;NLD=Stel Bing Maps in.';
      ServiceOrderTableIDInt@1100525004 : Integer;
      ServiceObjectTableIDInt@1100525005 : Integer;

    PROCEDURE SetServiceOrder@1100525000(record@1100525000 : Record 11012823);
    BEGIN
      Rec := record;
    END;

    LOCAL PROCEDURE addObjectPinToMap@1100525003(ServiceObject@1100525000 : Record 11071691);
    VAR
      descriptionValue@1100525002 : Text;
      titleValue@1100525001 : Text;
      ReturnType@1100525003 : 'NAV,FSA';
    BEGIN
      titleValue := BingMapsHandler.GetValueFromField(ServiceObject.RECORDID, ServiceObjectTableIDInt,
                      BingMapsHandler.GetFieldIDForTitle(ServiceObjectTableIDInt, ReturnType::NAV));
      descriptionValue := BingMapsHandler.BuildDescription(ServiceObject.RECORDID, ServiceObjectTableIDInt, ReturnType::NAV);
      ServiceObject.CALCFIELDS("Location Country/Region Code", "Location Address", "Location City", "Location Post Code");
      IF (ServiceObject.Latitude <> '') AND (ServiceObject.Longitude <> '') THEN
          CurrPage.Map.addPinToMapLatLng(ServiceObject."No.", titleValue, ServiceObjectTableIDText, descriptionValue, BingMapsHandler.GetColour(Rec),
          ServiceObject.Latitude, ServiceObject.Longitude)
      ELSE
        CurrPage.Map.addPinToMapCode(ServiceObject."No.", titleValue, ServiceObjectTableIDText, descriptionValue, BingMapsHandler.GetColour(Rec),
        ServiceObject."Location Country/Region Code" + ' ' + ServiceObject."Location City" + ' ' +
        ServiceObject."Location Address")
    END;

    LOCAL PROCEDURE handleMapLoaded@1100525005();
    VAR
      ServiceOrderObject@1100525003 : Record 11071724;
      ServiceObject@1100525002 : Record 11071691;
      ServiceOrderExtension@1100525000 : Record 11071727;
    BEGIN
      ServiceOrderObject.SETFILTER("Service Order No.", "No.");
      IF ServiceOrderObject.FINDSET THEN
        REPEAT
          ServiceObject.GET(ServiceOrderObject."Object No.");
          addObjectPinToMap(ServiceObject);
        UNTIL ServiceOrderObject.NEXT = 0;
      IF ServiceOrderExtension.GET("No.") THEN
        IF (ServiceOrderExtension.Latitude <> '') AND (ServiceOrderExtension.Longitude <> '') THEN
          addLocationPinToMap(ServiceOrderExtension.Latitude, ServiceOrderExtension.Longitude);
    END;

    LOCAL PROCEDURE addLocationPinToMap@1100525001(Latitude@1100525000 : Code[20];Longitude@1100525003 : Code[20]);
    VAR
      titleValue@1100525001 : Text;
      descriptionValue@1100525002 : Text;
      ReturnType@1100525004 : 'NAV,FSA';
    BEGIN
      titleValue := BingMapsHandler.GetValueFromField(RECORDID, ServiceOrderTableIDInt,
                      BingMapsHandler.GetFieldIDForTitle(ServiceOrderTableIDInt, ReturnType::NAV));
      descriptionValue := BingMapsHandler.BuildDescription(RECORDID, ServiceOrderTableIDInt, ReturnType::NAV);
      CurrPage.Map.addPinToMapLatLng("No.", titleValue, ServiceOrderTableIDText, descriptionValue, BingMapsHandler.GetColour(Rec),
      Latitude, Longitude)
    END;

    EVENT Map@-1100525001::ControlAddInReady@20();
    VAR
      BingMapsSetup@1100525000 : Page 11127140;
    BEGIN
      IF BingMapsHandler.SetupIsDoneAndEnabled THEN
        CurrPage.Map.setApiKey(BingMapsHandler.GetApiKey(CurrPage.OBJECTID(FALSE)))
      ELSE
        BEGIN
          MESSAGE(Text001);
          BingMapsSetup.RUN;
          CurrPage.CLOSE;
        END;
    END;

    EVENT Map@-1100525001::MapLoaded@21();
    BEGIN
      CurrPage.Map.setExtraAction('Open');
      CurrPage.Map.allowActionForType('Open', ServiceObjectTableIDText);
      IF BingMapsHandler.DisplayAsPin(ServiceOrderTableIDInt) THEN
        CurrPage.Map.displayAsPin(ServiceOrderTableIDText);
      IF BingMapsHandler.DisplayAsPin(ServiceObjectTableIDInt) THEN
        CurrPage.Map.displayAsPin(ServiceObjectTableIDText);
      handleMapLoaded;
    END;

    EVENT Map@-1100525001::PinAdded@22(no@1100525001 : Text;type@1100525000 : Text);
    BEGIN
      CurrPage.Map.setBestView;
    END;

    EVENT Map@-1100525001::AddLocationToSelection@23(no@1100525001 : Text;type@1100525000 : Text);
    BEGIN
    END;

    EVENT Map@-1100525001::RemoveLocationFromSelection@24(no@1100525001 : Text;type@1100525000 : Text);
    BEGIN
    END;

    EVENT Map@-1100525001::DirectionsReady@25(distance@1100525001 : Text;time@1100525000 : Text);
    BEGIN
    END;

    EVENT Map@-1100525001::DirectionsError@26();
    BEGIN
    END;

    EVENT Map@-1100525001::LocationUpdated@27(no@1100525003 : Text;type@1100525002 : Text;lat@1100525001 : Text;lng@1100525000 : Text);
    BEGIN
    END;

    EVENT Map@-1100525001::LocationAdded@28(no@1100525003 : Text;type@1100525002 : Text;lat@1100525001 : Text;lng@1100525000 : Text);
    BEGIN
    END;

    EVENT Map@-1100525001::LocationRemoved@29(no@1100525001 : Text;type@1100525000 : Text);
    BEGIN
    END;

    EVENT Map@-1100525001::ExtraAction@30(action@1100525002 : Text;no@1100525001 : Text;type@1100525000 : Text);
    VAR
      TableIDInteger@1100525003 : Integer;
    BEGIN
      IF action = 'Open' THEN BEGIN
        EVALUATE(TableIDInteger, type);
        BingMapsHandler.OpenCard(no, TableIDInteger);
      END;
    END;

    EVENT Map@-1100525001::ZoomLevel@31(level@1100525000 : Text);
    BEGIN
    END;

    EVENT Map@-1100525001::RegisterEvent@32(no@1100528102 : Text;type@1100528101 : Text;eventname@1100528100 : Text);
    BEGIN
      BingMapsHandler.WriteToBingMapsLogUsingQuery(no, CurrPage.OBJECTID(FALSE), eventname, type);
    END;

    BEGIN
    END.
  }
}

