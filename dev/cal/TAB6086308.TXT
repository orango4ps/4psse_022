OBJECT Table 6086308 EM Attendee
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=EMW16.00.10.3.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Name,Company Name;
    OnInsert=BEGIN
               TESTFIELD(Name);
               TestNotPosted;

               IF "Entry No." = 0 THEN
                 "Entry No." := GetNextEntryNo;
             END;

    OnModify=BEGIN
               TestNotPosted;
             END;

    OnDelete=BEGIN
               TestNotPosted;
             END;

    OnRename=BEGIN
               TestNotPosted;
             END;

    CaptionML=[DEU=Teilnehmer;
               ENU=Attendee;
               NLD=Deelnemer];
    LookupPageID=Page6086325;
    DrillDownPageID=Page6086325;
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;CaptionML=[DEU=Tabellen-ID;
                                                              ENU=Table ID;
                                                              NLD=Tabel-id;
                                                              SVE=Tabell-ID] }
    { 2   ;   ;Doc. Ref. No.       ;Integer       ;TableRelation=IF (Table ID=CONST(6086320)) Expense
                                                                 ELSE IF (Table ID=CONST(6086338)) Mileage;
                                                   CaptionML=[DEU=Bel. Referenznr.;
                                                              ENU=Doc. Ref. No.;
                                                              NLD=Doc. Ref. nr.] }
    { 3   ;   ;Entry No.           ;Integer       ;CaptionML=[DEU=Lfd. Nr.;
                                                              ENU=Entry No.;
                                                              NLD=Volgnr.;
                                                              SVE=L”pnr] }
    { 10  ;   ;Type                ;Option        ;CaptionML=[DEU=Art;
                                                              ENU=Type;
                                                              NLD=Type;
                                                              SVE=Typ];
                                                   OptionCaptionML=[DEU=Mitarbeiter,Gast;
                                                                    ENU=Employee,Guest;
                                                                    NLD=Werknemer,Gast];
                                                   OptionString=Employee,Guest }
    { 20  ;   ;Name                ;Text50        ;CaptionML=[DEU=Name;
                                                              ENU=Name;
                                                              NLD=Naam;
                                                              SVE=Namn];
                                                   NotBlank=Yes }
    { 30  ;   ;Company Name        ;Text50        ;CaptionML=[DEU=Mandantenname;
                                                              ENU=Company Name;
                                                              NLD=Bedrijfsnaam;
                                                              SVE=f”retagsnamn] }
  }
  KEYS
  {
    {    ;Table ID,Doc. Ref. No.,Entry No.        ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      MultipleEmployees@1160040002 : TextConst 'DEU=%1 Mitarbeiter;ENU=%1 Employees;NLD=%1 werknemers';
      MultipleGuests@1160040000 : TextConst 'DEU=%1 G„ste;ENU=%1 Guests;NLD=%1 gasten';
      SingleEmployee@1160040003 : TextConst 'DEU=%1 Mitarbeiter;ENU=%1 Employee;NLD=%1 werknemer';
      SingleGuest@1160040001 : TextConst 'DEU=%1 Gast;ENU=%1 Guest;NLD=%1 gast';

    LOCAL PROCEDURE TestNotPosted@37();
    VAR
      Expense@1160040000 : Record 6086320;
      ExpAllocation@1160040002 : Record 6086321;
      Mileage@1160040001 : Record 6086338;
    BEGIN
      CASE "Table ID" OF
        DATABASE::Expense:
          BEGIN
            Expense.GET("Doc. Ref. No.");
            Expense.TESTFIELD(Posted,FALSE);
          END;
        DATABASE::Mileage:
          BEGIN
            Mileage.GET("Doc. Ref. No.");
            Mileage.TESTFIELD(Posted,FALSE);
          END;
        DATABASE::"Expense Allocation":
          BEGIN
            ExpAllocation.GET("Doc. Ref. No.");
            Expense.GET(ExpAllocation."Expense Entry No.");
            Expense.TESTFIELD(Posted,FALSE);
          END;
      END;
    END;

    LOCAL PROCEDURE GetNextEntryNo@1160040001() : Integer;
    VAR
      ExpenseAttendee@1160040000 : Record 6086308;
    BEGIN
      ExpenseAttendee.SETRANGE("Table ID","Table ID");
      ExpenseAttendee.SETRANGE("Doc. Ref. No.","Doc. Ref. No.");
      IF ExpenseAttendee.FINDLAST THEN
        EXIT(ExpenseAttendee."Entry No." + 1)
      ELSE
        EXIT(1);
    END;

    PROCEDURE AttendeesUpdated@1160040002(VAR EMAttendee@1160040000 : Record 6086308;DocRefNo@1160040005 : Integer;TableNo@1160040002 : Integer) : Boolean;
    VAR
      xEMAttendee@1160040001 : Record 6086308;
    BEGIN
      EMAttendee.SETRANGE("Table ID",TableNo);
      EMAttendee.SETRANGE("Doc. Ref. No.",DocRefNo);

      xEMAttendee.SETRANGE("Table ID",TableNo);
      xEMAttendee.SETRANGE("Doc. Ref. No.",DocRefNo);

      IF EMAttendee.FINDSET THEN
        REPEAT
          IF NOT xEMAttendee.GET(TableNo,EMAttendee."Doc. Ref. No.",EMAttendee."Entry No.") THEN
            EXIT(TRUE);

          IF (EMAttendee.Type <> xEMAttendee.Type) OR
             (EMAttendee.Name <> xEMAttendee.Name) OR
             (EMAttendee."Company Name" <> xEMAttendee."Company Name")
          THEN
            EXIT(TRUE);
        UNTIL EMAttendee.NEXT = 0;

      IF xEMAttendee.FINDSET THEN
        REPEAT
          IF NOT EMAttendee.GET(TableNo,xEMAttendee."Doc. Ref. No.",xEMAttendee."Entry No.") THEN
            EXIT(TRUE);
        UNTIL xEMAttendee.NEXT = 0;
    END;

    PROCEDURE GetAttendeesForDisplay@1160040000(TableID@1160040000 : Integer;DocRefNo@1160040001 : Integer) DisplayTxt : Text[150];
    VAR
      ExpAttendee@1160040002 : Record 6086308;
      NoOfEmployees@1160040003 : Integer;
      NoOfGuests@1160040004 : Integer;
    BEGIN
      ExpAttendee.SETRANGE("Table ID",TableID);
      ExpAttendee.SETRANGE("Doc. Ref. No.",DocRefNo);
      CASE ExpAttendee.COUNT OF
        0:
          EXIT;

        1:
          BEGIN
            ExpAttendee.FINDFIRST;
            IF ExpAttendee.Name <> '' THEN
              EXIT(STRSUBSTNO('%1 (%2)',ExpAttendee.Name,ExpAttendee.Type))
            ELSE
              EXIT(STRSUBSTNO('%1 (%2)',ExpAttendee."Company Name",ExpAttendee.Type));
          END;

        ELSE BEGIN
          ExpAttendee.SETRANGE(Type,ExpAttendee.Type::Employee);
          NoOfEmployees := ExpAttendee.COUNT;
          ExpAttendee.SETRANGE(Type,ExpAttendee.Type::Guest);
          NoOfGuests := ExpAttendee.COUNT;

          IF NoOfEmployees > 1 THEN
            DisplayTxt := STRSUBSTNO(MultipleEmployees,NoOfEmployees)
          ELSE
            IF NoOfEmployees = 1 THEN
              DisplayTxt := STRSUBSTNO(SingleEmployee,NoOfEmployees);

          IF (NoOfEmployees > 0) AND (NoOfGuests > 0) THEN
            DisplayTxt := DisplayTxt + ', ';

          IF NoOfGuests > 1 THEN
            DisplayTxt := DisplayTxt + STRSUBSTNO(MultipleGuests,NoOfGuests)
          ELSE
            IF NoOfGuests = 1 THEN
              DisplayTxt := DisplayTxt + STRSUBSTNO(SingleGuest,NoOfGuests);

        END;
      END;
    END;

    BEGIN
    END.
  }
}

