OBJECT Report 88 VAT- VIES Declaration Disk
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.01,4PSSE,NAVDK.NO;
  }
  PROPERTIES
  {
    Permissions=TableData 254=imd;
    CaptionML=[ENU=VAT- VIES Declaration Disk;
               NOR=EU-mva. - brukes ikke i Norge;
               SVE=Moms-/kvartalredov. disk];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  FileName := FileManagement.ServerTempFileName('txt');

                  Filler := ',';//NAVDK
                  //4PSSE
                  GLSetup.GET;
                  DKinfoEnable := GLSetup."Danish Localization Active";
                END;

    OnPostReport=BEGIN
                   IF NOT HideFileDialog THEN BEGIN
                     FileManagement.DownloadHandler(FileName ,'','',FileManagement.GetToFilterText('',FileName),ToFileNameTxt);
                     FileManagement.DeleteServerFile(FileName);
                   END
                 END;

  }
  DATASET
  {
    { 7612;    ;DataItem;                    ;
               DataItemTable=Table254;
               DataItemTableView=SORTING(Type,Country/Region Code,VAT Registration No.,VAT Bus. Posting Group,VAT Prod. Posting Group,Posting Date)
                                 WHERE(Type=CONST(Sale));
               OnPreDataItem=BEGIN
                               CLEAR(VATFile);
                               VATFile.TEXTMODE := TRUE;
                               VATFile.WRITEMODE := TRUE;
                               VATFile.CREATE(FileName);

                               CompanyInfo.GET;
                               GeneralLedgerSetup.GET;
                               IF NOT DKinfoEnable THEN BEGIN
                                 VATRegNo := CONVERTSTR(CompanyInfo."VAT Registration No.",Text001,'    ');
                                 VATFile.WRITE(FORMAT('00' + FORMAT(VATRegNo,8) + Text002,80));
                                 VATFile.WRITE(FORMAT('0100001',80));
                               END ELSE BEGIN
                                 VATRegNo := DeleteCountryPrefix(CompanyInfo."VAT Registration No.",CompanyInfo."Country/Region Code");
                                 VATRegNo := CONVERTSTR(VATRegNo,Text001,'    ');
                                 WriteToFile(AddFiller('0') + AddFiller(FORMAT(VATRegNo,8)) + AddFiller(Text002) +
                                   AddFiller('') + AddFiller('') + AddFiller('') + AddFiller('') + AddFiller(''));
                               END;

                               NoOfGrTotal := 0;
                               Period := GETRANGEMAX("Posting Date");
                               InternalReferenceNo := FORMAT(Period,4,2) + '000000';
                               //NAVDK
                               CurrReport.CREATETOTALS(TotalValueofItemSupplies,TotalValueofServiceSupplies,EU3PartyItemTradeAmt);
                               TotalValueofItemSuppliesTot := 0;
                               EU3PartyItemTradeAmtTot := 0;
                               TotalValueofServiceSuppliesTot := 0;
                             END;

               OnAfterGetRecord=VAR
                                  VATEntry@1001 : Record 254;
                                  TotalValueOfItemSupplies@1003 : Decimal;
                                  TotalValueOfServiceSupplies@1002 : Decimal;
                                  GroupTotal@1000 : Boolean;
                                BEGIN
                                  IF "EU Service" THEN BEGIN
                                    IF UseAmtsInAddCurr THEN
                                      TotalValueOfServiceSupplies := "Additional-Currency Base"
                                    ELSE
                                      TotalValueOfServiceSupplies := Base
                                  END ELSE
                                    IF UseAmtsInAddCurr THEN
                                      TotalValueOfItemSupplies := "Additional-Currency Base"
                                    ELSE
                                      TotalValueOfItemSupplies := Base;

                                  IF "EU 3-Party Trade" THEN BEGIN
                                    EU3PartyItemTradeAmt := EU3PartyItemTradeAmt + TotalValueOfItemSupplies;
                                    EU3PartyServiceTradeAmt := EU3PartyServiceTradeAmt + TotalValueOfServiceSupplies;
                                  END;
                                  TotalValueofItemSuppliesTotal += TotalValueOfItemSupplies;
                                  TotalValueofServiceSuppliesTot += TotalValueOfServiceSupplies;
                                  //>>NAVDK
                                  SalesToItemGrTotal += TotalValueOfItemSupplies;
                                  SalesTo3PartyGrTotal += EU3PartyItemTradeAmt;
                                  SalesToServicesGrTotal += TotalValueOfServiceSupplies;
                                  //<<NAVDK

                                  VATEntry.COPY("VAT Entry");
                                  IF VATEntry.NEXT = 1 THEN BEGIN
                                    IF (VATEntry."Country/Region Code" <> "Country/Region Code") OR
                                       (VATEntry."VAT Registration No." <> "VAT Registration No.")
                                    THEN
                                      GroupTotal := TRUE;
                                  END ELSE
                                    GroupTotal := TRUE;

                                  IF GroupTotal THEN BEGIN
                                    //>>NAVDK
                                    IF DKinfoEnable THEN BEGIN
                                      WriteGrTotalsToFileDK(SalesToItemGrTotal,SalesTo3PartyGrTotal,SalesToServicesGrTotal);
                                    END ELSE
                                    //<<NAVDK
                                      WriteGrTotalsToFile(TotalValueofServiceSuppliesTot,TotalValueofItemSuppliesTotal,
                                        EU3PartyServiceTradeAmt,EU3PartyItemTradeAmt);
                                    EU3PartyItemTradeTotalAmt += EU3PartyItemTradeAmt;
                                    EU3PartyServiceTradeTotalAmt += EU3PartyServiceTradeAmt;

                                    TotalValueofItemSuppliesTotal := 0;
                                    TotalValueofServiceSuppliesTot := 0;

                                    EU3PartyItemTradeAmt := 0;
                                    EU3PartyServiceTradeAmt := 0;
                                    //>>NAVDK
                                    EU3PartyTradeTotalAmt += SalesTo3PartyGrTotal;
                                    ServicesTotalAmt += SalesToServicesGrTotal;
                                    SalesToItemGrTotal := 0;
                                    SalesToServicesGrTotal := 0;
                                    SalesTo3PartyGrTotal := 0;
                                    //<<NAVDK

                                  END;
                                END;

               OnPostDataItem=BEGIN
                                //>>NAVDK
                                IF DKinfoEnable THEN BEGIN
                                        WriteToFile(
                                          AddFiller('10') +
                                          AddFiller(DecimalNumeralFormat(NoOfGrTotal,9)) +
                                          AddFiller(DecimalNumeralSign(-(TotalValueofItemSuppliesTot + TotalValueofServiceSuppliesTot + EU3PartyItemTradeAmtTot)) +
                                            DecimalNumeralFormat(TotalValueofItemSuppliesTot + TotalValueofServiceSuppliesTot + EU3PartyItemTradeAmtTot,15)) +
                                          AddFiller('') + AddFiller('') + AddFiller('') + AddFiller('') + AddFiller(''));
                                        VATFile.CLOSE;
                                        VATFile.OPEN(FileName);
                                        VATFile.SEEK(VATFile.LEN - 2);
                                        VATFile.TRUNC;
                                END ELSE
                                //<<NAVDK
                                VATFile.WRITE(
                                  FORMAT(
                                    '10' + DecimalNumeralZeroFormat(NoOfGrTotal,9) +
                                    DecimalNumeralZeroFormat(EU3PartyItemTradeTotalAmt,15) +
                                    DecimalNumeralSign(-EU3PartyItemTradeTotalAmt) +
                                    DecimalNumeralZeroFormat(EU3PartyServiceTradeTotalAmt,15) +
                                    DecimalNumeralSign(-EU3PartyServiceTradeTotalAmt),
                                    80));
                                VATFile.CLOSE;
                                //NAVDK
                                IF NOT IsRecordset THEN
                                  MESSAGE(Text009);
                              END;

               ReqFilterFields=VAT Bus. Posting Group,VAT Prod. Posting Group,Posting Date }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Show Amounts in Add. Reporting Currency;
                             NOR=Vis bel›p i tilleggsrapp.valuta;
                             SVE=Visa belopp i alt. rapporteringsvaluta];
                  ToolTipML=[ENU=Specifies if the reported amounts are shown in the additional reporting currency.;
                             NOR=Angir om de rapporterte bel›pene vises i tilleggsrapporteringsvalutaen.;
                             SVE=Anger om de rapporterade beloppen visas i den alternativa rapporteringsvalutan.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=UseAmtsInAddCurr;
                  MultiLine=Yes }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=WwWw;NOR=WwWw;SVE=WwWw';
      Text002@1002 : TextConst 'ENU=LIST;NOR=LISTE;SVE=LISTA';
      Text003@1003 : TextConst 'ENU="%1 was not filled in for all VAT entries in which %2 = %3.";NOR="%1 ble ikke fylt ut for alle mva-poster hvor %2 = %3.";SVE="%1 fylldes inte i f”r alla momstransaktioner d„r %2 = %3."';
      Text004@1004 : TextConst 'ENU=It is not possible to display %1 in a field with a length of %2.;NOR=Det er ikke mulig † vise %1 i et felt med en lengde p† %2.;SVE=Det „r inte m”jligt att visa %1 i ett f„lt med l„ngden %2.';
      CompanyInfo@1005 : Record 79;
      Country@1006 : Record 9;
      Cust@1007 : Record 18;
      GeneralLedgerSetup@1017 : Record 98;
      FileManagement@1000 : Codeunit 419;
      VATFile@1008 : File;
      TotalValueofServiceSuppliesTot@1021 : Decimal;
      TotalValueofItemSuppliesTotal@1013 : Decimal;
      EU3PartyServiceTradeAmt@1022 : Decimal;
      EU3PartyItemTradeAmt@1014 : Decimal;
      EU3PartyItemTradeTotalAmt@1016 : Decimal;
      EU3PartyTradeTotalAmt@1116 : Decimal;
      EU3PartyServiceTradeTotalAmt@1023 : Decimal;
      NoOfGrTotal@1020 : Integer;
      FileName@1009 : Text;
      VATRegNo@1010 : Code[20];
      InternalReferenceNo@1011 : Text[10];
      Period@1012 : Date;
      UseAmtsInAddCurr@1015 : Boolean;
      ToFileNameTxt@1018 : TextConst 'ENU=Default.txt;NOR=Standard.txt;SVE=Standard.txt';
      TotalValueofItemSupplies@1060007 : Decimal;
      TotalValueofServiceSupplies@1060009 : Decimal;
      IsRecordset@1060005 : Boolean;
      TotalValueofItemSuppliesTot@1060000 : Decimal;
      EU3PartyItemTradeAmtTot@1060002 : Decimal;
      SalesToItemGrTotal@1060004 : Decimal;
      SalesTo3PartyGrTotal@1060006 : Decimal;
      SalesToServicesGrTotal@1060011 : Decimal;
      ServicesTotalAmt@1060012 : Decimal;
      Text009@1060013 : TextConst 'ENU=The file is saved without transactions, because there is nothing to report.';
      Filler@1060014 : Text[1];
      HideFileDialog@1024 : Boolean;
      GLSetup@111285700 : Record 98;
      DKinfoEnable@11128570 : Boolean INDATASET;

    LOCAL PROCEDURE DecimalNumeralSign@1(DecimalNumeral@1000 : Decimal) : Text[1];
    BEGIN
      IF DecimalNumeral >= 0 THEN
        EXIT('+');
      EXIT('-');
    END;

    LOCAL PROCEDURE DecimalNumeralZeroFormat@2(DecimalNumeral@1000 : Decimal;Length@1001 : Integer) : Text[250];
    BEGIN
      EXIT(TextZeroFormat(DELCHR(FORMAT(ROUND(ABS(DecimalNumeral),1,'<'),0,1)),Length));
    END;

    LOCAL PROCEDURE TextZeroFormat@3(Text@1000 : Text[250];Length@1001 : Integer) : Text[250];
    BEGIN
      IF STRLEN(Text) > Length THEN
        ERROR(
          Text004,
          Text,Length);
      EXIT(PADSTR('',Length - STRLEN(Text),'0') + Text);
    END;

    LOCAL PROCEDURE DecimalNumeralFormat@1060011(DecimalNumeral@1060013 : Decimal;Length@1060012 : Integer) : Text[16];
    BEGIN
      //NAVDK
      EXIT(CheckLength(DELCHR(FORMAT(ROUND(ABS(DecimalNumeral),1,'<'),0,1)),Length));
    END;

    LOCAL PROCEDURE CheckLength@1060012(Text@1060014 : Text[16];Length@1060013 : Integer) : Text[16];
    BEGIN
      //NAVDK
      IF STRLEN(Text) > Length THEN
        ERROR(Text004,Text,Length);
      EXIT(Text);
    END;

    LOCAL PROCEDURE WriteGrTotalsToFile@4(TotalValueofServiceSupplies@1003 : Decimal;TotalValueofItemSupplies@1002 : Decimal;EU3PartyServiceTradeAmt@1001 : Decimal;EU3PartyItemTradeAmt@1000 : Decimal);
    BEGIN
      IF (ROUND(ABS(TotalValueofItemSupplies),1,'<') <> 0) OR (ROUND(ABS(TotalValueofServiceSupplies),1,'<') <> 0) OR
         (ROUND(ABS(EU3PartyItemTradeAmt),1,'<') <> 0) OR (ROUND(ABS(EU3PartyServiceTradeAmt),1,'<') <> 0)
      THEN
        WITH "VAT Entry" DO BEGIN
          IF "VAT Registration No." = '' THEN BEGIN
            Type := Type::Sale;
            ERROR(
              Text003,
              FIELDCAPTION("VAT Registration No."),FIELDCAPTION(Type),Type);
          END;

          Cust.GET(GetCustomerNoToCheck("VAT Entry"));
          Cust.TESTFIELD("Country/Region Code");
          Country.GET(Cust."Country/Region Code");
          Cust.TESTFIELD("VAT Registration No.");
          Country.GET("Country/Region Code");
          Country.TESTFIELD("EU Country/Region Code");
          NoOfGrTotal := NoOfGrTotal + 1;

          InternalReferenceNo := INCSTR(InternalReferenceNo);
          ModifyVATEntryInternalRefNo("Country/Region Code","Bill-to/Pay-to No.",InternalReferenceNo);

          VATFile.WRITE(
            FORMAT(
              '02' + FORMAT(InternalReferenceNo,10) +
              DecimalNumeralZeroFormat(DATE2DMY(Period,3) MOD 100,2) +
              DecimalNumeralZeroFormat(DATE2DMY(Period,2),2) +
              DecimalNumeralZeroFormat(DATE2DMY(Period,1),2) +
              FORMAT(VATRegNo,8) + FORMAT(Country."EU Country/Region Code",2) + FORMAT("VAT Registration No.",12) +
              DecimalNumeralZeroFormat(TotalValueofItemSupplies,15) + DecimalNumeralSign(-TotalValueofItemSupplies) + '0' +
              DecimalNumeralZeroFormat(TotalValueofServiceSupplies,15) + DecimalNumeralSign(-TotalValueofServiceSupplies) + '0' +
              DecimalNumeralZeroFormat(EU3PartyItemTradeAmt,15) + DecimalNumeralSign(-EU3PartyItemTradeAmt) + '0' +
              DecimalNumeralZeroFormat(EU3PartyServiceTradeAmt,15) + DecimalNumeralSign(-EU3PartyServiceTradeAmt),
              120));
        END;
    END;

    LOCAL PROCEDURE GetCustomerNoToCheck@8(VATEntry@1000 : Record 254) : Code[20];
    VAR
      CustLedgerEntry@1001 : Record 21;
    BEGIN
      IF GeneralLedgerSetup."Bill-to/Sell-to VAT Calc." = GeneralLedgerSetup."Bill-to/Sell-to VAT Calc."::"Bill-to/Pay-to No." THEN
        EXIT(VATEntry."Bill-to/Pay-to No.");

      WITH CustLedgerEntry DO BEGIN
        SETRANGE("Customer No.",VATEntry."Bill-to/Pay-to No.");
        SETRANGE("Document Type",VATEntry."Document Type");
        SETRANGE("Document No.",VATEntry."Document No.");
        SETRANGE("Posting Date",VATEntry."Posting Date");
        FINDFIRST;
        EXIT("Sell-to Customer No.");
      END;
    END;

    LOCAL PROCEDURE WriteGrTotalsToFileDK@14(SalesToCust@1002 : Decimal;EU3PartyTradeAmt@1001 : Decimal;ServicesTotalAmt@1060000 : Decimal);
    BEGIN
      //NAVDK
      IF (ROUND(ABS(SalesToCust),1,'<') <> 0) OR (ROUND(ABS(EU3PartyTradeAmt),1,'<') <> 0) OR
         (ROUND(ABS(ServicesTotalAmt),1,'<') <> 0)
      THEN
        WITH "VAT Entry" DO BEGIN
          IF "VAT Registration No." = '' THEN BEGIN
            Type := Type::Sale;
            ERROR(
              Text003,
              FIELDCAPTION("VAT Registration No."),FIELDCAPTION(Type),Type);
          END;

          Cust.GET("Bill-to/Pay-to No.");
          Cust.TESTFIELD("Country/Region Code");
          Country.GET(Cust."Country/Region Code");
          Cust.TESTFIELD("VAT Registration No.");
          Country.GET("Country/Region Code");
          Country.TESTFIELD("EU Country/Region Code");
          NoOfGrTotal := NoOfGrTotal + 1;

          InternalReferenceNo := INCSTR(InternalReferenceNo);
          SETRANGE("Country/Region Code","Country/Region Code");
          SETRANGE("Bill-to/Pay-to No.","Bill-to/Pay-to No.");
          MODIFYALL("Internal Ref. No.",InternalReferenceNo);
          SETRANGE("Country/Region Code");
          SETRANGE("Bill-to/Pay-to No.");

          WriteToFile(
            AddFiller('2') +
            AddFiller(CheckLength(FORMAT(InternalReferenceNo),10)) +
            AddFiller(FORMAT(DATE2DMY(Period,3)) + '-' +
              FillZero(FORMAT(DATE2DMY(Period,2)),2) + '-' +
              FillZero(FORMAT(DATE2DMY(Period,1)),2)) +
            AddFiller(FORMAT(VATRegNo,8)) +
            AddFiller(FORMAT(Country."EU Country/Region Code",2)) +
            AddFiller(CheckLength(FORMAT("VAT Registration No."),12)) +
            AddFiller(DecimalNumeralSign(-SalesToCust) + DecimalNumeralFormat(SalesToCust,15)) +
            AddFiller(DecimalNumeralSign(-EU3PartyItemTradeAmt) + DecimalNumeralFormat(EU3PartyTradeAmt,15)) +
            DecimalNumeralSign(-ServicesTotalAmt) + DecimalNumeralFormat(ServicesTotalAmt,15));
          IsRecordset := TRUE;
          TotalValueofItemSuppliesTot := TotalValueofItemSuppliesTot + ROUND(SalesToCust,1,'<');
          TotalValueofServiceSuppliesTot := TotalValueofServiceSuppliesTot + ROUND(EU3PartyTradeAmt,1,'<');
          EU3PartyItemTradeAmtTot := EU3PartyItemTradeAmtTot + ROUND(ServicesTotalAmt,1,'<');
        END;
    END;

    PROCEDURE WriteToFile@1060000(Text@1060000 : Text[89]);
    BEGIN
      //NAVDK
      VATFile.WRITE(Text);
    END;

    PROCEDURE DeleteCountryPrefix@1060001(VatRegNoParam@1060000 : Text[20];CountryCode@1060001 : Code[10]) VatRegNo : Text[20];
    BEGIN
      //NAVDK
      Country.GET(CountryCode);
      VatRegNo := VatRegNoParam;
      IF STRPOS(VatRegNo,Country."EU Country/Region Code") = 1 THEN
        VatRegNo := DELSTR(VatRegNo,1,STRLEN(Country."EU Country/Region Code"));
    END;

    PROCEDURE AddFiller@1060007(InputText@1060000 : Text[50]) : Text[50];
    BEGIN
      //NAVDK
      IF InputText <> '' THEN
        EXIT(InputText + Filler);
      EXIT(Filler);
    END;

    PROCEDURE FillZero@1060010(InputText@1060001 : Text[4];Length@1060000 : Integer) : Text[4];
    BEGIN
      //NAVDK
      EXIT(PADSTR('',Length - STRLEN(InputText),'0') + InputText);
    END;

    [External]
    PROCEDURE GetFileName@6() : Text[1024];
    BEGIN
      EXIT(FileName);
    END;

    [External]
    PROCEDURE InitializeRequest@5(NewHideFileDialog@1000 : Boolean);
    BEGIN
      HideFileDialog := NewHideFileDialog;
    END;

    LOCAL PROCEDURE ModifyVATEntryInternalRefNo@7(CountryRegionCode@1001 : Code[10];BillToPayToNo@1002 : Code[20];InternalRefNo@1003 : Text[30]);
    VAR
      VATEntry@1000 : Record 254;
    BEGIN
      VATEntry.SETRANGE("Country/Region Code",CountryRegionCode);
      VATEntry.SETRANGE("Bill-to/Pay-to No.",BillToPayToNo);
      VATEntry.MODIFYALL("Internal Ref. No.",InternalRefNo);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

