OBJECT Page 11130036 Rental Calendars
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Mietkalender;
               ENU=Rental Calendars;
               NLD=Huurkalenders;
               NOR=Leiekalendre;
               SVE=Uthyrningskalendrar];
    LinksAllowed=No;
    SourceTable=Table11012568;
    PageType=List;
    OnAfterGetRecord=VAR
                       MATRIX_CurrentColumnOrdinal@1043 : Integer;
                     BEGIN
                       MATRIX_CurrentColumnOrdinal := 0;
                       WHILE MATRIX_CurrentColumnOrdinal < MATRIX_NoOfMatrixColumns DO BEGIN
                         MATRIX_CurrentColumnOrdinal := MATRIX_CurrentColumnOrdinal + 1;
                         MATRIX_OnAfterGetRecord(MATRIX_CurrentColumnOrdinal);
                       END;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 6   ;2   ;Field     ;
                SourceExpr=Type }

    { 4   ;2   ;Field     ;
                SourceExpr="Territory Code" }

    { 1210190000;2;Field  ;
                SourceExpr="Plant Calendar" }

    { 1210190001;2;Field  ;
                Name=Description;
                CaptionML=[DEU=Beschreibung;
                           ENU=Description;
                           NLD=Omschrijving;
                           NOR=Beskrivelse;
                           SVE=Beskrivning];
                SourceExpr=GetCalendarDescription;
                AutoFormatExpr='Description goes here' }

  }
  CODE
  {
    VAR
      PeriodType@1080 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      QtyType@1081 : 'Net Change,Balance at Date';
      MatrixRecords@1000 : ARRAY [32] OF Record 2000000007;
      MATRIX_ColumnTempRec@1210190000 : Record 2000000007;
      MATRIX_NoOfMatrixColumns@1084 : Integer;
      MATRIX_CellData@1085 : ARRAY [32] OF ' ,Rental Free';
      MATRIX_ColumnCaption@1001 : ARRAY [32] OF Text[1024];

    LOCAL PROCEDURE CalcValue@1125() : Integer;
    BEGIN
      EXIT(CalcRentalFree(MATRIX_ColumnTempRec."Period Start"));
    END;

    LOCAL PROCEDURE SetValue@1210190004(NewValue@1002 : Integer);
    BEGIN
      WriteRentalFree(MATRIX_ColumnTempRec."Period Start", NewValue);
    END;

    LOCAL PROCEDURE UpdateValue@1210190005(MATRIX_ColumnOrdinal@1102601000 : Integer);
    BEGIN
      MATRIX_ColumnTempRec := MatrixRecords[MATRIX_ColumnOrdinal];

      SetValue(MATRIX_CellData[MATRIX_ColumnOrdinal]);
    END;

    LOCAL PROCEDURE MATRIX_OnAfterGetRecord@1091(ColumnID@1000 : Integer);
    BEGIN
      MATRIX_ColumnTempRec :=  MatrixRecords[ColumnID];
      MATRIX_CellData[ColumnID] := CalcValue;
    END;

    PROCEDURE Load@3(PeriodType1@1003 : 'Day,Week,Month,Quarter,Year,Accounting Period';QtyType1@1000 : 'Net Change,Balance at Date';MatrixColumns1@1001 : ARRAY [32] OF Text[1024];VAR MatrixRecords1@1002 : ARRAY [32] OF Record 2000000007;NoOfMatrixColumns1@1004 : Integer);
    VAR
      i@1005 : Integer;
    BEGIN
      PeriodType := PeriodType1;
      QtyType := QtyType1;
      COPYARRAY(MATRIX_ColumnCaption,MatrixColumns1,1);
      FOR i := 1 TO ARRAYLEN (MatrixRecords) DO
        MatrixRecords[i].COPY(MatrixRecords1[i]);
      MATRIX_NoOfMatrixColumns := NoOfMatrixColumns1;

      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CalcRentalFree@1210190003(Date2@11012000 : Date) : Integer;
    VAR
      RentalCalendarDay@1210190000 : Record 11012569;
    BEGIN
      IF RentalCalendarDay.GET(Type, "Territory Code", "Plant Calendar", Date2) THEN
        EXIT(MATRIX_CellData[1]::"Rental Free");
    END;

    PROCEDURE WriteRentalFree@2(Date2@11012000 : Date;NewValue@1210190000 : Integer);
    VAR
      RentalCalendarDay@1210190001 : Record 11012569;
    BEGIN
      IF Type = Type::Region THEN
         TESTFIELD("Territory Code");
      IF Type = Type::Plant THEN
         TESTFIELD("Plant Calendar");

      IF NewValue = MATRIX_CellData[1]::"Rental Free" THEN BEGIN
        IF NOT RentalCalendarDay.GET(Type, "Territory Code", "Plant Calendar", Date2) THEN BEGIN
          RentalCalendarDay.Type := Type;
          RentalCalendarDay."Territory Code" := "Territory Code";
          RentalCalendarDay."Plant Calendar" := "Plant Calendar";
          RentalCalendarDay.Date := Date2;
          RentalCalendarDay.INSERT;
        END;
      END ELSE
        IF RentalCalendarDay.GET(Type, "Territory Code", "Plant Calendar", Date2) THEN
          RentalCalendarDay.DELETE;
    END;

    BEGIN
    END.
  }
}

