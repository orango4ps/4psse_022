OBJECT Table 293 Reminder Level
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Reminder Terms Code,No.;
    OnDelete=BEGIN
               AdditionalFeeSetup.SETRANGE("Reminder Terms Code","Reminder Terms Code");
               AdditionalFeeSetup.SETRANGE("Reminder Level No.","No.");
               AdditionalFeeSetup.DELETEALL(TRUE);

               ReminderText.SETRANGE("Reminder Terms Code","Reminder Terms Code");
               ReminderText.SETRANGE("Reminder Level","No.");
               ReminderText.DELETEALL;

               CurrencyForReminderLevel.SETRANGE("Reminder Terms Code","Reminder Terms Code");
               CurrencyForReminderLevel.SETRANGE("No.","No.");
               CurrencyForReminderLevel.DELETEALL;
             END;

    OnRename=BEGIN
               AdditionalFeeSetup.SETRANGE("Reminder Terms Code",xRec."Reminder Terms Code");
               AdditionalFeeSetup.SETRANGE("Reminder Level No.",xRec."No.");
               WHILE AdditionalFeeSetup.FINDFIRST DO
                 AdditionalFeeSetup.RENAME("Reminder Terms Code",
                   "No.",
                   AdditionalFeeSetup."Charge Per Line",
                   AdditionalFeeSetup."Currency Code",
                   AdditionalFeeSetup."Threshold Remaining Amount");

               ReminderText.SETRANGE("Reminder Terms Code",xRec."Reminder Terms Code");
               ReminderText.SETRANGE("Reminder Level",xRec."No.");
               WHILE ReminderText.FINDFIRST DO
                 ReminderText.RENAME("Reminder Terms Code","No.",ReminderText.Position,ReminderText."Line No.");

               CurrencyForReminderLevel.SETRANGE("Reminder Terms Code",xRec."Reminder Terms Code");
               CurrencyForReminderLevel.SETRANGE("No.",xRec."No.");
               WHILE CurrencyForReminderLevel.FINDFIRST DO
                 CurrencyForReminderLevel.RENAME("Reminder Terms Code","No.",
                   CurrencyForReminderLevel."Currency Code");
             END;

    CaptionML=[ENU=Reminder Level;
               NOR=Purregrad;
               SVE=Betalningsp†minnelseniv†];
    LookupPageID=Page432;
    DrillDownPageID=Page432;
  }
  FIELDS
  {
    { 1   ;   ;Reminder Terms Code ;Code10        ;TableRelation="Reminder Terms";
                                                   CaptionML=[ENU=Reminder Terms Code;
                                                              NOR=Purrebetingelseskode;
                                                              SVE=Betalningsp†minnelsekod];
                                                   NotBlank=Yes }
    { 2   ;   ;No.                 ;Integer       ;CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr];
                                                   MinValue=1;
                                                   NotBlank=Yes }
    { 3   ;   ;Grace Period        ;DateFormula   ;CaptionML=[ENU=Grace Period;
                                                              NOR=Respittid;
                                                              SVE=Betalningsfrist] }
    { 4   ;   ;Additional Fee (LCY);Decimal       ;CaptionML=[ENU=Additional Fee (LCY);
                                                              NOR=Tilleggsgebyr (NOK);
                                                              SVE=Avgift (BVA)];
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 5   ;   ;Calculate Interest  ;Boolean       ;CaptionML=[ENU=Calculate Interest;
                                                              NOR=Beregn renter;
                                                              SVE=Ber„kna r„nta] }
    { 6   ;   ;Due Date Calculation;DateFormula   ;CaptionML=[ENU=Due Date Calculation;
                                                              NOR=Beregning av forfallsdato;
                                                              SVE=F”rfallodatumformel] }
    { 7   ;   ;Add. Fee per Line Amount (LCY);Decimal;
                                                   CaptionML=[ENU=Add. Fee per Line Amount (LCY);
                                                              NOR=Tilleggsgebyr per linjebel›p (NOK);
                                                              SVE=Avgift per radbelopp (BVA)];
                                                   MinValue=0 }
    { 8   ;   ;Add. Fee per Line Description;Text100;
                                                   CaptionML=[ENU=Add. Fee per Line Description;
                                                              NOR=Tilleggsgebyr per linjebeskrivelse;
                                                              SVE=Beskrivning av avgift per rad] }
    { 9   ;   ;Add. Fee Calculation Type;Option   ;CaptionML=[ENU=Add. Fee Calculation Type;
                                                              NOR=Tilleggsgebyr beregningstype;
                                                              SVE=Ber„kning av avgift];
                                                   OptionCaptionML=[ENU=Fixed,Single Dynamic,Accumulated Dynamic;
                                                                    NOR=Fast,enkel dynamisk,akkumulert dynamisk;
                                                                    SVE=Fast,Enstaka dynamisk,Ackumulerad dynamisk];
                                                   OptionString=Fixed,Single Dynamic,Accumulated Dynamic }
    { 11012000;;Reminder Report Title;Text50      ;CaptionML=ENU=Reminder Report Title }
  }
  KEYS
  {
    {    ;Reminder Terms Code,No.                 ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ReminderLevel@1000 : Record 293;
      ReminderText@1001 : Record 294;
      CurrencyForReminderLevel@1002 : Record 329;
      AdditionalFeeSetup@1003 : Record 1050;

    [External]
    PROCEDURE CalculateAdditionalFixedFee@1002(CurrencyCode@1000 : Code[10];ChargePerLine@1001 : Boolean;PostingDate@1004 : Date) : Decimal;
    VAR
      CurrExchRate@1003 : Record 330;
      FeeAmount@1002 : Decimal;
    BEGIN
      IF CurrencyCode = '' THEN BEGIN
        IF ChargePerLine THEN
          EXIT("Add. Fee per Line Amount (LCY)");

        EXIT("Additional Fee (LCY)");
      END;

      CurrencyForReminderLevel.SETRANGE("Reminder Terms Code","Reminder Terms Code");
      CurrencyForReminderLevel.SETRANGE("No.","No.");
      CurrencyForReminderLevel.SETRANGE("Currency Code",CurrencyCode);
      IF CurrencyForReminderLevel.FINDFIRST THEN BEGIN
        IF ChargePerLine THEN
          EXIT(CurrencyForReminderLevel."Add. Fee per Line");

        EXIT(CurrencyForReminderLevel."Additional Fee");
      END;
      IF ChargePerLine THEN
        FeeAmount := "Add. Fee per Line Amount (LCY)"
      ELSE
        FeeAmount := "Additional Fee (LCY)";
      EXIT(CurrExchRate.ExchangeAmtLCYToFCY(
          0,'', //**4PS.n
          PostingDate,CurrencyCode,
          FeeAmount,
      //  CurrExchRate.ExchangeRate(PostingDate,CurrencyCode));//**4PS.o
      //**4PS.sn
          CurrExchRate.ExchangeRate(0,'',PostingDate,CurrencyCode,TRUE),
          TRUE));
      //**4PS.en
    END;

    [External]
    PROCEDURE NewRecord@1();
    BEGIN
      ReminderLevel.SETRANGE("Reminder Terms Code","Reminder Terms Code");
      IF ReminderLevel.FINDLAST THEN
        "No." := ReminderLevel."No.";
      "No." += 1;
    END;

    [External]
    PROCEDURE GetAdditionalFee@1000(RemainingAmount@1003 : Decimal;CurrencyCode@1004 : Code[10];ChargePerLine@1005 : Boolean;PostingDate@1007 : Date) : Decimal;
    VAR
      ReminderTerms@1000 : Record 292;
      AdditionalFeeSetup@1002 : Record 1050;
    BEGIN
      IF NOT ReminderTerms.GET("Reminder Terms Code") THEN
        EXIT(0);

      CASE "Add. Fee Calculation Type" OF
        "Add. Fee Calculation Type"::Fixed:
          EXIT(CalculateAdditionalFixedFee(CurrencyCode,ChargePerLine,PostingDate));
        "Add. Fee Calculation Type"::"Accumulated Dynamic":
          EXIT(AdditionalFeeSetup.GetAdditionalFeeFromSetup(Rec,RemainingAmount,
              CurrencyCode,ChargePerLine,"Add. Fee Calculation Type"::"Accumulated Dynamic",PostingDate));
        "Add. Fee Calculation Type"::"Single Dynamic":
          EXIT(AdditionalFeeSetup.GetAdditionalFeeFromSetup(Rec,RemainingAmount,
              CurrencyCode,ChargePerLine,"Add. Fee Calculation Type"::"Single Dynamic",PostingDate));
      END;
    END;

    PROCEDURE GetReminderReportTitle@1100528400(ReminderTermsCode@1100528400 : Code[10];ReminderLevelNo@1100528401 : Integer;DefaultReportTitle@1100528403 : Text[50]) ReportTitle : Text[50];
    BEGIN
      //**4PS
      IF GET(ReminderTermsCode, ReminderLevelNo) THEN
        ReportTitle := "Reminder Report Title";

      IF ReportTitle = '' THEN
        ReportTitle := DefaultReportTitle;
    END;

    BEGIN
    END.
  }
}

