OBJECT Report 11072173 Update Contract Object Maint.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Vertragsobjektwartung aktualisieren;
               ENU=Update Contract Object Maintenance;
               NLD=Contractobjectonderhoud bijwerken];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 1100528600;;DataItem;                  ;
               DataItemTable=Table11071692;
               OnAfterGetRecord=BEGIN
                                  IF StartingDateMaintenance <> 0D THEN
                                    VALIDATE("Starting Date Maintenance", StartingDateMaintenance);
                                  IF FORMAT(MaintenanceInterval) <> '' THEN
                                    VALIDATE("Maintenance Interval", MaintenanceInterval);
                                  IF UpdateCluster THEN
                                    VALIDATE(Cluster, ClusterNo);
                                  MODIFY(TRUE);
                                END;

               ReqFilterFields=Service Contract No.,Object No.,Maintenance Scheme,Service Category }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1100528600;;Container;
                  ContainerType=ContentArea }

      { 1100528601;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ];
                  GroupType=Group }

      { 1100528602;2;Field  ;
                  CaptionML=[DEU=Startdatum Wartung;
                             ENU=Starting Date Maintenance;
                             NLD=Startdatum onderhoud;
                             NOR=Startdato, Vedlikehold;
                             SVE=Startdatum, underh†ll];
                  SourceExpr=StartingDateMaintenance }

      { 1100528603;2;Field  ;
                  CaptionML=[DEU=Wartungsintervall;
                             ENU=Maintenance Interval;
                             NLD=Onderhoudsinterval;
                             NOR=Vedlikeholdsintervall;
                             SVE=Underh†llsintervall];
                  SourceExpr=MaintenanceInterval }

      { 1100528605;2;Field  ;
                  CaptionML=[DEU=Cluster aktualisieren;
                             ENU=Update Cluster;
                             NLD=Cluster bijwerken];
                  SourceExpr=UpdateCluster;
                  OnValidate=BEGIN
                               IF NOT UpdateCluster THEN
                                 ClusterNo := '';
                             END;
                              }

      { 1100528604;2;Field  ;
                  CaptionML=[DEU=Cluster;
                             ENU=Cluster;
                             NLD=Cluster;
                             NOR=Klynge;
                             SVE=Kluster];
                  SourceExpr=ClusterNo;
                  Editable=UpdateCluster;
                  OnValidate=VAR
                               ServiceContract@1100528600 : Record 11012812;
                               ServiceCluster@1100528601 : Record 11071742;
                             BEGIN
                               IF NOT ServiceContract.GET(ServiceContractNo) THEN
                                 ServiceContract.INIT;
                               IF ServiceContract."Use Contract Clusters" THEN BEGIN
                                 ServiceCluster.SETRANGE(Type, ServiceCluster.Type::Contract);
                                 ServiceCluster.SETRANGE("Type Code", ServiceContractNo);
                               END ELSE BEGIN
                                 ServiceCluster.SETRANGE(Type, ServiceCluster.Type::" ");
                                 ServiceCluster.SETRANGE("Type Code", '');
                               END;
                               ServiceCluster.SETRANGE(Code, ClusterNo);
                               ServiceCluster.SETRANGE("Source Type", ServiceCluster."Source Type"::" ");
                               ServiceCluster.FINDFIRST;
                             END;

                  OnLookup=VAR
                             ServiceContract@1100528600 : Record 11012812;
                             ServiceCluster@1100528601 : Record 11071742;
                           BEGIN
                             IF NOT ServiceContract.GET(ServiceContractNo) THEN
                               ServiceContract.INIT;
                             IF ServiceContract."Use Contract Clusters" THEN BEGIN
                               ServiceCluster.SETRANGE(Type, ServiceCluster.Type::Contract);
                               ServiceCluster.SETRANGE("Type Code", ServiceContractNo);
                             END ELSE BEGIN
                               ServiceCluster.SETRANGE(Type, ServiceCluster.Type::" ");
                               ServiceCluster.SETRANGE("Type Code", '');
                             END;
                             ServiceCluster.SETRANGE("Source Type", ServiceCluster."Source Type"::" ");
                             IF PAGE.RUNMODAL(0, ServiceCluster) = ACTION::LookupOK THEN BEGIN
                               Text := ServiceCluster.Code;
                               EXIT(TRUE);
                             END;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      StartingDateMaintenance@1100528600 : Date;
      MaintenanceInterval@1100528601 : DateFormula;
      UpdateCluster@1100528603 : Boolean INDATASET;
      ClusterNo@1100528602 : Code[20];
      ServiceContractNo@1100528604 : Code[20];

    PROCEDURE SetServiceContractNo@1100528605(IServiceContractNo@1100528600 : Code[20]);
    BEGIN
      ServiceContractNo := IServiceContractNo;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

