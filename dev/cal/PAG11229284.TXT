OBJECT Page 11229284 Work Orders
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=ArbeitsauftrÑge;
               ENU=Work Orders;
               NLD=Werkorders;
               SVE=Arbetsordrar];
    SourceTable=Table11229279;
    SourceTableView=SORTING(Source Company,Source Type,Source No.);
    DataCaptionFields=Source No.;
    PageType=List;
    OnOpenPage=BEGIN
                 IF FilterText <> '' THEN BEGIN
                   SETRANGE("Source Type", SourceType::ServiceOrder);
                   SETFILTER("No.", FilterText);
                 END ELSE BEGIN
                   IF SourceType = 0 THEN
                     SourceType := SourceType::Project;
                   SetFiltersOnSource(COMPANYNAME, SourceType, SourceNo, Rec);
                   SetCompanyPlanGroupFilters;
                   UpdateEnabled;
                   ProjectElement := GETFILTER("Project Element");
                   IF FocusWorkOrderNo <> '' THEN
                     IF GET(FocusWorkOrderNo) THEN;
                 END;
               END;

    OnClosePage=VAR
                  ServiceOrder@1100527550 : Record 11012823;
                BEGIN
                  IF SourceType = SourceType::ServiceOrder THEN
                    IF ServiceOrder.GET(SourceNo) THEN
                      IF ServiceOrder.DetermineLimitBudgetExceeded THEN
                        ServiceOrder.MODIFY;
                END;

    OnAfterGetRecord=BEGIN
                       UpdateEnabled;
                       FillDateTimeFields;
                     END;

    OnNewRecord=VAR
                  ProjPlanActivity@1100527001 : Record 11012431;
                BEGIN
                  InitRecordOnNew(SourceType, SourceNo, "Resource Type"::Employee, ProjectElement);
                  IF (DefaultProjectActivity <> '') AND
                     ("Source Type" = "Source Type"::Project) AND ("Source No." <> '') AND ("Source Company" <> '')
                  THEN BEGIN
                    ProjPlanActivity.CHANGECOMPANY("Source Company");
                    IF ProjPlanActivity.GET(DefaultProjectActivity) THEN
                      VALIDATE("Project Planning Activity No.", DefaultProjectActivity);
                  END;
                END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateEnabled;
                           FillDateTimeFields;
                         END;

    ActionList=ACTIONS
    {
      { 1100525019;  ;ActionContainer;
                      ActionContainerType=NewDocumentItems }
      { 1100525020;1 ;Action    ;
                      CaptionML=[DEU=Karte;
                                 ENU=Card;
                                 NLD=Kaart;
                                 NOR=Kort;
                                 SVE=Kort];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Card;
                      OnAction=VAR
                                 WorkOrder@1100525000 : Record 11229279;
                                 WorkOrderEmplProject@1100525001 : Page 11229285;
                               BEGIN
                                 TESTFIELD("No.");
                                 WorkOrder := Rec;
                                 WorkOrderEmplProject.SETRECORD(WorkOrder);
                                 WorkOrderEmplProject.SetSelections(COMPANYNAME, SourceNo);
                                 WorkOrderEmplProject.RUN;
                               END;
                                }
      { 1100528602;1 ;Action    ;
                      CaptionML=[DEU=Wiederholung;
                                 ENU=Recurrence;
                                 NLD=Repeteren;
                                 NOR=Gjentakelse;
                                 SVE=èterkommande];
                      Promoted=Yes;
                      Image=Reuse;
                      OnAction=BEGIN
                                 RepeatWorkorder;
                               END;
                                }
      { 1100525022;1 ;Action    ;
                      ShortCutKey=Ctrl+D;
                      CaptionML=[DEU=Dublette;
                                 ENU=Duplicate;
                                 NLD=Dupliceren;
                                 NOR=Duplikat;
                                 SVE=Dubblett];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Copy;
                      OnAction=BEGIN
                                 IF GET(DuplicateWorkorder(TRUE)) THEN BEGIN
                                   UpdateAdviceOrder;
                                   Rec := xRec;
                                 END;
                               END;
                                }
      { 1100525033;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100525032;1 ;ActionGroup;
                      CaptionML=[DEU=Arbeitsschein;
                                 ENU=Work Order;
                                 NLD=Werkorder;
                                 NOR=Arbeidsordre;
                                 SVE=Arbetsorder] }
      { 1100528622;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+F7;
                      CaptionML=[DEU=Herkunftskarte;
                                 ENU=Source Card;
                                 NLD=Bronkaart;
                                 SVE=Kort];
                      Promoted=Yes;
                      Image=Card;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowSourceCard;
                               END;
                                }
      { 1100528601;2 ;Action    ;
                      CaptionML=[DEU=Arbeitsbeschreibung;
                                 ENU=Statement of Work;
                                 NLD=Werkomschrijving;
                                 SVE=Fîrklaring betr. arbete];
                      Image=Text;
                      OnAction=VAR
                                 WorkOrderInfoManagement@1100409000 : Codeunit 11229278;
                               BEGIN
                                 WorkOrderInfoManagement.ShowWorkOrderText("No.");
                               END;
                                }
      { 1100525028;2 ;Action    ;
                      CaptionML=[DEU=Log-Momente;
                                 ENU=Reference Points;
                                 NLD=Logmomenten;
                                 NOR=Referansepunkter;
                                 SVE=Referenspunkter];
                      RunObject=Page 11229291;
                      RunPageLink=Work Order No.=FIELD(No.);
                      Image=EntriesList }
      { 1100528500;2 ;Action    ;
                      CaptionML=[DEU=Leistungszeit;
                                 ENU=Reference Periods;
                                 NLD=Prestatietijden];
                      Image=CalculatePlan;
                      OnAction=BEGIN
                                 ShowReferencePeriods;
                               END;
                                }
      { 1100525031;2 ;Action    ;
                      CaptionML=[DEU=Unterschrift;
                                 ENU=Signature;
                                 NLD=Handtekening;
                                 NOR=Signatur;
                                 SVE=Signatur];
                      RunObject=Page 11229283;
                      RunPageLink=Work Order No.=FIELD(No.);
                      Image=Signature }
      { 1100409002;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100409001;1 ;Action    ;
                      CaptionML=[DEU=NÑchsten Arbeitsauftrag erstellen;
                                 ENU=Create Next Work Order;
                                 NLD=Vervolgwerkorder aanmaken;
                                 SVE=Skapa ny arbetsorder];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 NextWorkOrderNo@1100409000 : Code[20];
                               BEGIN
                                 NextWorkOrderNo := CreateNextWorkOrder;
                                 IF GUIALLOWED THEN
                                   MESSAGE(Text000, NextWorkOrderNo);
                               END;
                                }
      { 1100409004;1 ;Action    ;
                      CaptionML=[DEU=Kollektive Verîffentlichung auf Subunternehmerportal;
                                 ENU=Collective Publish on Subcontr. Portal;
                                 NLD=Collectief op onderaan.portaal publiceren;
                                 SVE=Samlad publicering pÜ UE portal];
                      Image=SubcontractingWorksheet;
                      OnAction=BEGIN
                                 CollPublishOnSubcontrPortal();
                               END;
                                }
      { 1100528631;1 ;Action    ;
                      CaptionML=[DEU=Kollektive énderung andere Ressource;
                                 ENU=Collective Change Other Resource;
                                 NLD=Collectief op ander resource zetten];
                      Image=ResourcePlanning;
                      OnAction=VAR
                                 WorkOrder@1100528600 : Record 11229279;
                                 CollChangeResourceWOs@1100528601 : Report 11072174;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(WorkOrder);
                                 CollChangeResourceWOs.SETTABLEVIEW(WorkOrder);
                                 CollChangeResourceWOs.RUNMODAL;
                               END;
                                }
      { 1100528625;1 ;Action    ;
                      CaptionML=[DEU=Dauer/Erwartete Stunden anhand von Einstandspreisen bestimmen;
                                 ENU=Determine Duration Time/Expected Hours based on Unit Prices;
                                 NLD=Doorlooptijd/Verwacht aantal uren o.b.v. eenheidsprijzen bepalen];
                      Image=Calculate;
                      OnAction=VAR
                                 WorkOrder@1100528600 : Record 11229279;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(WorkOrder);
                                 IF WorkOrder.FINDSET THEN
                                   REPEAT
                                     WorkOrder.UpdateWorkOrderDurationTime;
                                     WorkOrder.MODIFY(TRUE);
                                   UNTIL WorkOrder.NEXT = 0;
                               END;
                                }
      { 1100528611;1 ;ActionGroup;
                      CaptionML=[DEU=Auftragszettel;
                                 ENU=Work Sheet;
                                 NLD=Werkbon;
                                 SVE=Arbetsark];
                      ActionContainerType=NewDocumentItems;
                      Image=Email }
      { 1100528610;2 ;Action    ;
                      CaptionML=[DEU=AusgewÑhlte ArbeitsblÑtter per E-Mail senden;
                                 ENU=Email Selected Work Sheets;
                                 NLD=Geselecteerde werkbonnen e-mailen];
                      Promoted=Yes;
                      Image=Email;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 WorkOrder@1100525000 : Record 11229279;
                                 DocumentPrint@1100528500 : Codeunit 229;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(WorkOrder);
                                 IF WorkOrder.FINDSET THEN
                                   REPEAT
                                     DocumentPrint.EmailWorkOrderWorksheet(WorkOrder, TRUE, TRUE)
                                   UNTIL WorkOrder.NEXT = 0;
                               END;
                                }
      { 1100409003;  ;ActionContainer;
                      ActionContainerType=Reports }
      { 1100528609;1 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=&AusgewÑhlte ArbeitsblÑtter drucken;
                                 ENU=&Print Selected Work Sheets;
                                 NLD=Geselecteerde werkbonnen &afdrukken;
                                 SVE=Skriv ut arbetsark];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 WorkOrder@1100528600 : Record 11229279;
                                 DocumentPrint@1100528400 : Codeunit 229;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(WorkOrder);
                                 DocumentPrint.PrintWorkOrders(WorkOrder);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1100525000;0;Container;
                ContainerType=ContentArea }

    { 1100525001;1;Group  ;
                GroupType=Repeater }

    { 1100525002;2;Field  ;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 1100525003;2;Field  ;
                SourceExpr="Source Company";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525004;2;Field  ;
                SourceExpr="Source Type";
                Visible=FALSE;
                Editable=FALSE }

    { 1100525005;2;Field  ;
                SourceExpr="Source No.";
                Visible=FALSE;
                Editable=FALSE;
                OnLookup=BEGIN
                           LookupSourceNo(FALSE);
                         END;
                          }

    { 1100525008;2;Field  ;
                SourceExpr="Project Planning Activity No.";
                Enabled=ProjectPlanningActivityNoEnabled }

    { 1100528612;2;Field  ;
                SourceExpr="Project Element";
                Enabled=ProjectElementEnabled }

    { 1100528701;2;Field  ;
                SourceExpr="Extension Contract";
                Enabled=ProjectExtensionContractEnabled }

    { 1100528400;2;Field  ;
                SourceExpr="Global Dimension 2 Code" }

    { 1100525006;2;Field  ;
                SourceExpr=Description }

    { 1100528600;2;Field  ;
                SourceExpr="Resource Type" }

    { 1100529001;2;Field  ;
                SourceExpr="Resource Group No." }

    { 1100529000;2;Field  ;
                SourceExpr="Resource Group Name";
                Visible=FALSE }

    { 1100525009;2;Field  ;
                SourceExpr="Resource No." }

    { 1100525010;2;Field  ;
                SourceExpr="Resource Name" }

    { 1100525007;2;Field  ;
                SourceExpr="Resource Company" }

    { 1100528621;2;Field  ;
                SourceExpr="Leading Resource" }

    { 1100525018;2;Field  ;
                SourceExpr="Actual Field Service Status";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                           END;
                            }

    { 1100527000;2;Field  ;
                SourceExpr="Actual Field Serv. Status Desc" }

    { 1100409000;2;Field  ;
                SourceExpr="WO Finished (Field Service)" }

    { 1100525013;2;Field  ;
                SourceExpr="First Possible Start.Date/Time";
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::FirstPossibleStartingDateTime);
                           END;
                            }

    { 1100528620;2;Field  ;
                CaptionML=[DEU=FrÅhestmîgliches Startdatum;
                           ENU=First Possible Starting Date;
                           NLD=Vroegst mogelijke startdatum;
                           NOR=Fõrste mulige dato for oppstart;
                           SVE=Fîrsta mîjliga startdatum];
                SourceExpr=FirstPossibleStartingDate;
                OnValidate=BEGIN
                             CheckPlanningIsBlocked(ValidationField::FirstPossibleStartingDate, FirstPossibleStartingDate, FirstPossibleStartingTime,
                                                    LastPossibleEndingDate, LastPossibleEndingTime, StartingDate, StartingTime);
                             ValidateDateTimeFields(ValidationField::FirstPossibleStartingDate);
                           END;
                            }

    { 1100528619;2;Field  ;
                CaptionML=[DEU=FrÅhestmîgliche Startzeit;
                           ENU=First Possible Starting Time;
                           NLD=Vroegst mogelijke starttijd;
                           NOR=Fõrste mulige tid for oppstart;
                           SVE=Fîrsta mîjliga starttid];
                SourceExpr=FirstPossibleStartingTime;
                OnValidate=BEGIN
                             CheckPlanningIsBlocked(ValidationField::FirstPossibleStartingTime, FirstPossibleStartingDate, FirstPossibleStartingTime,
                                                    LastPossibleEndingDate, LastPossibleEndingTime, StartingDate, StartingTime);
                             ValidateDateTimeFields(ValidationField::FirstPossibleStartingTime);
                           END;
                            }

    { 1100525014;2;Field  ;
                SourceExpr="Last Possible Ending Date/Time";
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::LastPossibleEndingDateTime);
                           END;
                            }

    { 1100528618;2;Field  ;
                CaptionML=[DEU=SpÑtestmîgliches Enddatum;
                           ENU=Last Possible Ending Date;
                           NLD=Laatst mogelijke einddatum;
                           NOR=Siste mulig tid for avslutning;
                           SVE=Senast mîjliga slutdatum];
                SourceExpr=LastPossibleEndingDate;
                OnValidate=BEGIN
                             CheckPlanningIsBlocked(ValidationField::LastPossibleEndingDate, FirstPossibleStartingDate, FirstPossibleStartingTime,
                                                    LastPossibleEndingDate, LastPossibleEndingTime, StartingDate, StartingTime);
                             ValidateDateTimeFields(ValidationField::LastPossibleEndingDate);
                           END;
                            }

    { 1100528617;2;Field  ;
                CaptionML=[DEU=SpÑtestmîgliche Endzeit;
                           ENU=Last Possible Ending Time;
                           NLD=Laatst mogelijke eindtijd;
                           NOR=Siste mulige tid for avslutning;
                           SVE=Senast mîjliga sluttid];
                SourceExpr=LastPossibleEndingTime;
                OnValidate=BEGIN
                             CheckPlanningIsBlocked(ValidationField::LastPossibleEndingTime, FirstPossibleStartingDate, FirstPossibleStartingTime,
                                                    LastPossibleEndingDate, LastPossibleEndingTime, StartingDate, StartingTime);
                             ValidateDateTimeFields(ValidationField::LastPossibleEndingTime);
                           END;
                            }

    { 1100525011;2;Field  ;
                SourceExpr="Starting Date/Time";
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::StartingDateTime);
                           END;
                            }

    { 1100528616;2;Field  ;
                CaptionML=[DEU=Startdatum;
                           ENU=Starting Date;
                           NLD=Startdatum;
                           NOR=Startdato;
                           SVE=Startdatum];
                SourceExpr=StartingDate;
                OnValidate=BEGIN
                             CheckPlanningIsBlocked(ValidationField::StartingDate, FirstPossibleStartingDate, FirstPossibleStartingTime,
                                                    LastPossibleEndingDate, LastPossibleEndingTime, StartingDate, StartingTime);
                             ValidateDateTimeFields(ValidationField::StartingDate);
                           END;
                            }

    { 1100528615;2;Field  ;
                CaptionML=[DEU=Startzeit;
                           ENU=Starting Time;
                           NLD=Starttijd;
                           NOR=Starttid;
                           SVE=Starttid];
                SourceExpr=StartingTime;
                OnValidate=BEGIN
                             CheckPlanningIsBlocked(ValidationField::StartingTime, FirstPossibleStartingDate, FirstPossibleStartingTime,
                                                    LastPossibleEndingDate, LastPossibleEndingTime, StartingDate, StartingTime);
                             ValidateDateTimeFields(ValidationField::StartingTime);
                           END;
                            }

    { 1100525012;2;Field  ;
                SourceExpr="Ending Date/Time";
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::EndingDateTime);
                           END;
                            }

    { 1100528614;2;Field  ;
                CaptionML=[DEU=Enddatum;
                           ENU=Ending Date;
                           NLD=Einddatum;
                           NOR=Sluttdato;
                           SVE=Slutdatum];
                SourceExpr=EndingDate;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::EndingDate);
                           END;
                            }

    { 1100528613;2;Field  ;
                CaptionML=[DEU=Endzeit;
                           ENU=Ending Time;
                           NLD=Eindtijd;
                           NOR=Sluttid;
                           SVE=Sluttid];
                SourceExpr=EndingTime;
                OnValidate=BEGIN
                             ValidateDateTimeFields(ValidationField::EndingTime);
                           END;
                            }

    { 1100525015;2;Field  ;
                SourceExpr="Expected Hours" }

    { 1100525016;2;Field  ;
                SourceExpr="Duration Time" }

    { 1100525017;2;Field  ;
                SourceExpr="Plan during Clock Time" }

    { 1100529170;2;Field  ;
                SourceExpr="Plan in Weekend" }

    { 1100528627;2;Field  ;
                SourceExpr="Firm Planned" }

    { 1100525026;2;Field  ;
                SourceExpr="Schedule Relation" }

    { 1100525024;2;Field  ;
                SourceExpr="Related Work Order No." }

    { 1100529100;2;Field  ;
                CaptionML=[DEU=Bedient Werkzeug (AA);
                           ENU=Operates Plant (WO);
                           NLD=Bedient materieel (WO)];
                SourceExpr="Operates Plant (WO)" }

    { 1100525030;2;Field  ;
                SourceExpr="Export to FSA" }

    { 1100525029;2;Field  ;
                SourceExpr="Date/Time Export to FSA" }

    { 1100525025;2;Field  ;
                CaptionML=[DEU=Unterschrift;
                           ENU=Signature;
                           NLD=Handtekening;
                           NOR=Signatur;
                           SVE=Signatur];
                SourceExpr=HasSignature() }

    { 1100525027;2;Field  ;
                SourceExpr=Signer }

    { 1100528700;2;Field  ;
                SourceExpr="Signature Mandatory" }

    { 1100525023;2;Field  ;
                SourceExpr="Actual Reference Point" }

    { 1100525021;2;Field  ;
                SourceExpr="Actual Reference Point Desc." }

    { 1100525035;2;Field  ;
                SourceExpr="Fld Srv Status Reason Desc.";
                Visible=FALSE }

    { 1100525034;2;Field  ;
                SourceExpr="Target Company" }

    { 1100528608;2;Field  ;
                SourceExpr="Publish on Subcontr. Portal" }

    { 1100528603;2;Field  ;
                SourceExpr="Expected Starting Date" }

    { 1100528604;2;Field  ;
                SourceExpr="Expected Starting Time" }

    { 1100528607;2;Field  ;
                SourceExpr="Expected Ending Date" }

    { 1100528605;2;Field  ;
                SourceExpr="Expected Ending Time" }

    { 1100528606;2;Field  ;
                SourceExpr="Expected Dates Modified on" }

    { 1100528623;2;Field  ;
                SourceExpr="Assigned to" }

    { 1100528624;2;Field  ;
                SourceExpr="Name Assigned to" }

    { 1100528626;2;Field  ;
                SourceExpr="Global Dimension 1 Code" }

    { 1100528628;2;Field  ;
                SourceExpr="Service Contract No." }

    { 1100528629;2;Field  ;
                SourceExpr="Order Manager" }

    { 1100528630;2;Field  ;
                SourceExpr="Link WO to WO Leading Resource" }

    { 1100527200;2;Field  ;
                SourceExpr="Created by";
                Visible=FALSE }

    { 1100527201;2;Field  ;
                SourceExpr="Created on";
                Visible=FALSE }

    { 1100528632;2;Field  ;
                SourceExpr=Address }

    { 1100528633;2;Field  ;
                SourceExpr="Post Code" }

    { 1100528634;2;Field  ;
                SourceExpr=City }

    { 1100528635;2;Field  ;
                SourceExpr="Customer No." }

    { 1100528636;2;Field  ;
                SourceExpr="Customer Name" }

  }
  CODE
  {
    VAR
      SourceType@1100528600 : ',ServiceOrder,,,,,,,,,,Project';
      SourceNo@1100525000 : Code[20];
      DefaultProjectActivity@1100527000 : Code[30];
      ProjectPlanningActivityNoEnabled@1100528601 : Boolean INDATASET;
      Text000@1100409000 : TextConst 'DEU=Arbeitsauftrag %1 erstellt;ENU=Work Order %1 created;NLD=Werkorder %1 aangemaakt';
      ProjectElementEnabled@1100525001 : Boolean INDATASET;
      ProjectExtensionContractEnabled@1100528700 : Boolean INDATASET;
      FirstPossibleStartingDate@1100528610 : Date;
      FirstPossibleStartingTime@1100528609 : Time;
      LastPossibleEndingDate@1100528608 : Date;
      LastPossibleEndingTime@1100528607 : Time;
      StartingDate@1100528606 : Date;
      StartingTime@1100528605 : Time;
      EndingDate@1100528604 : Date;
      EndingTime@1100528603 : Time;
      ValidationField@1100528602 : 'FirstPossibleStartingDateTime,FirstPossibleStartingDate,FirstPossibleStartingTime,LastPossibleEndingDateTime,LastPossibleEndingDate,LastPossibleEndingTime,StartingDateTime,StartingDate,StartingTime,EndingDateTime,EndingDate,EndingTime';
      ProjectElement@1100528300 : Code[20];
      FilterText@1100525002 : Text;
      FocusWorkOrderNo@1100527400 : Code[20];

    PROCEDURE SetSelections@1100525002(ISourceType@1100528600 : Option;ISourceNo@1100525002 : Code[20];IFocusWorkOrderNo@1100527400 : Code[20]);
    BEGIN
      SourceType := ISourceType;
      SourceNo := ISourceNo;
      FocusWorkOrderNo := IFocusWorkOrderNo;
    END;

    PROCEDURE SetDefaultProjectActivity@1100527000(DefaultProjectActivity2@1100527000 : Code[30]);
    BEGIN
      DefaultProjectActivity := DefaultProjectActivity2;
      SETRANGE("Project Planning Activity No.", DefaultProjectActivity);
    END;

    PROCEDURE UpdateEnabled@1100528600();
    VAR
      DummyProjectNo@1100527200 : Code[20];
      DummyCompany@1100529600 : Text[30];
    BEGIN
      ProjectPlanningActivityNoEnabled := "Source Type" = "Source Type"::Project;
      ProjectElementEnabled := "Source Type" = "Source Type"::Project;
      IF "Source Type" = "Source Type"::Request THEN
        ProjectElementEnabled := RequestIsLinkedToProject(DummyProjectNo, DummyCompany);
      ProjectExtensionContractEnabled := "Source Type" = "Source Type"::Project;
    END;

    LOCAL PROCEDURE FillDateTimeFields@1100528602();
    BEGIN
      FillSeparateDateAndTimeFields(
        FirstPossibleStartingDate, FirstPossibleStartingTime, LastPossibleEndingDate,
        LastPossibleEndingTime, StartingDate, StartingTime, EndingDate, EndingTime);
    END;

    LOCAL PROCEDURE ValidateDateTimeFields@1100528601(IValidationField@1100528600 : Option);
    BEGIN
      ValidateSeparateDateAndTimeFields(
        IValidationField, FirstPossibleStartingDate, FirstPossibleStartingTime, LastPossibleEndingDate,
        LastPossibleEndingTime, StartingDate, StartingTime, EndingDate, EndingTime);
    END;

    PROCEDURE SetFilterForLookUp@1100525000(Filter@1100525000 : Text);
    BEGIN
      FilterText := Filter;
    END;

    BEGIN
    END.
  }
}

