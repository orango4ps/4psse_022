OBJECT Table 330 Currency Exchange Rate
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.04,4PS14.00,PE;
  }
  PROPERTIES
  {
    DataCaptionFields=Currency Code;
    CaptionML=[ENU=Currency Exchange Rate;
               NOR=Valutakurs;
               SVE=Valutakurs];
    LookupPageID=Page483;
    DrillDownPageID=Page483;
  }
  FIELDS
  {
    { 1   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" = "Relational Currency Code" THEN
                                                                  ERROR(
                                                                    Text000,FIELDCAPTION("Currency Code"),FIELDCAPTION("Relational Currency Code"));
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              NOR=Valutakode;
                                                              SVE=Valutakod];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 2   ;   ;Starting Date       ;Date          ;CaptionML=[ENU=Starting Date;
                                                              NOR=Startdato;
                                                              SVE=Startdatum];
                                                   NotBlank=Yes }
    { 3   ;   ;Exchange Rate Amount;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Exchange Rate Amount");
                                                              END;

                                                   CaptionML=[ENU=Exchange Rate Amount Sales;
                                                              NOR=Valutakursbel›p;
                                                              SVE=Valutakurs belopp];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 4   ;   ;Adjustment Exch. Rate Amount;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Adjustment Exch. Rate Amount");
                                                              END;

                                                   AccessByPermission=TableData 4=R;
                                                   CaptionML=[ENU=Adjustment Exch. Rate Amount;
                                                              NOR=Justering valutakursbel›p;
                                                              SVE=Justering valutakursbelopp];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 5   ;   ;Relational Currency Code;Code10    ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" = "Relational Currency Code" THEN
                                                                  ERROR(
                                                                    Text000,FIELDCAPTION("Currency Code"),FIELDCAPTION("Relational Currency Code"));
                                                              END;

                                                   CaptionML=[ENU=Relational Currency Code;
                                                              NOR=Tilh›rende valutakode;
                                                              SVE=Relationsvalutakod] }
    { 6   ;   ;Relational Exch. Rate Amount;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Relational Exch. Rate Amount");
                                                              END;

                                                   AccessByPermission=TableData 4=R;
                                                   CaptionML=[ENU=Relational Exch. Rate Amount Sales;
                                                              NOR=Tilh›rende valutakursbel›p;
                                                              SVE=Relationsvalutakurs belopp];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 7   ;   ;Fix Exchange Rate Amount;Option    ;CaptionML=[ENU=Fix Exchange Rate Amount;
                                                              NOR=Fast valutakursbel›p;
                                                              SVE=Fast valutakursbelopp];
                                                   OptionCaptionML=[ENU=Currency,Relational Currency,Both;
                                                                    NOR=Valuta,Tilh›rende valuta,Begge;
                                                                    SVE=Valuta,Relationsvaluta,B†da];
                                                   OptionString=Currency,Relational Currency,Both }
    { 8   ;   ;Relational Adjmt Exch Rate Amt;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Relational Adjmt Exch Rate Amt");
                                                              END;

                                                   AccessByPermission=TableData 4=R;
                                                   CaptionML=[ENU=Relational Adjmt Exch Rate Amt;
                                                              NOR=Tilh›r. just. valutakursbel›p;
                                                              SVE=Just. relationsvalutakurs bel.];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 11012000;;Exchange Rate Amount Purchase;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Exchange Rate Amount Purchase");
                                                              END;

                                                   CaptionML=[ENU=Exchange Rate Amount Purchase;
                                                              NOR=Valutakursbel›p, innkj›p;
                                                              SVE=V„xelkursbelopp, ink”p];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 11012001;;Relat. Exch. Rate Amt Purchase;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Relat. Exch. Rate Amt Purchase");
                                                              END;

                                                   CaptionML=[ENU=Relational Exch. Rate Amount Purchase;
                                                              NOR=Relasjonsvalutakurs, Innkj›psbel›p;
                                                              SVE=Relationsv„xelkurs Ink”psbelopp];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
  }
  KEYS
  {
    {    ;Currency Code,Starting Date             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The currency code in the %1 field and the %2 field cannot be the same.;NOR=Valutakoden i feltet %1 og i feltet %2 kan ikke v‘re den samme.;SVE=Det f†r inte vara samma valutakod i f„ltet %1 och f„ltet %2.';
      CurrencyExchRate2@1001 : ARRAY [2] OF Record 330;
      CurrencyExchRate3@1002 : ARRAY [3] OF Record 330;
      RelExchangeRateAmt@1003 : Decimal;
      ExchangeRateAmt@1004 : Decimal;
      RelCurrencyCode@1005 : Code[10];
      FixExchangeRateAmt@1006 : Option;
      CurrencyFactor@1007 : Decimal;
      UseAdjmtAmounts@1008 : Boolean;
      CurrencyCode2@1009 : ARRAY [2] OF Code[10];
      Date2@1010 : ARRAY [2] OF Date;
      Type2@1100528600 : ARRAY [2] OF ' ,Project,Estimate';
      Code2@1100528200 : ARRAY [2] OF Code[20];
      Text001@1100529400 : TextConst 'ENU=There is no project exchange rate.';
      FoundJobCurrExchRate@1100529500 : Boolean;

    [External]
    PROCEDURE ExchangeAmtLCYToFCY@1(Type@1100528600 : ' ,Project,Estimate';Code@1100528200 : Code[20];Date@1000 : Date;CurrencyCode@1001 : Code[10];Amount@1002 : Decimal;Factor@1003 : Decimal;UseSalesExchange@1100528201 : Boolean) : Decimal;
    BEGIN
      IF CurrencyCode = '' THEN
        EXIT(Amount);

      //FindCurrency(Date,CurrencyCode,1); //**4PS.o
      FindCurrency(Type,Code,Date,CurrencyCode,1); //**4PS.n

      IF UseSalesExchange THEN BEGIN //**4PS.n
        TESTFIELD("Exchange Rate Amount");
        TESTFIELD("Relational Exch. Rate Amount");
        IF "Relational Currency Code" = '' THEN
          IF "Fix Exchange Rate Amount" = "Fix Exchange Rate Amount"::Both THEN
            Amount := (Amount / "Relational Exch. Rate Amount") * "Exchange Rate Amount"
          ELSE
            Amount := Amount * Factor
        ELSE BEGIN
          RelExchangeRateAmt := "Relational Exch. Rate Amount";
          ExchangeRateAmt := "Exchange Rate Amount";
          RelCurrencyCode := "Relational Currency Code";
          FixExchangeRateAmt := "Fix Exchange Rate Amount";
          //FindCurrency(Date,RelCurrencyCode,2); //**4PS.o
          FindCurrency(Type,Code,Date,RelCurrencyCode,2); //**4PS.n
          TESTFIELD("Exchange Rate Amount");
          TESTFIELD("Relational Exch. Rate Amount");
          CASE FixExchangeRateAmt OF
            "Fix Exchange Rate Amount"::"Relational Currency":
              ExchangeRateAmt :=
                (Factor * RelExchangeRateAmt * "Relational Exch. Rate Amount") /
                "Exchange Rate Amount";
            "Fix Exchange Rate Amount"::Currency:
                RelExchangeRateAmt :=
                  (ExchangeRateAmt * "Exchange Rate Amount") /
                  (Factor * "Relational Exch. Rate Amount");
            "Fix Exchange Rate Amount"::Both:
              CASE "Fix Exchange Rate Amount" OF
                "Fix Exchange Rate Amount"::"Relational Currency":
                  "Exchange Rate Amount" :=
                    (Factor * RelExchangeRateAmt * "Relational Exch. Rate Amount") /
                    ExchangeRateAmt;
                "Fix Exchange Rate Amount"::Currency:
                  "Relational Exch. Rate Amount" :=
                    (ExchangeRateAmt * "Exchange Rate Amount") /
                    (Factor * RelExchangeRateAmt);
              END;
          END;
          Amount := (Amount / RelExchangeRateAmt) * ExchangeRateAmt;
          Amount := (Amount / "Relational Exch. Rate Amount") * "Exchange Rate Amount";
        END;
      //**4PS.sn
      END ELSE BEGIN
        TESTFIELD("Exchange Rate Amount Purchase");
        TESTFIELD("Relat. Exch. Rate Amt Purchase");
        IF "Relational Currency Code" = '' THEN
          IF "Fix Exchange Rate Amount" = "Fix Exchange Rate Amount"::Both THEN
            Amount := (Amount / "Relat. Exch. Rate Amt Purchase") * "Exchange Rate Amount Purchase"
          ELSE
            Amount := Amount * Factor
        ELSE BEGIN
          RelExchangeRateAmt := "Relat. Exch. Rate Amt Purchase";
          ExchangeRateAmt := "Exchange Rate Amount Purchase";
          RelCurrencyCode := "Relational Currency Code";
          FixExchangeRateAmt := "Fix Exchange Rate Amount";
          FindCurrency(Type,Code,Date,RelCurrencyCode,2);
          TESTFIELD("Exchange Rate Amount Purchase");
          TESTFIELD("Relat. Exch. Rate Amt Purchase");
          CASE FixExchangeRateAmt OF
            "Fix Exchange Rate Amount"::"Relational Currency":
              ExchangeRateAmt :=
                (Factor * RelExchangeRateAmt * "Relat. Exch. Rate Amt Purchase") /
                "Exchange Rate Amount Purchase";
            "Fix Exchange Rate Amount"::Currency:
                RelExchangeRateAmt :=
                  (ExchangeRateAmt * "Exchange Rate Amount Purchase") /
                  (Factor * "Relat. Exch. Rate Amt Purchase");
            "Fix Exchange Rate Amount"::Both:
              CASE "Fix Exchange Rate Amount" OF
                "Fix Exchange Rate Amount"::"Relational Currency":
                  "Exchange Rate Amount Purchase" :=
                    (Factor * RelExchangeRateAmt * "Relat. Exch. Rate Amt Purchase") /
                    ExchangeRateAmt;
                "Fix Exchange Rate Amount"::Currency:
                  "Relat. Exch. Rate Amt Purchase" :=
                    (ExchangeRateAmt * "Exchange Rate Amount Purchase") /
                    (Factor * RelExchangeRateAmt);
              END;
          END;
          Amount := (Amount / RelExchangeRateAmt) * ExchangeRateAmt;
          Amount := (Amount / "Relat. Exch. Rate Amt Purchase") * "Exchange Rate Amount Purchase";
        END;
      END;
      //**4PS.eo
      EXIT(Amount);
    END;

    [External]
    PROCEDURE ExchangeAmtFCYToLCY@6(Type@1100528600 : ' ,Project,Estimate';Code@1100528200 : Code[20];Date@1000 : Date;CurrencyCode@1001 : Code[10];Amount@1002 : Decimal;Factor@1003 : Decimal;UseSalesExchange@1100528201 : Boolean) : Decimal;
    BEGIN
      IF CurrencyCode = '' THEN
        EXIT(Amount);
      //FindCurrency(Date,CurrencyCode,1); //**4PS.o
      FindCurrency(Type,Code,Date,CurrencyCode,1); //**4PS.n

      IF NOT UseAdjmtAmounts THEN BEGIN
        IF UseSalesExchange THEN BEGIN //**4PS.n
          TESTFIELD("Exchange Rate Amount");
          TESTFIELD("Relational Exch. Rate Amount");
        //**4PS.sn
        END ELSE BEGIN
          TESTFIELD("Exchange Rate Amount Purchase");
          TESTFIELD("Relat. Exch. Rate Amt Purchase");
        END;
        //**4PS.en
      END ELSE BEGIN
        TESTFIELD("Adjustment Exch. Rate Amount");
        TESTFIELD("Relational Adjmt Exch Rate Amt");
        "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
        //**4PS.sn
        "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
        "Exchange Rate Amount Purchase" := "Adjustment Exch. Rate Amount";
        "Relat. Exch. Rate Amt Purchase" := "Relational Adjmt Exch Rate Amt";
        // Purchase combined with adjustments is not applicable
        //**4PS.en
      END;

      IF UseSalesExchange THEN BEGIN //**4PS.n
        IF "Relational Currency Code" = '' THEN
          IF "Fix Exchange Rate Amount" = "Fix Exchange Rate Amount"::Both THEN
            Amount := (Amount / "Exchange Rate Amount") * "Relational Exch. Rate Amount"
          ELSE
            Amount := Amount / Factor
        ELSE BEGIN
          RelExchangeRateAmt := "Relational Exch. Rate Amount";
          ExchangeRateAmt := "Exchange Rate Amount";
          RelCurrencyCode := "Relational Currency Code";
          FixExchangeRateAmt := "Fix Exchange Rate Amount";
          //FindCurrency(Date,RelCurrencyCode,2); //**4PS.o
          FindCurrency(Type,Code,Date,RelCurrencyCode,2); //**4PS.n
          IF NOT UseAdjmtAmounts THEN BEGIN
            TESTFIELD("Exchange Rate Amount");
            TESTFIELD("Relational Exch. Rate Amount");
          END ELSE BEGIN
            TESTFIELD("Adjustment Exch. Rate Amount");
            TESTFIELD("Relational Adjmt Exch Rate Amt");
            "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
            "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
          END;
          CASE FixExchangeRateAmt OF
            "Fix Exchange Rate Amount"::"Relational Currency":
              ExchangeRateAmt :=
                (RelExchangeRateAmt * "Relational Exch. Rate Amount") /
                ("Exchange Rate Amount" * Factor);
            "Fix Exchange Rate Amount"::Currency:
                RelExchangeRateAmt :=
                  ((Factor * ExchangeRateAmt * "Exchange Rate Amount") /
                  "Relational Exch. Rate Amount");
            "Fix Exchange Rate Amount"::Both:
              CASE "Fix Exchange Rate Amount" OF
                "Fix Exchange Rate Amount"::"Relational Currency":
                  "Exchange Rate Amount" :=
                    (RelExchangeRateAmt * "Relational Exch. Rate Amount") /
                    (ExchangeRateAmt * Factor);
                "Fix Exchange Rate Amount"::Currency:
                  "Relational Exch. Rate Amount" :=
                    ((Factor * ExchangeRateAmt * "Exchange Rate Amount") /
                    RelExchangeRateAmt);
                "Fix Exchange Rate Amount"::Both:
                  BEGIN
                    Amount := (Amount / ExchangeRateAmt) *  RelExchangeRateAmt;
                    Amount := (Amount / "Exchange Rate Amount") * "Relational Exch. Rate Amount";
                    EXIT(Amount);
                  END;
            END;
          END;
          Amount := (Amount / RelExchangeRateAmt) * ExchangeRateAmt;
          Amount :=  (Amount / "Relational Exch. Rate Amount") * "Exchange Rate Amount";
        END;
      //**4PS.sn
      END ELSE BEGIN
        IF "Relational Currency Code" = '' THEN
          IF "Fix Exchange Rate Amount" = "Fix Exchange Rate Amount"::Both THEN
            Amount := (Amount / "Exchange Rate Amount Purchase") * "Relat. Exch. Rate Amt Purchase"
          ELSE
            Amount := Amount / Factor
        ELSE BEGIN
          RelExchangeRateAmt := "Relat. Exch. Rate Amt Purchase";
          ExchangeRateAmt := "Exchange Rate Amount Purchase";
          RelCurrencyCode := "Relational Currency Code";
          FixExchangeRateAmt := "Fix Exchange Rate Amount";
          FindCurrency(Type,Code,Date,RelCurrencyCode,2);
          IF NOT UseAdjmtAmounts THEN BEGIN
            TESTFIELD("Exchange Rate Amount Purchase");
            TESTFIELD("Relat. Exch. Rate Amt Purchase");
          END ELSE BEGIN
            TESTFIELD("Adjustment Exch. Rate Amount");
            TESTFIELD("Relational Adjmt Exch Rate Amt");
            "Exchange Rate Amount Purchase" := "Adjustment Exch. Rate Amount";
            "Relat. Exch. Rate Amt Purchase" := "Relational Adjmt Exch Rate Amt";
            // Purchase combined with adjustments is not applicable
          END;
          CASE FixExchangeRateAmt OF
            "Fix Exchange Rate Amount"::"Relational Currency":
              ExchangeRateAmt :=
                (RelExchangeRateAmt * "Relat. Exch. Rate Amt Purchase") /
                ("Exchange Rate Amount Purchase" * Factor);
            "Fix Exchange Rate Amount"::Currency:
                RelExchangeRateAmt :=
                  ((Factor * ExchangeRateAmt * "Exchange Rate Amount Purchase") /
                  "Relat. Exch. Rate Amt Purchase");
            "Fix Exchange Rate Amount"::Both:
              CASE "Fix Exchange Rate Amount" OF
                "Fix Exchange Rate Amount"::"Relational Currency":
                  "Exchange Rate Amount Purchase" :=
                    (RelExchangeRateAmt * "Relat. Exch. Rate Amt Purchase") /
                    (ExchangeRateAmt * Factor);
                "Fix Exchange Rate Amount"::Currency:
                  "Relat. Exch. Rate Amt Purchase" :=
                    ((Factor * ExchangeRateAmt * "Exchange Rate Amount Purchase") /
                    RelExchangeRateAmt);
                "Fix Exchange Rate Amount"::Both:
                  BEGIN
                    Amount := (Amount / ExchangeRateAmt) *  RelExchangeRateAmt;
                    Amount := (Amount / "Exchange Rate Amount Purchase") * "Relat. Exch. Rate Amt Purchase";
                    EXIT(Amount);
                  END;
            END;
          END;
          Amount := (Amount / RelExchangeRateAmt) * ExchangeRateAmt;
          Amount := (Amount / "Relat. Exch. Rate Amt Purchase") * "Exchange Rate Amount Purchase";
        END;
      END;
      //**4PS.en
      EXIT(Amount);
    END;

    [External]
    PROCEDURE ExchangeRate@2(Type@1100528600 : ' ,Project,Estimate';Code@1100528200 : Code[20];Date@1000 : Date;CurrencyCode@1001 : Code[10];UseSalesExchange@1100528201 : Boolean) : Decimal;
    BEGIN
      IF CurrencyCode = '' THEN
        EXIT(1);
      //FindCurrency(Date,CurrencyCode,1); //**4PS.o
      FindCurrency(Type,Code,Date,CurrencyCode,1); //**4PS.n

      IF NOT UseAdjmtAmounts THEN BEGIN
        IF UseSalesExchange THEN BEGIN //**4PS.n
          TESTFIELD("Exchange Rate Amount");
          TESTFIELD("Relational Exch. Rate Amount");
        //**4PS.sn
        END ELSE BEGIN
          TESTFIELD("Exchange Rate Amount Purchase");
          TESTFIELD("Relat. Exch. Rate Amt Purchase");
        END;
        //**4PS.en
      END ELSE BEGIN
        TESTFIELD("Adjustment Exch. Rate Amount");
        TESTFIELD("Relational Adjmt Exch Rate Amt");
        "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
        "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
        //**4PS.sn
        "Exchange Rate Amount Purchase" := "Adjustment Exch. Rate Amount";
        "Relat. Exch. Rate Amt Purchase" := "Relational Adjmt Exch Rate Amt";
        // Purchase combined with adjustments is not applicable
        //**4PS.en
      END;

      IF UseSalesExchange THEN BEGIN //**4PS.n
        RelExchangeRateAmt := "Relational Exch. Rate Amount";
        ExchangeRateAmt := "Exchange Rate Amount";
        RelCurrencyCode := "Relational Currency Code";
        IF "Relational Currency Code" = '' THEN
          CurrencyFactor := "Exchange Rate Amount" / "Relational Exch. Rate Amount"
        ELSE BEGIN
          //FindCurrency(Date,RelCurrencyCode,2); //**4PS.o
          FindCurrency(Type,Code,Date,RelCurrencyCode,2); //**4PS.n
          IF NOT UseAdjmtAmounts THEN BEGIN
            TESTFIELD("Exchange Rate Amount");
            TESTFIELD("Relational Exch. Rate Amount");
          END ELSE BEGIN
            TESTFIELD("Adjustment Exch. Rate Amount");
            TESTFIELD("Relational Adjmt Exch Rate Amt");
            "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
            "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
          END;
          CurrencyFactor := (ExchangeRateAmt * "Exchange Rate Amount") / (RelExchangeRateAmt * "Relational Exch. Rate Amount");
        END;
      //**4PS.sn
      END ELSE BEGIN
        RelExchangeRateAmt := "Relat. Exch. Rate Amt Purchase";
        ExchangeRateAmt := "Exchange Rate Amount Purchase";
        RelCurrencyCode := "Relational Currency Code";
        IF "Relational Currency Code" = '' THEN
          CurrencyFactor := "Exchange Rate Amount Purchase" / "Relat. Exch. Rate Amt Purchase"
        ELSE BEGIN
          FindCurrency(Type,Code,Date,RelCurrencyCode,2);
          IF NOT UseAdjmtAmounts THEN BEGIN
            TESTFIELD("Exchange Rate Amount Purchase");
            TESTFIELD("Relat. Exch. Rate Amt Purchase");
          END ELSE BEGIN
            TESTFIELD("Adjustment Exch. Rate Amount");
            TESTFIELD("Relational Adjmt Exch Rate Amt");
            "Exchange Rate Amount Purchase" := "Adjustment Exch. Rate Amount";
            "Relat. Exch. Rate Amt Purchase" := "Relational Adjmt Exch Rate Amt";
            // Purchase combined with adjustments is not applicable
          END;
          CurrencyFactor := (ExchangeRateAmt * "Exchange Rate Amount Purchase") / (RelExchangeRateAmt * "Relat. Exch. Rate Amt Purchase");
        END;
      END;
      //**4PS.en
      EXIT(CurrencyFactor);
    END;

    [External]
    PROCEDURE ExchangeAmtLCYToFCYOnlyFactor@3(Amount@1000 : Decimal;Factor@1001 : Decimal) : Decimal;
    BEGIN
      Amount := Factor * Amount;
      EXIT(Amount);
    END;

    [External]
    PROCEDURE ExchangeAmtFCYToLCYAdjmt@5(Type@1100529501 : ' ,Project,Estimate';Code@1100529500 : Code[20];Date@1000 : Date;CurrencyCode@1001 : Code[10];Amount@1002 : Decimal;Factor@1003 : Decimal) : Decimal;
    BEGIN
      UseAdjmtAmounts := TRUE;
      //EXIT(ExchangeAmtFCYToLCY(Date,CurrencyCode,Amount,Factor)); //**4PS.o
      EXIT(ExchangeAmtFCYToLCY(Type,Code,Date,CurrencyCode,Amount,Factor,TRUE)); //**4PS.n
    END;

    [External]
    PROCEDURE ExchangeRateAdjmt@4(Type@1100529501 : ' ,Project,Estimate';Code@1100529500 : Code[20];Date@1000 : Date;CurrencyCode@1001 : Code[10]) : Decimal;
    BEGIN
      UseAdjmtAmounts := TRUE;
      //EXIT(ExchangeRate(Date,CurrencyCode)); //**4PS.o
      EXIT(ExchangeRate(Type,Code,Date,CurrencyCode,TRUE)); //**4PS.n
    END;

    [External]
    PROCEDURE ExchangeAmount@43(Amount@1000 : Decimal;FromCurrencyCode@1001 : Code[10];ToCurrencyCode@1002 : Code[10];UsePostingDate@1003 : Date;UseSalesExchange@1100528500 : Boolean) : Decimal;
    VAR
      ToCurrency@1004 : Record 4;
    BEGIN
      IF (FromCurrencyCode = ToCurrencyCode) OR (Amount = 0) THEN
        EXIT(Amount);

      Amount :=
        ExchangeAmtFCYToFCY(
      //  UsePostingDate,FromCurrencyCode,ToCurrencyCode,Amount); //**4PS.o 2013R2
          UsePostingDate,FromCurrencyCode,ToCurrencyCode,Amount,UseSalesExchange);  //**4PS.n 2013R2

      IF ToCurrencyCode <> '' THEN BEGIN
        ToCurrency.GET(ToCurrencyCode);
        Amount := ROUND(Amount,ToCurrency."Amount Rounding Precision");
      END ELSE
        Amount := ROUND(Amount);

      EXIT(Amount);
    END;

    [External]
    PROCEDURE FindCurrency@7(Type@1100528600 : ' ,Project,Estimate';Code@1100528201 : Code[20];Date@1000 : Date;CurrencyCode@1001 : Code[10];CacheNo@1002 : Integer);
    VAR
      JobCurrExchRateRec@1100528200 : Record 11020628;
      EstimateCurrExchangeRate@1100528601 : Record 11229770;
      JobRec@1100529400 : Record 11072003;
    BEGIN
      IF CURRENTCOMPANY <> COMPANYNAME THEN BEGIN
        JobCurrExchRateRec.CHANGECOMPANY(CURRENTCOMPANY);
        CurrencyExchRate2[CacheNo].CHANGECOMPANY(CURRENTCOMPANY);
        EstimateCurrExchangeRate.CHANGECOMPANY(CURRENTCOMPANY);
      END;
      // PEB0014
      IF Date = 0D THEN
        Date := WORKDATE;
      // 0014
      IF (Type2[CacheNo] = Type) AND (Code2[CacheNo] = Code) AND (CurrencyCode2[CacheNo] = CurrencyCode) AND (Date2[CacheNo] = Date) THEN //**4PS.n
        Rec := CurrencyExchRate2[CacheNo]
      ELSE BEGIN
        IF Date = 0D THEN
          Date := WORKDATE;
        //**4PS.sn
        FoundJobCurrExchRate := FALSE;
        IF (Type = Type::Project) AND (Code <> '') THEN BEGIN
          FoundJobCurrExchRate := JobCurrExchRateRec.FindCurrency(Code, Date, CurrencyCode, CurrencyExchRate2[CacheNo]);
          IF NOT FoundJobCurrExchRate THEN
            IF JobRec.GET(Code) THEN
              IF JobRec."Project Exch. Rate Mandatory" THEN
                ERROR(Text001,CurrencyCode);
        END;
        IF (Type = Type::" ") OR ((Type = Type::Project) AND NOT FoundJobCurrExchRate) THEN BEGIN
          CurrencyExchRate2[CacheNo].SETRANGE("Currency Code",CurrencyCode);
          CurrencyExchRate2[CacheNo].SETRANGE("Starting Date",0D,Date);
          CurrencyExchRate2[CacheNo].FINDLAST;
        END;
        IF Type = Type::Estimate THEN
          IF NOT EstimateCurrExchangeRate.FindCurrency(Code, Date, CurrencyCode, CurrencyExchRate2[CacheNo]) THEN BEGIN
            CurrencyExchRate2[CacheNo].SETRANGE("Currency Code",CurrencyCode);
            CurrencyExchRate2[CacheNo].SETRANGE("Starting Date",0D,Date);
            CurrencyExchRate2[CacheNo].FINDLAST;
          END;
        //**4PS.en
        Rec := CurrencyExchRate2[CacheNo];
        CurrencyCode2[CacheNo] := CurrencyCode;
        Date2[CacheNo] := Date;
        //**4PS.sn
        Type2[CacheNo] := Type;
        Code2[CacheNo] := Code;
        //**4PS.en
      END;
      OnAfterFindCurrency(Rec,CurrencyExchRate2);
    END;

    [External]
    PROCEDURE ExchangeAmtFCYToFCY@8(Date@1000 : Date;FromCurrencyCode@1001 : Code[10];ToCurrencyCode@1002 : Code[10];Amount@1003 : Decimal;UseSalesExchange@1100528200 : Boolean) : Decimal;
    BEGIN
      //**4PS.sn
      IF UseSalesExchange THEN BEGIN
        // Sales
      //**4PS.en
        IF FromCurrencyCode = ToCurrencyCode THEN
          EXIT(Amount);
        IF ToCurrencyCode = '' THEN BEGIN
          //FindCurrency2(Date,FromCurrencyCode,1); //**4PS.o
          FindCurrency2(Date,FromCurrencyCode,1,UseSalesExchange); //**4PS.n
          IF CurrencyExchRate3[1]."Relational Currency Code" = '' THEN
            EXIT(
              (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
              CurrencyExchRate3[1]."Relational Exch. Rate Amount");

          //FindCurrency2(Date,CurrencyExchRate3[1]."Relational Currency Code",3); //**4PS.o
          FindCurrency2(Date,CurrencyExchRate3[1]."Relational Currency Code",3,UseSalesExchange); //**4PS.n
          Amount :=
            ((Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
             CurrencyExchRate3[1]."Relational Exch. Rate Amount");
          EXIT(
            (Amount / CurrencyExchRate3[3]."Exchange Rate Amount") *
            CurrencyExchRate3[3]."Relational Exch. Rate Amount");
        END;
        IF FromCurrencyCode = '' THEN BEGIN
          //FindCurrency2(Date,ToCurrencyCode,2); //**4PS.o
          FindCurrency2(Date,ToCurrencyCode,2,UseSalesExchange); //**4PS.n
          IF CurrencyExchRate3[2]."Relational Currency Code" = '' THEN
            EXIT(
              (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
              CurrencyExchRate3[2]."Exchange Rate Amount");

          //FindCurrency2(Date,CurrencyExchRate3[2]."Relational Currency Code",3); //**4PS.o
          FindCurrency2(Date,CurrencyExchRate3[2]."Relational Currency Code",3,UseSalesExchange); //**4PS.n
          Amount :=
            ((Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
             CurrencyExchRate3[2]."Exchange Rate Amount");
          EXIT(
            (Amount / CurrencyExchRate3[3]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[3]."Exchange Rate Amount");
        END;
        //**4PS.so
        //FindCurrency2(Date,FromCurrencyCode,1);
        //FindCurrency2(Date,ToCurrencyCode,2);
        //**4PS.eo
        //**4PS.sn
        FindCurrency2(Date,FromCurrencyCode,1,UseSalesExchange);
        FindCurrency2(Date,ToCurrencyCode,2,UseSalesExchange);
        //**4PS.en
        IF CurrencyExchRate3[1]."Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[2]."Exchange Rate Amount");
        IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Currency Code" THEN
          EXIT(
            (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
            CurrencyExchRate3[1]."Relational Exch. Rate Amount");

        IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN BEGIN
          Amount :=
            ((Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
             CurrencyExchRate3[1]."Relational Exch. Rate Amount");
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[2]."Exchange Rate Amount");
        END;
        IF (CurrencyExchRate3[1]."Relational Currency Code" = '') AND
          (CurrencyExchRate3[2]."Relational Currency Code" <> '')
        THEN BEGIN
          //FindCurrency2(Date,CurrencyExchRate3[2]."Relational Currency Code",3); //**4PS.o
          FindCurrency2(Date,CurrencyExchRate3[2]."Relational Currency Code",3,UseSalesExchange); //**4PS.n
          Amount :=
            (Amount * CurrencyExchRate3[1]."Relational Exch. Rate Amount") /
            CurrencyExchRate3[1]."Exchange Rate Amount";
          Amount :=
            (Amount / CurrencyExchRate3[3]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[3]."Exchange Rate Amount";
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[2]."Exchange Rate Amount");
        END;
        IF (CurrencyExchRate3[1]."Relational Currency Code" <> '') AND
          (CurrencyExchRate3[2]."Relational Currency Code" = '')
        THEN BEGIN
          //FindCurrency2(Date,CurrencyExchRate3[1]."Relational Currency Code",3); //**4PS.o
          FindCurrency2(Date,CurrencyExchRate3[1]."Relational Currency Code",3,UseSalesExchange); //**4PS.n
          Amount :=
            (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
            CurrencyExchRate3[1]."Relational Exch. Rate Amount";
          Amount :=
            (Amount / CurrencyExchRate3[3]."Exchange Rate Amount") *
            CurrencyExchRate3[3]."Relational Exch. Rate Amount";
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[2]."Exchange Rate Amount");
        END;
      //**4PS.sn
      END ELSE BEGIN
        // Purchase
        IF FromCurrencyCode = ToCurrencyCode THEN
          EXIT(Amount);
        IF ToCurrencyCode = '' THEN BEGIN
          FindCurrency2(Date,FromCurrencyCode,1,UseSalesExchange);
          IF CurrencyExchRate3[1]."Relational Currency Code" = '' THEN
            EXIT(
              (Amount / CurrencyExchRate3[1]."Exchange Rate Amount Purchase") *
              CurrencyExchRate3[1]."Relat. Exch. Rate Amt Purchase");

          FindCurrency2(Date,CurrencyExchRate3[1]."Relational Currency Code",3,UseSalesExchange);
          Amount :=
            ((Amount / CurrencyExchRate3[1]."Exchange Rate Amount Purchase") *
             CurrencyExchRate3[1]."Relat. Exch. Rate Amt Purchase");
          EXIT(
            (Amount / CurrencyExchRate3[3]."Exchange Rate Amount Purchase") *
            CurrencyExchRate3[3]."Relat. Exch. Rate Amt Purchase");
        END;
        IF FromCurrencyCode = '' THEN BEGIN
          FindCurrency2(Date,ToCurrencyCode,2,UseSalesExchange);
          IF CurrencyExchRate3[2]."Relational Currency Code" = '' THEN
            EXIT(
              (Amount / CurrencyExchRate3[2]."Relat. Exch. Rate Amt Purchase") *
              CurrencyExchRate3[2]."Exchange Rate Amount Purchase");

          FindCurrency2(Date,CurrencyExchRate3[2]."Relational Currency Code",3,UseSalesExchange);
          Amount :=
            ((Amount / CurrencyExchRate3[2]."Relat. Exch. Rate Amt Purchase") *
             CurrencyExchRate3[2]."Exchange Rate Amount Purchase");
          EXIT(
            (Amount / CurrencyExchRate3[3]."Relat. Exch. Rate Amt Purchase") *
            CurrencyExchRate3[3]."Exchange Rate Amount Purchase");
        END;
        FindCurrency2(Date,FromCurrencyCode,1,UseSalesExchange);
        FindCurrency2(Date,ToCurrencyCode,2,UseSalesExchange);
        IF CurrencyExchRate3[1]."Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relat. Exch. Rate Amt Purchase") *
            CurrencyExchRate3[2]."Exchange Rate Amount Purchase");
        IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Currency Code" THEN
          EXIT(
            (Amount / CurrencyExchRate3[1]."Exchange Rate Amount Purchase") *
            CurrencyExchRate3[1]."Relat. Exch. Rate Amt Purchase");

        IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN BEGIN
          Amount :=
            ((Amount / CurrencyExchRate3[1]."Exchange Rate Amount Purchase") *
             CurrencyExchRate3[1]."Relat. Exch. Rate Amt Purchase");
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relat. Exch. Rate Amt Purchase") *
            CurrencyExchRate3[2]."Exchange Rate Amount Purchase");
        END;
        IF (CurrencyExchRate3[1]."Relational Currency Code" = '') AND
          (CurrencyExchRate3[2]."Relational Currency Code" <> '')
        THEN BEGIN
          FindCurrency2(Date,CurrencyExchRate3[2]."Relational Currency Code",3,UseSalesExchange);
          Amount :=
            (Amount * CurrencyExchRate3[1]."Relat. Exch. Rate Amt Purchase") /
            CurrencyExchRate3[1]."Exchange Rate Amount Purchase";
          Amount :=
            (Amount / CurrencyExchRate3[3]."Relat. Exch. Rate Amt Purchase") *
            CurrencyExchRate3[3]."Exchange Rate Amount Purchase";
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relat. Exch. Rate Amt Purchase") *
            CurrencyExchRate3[2]."Exchange Rate Amount Purchase");
        END;
        IF (CurrencyExchRate3[1]."Relational Currency Code" <> '') AND
          (CurrencyExchRate3[2]."Relational Currency Code" = '')
        THEN BEGIN
          FindCurrency2(Date,CurrencyExchRate3[1]."Relational Currency Code",3,UseSalesExchange);
          Amount :=
            (Amount / CurrencyExchRate3[1]."Exchange Rate Amount Purchase") *
            CurrencyExchRate3[1]."Relat. Exch. Rate Amt Purchase";
          Amount :=
            (Amount / CurrencyExchRate3[3]."Exchange Rate Amount Purchase") *
            CurrencyExchRate3[3]."Relat. Exch. Rate Amt Purchase";
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relat. Exch. Rate Amt Purchase") *
            CurrencyExchRate3[2]."Exchange Rate Amount Purchase");
        END;
      END;
      //**4PS.en
    END;

    LOCAL PROCEDURE FindCurrency2@9(Date@1000 : Date;CurrencyCode@1001 : Code[10];Number@1002 : Integer;UseSalesExchange@1100528200 : Boolean);
    BEGIN
      IF Date = 0D THEN
        Date := WORKDATE;
      CurrencyExchRate3[Number].SETRANGE("Currency Code",CurrencyCode);
      CurrencyExchRate3[Number].SETRANGE("Starting Date",0D,Date);
      CurrencyExchRate3[Number].FINDLAST;
      IF UseSalesExchange THEN BEGIN //**4PS.n
        CurrencyExchRate3[Number].TESTFIELD("Exchange Rate Amount");
        CurrencyExchRate3[Number].TESTFIELD("Relational Exch. Rate Amount");
      //**4PS.sn
      END ELSE BEGIN
        CurrencyExchRate3[Number].TESTFIELD("Exchange Rate Amount Purchase");
        CurrencyExchRate3[Number].TESTFIELD("Relat. Exch. Rate Amt Purchase");
      END;
      //**4PS.en
    END;

    [External]
    PROCEDURE ApplnExchangeAmtFCYToFCY@13(Date@1000 : Date;FromCurrencyCode@1001 : Code[10];ToCurrencyCode@1002 : Code[10];Amount@1003 : Decimal;VAR ExchRateFound@1004 : Boolean;UseSalesExchange@1100528200 : Boolean) : Decimal;
    BEGIN
      //**4PS.sn
      IF UseSalesExchange THEN BEGIN
        // Sales
      //**4PS.en
        IF FromCurrencyCode = ToCurrencyCode THEN
          EXIT(Amount);
        IF ToCurrencyCode = '' THEN BEGIN
          //ExchRateFound := FindApplnCurrency(Date,FromCurrencyCode,1); //**4PS.o
          ExchRateFound := FindApplnCurrency(Date,FromCurrencyCode,1,UseSalesExchange); //**4PS.n
          IF NOT ExchRateFound THEN
            EXIT(0);

          IF CurrencyExchRate3[1]."Relational Currency Code" = '' THEN
            EXIT(
              (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
              CurrencyExchRate3[1]."Relational Exch. Rate Amount");

          //ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[1]."Relational Currency Code",3); //**4PS.o
          ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[1]."Relational Currency Code",3,UseSalesExchange); //**4PS.n
          IF NOT ExchRateFound THEN
            EXIT(0);

          Amount :=
            (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
            CurrencyExchRate3[1]."Relational Exch. Rate Amount";
          EXIT(
            (Amount / CurrencyExchRate3[3]."Exchange Rate Amount") *
            CurrencyExchRate3[3]."Relational Exch. Rate Amount");
        END;
        IF FromCurrencyCode = '' THEN BEGIN
          //ExchRateFound := FindApplnCurrency(Date,ToCurrencyCode,2); //**4PS.o
          ExchRateFound := FindApplnCurrency(Date,ToCurrencyCode,2,UseSalesExchange); //**4PS.n
          IF NOT ExchRateFound THEN
            EXIT(0);

          IF CurrencyExchRate3[2]."Relational Currency Code" = '' THEN
            EXIT(
              (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
              CurrencyExchRate3[2]."Exchange Rate Amount");

          //ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[2]."Relational Currency Code",3); //**4PS.o
          ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[2]."Relational Currency Code",3,UseSalesExchange); //**4PS.n
          IF NOT ExchRateFound THEN
            EXIT(0);

          Amount :=
            ((Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
             CurrencyExchRate3[2]."Exchange Rate Amount");
          EXIT(
            (Amount / CurrencyExchRate3[3]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[3]."Exchange Rate Amount");
        END;
        //ExchRateFound := FindApplnCurrency(Date,FromCurrencyCode,1); //**4PS.o
        ExchRateFound := FindApplnCurrency(Date,FromCurrencyCode,1,UseSalesExchange); //**4PS.n
        IF NOT ExchRateFound THEN
          EXIT(0);

        //ExchRateFound := FindApplnCurrency(Date,ToCurrencyCode,2); //**4PS.o
        ExchRateFound := FindApplnCurrency(Date,ToCurrencyCode,2,UseSalesExchange);  //**4PS.n
        IF NOT ExchRateFound THEN
          EXIT(0);

        IF CurrencyExchRate3[1]."Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[2]."Exchange Rate Amount");
        IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Currency Code" THEN
          EXIT(
            (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
            CurrencyExchRate3[1]."Relational Exch. Rate Amount");

        IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN BEGIN
          Amount :=
            ((Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
             CurrencyExchRate3[1]."Relational Exch. Rate Amount");
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[2]."Exchange Rate Amount");
        END;
        IF (CurrencyExchRate3[1]."Relational Currency Code" = '') AND
          (CurrencyExchRate3[2]."Relational Currency Code" <> '')
        THEN BEGIN
          //ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[2]."Relational Currency Code",3); //**4PS.o
          ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[2]."Relational Currency Code",3,UseSalesExchange); //**4PS.n
          IF NOT ExchRateFound THEN
            EXIT(0);

          Amount :=
            (Amount * CurrencyExchRate3[1]."Relational Exch. Rate Amount") /
            CurrencyExchRate3[1]."Exchange Rate Amount";
          Amount :=
            (Amount / CurrencyExchRate3[3]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[3]."Exchange Rate Amount";
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[2]."Exchange Rate Amount");
        END;
        IF (CurrencyExchRate3[1]."Relational Currency Code" <> '') AND
          (CurrencyExchRate3[2]."Relational Currency Code" = '')
        THEN BEGIN
          //ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[1]."Relational Currency Code",3); //**4PS.o
          ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[1]."Relational Currency Code",3,UseSalesExchange); //**4PS.n
          IF NOT ExchRateFound THEN
            EXIT(0);

          Amount :=
            (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
            CurrencyExchRate3[1]."Relational Exch. Rate Amount";
          Amount :=
            (Amount / CurrencyExchRate3[3]."Exchange Rate Amount") *
            CurrencyExchRate3[3]."Relational Exch. Rate Amount";
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[2]."Exchange Rate Amount");
        END;
      //**4PS.sn
      END ELSE BEGIN
        // Purchase
        IF FromCurrencyCode = ToCurrencyCode THEN
          EXIT(Amount);
        IF ToCurrencyCode = '' THEN BEGIN
          ExchRateFound := FindApplnCurrency(Date,FromCurrencyCode,1,UseSalesExchange);
          IF NOT ExchRateFound THEN
            EXIT(0);

          IF CurrencyExchRate3[1]."Relational Currency Code" = '' THEN
            EXIT(
              (Amount / CurrencyExchRate3[1]."Exchange Rate Amount Purchase") *
              CurrencyExchRate3[1]."Relat. Exch. Rate Amt Purchase");

          ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[1]."Relational Currency Code",3,UseSalesExchange);
          IF NOT ExchRateFound THEN
            EXIT(0);

          Amount :=
            (Amount / CurrencyExchRate3[1]."Exchange Rate Amount Purchase") *
            CurrencyExchRate3[1]."Relat. Exch. Rate Amt Purchase";
          EXIT(
            (Amount / CurrencyExchRate3[3]."Exchange Rate Amount Purchase") *
            CurrencyExchRate3[3]."Relat. Exch. Rate Amt Purchase");
        END;
        IF FromCurrencyCode = '' THEN BEGIN
          ExchRateFound := FindApplnCurrency(Date,ToCurrencyCode,2,UseSalesExchange);
          IF NOT ExchRateFound THEN
            EXIT(0);

          IF CurrencyExchRate3[2]."Relational Currency Code" = '' THEN
            EXIT(
              (Amount / CurrencyExchRate3[2]."Relat. Exch. Rate Amt Purchase") *
              CurrencyExchRate3[2]."Exchange Rate Amount Purchase");

          ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[2]."Relational Currency Code",3,UseSalesExchange);
          IF NOT ExchRateFound THEN
            EXIT(0);

          Amount :=
            ((Amount / CurrencyExchRate3[2]."Relat. Exch. Rate Amt Purchase") *
             CurrencyExchRate3[2]."Exchange Rate Amount Purchase");
          EXIT(
            (Amount / CurrencyExchRate3[3]."Relat. Exch. Rate Amt Purchase") *
            CurrencyExchRate3[3]."Exchange Rate Amount Purchase");
        END;
        ExchRateFound := FindApplnCurrency(Date,FromCurrencyCode,1,UseSalesExchange);
        IF NOT ExchRateFound THEN
          EXIT(0);

        ExchRateFound := FindApplnCurrency(Date,ToCurrencyCode,2,UseSalesExchange);
        IF NOT ExchRateFound THEN
          EXIT(0);

        IF CurrencyExchRate3[1]."Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relat. Exch. Rate Amt Purchase") *
            CurrencyExchRate3[2]."Exchange Rate Amount Purchase");
        IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Currency Code" THEN
          EXIT(
            (Amount / CurrencyExchRate3[1]."Exchange Rate Amount Purchase") *
            CurrencyExchRate3[1]."Relat. Exch. Rate Amt Purchase");

        IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN BEGIN
          Amount :=
            ((Amount / CurrencyExchRate3[1]."Exchange Rate Amount Purchase") *
             CurrencyExchRate3[1]."Relat. Exch. Rate Amt Purchase");
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relat. Exch. Rate Amt Purchase") *
            CurrencyExchRate3[2]."Exchange Rate Amount Purchase");
        END;
        IF (CurrencyExchRate3[1]."Relational Currency Code" = '') AND
          (CurrencyExchRate3[2]."Relational Currency Code" <> '')
        THEN BEGIN
          ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[2]."Relational Currency Code",3,UseSalesExchange);
          IF NOT ExchRateFound THEN
            EXIT(0);

          Amount :=
            (Amount * CurrencyExchRate3[1]."Relat. Exch. Rate Amt Purchase") /
            CurrencyExchRate3[1]."Exchange Rate Amount Purchase";
          Amount :=
            (Amount / CurrencyExchRate3[3]."Relat. Exch. Rate Amt Purchase") *
            CurrencyExchRate3[3]."Exchange Rate Amount Purchase";
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relat. Exch. Rate Amt Purchase") *
            CurrencyExchRate3[2]."Exchange Rate Amount Purchase");
        END;
        IF (CurrencyExchRate3[1]."Relational Currency Code" <> '') AND
          (CurrencyExchRate3[2]."Relational Currency Code" = '')
        THEN BEGIN
          ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[1]."Relational Currency Code",3,UseSalesExchange);
          IF NOT ExchRateFound THEN
            EXIT(0);

          Amount :=
            (Amount / CurrencyExchRate3[1]."Exchange Rate Amount Purchase") *
            CurrencyExchRate3[1]."Relat. Exch. Rate Amt Purchase";
          Amount :=
            (Amount / CurrencyExchRate3[3]."Exchange Rate Amount Purchase") *
            CurrencyExchRate3[3]."Relat. Exch. Rate Amt Purchase";
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relat. Exch. Rate Amt Purchase") *
            CurrencyExchRate3[2]."Exchange Rate Amount Purchase");
        END;
      END;
      //**4PS.en
    END;

    LOCAL PROCEDURE FindApplnCurrency@12(Date@1000 : Date;CurrencyCode@1001 : Code[10];Number@1002 : Integer;UseSalesExchange@1100528200 : Boolean) : Boolean;
    BEGIN
      CurrencyExchRate3[Number].SETRANGE("Currency Code",CurrencyCode);
      CurrencyExchRate3[Number].SETRANGE("Starting Date",0D,Date);
      IF NOT CurrencyExchRate3[Number].FINDLAST THEN
        EXIT(FALSE);

      IF UseSalesExchange THEN BEGIN //**4PS.n
        CurrencyExchRate3[Number].TESTFIELD("Exchange Rate Amount");
        CurrencyExchRate3[Number].TESTFIELD("Relational Exch. Rate Amount");
      //**4PS.sn
      END ELSE BEGIN
        CurrencyExchRate3[Number].TESTFIELD("Exchange Rate Amount Purchase");
        CurrencyExchRate3[Number].TESTFIELD("Relat. Exch. Rate Amt Purchase");
      END;
      //**4PS.en
      EXIT(TRUE);
    END;

    [External]
    PROCEDURE GetCurrentCurrencyFactor@14(CurrencyCode@1000 : Code[10]) : Decimal;
    BEGIN
      SETRANGE("Currency Code",CurrencyCode);
      IF FINDLAST THEN
        IF "Relational Exch. Rate Amount" <> 0 THEN
          EXIT("Exchange Rate Amount" / "Relational Exch. Rate Amount");
    END;

    [External]
    PROCEDURE GetLastestExchangeRate@20(CurrencyCode@1000 : Code[10];VAR Date@1001 : Date;VAR Amt@1002 : Decimal);
    BEGIN
      Date := 0D;
      Amt := 0;
      SETRANGE("Currency Code",CurrencyCode);
      IF FINDLAST THEN BEGIN
        Date := "Starting Date";
        IF "Exchange Rate Amount" <> 0 THEN
          Amt := "Relational Exch. Rate Amount" / "Exchange Rate Amount";
      END;
    END;

    [External]
    PROCEDURE CurrencyExchangeRateExist@10(CurrencyCode@1000 : Code[10];Date@1001 : Date) : Boolean;
    VAR
      CurrencyExchangeRate@1002 : Record 330;
    BEGIN
      CurrencyExchangeRate.SETRANGE("Currency Code",CurrencyCode);
      CurrencyExchangeRate.SETRANGE("Starting Date",0D,Date);
      EXIT(NOT CurrencyExchangeRate.ISEMPTY);
    END;

    [External]
    PROCEDURE SetCurrentCurrencyFactor@15(CurrencyCode@1000 : Code[10];CurrencyFactor@1001 : Decimal);
    VAR
      RateForTodayExists@1002 : Boolean;
    BEGIN
      "Currency Code" := CurrencyCode;
      TESTFIELD("Currency Code");
      RateForTodayExists := GET(CurrencyCode,TODAY);
      "Exchange Rate Amount" := 1;
      "Relational Exch. Rate Amount" := 1 / CurrencyFactor;
      "Adjustment Exch. Rate Amount" := "Exchange Rate Amount";
      "Relational Adjmt Exch Rate Amt" := "Relational Exch. Rate Amount";
      IF RateForTodayExists THEN BEGIN
        "Relational Currency Code" := '';
        MODIFY;
      END ELSE BEGIN
        "Starting Date" := TODAY;
        INSERT;
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterFindCurrency@11(VAR CurrencyExchangeRate@1000 : Record 330;VAR CurrencyExchangeRateArray@1001 : ARRAY [2] OF Record 330);
    BEGIN
    END;

    PROCEDURE HasFoundJobCurrExchRate@1100529500() : Boolean;
    BEGIN
      //**4PS
      EXIT(FoundJobCurrExchRate);
    END;

    BEGIN
    {
      4PS 11-08-16 UKR-C25599 TTA: Project exchange rate alert (DP048 BI048) - Function FindCurrency modified
    }
    END.
  }
}

