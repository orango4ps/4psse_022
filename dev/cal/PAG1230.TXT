OBJECT Page 1230 SEPA Direct Debit Mandates
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=SEPA Direct Debit Mandates;
               NOR=SEPA Direct Debit-belastningsfullmakter;
               SVE=SEPA Autogiromedgivanden];
    SourceTable=Table1230;
    DataCaptionFields=ID,Customer No.,Customer Bank Account Code;
    PageType=List;
    OnClosePage=BEGIN
                  //**4PS.sn
                  CheckDates;
                  //**4PS.en
                END;

    OnAfterGetRecord=BEGIN
                       //**4PS.sn
                       SetRegisterExternalDocument();
                       //**4PS.en
                     END;

    OnNewRecord=BEGIN
                  IF "Customer No." = '' THEN
                    IF GETFILTER("Customer No.") <> '' THEN
                      VALIDATE("Customer No.",GETRANGEMIN("Customer No."));
                  IF "Customer Bank Account Code" = '' THEN
                    IF GETFILTER("Customer Bank Account Code") <> '' THEN
                      VALIDATE("Customer Bank Account Code",GETRANGEMIN("Customer Bank Account Code"));

                  FillDefaultMandateForFields(); //**4PS.n DP00640 (SEPA-2)
                END;

    OnAfterGetCurrRecord=BEGIN
                           //**4PS.sn
                           SetRegisterExternalDocument();
                           //**4PS.en
                         END;

    ActionList=ACTIONS
    {
      { 1100529003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1100529002;1 ;ActionGroup;
                      CaptionML=ENU=Mandate }
      { 1100529001;2 ;Action    ;
                      CaptionML=[ENU=&Documents;
                                 SVE=&Dokument];
                      Image=Documents;
                      OnAction=VAR
                                 RecRef@1100525001 : RecordRef;
                                 DocumentFilters@1100525002 : Codeunit 11012432;
                               BEGIN
                                 //**4PS.sn
                                 TESTFIELD(ID);
                                 RecRef.GETTABLE(Rec);
                                 DocumentFilters.CreateTempFilterAndExecute1(RecRef, '', FALSE, TRUE);
                                 //**4PS.en
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the direct-debit mandate.;
                           NOR=Angir ID-en for Direct Debit-belastningsfullmakten.;
                           SVE=Anger ID:t f”r autogiromedgivandet.];
                ApplicationArea=#Suite;
                SourceExpr=ID }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer that the direct-debit mandate is activated for.;
                           NOR=Angir kunden som Direct Debit-belastningsfullmakten blir aktivert for.;
                           SVE=Anger kunden som autogiromedgivandet har aktiverats f”r.];
                ApplicationArea=#Suite;
                SourceExpr="Customer No.";
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies customer bank account that the direct-debit mandate is activated for.;
                           NOR=Angir bankkontoen for kunden som Direct Debit-belastningsfullmakten blir aktivert for.;
                           SVE=Anger kundens bankkonto som autogiromedgivandet har aktiverats f”r.];
                ApplicationArea=#Suite;
                SourceExpr="Customer Bank Account Code" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the direct-debit mandate starts.;
                           NOR=Angir datoen da Direct Debit-belastningsfullmakten starter.;
                           SVE=Anger datumet som autogiromedgivandet b”rjar g„lla fr†n.];
                ApplicationArea=#Suite;
                SourceExpr="Valid From" }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the direct-debit mandate ends.;
                           NOR=Angir datoen da Direct Debit-belastningsfullmakten slutter.;
                           SVE=Anger datumet som autogiromedgivandet slutar g„lla.];
                ApplicationArea=#Suite;
                SourceExpr="Valid To" }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the direct-debit mandate was signed by the customer.;
                           NOR=Angir n†r Direct Debit-belastningsfullmakten ble signert av kunden.;
                           SVE=Anger n„r autogiromedgivandet signerades av kunden.];
                ApplicationArea=#Suite;
                SourceExpr="Date of Signature" }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the direct-debit transaction is the first or the last according to the expected number of direct-debit transactions that you entered in the Expected Number of Debits field.;
                           NOR=Angir om Direct Debit-transaksjonen er den f›rste eller siste i henhold til det forventede antallet Direct Debit-transaksjoner du oppgav i feltet Forventet antall debetbel›p.;
                           SVE=Anger om autogirotransaktionen „r den f”rsta eller sista enligt det f”rv„ntade antalet autogirotransaktioner som du angav i f„ltet F”rv„ntat antal debet.];
                ApplicationArea=#Suite;
                SourceExpr="Type of Payment" }

    { 1100529004;2;Field  ;
                SourceExpr="Mandate for" }

    { 1100529005;2;Field  ;
                SourceExpr="No. Mandate for" }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many direct-debit transactions you expect to perform using the direct-debit mandate. This field is used to calculate when to enter First or Last in the Sequence Type field in the Direct Debit Collect. Entries window.;
                           NOR=Angir hvor mange Direct Debit-transaksjoner du forventer † utf›re ved hjelp av Direct Debit-belastningsfullmakten. Dette feltet brukes til † beregne n†r du skal oppgi F›rst eller Sist i feltet Sekvenstype i vinduet Poster for Direct Debit-oppkreving.;
                           SVE=Anger hur m†nga autogirotransaktioner som du f”rv„ntar ska utf”ras med autogiromedgivandet. Det h„r f„ltet anv„nds f”r att ber„kna n„r F”rsta eller Sista ska anges i f„ltet Typ av betalning i f”nstret Transaktioner f”r samlingar med autogiro.];
                ApplicationArea=#Suite;
                SourceExpr="Expected Number of Debits" }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many direct-debit transactions have been performed using the direct-debit mandate.;
                           NOR=Angir hvor mange Direct Debit-transaksjoner som har blitt utf›rt ved hjelp av Direct Debit-belastningsfullmakten.;
                           SVE=Anger hur m†nga autogirotransaktioner som har utf”rts med autogiromedgivandet.];
                ApplicationArea=#Suite;
                SourceExpr="Debit Counter" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the related record is blocked from being posted in transactions, for example a customer that is declared insolvent or an item that is placed in quarantine.;
                           NOR=Angir at den relaterte posten er blokkert fra † bli bokf›rt i transaksjoner, for eksempel at en kunde blir erkl‘rt betalingsudyktig, eller at en vare blir plassert i karantene.;
                           SVE=Anger att den relaterade posten „r sp„rrad och inte kan bokf”ras i transaktioner, till exempel en kund som har f”rklarats konkursm„ssig eller en artikel som har placerats i karant„n.];
                ApplicationArea=#Suite;
                SourceExpr=Blocked }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the direct-debit mandate is closed, for example because the date in the Valid To field has been exceeded.;
                           NOR=Angir at Direct Debit-belastningsfullmakten er lukket, for eksempel fordi datoen i feltet Gyldig til har blitt overskredet.;
                           SVE=Anger att autogiromedgivandet inte l„ngre g„ller, till exempel om datumet i f„ltet Giltig till har passerat.];
                ApplicationArea=#Suite;
                SourceExpr=Closed }

    { 13  ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 1100529000;1;Part   ;
                Name=RegisterExternalDocumentFB;
                PagePartID=Page11125053;
                Enabled=RegisterExtDocFBEnabled;
                PartType=Page }

    { 14  ;1   ;Part      ;
                ApplicationArea=#RecordLinks;
                PartType=System;
                SystemPartID=RecordLinks }

    { 15  ;1   ;Part      ;
                ApplicationArea=#Notes;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      RegisterExtDocFBEnabled@1100529000 : Boolean INDATASET;
      Text11012000@1100528600 : TextConst 'ENU=Notice: Field ''%1'' not given for every line';

    LOCAL PROCEDURE SetRegisterExternalDocument@19077479();
    VAR
      RecRef@1100528700 : RecordRef;
    BEGIN
      //**4PS
      RegisterExtDocFBEnabled := (ID <> '');
      RecRef.GETTABLE(Rec);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetRecordReference(RecRef);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetByCompany(TRUE);
      CurrPage.RegisterExternalDocumentFB.PAGE.SetDepartmentCode('');
    END;

    PROCEDURE FillDefaultMandateForFields@1100409000();
    VAR
      DirectDebitMandate@1100409000 : Record 1230;
      Project@1100409001 : Record 11072003;
      ServContr@1100409002 : Record 11012812;
      ServOrder@1100409003 : Record 11012823;
      NoMandateFor@1100409004 : Code[20];
    BEGIN
      //**4PS DP00640 (SEPA-2)
      IF ("Customer No." = '') OR (GETFILTER("Mandate for Filter") = '') OR (GETFILTER("No. Mandate for Filter") = '') THEN
        EXIT;
      IF STRLEN(GETFILTER("No. Mandate for Filter")) > MAXSTRLEN("No. Mandate for Filter") THEN
        EXIT;
      NoMandateFor := GETFILTER("No. Mandate for Filter");

      DirectDebitMandate.SETRANGE("Mandate for Filter", "Mandate for Filter"::Project);
      IF GETFILTER("Mandate for Filter") = DirectDebitMandate.GETFILTER("Mandate for Filter") THEN BEGIN
        "Mandate for" := "Mandate for"::Project;
        IF Project.GET(NoMandateFor) THEN BEGIN
          IF CheckNoMandateForCustLink("Mandate for", NoMandateFor, FALSE) THEN
            "No. Mandate for" := NoMandateFor;
        END;
        EXIT;
      END;

      DirectDebitMandate.SETRANGE("Mandate for Filter", "Mandate for Filter"::ServiceContract);
      IF GETFILTER("Mandate for Filter") = DirectDebitMandate.GETFILTER("Mandate for Filter") THEN BEGIN
        "Mandate for" := "Mandate for"::ServiceContract;
        IF ServContr.GET(NoMandateFor) THEN BEGIN
          IF CheckNoMandateForCustLink("Mandate for", NoMandateFor, FALSE) THEN
            "No. Mandate for" := NoMandateFor;
        END;
        EXIT;
      END;

      DirectDebitMandate.SETRANGE("Mandate for Filter", "Mandate for Filter"::ServiceOrder);
      IF GETFILTER("Mandate for Filter") = DirectDebitMandate.GETFILTER("Mandate for Filter") THEN BEGIN
        "Mandate for" := "Mandate for"::ServiceOrder;
        IF ServOrder.GET(NoMandateFor) THEN BEGIN
          IF CheckNoMandateForCustLink("Mandate for", NoMandateFor, FALSE) THEN
            "No. Mandate for" := NoMandateFor;
        END;
        EXIT;
      END;
    END;

    LOCAL PROCEDURE CheckDates@1100528600();
    VAR
      SEPADirectDebitMandate@1100528600 : Record 1230;
    BEGIN
      //**4PS
      IF NOT GUIALLOWED THEN
        EXIT;
      SEPADirectDebitMandate.COPY(Rec);
      SEPADirectDebitMandate.SETRANGE(Blocked, FALSE);
      SEPADirectDebitMandate.SETRANGE(Closed, FALSE);
      SEPADirectDebitMandate.SETRANGE("Valid From", 0D);
      IF NOT SEPADirectDebitMandate.ISEMPTY THEN
        MESSAGE(Text11012000, SEPADirectDebitMandate.FIELDCAPTION("Valid From"));
      SEPADirectDebitMandate.SETRANGE("Valid From");
      SEPADirectDebitMandate.SETRANGE("Date of Signature", 0D);
      IF NOT SEPADirectDebitMandate.ISEMPTY THEN
        MESSAGE(Text11012000, SEPADirectDebitMandate.FIELDCAPTION("Date of Signature"));
    END;

    BEGIN
    {
      4PS, 19-06-14, Debit Counter made editable.
    }
    END.
  }
}

