OBJECT Report 11020309 Copy Ext.Budget-Settlement
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Erweiterungsbudget zu Settlement Sheet kopieren;
               ENU=Copy Extension Budget to Settlement Sheet;
               NLD=Begroting van meer- en minderwerkcontract naar verrekenstaat kopiâren;
               NOR=Kopier Tilleggsbudsjett til oppgjõrsskjema;
               SVE=Kopiera illÑggsbudget till avrÑkningsark];
    ProcessingOnly=Yes;
    OnPostReport=BEGIN
                   ExtensionContract.GET(ProjectNo,  ExtensionContractNo);

                   LineNo := 10000;
                   ProjectCostPlusEntry.SETRANGE("Project No.", ProjectNo);
                   ProjectCostPlusEntry.SETRANGE(Principal, ExtensionContract.Principal);
                   ProjectCostPlusEntry.SETRANGE("Commission No.", "Commission No.");
                   ProjectCostPlusEntry.SETRANGE("Settl.Sheet No.", "No.");
                   IF (ProjectCostPlusEntry.FINDLAST) THEN
                     LineNo := ProjectCostPlusEntry."Line No." + 10000;

                   BudgetLine.SETRANGE("Project No.", ProjectNo);
                   BudgetLine.SETRANGE("Extension Contract", ExtensionContractNo);
                   BudgetLine.SETFILTER(Adjustment, '');
                   IF BudgetLine.FINDSET(FALSE) THEN REPEAT

                      ProjectCostPlusEntry.INIT();
                      ProjectCostPlusEntry."Project No." := ProjectNo;
                      ProjectCostPlusEntry.VALIDATE(Principal, ExtensionContract.Principal);
                      ProjectCostPlusEntry.VALIDATE("Commission No.", "Commission No.");
                      ProjectCostPlusEntry.VALIDATE("Settl.Sheet No.", "No.");
                      ProjectCostPlusEntry.VALIDATE("Line No.", LineNo);
                      ProjectCostPlusEntry.VALIDATE("Cost Object", BudgetLine."Cost Object");
                      ProjectCostPlusEntry.VALIDATE(Description, BudgetLine.Description);
                      ProjectCostPlusEntry.VALIDATE("Description 2", BudgetLine."Description 2");
                      IF (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Labor) THEN BEGIN
                         ProjectCostPlusEntry.VALIDATE(Quantity, BudgetLine.Quantity * BudgetLine.Norm);
                      END ELSE
                         ProjectCostPlusEntry.VALIDATE(Quantity, BudgetLine.Quantity);

                      IF (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Plant)          OR
                         (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Subcontracting) OR
                         (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Sundry)         OR
                         (BudgetLine."Cost Type" = BudgetLine."Cost Type"::Material) THEN
                            ProjectCostPlusEntry.VALIDATE("Basic Price (LCY)" ,BudgetLine."Price (LCY)") ;

                      ProjectCostPlusEntry.VALIDATE("Unit of Measure", BudgetLine."Unit of Measure");
                      IF ExtensionContract."VAT Prod. Posting Group" <> '' THEN
                        ProjectCostPlusEntry.VALIDATE("VAT Prod. Posting Group", ExtensionContract."VAT Prod. Posting Group")
                      ELSE
                        ProjectCostPlusEntry.DetermineVATProdPostingGroup;
                      ProjectCostPlusEntry.VALIDATE("Creation Date", TODAY);
                      //C040744.sn
                      IF BudgetLine."Trade Item" <> '' THEN BEGIN
                        ProjectCostPlusEntry."Vendor (Trade Item)" := BudgetLine."Vendor (Trade Item)";
                        ProjectCostPlusEntry.VALIDATE("Trade Item", BudgetLine."Trade Item");
                      END ELSE BEGIN
                        IF BudgetLine."Basic Item" <> '' THEN BEGIN
                          ProjectCostPlusEntry.Manufacturer := BudgetLine.Manufacturer;
                          ProjectCostPlusEntry.VALIDATE("Basic Item", BudgetLine."Basic Item");
                        END ELSE BEGIN
                          IF BudgetLine."Item No." <> '' THEN BEGIN
                            ProjectCostPlusEntry.VALIDATE("Item No.", BudgetLine."Item No.");
                          END;
                        END;
                      END;
                      //C040744.en
                      ProjectCostPlusEntry.VALIDATE(Element, BudgetLine.Element);
                      ProjectCostPlusEntry.VALIDATE("Extension Contract", BudgetLine."Extension Contract");

                      ProjectCostPlusEntry.INSERT(TRUE);
                      LineNo += 10000;

                   UNTIL BudgetLine.NEXT = 0;

                   MESSAGE(Text001);
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SourceTable=Table11012021;
      OnOpenPage=BEGIN
                   SETRANGE("Project No.", ProjectNo);
                   JobRec.GET(ProjectNo);

                   IF Rec.COUNT = 0 THEN BEGIN
                      IF CONFIRM(Text11012007,TRUE) THEN BEGIN
                         JobRec.InsertSettlementSheet(JobRec."Bill-to Customer No.");
                         COMMIT;
                      END;
                   END;
                 END;

    }
    CONTROLS
    {
      { 1100285000;;Container;
                  Name=Root;
                  ContainerType=ContentArea }

      { 1100285001;1;Group  ;
                  GroupType=Repeater }

      { 1100285002;2;Field  ;
                  SourceExpr="No." }

      { 1100285003;2;Field  ;
                  SourceExpr=Description }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ProjectNo@1100285000 : Code[20];
      ExtensionContractNo@1100285003 : Code[20];
      JobRec@1100285001 : Record 11072003;
      Text11012007@1100285002 : TextConst 'DEU=Verrechnungsblatt hinzufÅgen?;ENU=Add Settlement Sheet?;NLD=Verrekenstaat toevoegen?;NOR=Legge til oppgjõrsskjema?;SVE=LÑgga till avrÑkningsark?';
      ProjectCostPlusEntry@1100285004 : Record 11012019;
      BudgetLine@1100285006 : Record 11012001;
      ExtensionContract@1100285007 : Record 11012004;
      Text001@1100285008 : TextConst 'DEU=Die Budgetzeilen wurden zum Settlement Sheet kopiert.;ENU=Budget lines have been copied to Settlement Sheet.;NLD=Begrotingsregels zijn gekopiâerd naar de verrekenstaat.';
      LineNo@1100285005 : Integer;

    PROCEDURE SetProjectNo@1100285001(ProjectNoVar@1100285000 : Code[20];ExtensionContractVar@1100285001 : Code[20]);
    BEGIN
      ProjectNo := ProjectNoVar;
      ExtensionContractNo := ExtensionContractVar;
    END;

    BEGIN
    {
      //DP00789-RFC20
    }
    END.
  }
  RDLDATA
  {
  }
}

