OBJECT Report 11012584 Update Std. Cost Line Price
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Standardkostenzeilenpreis aktualisieren;
               ENU=Update Standard Cost Line Price;
               NLD=Standaard kostenregelprijs bijwerken;
               NOR=Oppdater radpris for standardkost;
               SVE=Uppdatera radpris f”r standardkostnad];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   GLSetupRec.GET;
                 END;

    OnPreReport=BEGIN
                  ValidateRefDate(FALSE);  //DP00241.n (16930)
                  DimValRec.COPY("Dimension Value");

                  DimValRec.SETCURRENTKEY("Dimension Code", Code);
                  DimValRec.FILTERGROUP(9);
                  DimValRec.SETRANGE("Dimension Code", GLSetupRec."Global Dimension 2 Code");
                  DimValRec.SETRANGE("Global Dimension No.", 2);
                  DimValRec.FILTERGROUP(0);
                END;

  }
  DATASET
  {
    { 5532;    ;DataItem;                    ;
               DataItemTable=Table11012591;
               DataItemTableView=SORTING(Code,Line No.)
                                 WHERE(Type=FILTER(<>Text),
                                       No.=FILTER(<>''),
                                       Cost Level=FILTER(<>Standard Cost));
               OnPreDataItem=BEGIN
                               IF DimValRec.GETFILTER(Code) <> '' THEN BEGIN
                                 FILTERGROUP(9);
                                 DimValRec.COPYFILTER(Code, "No.");
                                 FILTERGROUP(0);
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  //DP00241.so (16930)
                                  //IF CheckUpdatePrice("No.", "Unit of Measure", Price) THEN BEGIN
                                  //  VALIDATE(Price, DimValRec."Sales Price");
                                  //  MODIFY;
                                  //END;
                                  //DP00241.eo

                                  //DP00241.sn (16930)
                                  OldPrice := GetCostLinePrice(ReferenceDate);
                                  IF CheckUpdatePrice("No.", "Unit of Measure", OldPrice) THEN BEGIN
                                    UpdateCostLinePrice("Cost Level", Code, "Line No.");
                                  END;
                                  //DP00241.en
                                END;

               ReqFilterFields=Cost Level,Code,Type }

    { 6363;    ;DataItem;                    ;
               DataItemTable=Table349;
               DataItemTableView=SORTING(Dimension Code,Code)
                                 WHERE(Global Dimension No.=CONST(2));
               ReqFilterHeadingML=[DEU=Kostentr„ger;
                                   ENU=Cost Object;
                                   NLD=Kostendrager;
                                   NOR=Kostnadsobjekt;
                                   SVE=Kostnadsobjekt];
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;  //* Break, only used for selections (filters)
                             END;

               ReqFilterFields=Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   ReferenceDate := 0D;  //DP00241.n (16930)
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[DEU=Optionen;
                             ENU=Options;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ] }

      { 1100529000;2;Field  ;
                  CaptionML=[DEU=Stichtag;
                             ENU=Reference Date;
                             NLD=Peildatum;
                             NOR=Referansedato;
                             SVE=Referensdatum];
                  NotBlank=Yes;
                  SourceExpr=ReferenceDate;
                  OnValidate=BEGIN
                               ValidateRefDate(TRUE);  //DP00241.n (16930)
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      GLSetupRec@1100525001 : Record 98;
      DimValRec@1100525000 : Record 349;
      ReferenceDate@1100529000 : Date;
      OldPrice@1100529001 : Decimal;
      Text001@1100529002 : TextConst 'DEU=Referenzdatum darf nicht leer sein.;ENU=Reference Date may not be empty.;NLD=Peildatum mag niet leeg zijn.;NOR=Referansedato kan ikke v‘re tom.';
      Text002@1100529003 : TextConst 'DEU=Referenzdatum %1 Tage vor/nach dem aktuellen Datum, sind Sie sicher?;ENU=Reference Date %1 days before/after current date, are you sure?;NLD=Peildatum %1 dagen voor/na huidige datum, weet u het zeker?;NOR=Referansedato %1 dager f›r/etter gjeldende date, er du sikker?';

    PROCEDURE CheckUpdatePrice@1100525007(ICostObject@1100525000 : Code[20];ICostLineUnit@1100525001 : Code[10];IPrice@1100525002 : Decimal) : Boolean;
    BEGIN
      DimValRec.FILTERGROUP(9);
      DimValRec.SETRANGE(Code, ICostObject);
      DimValRec.FILTERGROUP(0);
      IF NOT DimValRec.FINDFIRST THEN  //* Don't use GET, Cost Object No. must be within all filters of "Dimension Value"
        EXIT(FALSE);
      IF (DimValRec."Sales Price" = 0) OR (DimValRec."Sales Price" = IPrice) THEN
        EXIT(FALSE);
      IF NOT ((ICostLineUnit = DimValRec."Unit of Measure") OR (ICostLineUnit = '') OR (DimValRec."Unit of Measure" = '')) THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE UpdateCostLinePrice@1100529000(Type@1100529000 : Option;Code@1100529001 : Code[20];LineNo@1100529002 : Integer);
    VAR
      PlantCostLinePrice@1100529003 : Record 11072664;
    BEGIN
      //DP00241 (16930)
      IF NOT PlantCostLinePrice.GET(Type, Code, LineNo, ReferenceDate) THEN BEGIN
        PlantCostLinePrice.INIT;
        PlantCostLinePrice."Cost Level" := Type;
        PlantCostLinePrice.Code := Code;
        PlantCostLinePrice."Cost Line No." := LineNo;
        PlantCostLinePrice."Starting Date" := ReferenceDate;
        PlantCostLinePrice.Price := DimValRec."Sales Price";
        PlantCostLinePrice.INSERT;
      END ELSE BEGIN
        PlantCostLinePrice.Price := DimValRec."Sales Price";
        PlantCostLinePrice.MODIFY;
      END;
    END;

    PROCEDURE ValidateRefDate@1100529003(OnInput@1100529000 : Boolean);
    BEGIN
      //DP00241 (16930)
      IF ReferenceDate = 0D THEN
        ERROR(Text001);
      IF OnInput AND ((ReferenceDate < TODAY - 30) OR (ReferenceDate > TODAY + 100)) THEN BEGIN
        IF NOT CONFIRM(Text002, FALSE, ABS(ReferenceDate - TODAY)) THEN
          ERROR('');
      END;
    END;

    BEGIN
    {
      DP00671: Set Cost Line now in Plant Cost Line with Cost Level is Set. So dataitem 'Set Cost Line'is deleted
               Now also level Location and Customer Price Group
    }
    END.
  }
  RDLDATA
  {
  }
}

