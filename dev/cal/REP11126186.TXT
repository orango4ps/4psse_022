OBJECT Report 11126186 Export Ref. Payment -  LMP
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVFI8.00 (32000006);
  }
  PROPERTIES
  {
    CaptionML=ENU=Export Ref. Payment -  LMP;
    ProcessingOnly=Yes;
    OnPostReport=BEGIN
                   IF CreatedLines THEN BEGIN
                     Transferfile.CLOSE;
                     RBMgt.DownloadToFile(FromFile,RefFileSetup."Export Reference Payments");
                     MESSAGE(Text1090001,RefFileSetup."Export Reference Payments");
                     ERASE(FromFile);
                   END ELSE
                     MESSAGE(Text1090003);
                 END;

    UseRequestPage=No;
  }
  DATASET
  {
    { 4558;    ;DataItem;                    ;
               DataItemTable=Table270;
               OnPreDataItem=BEGIN
                               CompanyInfo.GET;
                               GLSetup.GET;
                               PurchSetup.GET;
                               Transferfile.TEXTMODE := TRUE;
                               FromFile := RBMgt.ServerTempFileName('txt');
                               UniqueBatchID := '';
                             END;

               OnAfterGetRecord=BEGIN
                                  RefPmtExport.SETCURRENTKEY("Payment Date","Vendor No.","Entry No.");
                                  RefPmtExport.SETFILTER("Payment Account","Bank Account"."No.");
                                  RefPmtExport.SETRANGE("Foreign Payment",FALSE);
                                  RefPmtExport.SETRANGE("Document Type",1);
                                  RefPmtExport.SETRANGE(Transferred,FALSE);
                                  IF RefPmtExport.FINDSET THEN BEGIN
                                    RefFileSetup.SETFILTER("No.","Bank Account"."No.");
                                    IF RefFileSetup.FINDFIRST THEN
                                      RefFileSetup.TESTFIELD("Export Reference Payments")
                                    ELSE
                                      ERROR(Text1090000,"Bank Account"."No.");

                                    RefPmtExport.TESTFIELD("Vendor No.");
                                    RefPmtExport.TESTFIELD("Payment Account");
                                    RefPmtExport.TESTFIELD("Payment Date");
                                    RefPmtExport.TESTFIELD("Amount (LCY)");
                                    RefPmtExport.TESTFIELD("Vendor Account");
                                    RefPmtExport.TESTFIELD("Invoice Message");
                                    CreatedLines := TRUE;
                                    Transferfile.CREATE(FromFile);
                                    BankAccFormat.ConvertBankAcc("Bank Account"."Bank Account No.","Bank Account"."No.");
                                    BankAccNo := "Bank Account"."Bank Account No.";

                                    BusinessIDCode := CompanyInfo."Business Identity Code";
                                    LinePos := STRPOS(CompanyInfo."Business Identity Code",'-');
                                    IF LinePos > 0 THEN
                                      BusinessIDCode := COPYSTR(BusinessIDCode,1,LinePos - 1) + COPYSTR(BusinessIDCode,LinePos + 1);

                                    IF COPYSTR(BankAccNo,1,1) = '3' THEN
                                      RecievingBankId := COPYSTR(BankAccNo,1,2)
                                    ELSE
                                      RecievingBankId := COPYSTR(BankAccNo,1,1) + ' ';

                                    CreationDate := FORMAT(TODAY,0,'<Year,2><Month,2><Day,2>');
                                    CreationTime := FORMAT(TIME,0,'<Hour,2><Filler Character,0><Minute,2>');

                                    PaymentQty := '0';
                                    AmountSum := 0;
                                    CurrencyCode := '1';
                                    PayersNameSpecifier := TextSpaceFormat(CompanyInfo.Name,35,1,' ');
                                    OVTCode := TextSpaceFormat(' ',17,1,' ');
                                    BusinessIDCode := TextSpaceFormat(BusinessIDCode,9,0,'0');
                                    SpareHeder := TextSpaceFormat(' ',65,0,' ');
                                    ReservedForBank := TextSpaceFormat(' ',100,0,' ');

                                    CreateHeaderLines;
                                    CreateTransactionlines;
                                    CreateSumLines;
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInfo@1090000 : Record 79;
      PurchSetup@1090001 : Record 312;
      RefFileSetup@1090002 : Record 11126180;
      Vend@1090003 : Record 23;
      VendBankAcc@1090004 : Record 288;
      VendLedgEntry@1090005 : Record 25;
      RefPmtExport@1090006 : Record 11126182;
      GLSetup@1090007 : Record 98;
      NoSeriesMgt@1090008 : Codeunit 396;
      RefPmtMgt@1090054 : Codeunit 11126180;
      BankAccFormat@1090011 : Codeunit 11126182;
      RBMgt@1090052 : Codeunit 419;
      Transferfile@1090010 : File;
      CreatedLines@1090048 : Boolean;
      EventType@1090013 : Text[1];
      BankAccNo@1090014 : Text[14];
      BusinessIDCode@1090015 : Text[9];
      CreationDate@1090016 : Text[6];
      CreationTime@1090017 : Text[4];
      RecievingBankId@1090018 : Text[2];
      DueDate@1090019 : Text[6];
      PrevPaymDate@1090053 : Date;
      PayersNameSpecifier@1090020 : Text[35];
      UniqueBatchID@1090021 : Code[35];
      UniqueBatchID2@1090022 : Text[35];
      OVTCode@1090023 : Text[17];
      CurrencyCode@1090024 : Text[1];
      RecieverInfo@1090025 : ARRAY [3] OF Text[30];
      RecieverBankAccNo@1090026 : Text[14];
      MessageType@1090027 : Text[30];
      InvoiceMessage@1090028 : Text[250];
      InvoiceMessage2@1090060 : Text[250];
      Amount@1090029 : Text[12];
      InternalInfo@1090030 : Text[20];
      CostCenter@1090031 : Text[20];
      Spare1@1090032 : Text[3];
      Spare2@1090033 : Text[2];
      Spare3@1090034 : Text[1];
      Spare4@1090035 : Text[4];
      Spare5@1090036 : Text[12];
      Spare6@1090037 : Text[5];
      Spare7@1090038 : Text[6];
      Spare8@1090039 : Text[13];
      Spare9@1090040 : Text[6];
      Spare10@1090041 : Text[69];
      Spare11@1090055 : Text[20];
      Spare12@1090056 : Text[21];
      ReservedForBank@1090042 : Text[100];
      SpareHeder@1090043 : Text[65];
      LinePos@1090044 : Integer;
      AmountSum@1090045 : Decimal;
      AmountSum2@1090046 : Text[13];
      PaymentQty@1090047 : Text[6];
      Text1090000@1090049 : TextConst 'ENU=Define the transfer settings for Bank Account  %1.';
      Text1090001@1090050 : TextConst 'ENU=Transfer File %1 created successfully.';
      Text1090003@1090012 : TextConst 'ENU=There is nothing to send.';
      Text1090005@1090057 : TextConst 'ENU="Credit memo %1 "';
      FromFile@1090051 : Text[250];

    PROCEDURE CreateHeaderLines@1090001();
    BEGIN
      UniqueBatchID := NoSeriesMgt.GetNextNo(PurchSetup."Bank Batch Nos.",WORKDATE,TRUE);
      UniqueBatchID2 := TextSpaceFormat(UniqueBatchID,35,1,' ');
      DueDate := FORMAT(RefPmtExport."Payment Date",0,'<Year,2><Month,2><Day,2>');

      Transferfile.WRITE('LM0300' + BankAccNo +
        BusinessIDCode + CreationDate +
        CreationTime + RecievingBankId + DueDate +
        PayersNameSpecifier + RefPmtMgt.OEM2ANSI(UniqueBatchID2) +
        OVTCode + CurrencyCode + SpareHeder + ReservedForBank);
    END;

    PROCEDURE CreateTransactionlines@4();
    BEGIN
      IF RefPmtExport.FINDSET THEN
        REPEAT
          IF (PrevPaymDate <> 0D) AND (PrevPaymDate <> RefPmtExport."Payment Date") THEN BEGIN
            CreateSumLines;
            UniqueBatchID := INCSTR(UniqueBatchID);
            CreateHeaderLines;
          END;
          Vend.GET(RefPmtExport."Vendor No.");
          RecieverBankAccNo := GetVendAccount(RefPmtExport."Vendor Account",Vend."No.");
          CASE RefPmtExport."Message Type" OF
            0:
              MessageType := '1';
            1:
              MessageType := '2';
            2:
              MessageType := '5';
            3:
              MessageType := '6';
            4:
              MessageType := '7';
          END;

          InvoiceMessage := RefPmtExport."Invoice Message";
      //    InvoiceMessage2 := RefPmtExport."Invoice Message 2";

          IF MessageType = '1' THEN
            InvoiceMessage := TextSpaceFormat(InvoiceMessage,20,0,'0');
          IF MessageType = '6' THEN
            InvoiceMessage := COPYSTR(InvoiceMessage,1,70);
          IF MessageType = '7' THEN BEGIN
            InvoiceMessage := COPYSTR(InvoiceMessage,1,20);
            InvoiceMessage := TextSpaceFormat(InvoiceMessage,35,1,' ');
            InvoiceMessage := InvoiceMessage + COPYSTR(InvoiceMessage2,1,35);
          END;

          InvoiceMessage := TextSpaceFormat(InvoiceMessage,70,1,' ');
          DueDate := FORMAT(RefPmtExport."Payment Date",0,'<Year,2><Month,2><Day,2>');
          Amount := FORMAT(ROUND(RefPmtExport."Amount (LCY)",0.01) * 100,0,2);
          EventType := '0';
          Spare1 := TextSpaceFormat(' ',3,1,' ');
          Spare2 := TextSpaceFormat(' ',2,1,' ');
          Spare3 := TextSpaceFormat(' ',1,1,' ');
          Spare4 := TextSpaceFormat(' ',4,1,' ');
          Spare5 := TextSpaceFormat(' ',12,1,' ');
          Spare6 := TextSpaceFormat(' ',5,1,' ');
          Amount := TextSpaceFormat(Amount,12,0,'0');
          RecieverInfo[1] := TextSpaceFormat(Vend.Name,30,1,' ');
          RecieverInfo[2] := TextSpaceFormat(' ',20,1,' ');
          RecieverInfo[3] := TextSpaceFormat(Vend."Business Identity Code",20,1,' ');
          CostCenter := TextSpaceFormat(CostCenter,20,1,' ');
          InternalInfo := TextSpaceFormat(InternalInfo,20,1,' ');
          ReservedForBank := '';
          ReservedForBank := TextSpaceFormat(ReservedForBank,40,1,' ');
          AmountSum := AmountSum + ROUND(RefPmtExport."Amount (LCY)",0.01);
          VendLedgEntry.SETRANGE(Open,FALSE);
          VendLedgEntry.SETRANGE("Closed by Entry No.",RefPmtExport."Entry No.");

          IF RefFileSetup."Inform. of Appl. Cr. Memos" THEN
            IF VendLedgEntry.FINDFIRST THEN BEGIN
              MessageType := '5';
              InvoiceMessage := TextSpaceFormat('',70,1,' ');
            END;

          Transferfile.WRITE('LM031' + EventType + BankAccNo +
            RefPmtMgt.OEM2ANSI(RecieverInfo[1]) + RefPmtMgt.OEM2ANSI(RecieverInfo[2]) +
            RefPmtMgt.OEM2ANSI(RecieverInfo[3]) + RecieverBankAccNo +
            Spare1 + MessageType + RefPmtMgt.OEM2ANSI(InvoiceMessage) + Spare2 +
            DueDate + Amount + Spare3 + Spare4 + Spare5 + InternalInfo +
            CostCenter + Spare6 + ReservedForBank);
          PaymentQty := INCSTR(PaymentQty);
          PrevPaymDate := RefPmtExport."Payment Date";

          RefPmtExport.Transferred := TRUE;
          RefPmtExport."Transfer Date" := TODAY;
          RefPmtExport."Transfer Time" := TIME;
          RefPmtExport."Batch Code" := UniqueBatchID2;
          RefPmtExport.MODIFY;

          IF RefFileSetup."Inform. of Appl. Cr. Memos" THEN
            IF VendLedgEntry.FINDFIRST THEN
              CreateDetailLines(VendLedgEntry,RefPmtExport."Entry No.");

          IF MessageType > '5' THEN
      //      CreateMessageLines(MessageType,RefPmtExport."Invoice Message",RefPmtExport."Invoice Message 2",'1');
            CreateMessageLines(MessageType,RefPmtExport."Invoice Message",'','1');

        UNTIL RefPmtExport.NEXT = 0;
    END;

    PROCEDURE CreateDetailLines@1090058(Rec@1090000 : Record 25;EntryNo@1090001 : Integer);
    BEGIN
      Rec.GET(EntryNo);
      Rec.SETRANGE(Open,FALSE);
      Rec.SETRANGE("Closed by Entry No.",RefPmtExport."Entry No.");
      REPEAT
        CASE Rec."Message Type" OF
          0:
            MessageType := '1';
          1:
            MessageType := '2';
          2:
            MessageType := '5';
          3:
            MessageType := '6';
          4:
            MessageType := '7';
        END;
        InvoiceMessage := Rec."Invoice Message";
        InvoiceMessage2 := Rec."Invoice Message 2";

        IF MessageType = '1' THEN
          InvoiceMessage := TextSpaceFormat(InvoiceMessage,20,0,'0');
        IF Rec."Document Type" = 2 THEN
          EventType := '0'
        ELSE
          EventType := '2';

        IF EventType = '2' THEN
          BEGIN
          MessageType := '5';
          InvoiceMessage := STRSUBSTNO(Text1090005,Rec."External Document No.");
        END;

        Rec.CALCFIELDS("Original Amt. (LCY)");
        InvoiceMessage := TextSpaceFormat(InvoiceMessage,70,1,' ');
        Amount := TextSpaceFormat(FORMAT(ROUND(ABS(Rec."Original Amt. (LCY)"),0.01) * 100,0,2),12,0,'0');
        Transferfile.WRITE('LM032' + EventType + BankAccNo +
          RefPmtMgt.OEM2ANSI(RecieverInfo[1]) + RefPmtMgt.OEM2ANSI(RecieverInfo[2]) +
          RefPmtMgt.OEM2ANSI(RecieverInfo[3]) + RecieverBankAccNo +
          Spare1 + MessageType + RefPmtMgt.OEM2ANSI(InvoiceMessage) +
          Spare2 + DueDate + Amount + Spare3 + Spare4 + Spare5 + InternalInfo +
          CostCenter + Spare6 + ReservedForBank);

        IF MessageType > '5' THEN
          CreateMessageLines(MessageType,InvoiceMessage,InvoiceMessage2,'2');

      UNTIL Rec.NEXT = 0;
    END;

    PROCEDURE CreateMessageLines@1090059(MsgType@1090000 : Text[1];InvMsg@1090001 : Text[250];InvMsg2@1090002 : Text[250];LineType@1090003 : Text[1]);
    VAR
      Len@1090004 : Integer;
      Msg1@1090006 : Text[175];
      Msg2@1090007 : Text[175];
    BEGIN
      Spare11 := TextSpaceFormat(' ',20,1,' ');
      Spare12 := TextSpaceFormat(' ',21,1,' ');

      CASE MsgType OF
        '6':
          BEGIN
            Len := STRLEN(InvMsg + InvMsg2) - 70;
            IF Len > 175 THEN BEGIN
              Msg1 := COPYSTR(InvMsg,71,175);
              Msg2 := COPYSTR(InvMsg + InvMsg2,175 + 71);
              InvMsg := TextSpaceFormat(Msg1,175,1,' ');
              InvMsg2 := TextSpaceFormat(Msg2,175,1,' ');
              Transferfile.WRITE('LM03' + LineType + '9' + BankAccNo +
                RefPmtMgt.OEM2ANSI(RecieverInfo[1]) + Spare11 + Spare11 + RecieverBankAccNo +
                RefPmtMgt.OEM2ANSI(InvMsg) + Spare12);
              Transferfile.WRITE('LM03' + LineType + '9' + BankAccNo +
                RefPmtMgt.OEM2ANSI(RecieverInfo[1]) + Spare11 + Spare11 + RecieverBankAccNo +
                RefPmtMgt.OEM2ANSI(InvMsg2) + Spare12);
            END ELSE BEGIN
              InvMsg := TextSpaceFormat(InvMsg,175,1,' ');
              Transferfile.WRITE('LM03' + LineType + '9' + BankAccNo +
                RefPmtMgt.OEM2ANSI(RecieverInfo[1]) + Spare11 + Spare11 + RecieverBankAccNo +
                RefPmtMgt.OEM2ANSI(InvMsg) + Spare12);
            END;
          END;
        '7':
          BEGIN
            Len := STRLEN(InvMsg2) - 35;
            IF Len > 175 THEN BEGIN
              Msg1 := COPYSTR(InvMsg2,36,175);
              Msg2 := COPYSTR(InvMsg2,211);
              Msg1 := TextSpaceFormat(Msg1,175,1,' ');
              Msg2 := TextSpaceFormat(Msg2,175,1,' ');
              Transferfile.WRITE('LM03' + LineType + '9' + BankAccNo +
                RefPmtMgt.OEM2ANSI(RecieverInfo[1]) + Spare11 + Spare11 + RecieverBankAccNo +
                RefPmtMgt.OEM2ANSI(Msg1) + Spare12);
              Transferfile.WRITE('LM03' + LineType + '9' + BankAccNo +
                RefPmtMgt.OEM2ANSI(RecieverInfo[1]) + Spare11 + Spare11 + RecieverBankAccNo +
                RefPmtMgt.OEM2ANSI(Msg2) + Spare12);
            END ELSE BEGIN
              Msg1 := COPYSTR(InvMsg2,36);
              Msg1 := TextSpaceFormat(Msg1,175,1,' ');
              Transferfile.WRITE('LM03' + LineType + '9' + BankAccNo +
                RefPmtMgt.OEM2ANSI(RecieverInfo[1]) + Spare11 + Spare11 + RecieverBankAccNo +
                RefPmtMgt.OEM2ANSI(Msg1) + Spare12);
            END;
          END;
      END;
    END;

    PROCEDURE CreateSumLines@1090000();
    BEGIN
      Spare7 := TextSpaceFormat(' ',6,0,' ');
      Spare8 := TextSpaceFormat(' ',13,0,' ');
      Spare9 := TextSpaceFormat(' ',6,0,' ');
      Spare10 := TextSpaceFormat(' ',69,0,' ');
      ReservedForBank := TextSpaceFormat(ReservedForBank,100,0,' ');
      PaymentQty := TextSpaceFormat(PaymentQty,6,0,'0');
      AmountSum2 := TextSpaceFormat(FORMAT(ROUND(AmountSum,0.01) * 100,0,2),13,0,'0');

      Transferfile.WRITE(
        'LM0390' + BankAccNo + BusinessIDCode + CreationDate + PaymentQty +
        AmountSum2 + Spare7 + Spare8 + Spare9 + RefPmtMgt.OEM2ANSI(UniqueBatchID2) +
        OVTCode + Spare10 + ReservedForBank);

      PaymentQty := '0';
      AmountSum := 0;
    END;

    PROCEDURE GetVendAccount@3(AccountCode@1090001 : Code[20];VendNo@1090002 : Code[20]) VendAccount@1090000 : Text[14];
    BEGIN
      VendBankAcc.RESET;
      VendBankAcc.SETFILTER("Vendor No.",VendNo);
      VendBankAcc.SETRANGE(Code,AccountCode);
      VendBankAcc.FINDFIRST;
      BankAccFormat.ConvertBankAcc(VendBankAcc."Bank Account No.",VendBankAcc.Code);
      VendAccount := VendBankAcc."Bank Account No.";
    END;

    LOCAL PROCEDURE TextSpaceFormat@2(Text@1000 : Text[250];Length@1001 : Integer;Align@1090001 : Integer;ExtraChr@1090002 : Text[1]) NewText@1090000 : Text[250];
    BEGIN
      IF STRLEN(Text) > Length THEN BEGIN
        NewText := COPYSTR(Text,1,Length);
        EXIT(NewText);
      END;
      IF Align = 0 THEN
        Text := PADSTR('',Length - STRLEN(Text),ExtraChr) + Text
      ELSE
        Text := Text + PADSTR('',Length - STRLEN(Text),ExtraChr);

      NewText := Text;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

