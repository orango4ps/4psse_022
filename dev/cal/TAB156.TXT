OBJECT Table 156 Resource
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=NAVW114.00,4PS14.00;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Name;
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 ResSetup.GET;
                 ResSetup.TESTFIELD("Resource Nos.");
                 NoSeriesMgt.InitSeries(ResSetup."Resource Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               IF GETFILTER("Resource Group No.") <> '' THEN
                 IF GETRANGEMIN("Resource Group No.") = GETRANGEMAX("Resource Group No.") THEN
                   VALIDATE("Resource Group No.",GETRANGEMIN("Resource Group No."));

               DimMgt.UpdateDefaultDim(
                 DATABASE::Resource,"No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");
               //**4PS Generated Code. Do Not Change.sn05
               DPA_OnInsert;
               //**4PS Generated Code.en05
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
             END;

    OnDelete=BEGIN
               CheckJobPlanningLine;

               MoveEntries.MoveResEntries(Rec);

               ResCapacityEntry.SETCURRENTKEY("Resource No.");
               ResCapacityEntry.SETRANGE("Resource No.","No.");
               ResCapacityEntry.DELETEALL;

               ResCost.SETRANGE(Type,ResCost.Type::Resource);
               ResCost.SETRANGE(Code,"No.");
               ResCost.DELETEALL;

               ResPrice.SETRANGE(Type,ResPrice.Type::Resource);
               ResPrice.SETRANGE(Code,"No.");
               ResPrice.DELETEALL;

               CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::Resource);
               CommentLine.SETRANGE("No.","No.");
               CommentLine.DELETEALL;

               ExtTextHeader.SETRANGE("Table Name",ExtTextHeader."Table Name"::Resource);
               ExtTextHeader.SETRANGE("No.","No.");
               ExtTextHeader.DELETEALL(TRUE);

               ResSkill.RESET;
               ResSkill.SETRANGE(Type,ResSkill.Type::Resource);
               ResSkill.SETRANGE("No.","No.");
               ResSkill.DELETEALL;

               ResLoc.RESET;
               ResLoc.SETCURRENTKEY("Resource No.","Starting Date");
               ResLoc.SETRANGE("Resource No.","No.");
               ResLoc.DELETEALL;

               ResServZone.RESET;
               ResServZone.SETRANGE("Resource No.","No.");
               ResServZone.DELETEALL;

               ResUnitMeasure.RESET;
               ResUnitMeasure.SETRANGE("Resource No.","No.");
               ResUnitMeasure.DELETEALL;

               SalesOrderLine.SETCURRENTKEY(Type,"No.");
               SalesOrderLine.SETRANGE(Type,SalesOrderLine.Type::Resource);
               SalesOrderLine.SETRANGE("No.","No.");
               IF SalesOrderLine.FINDFIRST THEN
                 ERROR(SalesDocumentExistsErr,"No.",SalesOrderLine."Document Type");

               IF ExistUnprocessedTimeSheets THEN
                 ERROR(Text006,TABLECAPTION,"No.");

               DimMgt.DeleteDefaultDim(DATABASE::Resource,"No.");
             END;

    OnRename=VAR
               SalesLine@1000 : Record 37;
             BEGIN
               SalesLine.RenameNo(SalesLine.Type::Resource,xRec."No.","No.");
               DimMgt.RenameDefaultDim(DATABASE::Resource,xRec."No.","No.");

               "Last Date Modified" := TODAY;
             END;

    CaptionML=[ENU=Resource;
               NOR=Ressurs;
               SVE=Resurs];
    LookupPageID=Page77;
    DrillDownPageID=Page77;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Name;
                                                   OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  ResSetup.GET;
                                                                  NoSeriesMgt.TestManual(ResSetup."Resource Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr.;
                                                              SVE=Nr] }
    { 2   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=[ENU=Person,Machine;
                                                                    NOR=Person,Maskin;
                                                                    SVE=Person,Maskin];
                                                   OptionString=Person,Machine }
    { 3   ;   ;Name                ;Text100       ;OnValidate=BEGIN
                                                                IF ("Search Name" = UPPERCASE(xRec.Name)) OR ("Search Name" = '') THEN
                                                                  "Search Name" := Name;
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              NOR=Navn;
                                                              SVE=Namn] }
    { 4   ;   ;Search Name         ;Code100       ;CaptionML=[ENU=Search Name;
                                                              NOR=S›kenavn;
                                                              SVE=S”knamn] }
    { 5   ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              NOR=Navn 2;
                                                              SVE=Namn 2] }
    { 6   ;   ;Address             ;Text100       ;CaptionML=[ENU=Address;
                                                              NOR=Adresse;
                                                              SVE=Adress] }
    { 7   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              NOR=Adresse 2;
                                                              SVE=Adress 2] }
    { 8   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookupPostCode(City,"Post Code",County,"Country/Region Code");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              NOR=Sted;
                                                              SVE=Ort] }
    { 9   ;   ;Social Security No. ;Text30        ;CaptionML=[ENU=Social Security No.;
                                                              NOR=Personnr.;
                                                              SVE=Personnr] }
    { 10  ;   ;Job Title           ;Text50        ;CaptionML=[ENU=Job Title;
                                                              NOR=Stilling;
                                                              SVE=Yrkestitel] }
    { 11  ;   ;Education           ;Text30        ;CaptionML=[ENU=Education;
                                                              NOR=Utdannelse;
                                                              SVE=Utbildning] }
    { 12  ;   ;Contract Class      ;Text30        ;CaptionML=[ENU=Contract Class;
                                                              NOR=Overenskomst;
                                                              SVE=Avtal] }
    { 13  ;   ;Employment Date     ;Date          ;CaptionML=[ENU=Employment Date;
                                                              NOR=Ansettelsesdato;
                                                              SVE=Anst„llningsdatum] }
    { 14  ;   ;Resource Group No.  ;Code20        ;TableRelation="Resource Group";
                                                   OnValidate=BEGIN
                                                                IF "Resource Group No." = xRec."Resource Group No." THEN
                                                                  EXIT;

                                                                IF xRec."Resource Group No." <> '' THEN
                                                                  IF NOT
                                                                     CONFIRM(
                                                                       Text001,FALSE,
                                                                       FIELDCAPTION("Resource Group No."))
                                                                  THEN BEGIN
                                                                    "Resource Group No." := xRec."Resource Group No.";
                                                                    EXIT;
                                                                  END;

                                                                IF xRec.GETFILTER("Resource Group No.") <> '' THEN
                                                                  SETFILTER("Resource Group No.","Resource Group No.");

                                                                // Resource Capacity Entries
                                                                ResCapacityEntry.SETCURRENTKEY("Resource No.");
                                                                ResCapacityEntry.SETRANGE("Resource No.","No.");
                                                                ResCapacityEntry.MODIFYALL("Resource Group No.","Resource Group No.");

                                                                PlanningLine.SETCURRENTKEY(Type,"No.");
                                                                PlanningLine.SETRANGE(Type,PlanningLine.Type::Resource);
                                                                PlanningLine.SETRANGE("No.","No.");
                                                                PlanningLine.SETRANGE("Schedule Line",TRUE);
                                                                PlanningLine.MODIFYALL("Resource Group No.","Resource Group No.");
                                                              END;

                                                   CaptionML=[ENU=Resource Group No.;
                                                              NOR=Ressursgruppenr.;
                                                              SVE=Gruppnr] }
    { 16  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              NOR=Global dimensjon 1 - kode;
                                                              SVE=Global dimension 1 kod];
                                                   CaptionClass='1,1,1' }
    { 17  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Global dimensjon 2 - kode;
                                                              SVE=Global dimension 2 kod];
                                                   CaptionClass='1,1,2' }
    { 18  ;   ;Base Unit of Measure;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=VAR
                                                                UnitOfMeasure@1002 : Record 204;
                                                                ResUnitOfMeasure@1000 : Record 205;
                                                              BEGIN
                                                                IF "Base Unit of Measure" <> xRec."Base Unit of Measure" THEN BEGIN
                                                                  TestNoEntriesExist(FIELDCAPTION("Base Unit of Measure"));

                                                                  IF "Base Unit of Measure" <> '' THEN BEGIN
                                                                    UnitOfMeasure.GET("Base Unit of Measure");
                                                                    IF NOT ResUnitOfMeasure.GET("No.","Base Unit of Measure") THEN BEGIN
                                                                      ResUnitOfMeasure.INIT;
                                                                      ResUnitOfMeasure.VALIDATE("Resource No.","No.");
                                                                      ResUnitOfMeasure.VALIDATE(Code,"Base Unit of Measure");
                                                                      ResUnitOfMeasure."Qty. per Unit of Measure" := 1;
                                                                      ResUnitOfMeasure.INSERT;
                                                                    END ELSE BEGIN
                                                                      IF ResUnitOfMeasure."Qty. per Unit of Measure" <> 1 THEN
                                                                        ERROR(BaseUnitOfMeasureQtyMustBeOneErr,"Base Unit of Measure",ResUnitOfMeasure."Qty. per Unit of Measure");
                                                                      ResUnitOfMeasure.TESTFIELD("Related to Base Unit of Meas.");
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Base Unit of Measure;
                                                              NOR=Lagerenhet;
                                                              SVE=Basenhet] }
    { 19  ;   ;Direct Unit Cost    ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Indirect Cost %");
                                                              END;

                                                   CaptionML=[ENU=Direct Unit Cost;
                                                              NOR=Direkte enhetskost;
                                                              SVE=Ink”pspris];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 20  ;   ;Indirect Cost %     ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Unit Cost",ROUND("Direct Unit Cost" * (1 + "Indirect Cost %" / 100)));
                                                              END;

                                                   CaptionML=[ENU=Indirect Cost %;
                                                              NOR=Indirekte kost-%;
                                                              SVE=Indirekt kostnad %];
                                                   DecimalPlaces=2:2 }
    { 21  ;   ;Unit Cost           ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=[ENU=Unit Cost;
                                                              NOR=Enhetskost;
                                                              SVE=Styckkostnad];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 22  ;   ;Profit %            ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=[ENU=Profit %;
                                                              NOR=Bruttofortjeneste-%;
                                                              SVE=Vinst %];
                                                   DecimalPlaces=0:5 }
    { 23  ;   ;Price/Profit Calculation;Option    ;OnValidate=BEGIN
                                                                CASE "Price/Profit Calculation" OF
                                                                  "Price/Profit Calculation"::"Profit=Price-Cost":
                                                                    IF "Unit Price" <> 0 THEN
                                                                      "Profit %" := ROUND(100 * (1 - "Unit Cost" / "Unit Price"),0.00001)
                                                                    ELSE
                                                                      "Profit %" := 0;
                                                                  "Price/Profit Calculation"::"Price=Cost+Profit":
                                                                    IF "Profit %" < 100 THEN
                                                                      "Unit Price" := ROUND("Unit Cost" / (1 - "Profit %" / 100),0.00001);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Price/Profit Calculation;
                                                              NOR=Beregning av fortjeneste-%;
                                                              SVE=Pris/vinst-ber„kning];
                                                   OptionCaptionML=[ENU="Profit=Price-Cost,Price=Cost+Profit,No Relationship";
                                                                    NOR="Bruttofortjeneste=Salgspris-Kostpris,Salgspris=Kostpris+Bruttofortjeneste,Ingen";
                                                                    SVE="Vinst=pris-kostnad,Pris=kostnad+vinst,Inget samband"];
                                                   OptionString=Profit=Price-Cost,Price=Cost+Profit,No Relationship }
    { 24  ;   ;Unit Price          ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Price/Profit Calculation");
                                                              END;

                                                   CaptionML=[ENU=Unit Price;
                                                              NOR=Salgspris;
                                                              SVE=A-pris];
                                                   MinValue=0;
                                                   AutoFormatType=2 }
    { 25  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor No.;
                                                              NOR=Leverand›rnr.;
                                                              SVE=Leverant”rsnr] }
    { 26  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              NOR=Endret den;
                                                              SVE=Uppdateringsdatum];
                                                   Editable=No }
    { 27  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Resource),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              NOR=Merknad;
                                                              SVE=Kommentar];
                                                   Editable=No }
    { 38  ;   ;Blocked             ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT Blocked AND "Privacy Blocked" THEN
                                                                  IF GUIALLOWED THEN
                                                                    IF CONFIRM(ConfirmBlockedPrivacyBlockedQst) THEN
                                                                      "Privacy Blocked" := FALSE
                                                                    ELSE
                                                                      ERROR('')
                                                                  ELSE
                                                                    ERROR(CanNotChangeBlockedDueToPrivacyBlockedErr);
                                                              END;

                                                   CaptionML=[ENU=Blocked;
                                                              NOR=Sperret;
                                                              SVE=Sp„rrad] }
    { 39  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              NOR=Datofilter;
                                                              SVE=Datumfilter] }
    { 40  ;   ;Unit of Measure Filter;Code10      ;FieldClass=FlowFilter;
                                                   TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure Filter;
                                                              NOR=Enhetsfilter;
                                                              SVE=Enhetsfilter] }
    { 41  ;   ;Capacity            ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Res. Capacity Entry".Capacity WHERE (Resource No.=FIELD(No.),
                                                                                                         Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Capacity;
                                                              NOR=Kapasitet;
                                                              SVE=Kapacitet];
                                                   DecimalPlaces=0:5 }
    { 42  ;   ;Qty. on Order (Job) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Quantity (Base)" WHERE (Status=CONST(Order),
                                                                                                                Schedule Line=CONST(Yes),
                                                                                                                Type=CONST(Resource),
                                                                                                                No.=FIELD(No.),
                                                                                                                Planning Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Qty. on Order (Job);
                                                              NOR=Ant. i ordre (prosjekt);
                                                              SVE=Anv„nd kapacitet i projekt];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 43  ;   ;Qty. Quoted (Job)   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Quantity (Base)" WHERE (Status=CONST(Quote),
                                                                                                                Schedule Line=CONST(Yes),
                                                                                                                Type=CONST(Resource),
                                                                                                                No.=FIELD(No.),
                                                                                                                Planning Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Qty. Quoted (Job);
                                                              NOR=Antall i prosjekttilbud;
                                                              SVE=Offererad kapacitet i projekt];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 44  ;   ;Usage (Qty.)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Res. Ledger Entry"."Quantity (Base)" WHERE (Entry Type=CONST(Usage),
                                                                                                                Chargeable=FIELD(Chargeable Filter),
                                                                                                                Unit of Measure Code=FIELD(Unit of Measure Filter),
                                                                                                                Resource No.=FIELD(No.),
                                                                                                                Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Usage (Qty.);
                                                              NOR=Forbruk (antall);
                                                              SVE=F”rbrukat antal];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 45  ;   ;Usage (Cost)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Res. Ledger Entry"."Total Cost" WHERE (Entry Type=CONST(Usage),
                                                                                                           Chargeable=FIELD(Chargeable Filter),
                                                                                                           Unit of Measure Code=FIELD(Unit of Measure Filter),
                                                                                                           Resource No.=FIELD(No.),
                                                                                                           Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Usage (Cost);
                                                              NOR=Forbruk (kostpris);
                                                              SVE=F”rbrukat (kostnadspris)];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 46  ;   ;Usage (Price)       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Res. Ledger Entry"."Total Price" WHERE (Entry Type=CONST(Usage),
                                                                                                            Chargeable=FIELD(Chargeable Filter),
                                                                                                            Unit of Measure Code=FIELD(Unit of Measure Filter),
                                                                                                            Resource No.=FIELD(No.),
                                                                                                            Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Usage (Price);
                                                              NOR=Forbruk (pris);
                                                              SVE=F”rbrukat i f”rs„ljningspris];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 47  ;   ;Sales (Qty.)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Res. Ledger Entry"."Quantity (Base)" WHERE (Entry Type=CONST(Sale),
                                                                                                                 Unit of Measure Code=FIELD(Unit of Measure Filter),
                                                                                                                 Resource No.=FIELD(No.),
                                                                                                                 Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Sales (Qty.);
                                                              NOR=Salg (antall);
                                                              SVE=F”rs„ljning antal];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 48  ;   ;Sales (Cost)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Res. Ledger Entry"."Total Cost" WHERE (Entry Type=CONST(Sale),
                                                                                                            Unit of Measure Code=FIELD(Unit of Measure Filter),
                                                                                                            Resource No.=FIELD(No.),
                                                                                                            Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Sales (Cost);
                                                              NOR=Salg (kostpris);
                                                              SVE=F”rs„ljning(skostnader)];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 49  ;   ;Sales (Price)       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Res. Ledger Entry"."Total Price" WHERE (Entry Type=CONST(Sale),
                                                                                                             Unit of Measure Code=FIELD(Unit of Measure Filter),
                                                                                                             Resource No.=FIELD(No.),
                                                                                                             Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Sales (Price);
                                                              NOR=Salg (pris);
                                                              SVE=F”rs„ljning (pris)];
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 50  ;   ;Chargeable Filter   ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Chargeable Filter;
                                                              NOR=Filter for belastbarhet;
                                                              SVE=Debiterbarfilter] }
    { 51  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Gen. Prod. Posting Group" <> "Gen. Prod. Posting Group" THEN
                                                                  IF GenProdPostingGrp.ValidateVatProdPostingGroup(GenProdPostingGrp,"Gen. Prod. Posting Group") THEN
                                                                    VALIDATE("VAT Prod. Posting Group",GenProdPostingGrp."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              NOR=Bokf›ringsgruppe - vare;
                                                              SVE=Produktbokf”ringsmall] }
    { 52  ;   ;Picture             ;BLOB          ;ObsoleteState=Pending;
                                                   ObsoleteReason=Replaced by Image field;
                                                   CaptionML=[ENU=Picture;
                                                              NOR=Foto;
                                                              SVE=Bild];
                                                   SubType=Bitmap }
    { 53  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookupPostCode(City,"Post Code",County,"Country/Region Code");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              NOR=Postnr.;
                                                              SVE=Postnr] }
    { 54  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              NOR=Fylke/delstat;
                                                              SVE=Delstat];
                                                   CaptionClass='5,1,' + "Country/Region Code" }
    { 55  ;   ;Automatic Ext. Texts;Boolean       ;CaptionML=[ENU=Automatic Ext. Texts;
                                                              NOR=Automatisk utv. tekster;
                                                              SVE=Extra textrader] }
    { 56  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              NOR=Nr.serie;
                                                              SVE=Nr-serie];
                                                   Editable=No }
    { 57  ;   ;Tax Group Code      ;Code20        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Code;
                                                              NOR=Mva-gruppekode;
                                                              SVE=Skattegruppskod] }
    { 58  ;   ;VAT Prod. Posting Group;Code20     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              NOR=Mva-bokf›ringsgruppe - vare;
                                                              SVE=Moms produktbokf”ringsmall] }
    { 59  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=BEGIN
                                                                PostCode.CheckClearPostCodeCityCounty(City,"Post Code",County,"Country/Region Code",xRec."Country/Region Code");
                                                              END;

                                                   CaptionML=[ENU=Country/Region Code;
                                                              NOR=Lands-/omr†dekode;
                                                              SVE=Lands-/regionkod] }
    { 60  ;   ;IC Partner Purch. G/L Acc. No.;Code20;
                                                   TableRelation="IC G/L Account";
                                                   CaptionML=[ENU=IC Partner Purch. G/L Acc. No.;
                                                              NOR=Finanskontonr. for KI-partnerkj›p;
                                                              SVE=Ink.red.ktonr konc.int partner] }
    { 140 ;   ;Image               ;Media         ;CaptionML=[ENU=Image;
                                                              NOR=Bilde;
                                                              SVE=Bild] }
    { 150 ;   ;Privacy Blocked     ;Boolean       ;OnValidate=BEGIN
                                                                IF "Privacy Blocked" THEN
                                                                  Blocked := TRUE
                                                                ELSE
                                                                  Blocked := FALSE;
                                                              END;

                                                   CaptionML=[ENU=Privacy Blocked;
                                                              NOR=Personvern sperret;
                                                              SVE=Sekretessblockerad] }
    { 900 ;   ;Qty. on Assembly Order;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Assembly Line"."Remaining Quantity (Base)" WHERE (Document Type=CONST(Order),
                                                                                                                      Type=CONST(Resource),
                                                                                                                      No.=FIELD(No.),
                                                                                                                      Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Qty. on Assembly Order;
                                                              NOR=Ant. p† monteringsordre;
                                                              SVE=Ant. p† monteringsorder];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 950 ;   ;Use Time Sheet      ;Boolean       ;OnValidate=BEGIN
                                                                IF "Use Time Sheet" <> xRec."Use Time Sheet" THEN
                                                                  IF ExistUnprocessedTimeSheets THEN
                                                                    ERROR(Text005,FIELDCAPTION("Use Time Sheet"));
                                                              END;

                                                   CaptionML=[ENU=Use Time Sheet;
                                                              NOR=Bruk timeliste;
                                                              SVE=Anv„nd tidrapport] }
    { 951 ;   ;Time Sheet Owner User ID;Code50    ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                IF "Time Sheet Owner User ID" <> xRec."Time Sheet Owner User ID" THEN
                                                                  IF ExistUnprocessedTimeSheets THEN
                                                                    ERROR(Text005,FIELDCAPTION("Time Sheet Owner User ID"));
                                                              END;

                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[ENU=Time Sheet Owner User ID;
                                                              NOR=Bruker-ID for eier av timeliste;
                                                              SVE=Anv„ndar-ID f”r tidrapportens „gare] }
    { 952 ;   ;Time Sheet Approver User ID;Code50 ;TableRelation="User Setup";
                                                   OnValidate=BEGIN
                                                                IF "Time Sheet Approver User ID" <> xRec."Time Sheet Approver User ID" THEN
                                                                  IF ExistUnprocessedTimeSheets THEN
                                                                    ERROR(Text005,FIELDCAPTION("Time Sheet Approver User ID"));
                                                              END;

                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[ENU=Time Sheet Approver User ID;
                                                              NOR=Bruker-ID for godkjenner av timeliste;
                                                              SVE=Anv„ndar-ID f”r tidrapportens godk„nnare] }
    { 1700;   ;Default Deferral Template Code;Code10;
                                                   TableRelation="Deferral Template"."Deferral Code";
                                                   CaptionML=[ENU=Default Deferral Template Code;
                                                              NOR=Standard kode for periodiseringsmal;
                                                              SVE=Standardmall f”r periodisering] }
    { 5900;   ;Qty. on Service Order;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Order Allocation"."Allocated Hours" WHERE (Posted=CONST(No),
                                                                                                                       Resource No.=FIELD(No.),
                                                                                                                       Allocation Date=FIELD(Date Filter),
                                                                                                                       Status=CONST(Active)));
                                                   CaptionML=[ENU=Qty. on Service Order;
                                                              NOR=Ant. i serviceordre;
                                                              SVE=Ant. p† serviceorder];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5901;   ;Service Zone Filter ;Code10        ;TableRelation="Service Zone";
                                                   CaptionML=[ENU=Service Zone Filter;
                                                              NOR=Servicesonefilter;
                                                              SVE=Servicezonfilter] }
    { 5902;   ;In Customer Zone    ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Resource Service Zone" WHERE (Resource No.=FIELD(No.),
                                                                                                    Service Zone Code=FIELD(Service Zone Filter)));
                                                   CaptionML=[ENU=In Customer Zone;
                                                              NOR=I kundesone;
                                                              SVE=I kundzon];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Search Name                              }
    {    ;Gen. Prod. Posting Group                 }
    {    ;Name                                     }
    {    ;Type                                     }
    {    ;Base Unit of Measure                     }
    {    ;Resource Group No.                       }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Name,Type,Base Unit of Measure       }
    { 2   ;Brick               ;No.,Name,Type,Base Unit of Measure,Image }
  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=Do you want to change %1?;NOR=Vil du endre %1?;SVE=Vill du „ndra %1?';
      ResSetup@1002 : Record 314;
      Res@1003 : Record 156;
      ResCapacityEntry@1004 : Record 160;
      CommentLine@1006 : Record 97;
      ResCost@1007 : Record 202;
      ResPrice@1008 : Record 201;
      SalesOrderLine@1009 : Record 37;
      ExtTextHeader@1010 : Record 279;
      PostCode@1011 : Record 225;
      GenProdPostingGrp@1012 : Record 251;
      ResSkill@1016 : Record 5956;
      ResLoc@1017 : Record 5952;
      ResServZone@1018 : Record 5958;
      ResUnitMeasure@1020 : Record 205;
      PlanningLine@1005 : Record 11020401;
      NoSeriesMgt@1013 : Codeunit 396;
      MoveEntries@1014 : Codeunit 361;
      DimMgt@1015 : Codeunit 408;
      Text002@1019 : TextConst 'ENU=You cannot change %1 because there are ledger entries for this resource.;NOR=Du kan ikke endre %1 fordi det finnes poster for denne ressursen.;SVE=Du kan inte „ndra %1 d„rf”r att det finns reskontratransaktioner f”r den h„r resursen.';
      Text004@1022 : TextConst 'ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.;NOR=Du m† fylle ut vinduet Oppsett av Online Map f›r du kan bruke Online Map.\Se Konfigurere Online Map i Hjelp.;SVE=Innan du kan anv„nda Online Map m†ste du fylla i f”nstret Online Map - inst„llning.\Se Konfiguration av Online Map i hj„lpen';
      Text005@1024 : TextConst 'ENU=%1 cannot be changed since unprocessed time sheet lines exist for this resource.;NOR=%1 kan ikke endres ettersom det finnes ubehandlede timelistelinjer for denne ressursen.;SVE=%1 g†r inte att „ndra eftersom det finns obearbetade tidrapportsrader f”r resursen.';
      Text006@1025 : TextConst '@@@=You cannot delete Resource LIFT since unprocessed time sheet lines exist for this resource.;ENU=You cannot delete %1 %2 because unprocessed time sheet lines exist for this resource.;NOR=Du kan ikke slette %1 %2 ettersom det finnes ubehandlede timelistelinjer for denne ressursen.;SVE=Det g†r inte att ta bort %1 %2 eftersom det finns obearbetade tidrapportsrader f”r resursen.';
      BaseUnitOfMeasureQtyMustBeOneErr@1026 : TextConst '@@@="%1 Name of Unit of measure (e.g. BOX, PCS, KG...), %2 Qty. of %1 per base unit of measure ";ENU=The quantity per base unit of measure must be 1. %1 is set up with %2 per unit of measure.;NOR=Antall per lagerenhet m† v‘re 1. %1 er definert med %2 per enhet.;SVE=Kvantiteten per basenhet m†ste vara 1. %1 har st„llts in med %2 per enhet.';
      CannotDeleteResourceErr@1027 : TextConst '@@@="%1 = Resource No.";ENU=You cannot delete resource %1 because it is used in one or more job planning lines.;NOR=Du kan ikke slette ressurs %1 fordi den er i bruk i ‚n eller flere prosjektplanleggingslinjer.;SVE=Du kan inte ta bort resursen %1 eftersom den anv„nds p† en eller flera projektplaneringsrader.';
      SalesDocumentExistsErr@1028 : TextConst '@@@="%1 = Resource No.";ENU=You cannot delete resource %1 because there are one or more outstanding %2 that include this resource.;NOR=Du kan ikke slette ressursen %1 fordi det finnes ‚n eller flere utest†ende %2 som inkluderer denne ressursen.;SVE=Du kan inte ta bort resursen %1 eftersom det finns minst en utest†ende %2 som inkluderar den h„r resursen.';
      PrivacyBlockedPostErr@1000 : TextConst '@@@="%1=resource no.";ENU=You cannot post this line because resource %1 is blocked due to privacy.;NOR=Du kan ikke bokf›re denne linjen fordi ressurs %1 er sperret p† grunn av personvern.';
      PrivacyBlockedErr@1021 : TextConst '@@@="%1=resource no.";ENU=You cannot create this line because resource %1 is blocked due to privacy.;NOR=Du kan ikkeÿopprette denne linjen fordi ressurs %1 er sperret p† grunn av personvern.';
      ConfirmBlockedPrivacyBlockedQst@1030 : TextConst 'ENU=If you change the Blocked field, the Privacy Blocked field is changed to No. Do you want to continue?;NOR=Hvis du endrer feltet Sperret, endres feltet Personvern sperret til Nr. Vil du fortsette?';
      CanNotChangeBlockedDueToPrivacyBlockedErr@1029 : TextConst 'ENU=The Blocked field cannot be changed because the user is blocked for privacy reasons.;NOR=Feltet Sperret kan ikke endres fordi brukeren erÿsperret av personvern†rsaker.';
      DPA_Management@1100000999 : Codeunit 11012783;
      SkipModify@1100528400 : Boolean;

    [External]
    PROCEDURE AssistEdit@2(OldRes@1000 : Record 156) : Boolean;
    BEGIN
      WITH Res DO BEGIN
        Res := Rec;
        ResSetup.GET;
        ResSetup.TESTFIELD("Resource Nos.");
        IF NoSeriesMgt.SelectSeries(ResSetup."Resource Nos.",OldRes."No. Series","No. Series") THEN BEGIN
          ResSetup.GET;
          ResSetup.TESTFIELD("Resource Nos.");
          NoSeriesMgt.SetSeries("No.");
          Rec := Res;
          EXIT(TRUE);
        END;
      END;
    END;

    [External]
    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::Resource,"No.",FieldNumber,ShortcutDimCode);
      IF NOT SkipModify THEN //**4PS.n
        MODIFY;
    END;

    [External]
    PROCEDURE DisplayMap@7();
    VAR
      MapPoint@1001 : Record 800;
      MapMgt@1000 : Codeunit 802;
    BEGIN
      IF MapPoint.FINDFIRST THEN
        MapMgt.MakeSelection(DATABASE::Resource,GETPOSITION)
      ELSE
        MESSAGE(Text004);
    END;

    [External]
    PROCEDURE GetUnitOfMeasureFilter@1(No@1000 : Code[20];UnitofMeasureCode@1002 : Code[10]) Filter : Text;
    VAR
      ResourceUnitOfMeasure@1001 : Record 205;
    BEGIN
      ResourceUnitOfMeasure.GET(No,UnitofMeasureCode);
      IF ResourceUnitOfMeasure."Related to Base Unit of Meas." THEN BEGIN
        CLEAR(ResourceUnitOfMeasure);
        ResourceUnitOfMeasure.SETRANGE("Resource No.",No);
        ResourceUnitOfMeasure.SETRANGE("Related to Base Unit of Meas.",TRUE);
        IF ResourceUnitOfMeasure.FINDSET THEN BEGIN
          REPEAT
            Filter := Filter + GetQuotedCode(ResourceUnitOfMeasure.Code) + '|';
          UNTIL ResourceUnitOfMeasure.NEXT = 0;
          Filter := DELSTR(Filter,STRLEN(Filter));
        END;
      END ELSE
        Filter := GetQuotedCode(UnitofMeasureCode);
    END;

    LOCAL PROCEDURE ExistUnprocessedTimeSheets@9() : Boolean;
    VAR
      TimeSheetHeader@1001 : Record 950;
      TimeSheetLine@1002 : Record 951;
    BEGIN
      TimeSheetHeader.SETCURRENTKEY("Resource No.");
      TimeSheetHeader.SETRANGE("Resource No.","No.");
      IF TimeSheetHeader.FINDSET THEN
        REPEAT
          TimeSheetLine.SETRANGE("Time Sheet No.",TimeSheetHeader."No.");
          TimeSheetLine.SETRANGE(Posted,FALSE);
          IF NOT TimeSheetLine.ISEMPTY THEN
            EXIT(TRUE);
        UNTIL TimeSheetHeader.NEXT = 0;

      EXIT(FALSE);
    END;

    [External]
    PROCEDURE CreateTimeSheets@3();
    VAR
      Resource@1000 : Record 156;
    BEGIN
      TESTFIELD("Use Time Sheet",TRUE);
      Resource.GET("No.");
      Resource.SETRECFILTER;
      REPORT.RUNMODAL(REPORT::"Create Time Sheets",TRUE,FALSE,Resource);
    END;

    LOCAL PROCEDURE GetQuotedCode@5(Code@1000 : Text) : Text;
    BEGIN
      EXIT(STRSUBSTNO('''%1''',Code));
    END;

    LOCAL PROCEDURE TestNoEntriesExist@4(CurrentFieldName@1001 : Text[100]);
    VAR
      ResLedgEntry@1000 : Record 203;
    BEGIN
      ResLedgEntry.SETRANGE("Resource No.","No.");
      IF NOT ResLedgEntry.ISEMPTY THEN
        ERROR(Text002,CurrentFieldName);
    END;

    LOCAL PROCEDURE CheckJobPlanningLine@34();
    VAR
      JobPlanningLine@1001 : Record 11020401;
    BEGIN
      JobPlanningLine.SETCURRENTKEY(Type,"No.");
      JobPlanningLine.SETRANGE(Type,JobPlanningLine.Type::Resource);
      JobPlanningLine.SETRANGE("No.","No.");
      IF NOT JobPlanningLine.ISEMPTY THEN
        ERROR(CannotDeleteResourceErr,"No.");
    END;

    [External]
    PROCEDURE CheckResourcePrivacyBlocked@6(IsPosting@1000 : Boolean);
    BEGIN
      IF "Privacy Blocked" THEN BEGIN
        IF IsPosting THEN
          ERROR(PrivacyBlockedPostErr,"No.");
        ERROR(PrivacyBlockedErr,"No.");
      END;
    END;

    PROCEDURE DPA_SetDefaultDpmtFromNoSeries@1100000995(xRecRef@1100525002 : RecordRef);
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      xRecRef.SETTABLE(xRec);
      DPA_Management.SetDepartmentCodeNoSeries(
        TABLENAME,
        "Global Dimension 1 Code",
        "No. Series",
        xRec."No. Series" );
    END;

    LOCAL PROCEDURE DPA_OnInsert@1100000991();
    VAR
      Dimension1Code@1100528400 : Code[20];
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      Dimension1Code :=
        DPA_Management.GetNoSeriesDepartmentCode(
          "No. Series",
          xRec."No. Series",
          DATABASE::Resource);
      IF Dimension1Code <> '' THEN
        "Global Dimension 1 Code" := Dimension1Code;

      IF "Global Dimension 1 Code" <> '' THEN BEGIN
        SkipModify := TRUE;
        VALIDATE("Global Dimension 1 Code");
        SkipModify := FALSE;
      END;
    END;

    PROCEDURE DPA_GetFieldNoDepartmentFilter@1100000993() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(0);
    END;

    PROCEDURE DPA_GetFiltersFltrGrp@1100000997(FilterGroupNo@1100525000 : Integer) FilterText : Text[250];
    BEGIN
      //**4PS Generated Code - Do Not Change
      FILTERGROUP(FilterGroupNo);
      FilterText := COPYSTR(GETFILTERS, 1, MAXSTRLEN(FilterText));
      FILTERGROUP(0);
    END;

    PROCEDURE DPA_SetFilters@1100000998(Context@1100525000 : Text[30]) : Boolean;
    VAR
      RecRef@1100525003 : RecordRef;
      i@1100525004 : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      RecRef.GETTABLE(Rec);
      DPA_Management.SetDPAFilterFromContext(
        RecRef,
        Context,
        DPA_GetFieldNoDepartmentCode,
        DPA_GetFieldNoDepartmentFilter );

      FOR i := 10 DOWNTO 0 DO BEGIN
        RecRef.FILTERGROUP(i);
        FILTERGROUP(i);
        SETVIEW(RecRef.GETVIEW(FALSE));
      END;

      EXIT(DPA_Management.IsHardFilter);
    END;

    LOCAL PROCEDURE DPA_IsActive@1100000999() : Boolean;
    VAR
      DepartmentAuthorizObject@1100526000 : Record 11012466;
      FPSLicenseManagement@1100528500 : Codeunit 11229289;
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT FPSLicenseManagement.LicenseAndReadPermissionForTable(DepartmentAuthorizObject) THEN
        EXIT(FALSE);

      IF NOT DPA_Management.AuthorizationActive THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE DPA_FindRecWithDPAFilterAppld@1100000989();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN BEGIN
        FIND;
        EXIT;
      END;

      IF NOT DPA_Management.HasTableHardFilter(156) THEN BEGIN
        FIND;
        EXIT;
      END;

      DPA_SetFilters('Table 156');
      IF NOT FIND THEN
        DPA_Management.RaiseDPAErrorForTable(TABLECAPTION);
    END;

    PROCEDURE DPA_ChkDepartmentCodeAllowed@1100000990(IsHardFilter@1100526000 : Boolean);
    VAR
      DimensionManagement@1100526001 : Codeunit 408;
    BEGIN
      //**4PS Generated Code - Do Not Change
      DimensionManagement.CheckDepartmAuthWithFilterType(
        DATABASE::Resource, "Global Dimension 1 Code", IsHardFilter);
    END;

    PROCEDURE DPA_GetFieldNoDepartmentCode@1100000994() : Integer;
    BEGIN
      //**4PS Generated Code - Do Not Change
      EXIT(FIELDNO("Global Dimension 1 Code"));
    END;

    PROCEDURE DPA_SetDefaultDepartment@1100000996();
    BEGIN
      //**4PS Generated Code - Do Not Change
      IF NOT DPA_IsActive THEN
        EXIT;

      DPA_Management.SetDepartmentCodeUser(TABLENAME, "Global Dimension 1 Code");
    END;

    BEGIN
    END.
  }
}

