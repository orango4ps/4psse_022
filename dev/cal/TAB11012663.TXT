OBJECT Table 11012663 Plant Requisition Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Batch No.");
             END;

    CaptionML=[ENU=Plant Purchase Proposal Line;
               SVE=Maskin, rekvisitionsrad];
  }
  FIELDS
  {
    { 5   ;   ;Batch No.           ;Code20        ;TableRelation="Plant Purchase Proposal Batch";
                                                   CaptionML=[ENU=Batch No.;
                                                              SVE=Batchnr];
                                                   NotBlank=Yes }
    { 10  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              NOR=Linjenr.;
                                                              SVE=Radnr] }
    { 20  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF Type <> xRec.Type THEN BEGIN
                                                                  "No." := '';
                                                                  "Purchase/Rent" := "Purchase/Rent"::" ";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Type;
                                                              SVE=Typ];
                                                   OptionCaptionML=[ENU=" ,Item,Plant Type";
                                                                    NOR=" ,Artikkel,Maskintype";
                                                                    SVE=" ,Artikel,Maskintyp"];
                                                   OptionString=[ ,Item,Plant Type] }
    { 30  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(Item)) Item.No.
                                                                 ELSE IF (Type=CONST(Plant Type)) "Plant Type".Code;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Type);
                                                                CASE Type OF
                                                                  Type::Item:
                                                                    BEGIN
                                                                      GetItem;
                                                                      Item.TESTFIELD(Blocked,FALSE);
                                                                    END;
                                                                  Type::"Plant Type":
                                                                    BEGIN
                                                                      IF "Purchase/Rent" = "Purchase/Rent"::" " THEN
                                                                        FIELDERROR("Purchase/Rent");
                                                                    END;
                                                                END;
                                                                UpdateReqLineFields;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              NOR=Nr;
                                                              SVE=Nr] }
    { 40  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 50  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              NOR=Beskrivelse 2;
                                                              SVE=Beskrivning 2] }
    { 60  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Antal];
                                                   DecimalPlaces=0:5 }
    { 70  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Vendor No.;
                                                              NOR=Leverand›rnr.;
                                                              SVE=Leverant”rsnr] }
    { 75  ;   ;Vendor Name         ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              NOR=Leverand›rsnavn;
                                                              SVE=Leverant”rsnamn];
                                                   Editable=No }
    { 80  ;   ;Purchase/Rent       ;Option        ;CaptionML=[ENU=Purchase/Rent;
                                                              NOR=Innkj›p/Leie;
                                                              SVE=Ink”p/hyra];
                                                   OptionCaptionML=[ENU=" ,Purchase,Rental";
                                                                    NOR=" ,Innkj›p,Leie";
                                                                    SVE=" ,Ink”p,Hyra"];
                                                   OptionString=[ ,Purchase,Rental] }
  }
  KEYS
  {
    {    ;Batch No.,Line No.                      ;Clustered=Yes }
    {    ;Batch No.,Vendor No.                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Item@1210190000 : Record 27;
      PlantType@1210190008 : Record 11012551;
      Vend@1210190001 : Record 23;
      Text000@1210190006 : TextConst 'ENU=Purchase Order %1 created;NOR=Innkj›psordre %1 opprettet;SVE=Ink”psorder %1 „r skapad';
      Text001@1210190009 : TextConst 'ENU=Purchase Orders %1..%2 created;NOR=Innkj›psordre %1..%2 opprettet;SVE=Ink”psordrar %1..%2 „r skapade';
      LineNo@1210190010 : Integer;

    LOCAL PROCEDURE GetItem@1();
    BEGIN
      TESTFIELD("No.");
      IF "No." <> Item."No." THEN
        Item.GET("No.");
    END;

    PROCEDURE GetPlantType@1210190002();
    BEGIN
      TESTFIELD("No.");
      IF "No." <> PlantType.Code THEN
        PlantType.GET("No.");
    END;

    LOCAL PROCEDURE UpdateReqLineFields@8();
    BEGIN
      CASE Type OF
        Type::Item:
          BEGIN
            GetItem;
            Description := Item.Description;
            "Description 2" := Item."Description 2";
            "Vendor No." := Item."Vendor No.";
            IF "Vendor No." <> '' THEN
              Vend.GET("Vendor No.");
            Quantity := GetItemVendorDefaultQuantity();
          END;
        Type::"Plant Type":
          BEGIN
            GetPlantType;
            Description := PlantType.Description;
            "Vendor No." := GetDefaultVendorNo(Quantity);
          END;
      END;
    END;

    PROCEDURE GetDefaultVendorNo@1210190007(VAR Quantity@1210190001 : Decimal) : Code[20];
    VAR
      PlantVendor@1210190000 : Record 11012596;
    BEGIN
      PlantVendor.SETRANGE("Plant Type", "No.");
      CASE "Purchase/Rent" OF
        "Purchase/Rent"::Purchase:
          PlantVendor.SETRANGE(Type, PlantVendor.Type::Purchase);
        "Purchase/Rent"::Rental:
          PlantVendor.SETRANGE(Type, PlantVendor.Type::Rent);
      END;
      PlantVendor.SETRANGE("Preferred Vendor", TRUE);
      IF PlantVendor.FINDFIRST THEN BEGIN
        Quantity := PlantVendor."Reorder Quantity";
        EXIT(PlantVendor."Vendor No.");
      END;
    END;

    LOCAL PROCEDURE CreatePurchaseHeader@1210190004(IVendorNo@1210190001 : Code[20]) : Code[20];
    VAR
      PurchaseHeader@1210190000 : Record 38;
    BEGIN
      PurchaseHeader.INIT;
      PurchaseHeader.VALIDATE("No.");
      PurchaseHeader."Document Type" := PurchaseHeader."Document Type"::Order;
      PurchaseHeader.INSERT(TRUE);

      PurchaseHeader.VALIDATE("Buy-from Vendor No.", IVendorNo);
      PurchaseHeader."Amounts only" := FALSE;  //C019564
      PurchaseHeader.MODIFY(TRUE);

      LineNo := 10000;

      EXIT(PurchaseHeader."No.");
    END;

    LOCAL PROCEDURE CreatePurchaseLine@1210190006(IPurchaseHeaderNo@1210190001 : Code[20];IPlantRequisitionLine@1210190000 : Record 11012663);
    VAR
      PurchaseLine@1210190002 : Record 39;
      PlantSetup@1210190003 : Record 11012550;
    BEGIN
      PurchaseLine.INIT;
      PurchaseLine."Document No." := IPurchaseHeaderNo;
      PurchaseLine."Document Type" := PurchaseLine."Document Type"::Order;
      PurchaseLine."Line No." := LineNo;
      LineNo += 10000;
      PurchaseLine.INSERT(TRUE);

      PurchaseLine.Type := PurchaseLine.Type::"G/L Account";
      CASE IPlantRequisitionLine.Type OF
        IPlantRequisitionLine.Type::Item:
          BEGIN
            PurchaseLine.VALIDATE("Item No.", IPlantRequisitionLine."No.");
          END;
        IPlantRequisitionLine.Type::"Plant Type":
          BEGIN
            PlantSetup.GET;
            PurchaseLine.VALIDATE("Plant Type", IPlantRequisitionLine."No.");
            CASE IPlantRequisitionLine."Purchase/Rent" OF
              IPlantRequisitionLine."Purchase/Rent"::Purchase:
                PurchaseLine.VALIDATE("Cost Component Plant", PlantSetup."Cost Component Acquisition");
              IPlantRequisitionLine."Purchase/Rent"::Rental:
                PurchaseLine.VALIDATE("Cost Component Plant", PlantSetup."Cost Component Rent");
            END;
          END;
      END;
      PurchaseLine.Description := IPlantRequisitionLine.Description;
      PurchaseLine."Description 2" := IPlantRequisitionLine."Description 2";
      PurchaseLine.VALIDATE(Quantity, IPlantRequisitionLine.Quantity);
      PurchaseLine.MODIFY(TRUE);
    END;

    PROCEDURE GeneratePurchaseOrders@1210190000(VAR IPlantRequisitionLine@1210190000 : Record 11012663);
    VAR
      PlantRequisitionLine@1210190002 : Record 11012663;
      LastVendorNo@1210190001 : Code[20];
      PurchaseHeaderNo@1210190003 : Code[20];
      FirstPurchaseHeaderNo@1210190004 : Code[20];
      LastPurchaseHeaderNo@1210190005 : Code[20];
    BEGIN
      LastVendorNo := '*';

      PlantRequisitionLine.COPY(IPlantRequisitionLine);

      PlantRequisitionLine.SETCURRENTKEY("Batch No.", "Vendor No.");
      PlantRequisitionLine.MARKEDONLY(TRUE);
      IF NOT PlantRequisitionLine.FINDSET THEN BEGIN
        PlantRequisitionLine.MARKEDONLY(FALSE);
        IF NOT PlantRequisitionLine.FINDSET THEN
          EXIT;
      END;

      REPEAT
        PlantRequisitionLine.TESTFIELD("Vendor No.");
        IF LastVendorNo <> PlantRequisitionLine."Vendor No." THEN BEGIN
          PurchaseHeaderNo := CreatePurchaseHeader(PlantRequisitionLine."Vendor No.");
          LastVendorNo := PlantRequisitionLine."Vendor No.";
          IF FirstPurchaseHeaderNo = '' THEN
            FirstPurchaseHeaderNo := PurchaseHeaderNo;
          LastPurchaseHeaderNo := PurchaseHeaderNo;
        END;
        CreatePurchaseLine(PurchaseHeaderNo, PlantRequisitionLine);
        PlantRequisitionLine.DELETE;
      UNTIL PlantRequisitionLine.NEXT = 0;

      IF FirstPurchaseHeaderNo = LastPurchaseHeaderNo THEN
        MESSAGE(Text000, FirstPurchaseHeaderNo)
      ELSE
        MESSAGE(Text001, FirstPurchaseHeaderNo, LastPurchaseHeaderNo);
    END;

    PROCEDURE GetItemVendorDefaultQuantity@1210190005() : Decimal;
    VAR
      PurchasePrice@1210190002 : Record 7012;
    BEGIN
      GetItem;
      PurchasePrice.SETRANGE("Item No.", Item."No.");
      PurchasePrice.SETRANGE("Vendor No.", Item."Vendor No.");
      PurchasePrice.SETFILTER("Starting Date", '<=%1|%2', TODAY, 0D);
      PurchasePrice.SETFILTER("Ending Date", '>=%1|%2', TODAY, 0D);
      PurchasePrice.SETRANGE("Unit of Measure Code", Item."Purch. Unit of Measure");
      PurchasePrice.SETRANGE("Currency Code", '');
      PurchasePrice.SETRANGE("Variant Code", '');

      IF PurchasePrice.FINDFIRST THEN
        EXIT(PurchasePrice."Minimum Quantity");
    END;

    BEGIN
    END.
  }
}

