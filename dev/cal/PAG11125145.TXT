OBJECT Page 11125145 Service Object List
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Service Objects;
               NOR=Serviceobjektliste;
               SVE=Serviceobjektlistor];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table11071691;
    PageType=List;
    UsageCategory=Lists;
    CardPageID=Service Object;
    OnInit=BEGIN
             CopyBtnEnable := TRUE;
             //SearchByLocationStructureEnable := TRUE;
           END;

    OnOpenPage=BEGIN
                 UpdateEnabled;
                 PreSelection := MARKEDONLY;
               END;

    OnAfterGetRecord=VAR
                       ServiceObjectInfoMgt@1100525000 : Codeunit 11012840;
                     BEGIN
                       ServiceObjectInfoMgt.GetBuildingInfo("No.", BuildingCode, BuildingDescription);
                       ServiceObjectInfoMgt.GetStdSpecValues("No.", SerialNo, YearOfManufacture);
                       PreferredBuildingCode := GetPreferredBuildingCode;
                       IF NOT BuildingRec.GET(PreferredBuildingCode) THEN
                         BuildingRec.INIT;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1100409000;1 ;Action    ;
                      CaptionML=[ENU=Hyperlink;
                                 NOR=Hyperlenke;
                                 SVE=Hyperl„nk];
                      Promoted=Yes;
                      Visible=false;
                      Image=Link;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 StandardObject@1100409000 : Record 11020334;
                               BEGIN
                                 IF StandardObject.GET("Standard Object No.") THEN
                                   IF StandardObject."Checklist URL" <> '' THEN
                                     HYPERLINK(StandardObject."Checklist URL");
                               END;
                                }
      { 1100525008;1 ;Action    ;
                      CaptionML=ENU=Location Cockpit;
                      Promoted=Yes;
                      Visible=false;
                      PromotedIsBig=Yes;
                      Image=EditLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceLocation@1100525001 : Record 11012801;
                                 ServiceLocationCockpit@1100525000 : Page 11126459;
                               BEGIN
                                 ServiceLocationCockpit.SetServiceObjectNo("No.");
                                 ServiceLocation.GET("Service Location No.");
                                 ServiceLocationCockpit.SETTABLEVIEW(ServiceLocation);
                                 ServiceLocationCockpit.RUN;
                               END;
                                }
      { 1100528612;1 ;Action    ;
                      CaptionML=ENU=Search by Location Structure;
                      Promoted=Yes;
                      Visible=false;
                      Enabled=SearchByLocationStructureEnable;
                      PromotedIsBig=Yes;
                      Image=ExplodeBOM;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceLocation@1100528600 : Record 11012801;
                                 TmpServiceLocStructureLine@1100528602 : TEMPORARY Record 11071720;
                                 ServiceObjectInfoMgt@1100528603 : Codeunit 11012840;
                               BEGIN
                                 IF GETFILTER("Service Location No.") = '' THEN
                                   ERROR(Text000);
                                 ServiceLocation.SETFILTER("No.", GETFILTER("Service Location No."));
                                 IF ServiceLocation.COUNT = 1 THEN BEGIN
                                   ServiceLocation.FINDFIRST;
                                   IF ServiceObjectInfoMgt.GetLocationStructureDS(ServiceLocation."No.", TmpServiceLocStructureLine) THEN
                                     IF PAGE.RUNMODAL(PAGE::"Service Loc.Structure Lines", TmpServiceLocStructureLine) = ACTION::LookupOK THEN BEGIN
                                       TmpServiceLocStructureLine.TESTFIELD("Object Line");
                                       GET(TmpServiceLocStructureLine."Service Object No.");
                                     END;
                                 END;
                               END;
                                }
      { 1100526200;1 ;Action    ;
                      Name=CopyBtn;
                      CaptionML=[ENU=Copy;
                                 NOR=KOPIER;
                                 SVE=Kopiera];
                      Promoted=No;
                      Visible=CopyBtnEnable;
                      Enabled=CopyBtnEnable;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyLines;
                               END;
                                }
      { 1100528618;1 ;Action    ;
                      CaptionML=[ENU=Toggle Pre-Selection;
                                 NOR=Bytt forel›pig utvalg;
                                 SVE=V„xla prelimin„rt urval];
                      Promoted=Yes;
                      Visible=PreSelection;
                      PromotedIsBig=Yes;
                      Image=FaultDefault;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ToggleMark;
                               END;
                                }
      { 1100525010;1 ;Action    ;
                      Name=Show Object(s) on Map;
                      AccessByPermission=TableData 11072390=R;
                      CaptionML=ENU=Show Object(s) on Map;
                      Visible=false;
                      Image=Map;
                      OnAction=VAR
                                 ServiceObject@1100525000 : Record 11071691;
                                 BingMapsServiceObject@1100525001 : Page 11229927;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ServiceObject);
                                 ServiceObject.FINDSET;
                                 BingMapsServiceObject.setServiceObjects(ServiceObject);
                                 BingMapsServiceObject.RUNMODAL;
                               END;
                                }
      { 1100529600;1 ;Action    ;
                      Name=Replace Object;
                      CaptionML=ENU=Replace Object;
                      Visible=FALSE;
                      Image=CopyFromTask;
                      OnAction=VAR
                                 LocServiceObject@1100529600 : Record 11071691;
                                 PageReplaceObject@1100529601 : Page 11127082;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(LocServiceObject);
                                 PageReplaceObject.SetServiceObject(LocServiceObject);
                                 PageReplaceObject.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1100525000;1;Group  ;
                GroupType=Repeater }

    { 1100525001;2;Field  ;
                SourceExpr="No." }

    { 1100528604;2;Field  ;
                SourceExpr=Description }

    { 1100528616;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 1100527400;2;Field  ;
                SourceExpr=Quantity }

    { 1100525003;2;Field  ;
                SourceExpr="Standard Object No." }

    { 1100525011;2;Field  ;
                SourceExpr="Standard Object Description" }

    { 1100528617;2;Field  ;
                SourceExpr="Standard Object Description 2";
                Visible=FALSE }

    { 1100528613;2;Field  ;
                SourceExpr="Brand Code";
                Visible=FALSE }

    { 1100525007;2;Field  ;
                SourceExpr="Brand Description";
                Visible=FALSE }

    { 1100528614;2;Field  ;
                SourceExpr="Model Code";
                Visible=FALSE }

    { 1100409002;2;Field  ;
                SourceExpr="Model Description";
                Visible=FALSE }

    { 1100528615;2;Field  ;
                SourceExpr="Type Code";
                Visible=FALSE }

    { 1100409001;2;Field  ;
                SourceExpr="Type Description";
                Visible=FALSE }

    { 1100525004;2;Field  ;
                CaptionML=[ENU=Serial No.;
                           NOR=Serienr.;
                           SVE=Serienr];
                SourceExpr=SerialNo;
                Editable=false }

    { 1100525005;2;Field  ;
                CaptionML=[ENU=Year of Manufacture;
                           NOR=Produksjons†r;
                           SVE=Tillverknings†r];
                SourceExpr=YearOfManufacture;
                Editable=false }

    { 1100525016;2;Field  ;
                SourceExpr="Service Location No." }

    { 1100526201;2;Field  ;
                SourceExpr="Location Description" }

    { 1100526203;2;Field  ;
                SourceExpr="Location Address" }

    { 1100526205;2;Field  ;
                SourceExpr="Location Address 2";
                Visible=FALSE }

    { 1100526207;2;Field  ;
                SourceExpr="Location City" }

    { 1100526209;2;Field  ;
                SourceExpr="Location Contact Name";
                Visible=FALSE }

    { 1100526211;2;Field  ;
                DrillDown=No;
                SourceExpr="Location Post Code";
                Visible=FALSE }

    { 1100526213;2;Field  ;
                DrillDown=No;
                SourceExpr="Location Country/Region Code";
                Visible=FALSE }

    { 1100528605;2;Field  ;
                CaptionML=[ENU=Preferred Building Code;
                           SVE=Serviceplatsnr];
                SourceExpr=PreferredBuildingCode;
                TableRelation=Building;
                Visible=FALSE }

    { 1100528607;2;Field  ;
                CaptionML=[ENU=Description (Building);
                           SVE=Serviceplatsbeskrivning];
                SourceExpr=BuildingRec.Description;
                Visible=FALSE }

    { 1100528608;2;Field  ;
                CaptionML=[ENU=Address (Building);
                           NOR=Adresse (bygning);
                           SVE=Adress];
                SourceExpr=BuildingRec.Address;
                Visible=FALSE }

    { 1100528609;2;Field  ;
                CaptionML=[ENU=Address 2 (Building);
                           NOR=Adresse 2 (bygning);
                           SVE=Adress 2];
                SourceExpr=BuildingRec."Address 2";
                Visible=FALSE }

    { 1100528610;2;Field  ;
                CaptionML=[ENU=Post Code (Building);
                           NOR=Postnummer (bygning);
                           SVE=Postnr];
                SourceExpr=BuildingRec."Post Code";
                Visible=FALSE }

    { 1100528611;2;Field  ;
                CaptionML=[ENU=City (Building);
                           NOR=Poststed (bygning);
                           SVE=Ort];
                SourceExpr=BuildingRec.City;
                Visible=FALSE }

    { 1100525009;2;Field  ;
                SourceExpr="In use since" }

    { 1100525015;2;Field  ;
                SourceExpr="Ending Date" }

    { 1100528600;2;Field  ;
                DrillDown=No;
                SourceExpr=Discipline }

    { 1100528602;2;Field  ;
                DrillDown=No;
                SourceExpr="Trade Speciality";
                Visible=FALSE }

    { 1100525002;2;Field  ;
                CaptionML=[ENU=Building Code;
                           NOR=Bygningskode;
                           SVE=Byggnadskod];
                SourceExpr=BuildingCode;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ShowBuildingRelations;
                            END;
                             }

    { 1100528603;2;Field  ;
                SourceExpr="Customer Feature";
                Visible=false }

    { 1100409003;2;Field  ;
                SourceExpr="Object Customer" }

    { 1100528601;2;Field  ;
                SourceExpr=Blocked }

    { 1100525006;2;Field  ;
                CaptionML=[ENU=Actual Contract;
                           NOR=Reell kontrakt;
                           SVE=Verkligt kontrakt];
                SourceExpr=MaintenanceManagementCU.GetActualContractsForObject("No.",TODAY);
                OnLookup=BEGIN
                           MaintenanceManagementCU.ShowActualContractsForObject("No.", '', TODAY(), FALSE, '');
                         END;
                          }

    { 1100528000;2;Field  ;
                SourceExpr=Building;
                Visible=False }

    { 1100528001;2;Field  ;
                SourceExpr=Floor }

    { 1100528002;2;Field  ;
                SourceExpr=Room }

    { 1100525014;2;Field  ;
                SourceExpr="Warranty Code Customer";
                Importance=Promoted;
                Visible=FALSE }

    { 1100525013;2;Field  ;
                SourceExpr="Warranty Starting Date Cust.";
                Importance=Promoted;
                Visible=FALSE }

    { 1100525012;2;Field  ;
                SourceExpr="Warranty Exp. Date Customer";
                Visible=FALSE }

    { 1100528619;2;Field  ;
                SourceExpr="Warranty Code Vendor";
                Visible=FALSE }

    { 1100528620;2;Field  ;
                SourceExpr="Warranty Starting Date Vendor";
                Visible=FALSE }

    { 1100528621;2;Field  ;
                SourceExpr="Warranty Exp. Date Vendor";
                Visible=FALSE }

    { 1100528305;2;Field  ;
                SourceExpr="Dsp Cluster Id";
                Visible=false }

    { 1100528304;2;Field  ;
                SourceExpr="Dsp Connection Object Id";
                Visible=false }

    { 1100528306;2;Field  ;
                SourceExpr="Dsp Assignment Id";
                Visible=false }

    { 1100528300;2;Field  ;
                SourceExpr="Dsp Origin";
                Visible=FALSE }

    { 1100528301;2;Field  ;
                SourceExpr="Dsp Version No.";
                Visible=false }

    { 1100528302;2;Field  ;
                SourceExpr="Dsp Operator";
                Visible=false }

    { 1100528303;2;Field  ;
                SourceExpr="Dsp Discipline";
                Visible=false }

  }
  CODE
  {
    VAR
      BuildingRec@1100528600 : Record 11071819;
      MaintenanceManagementCU@1100525005 : Codeunit 11012829;
      g_table@1100526204 : Integer;
      g_code1@1100526203 : Code[20];
      g_code2@1100525001 : Code[20];
      g_int1@1100526201 : Integer;
      g_multicopy@1100526200 : Boolean;
      CopyBtnEnable@19067989 : Boolean INDATASET;
      BuildingCode@1100525002 : Code[20];
      PreferredBuildingCode@1100528602 : Code[20];
      BuildingDescription@1100525003 : Text[50];
      SerialNo@1100525004 : Text[80];
      YearOfManufacture@1100525000 : Text[80];
      Text000@1100528601 : TextConst 'ENU=No Filter on Service Location present';
      SearchByLocationStructureEnable@1100528603 : Boolean INDATASET;
      PreSelection@1100528604 : Boolean INDATASET;

    PROCEDURE Setfilter@1100525000();
    BEGIN
    END;

    PROCEDURE CopyLines@1210190000();
    VAR
      SelectedServiceObject@1100525000 : Record 11071691;
      CopyMgt@1210190035 : Codeunit 11012068;
    BEGIN
      g_multicopy := TRUE;

      CurrPage.SETSELECTIONFILTER(SelectedServiceObject);
      IF MARKEDONLY THEN BEGIN
        //Just a SetSelectionFilter is not enough where Rec is a marked set and Crtl-A is used to select all records
        IF NOT SelectedServiceObject.MARKEDONLY THEN BEGIN
          IF SelectedServiceObject.FINDSET THEN
            REPEAT
              SelectedServiceObject.MARK(TRUE);
            UNTIL SelectedServiceObject.NEXT = 0;
          SelectedServiceObject.MARKEDONLY(TRUE);
        END;

        IF SelectedServiceObject.FINDSET THEN
          REPEAT
            SETRANGE("No.", SelectedServiceObject."No.");
            IF ISEMPTY THEN
              SelectedServiceObject.MARK(FALSE);
          UNTIL SelectedServiceObject.NEXT = 0;
      END;
      CopyMgt.SetSelectionServiceObjects(g_table, g_code1, g_code2, g_int1);
      CopyMgt.CopyServiceObjects(SelectedServiceObject);
      CurrPage.CLOSE;
    END;

    PROCEDURE DetermineInterface@11012002(l_table@11012046 : Integer;l_code1@11012047 : Code[20];l_code2@1100525000 : Code[20];l_int1@11012051 : Integer);
    BEGIN
      g_table := l_table;
      g_code1 := l_code1;
      g_code2 := l_code2;
      g_int1 := l_int1;
    END;

    PROCEDURE CheckMultiCopy@1100526200() : Boolean;
    BEGIN
      EXIT(g_multicopy);
    END;

    PROCEDURE UpdateEnabled@1100528600();
    VAR
      ServiceLocation@1100528600 : Record 11012801;
    BEGIN
      CopyBtnEnable := g_table <> 0;
      IF GETFILTER("Service Location No.") <> '' THEN BEGIN
        ServiceLocation.SETFILTER("No.", GETFILTER("Service Location No."));
        SearchByLocationStructureEnable := ServiceLocation.COUNT = 1;
      END;
    END;

    LOCAL PROCEDURE ToggleMark@1100528601();
    BEGIN
      IF NOT PreSelection THEN
        EXIT;

      IF MARKEDONLY THEN
        MARKEDONLY(FALSE)
      ELSE
        MARKEDONLY(TRUE);
    END;

    BEGIN
    END.
  }
}

