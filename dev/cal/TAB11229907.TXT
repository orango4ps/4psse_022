OBJECT Table 11229907 Invoice Proposal Batch Seq.
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=VAR
               InvoiceProposalBatch@1100528600 : Record 11229906;
               InvoiceProposalBatchSeq@1100528601 : Record 11229907;
             BEGIN
               TESTFIELD("Invoice Proposal Batch ID");
               InvoiceProposalBatch.GET("Invoice Proposal Batch ID");

               IF "Batch Seq. No." = '' THEN BEGIN
                 InvoiceProposalBatchSeq.LOCKTABLE;
                 InvoiceProposalBatchSeq.SETRANGE("Invoice Proposal Batch ID", "Invoice Proposal Batch ID");
                 IF InvoiceProposalBatchSeq.FINDLAST THEN
                   "Batch Seq. No." := INCSTR(InvoiceProposalBatchSeq."Batch Seq. No.")
                 ELSE BEGIN
                   InvoiceProposalBatch.TESTFIELD("Batch Seq. No. Preface");
                   "Batch Seq. No." := InvoiceProposalBatch."Batch Seq. No. Preface" + '0001';
                 END;
               END;

               "Created on" := TODAY;
               "Created by" := USERID;

               IF "Transaction Date" = 0D THEN
                 DetermineTransactionDate;
             END;

    OnDelete=VAR
               InvProposalBatchLog@1100528600 : Record 11229908;
               InvoiceProposalBatchFilter@1100528602 : Record 11229909;
             BEGIN
               CALCFIELDS("No. of Proposal Invoices", "No. of Invoices", "No. of Credit Memos", "No. of Posted Invoices", "No. of Posted Credit Memos");
               TESTFIELD("No. of Proposal Invoices", 0);
               TESTFIELD("No. of Invoices", 0);
               TESTFIELD("No. of Credit Memos", 0);
               TESTFIELD("No. of Posted Invoices", 0);
               TESTFIELD("No. of Posted Credit Memos", 0);

               InvProposalBatchLog.SETRANGE("Batch Seq. No.", "Batch Seq. No.");
               InvProposalBatchLog.DELETEALL(TRUE);

               InvoiceProposalBatchFilter.SETRANGE("Batch Seq. No.", "Batch Seq. No.");
               InvoiceProposalBatchFilter.DELETEALL(TRUE);
             END;

    CaptionML=ENU=Proposal Invoice Batch Seq.;
    LookupPageID=Page11126574;
    DrillDownPageID=Page11126574;
  }
  FIELDS
  {
    { 10  ;   ;Batch Seq. No.      ;Code20        ;CaptionML=ENU=Batch Seq. No.;
                                                   NotBlank=No;
                                                   Editable=No }
    { 20  ;   ;Invoice Proposal Batch ID;Integer  ;TableRelation="Invoice Proposal Batch";
                                                   CaptionML=ENU=Invoice Proposal Batch ID;
                                                   NotBlank=No;
                                                   Editable=No }
    { 30  ;   ;Invoice Proposal Type;Option       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Invoice Proposal Batch"."Invoice Proposal Type");
                                                   CaptionML=ENU=Invoice Proposal Type;
                                                   OptionCaptionML=[ENU=Service Contract;
                                                                    NOR=Servicekontrakt;
                                                                    SVE=Servicekontrakt];
                                                   OptionString=Service Contract;
                                                   Description=Must be equal to T11229906;
                                                   Editable=No }
    { 40  ;   ;Created on          ;Date          ;CaptionML=[ENU=Created on;
                                                              NOR=Opprettet den;
                                                              SVE=Skapades];
                                                   Editable=No }
    { 50  ;   ;Created by          ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserCode@1210190000 : Code[50];
                                                              UserMgt@1210190001 : Codeunit 418;
                                                            BEGIN
                                                              UserCode := "Created by";
                                                              UserMgt.LookupUserID(UserCode);
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Created by;
                                                              NOR=Opprettet av;
                                                              SVE=Skapades av];
                                                   Editable=No }
    { 60  ;   ;Executed on         ;DateTime      ;CaptionML=ENU=Executed on;
                                                   Editable=No }
    { 70  ;   ;Rerun on            ;DateTime      ;CaptionML=ENU=Rerun on;
                                                   Editable=No }
    { 80  ;   ;No. of Messages     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Inv. Proposal Batch Message" WHERE (Batch Seq. No.=FIELD(Batch Seq. No.)));
                                                   CaptionML=ENU=No. of Messages;
                                                   Editable=No }
    { 90  ;   ;No. of Proposal Invoices;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Invoice Proposal),
                                                                                           Batch Seq. No.=FIELD(Batch Seq. No.)));
                                                   OnLookup=BEGIN
                                                              LookupNoOfProposalInvoices;
                                                            END;

                                                   CaptionML=ENU=No. of Proposal Invoices;
                                                   Editable=No }
    { 100 ;   ;No. of Invoices     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Invoice),
                                                                                           Batch Seq. No.=FIELD(Batch Seq. No.)));
                                                   OnLookup=BEGIN
                                                              LookupNoOfInvoices;
                                                            END;

                                                   CaptionML=[ENU=No. of Invoices;
                                                              NOR=Antall fakturaer;
                                                              SVE=Antal fakturor];
                                                   Editable=No }
    { 110 ;   ;No. of Credit Memos ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Credit Memo),
                                                                                           Batch Seq. No.=FIELD(Batch Seq. No.)));
                                                   OnLookup=BEGIN
                                                              LookupNoOfCreditMemos;
                                                            END;

                                                   CaptionML=[ENU=No. of Credit Memos;
                                                              NOR=Antall kreditnotaer;
                                                              SVE=Antal kreditnotor];
                                                   Editable=No }
    { 120 ;   ;No. of Posted Invoices;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Invoice Header" WHERE (Batch Seq. No.=FIELD(Batch Seq. No.)));
                                                   CaptionML=[ENU=No. of Posted Invoices;
                                                              NOR=Ant. bokf›rte fakturaer;
                                                              SVE=Antal bokf”rda fakturor];
                                                   Editable=No }
    { 130 ;   ;No. of Posted Credit Memos;Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Cr.Memo Header" WHERE (Batch Seq. No.=FIELD(Batch Seq. No.)));
                                                   CaptionML=[ENU=No. of Posted Credit Memos;
                                                              NOR=Ant. bokf. kreditnotaer;
                                                              SVE=Antal bokf”rda kreditnotor];
                                                   Editable=No }
    { 140 ;   ;No. of Error Messages;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Inv. Proposal Batch Message" WHERE (Batch Seq. No.=FIELD(Batch Seq. No.),
                                                                                                          Message Type=CONST(Error)));
                                                   CaptionML=ENU=No. of Error Messages;
                                                   Editable=No }
    { 150 ;   ;No. of Cust. Ledger Entries;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("Cust. Ledger Entry" WHERE (Batch Seq. No.=FIELD(Batch Seq. No.)));
                                                   CaptionML=ENU=No. of Cust. Ledger Entries;
                                                   Editable=No }
    { 160 ;   ;Transaction Date    ;Date          ;CaptionML=[ENU=Transaction Date;
                                                              NOR=Transaksjonsdato;
                                                              SVE=Transaktionsdatum];
                                                   Editable=No }
    { 170 ;   ;Finished            ;Boolean       ;CaptionML=[ENU=Finished;
                                                              NOR=Ferdig;
                                                              SVE=Avslutad];
                                                   Editable=No }
    { 180 ;   ;Batch Description   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Invoice Proposal Batch".Description WHERE (ID=FIELD(Invoice Proposal Batch ID)));
                                                   CaptionML=ENU=Batch Description;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Batch Seq. No.                          ;Clustered=Yes }
    {    ;Invoice Proposal Batch ID                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE DetermineTransactionDate@1100528600();
    VAR
      InvoiceProposalBatch@1100528600 : Record 11229906;
      LastInvoiceProposalBatchSeq@1100528606 : Record 11229907;
      Date@1100528601 : Record 2000000007;
      CompanyInformation@1100528602 : Record 79;
      CalendarManagement@1100528603 : Codeunit 7600;
      NonWorking@1100528604 : Boolean;
      Description@1100528605 : Text[50];
      LastTransactionDate@1100528607 : Date;
      OriginalTransactionDate@1100528608 : Date;
    BEGIN
      InvoiceProposalBatch.GET("Invoice Proposal Batch ID");
      InvoiceProposalBatch.CALCFIELDS("Last Batch Seq. No.");
      IF LastInvoiceProposalBatchSeq.GET(InvoiceProposalBatch."Last Batch Seq. No.") THEN
        LastTransactionDate := LastInvoiceProposalBatchSeq."Transaction Date";
      InvoiceProposalBatch.TESTFIELD("Transaction Day");

      Date.SETRANGE("Period Type", Date."Period Type"::Month);
      IF LastTransactionDate <> 0D THEN BEGIN
        Date.SETFILTER("Period Start", '>=%1&<=%2', LastTransactionDate, TODAY + InvoiceProposalBatch."No. of Days in Advance");
        "Transaction Date" := LastTransactionDate;
      END ELSE
        Date.SETFILTER("Period Start", '<=%1', TODAY + InvoiceProposalBatch."No. of Days in Advance");
      IF Date.FINDLAST THEN BEGIN
        REPEAT
          IF LastTransactionDate < NORMALDATE(Date."Period End") THEN
            "Transaction Date" := NORMALDATE(Date."Period End");
        UNTIL (LastTransactionDate = 0D) OR (LastTransactionDate >= NORMALDATE(Date."Period End")) OR (NORMALDATE(Date."Period End") < TODAY) OR (Date.NEXT(-1) = 0);

        IF InvoiceProposalBatch."Transaction Day" < DATE2DMY("Transaction Date", 1) THEN
          "Transaction Date" -= DATE2DMY("Transaction Date", 1) - InvoiceProposalBatch."Transaction Day";
        OriginalTransactionDate := "Transaction Date";
        WHILE DATE2DWY("Transaction Date", 1) IN [6, 7] DO //Skip weekend
          "Transaction Date" += 1;
        CompanyInformation.GET;
        REPEAT // Skip non working days
          NonWorking := CalendarManagement.CheckDateStatus(CompanyInformation."Base Calendar Code", "Transaction Date", Description);
          IF NonWorking THEN
            "Transaction Date" += 1;
         UNTIL NOT NonWorking OR ("Transaction Date" - OriginalTransactionDate > 30);
      END;
    END;

    PROCEDURE GetAmountsCustLedgerEntries@1100528602(VAR OOriginalAmount@1100528602 : Decimal;VAR ORemainingAmount@1100528601 : Decimal);
    VAR
      CustLedgerEntry@1100528600 : Record 21;
    BEGIN
      OOriginalAmount := 0;
      ORemainingAmount := 0;
      CustLedgerEntry.SETCURRENTKEY("Batch Seq. No.");
      CustLedgerEntry.SETRANGE("Batch Seq. No.", "Batch Seq. No.");
      IF CustLedgerEntry.FINDSET THEN
        REPEAT
          CustLedgerEntry.CALCFIELDS("Original Amt. (LCY)", "Remaining Amt. (LCY)");
          ORemainingAmount += CustLedgerEntry."Remaining Amt. (LCY)";
          OOriginalAmount += CustLedgerEntry."Original Amt. (LCY)";
        UNTIL CustLedgerEntry.NEXT = 0;
    END;

    PROCEDURE ShowOriginalAmountEntries@1100528604();
    VAR
      CustLedgerEntry@1100528600 : Record 21;
    BEGIN
      CustLedgerEntry.SETRANGE("Batch Seq. No.", "Batch Seq. No.");
      PAGE.RUNMODAL(0, CustLedgerEntry);
    END;

    PROCEDURE ShowRemainingAmountEntries@1100528601();
    VAR
      CustLedgerEntry@1100528600 : Record 21;
    BEGIN
      CustLedgerEntry.SETRANGE("Batch Seq. No.", "Batch Seq. No.");
      CustLedgerEntry.SETFILTER("Remaining Amt. (LCY)", '<>%1', 0);
      PAGE.RUNMODAL(0, CustLedgerEntry);
    END;

    PROCEDURE ShowCard@1100528603();
    BEGIN
      PAGE.RUNMODAL(PAGE::"Inv. Propopsal Batch Seq. No.", Rec);
    END;

    PROCEDURE LookupNoOfProposalInvoices@1100528002();
    VAR
      SalesHeader@1100528000 : Record 36;
    BEGIN
      CALCFIELDS("Invoice Proposal Type");
      CASE "Invoice Proposal Type" OF
        "Invoice Proposal Type"::"Service Contract":
          BEGIN
            SalesHeader.SETRANGE("Document Type", SalesHeader."Document Type"::"Invoice Proposal");
            SalesHeader.SETRANGE("Batch Seq. No.", "Batch Seq. No.");
            PAGE.RUNMODAL(PAGE::"Invoice Proposal List (Serv)", SalesHeader);
          END;
      END;
    END;

    PROCEDURE LookupNoOfInvoices@1100528000();
    VAR
      SalesHeader@1100528000 : Record 36;
    BEGIN
      CALCFIELDS("Invoice Proposal Type");
      CASE "Invoice Proposal Type" OF
        "Invoice Proposal Type"::"Service Contract":
          BEGIN
            SalesHeader.SETRANGE("Document Type", SalesHeader."Document Type"::Invoice);
            SalesHeader.SETRANGE("Batch Seq. No.", "Batch Seq. No.");
            PAGE.RUNMODAL(PAGE::"Sales Invoice List", SalesHeader);
          END;
      END;
    END;

    PROCEDURE LookupNoOfCreditMemos@1100528001();
    VAR
      SalesHeader@1100528000 : Record 36;
    BEGIN
      CALCFIELDS("Invoice Proposal Type");
      CASE "Invoice Proposal Type" OF
        "Invoice Proposal Type"::"Service Contract":
          BEGIN
            SalesHeader.SETRANGE("Document Type", SalesHeader."Document Type"::"Credit Memo");
            SalesHeader.SETRANGE("Batch Seq. No.", "Batch Seq. No.");
            PAGE.RUNMODAL(PAGE::"Sales Credit Memos", SalesHeader);
          END;
      END;
    END;

    BEGIN
    END.
  }
}

