OBJECT Table 11072242 Serv. Surv. Summary Sheet Line
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=4PS14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "Amount for Surcharge" THEN
                 MarkSurveyToRecalculate;
             END;

    OnModify=BEGIN
               IF "Amount for Surcharge" THEN
                 MarkSurveyToRecalculate;
             END;

    OnDelete=BEGIN
               IF "Amount for Surcharge" THEN
                 MarkSurveyToRecalculate;
             END;

    CaptionML=ENU=Service Survey Summary Sheet Line;
  }
  FIELDS
  {
    { 10  ;   ;Summary Kind        ;Option        ;CaptionML=ENU=Summary Kind;
                                                   OptionCaptionML=ENU=Standard,Survey;
                                                   OptionString=Standard,Survey;
                                                   Editable=No }
    { 30  ;   ;Code                ;Code10        ;TableRelation="Serv. Surv. Summary Sheet".Code WHERE (Summary Kind=FIELD(Summary Kind));
                                                   CaptionML=[ENU=Code;
                                                              NOR=Kode;
                                                              SVE=Kod];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 40  ;   ;Survey No.          ;Code20        ;TableRelation=IF (Summary Kind=CONST(Survey)) "Service Survey".No.;
                                                   CaptionML=[ENU=Survey No.;
                                                              NOR=Kartlegging nr.;
                                                              SVE=Kartl„ggningsnr];
                                                   Editable=No }
    { 45  ;   ;Summary Sheet Seq. No.;Integer     ;CaptionML=ENU=Summary Seq. No.;
                                                   MinValue=1 }
    { 55  ;   ;Index Date          ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Serv. Surv. Summary Sheet"."Index Date" WHERE (Summary Kind=FIELD(Summary Kind),
                                                                                                                      Survey No.=FIELD(Survey No.),
                                                                                                                      Code=FIELD(Code),
                                                                                                                      Seq. No.=FIELD(Summary Sheet Seq. No.)));
                                                   CaptionML=[ENU=Index Date;
                                                              NOR=Indeksdato;
                                                              SVE=Indexdatum];
                                                   Editable=No }
    { 60  ;   ;Row No.             ;Code10        ;CaptionML=[ENU=Row No.;
                                                              NOR=Rad-nr;
                                                              SVE=Rad-nr];
                                                   NotBlank=Yes;
                                                   Numeric=Yes }
    { 70  ;   ;Cost Type           ;Option        ;InitValue=Sundry;
                                                   OnValidate=BEGIN
                                                                IF "Cost Object" <> '' THEN BEGIN
                                                                  IF "Cost Type" <> xRec."Cost Type" THEN
                                                                    IF CONFIRM(Text001,TRUE) THEN BEGIN
                                                                      "Cost Object" := '';
                                                                    END ELSE BEGIN
                                                                      "Cost Type" := xRec."Cost Type";
                                                                      EXIT;
                                                                    END;
                                                                END;

                                                                IF (Type = Type::Surcharge) AND ("Cost Type" = "Cost Type"::Labor) THEN
                                                                  VALIDATE("Cost Type Filter", "Cost Type Filter"::Labor);

                                                                IF "Cost Type" <> xRec."Cost Type" THEN BEGIN
                                                                  IF "Cost Type" <> "Cost Type"::Labor THEN BEGIN
                                                                    Norm := 0;
                                                                    "Rate Code" := '';
                                                                    Rate := 0;
                                                                  END;
                                                                  IF "Cost Type" = "Cost Type"::Labor THEN
                                                                    Price := 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Cost Type;
                                                              NOR=Kostnadstype;
                                                              SVE=Kostnadstyp];
                                                   OptionCaptionML=[ENU=Labor,Material,Subcontracting,Plant,Sundry;
                                                                    NOR=Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse;
                                                                    SVE=Arbetskraft,Material,Underentreprenad,Maskin,Diverse];
                                                   OptionString=Labor,Material,Subcontracting,Plant,Sundry }
    { 80  ;   ;Cost Object         ;Code20        ;TableRelation=IF (Cost Type=CONST(Labor)) "Dimension Value".Code WHERE (Cost Type=FILTER(Labor),
                                                                                                                           Global Dimension No.=CONST(2))
                                                                                                                           ELSE IF (Cost Type=CONST(Material)) "Dimension Value".Code WHERE (Cost Type=FILTER(Material),
                                                                                                                                                                                             Global Dimension No.=CONST(2))
                                                                                                                                                                                             ELSE IF (Cost Type=CONST(Plant)) "Dimension Value".Code WHERE (Cost Type=FILTER(Plant),
                                                                                                                                                                                                                                                            Global Dimension No.=CONST(2))
                                                                                                                                                                                                                                                            ELSE IF (Cost Type=CONST(Sundry)) "Dimension Value".Code WHERE (Cost Type=FILTER(Sundry),
                                                                                                                                                                                                                                                                                                                            Global Dimension No.=CONST(2))
                                                                                                                                                                                                                                                                                                                            ELSE IF (Cost Type=CONST(Subcontracting)) "Dimension Value".Code WHERE (Cost Type=FILTER(Subcontracting),
                                                                                                                                                                                                                                                                                                                                                                                                    Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                IF "Cost Object" <> '' THEN
                                                                  IF xRec."Cost Object" = '' THEN
                                                                    GetDefaultsCostObject()
                                                                  ELSE
                                                                    IF "Cost Object" <> xRec."Cost Object" THEN
                                                                      IF CONFIRM(
                                                                        Text002 +
                                                                        Text003)
                                                                      THEN
                                                                        GetDefaultsCostObject();
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              NOR=Kostnadsobjekt;
                                                              SVE=Kostnadsobjekt];
                                                   CaptionClass='1,1,2' }
    { 90  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              NOR=Beskrivelse;
                                                              SVE=Beskrivning] }
    { 100 ;   ;Type                ;Option        ;InitValue=Additional Costs;
                                                   OnValidate=BEGIN
                                                                IF (Type = Type::Surcharge) AND ("Cost Type" = "Cost Type"::Labor) THEN
                                                                  VALIDATE("Cost Type Filter","Cost Type Filter"::Labor)
                                                                ELSE
                                                                  "Cost Type Filter" := "Cost Type Filter"::All;

                                                                IF (xRec.Type <> Type) AND (Type <> Type::Surcharge) THEN
                                                                  "Amount for Surcharge" := FALSE;

                                                                ResetValueFields();
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              NOR=Radtype;
                                                              SVE=Radtyp];
                                                   OptionCaptionML=ENU=Text,Surcharge,Additional Costs,Subtotal;
                                                   OptionString=Text,Surcharge,Additional Costs,Subtotal }
    { 130 ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                //IF (Quantity <> 0) AND (Type = Type::Subtotal) THEN
                                                                //  TESTFIELD(Totaling);
                                                                IF CurrFieldNo = FIELDNO(Quantity) THEN
                                                                  CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              NOR=Antall;
                                                              SVE=Quantity];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 140 ;   ;Norm                ;Decimal       ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO(Norm) THEN
                                                                  CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Norm;
                                                              NOR=Norm;
                                                              SVE=Norm];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 150 ;   ;Unit of Measure     ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   CaptionML=[ENU=Unit of Measure;
                                                              NOR=M†leenhet;
                                                              SVE=M†ttenhet] }
    { 160 ;   ;Rate Code           ;Code10        ;TableRelation="Budget Rate";
                                                   OnValidate=VAR
                                                                ServiceSurvey@1100528602 : Record 11071803;
                                                                BudgetRateManagement@1100528600 : Codeunit 11012358;
                                                                BudgetRateFoundAt@1100528601 : Text[250];
                                                              BEGIN
                                                                IF "Rate Code" <> '' THEN
                                                                  TESTFIELD("Cost Type", "Cost Type"::Labor);
                                                                IF ("Cost Type" = "Cost Type"::Labor) THEN BEGIN
                                                                  IF NOT ServiceSurvey.GET("Survey No.") THEN
                                                                    ServiceSurvey.INIT;
                                                                  CALCFIELDS("Index Date");
                                                                  Rate := BudgetRateManagement.GetBudgetRate(
                                                                    1, '', '', '', ServiceSurvey."Global Dimension 1 Code", "Rate Code", "Index Date", BudgetRateFoundAt);
                                                                  VALIDATE(Rate);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Rate Code;
                                                              NOR=Avgiftskode;
                                                              SVE=Avgiftskod] }
    { 170 ;   ;Rate                ;Decimal       ;OnValidate=BEGIN
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Rate;
                                                              NOR=Avgift;
                                                              SVE=Avgift];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=2 }
    { 180 ;   ;Price               ;Decimal       ;OnValidate=BEGIN
                                                                CASE "Cost Type" OF
                                                                  "Cost Type"::Labor:
                                                                    BEGIN
                                                                      MESSAGE(Text004);
                                                                      Price := 0;
                                                                    END;
                                                                END;
                                                                IF CurrFieldNo = FIELDNO(Price) THEN
                                                                  CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Price;
                                                              NOR=Pris;
                                                              SVE=Pris];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 190 ;   ;Hours               ;Decimal       ;CaptionML=[ENU=Hours;
                                                              NOR="Timer ";
                                                              SVE=Timmar];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 200 ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              NOR=Bel›p;
                                                              SVE=Belopp];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 210 ;   ;Subtotal            ;Decimal       ;CaptionML=[ENU=Subtotal;
                                                              NOR=Subtotal;
                                                              SVE=Subtotal];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 220 ;   ;Cost Type Filter    ;Option        ;InitValue=All;
                                                   OnValidate=BEGIN
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Cost Type Filter;
                                                              NOR=Kosttypefilter;
                                                              SVE=Filter f”r kostnadstyp];
                                                   OptionCaptionML=[ENU="Labor,Material,Subcontracting,Plant,Sundry,All, ";
                                                                    NOR="Arbeidskraft,Materiale,Underentrepen›r,Maskin,Diverse,Alle, ";
                                                                    SVE="Arbetskraft,Material,Underentreprenad,Maskin,Diverse,Alla, "];
                                                   OptionString=[Labor,Material,Subcontracting,Plant,Sundry,All, ] }
    { 230 ;   ;Cost Object Filter  ;Text80        ;TableRelation=IF (Cost Type Filter=FILTER(All)) "Dimension Value".Code WHERE (Global Dimension No.=CONST(2))
                                                                 ELSE IF (Cost Type Filter=FILTER(<>All)) "Dimension Value".Code WHERE (Global Dimension No.=CONST(2),
                                                                                                                                        Cost Type=FIELD(Cost Type Filter));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              NOR=Kostnadsobjekt, filter;
                                                              SVE=Filter f”r kostnadsb„rare];
                                                   CaptionClass='1,3,2' }
    { 240 ;   ;Rate Code Filter    ;Text80        ;TableRelation="Budget Rate";
                                                   CaptionML=[ENU=Rate Code Filter;
                                                              NOR=Avgiftskodefilter;
                                                              SVE=Avgiftskodfilter] }
    { 250 ;   ;Totaling            ;Text250       ;InitValue=NVT;
                                                   OnValidate=BEGIN
                                                                CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Totaling;
                                                              NOR=Summering;
                                                              SVE=Summeringsintervall] }
    { 300 ;   ;Summary Total Labor ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Summary Sheet Line".Amount WHERE (Summary Kind=FIELD(Summary Kind),
                                                                                                                  Code=FIELD(Code),
                                                                                                                  Survey No.=FIELD(Survey No.),
                                                                                                                  Summary Sheet Seq. No.=FIELD(Summary Sheet Seq. No.),
                                                                                                                  Cost Type=CONST(Labor)));
                                                   CaptionML=[ENU=Summary Total Labor;
                                                              NOR=Sammendrag, arbeidskraft totalt;
                                                              SVE=Sammandrag, arbetskraft totalt];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 310 ;   ;Summary Total Material;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Summary Sheet Line".Amount WHERE (Summary Kind=FIELD(Summary Kind),
                                                                                                                  Code=FIELD(Code),
                                                                                                                  Survey No.=FIELD(Survey No.),
                                                                                                                  Summary Sheet Seq. No.=FIELD(Summary Sheet Seq. No.),
                                                                                                                  Cost Type=CONST(Material)));
                                                   CaptionML=[ENU=Summary Total Material;
                                                              NOR=Sammendrag, Materiale totalt;
                                                              SVE=Sammandrag, material totalt];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 320 ;   ;Summary Total Subc. ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Summary Sheet Line".Amount WHERE (Summary Kind=FIELD(Summary Kind),
                                                                                                                  Code=FIELD(Code),
                                                                                                                  Survey No.=FIELD(Survey No.),
                                                                                                                  Summary Sheet Seq. No.=FIELD(Summary Sheet Seq. No.),
                                                                                                                  Cost Type=CONST(Subcontracting)));
                                                   CaptionML=[ENU=Summary Total Subc.;
                                                              NOR=Sammendrag, underentrepen›r totalt;
                                                              SVE=Sammandrag, legotillv. totalt];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 330 ;   ;Summary Total Plant ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Summary Sheet Line".Amount WHERE (Summary Kind=FIELD(Summary Kind),
                                                                                                                  Code=FIELD(Code),
                                                                                                                  Survey No.=FIELD(Survey No.),
                                                                                                                  Summary Sheet Seq. No.=FIELD(Summary Sheet Seq. No.),
                                                                                                                  Cost Type=CONST(Plant)));
                                                   CaptionML=[ENU=Summary Total Plant;
                                                              NOR=Sammendrag, maskin totalt;
                                                              SVE=Sammandrag, maskin totalt];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 340 ;   ;Summary Total Sundry;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Summary Sheet Line".Amount WHERE (Summary Kind=FIELD(Summary Kind),
                                                                                                                  Code=FIELD(Code),
                                                                                                                  Survey No.=FIELD(Survey No.),
                                                                                                                  Summary Sheet Seq. No.=FIELD(Summary Sheet Seq. No.),
                                                                                                                  Cost Type=CONST(Sundry)));
                                                   CaptionML=[ENU=Summary Total Sundry;
                                                              NOR=Sammandrag, diverse totalt;
                                                              SVE=Sammandr, div.kostn. totalt];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 350 ;   ;Summary Total Amount;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Summary Sheet Line".Amount WHERE (Summary Kind=FIELD(Summary Kind),
                                                                                                                  Code=FIELD(Code),
                                                                                                                  Survey No.=FIELD(Survey No.),
                                                                                                                  Summary Sheet Seq. No.=FIELD(Summary Sheet Seq. No.)));
                                                   CaptionML=[ENU=Summary Total Amount;
                                                              NOR=Sammendrag, Totalt bel›p;
                                                              SVE=Sammandrag, totalt belopp];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 360 ;   ;Summary Total Hours ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Serv. Surv. Summary Sheet Line".Hours WHERE (Summary Kind=FIELD(Summary Kind),
                                                                                                                 Code=FIELD(Code),
                                                                                                                 Survey No.=FIELD(Survey No.),
                                                                                                                 Summary Sheet Seq. No.=FIELD(Summary Sheet Seq. No.)));
                                                   CaptionML=[ENU=Summary Total Hours;
                                                              NOR=Sammendrag, timer totalt;
                                                              SVE=Sammandrag, timmar totalt];
                                                   Editable=No }
    { 370 ;   ;Time Quantity       ;Decimal       ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Time Quantity") THEN
                                                                  CalcTotals;
                                                              END;

                                                   CaptionML=[ENU=Time Quantity;
                                                              NOR=Tidskvantitet;
                                                              SVE=Tidskvantitet];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 380 ;   ;Unit of Time        ;Code10        ;TableRelation="Unit of Measure".Code;
                                                   CaptionML=[ENU=Unit of Time;
                                                              NOR=Tidsenhet;
                                                              SVE=Tidsenhet] }
    { 390 ;   ;Summary Type        ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Serv. Surv. Summary Sheet"."Summary Type" WHERE (Summary Kind=FIELD(Summary Kind),
                                                                                                                        Code=FIELD(Code),
                                                                                                                        Survey No.=FIELD(Survey No.),
                                                                                                                        Seq. No.=FIELD(Summary Sheet Seq. No.)));
                                                   CaptionML=[ENU=Summary Type;
                                                              NOR=Sammendragstype;
                                                              SVE=Sammandragstyp];
                                                   OptionCaptionML=[ENU=Cost,Sales;
                                                                    NOR=Kostnad,Salg;
                                                                    SVE=Kostnad,F”rs„ljning];
                                                   OptionString=Cost,Sales }
    { 400 ;   ;Amount for Surcharge;Boolean       ;OnValidate=VAR
                                                                ServiceSurvey@1100528600 : Record 11071803;
                                                              BEGIN
                                                                ServiceSurvey.GET("Survey No.");
                                                                ServiceSurvey.TESTFIELD("Summary Sheet for Surcharge", TRUE);
                                                                IF xRec."Amount for Surcharge" <> "Amount for Surcharge" THEN
                                                                  MarkSurveyToRecalculate;
                                                              END;

                                                   CaptionML=ENU=Amount for Surcharge }
  }
  KEYS
  {
    {    ;Summary Kind,Survey No.,Code,Summary Sheet Seq. No.,Row No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1100528600 : TextConst 'ENU=Change Cost Type ?;NOR=Endre kostnadstype?;SVE=Žndra kostnadstyp?';
      Text002@1100528601 : TextConst 'ENU=Copy Data from new Cost Object?\\;NOR=Kopier data fra nytt Kostnadsobjekt?\\;SVE=Kopiera data fr†n nytt kostnadsobjekt?\\';
      Text003@1100528602 : TextConst 'ENU=PS. Alleen lege velden worden gevuld. Bestaande gegevens worden niet overschreven.;NOR=P.S. Kun tomme felt fylt ut. Eksisterende data overskrives ikke.;SVE=P.S. Endast tomma f„lt fylls i. Existerande data skrivs inte ”ver.';
      Text004@1100528603 : TextConst 'ENU=Unit Price not allowed because Cost Type of this record is Labor !;NOR=Enhetsprisen er ikke tillatt siden Kostnadstypen for denne posten er arbeidskraft!;SVE=Enhetspriset „r inte till†tet eftersom kostnadstypen f”r denna post „r arbetskraft!';
      ServSurvLocationObject@1100528604 : Record 11071813;

    LOCAL PROCEDURE GetDefaultsCostObject@3();
    VAR
      ServiceSurvey@1100528604 : Record 11071803;
      DimensionValue@1100528603 : Record 349;
      BudgetRateManagement@1100528600 : Codeunit 11012358;
      DimensionManagement@1100528602 : Codeunit 408;
      BudgetRateFoundAt@1100528601 : Text[250];
    BEGIN
      DimensionManagement.GetDimValueRec(2, "Cost Object", DimensionValue, TRUE, '');

      IF Description = '' THEN
        Description := DimensionValue.Name;
      IF "Unit of Measure" = '' THEN
        "Unit of Measure" := DimensionValue."Unit of Measure";

      CASE "Cost Type" OF
        "Cost Type"::Labor:
          BEGIN
            IF Norm = 0 THEN
              Norm := DimensionValue.Norm;
            IF NOT ServiceSurvey.GET("Survey No.") THEN
              ServiceSurvey.INIT;
            IF ("Rate Code" = '') AND (Rate = 0) THEN BEGIN
              "Rate Code" := DimensionValue."Rate Code";
              CALCFIELDS("Index Date");
              Rate := BudgetRateManagement.GetBudgetRate(
                1, '', '', '', ServiceSurvey."Global Dimension 1 Code", "Rate Code", "Index Date", BudgetRateFoundAt);
            END;
          END;
        ELSE
          IF Price = 0 THEN
            Price := DimensionValue.Price;
      END;
    END;

    LOCAL PROCEDURE ResetValueFields@1210190000();
    BEGIN
      Quantity := 0;
      Norm := 0;
      "Unit of Measure" := '';
      "Rate Code" := '';
      Rate := 0;
      Price := 0;
      Hours := 0;
      Amount := 0;
      IF Type = Type::"Additional Costs" THEN
        "Time Quantity" := 1
      ELSE
        "Time Quantity" := 0;
      "Cost Object Filter" := '';
      "Cost Type Filter" := "Cost Type Filter"::All;
      Totaling := '';
      Subtotal := 0;
    END;

    PROCEDURE CalcTotals@1();
    VAR
      ServiceSurvey@1100528608 : Record 11071803;
      ServSurvSummarySheetLine@1210190001 : Record 11072242;
      TotalLabor@1100528600 : Decimal;
      TotalHours@1100528601 : Decimal;
      TotalMaterial@1100528602 : Decimal;
      TotalSubcontracting@1100528603 : Decimal;
      TotalPlant@1100528604 : Decimal;
      TotalSundry@1100528605 : Decimal;
      TotalCost@1100528606 : Decimal;
      TotalSurcharge@1100528607 : Decimal;
    BEGIN
      IF Type = Type::"Additional Costs" THEN BEGIN
        IF "Cost Type" <> "Cost Type"::Labor THEN BEGIN
          Hours := 0;
          Amount := ROUND("Time Quantity" * Quantity * Price);
        END ELSE BEGIN
          Price := 0;
          Hours := ROUND("Time Quantity" * Quantity * Norm);
          Amount := ROUND("Time Quantity" * Quantity * Norm * Rate);
        END;
      END;

      IF ((Type = Type::Surcharge) OR (Type = Type::Subtotal)) AND ("Survey No." <> '') THEN BEGIN
        CALCFIELDS("Summary Type");

        Amount := 0;
        Hours := 0;
        ServSurvLocationObject.RESET;
        ServSurvLocationObject.SETRANGE("Survey No.", "Survey No.");
        ServSurvLocationObject.SETFILTER("Include in Contract", '<>%1', ServSurvLocationObject."Include in Contract"::" ");
        IF ServSurvLocationObject.FINDSET THEN BEGIN
          ServiceSurvey.GET("Survey No.");
          REPEAT
            ServSurvLocationObject.GetTotalAmountByCostObject(
              "Cost Object Filter", "Rate Code Filter",
              NOT ServiceSurvey."Summary Sheet for Surcharge" OR ("Summary Type" = "Summary Type"::Sales),
              NOT ServiceSurvey."Summary Sheet for Surcharge",
              "Summary Type",
              TotalLabor, TotalHours, TotalMaterial, TotalSubcontracting, TotalPlant, TotalSundry, TotalCost, TotalSurcharge);

            CASE "Cost Type Filter" OF
              "Cost Type Filter"::Labor:
                BEGIN
                  Amount += TotalLabor;
                  Hours += TotalHours;
                END;
              "Cost Type Filter"::Material:
                Amount += TotalMaterial;
              "Cost Type Filter"::Subcontracting:
                Amount += TotalSubcontracting;
              "Cost Type Filter"::Plant:
                Amount += TotalPlant;
              "Cost Type Filter"::Sundry:
                Amount += TotalSundry;
              "Cost Type Filter"::All:
                BEGIN
                  Amount += TotalCost;
                  Hours += TotalHours;
                END;
            END;
          UNTIL ServSurvLocationObject.NEXT = 0;
        END;

        IF (Type IN [Type::Surcharge, Type::Subtotal]) AND (Totaling <> '') THEN BEGIN
          IF Type = Type::Surcharge THEN
            Amount := 0;
          ServSurvSummarySheetLine.SETRANGE("Summary Kind", "Summary Kind");
          ServSurvSummarySheetLine.SETRANGE(Code, Code);
          ServSurvSummarySheetLine.SETRANGE("Survey No.", "Survey No.");
          ServSurvSummarySheetLine.SETRANGE("Summary Sheet Seq. No.", "Summary Sheet Seq. No.");
          ServSurvSummarySheetLine.SETFILTER("Row No.", Totaling);
          IF ServSurvSummarySheetLine.FINDSET THEN BEGIN
            REPEAT
              IF ServSurvSummarySheetLine.Type = ServSurvSummarySheetLine.Type::Subtotal THEN
                Amount += ServSurvSummarySheetLine.Subtotal
              ELSE
                Amount += ServSurvSummarySheetLine.Amount;
              IF ServSurvSummarySheetLine."Cost Type" = ServSurvSummarySheetLine."Cost Type"::Labor THEN
                Hours += ServSurvSummarySheetLine.Hours;
            UNTIL ServSurvSummarySheetLine.NEXT = 0;
          END;
        END;

        IF Type = Type::Subtotal THEN BEGIN
          VALIDATE(Subtotal, Amount);
          IF Quantity = 0 THEN BEGIN
            Amount := 0;
            Hours := 0;
          END;
        END ELSE
          Subtotal := 0;

        ComputeSurcharge;
        IF Type = Type::Subtotal THEN
          Subtotal += Amount;
      END;
    END;

    PROCEDURE ComputeSurcharge@1210190008();
    BEGIN
      IF (Type <> Type::Surcharge) AND (Type <> Type::Subtotal) THEN
        EXIT;
      IF "Cost Type" <> "Cost Type"::Labor  THEN BEGIN
        VALIDATE(Price, ROUND(Amount / 100.0));
        VALIDATE(Amount, ROUND(Amount * Quantity / 100.0));
      END ELSE BEGIN
        VALIDATE(Norm, ROUND(Hours / 100.0));
        VALIDATE(Amount, ROUND(Hours * Quantity / 100.0 * Rate));
        VALIDATE(Hours, ROUND(Hours * Quantity / 100.0));
      END;
    END;

    PROCEDURE IsCostComponentEditable@1100528600() : Boolean;
    BEGIN
      EXIT(TRUE);
    END;

    PROCEDURE IsKindOfSurchargeEditable@1100528601() : Boolean;
    BEGIN
      EXIT((Type = Type::Surcharge) OR (Type = Type::Subtotal));
    END;

    PROCEDURE IsQuantityEditable@1100528602() : Boolean;
    BEGIN
      EXIT(Type <> Type::Text);
    END;

    PROCEDURE IsUnitOfMeasureEditable@1100528603() : Boolean;
    BEGIN
      EXIT((Type <> Type::Text) AND (Type <> Type::Subtotal));
    END;

    PROCEDURE IsRateEditable@1100528611() : Boolean;
    BEGIN
      EXIT(("Cost Type" = "Cost Type"::Labor) AND
           (Type <> Type::Text) AND (Type <> Type::Subtotal));
    END;

    PROCEDURE IsRateCodeEditable@1100528604() : Boolean;
    BEGIN
      EXIT(("Cost Type" = "Cost Type"::Labor) AND
           (Type <> Type::Text) AND (Type <> Type::Subtotal));
    END;

    PROCEDURE IsNormEditable@1100528605() : Boolean;
    BEGIN
      EXIT(("Cost Type" = "Cost Type"::Labor) AND
           (Type <> Type::Text) AND (Type <> Type::Surcharge) AND (Type <> Type::Subtotal));
    END;

    PROCEDURE IsPriceEditable@1100528606() : Boolean;
    BEGIN
      EXIT(("Cost Type" <> "Cost Type"::Labor) AND
           (Type <> Type::Text) AND (Type <> Type::Surcharge) AND (Type <> Type::Subtotal));
    END;

    PROCEDURE IsAmountEditable@1100528607() : Boolean;
    BEGIN
      EXIT(("Cost Type" = "Cost Type"::Labor) AND (Norm = 0) AND (Quantity = 0) AND
           (Type <> Type::Text) AND (Type <> Type::Surcharge) AND (Type <> Type::Subtotal));
    END;

    PROCEDURE IsHoursEditable@1100528614() : Boolean;
    BEGIN
      EXIT(("Cost Type" = "Cost Type"::Labor) AND (Norm = 0) AND (Quantity = 0) AND
           (Type <> Type::Text) AND (Type <> Type::Surcharge) AND (Type <> Type::Subtotal));
    END;

    PROCEDURE IsAmountHoursEditable@1100528615() : Boolean;
    BEGIN
    END;

    PROCEDURE IsCostTypeFilterEditable@1100528608() : Boolean;
    BEGIN
      EXIT(Type IN [Type::Surcharge, Type::Subtotal]);
    END;

    PROCEDURE IsCostObjectFilterEditable@1100528609() : Boolean;
    BEGIN
      EXIT(Type IN [Type::Surcharge, Type::Subtotal]);
    END;

    PROCEDURE IsRateCodeFilterEditable@1100528616() : Boolean;
    BEGIN
      EXIT(Type IN [Type::Surcharge, Type::Subtotal]);
    END;

    PROCEDURE IsTotalingEditable@1100528610() : Boolean;
    BEGIN
      EXIT(Type IN [Type::Surcharge, Type::Subtotal]);
    END;

    PROCEDURE IsTimeQuantityEditable@1100528612() : Boolean;
    BEGIN
      EXIT(Type = Type::"Additional Costs");
    END;

    PROCEDURE IsUnitOfTimeEditable@1100528613() : Boolean;
    BEGIN
      EXIT(Type = Type::"Additional Costs");
    END;

    LOCAL PROCEDURE MarkSurveyToRecalculate@1100528617();
    VAR
      ServiceSurvey@1100528600 : Record 11071803;
    BEGIN
      CALCFIELDS("Summary Type");
      IF ServiceSurvey.GET("Survey No.") THEN
        IF ServiceSurvey."Summary Sheet for Surcharge" AND NOT ServiceSurvey."Recalculate for Surcharge" AND
          (("Summary Type" = "Summary Type"::Cost) AND (ServiceSurvey."Summary Sheet (Cost)" = Code) AND (ServiceSurvey."Summary Sheet Seq. No. (Cost)" = "Summary Sheet Seq. No.") OR
           ("Summary Type" = "Summary Type"::Sales) AND (ServiceSurvey."Summary Sheet (Sales)" = Code) AND (ServiceSurvey."Summary Sheet Seq. No. (Sales)" = "Summary Sheet Seq. No."))
        THEN BEGIN
          ServiceSurvey."Recalculate for Surcharge" := TRUE;
          ServiceSurvey.MODIFY;
        END;
    END;

    BEGIN
    END.
  }
}

